var __defProp2 = Object.defineProperty;
var __defNormalProp2 = (obj, key2, value) => key2 in obj ? __defProp2(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
var __publicField2 = (obj, key2, value) => __defNormalProp2(obj, typeof key2 !== "symbol" ? key2 + "" : key2, value);
let var_67921b35_566e_50d6_9a86_f8efcf415447;
let __tla = (async () => {
  var so = (d, _) => () => (_ || d((_ = {
    exports: {}
  }).exports, _), _.exports);
  var lo = so((exports, module) => {
    var _a2;
    (function() {
      const _ = document.createElement("link").relList;
      if (_ && _.supports && _.supports("modulepreload")) return;
      for (const rt of document.querySelectorAll('link[rel="modulepreload"]')) j(rt);
      new MutationObserver((rt) => {
        for (const et of rt) if (et.type === "childList") for (const st of et.addedNodes) st.tagName === "LINK" && st.rel === "modulepreload" && j(st);
      }).observe(document, {
        childList: true,
        subtree: true
      });
      function $(rt) {
        const et = {};
        return rt.integrity && (et.integrity = rt.integrity), rt.referrerPolicy && (et.referrerPolicy = rt.referrerPolicy), rt.crossOrigin === "use-credentials" ? et.credentials = "include" : rt.crossOrigin === "anonymous" ? et.credentials = "omit" : et.credentials = "same-origin", et;
      }
      function j(rt) {
        if (rt.ep) return;
        rt.ep = true;
        const et = $(rt);
        fetch(rt.href, et);
      }
    })();
    var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    function getDefaultExportFromCjs$1(d) {
      return d && d.__esModule && Object.prototype.hasOwnProperty.call(d, "default") ? d.default : d;
    }
    function getAugmentedNamespace(d) {
      if (d.__esModule) return d;
      var _ = d.default;
      if (typeof _ == "function") {
        var $ = function j() {
          return this instanceof j ? Reflect.construct(_, arguments, this.constructor) : _.apply(this, arguments);
        };
        $.prototype = _.prototype;
      } else $ = {};
      return Object.defineProperty($, "__esModule", {
        value: true
      }), Object.keys(d).forEach(function(j) {
        var rt = Object.getOwnPropertyDescriptor(d, j);
        Object.defineProperty($, j, rt.get ? rt : {
          enumerable: true,
          get: function() {
            return d[j];
          }
        });
      }), $;
    }
    var jsxRuntime$1 = {
      exports: {}
    }, reactJsxRuntime_production_min$1 = {}, react = {
      exports: {}
    }, react_production_min = {};
    var l$2 = Symbol.for("react.element"), n$2 = Symbol.for("react.portal"), p$3 = Symbol.for("react.fragment"), q$1 = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t$3 = Symbol.for("react.provider"), u$1 = Symbol.for("react.context"), v$1 = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y$1 = Symbol.for("react.lazy"), z$1 = Symbol.iterator;
    function A$1(d) {
      return d === null || typeof d != "object" ? null : (d = z$1 && d[z$1] || d["@@iterator"], typeof d == "function" ? d : null);
    }
    var B$1 = {
      isMounted: function() {
        return false;
      },
      enqueueForceUpdate: function() {
      },
      enqueueReplaceState: function() {
      },
      enqueueSetState: function() {
      }
    }, C$1 = Object.assign, D$2 = {};
    function E$2(d, _, $) {
      this.props = d, this.context = _, this.refs = D$2, this.updater = $ || B$1;
    }
    E$2.prototype.isReactComponent = {};
    E$2.prototype.setState = function(d, _) {
      if (typeof d != "object" && typeof d != "function" && d != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, d, _, "setState");
    };
    E$2.prototype.forceUpdate = function(d) {
      this.updater.enqueueForceUpdate(this, d, "forceUpdate");
    };
    function F() {
    }
    F.prototype = E$2.prototype;
    function G$1(d, _, $) {
      this.props = d, this.context = _, this.refs = D$2, this.updater = $ || B$1;
    }
    var H$1 = G$1.prototype = new F();
    H$1.constructor = G$1;
    C$1(H$1, E$2.prototype);
    H$1.isPureReactComponent = true;
    var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$2 = {
      current: null
    }, L$1 = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    function M$1(d, _, $) {
      var j, rt = {}, et = null, st = null;
      if (_ != null) for (j in _.ref !== void 0 && (st = _.ref), _.key !== void 0 && (et = "" + _.key), _) J.call(_, j) && !L$1.hasOwnProperty(j) && (rt[j] = _[j]);
      var pt = arguments.length - 2;
      if (pt === 1) rt.children = $;
      else if (1 < pt) {
        for (var Et = Array(pt), Bt = 0; Bt < pt; Bt++) Et[Bt] = arguments[Bt + 2];
        rt.children = Et;
      }
      if (d && d.defaultProps) for (j in pt = d.defaultProps, pt) rt[j] === void 0 && (rt[j] = pt[j]);
      return {
        $$typeof: l$2,
        type: d,
        key: et,
        ref: st,
        props: rt,
        _owner: K$2.current
      };
    }
    function N$1(d, _) {
      return {
        $$typeof: l$2,
        type: d.type,
        key: _,
        ref: d.ref,
        props: d.props,
        _owner: d._owner
      };
    }
    function O$1(d) {
      return typeof d == "object" && d !== null && d.$$typeof === l$2;
    }
    function escape$1(d) {
      var _ = {
        "=": "=0",
        ":": "=2"
      };
      return "$" + d.replace(/[=:]/g, function($) {
        return _[$];
      });
    }
    var P$2 = /\/+/g;
    function Q$2(d, _) {
      return typeof d == "object" && d !== null && d.key != null ? escape$1("" + d.key) : _.toString(36);
    }
    function R$2(d, _, $, j, rt) {
      var et = typeof d;
      (et === "undefined" || et === "boolean") && (d = null);
      var st = false;
      if (d === null) st = true;
      else switch (et) {
        case "string":
        case "number":
          st = true;
          break;
        case "object":
          switch (d.$$typeof) {
            case l$2:
            case n$2:
              st = true;
          }
      }
      if (st) return st = d, rt = rt(st), d = j === "" ? "." + Q$2(st, 0) : j, I$1(rt) ? ($ = "", d != null && ($ = d.replace(P$2, "$&/") + "/"), R$2(rt, _, $, "", function(Bt) {
        return Bt;
      })) : rt != null && (O$1(rt) && (rt = N$1(rt, $ + (!rt.key || st && st.key === rt.key ? "" : ("" + rt.key).replace(P$2, "$&/") + "/") + d)), _.push(rt)), 1;
      if (st = 0, j = j === "" ? "." : j + ":", I$1(d)) for (var pt = 0; pt < d.length; pt++) {
        et = d[pt];
        var Et = j + Q$2(et, pt);
        st += R$2(et, _, $, Et, rt);
      }
      else if (Et = A$1(d), typeof Et == "function") for (d = Et.call(d), pt = 0; !(et = d.next()).done; ) et = et.value, Et = j + Q$2(et, pt++), st += R$2(et, _, $, Et, rt);
      else if (et === "object") throw _ = String(d), Error("Objects are not valid as a React child (found: " + (_ === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : _) + "). If you meant to render a collection of children, use an array instead.");
      return st;
    }
    function S$2(d, _, $) {
      if (d == null) return d;
      var j = [], rt = 0;
      return R$2(d, j, "", "", function(et) {
        return _.call($, et, rt++);
      }), j;
    }
    function T$1(d) {
      if (d._status === -1) {
        var _ = d._result;
        _ = _(), _.then(function($) {
          (d._status === 0 || d._status === -1) && (d._status = 1, d._result = $);
        }, function($) {
          (d._status === 0 || d._status === -1) && (d._status = 2, d._result = $);
        }), d._status === -1 && (d._status = 0, d._result = _);
      }
      if (d._status === 1) return d._result.default;
      throw d._result;
    }
    var U$1 = {
      current: null
    }, V$2 = {
      transition: null
    }, W$1 = {
      ReactCurrentDispatcher: U$1,
      ReactCurrentBatchConfig: V$2,
      ReactCurrentOwner: K$2
    };
    function X$2() {
      throw Error("act(...) is not supported in production builds of React.");
    }
    react_production_min.Children = {
      map: S$2,
      forEach: function(d, _, $) {
        S$2(d, function() {
          _.apply(this, arguments);
        }, $);
      },
      count: function(d) {
        var _ = 0;
        return S$2(d, function() {
          _++;
        }), _;
      },
      toArray: function(d) {
        return S$2(d, function(_) {
          return _;
        }) || [];
      },
      only: function(d) {
        if (!O$1(d)) throw Error("React.Children.only expected to receive a single React element child.");
        return d;
      }
    };
    react_production_min.Component = E$2;
    react_production_min.Fragment = p$3;
    react_production_min.Profiler = r;
    react_production_min.PureComponent = G$1;
    react_production_min.StrictMode = q$1;
    react_production_min.Suspense = w;
    react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
    react_production_min.act = X$2;
    react_production_min.cloneElement = function(d, _, $) {
      if (d == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + d + ".");
      var j = C$1({}, d.props), rt = d.key, et = d.ref, st = d._owner;
      if (_ != null) {
        if (_.ref !== void 0 && (et = _.ref, st = K$2.current), _.key !== void 0 && (rt = "" + _.key), d.type && d.type.defaultProps) var pt = d.type.defaultProps;
        for (Et in _) J.call(_, Et) && !L$1.hasOwnProperty(Et) && (j[Et] = _[Et] === void 0 && pt !== void 0 ? pt[Et] : _[Et]);
      }
      var Et = arguments.length - 2;
      if (Et === 1) j.children = $;
      else if (1 < Et) {
        pt = Array(Et);
        for (var Bt = 0; Bt < Et; Bt++) pt[Bt] = arguments[Bt + 2];
        j.children = pt;
      }
      return {
        $$typeof: l$2,
        type: d.type,
        key: rt,
        ref: et,
        props: j,
        _owner: st
      };
    };
    react_production_min.createContext = function(d) {
      return d = {
        $$typeof: u$1,
        _currentValue: d,
        _currentValue2: d,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null
      }, d.Provider = {
        $$typeof: t$3,
        _context: d
      }, d.Consumer = d;
    };
    react_production_min.createElement = M$1;
    react_production_min.createFactory = function(d) {
      var _ = M$1.bind(null, d);
      return _.type = d, _;
    };
    react_production_min.createRef = function() {
      return {
        current: null
      };
    };
    react_production_min.forwardRef = function(d) {
      return {
        $$typeof: v$1,
        render: d
      };
    };
    react_production_min.isValidElement = O$1;
    react_production_min.lazy = function(d) {
      return {
        $$typeof: y$1,
        _payload: {
          _status: -1,
          _result: d
        },
        _init: T$1
      };
    };
    react_production_min.memo = function(d, _) {
      return {
        $$typeof: x,
        type: d,
        compare: _ === void 0 ? null : _
      };
    };
    react_production_min.startTransition = function(d) {
      var _ = V$2.transition;
      V$2.transition = {};
      try {
        d();
      } finally {
        V$2.transition = _;
      }
    };
    react_production_min.unstable_act = X$2;
    react_production_min.useCallback = function(d, _) {
      return U$1.current.useCallback(d, _);
    };
    react_production_min.useContext = function(d) {
      return U$1.current.useContext(d);
    };
    react_production_min.useDebugValue = function() {
    };
    react_production_min.useDeferredValue = function(d) {
      return U$1.current.useDeferredValue(d);
    };
    react_production_min.useEffect = function(d, _) {
      return U$1.current.useEffect(d, _);
    };
    react_production_min.useId = function() {
      return U$1.current.useId();
    };
    react_production_min.useImperativeHandle = function(d, _, $) {
      return U$1.current.useImperativeHandle(d, _, $);
    };
    react_production_min.useInsertionEffect = function(d, _) {
      return U$1.current.useInsertionEffect(d, _);
    };
    react_production_min.useLayoutEffect = function(d, _) {
      return U$1.current.useLayoutEffect(d, _);
    };
    react_production_min.useMemo = function(d, _) {
      return U$1.current.useMemo(d, _);
    };
    react_production_min.useReducer = function(d, _, $) {
      return U$1.current.useReducer(d, _, $);
    };
    react_production_min.useRef = function(d) {
      return U$1.current.useRef(d);
    };
    react_production_min.useState = function(d) {
      return U$1.current.useState(d);
    };
    react_production_min.useSyncExternalStore = function(d, _, $) {
      return U$1.current.useSyncExternalStore(d, _, $);
    };
    react_production_min.useTransition = function() {
      return U$1.current.useTransition();
    };
    react_production_min.version = "18.3.1";
    react.exports = react_production_min;
    var reactExports = react.exports;
    const React = getDefaultExportFromCjs$1(reactExports);
    var f$1 = reactExports, k = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$1 = Object.prototype.hasOwnProperty, n$1 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$2 = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    function q(d, _, $) {
      var j, rt = {}, et = null, st = null;
      $ !== void 0 && (et = "" + $), _.key !== void 0 && (et = "" + _.key), _.ref !== void 0 && (st = _.ref);
      for (j in _) m$1.call(_, j) && !p$2.hasOwnProperty(j) && (rt[j] = _[j]);
      if (d && d.defaultProps) for (j in _ = d.defaultProps, _) rt[j] === void 0 && (rt[j] = _[j]);
      return {
        $$typeof: k,
        type: d,
        key: et,
        ref: st,
        props: rt,
        _owner: n$1.current
      };
    }
    reactJsxRuntime_production_min$1.Fragment = l$1;
    reactJsxRuntime_production_min$1.jsx = q;
    reactJsxRuntime_production_min$1.jsxs = q;
    jsxRuntime$1.exports = reactJsxRuntime_production_min$1;
    var jsxRuntimeExports = jsxRuntime$1.exports, client = {}, reactDom = {
      exports: {}
    }, reactDom_production_min = {}, scheduler = {
      exports: {}
    }, scheduler_production_min = {};
    (function(d) {
      function _(At, ut) {
        var ot = At.length;
        At.push(ut);
        e: for (; 0 < ot; ) {
          var Ct = ot - 1 >>> 1, Rt = At[Ct];
          if (0 < rt(Rt, ut)) At[Ct] = ut, At[ot] = Rt, ot = Ct;
          else break e;
        }
      }
      function $(At) {
        return At.length === 0 ? null : At[0];
      }
      function j(At) {
        if (At.length === 0) return null;
        var ut = At[0], ot = At.pop();
        if (ot !== ut) {
          At[0] = ot;
          e: for (var Ct = 0, Rt = At.length, Nt = Rt >>> 1; Ct < Nt; ) {
            var Wt = 2 * (Ct + 1) - 1, Xt = At[Wt], rr = Wt + 1, Gt = At[rr];
            if (0 > rt(Xt, ot)) rr < Rt && 0 > rt(Gt, Xt) ? (At[Ct] = Gt, At[rr] = ot, Ct = rr) : (At[Ct] = Xt, At[Wt] = ot, Ct = Wt);
            else if (rr < Rt && 0 > rt(Gt, ot)) At[Ct] = Gt, At[rr] = ot, Ct = rr;
            else break e;
          }
        }
        return ut;
      }
      function rt(At, ut) {
        var ot = At.sortIndex - ut.sortIndex;
        return ot !== 0 ? ot : At.id - ut.id;
      }
      if (typeof performance == "object" && typeof performance.now == "function") {
        var et = performance;
        d.unstable_now = function() {
          return et.now();
        };
      } else {
        var st = Date, pt = st.now();
        d.unstable_now = function() {
          return st.now() - pt;
        };
      }
      var Et = [], Bt = [], St = 1, $t = null, kt = 3, Tt = false, Pt = false, It = false, jt = typeof setTimeout == "function" ? setTimeout : null, Dt = typeof clearTimeout == "function" ? clearTimeout : null, Ot = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function Ft(At) {
        for (var ut = $(Bt); ut !== null; ) {
          if (ut.callback === null) j(Bt);
          else if (ut.startTime <= At) j(Bt), ut.sortIndex = ut.expirationTime, _(Et, ut);
          else break;
          ut = $(Bt);
        }
      }
      function Lt(At) {
        if (It = false, Ft(At), !Pt) if ($(Et) !== null) Pt = true, ct(Zt);
        else {
          var ut = $(Bt);
          ut !== null && Mt(Lt, ut.startTime - At);
        }
      }
      function Zt(At, ut) {
        Pt = false, It && (It = false, Dt(sr), sr = -1), Tt = true;
        var ot = kt;
        try {
          for (Ft(ut), $t = $(Et); $t !== null && (!($t.expirationTime > ut) || At && !xt()); ) {
            var Ct = $t.callback;
            if (typeof Ct == "function") {
              $t.callback = null, kt = $t.priorityLevel;
              var Rt = Ct($t.expirationTime <= ut);
              ut = d.unstable_now(), typeof Rt == "function" ? $t.callback = Rt : $t === $(Et) && j(Et), Ft(ut);
            } else j(Et);
            $t = $(Et);
          }
          if ($t !== null) var Nt = true;
          else {
            var Wt = $(Bt);
            Wt !== null && Mt(Lt, Wt.startTime - ut), Nt = false;
          }
          return Nt;
        } finally {
          $t = null, kt = ot, Tt = false;
        }
      }
      var Kt = false, ar = null, sr = -1, er = 5, Ut = -1;
      function xt() {
        return !(d.unstable_now() - Ut < er);
      }
      function tt() {
        if (ar !== null) {
          var At = d.unstable_now();
          Ut = At;
          var ut = true;
          try {
            ut = ar(true, At);
          } finally {
            ut ? nt() : (Kt = false, ar = null);
          }
        } else Kt = false;
      }
      var nt;
      if (typeof Ot == "function") nt = function() {
        Ot(tt);
      };
      else if (typeof MessageChannel < "u") {
        var it = new MessageChannel(), at = it.port2;
        it.port1.onmessage = tt, nt = function() {
          at.postMessage(null);
        };
      } else nt = function() {
        jt(tt, 0);
      };
      function ct(At) {
        ar = At, Kt || (Kt = true, nt());
      }
      function Mt(At, ut) {
        sr = jt(function() {
          At(d.unstable_now());
        }, ut);
      }
      d.unstable_IdlePriority = 5, d.unstable_ImmediatePriority = 1, d.unstable_LowPriority = 4, d.unstable_NormalPriority = 3, d.unstable_Profiling = null, d.unstable_UserBlockingPriority = 2, d.unstable_cancelCallback = function(At) {
        At.callback = null;
      }, d.unstable_continueExecution = function() {
        Pt || Tt || (Pt = true, ct(Zt));
      }, d.unstable_forceFrameRate = function(At) {
        0 > At || 125 < At ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : er = 0 < At ? Math.floor(1e3 / At) : 5;
      }, d.unstable_getCurrentPriorityLevel = function() {
        return kt;
      }, d.unstable_getFirstCallbackNode = function() {
        return $(Et);
      }, d.unstable_next = function(At) {
        switch (kt) {
          case 1:
          case 2:
          case 3:
            var ut = 3;
            break;
          default:
            ut = kt;
        }
        var ot = kt;
        kt = ut;
        try {
          return At();
        } finally {
          kt = ot;
        }
      }, d.unstable_pauseExecution = function() {
      }, d.unstable_requestPaint = function() {
      }, d.unstable_runWithPriority = function(At, ut) {
        switch (At) {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            break;
          default:
            At = 3;
        }
        var ot = kt;
        kt = At;
        try {
          return ut();
        } finally {
          kt = ot;
        }
      }, d.unstable_scheduleCallback = function(At, ut, ot) {
        var Ct = d.unstable_now();
        switch (typeof ot == "object" && ot !== null ? (ot = ot.delay, ot = typeof ot == "number" && 0 < ot ? Ct + ot : Ct) : ot = Ct, At) {
          case 1:
            var Rt = -1;
            break;
          case 2:
            Rt = 250;
            break;
          case 5:
            Rt = 1073741823;
            break;
          case 4:
            Rt = 1e4;
            break;
          default:
            Rt = 5e3;
        }
        return Rt = ot + Rt, At = {
          id: St++,
          callback: ut,
          priorityLevel: At,
          startTime: ot,
          expirationTime: Rt,
          sortIndex: -1
        }, ot > Ct ? (At.sortIndex = ot, _(Bt, At), $(Et) === null && At === $(Bt) && (It ? (Dt(sr), sr = -1) : It = true, Mt(Lt, ot - Ct))) : (At.sortIndex = Rt, _(Et, At), Pt || Tt || (Pt = true, ct(Zt))), At;
      }, d.unstable_shouldYield = xt, d.unstable_wrapCallback = function(At) {
        var ut = kt;
        return function() {
          var ot = kt;
          kt = ut;
          try {
            return At.apply(this, arguments);
          } finally {
            kt = ot;
          }
        };
      };
    })(scheduler_production_min);
    scheduler.exports = scheduler_production_min;
    var schedulerExports = scheduler.exports;
    var aa = reactExports, ca = schedulerExports;
    function p$1(d) {
      for (var _ = "https://reactjs.org/docs/error-decoder.html?invariant=" + d, $ = 1; $ < arguments.length; $++) _ += "&args[]=" + encodeURIComponent(arguments[$]);
      return "Minified React error #" + d + "; visit " + _ + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var da = /* @__PURE__ */ new Set(), ea = {};
    function fa(d, _) {
      ha(d, _), ha(d + "Capture", _);
    }
    function ha(d, _) {
      for (ea[d] = _, d = 0; d < _.length; d++) da.add(_[d]);
    }
    var ia = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
    function oa(d) {
      return ja.call(ma, d) ? true : ja.call(la, d) ? false : ka.test(d) ? ma[d] = true : (la[d] = true, false);
    }
    function pa(d, _, $, j) {
      if ($ !== null && $.type === 0) return false;
      switch (typeof _) {
        case "function":
        case "symbol":
          return true;
        case "boolean":
          return j ? false : $ !== null ? !$.acceptsBooleans : (d = d.toLowerCase().slice(0, 5), d !== "data-" && d !== "aria-");
        default:
          return false;
      }
    }
    function qa(d, _, $, j) {
      if (_ === null || typeof _ > "u" || pa(d, _, $, j)) return true;
      if (j) return false;
      if ($ !== null) switch ($.type) {
        case 3:
          return !_;
        case 4:
          return _ === false;
        case 5:
          return isNaN(_);
        case 6:
          return isNaN(_) || 1 > _;
      }
      return false;
    }
    function v(d, _, $, j, rt, et, st) {
      this.acceptsBooleans = _ === 2 || _ === 3 || _ === 4, this.attributeName = j, this.attributeNamespace = rt, this.mustUseProperty = $, this.propertyName = d, this.type = _, this.sanitizeURL = et, this.removeEmptyString = st;
    }
    var z = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(d) {
      z[d] = new v(d, 0, false, d, null, false, false);
    });
    [
      [
        "acceptCharset",
        "accept-charset"
      ],
      [
        "className",
        "class"
      ],
      [
        "htmlFor",
        "for"
      ],
      [
        "httpEquiv",
        "http-equiv"
      ]
    ].forEach(function(d) {
      var _ = d[0];
      z[_] = new v(_, 1, false, d[1], null, false, false);
    });
    [
      "contentEditable",
      "draggable",
      "spellCheck",
      "value"
    ].forEach(function(d) {
      z[d] = new v(d, 2, false, d.toLowerCase(), null, false, false);
    });
    [
      "autoReverse",
      "externalResourcesRequired",
      "focusable",
      "preserveAlpha"
    ].forEach(function(d) {
      z[d] = new v(d, 2, false, d, null, false, false);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(d) {
      z[d] = new v(d, 3, false, d.toLowerCase(), null, false, false);
    });
    [
      "checked",
      "multiple",
      "muted",
      "selected"
    ].forEach(function(d) {
      z[d] = new v(d, 3, true, d, null, false, false);
    });
    [
      "capture",
      "download"
    ].forEach(function(d) {
      z[d] = new v(d, 4, false, d, null, false, false);
    });
    [
      "cols",
      "rows",
      "size",
      "span"
    ].forEach(function(d) {
      z[d] = new v(d, 6, false, d, null, false, false);
    });
    [
      "rowSpan",
      "start"
    ].forEach(function(d) {
      z[d] = new v(d, 5, false, d.toLowerCase(), null, false, false);
    });
    var ra = /[\-:]([a-z])/g;
    function sa(d) {
      return d[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(d) {
      var _ = d.replace(ra, sa);
      z[_] = new v(_, 1, false, d, null, false, false);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(d) {
      var _ = d.replace(ra, sa);
      z[_] = new v(_, 1, false, d, "http://www.w3.org/1999/xlink", false, false);
    });
    [
      "xml:base",
      "xml:lang",
      "xml:space"
    ].forEach(function(d) {
      var _ = d.replace(ra, sa);
      z[_] = new v(_, 1, false, d, "http://www.w3.org/XML/1998/namespace", false, false);
    });
    [
      "tabIndex",
      "crossOrigin"
    ].forEach(function(d) {
      z[d] = new v(d, 1, false, d.toLowerCase(), null, false, false);
    });
    z.xlinkHref = new v("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
    [
      "src",
      "href",
      "action",
      "formAction"
    ].forEach(function(d) {
      z[d] = new v(d, 1, false, d.toLowerCase(), null, true, true);
    });
    function ta(d, _, $, j) {
      var rt = z.hasOwnProperty(_) ? z[_] : null;
      (rt !== null ? rt.type !== 0 : j || !(2 < _.length) || _[0] !== "o" && _[0] !== "O" || _[1] !== "n" && _[1] !== "N") && (qa(_, $, rt, j) && ($ = null), j || rt === null ? oa(_) && ($ === null ? d.removeAttribute(_) : d.setAttribute(_, "" + $)) : rt.mustUseProperty ? d[rt.propertyName] = $ === null ? rt.type === 3 ? false : "" : $ : (_ = rt.attributeName, j = rt.attributeNamespace, $ === null ? d.removeAttribute(_) : (rt = rt.type, $ = rt === 3 || rt === 4 && $ === true ? "" : "" + $, j ? d.setAttributeNS(j, _, $) : d.setAttribute(_, $))));
    }
    var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy"), Ia = Symbol.for("react.offscreen"), Ja = Symbol.iterator;
    function Ka(d) {
      return d === null || typeof d != "object" ? null : (d = Ja && d[Ja] || d["@@iterator"], typeof d == "function" ? d : null);
    }
    var A = Object.assign, La;
    function Ma(d) {
      if (La === void 0) try {
        throw Error();
      } catch ($) {
        var _ = $.stack.trim().match(/\n( *(at )?)/);
        La = _ && _[1] || "";
      }
      return `
` + La + d;
    }
    var Na = false;
    function Oa(d, _) {
      if (!d || Na) return "";
      Na = true;
      var $ = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        if (_) if (_ = function() {
          throw Error();
        }, Object.defineProperty(_.prototype, "props", {
          set: function() {
            throw Error();
          }
        }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(_, []);
          } catch (Bt) {
            var j = Bt;
          }
          Reflect.construct(d, [], _);
        } else {
          try {
            _.call();
          } catch (Bt) {
            j = Bt;
          }
          d.call(_.prototype);
        }
        else {
          try {
            throw Error();
          } catch (Bt) {
            j = Bt;
          }
          d();
        }
      } catch (Bt) {
        if (Bt && j && typeof Bt.stack == "string") {
          for (var rt = Bt.stack.split(`
`), et = j.stack.split(`
`), st = rt.length - 1, pt = et.length - 1; 1 <= st && 0 <= pt && rt[st] !== et[pt]; ) pt--;
          for (; 1 <= st && 0 <= pt; st--, pt--) if (rt[st] !== et[pt]) {
            if (st !== 1 || pt !== 1) do
              if (st--, pt--, 0 > pt || rt[st] !== et[pt]) {
                var Et = `
` + rt[st].replace(" at new ", " at ");
                return d.displayName && Et.includes("<anonymous>") && (Et = Et.replace("<anonymous>", d.displayName)), Et;
              }
            while (1 <= st && 0 <= pt);
            break;
          }
        }
      } finally {
        Na = false, Error.prepareStackTrace = $;
      }
      return (d = d ? d.displayName || d.name : "") ? Ma(d) : "";
    }
    function Pa(d) {
      switch (d.tag) {
        case 5:
          return Ma(d.type);
        case 16:
          return Ma("Lazy");
        case 13:
          return Ma("Suspense");
        case 19:
          return Ma("SuspenseList");
        case 0:
        case 2:
        case 15:
          return d = Oa(d.type, false), d;
        case 11:
          return d = Oa(d.type.render, false), d;
        case 1:
          return d = Oa(d.type, true), d;
        default:
          return "";
      }
    }
    function Qa(d) {
      if (d == null) return null;
      if (typeof d == "function") return d.displayName || d.name || null;
      if (typeof d == "string") return d;
      switch (d) {
        case ya:
          return "Fragment";
        case wa:
          return "Portal";
        case Aa:
          return "Profiler";
        case za:
          return "StrictMode";
        case Ea:
          return "Suspense";
        case Fa:
          return "SuspenseList";
      }
      if (typeof d == "object") switch (d.$$typeof) {
        case Ca:
          return (d.displayName || "Context") + ".Consumer";
        case Ba:
          return (d._context.displayName || "Context") + ".Provider";
        case Da:
          var _ = d.render;
          return d = d.displayName, d || (d = _.displayName || _.name || "", d = d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef"), d;
        case Ga:
          return _ = d.displayName || null, _ !== null ? _ : Qa(d.type) || "Memo";
        case Ha:
          _ = d._payload, d = d._init;
          try {
            return Qa(d(_));
          } catch {
          }
      }
      return null;
    }
    function Ra(d) {
      var _ = d.type;
      switch (d.tag) {
        case 24:
          return "Cache";
        case 9:
          return (_.displayName || "Context") + ".Consumer";
        case 10:
          return (_._context.displayName || "Context") + ".Provider";
        case 18:
          return "DehydratedFragment";
        case 11:
          return d = _.render, d = d.displayName || d.name || "", _.displayName || (d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef");
        case 7:
          return "Fragment";
        case 5:
          return _;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return Qa(_);
        case 8:
          return _ === za ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
          if (typeof _ == "function") return _.displayName || _.name || null;
          if (typeof _ == "string") return _;
      }
      return null;
    }
    function Sa(d) {
      switch (typeof d) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return d;
        case "object":
          return d;
        default:
          return "";
      }
    }
    function Ta(d) {
      var _ = d.type;
      return (d = d.nodeName) && d.toLowerCase() === "input" && (_ === "checkbox" || _ === "radio");
    }
    function Ua(d) {
      var _ = Ta(d) ? "checked" : "value", $ = Object.getOwnPropertyDescriptor(d.constructor.prototype, _), j = "" + d[_];
      if (!d.hasOwnProperty(_) && typeof $ < "u" && typeof $.get == "function" && typeof $.set == "function") {
        var rt = $.get, et = $.set;
        return Object.defineProperty(d, _, {
          configurable: true,
          get: function() {
            return rt.call(this);
          },
          set: function(st) {
            j = "" + st, et.call(this, st);
          }
        }), Object.defineProperty(d, _, {
          enumerable: $.enumerable
        }), {
          getValue: function() {
            return j;
          },
          setValue: function(st) {
            j = "" + st;
          },
          stopTracking: function() {
            d._valueTracker = null, delete d[_];
          }
        };
      }
    }
    function Va(d) {
      d._valueTracker || (d._valueTracker = Ua(d));
    }
    function Wa(d) {
      if (!d) return false;
      var _ = d._valueTracker;
      if (!_) return true;
      var $ = _.getValue(), j = "";
      return d && (j = Ta(d) ? d.checked ? "true" : "false" : d.value), d = j, d !== $ ? (_.setValue(d), true) : false;
    }
    function Xa(d) {
      if (d = d || (typeof document < "u" ? document : void 0), typeof d > "u") return null;
      try {
        return d.activeElement || d.body;
      } catch {
        return d.body;
      }
    }
    function Ya(d, _) {
      var $ = _.checked;
      return A({}, _, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: $ ?? d._wrapperState.initialChecked
      });
    }
    function Za(d, _) {
      var $ = _.defaultValue == null ? "" : _.defaultValue, j = _.checked != null ? _.checked : _.defaultChecked;
      $ = Sa(_.value != null ? _.value : $), d._wrapperState = {
        initialChecked: j,
        initialValue: $,
        controlled: _.type === "checkbox" || _.type === "radio" ? _.checked != null : _.value != null
      };
    }
    function ab(d, _) {
      _ = _.checked, _ != null && ta(d, "checked", _, false);
    }
    function bb(d, _) {
      ab(d, _);
      var $ = Sa(_.value), j = _.type;
      if ($ != null) j === "number" ? ($ === 0 && d.value === "" || d.value != $) && (d.value = "" + $) : d.value !== "" + $ && (d.value = "" + $);
      else if (j === "submit" || j === "reset") {
        d.removeAttribute("value");
        return;
      }
      _.hasOwnProperty("value") ? cb(d, _.type, $) : _.hasOwnProperty("defaultValue") && cb(d, _.type, Sa(_.defaultValue)), _.checked == null && _.defaultChecked != null && (d.defaultChecked = !!_.defaultChecked);
    }
    function db(d, _, $) {
      if (_.hasOwnProperty("value") || _.hasOwnProperty("defaultValue")) {
        var j = _.type;
        if (!(j !== "submit" && j !== "reset" || _.value !== void 0 && _.value !== null)) return;
        _ = "" + d._wrapperState.initialValue, $ || _ === d.value || (d.value = _), d.defaultValue = _;
      }
      $ = d.name, $ !== "" && (d.name = ""), d.defaultChecked = !!d._wrapperState.initialChecked, $ !== "" && (d.name = $);
    }
    function cb(d, _, $) {
      (_ !== "number" || Xa(d.ownerDocument) !== d) && ($ == null ? d.defaultValue = "" + d._wrapperState.initialValue : d.defaultValue !== "" + $ && (d.defaultValue = "" + $));
    }
    var eb = Array.isArray;
    function fb(d, _, $, j) {
      if (d = d.options, _) {
        _ = {};
        for (var rt = 0; rt < $.length; rt++) _["$" + $[rt]] = true;
        for ($ = 0; $ < d.length; $++) rt = _.hasOwnProperty("$" + d[$].value), d[$].selected !== rt && (d[$].selected = rt), rt && j && (d[$].defaultSelected = true);
      } else {
        for ($ = "" + Sa($), _ = null, rt = 0; rt < d.length; rt++) {
          if (d[rt].value === $) {
            d[rt].selected = true, j && (d[rt].defaultSelected = true);
            return;
          }
          _ !== null || d[rt].disabled || (_ = d[rt]);
        }
        _ !== null && (_.selected = true);
      }
    }
    function gb(d, _) {
      if (_.dangerouslySetInnerHTML != null) throw Error(p$1(91));
      return A({}, _, {
        value: void 0,
        defaultValue: void 0,
        children: "" + d._wrapperState.initialValue
      });
    }
    function hb(d, _) {
      var $ = _.value;
      if ($ == null) {
        if ($ = _.children, _ = _.defaultValue, $ != null) {
          if (_ != null) throw Error(p$1(92));
          if (eb($)) {
            if (1 < $.length) throw Error(p$1(93));
            $ = $[0];
          }
          _ = $;
        }
        _ == null && (_ = ""), $ = _;
      }
      d._wrapperState = {
        initialValue: Sa($)
      };
    }
    function ib(d, _) {
      var $ = Sa(_.value), j = Sa(_.defaultValue);
      $ != null && ($ = "" + $, $ !== d.value && (d.value = $), _.defaultValue == null && d.defaultValue !== $ && (d.defaultValue = $)), j != null && (d.defaultValue = "" + j);
    }
    function jb(d) {
      var _ = d.textContent;
      _ === d._wrapperState.initialValue && _ !== "" && _ !== null && (d.value = _);
    }
    function kb(d) {
      switch (d) {
        case "svg":
          return "http://www.w3.org/2000/svg";
        case "math":
          return "http://www.w3.org/1998/Math/MathML";
        default:
          return "http://www.w3.org/1999/xhtml";
      }
    }
    function lb(d, _) {
      return d == null || d === "http://www.w3.org/1999/xhtml" ? kb(_) : d === "http://www.w3.org/2000/svg" && _ === "foreignObject" ? "http://www.w3.org/1999/xhtml" : d;
    }
    var mb, nb = function(d) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(_, $, j, rt) {
        MSApp.execUnsafeLocalFunction(function() {
          return d(_, $, j, rt);
        });
      } : d;
    }(function(d, _) {
      if (d.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in d) d.innerHTML = _;
      else {
        for (mb = mb || document.createElement("div"), mb.innerHTML = "<svg>" + _.valueOf().toString() + "</svg>", _ = mb.firstChild; d.firstChild; ) d.removeChild(d.firstChild);
        for (; _.firstChild; ) d.appendChild(_.firstChild);
      }
    });
    function ob(d, _) {
      if (_) {
        var $ = d.firstChild;
        if ($ && $ === d.lastChild && $.nodeType === 3) {
          $.nodeValue = _;
          return;
        }
      }
      d.textContent = _;
    }
    var pb = {
      animationIterationCount: true,
      aspectRatio: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    }, qb = [
      "Webkit",
      "ms",
      "Moz",
      "O"
    ];
    Object.keys(pb).forEach(function(d) {
      qb.forEach(function(_) {
        _ = _ + d.charAt(0).toUpperCase() + d.substring(1), pb[_] = pb[d];
      });
    });
    function rb(d, _, $) {
      return _ == null || typeof _ == "boolean" || _ === "" ? "" : $ || typeof _ != "number" || _ === 0 || pb.hasOwnProperty(d) && pb[d] ? ("" + _).trim() : _ + "px";
    }
    function sb(d, _) {
      d = d.style;
      for (var $ in _) if (_.hasOwnProperty($)) {
        var j = $.indexOf("--") === 0, rt = rb($, _[$], j);
        $ === "float" && ($ = "cssFloat"), j ? d.setProperty($, rt) : d[$] = rt;
      }
    }
    var tb = A({
      menuitem: true
    }, {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true
    });
    function ub(d, _) {
      if (_) {
        if (tb[d] && (_.children != null || _.dangerouslySetInnerHTML != null)) throw Error(p$1(137, d));
        if (_.dangerouslySetInnerHTML != null) {
          if (_.children != null) throw Error(p$1(60));
          if (typeof _.dangerouslySetInnerHTML != "object" || !("__html" in _.dangerouslySetInnerHTML)) throw Error(p$1(61));
        }
        if (_.style != null && typeof _.style != "object") throw Error(p$1(62));
      }
    }
    function vb(d, _) {
      if (d.indexOf("-") === -1) return typeof _.is == "string";
      switch (d) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return false;
        default:
          return true;
      }
    }
    var wb = null;
    function xb(d) {
      return d = d.target || d.srcElement || window, d.correspondingUseElement && (d = d.correspondingUseElement), d.nodeType === 3 ? d.parentNode : d;
    }
    var yb = null, zb = null, Ab = null;
    function Bb(d) {
      if (d = Cb(d)) {
        if (typeof yb != "function") throw Error(p$1(280));
        var _ = d.stateNode;
        _ && (_ = Db(_), yb(d.stateNode, d.type, _));
      }
    }
    function Eb(d) {
      zb ? Ab ? Ab.push(d) : Ab = [
        d
      ] : zb = d;
    }
    function Fb() {
      if (zb) {
        var d = zb, _ = Ab;
        if (Ab = zb = null, Bb(d), _) for (d = 0; d < _.length; d++) Bb(_[d]);
      }
    }
    function Gb(d, _) {
      return d(_);
    }
    function Hb() {
    }
    var Ib = false;
    function Jb(d, _, $) {
      if (Ib) return d(_, $);
      Ib = true;
      try {
        return Gb(d, _, $);
      } finally {
        Ib = false, (zb !== null || Ab !== null) && (Hb(), Fb());
      }
    }
    function Kb(d, _) {
      var $ = d.stateNode;
      if ($ === null) return null;
      var j = Db($);
      if (j === null) return null;
      $ = j[_];
      e: switch (_) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (j = !j.disabled) || (d = d.type, j = !(d === "button" || d === "input" || d === "select" || d === "textarea")), d = !j;
          break e;
        default:
          d = false;
      }
      if (d) return null;
      if ($ && typeof $ != "function") throw Error(p$1(231, _, typeof $));
      return $;
    }
    var Lb = false;
    if (ia) try {
      var Mb = {};
      Object.defineProperty(Mb, "passive", {
        get: function() {
          Lb = true;
        }
      }), window.addEventListener("test", Mb, Mb), window.removeEventListener("test", Mb, Mb);
    } catch {
      Lb = false;
    }
    function Nb(d, _, $, j, rt, et, st, pt, Et) {
      var Bt = Array.prototype.slice.call(arguments, 3);
      try {
        _.apply($, Bt);
      } catch (St) {
        this.onError(St);
      }
    }
    var Ob = false, Pb = null, Qb = false, Rb = null, Sb = {
      onError: function(d) {
        Ob = true, Pb = d;
      }
    };
    function Tb(d, _, $, j, rt, et, st, pt, Et) {
      Ob = false, Pb = null, Nb.apply(Sb, arguments);
    }
    function Ub(d, _, $, j, rt, et, st, pt, Et) {
      if (Tb.apply(this, arguments), Ob) {
        if (Ob) {
          var Bt = Pb;
          Ob = false, Pb = null;
        } else throw Error(p$1(198));
        Qb || (Qb = true, Rb = Bt);
      }
    }
    function Vb(d) {
      var _ = d, $ = d;
      if (d.alternate) for (; _.return; ) _ = _.return;
      else {
        d = _;
        do
          _ = d, _.flags & 4098 && ($ = _.return), d = _.return;
        while (d);
      }
      return _.tag === 3 ? $ : null;
    }
    function Wb(d) {
      if (d.tag === 13) {
        var _ = d.memoizedState;
        if (_ === null && (d = d.alternate, d !== null && (_ = d.memoizedState)), _ !== null) return _.dehydrated;
      }
      return null;
    }
    function Xb(d) {
      if (Vb(d) !== d) throw Error(p$1(188));
    }
    function Yb(d) {
      var _ = d.alternate;
      if (!_) {
        if (_ = Vb(d), _ === null) throw Error(p$1(188));
        return _ !== d ? null : d;
      }
      for (var $ = d, j = _; ; ) {
        var rt = $.return;
        if (rt === null) break;
        var et = rt.alternate;
        if (et === null) {
          if (j = rt.return, j !== null) {
            $ = j;
            continue;
          }
          break;
        }
        if (rt.child === et.child) {
          for (et = rt.child; et; ) {
            if (et === $) return Xb(rt), d;
            if (et === j) return Xb(rt), _;
            et = et.sibling;
          }
          throw Error(p$1(188));
        }
        if ($.return !== j.return) $ = rt, j = et;
        else {
          for (var st = false, pt = rt.child; pt; ) {
            if (pt === $) {
              st = true, $ = rt, j = et;
              break;
            }
            if (pt === j) {
              st = true, j = rt, $ = et;
              break;
            }
            pt = pt.sibling;
          }
          if (!st) {
            for (pt = et.child; pt; ) {
              if (pt === $) {
                st = true, $ = et, j = rt;
                break;
              }
              if (pt === j) {
                st = true, j = et, $ = rt;
                break;
              }
              pt = pt.sibling;
            }
            if (!st) throw Error(p$1(189));
          }
        }
        if ($.alternate !== j) throw Error(p$1(190));
      }
      if ($.tag !== 3) throw Error(p$1(188));
      return $.stateNode.current === $ ? d : _;
    }
    function Zb(d) {
      return d = Yb(d), d !== null ? $b(d) : null;
    }
    function $b(d) {
      if (d.tag === 5 || d.tag === 6) return d;
      for (d = d.child; d !== null; ) {
        var _ = $b(d);
        if (_ !== null) return _;
        d = d.sibling;
      }
      return null;
    }
    var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec$1 = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
    function mc(d) {
      if (lc && typeof lc.onCommitFiberRoot == "function") try {
        lc.onCommitFiberRoot(kc, d, void 0, (d.current.flags & 128) === 128);
      } catch {
      }
    }
    var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
    function nc(d) {
      return d >>>= 0, d === 0 ? 32 : 31 - (pc(d) / qc | 0) | 0;
    }
    var rc = 64, sc = 4194304;
    function tc(d) {
      switch (d & -d) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return d & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return d & 130023424;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 1073741824;
        default:
          return d;
      }
    }
    function uc(d, _) {
      var $ = d.pendingLanes;
      if ($ === 0) return 0;
      var j = 0, rt = d.suspendedLanes, et = d.pingedLanes, st = $ & 268435455;
      if (st !== 0) {
        var pt = st & ~rt;
        pt !== 0 ? j = tc(pt) : (et &= st, et !== 0 && (j = tc(et)));
      } else st = $ & ~rt, st !== 0 ? j = tc(st) : et !== 0 && (j = tc(et));
      if (j === 0) return 0;
      if (_ !== 0 && _ !== j && !(_ & rt) && (rt = j & -j, et = _ & -_, rt >= et || rt === 16 && (et & 4194240) !== 0)) return _;
      if (j & 4 && (j |= $ & 16), _ = d.entangledLanes, _ !== 0) for (d = d.entanglements, _ &= j; 0 < _; ) $ = 31 - oc(_), rt = 1 << $, j |= d[$], _ &= ~rt;
      return j;
    }
    function vc(d, _) {
      switch (d) {
        case 1:
        case 2:
        case 4:
          return _ + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return _ + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return -1;
      }
    }
    function wc(d, _) {
      for (var $ = d.suspendedLanes, j = d.pingedLanes, rt = d.expirationTimes, et = d.pendingLanes; 0 < et; ) {
        var st = 31 - oc(et), pt = 1 << st, Et = rt[st];
        Et === -1 ? (!(pt & $) || pt & j) && (rt[st] = vc(pt, _)) : Et <= _ && (d.expiredLanes |= pt), et &= ~pt;
      }
    }
    function xc(d) {
      return d = d.pendingLanes & -1073741825, d !== 0 ? d : d & 1073741824 ? 1073741824 : 0;
    }
    function yc() {
      var d = rc;
      return rc <<= 1, !(rc & 4194240) && (rc = 64), d;
    }
    function zc(d) {
      for (var _ = [], $ = 0; 31 > $; $++) _.push(d);
      return _;
    }
    function Ac(d, _, $) {
      d.pendingLanes |= _, _ !== 536870912 && (d.suspendedLanes = 0, d.pingedLanes = 0), d = d.eventTimes, _ = 31 - oc(_), d[_] = $;
    }
    function Bc(d, _) {
      var $ = d.pendingLanes & ~_;
      d.pendingLanes = _, d.suspendedLanes = 0, d.pingedLanes = 0, d.expiredLanes &= _, d.mutableReadLanes &= _, d.entangledLanes &= _, _ = d.entanglements;
      var j = d.eventTimes;
      for (d = d.expirationTimes; 0 < $; ) {
        var rt = 31 - oc($), et = 1 << rt;
        _[rt] = 0, j[rt] = -1, d[rt] = -1, $ &= ~et;
      }
    }
    function Cc(d, _) {
      var $ = d.entangledLanes |= _;
      for (d = d.entanglements; $; ) {
        var j = 31 - oc($), rt = 1 << j;
        rt & _ | d[j] & _ && (d[j] |= _), $ &= ~rt;
      }
    }
    var C = 0;
    function Dc(d) {
      return d &= -d, 1 < d ? 4 < d ? d & 268435455 ? 16 : 536870912 : 4 : 1;
    }
    var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
    function Sc(d, _) {
      switch (d) {
        case "focusin":
        case "focusout":
          Lc = null;
          break;
        case "dragenter":
        case "dragleave":
          Mc = null;
          break;
        case "mouseover":
        case "mouseout":
          Nc = null;
          break;
        case "pointerover":
        case "pointerout":
          Oc.delete(_.pointerId);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          Pc.delete(_.pointerId);
      }
    }
    function Tc(d, _, $, j, rt, et) {
      return d === null || d.nativeEvent !== et ? (d = {
        blockedOn: _,
        domEventName: $,
        eventSystemFlags: j,
        nativeEvent: et,
        targetContainers: [
          rt
        ]
      }, _ !== null && (_ = Cb(_), _ !== null && Fc(_)), d) : (d.eventSystemFlags |= j, _ = d.targetContainers, rt !== null && _.indexOf(rt) === -1 && _.push(rt), d);
    }
    function Uc(d, _, $, j, rt) {
      switch (_) {
        case "focusin":
          return Lc = Tc(Lc, d, _, $, j, rt), true;
        case "dragenter":
          return Mc = Tc(Mc, d, _, $, j, rt), true;
        case "mouseover":
          return Nc = Tc(Nc, d, _, $, j, rt), true;
        case "pointerover":
          var et = rt.pointerId;
          return Oc.set(et, Tc(Oc.get(et) || null, d, _, $, j, rt)), true;
        case "gotpointercapture":
          return et = rt.pointerId, Pc.set(et, Tc(Pc.get(et) || null, d, _, $, j, rt)), true;
      }
      return false;
    }
    function Vc(d) {
      var _ = Wc(d.target);
      if (_ !== null) {
        var $ = Vb(_);
        if ($ !== null) {
          if (_ = $.tag, _ === 13) {
            if (_ = Wb($), _ !== null) {
              d.blockedOn = _, Ic(d.priority, function() {
                Gc($);
              });
              return;
            }
          } else if (_ === 3 && $.stateNode.current.memoizedState.isDehydrated) {
            d.blockedOn = $.tag === 3 ? $.stateNode.containerInfo : null;
            return;
          }
        }
      }
      d.blockedOn = null;
    }
    function Xc(d) {
      if (d.blockedOn !== null) return false;
      for (var _ = d.targetContainers; 0 < _.length; ) {
        var $ = Yc(d.domEventName, d.eventSystemFlags, _[0], d.nativeEvent);
        if ($ === null) {
          $ = d.nativeEvent;
          var j = new $.constructor($.type, $);
          wb = j, $.target.dispatchEvent(j), wb = null;
        } else return _ = Cb($), _ !== null && Fc(_), d.blockedOn = $, false;
        _.shift();
      }
      return true;
    }
    function Zc(d, _, $) {
      Xc(d) && $.delete(_);
    }
    function $c() {
      Jc = false, Lc !== null && Xc(Lc) && (Lc = null), Mc !== null && Xc(Mc) && (Mc = null), Nc !== null && Xc(Nc) && (Nc = null), Oc.forEach(Zc), Pc.forEach(Zc);
    }
    function ad(d, _) {
      d.blockedOn === _ && (d.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
    }
    function bd(d) {
      function _(rt) {
        return ad(rt, d);
      }
      if (0 < Kc.length) {
        ad(Kc[0], d);
        for (var $ = 1; $ < Kc.length; $++) {
          var j = Kc[$];
          j.blockedOn === d && (j.blockedOn = null);
        }
      }
      for (Lc !== null && ad(Lc, d), Mc !== null && ad(Mc, d), Nc !== null && ad(Nc, d), Oc.forEach(_), Pc.forEach(_), $ = 0; $ < Qc.length; $++) j = Qc[$], j.blockedOn === d && (j.blockedOn = null);
      for (; 0 < Qc.length && ($ = Qc[0], $.blockedOn === null); ) Vc($), $.blockedOn === null && Qc.shift();
    }
    var cd = ua.ReactCurrentBatchConfig, dd = true;
    function ed(d, _, $, j) {
      var rt = C, et = cd.transition;
      cd.transition = null;
      try {
        C = 1, fd(d, _, $, j);
      } finally {
        C = rt, cd.transition = et;
      }
    }
    function gd(d, _, $, j) {
      var rt = C, et = cd.transition;
      cd.transition = null;
      try {
        C = 4, fd(d, _, $, j);
      } finally {
        C = rt, cd.transition = et;
      }
    }
    function fd(d, _, $, j) {
      if (dd) {
        var rt = Yc(d, _, $, j);
        if (rt === null) hd(d, _, j, id$1, $), Sc(d, j);
        else if (Uc(rt, d, _, $, j)) j.stopPropagation();
        else if (Sc(d, j), _ & 4 && -1 < Rc.indexOf(d)) {
          for (; rt !== null; ) {
            var et = Cb(rt);
            if (et !== null && Ec(et), et = Yc(d, _, $, j), et === null && hd(d, _, j, id$1, $), et === rt) break;
            rt = et;
          }
          rt !== null && j.stopPropagation();
        } else hd(d, _, j, null, $);
      }
    }
    var id$1 = null;
    function Yc(d, _, $, j) {
      if (id$1 = null, d = xb(j), d = Wc(d), d !== null) if (_ = Vb(d), _ === null) d = null;
      else if ($ = _.tag, $ === 13) {
        if (d = Wb(_), d !== null) return d;
        d = null;
      } else if ($ === 3) {
        if (_.stateNode.current.memoizedState.isDehydrated) return _.tag === 3 ? _.stateNode.containerInfo : null;
        d = null;
      } else _ !== d && (d = null);
      return id$1 = d, null;
    }
    function jd(d) {
      switch (d) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return 4;
        case "message":
          switch (ec$1()) {
            case fc:
              return 1;
            case gc:
              return 4;
            case hc:
            case ic:
              return 16;
            case jc:
              return 536870912;
            default:
              return 16;
          }
        default:
          return 16;
      }
    }
    var kd = null, ld = null, md = null;
    function nd() {
      if (md) return md;
      var d, _ = ld, $ = _.length, j, rt = "value" in kd ? kd.value : kd.textContent, et = rt.length;
      for (d = 0; d < $ && _[d] === rt[d]; d++) ;
      var st = $ - d;
      for (j = 1; j <= st && _[$ - j] === rt[et - j]; j++) ;
      return md = rt.slice(d, 1 < j ? 1 - j : void 0);
    }
    function od(d) {
      var _ = d.keyCode;
      return "charCode" in d ? (d = d.charCode, d === 0 && _ === 13 && (d = 13)) : d = _, d === 10 && (d = 13), 32 <= d || d === 13 ? d : 0;
    }
    function pd() {
      return true;
    }
    function qd() {
      return false;
    }
    function rd(d) {
      function _($, j, rt, et, st) {
        this._reactName = $, this._targetInst = rt, this.type = j, this.nativeEvent = et, this.target = st, this.currentTarget = null;
        for (var pt in d) d.hasOwnProperty(pt) && ($ = d[pt], this[pt] = $ ? $(et) : et[pt]);
        return this.isDefaultPrevented = (et.defaultPrevented != null ? et.defaultPrevented : et.returnValue === false) ? pd : qd, this.isPropagationStopped = qd, this;
      }
      return A(_.prototype, {
        preventDefault: function() {
          this.defaultPrevented = true;
          var $ = this.nativeEvent;
          $ && ($.preventDefault ? $.preventDefault() : typeof $.returnValue != "unknown" && ($.returnValue = false), this.isDefaultPrevented = pd);
        },
        stopPropagation: function() {
          var $ = this.nativeEvent;
          $ && ($.stopPropagation ? $.stopPropagation() : typeof $.cancelBubble != "unknown" && ($.cancelBubble = true), this.isPropagationStopped = pd);
        },
        persist: function() {
        },
        isPersistent: pd
      }), _;
    }
    var sd = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(d) {
        return d.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, td = rd(sd), ud = A({}, sd, {
      view: 0,
      detail: 0
    }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: zd,
      button: 0,
      buttons: 0,
      relatedTarget: function(d) {
        return d.relatedTarget === void 0 ? d.fromElement === d.srcElement ? d.toElement : d.fromElement : d.relatedTarget;
      },
      movementX: function(d) {
        return "movementX" in d ? d.movementX : (d !== yd && (yd && d.type === "mousemove" ? (wd = d.screenX - yd.screenX, xd = d.screenY - yd.screenY) : xd = wd = 0, yd = d), wd);
      },
      movementY: function(d) {
        return "movementY" in d ? d.movementY : xd;
      }
    }), Bd = rd(Ad), Cd = A({}, Ad, {
      dataTransfer: 0
    }), Dd = rd(Cd), Ed = A({}, ud, {
      relatedTarget: 0
    }), Fd = rd(Ed), Gd = A({}, sd, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Hd = rd(Gd), Id = A({}, sd, {
      clipboardData: function(d) {
        return "clipboardData" in d ? d.clipboardData : window.clipboardData;
      }
    }), Jd = rd(Id), Kd = A({}, sd, {
      data: 0
    }), Ld = rd(Kd), Md = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Nd = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    }, Od = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function Pd(d) {
      var _ = this.nativeEvent;
      return _.getModifierState ? _.getModifierState(d) : (d = Od[d]) ? !!_[d] : false;
    }
    function zd() {
      return Pd;
    }
    var Qd = A({}, ud, {
      key: function(d) {
        if (d.key) {
          var _ = Md[d.key] || d.key;
          if (_ !== "Unidentified") return _;
        }
        return d.type === "keypress" ? (d = od(d), d === 13 ? "Enter" : String.fromCharCode(d)) : d.type === "keydown" || d.type === "keyup" ? Nd[d.keyCode] || "Unidentified" : "";
      },
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: zd,
      charCode: function(d) {
        return d.type === "keypress" ? od(d) : 0;
      },
      keyCode: function(d) {
        return d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
      },
      which: function(d) {
        return d.type === "keypress" ? od(d) : d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
      }
    }), Rd = rd(Qd), Sd = A({}, Ad, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), Td = rd(Sd), Ud = A({}, ud, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: zd
    }), Vd = rd(Ud), Wd = A({}, sd, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Xd = rd(Wd), Yd = A({}, Ad, {
      deltaX: function(d) {
        return "deltaX" in d ? d.deltaX : "wheelDeltaX" in d ? -d.wheelDeltaX : 0;
      },
      deltaY: function(d) {
        return "deltaY" in d ? d.deltaY : "wheelDeltaY" in d ? -d.wheelDeltaY : "wheelDelta" in d ? -d.wheelDelta : 0;
      },
      deltaZ: 0,
      deltaMode: 0
    }), Zd = rd(Yd), $d = [
      9,
      13,
      27,
      32
    ], ae = ia && "CompositionEvent" in window, be = null;
    ia && "documentMode" in document && (be = document.documentMode);
    var ce$1 = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = " ", fe = false;
    function ge(d, _) {
      switch (d) {
        case "keyup":
          return $d.indexOf(_.keyCode) !== -1;
        case "keydown":
          return _.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
          return true;
        default:
          return false;
      }
    }
    function he$1(d) {
      return d = d.detail, typeof d == "object" && "data" in d ? d.data : null;
    }
    var ie = false;
    function je(d, _) {
      switch (d) {
        case "compositionend":
          return he$1(_);
        case "keypress":
          return _.which !== 32 ? null : (fe = true, ee);
        case "textInput":
          return d = _.data, d === ee && fe ? null : d;
        default:
          return null;
      }
    }
    function ke(d, _) {
      if (ie) return d === "compositionend" || !ae && ge(d, _) ? (d = nd(), md = ld = kd = null, ie = false, d) : null;
      switch (d) {
        case "paste":
          return null;
        case "keypress":
          if (!(_.ctrlKey || _.altKey || _.metaKey) || _.ctrlKey && _.altKey) {
            if (_.char && 1 < _.char.length) return _.char;
            if (_.which) return String.fromCharCode(_.which);
          }
          return null;
        case "compositionend":
          return de && _.locale !== "ko" ? null : _.data;
        default:
          return null;
      }
    }
    var le = {
      color: true,
      date: true,
      datetime: true,
      "datetime-local": true,
      email: true,
      month: true,
      number: true,
      password: true,
      range: true,
      search: true,
      tel: true,
      text: true,
      time: true,
      url: true,
      week: true
    };
    function me$1(d) {
      var _ = d && d.nodeName && d.nodeName.toLowerCase();
      return _ === "input" ? !!le[d.type] : _ === "textarea";
    }
    function ne$1(d, _, $, j) {
      Eb(j), _ = oe(_, "onChange"), 0 < _.length && ($ = new td("onChange", "change", null, $, j), d.push({
        event: $,
        listeners: _
      }));
    }
    var pe$1 = null, qe$1 = null;
    function re$3(d) {
      se(d, 0);
    }
    function te(d) {
      var _ = ue(d);
      if (Wa(_)) return d;
    }
    function ve(d, _) {
      if (d === "change") return _;
    }
    var we = false;
    if (ia) {
      var xe$1;
      if (ia) {
        var ye = "oninput" in document;
        if (!ye) {
          var ze = document.createElement("div");
          ze.setAttribute("oninput", "return;"), ye = typeof ze.oninput == "function";
        }
        xe$1 = ye;
      } else xe$1 = false;
      we = xe$1 && (!document.documentMode || 9 < document.documentMode);
    }
    function Ae$1() {
      pe$1 && (pe$1.detachEvent("onpropertychange", Be), qe$1 = pe$1 = null);
    }
    function Be(d) {
      if (d.propertyName === "value" && te(qe$1)) {
        var _ = [];
        ne$1(_, qe$1, d, xb(d)), Jb(re$3, _);
      }
    }
    function Ce$1(d, _, $) {
      d === "focusin" ? (Ae$1(), pe$1 = _, qe$1 = $, pe$1.attachEvent("onpropertychange", Be)) : d === "focusout" && Ae$1();
    }
    function De(d) {
      if (d === "selectionchange" || d === "keyup" || d === "keydown") return te(qe$1);
    }
    function Ee$1(d, _) {
      if (d === "click") return te(_);
    }
    function Fe(d, _) {
      if (d === "input" || d === "change") return te(_);
    }
    function Ge(d, _) {
      return d === _ && (d !== 0 || 1 / d === 1 / _) || d !== d && _ !== _;
    }
    var He = typeof Object.is == "function" ? Object.is : Ge;
    function Ie$1(d, _) {
      if (He(d, _)) return true;
      if (typeof d != "object" || d === null || typeof _ != "object" || _ === null) return false;
      var $ = Object.keys(d), j = Object.keys(_);
      if ($.length !== j.length) return false;
      for (j = 0; j < $.length; j++) {
        var rt = $[j];
        if (!ja.call(_, rt) || !He(d[rt], _[rt])) return false;
      }
      return true;
    }
    function Je(d) {
      for (; d && d.firstChild; ) d = d.firstChild;
      return d;
    }
    function Ke(d, _) {
      var $ = Je(d);
      d = 0;
      for (var j; $; ) {
        if ($.nodeType === 3) {
          if (j = d + $.textContent.length, d <= _ && j >= _) return {
            node: $,
            offset: _ - d
          };
          d = j;
        }
        e: {
          for (; $; ) {
            if ($.nextSibling) {
              $ = $.nextSibling;
              break e;
            }
            $ = $.parentNode;
          }
          $ = void 0;
        }
        $ = Je($);
      }
    }
    function Le(d, _) {
      return d && _ ? d === _ ? true : d && d.nodeType === 3 ? false : _ && _.nodeType === 3 ? Le(d, _.parentNode) : "contains" in d ? d.contains(_) : d.compareDocumentPosition ? !!(d.compareDocumentPosition(_) & 16) : false : false;
    }
    function Me() {
      for (var d = window, _ = Xa(); _ instanceof d.HTMLIFrameElement; ) {
        try {
          var $ = typeof _.contentWindow.location.href == "string";
        } catch {
          $ = false;
        }
        if ($) d = _.contentWindow;
        else break;
        _ = Xa(d.document);
      }
      return _;
    }
    function Ne(d) {
      var _ = d && d.nodeName && d.nodeName.toLowerCase();
      return _ && (_ === "input" && (d.type === "text" || d.type === "search" || d.type === "tel" || d.type === "url" || d.type === "password") || _ === "textarea" || d.contentEditable === "true");
    }
    function Oe(d) {
      var _ = Me(), $ = d.focusedElem, j = d.selectionRange;
      if (_ !== $ && $ && $.ownerDocument && Le($.ownerDocument.documentElement, $)) {
        if (j !== null && Ne($)) {
          if (_ = j.start, d = j.end, d === void 0 && (d = _), "selectionStart" in $) $.selectionStart = _, $.selectionEnd = Math.min(d, $.value.length);
          else if (d = (_ = $.ownerDocument || document) && _.defaultView || window, d.getSelection) {
            d = d.getSelection();
            var rt = $.textContent.length, et = Math.min(j.start, rt);
            j = j.end === void 0 ? et : Math.min(j.end, rt), !d.extend && et > j && (rt = j, j = et, et = rt), rt = Ke($, et);
            var st = Ke($, j);
            rt && st && (d.rangeCount !== 1 || d.anchorNode !== rt.node || d.anchorOffset !== rt.offset || d.focusNode !== st.node || d.focusOffset !== st.offset) && (_ = _.createRange(), _.setStart(rt.node, rt.offset), d.removeAllRanges(), et > j ? (d.addRange(_), d.extend(st.node, st.offset)) : (_.setEnd(st.node, st.offset), d.addRange(_)));
          }
        }
        for (_ = [], d = $; d = d.parentNode; ) d.nodeType === 1 && _.push({
          element: d,
          left: d.scrollLeft,
          top: d.scrollTop
        });
        for (typeof $.focus == "function" && $.focus(), $ = 0; $ < _.length; $++) d = _[$], d.element.scrollLeft = d.left, d.element.scrollTop = d.top;
      }
    }
    var Pe$1 = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re$1 = null, Se$1 = null, Te$1 = false;
    function Ue(d, _, $) {
      var j = $.window === $ ? $.document : $.nodeType === 9 ? $ : $.ownerDocument;
      Te$1 || Qe == null || Qe !== Xa(j) || (j = Qe, "selectionStart" in j && Ne(j) ? j = {
        start: j.selectionStart,
        end: j.selectionEnd
      } : (j = (j.ownerDocument && j.ownerDocument.defaultView || window).getSelection(), j = {
        anchorNode: j.anchorNode,
        anchorOffset: j.anchorOffset,
        focusNode: j.focusNode,
        focusOffset: j.focusOffset
      }), Se$1 && Ie$1(Se$1, j) || (Se$1 = j, j = oe(Re$1, "onSelect"), 0 < j.length && (_ = new td("onSelect", "select", null, _, $), d.push({
        event: _,
        listeners: j
      }), _.target = Qe)));
    }
    function Ve(d, _) {
      var $ = {};
      return $[d.toLowerCase()] = _.toLowerCase(), $["Webkit" + d] = "webkit" + _, $["Moz" + d] = "moz" + _, $;
    }
    var We = {
      animationend: Ve("Animation", "AnimationEnd"),
      animationiteration: Ve("Animation", "AnimationIteration"),
      animationstart: Ve("Animation", "AnimationStart"),
      transitionend: Ve("Transition", "TransitionEnd")
    }, Xe = {}, Ye$1 = {};
    ia && (Ye$1 = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
    function Ze(d) {
      if (Xe[d]) return Xe[d];
      if (!We[d]) return d;
      var _ = We[d], $;
      for ($ in _) if (_.hasOwnProperty($) && $ in Ye$1) return Xe[d] = _[$];
      return d;
    }
    var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    function ff(d, _) {
      df.set(d, _), fa(_, [
        d
      ]);
    }
    for (var gf = 0; gf < ef.length; gf++) {
      var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
      ff(jf, "on" + kf);
    }
    ff($e, "onAnimationEnd");
    ff(af, "onAnimationIteration");
    ff(bf, "onAnimationStart");
    ff("dblclick", "onDoubleClick");
    ff("focusin", "onFocus");
    ff("focusout", "onBlur");
    ff(cf, "onTransitionEnd");
    ha("onMouseEnter", [
      "mouseout",
      "mouseover"
    ]);
    ha("onMouseLeave", [
      "mouseout",
      "mouseover"
    ]);
    ha("onPointerEnter", [
      "pointerout",
      "pointerover"
    ]);
    ha("onPointerLeave", [
      "pointerout",
      "pointerover"
    ]);
    fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    fa("onBeforeInput", [
      "compositionend",
      "keypress",
      "textInput",
      "paste"
    ]);
    fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
    function nf(d, _, $) {
      var j = d.type || "unknown-event";
      d.currentTarget = $, Ub(j, _, void 0, d), d.currentTarget = null;
    }
    function se(d, _) {
      _ = (_ & 4) !== 0;
      for (var $ = 0; $ < d.length; $++) {
        var j = d[$], rt = j.event;
        j = j.listeners;
        e: {
          var et = void 0;
          if (_) for (var st = j.length - 1; 0 <= st; st--) {
            var pt = j[st], Et = pt.instance, Bt = pt.currentTarget;
            if (pt = pt.listener, Et !== et && rt.isPropagationStopped()) break e;
            nf(rt, pt, Bt), et = Et;
          }
          else for (st = 0; st < j.length; st++) {
            if (pt = j[st], Et = pt.instance, Bt = pt.currentTarget, pt = pt.listener, Et !== et && rt.isPropagationStopped()) break e;
            nf(rt, pt, Bt), et = Et;
          }
        }
      }
      if (Qb) throw d = Rb, Qb = false, Rb = null, d;
    }
    function D$1(d, _) {
      var $ = _[of$1];
      $ === void 0 && ($ = _[of$1] = /* @__PURE__ */ new Set());
      var j = d + "__bubble";
      $.has(j) || (pf(_, d, 2, false), $.add(j));
    }
    function qf(d, _, $) {
      var j = 0;
      _ && (j |= 4), pf($, d, j, _);
    }
    var rf = "_reactListening" + Math.random().toString(36).slice(2);
    function sf(d) {
      if (!d[rf]) {
        d[rf] = true, da.forEach(function($) {
          $ !== "selectionchange" && (mf.has($) || qf($, false, d), qf($, true, d));
        });
        var _ = d.nodeType === 9 ? d : d.ownerDocument;
        _ === null || _[rf] || (_[rf] = true, qf("selectionchange", false, _));
      }
    }
    function pf(d, _, $, j) {
      switch (jd(_)) {
        case 1:
          var rt = ed;
          break;
        case 4:
          rt = gd;
          break;
        default:
          rt = fd;
      }
      $ = rt.bind(null, _, $, d), rt = void 0, !Lb || _ !== "touchstart" && _ !== "touchmove" && _ !== "wheel" || (rt = true), j ? rt !== void 0 ? d.addEventListener(_, $, {
        capture: true,
        passive: rt
      }) : d.addEventListener(_, $, true) : rt !== void 0 ? d.addEventListener(_, $, {
        passive: rt
      }) : d.addEventListener(_, $, false);
    }
    function hd(d, _, $, j, rt) {
      var et = j;
      if (!(_ & 1) && !(_ & 2) && j !== null) e: for (; ; ) {
        if (j === null) return;
        var st = j.tag;
        if (st === 3 || st === 4) {
          var pt = j.stateNode.containerInfo;
          if (pt === rt || pt.nodeType === 8 && pt.parentNode === rt) break;
          if (st === 4) for (st = j.return; st !== null; ) {
            var Et = st.tag;
            if ((Et === 3 || Et === 4) && (Et = st.stateNode.containerInfo, Et === rt || Et.nodeType === 8 && Et.parentNode === rt)) return;
            st = st.return;
          }
          for (; pt !== null; ) {
            if (st = Wc(pt), st === null) return;
            if (Et = st.tag, Et === 5 || Et === 6) {
              j = et = st;
              continue e;
            }
            pt = pt.parentNode;
          }
        }
        j = j.return;
      }
      Jb(function() {
        var Bt = et, St = xb($), $t = [];
        e: {
          var kt = df.get(d);
          if (kt !== void 0) {
            var Tt = td, Pt = d;
            switch (d) {
              case "keypress":
                if (od($) === 0) break e;
              case "keydown":
              case "keyup":
                Tt = Rd;
                break;
              case "focusin":
                Pt = "focus", Tt = Fd;
                break;
              case "focusout":
                Pt = "blur", Tt = Fd;
                break;
              case "beforeblur":
              case "afterblur":
                Tt = Fd;
                break;
              case "click":
                if ($.button === 2) break e;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                Tt = Bd;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                Tt = Dd;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                Tt = Vd;
                break;
              case $e:
              case af:
              case bf:
                Tt = Hd;
                break;
              case cf:
                Tt = Xd;
                break;
              case "scroll":
                Tt = vd;
                break;
              case "wheel":
                Tt = Zd;
                break;
              case "copy":
              case "cut":
              case "paste":
                Tt = Jd;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                Tt = Td;
            }
            var It = (_ & 4) !== 0, jt = !It && d === "scroll", Dt = It ? kt !== null ? kt + "Capture" : null : kt;
            It = [];
            for (var Ot = Bt, Ft; Ot !== null; ) {
              Ft = Ot;
              var Lt = Ft.stateNode;
              if (Ft.tag === 5 && Lt !== null && (Ft = Lt, Dt !== null && (Lt = Kb(Ot, Dt), Lt != null && It.push(tf(Ot, Lt, Ft)))), jt) break;
              Ot = Ot.return;
            }
            0 < It.length && (kt = new Tt(kt, Pt, null, $, St), $t.push({
              event: kt,
              listeners: It
            }));
          }
        }
        if (!(_ & 7)) {
          e: {
            if (kt = d === "mouseover" || d === "pointerover", Tt = d === "mouseout" || d === "pointerout", kt && $ !== wb && (Pt = $.relatedTarget || $.fromElement) && (Wc(Pt) || Pt[uf])) break e;
            if ((Tt || kt) && (kt = St.window === St ? St : (kt = St.ownerDocument) ? kt.defaultView || kt.parentWindow : window, Tt ? (Pt = $.relatedTarget || $.toElement, Tt = Bt, Pt = Pt ? Wc(Pt) : null, Pt !== null && (jt = Vb(Pt), Pt !== jt || Pt.tag !== 5 && Pt.tag !== 6) && (Pt = null)) : (Tt = null, Pt = Bt), Tt !== Pt)) {
              if (It = Bd, Lt = "onMouseLeave", Dt = "onMouseEnter", Ot = "mouse", (d === "pointerout" || d === "pointerover") && (It = Td, Lt = "onPointerLeave", Dt = "onPointerEnter", Ot = "pointer"), jt = Tt == null ? kt : ue(Tt), Ft = Pt == null ? kt : ue(Pt), kt = new It(Lt, Ot + "leave", Tt, $, St), kt.target = jt, kt.relatedTarget = Ft, Lt = null, Wc(St) === Bt && (It = new It(Dt, Ot + "enter", Pt, $, St), It.target = Ft, It.relatedTarget = jt, Lt = It), jt = Lt, Tt && Pt) t: {
                for (It = Tt, Dt = Pt, Ot = 0, Ft = It; Ft; Ft = vf(Ft)) Ot++;
                for (Ft = 0, Lt = Dt; Lt; Lt = vf(Lt)) Ft++;
                for (; 0 < Ot - Ft; ) It = vf(It), Ot--;
                for (; 0 < Ft - Ot; ) Dt = vf(Dt), Ft--;
                for (; Ot--; ) {
                  if (It === Dt || Dt !== null && It === Dt.alternate) break t;
                  It = vf(It), Dt = vf(Dt);
                }
                It = null;
              }
              else It = null;
              Tt !== null && wf($t, kt, Tt, It, false), Pt !== null && jt !== null && wf($t, jt, Pt, It, true);
            }
          }
          e: {
            if (kt = Bt ? ue(Bt) : window, Tt = kt.nodeName && kt.nodeName.toLowerCase(), Tt === "select" || Tt === "input" && kt.type === "file") var Zt = ve;
            else if (me$1(kt)) if (we) Zt = Fe;
            else {
              Zt = De;
              var Kt = Ce$1;
            }
            else (Tt = kt.nodeName) && Tt.toLowerCase() === "input" && (kt.type === "checkbox" || kt.type === "radio") && (Zt = Ee$1);
            if (Zt && (Zt = Zt(d, Bt))) {
              ne$1($t, Zt, $, St);
              break e;
            }
            Kt && Kt(d, kt, Bt), d === "focusout" && (Kt = kt._wrapperState) && Kt.controlled && kt.type === "number" && cb(kt, "number", kt.value);
          }
          switch (Kt = Bt ? ue(Bt) : window, d) {
            case "focusin":
              (me$1(Kt) || Kt.contentEditable === "true") && (Qe = Kt, Re$1 = Bt, Se$1 = null);
              break;
            case "focusout":
              Se$1 = Re$1 = Qe = null;
              break;
            case "mousedown":
              Te$1 = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              Te$1 = false, Ue($t, $, St);
              break;
            case "selectionchange":
              if (Pe$1) break;
            case "keydown":
            case "keyup":
              Ue($t, $, St);
          }
          var ar;
          if (ae) e: {
            switch (d) {
              case "compositionstart":
                var sr = "onCompositionStart";
                break e;
              case "compositionend":
                sr = "onCompositionEnd";
                break e;
              case "compositionupdate":
                sr = "onCompositionUpdate";
                break e;
            }
            sr = void 0;
          }
          else ie ? ge(d, $) && (sr = "onCompositionEnd") : d === "keydown" && $.keyCode === 229 && (sr = "onCompositionStart");
          sr && (de && $.locale !== "ko" && (ie || sr !== "onCompositionStart" ? sr === "onCompositionEnd" && ie && (ar = nd()) : (kd = St, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), Kt = oe(Bt, sr), 0 < Kt.length && (sr = new Ld(sr, d, null, $, St), $t.push({
            event: sr,
            listeners: Kt
          }), ar ? sr.data = ar : (ar = he$1($), ar !== null && (sr.data = ar)))), (ar = ce$1 ? je(d, $) : ke(d, $)) && (Bt = oe(Bt, "onBeforeInput"), 0 < Bt.length && (St = new Ld("onBeforeInput", "beforeinput", null, $, St), $t.push({
            event: St,
            listeners: Bt
          }), St.data = ar));
        }
        se($t, _);
      });
    }
    function tf(d, _, $) {
      return {
        instance: d,
        listener: _,
        currentTarget: $
      };
    }
    function oe(d, _) {
      for (var $ = _ + "Capture", j = []; d !== null; ) {
        var rt = d, et = rt.stateNode;
        rt.tag === 5 && et !== null && (rt = et, et = Kb(d, $), et != null && j.unshift(tf(d, et, rt)), et = Kb(d, _), et != null && j.push(tf(d, et, rt))), d = d.return;
      }
      return j;
    }
    function vf(d) {
      if (d === null) return null;
      do
        d = d.return;
      while (d && d.tag !== 5);
      return d || null;
    }
    function wf(d, _, $, j, rt) {
      for (var et = _._reactName, st = []; $ !== null && $ !== j; ) {
        var pt = $, Et = pt.alternate, Bt = pt.stateNode;
        if (Et !== null && Et === j) break;
        pt.tag === 5 && Bt !== null && (pt = Bt, rt ? (Et = Kb($, et), Et != null && st.unshift(tf($, Et, pt))) : rt || (Et = Kb($, et), Et != null && st.push(tf($, Et, pt)))), $ = $.return;
      }
      st.length !== 0 && d.push({
        event: _,
        listeners: st
      });
    }
    var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
    function zf(d) {
      return (typeof d == "string" ? d : "" + d).replace(xf, `
`).replace(yf, "");
    }
    function Af(d, _, $) {
      if (_ = zf(_), zf(d) !== _ && $) throw Error(p$1(425));
    }
    function Bf() {
    }
    var Cf = null, Df = null;
    function Ef(d, _) {
      return d === "textarea" || d === "noscript" || typeof _.children == "string" || typeof _.children == "number" || typeof _.dangerouslySetInnerHTML == "object" && _.dangerouslySetInnerHTML !== null && _.dangerouslySetInnerHTML.__html != null;
    }
    var Ff = typeof setTimeout == "function" ? setTimeout : void 0, Gf = typeof clearTimeout == "function" ? clearTimeout : void 0, Hf = typeof Promise == "function" ? Promise : void 0, Jf = typeof queueMicrotask == "function" ? queueMicrotask : typeof Hf < "u" ? function(d) {
      return Hf.resolve(null).then(d).catch(If);
    } : Ff;
    function If(d) {
      setTimeout(function() {
        throw d;
      });
    }
    function Kf(d, _) {
      var $ = _, j = 0;
      do {
        var rt = $.nextSibling;
        if (d.removeChild($), rt && rt.nodeType === 8) if ($ = rt.data, $ === "/$") {
          if (j === 0) {
            d.removeChild(rt), bd(_);
            return;
          }
          j--;
        } else $ !== "$" && $ !== "$?" && $ !== "$!" || j++;
        $ = rt;
      } while ($);
      bd(_);
    }
    function Lf(d) {
      for (; d != null; d = d.nextSibling) {
        var _ = d.nodeType;
        if (_ === 1 || _ === 3) break;
        if (_ === 8) {
          if (_ = d.data, _ === "$" || _ === "$!" || _ === "$?") break;
          if (_ === "/$") return null;
        }
      }
      return d;
    }
    function Mf(d) {
      d = d.previousSibling;
      for (var _ = 0; d; ) {
        if (d.nodeType === 8) {
          var $ = d.data;
          if ($ === "$" || $ === "$!" || $ === "$?") {
            if (_ === 0) return d;
            _--;
          } else $ === "/$" && _++;
        }
        d = d.previousSibling;
      }
      return null;
    }
    var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of$1 = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
    function Wc(d) {
      var _ = d[Of];
      if (_) return _;
      for (var $ = d.parentNode; $; ) {
        if (_ = $[uf] || $[Of]) {
          if ($ = _.alternate, _.child !== null || $ !== null && $.child !== null) for (d = Mf(d); d !== null; ) {
            if ($ = d[Of]) return $;
            d = Mf(d);
          }
          return _;
        }
        d = $, $ = d.parentNode;
      }
      return null;
    }
    function Cb(d) {
      return d = d[Of] || d[uf], !d || d.tag !== 5 && d.tag !== 6 && d.tag !== 13 && d.tag !== 3 ? null : d;
    }
    function ue(d) {
      if (d.tag === 5 || d.tag === 6) return d.stateNode;
      throw Error(p$1(33));
    }
    function Db(d) {
      return d[Pf] || null;
    }
    var Sf = [], Tf = -1;
    function Uf(d) {
      return {
        current: d
      };
    }
    function E$1(d) {
      0 > Tf || (d.current = Sf[Tf], Sf[Tf] = null, Tf--);
    }
    function G(d, _) {
      Tf++, Sf[Tf] = d.current, d.current = _;
    }
    var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
    function Yf(d, _) {
      var $ = d.type.contextTypes;
      if (!$) return Vf;
      var j = d.stateNode;
      if (j && j.__reactInternalMemoizedUnmaskedChildContext === _) return j.__reactInternalMemoizedMaskedChildContext;
      var rt = {}, et;
      for (et in $) rt[et] = _[et];
      return j && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = _, d.__reactInternalMemoizedMaskedChildContext = rt), rt;
    }
    function Zf(d) {
      return d = d.childContextTypes, d != null;
    }
    function $f() {
      E$1(Wf), E$1(H);
    }
    function ag(d, _, $) {
      if (H.current !== Vf) throw Error(p$1(168));
      G(H, _), G(Wf, $);
    }
    function bg(d, _, $) {
      var j = d.stateNode;
      if (_ = _.childContextTypes, typeof j.getChildContext != "function") return $;
      j = j.getChildContext();
      for (var rt in j) if (!(rt in _)) throw Error(p$1(108, Ra(d) || "Unknown", rt));
      return A({}, $, j);
    }
    function cg(d) {
      return d = (d = d.stateNode) && d.__reactInternalMemoizedMergedChildContext || Vf, Xf = H.current, G(H, d), G(Wf, Wf.current), true;
    }
    function dg(d, _, $) {
      var j = d.stateNode;
      if (!j) throw Error(p$1(169));
      $ ? (d = bg(d, _, Xf), j.__reactInternalMemoizedMergedChildContext = d, E$1(Wf), E$1(H), G(H, d)) : E$1(Wf), G(Wf, $);
    }
    var eg = null, fg = false, gg = false;
    function hg(d) {
      eg === null ? eg = [
        d
      ] : eg.push(d);
    }
    function ig(d) {
      fg = true, hg(d);
    }
    function jg() {
      if (!gg && eg !== null) {
        gg = true;
        var d = 0, _ = C;
        try {
          var $ = eg;
          for (C = 1; d < $.length; d++) {
            var j = $[d];
            do
              j = j(true);
            while (j !== null);
          }
          eg = null, fg = false;
        } catch (rt) {
          throw eg !== null && (eg = eg.slice(d + 1)), ac(fc, jg), rt;
        } finally {
          C = _, gg = false;
        }
      }
      return null;
    }
    var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
    function tg(d, _) {
      kg[lg++] = ng, kg[lg++] = mg, mg = d, ng = _;
    }
    function ug(d, _, $) {
      og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, qg = d;
      var j = rg;
      d = sg;
      var rt = 32 - oc(j) - 1;
      j &= ~(1 << rt), $ += 1;
      var et = 32 - oc(_) + rt;
      if (30 < et) {
        var st = rt - rt % 5;
        et = (j & (1 << st) - 1).toString(32), j >>= st, rt -= st, rg = 1 << 32 - oc(_) + rt | $ << rt | j, sg = et + d;
      } else rg = 1 << et | $ << rt | j, sg = d;
    }
    function vg(d) {
      d.return !== null && (tg(d, 1), ug(d, 1, 0));
    }
    function wg(d) {
      for (; d === mg; ) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
      for (; d === qg; ) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
    }
    var xg = null, yg = null, I = false, zg = null;
    function Ag(d, _) {
      var $ = Bg(5, null, null, 0);
      $.elementType = "DELETED", $.stateNode = _, $.return = d, _ = d.deletions, _ === null ? (d.deletions = [
        $
      ], d.flags |= 16) : _.push($);
    }
    function Cg(d, _) {
      switch (d.tag) {
        case 5:
          var $ = d.type;
          return _ = _.nodeType !== 1 || $.toLowerCase() !== _.nodeName.toLowerCase() ? null : _, _ !== null ? (d.stateNode = _, xg = d, yg = Lf(_.firstChild), true) : false;
        case 6:
          return _ = d.pendingProps === "" || _.nodeType !== 3 ? null : _, _ !== null ? (d.stateNode = _, xg = d, yg = null, true) : false;
        case 13:
          return _ = _.nodeType !== 8 ? null : _, _ !== null ? ($ = qg !== null ? {
            id: rg,
            overflow: sg
          } : null, d.memoizedState = {
            dehydrated: _,
            treeContext: $,
            retryLane: 1073741824
          }, $ = Bg(18, null, null, 0), $.stateNode = _, $.return = d, d.child = $, xg = d, yg = null, true) : false;
        default:
          return false;
      }
    }
    function Dg(d) {
      return (d.mode & 1) !== 0 && (d.flags & 128) === 0;
    }
    function Eg(d) {
      if (I) {
        var _ = yg;
        if (_) {
          var $ = _;
          if (!Cg(d, _)) {
            if (Dg(d)) throw Error(p$1(418));
            _ = Lf($.nextSibling);
            var j = xg;
            _ && Cg(d, _) ? Ag(j, $) : (d.flags = d.flags & -4097 | 2, I = false, xg = d);
          }
        } else {
          if (Dg(d)) throw Error(p$1(418));
          d.flags = d.flags & -4097 | 2, I = false, xg = d;
        }
      }
    }
    function Fg(d) {
      for (d = d.return; d !== null && d.tag !== 5 && d.tag !== 3 && d.tag !== 13; ) d = d.return;
      xg = d;
    }
    function Gg(d) {
      if (d !== xg) return false;
      if (!I) return Fg(d), I = true, false;
      var _;
      if ((_ = d.tag !== 3) && !(_ = d.tag !== 5) && (_ = d.type, _ = _ !== "head" && _ !== "body" && !Ef(d.type, d.memoizedProps)), _ && (_ = yg)) {
        if (Dg(d)) throw Hg(), Error(p$1(418));
        for (; _; ) Ag(d, _), _ = Lf(_.nextSibling);
      }
      if (Fg(d), d.tag === 13) {
        if (d = d.memoizedState, d = d !== null ? d.dehydrated : null, !d) throw Error(p$1(317));
        e: {
          for (d = d.nextSibling, _ = 0; d; ) {
            if (d.nodeType === 8) {
              var $ = d.data;
              if ($ === "/$") {
                if (_ === 0) {
                  yg = Lf(d.nextSibling);
                  break e;
                }
                _--;
              } else $ !== "$" && $ !== "$!" && $ !== "$?" || _++;
            }
            d = d.nextSibling;
          }
          yg = null;
        }
      } else yg = xg ? Lf(d.stateNode.nextSibling) : null;
      return true;
    }
    function Hg() {
      for (var d = yg; d; ) d = Lf(d.nextSibling);
    }
    function Ig() {
      yg = xg = null, I = false;
    }
    function Jg(d) {
      zg === null ? zg = [
        d
      ] : zg.push(d);
    }
    var Kg = ua.ReactCurrentBatchConfig;
    function Lg(d, _, $) {
      if (d = $.ref, d !== null && typeof d != "function" && typeof d != "object") {
        if ($._owner) {
          if ($ = $._owner, $) {
            if ($.tag !== 1) throw Error(p$1(309));
            var j = $.stateNode;
          }
          if (!j) throw Error(p$1(147, d));
          var rt = j, et = "" + d;
          return _ !== null && _.ref !== null && typeof _.ref == "function" && _.ref._stringRef === et ? _.ref : (_ = function(st) {
            var pt = rt.refs;
            st === null ? delete pt[et] : pt[et] = st;
          }, _._stringRef = et, _);
        }
        if (typeof d != "string") throw Error(p$1(284));
        if (!$._owner) throw Error(p$1(290, d));
      }
      return d;
    }
    function Mg(d, _) {
      throw d = Object.prototype.toString.call(_), Error(p$1(31, d === "[object Object]" ? "object with keys {" + Object.keys(_).join(", ") + "}" : d));
    }
    function Ng(d) {
      var _ = d._init;
      return _(d._payload);
    }
    function Og(d) {
      function _(Dt, Ot) {
        if (d) {
          var Ft = Dt.deletions;
          Ft === null ? (Dt.deletions = [
            Ot
          ], Dt.flags |= 16) : Ft.push(Ot);
        }
      }
      function $(Dt, Ot) {
        if (!d) return null;
        for (; Ot !== null; ) _(Dt, Ot), Ot = Ot.sibling;
        return null;
      }
      function j(Dt, Ot) {
        for (Dt = /* @__PURE__ */ new Map(); Ot !== null; ) Ot.key !== null ? Dt.set(Ot.key, Ot) : Dt.set(Ot.index, Ot), Ot = Ot.sibling;
        return Dt;
      }
      function rt(Dt, Ot) {
        return Dt = Pg(Dt, Ot), Dt.index = 0, Dt.sibling = null, Dt;
      }
      function et(Dt, Ot, Ft) {
        return Dt.index = Ft, d ? (Ft = Dt.alternate, Ft !== null ? (Ft = Ft.index, Ft < Ot ? (Dt.flags |= 2, Ot) : Ft) : (Dt.flags |= 2, Ot)) : (Dt.flags |= 1048576, Ot);
      }
      function st(Dt) {
        return d && Dt.alternate === null && (Dt.flags |= 2), Dt;
      }
      function pt(Dt, Ot, Ft, Lt) {
        return Ot === null || Ot.tag !== 6 ? (Ot = Qg(Ft, Dt.mode, Lt), Ot.return = Dt, Ot) : (Ot = rt(Ot, Ft), Ot.return = Dt, Ot);
      }
      function Et(Dt, Ot, Ft, Lt) {
        var Zt = Ft.type;
        return Zt === ya ? St(Dt, Ot, Ft.props.children, Lt, Ft.key) : Ot !== null && (Ot.elementType === Zt || typeof Zt == "object" && Zt !== null && Zt.$$typeof === Ha && Ng(Zt) === Ot.type) ? (Lt = rt(Ot, Ft.props), Lt.ref = Lg(Dt, Ot, Ft), Lt.return = Dt, Lt) : (Lt = Rg(Ft.type, Ft.key, Ft.props, null, Dt.mode, Lt), Lt.ref = Lg(Dt, Ot, Ft), Lt.return = Dt, Lt);
      }
      function Bt(Dt, Ot, Ft, Lt) {
        return Ot === null || Ot.tag !== 4 || Ot.stateNode.containerInfo !== Ft.containerInfo || Ot.stateNode.implementation !== Ft.implementation ? (Ot = Sg(Ft, Dt.mode, Lt), Ot.return = Dt, Ot) : (Ot = rt(Ot, Ft.children || []), Ot.return = Dt, Ot);
      }
      function St(Dt, Ot, Ft, Lt, Zt) {
        return Ot === null || Ot.tag !== 7 ? (Ot = Tg(Ft, Dt.mode, Lt, Zt), Ot.return = Dt, Ot) : (Ot = rt(Ot, Ft), Ot.return = Dt, Ot);
      }
      function $t(Dt, Ot, Ft) {
        if (typeof Ot == "string" && Ot !== "" || typeof Ot == "number") return Ot = Qg("" + Ot, Dt.mode, Ft), Ot.return = Dt, Ot;
        if (typeof Ot == "object" && Ot !== null) {
          switch (Ot.$$typeof) {
            case va:
              return Ft = Rg(Ot.type, Ot.key, Ot.props, null, Dt.mode, Ft), Ft.ref = Lg(Dt, null, Ot), Ft.return = Dt, Ft;
            case wa:
              return Ot = Sg(Ot, Dt.mode, Ft), Ot.return = Dt, Ot;
            case Ha:
              var Lt = Ot._init;
              return $t(Dt, Lt(Ot._payload), Ft);
          }
          if (eb(Ot) || Ka(Ot)) return Ot = Tg(Ot, Dt.mode, Ft, null), Ot.return = Dt, Ot;
          Mg(Dt, Ot);
        }
        return null;
      }
      function kt(Dt, Ot, Ft, Lt) {
        var Zt = Ot !== null ? Ot.key : null;
        if (typeof Ft == "string" && Ft !== "" || typeof Ft == "number") return Zt !== null ? null : pt(Dt, Ot, "" + Ft, Lt);
        if (typeof Ft == "object" && Ft !== null) {
          switch (Ft.$$typeof) {
            case va:
              return Ft.key === Zt ? Et(Dt, Ot, Ft, Lt) : null;
            case wa:
              return Ft.key === Zt ? Bt(Dt, Ot, Ft, Lt) : null;
            case Ha:
              return Zt = Ft._init, kt(Dt, Ot, Zt(Ft._payload), Lt);
          }
          if (eb(Ft) || Ka(Ft)) return Zt !== null ? null : St(Dt, Ot, Ft, Lt, null);
          Mg(Dt, Ft);
        }
        return null;
      }
      function Tt(Dt, Ot, Ft, Lt, Zt) {
        if (typeof Lt == "string" && Lt !== "" || typeof Lt == "number") return Dt = Dt.get(Ft) || null, pt(Ot, Dt, "" + Lt, Zt);
        if (typeof Lt == "object" && Lt !== null) {
          switch (Lt.$$typeof) {
            case va:
              return Dt = Dt.get(Lt.key === null ? Ft : Lt.key) || null, Et(Ot, Dt, Lt, Zt);
            case wa:
              return Dt = Dt.get(Lt.key === null ? Ft : Lt.key) || null, Bt(Ot, Dt, Lt, Zt);
            case Ha:
              var Kt = Lt._init;
              return Tt(Dt, Ot, Ft, Kt(Lt._payload), Zt);
          }
          if (eb(Lt) || Ka(Lt)) return Dt = Dt.get(Ft) || null, St(Ot, Dt, Lt, Zt, null);
          Mg(Ot, Lt);
        }
        return null;
      }
      function Pt(Dt, Ot, Ft, Lt) {
        for (var Zt = null, Kt = null, ar = Ot, sr = Ot = 0, er = null; ar !== null && sr < Ft.length; sr++) {
          ar.index > sr ? (er = ar, ar = null) : er = ar.sibling;
          var Ut = kt(Dt, ar, Ft[sr], Lt);
          if (Ut === null) {
            ar === null && (ar = er);
            break;
          }
          d && ar && Ut.alternate === null && _(Dt, ar), Ot = et(Ut, Ot, sr), Kt === null ? Zt = Ut : Kt.sibling = Ut, Kt = Ut, ar = er;
        }
        if (sr === Ft.length) return $(Dt, ar), I && tg(Dt, sr), Zt;
        if (ar === null) {
          for (; sr < Ft.length; sr++) ar = $t(Dt, Ft[sr], Lt), ar !== null && (Ot = et(ar, Ot, sr), Kt === null ? Zt = ar : Kt.sibling = ar, Kt = ar);
          return I && tg(Dt, sr), Zt;
        }
        for (ar = j(Dt, ar); sr < Ft.length; sr++) er = Tt(ar, Dt, sr, Ft[sr], Lt), er !== null && (d && er.alternate !== null && ar.delete(er.key === null ? sr : er.key), Ot = et(er, Ot, sr), Kt === null ? Zt = er : Kt.sibling = er, Kt = er);
        return d && ar.forEach(function(xt) {
          return _(Dt, xt);
        }), I && tg(Dt, sr), Zt;
      }
      function It(Dt, Ot, Ft, Lt) {
        var Zt = Ka(Ft);
        if (typeof Zt != "function") throw Error(p$1(150));
        if (Ft = Zt.call(Ft), Ft == null) throw Error(p$1(151));
        for (var Kt = Zt = null, ar = Ot, sr = Ot = 0, er = null, Ut = Ft.next(); ar !== null && !Ut.done; sr++, Ut = Ft.next()) {
          ar.index > sr ? (er = ar, ar = null) : er = ar.sibling;
          var xt = kt(Dt, ar, Ut.value, Lt);
          if (xt === null) {
            ar === null && (ar = er);
            break;
          }
          d && ar && xt.alternate === null && _(Dt, ar), Ot = et(xt, Ot, sr), Kt === null ? Zt = xt : Kt.sibling = xt, Kt = xt, ar = er;
        }
        if (Ut.done) return $(Dt, ar), I && tg(Dt, sr), Zt;
        if (ar === null) {
          for (; !Ut.done; sr++, Ut = Ft.next()) Ut = $t(Dt, Ut.value, Lt), Ut !== null && (Ot = et(Ut, Ot, sr), Kt === null ? Zt = Ut : Kt.sibling = Ut, Kt = Ut);
          return I && tg(Dt, sr), Zt;
        }
        for (ar = j(Dt, ar); !Ut.done; sr++, Ut = Ft.next()) Ut = Tt(ar, Dt, sr, Ut.value, Lt), Ut !== null && (d && Ut.alternate !== null && ar.delete(Ut.key === null ? sr : Ut.key), Ot = et(Ut, Ot, sr), Kt === null ? Zt = Ut : Kt.sibling = Ut, Kt = Ut);
        return d && ar.forEach(function(tt) {
          return _(Dt, tt);
        }), I && tg(Dt, sr), Zt;
      }
      function jt(Dt, Ot, Ft, Lt) {
        if (typeof Ft == "object" && Ft !== null && Ft.type === ya && Ft.key === null && (Ft = Ft.props.children), typeof Ft == "object" && Ft !== null) {
          switch (Ft.$$typeof) {
            case va:
              e: {
                for (var Zt = Ft.key, Kt = Ot; Kt !== null; ) {
                  if (Kt.key === Zt) {
                    if (Zt = Ft.type, Zt === ya) {
                      if (Kt.tag === 7) {
                        $(Dt, Kt.sibling), Ot = rt(Kt, Ft.props.children), Ot.return = Dt, Dt = Ot;
                        break e;
                      }
                    } else if (Kt.elementType === Zt || typeof Zt == "object" && Zt !== null && Zt.$$typeof === Ha && Ng(Zt) === Kt.type) {
                      $(Dt, Kt.sibling), Ot = rt(Kt, Ft.props), Ot.ref = Lg(Dt, Kt, Ft), Ot.return = Dt, Dt = Ot;
                      break e;
                    }
                    $(Dt, Kt);
                    break;
                  } else _(Dt, Kt);
                  Kt = Kt.sibling;
                }
                Ft.type === ya ? (Ot = Tg(Ft.props.children, Dt.mode, Lt, Ft.key), Ot.return = Dt, Dt = Ot) : (Lt = Rg(Ft.type, Ft.key, Ft.props, null, Dt.mode, Lt), Lt.ref = Lg(Dt, Ot, Ft), Lt.return = Dt, Dt = Lt);
              }
              return st(Dt);
            case wa:
              e: {
                for (Kt = Ft.key; Ot !== null; ) {
                  if (Ot.key === Kt) if (Ot.tag === 4 && Ot.stateNode.containerInfo === Ft.containerInfo && Ot.stateNode.implementation === Ft.implementation) {
                    $(Dt, Ot.sibling), Ot = rt(Ot, Ft.children || []), Ot.return = Dt, Dt = Ot;
                    break e;
                  } else {
                    $(Dt, Ot);
                    break;
                  }
                  else _(Dt, Ot);
                  Ot = Ot.sibling;
                }
                Ot = Sg(Ft, Dt.mode, Lt), Ot.return = Dt, Dt = Ot;
              }
              return st(Dt);
            case Ha:
              return Kt = Ft._init, jt(Dt, Ot, Kt(Ft._payload), Lt);
          }
          if (eb(Ft)) return Pt(Dt, Ot, Ft, Lt);
          if (Ka(Ft)) return It(Dt, Ot, Ft, Lt);
          Mg(Dt, Ft);
        }
        return typeof Ft == "string" && Ft !== "" || typeof Ft == "number" ? (Ft = "" + Ft, Ot !== null && Ot.tag === 6 ? ($(Dt, Ot.sibling), Ot = rt(Ot, Ft), Ot.return = Dt, Dt = Ot) : ($(Dt, Ot), Ot = Qg(Ft, Dt.mode, Lt), Ot.return = Dt, Dt = Ot), st(Dt)) : $(Dt, Ot);
      }
      return jt;
    }
    var Ug = Og(true), Vg = Og(false), Wg = Uf(null), Xg = null, Yg = null, Zg = null;
    function $g() {
      Zg = Yg = Xg = null;
    }
    function ah(d) {
      var _ = Wg.current;
      E$1(Wg), d._currentValue = _;
    }
    function bh(d, _, $) {
      for (; d !== null; ) {
        var j = d.alternate;
        if ((d.childLanes & _) !== _ ? (d.childLanes |= _, j !== null && (j.childLanes |= _)) : j !== null && (j.childLanes & _) !== _ && (j.childLanes |= _), d === $) break;
        d = d.return;
      }
    }
    function ch(d, _) {
      Xg = d, Zg = Yg = null, d = d.dependencies, d !== null && d.firstContext !== null && (d.lanes & _ && (dh$1 = true), d.firstContext = null);
    }
    function eh(d) {
      var _ = d._currentValue;
      if (Zg !== d) if (d = {
        context: d,
        memoizedValue: _,
        next: null
      }, Yg === null) {
        if (Xg === null) throw Error(p$1(308));
        Yg = d, Xg.dependencies = {
          lanes: 0,
          firstContext: d
        };
      } else Yg = Yg.next = d;
      return _;
    }
    var fh = null;
    function gh(d) {
      fh === null ? fh = [
        d
      ] : fh.push(d);
    }
    function hh(d, _, $, j) {
      var rt = _.interleaved;
      return rt === null ? ($.next = $, gh(_)) : ($.next = rt.next, rt.next = $), _.interleaved = $, ih(d, j);
    }
    function ih(d, _) {
      d.lanes |= _;
      var $ = d.alternate;
      for ($ !== null && ($.lanes |= _), $ = d, d = d.return; d !== null; ) d.childLanes |= _, $ = d.alternate, $ !== null && ($.childLanes |= _), $ = d, d = d.return;
      return $.tag === 3 ? $.stateNode : null;
    }
    var jh = false;
    function kh(d) {
      d.updateQueue = {
        baseState: d.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: 0
        },
        effects: null
      };
    }
    function lh(d, _) {
      d = d.updateQueue, _.updateQueue === d && (_.updateQueue = {
        baseState: d.baseState,
        firstBaseUpdate: d.firstBaseUpdate,
        lastBaseUpdate: d.lastBaseUpdate,
        shared: d.shared,
        effects: d.effects
      });
    }
    function mh(d, _) {
      return {
        eventTime: d,
        lane: _,
        tag: 0,
        payload: null,
        callback: null,
        next: null
      };
    }
    function nh(d, _, $) {
      var j = d.updateQueue;
      if (j === null) return null;
      if (j = j.shared, K$1 & 2) {
        var rt = j.pending;
        return rt === null ? _.next = _ : (_.next = rt.next, rt.next = _), j.pending = _, ih(d, $);
      }
      return rt = j.interleaved, rt === null ? (_.next = _, gh(j)) : (_.next = rt.next, rt.next = _), j.interleaved = _, ih(d, $);
    }
    function oh(d, _, $) {
      if (_ = _.updateQueue, _ !== null && (_ = _.shared, ($ & 4194240) !== 0)) {
        var j = _.lanes;
        j &= d.pendingLanes, $ |= j, _.lanes = $, Cc(d, $);
      }
    }
    function ph(d, _) {
      var $ = d.updateQueue, j = d.alternate;
      if (j !== null && (j = j.updateQueue, $ === j)) {
        var rt = null, et = null;
        if ($ = $.firstBaseUpdate, $ !== null) {
          do {
            var st = {
              eventTime: $.eventTime,
              lane: $.lane,
              tag: $.tag,
              payload: $.payload,
              callback: $.callback,
              next: null
            };
            et === null ? rt = et = st : et = et.next = st, $ = $.next;
          } while ($ !== null);
          et === null ? rt = et = _ : et = et.next = _;
        } else rt = et = _;
        $ = {
          baseState: j.baseState,
          firstBaseUpdate: rt,
          lastBaseUpdate: et,
          shared: j.shared,
          effects: j.effects
        }, d.updateQueue = $;
        return;
      }
      d = $.lastBaseUpdate, d === null ? $.firstBaseUpdate = _ : d.next = _, $.lastBaseUpdate = _;
    }
    function qh(d, _, $, j) {
      var rt = d.updateQueue;
      jh = false;
      var et = rt.firstBaseUpdate, st = rt.lastBaseUpdate, pt = rt.shared.pending;
      if (pt !== null) {
        rt.shared.pending = null;
        var Et = pt, Bt = Et.next;
        Et.next = null, st === null ? et = Bt : st.next = Bt, st = Et;
        var St = d.alternate;
        St !== null && (St = St.updateQueue, pt = St.lastBaseUpdate, pt !== st && (pt === null ? St.firstBaseUpdate = Bt : pt.next = Bt, St.lastBaseUpdate = Et));
      }
      if (et !== null) {
        var $t = rt.baseState;
        st = 0, St = Bt = Et = null, pt = et;
        do {
          var kt = pt.lane, Tt = pt.eventTime;
          if ((j & kt) === kt) {
            St !== null && (St = St.next = {
              eventTime: Tt,
              lane: 0,
              tag: pt.tag,
              payload: pt.payload,
              callback: pt.callback,
              next: null
            });
            e: {
              var Pt = d, It = pt;
              switch (kt = _, Tt = $, It.tag) {
                case 1:
                  if (Pt = It.payload, typeof Pt == "function") {
                    $t = Pt.call(Tt, $t, kt);
                    break e;
                  }
                  $t = Pt;
                  break e;
                case 3:
                  Pt.flags = Pt.flags & -65537 | 128;
                case 0:
                  if (Pt = It.payload, kt = typeof Pt == "function" ? Pt.call(Tt, $t, kt) : Pt, kt == null) break e;
                  $t = A({}, $t, kt);
                  break e;
                case 2:
                  jh = true;
              }
            }
            pt.callback !== null && pt.lane !== 0 && (d.flags |= 64, kt = rt.effects, kt === null ? rt.effects = [
              pt
            ] : kt.push(pt));
          } else Tt = {
            eventTime: Tt,
            lane: kt,
            tag: pt.tag,
            payload: pt.payload,
            callback: pt.callback,
            next: null
          }, St === null ? (Bt = St = Tt, Et = $t) : St = St.next = Tt, st |= kt;
          if (pt = pt.next, pt === null) {
            if (pt = rt.shared.pending, pt === null) break;
            kt = pt, pt = kt.next, kt.next = null, rt.lastBaseUpdate = kt, rt.shared.pending = null;
          }
        } while (true);
        if (St === null && (Et = $t), rt.baseState = Et, rt.firstBaseUpdate = Bt, rt.lastBaseUpdate = St, _ = rt.shared.interleaved, _ !== null) {
          rt = _;
          do
            st |= rt.lane, rt = rt.next;
          while (rt !== _);
        } else et === null && (rt.shared.lanes = 0);
        rh |= st, d.lanes = st, d.memoizedState = $t;
      }
    }
    function sh(d, _, $) {
      if (d = _.effects, _.effects = null, d !== null) for (_ = 0; _ < d.length; _++) {
        var j = d[_], rt = j.callback;
        if (rt !== null) {
          if (j.callback = null, j = $, typeof rt != "function") throw Error(p$1(191, rt));
          rt.call(j);
        }
      }
    }
    var th = {}, uh = Uf(th), vh = Uf(th), wh = Uf(th);
    function xh(d) {
      if (d === th) throw Error(p$1(174));
      return d;
    }
    function yh(d, _) {
      switch (G(wh, _), G(vh, d), G(uh, th), d = _.nodeType, d) {
        case 9:
        case 11:
          _ = (_ = _.documentElement) ? _.namespaceURI : lb(null, "");
          break;
        default:
          d = d === 8 ? _.parentNode : _, _ = d.namespaceURI || null, d = d.tagName, _ = lb(_, d);
      }
      E$1(uh), G(uh, _);
    }
    function zh() {
      E$1(uh), E$1(vh), E$1(wh);
    }
    function Ah(d) {
      xh(wh.current);
      var _ = xh(uh.current), $ = lb(_, d.type);
      _ !== $ && (G(vh, d), G(uh, $));
    }
    function Bh(d) {
      vh.current === d && (E$1(uh), E$1(vh));
    }
    var L = Uf(0);
    function Ch(d) {
      for (var _ = d; _ !== null; ) {
        if (_.tag === 13) {
          var $ = _.memoizedState;
          if ($ !== null && ($ = $.dehydrated, $ === null || $.data === "$?" || $.data === "$!")) return _;
        } else if (_.tag === 19 && _.memoizedProps.revealOrder !== void 0) {
          if (_.flags & 128) return _;
        } else if (_.child !== null) {
          _.child.return = _, _ = _.child;
          continue;
        }
        if (_ === d) break;
        for (; _.sibling === null; ) {
          if (_.return === null || _.return === d) return null;
          _ = _.return;
        }
        _.sibling.return = _.return, _ = _.sibling;
      }
      return null;
    }
    var Dh = [];
    function Eh() {
      for (var d = 0; d < Dh.length; d++) Dh[d]._workInProgressVersionPrimary = null;
      Dh.length = 0;
    }
    var Fh = ua.ReactCurrentDispatcher, Gh = ua.ReactCurrentBatchConfig, Hh = 0, M = null, N = null, O = null, Ih = false, Jh = false, Kh = 0, Lh = 0;
    function P$1() {
      throw Error(p$1(321));
    }
    function Mh(d, _) {
      if (_ === null) return false;
      for (var $ = 0; $ < _.length && $ < d.length; $++) if (!He(d[$], _[$])) return false;
      return true;
    }
    function Nh(d, _, $, j, rt, et) {
      if (Hh = et, M = _, _.memoizedState = null, _.updateQueue = null, _.lanes = 0, Fh.current = d === null || d.memoizedState === null ? Oh : Ph, d = $(j, rt), Jh) {
        et = 0;
        do {
          if (Jh = false, Kh = 0, 25 <= et) throw Error(p$1(301));
          et += 1, O = N = null, _.updateQueue = null, Fh.current = Qh, d = $(j, rt);
        } while (Jh);
      }
      if (Fh.current = Rh, _ = N !== null && N.next !== null, Hh = 0, O = N = M = null, Ih = false, _) throw Error(p$1(300));
      return d;
    }
    function Sh() {
      var d = Kh !== 0;
      return Kh = 0, d;
    }
    function Th() {
      var d = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return O === null ? M.memoizedState = O = d : O = O.next = d, O;
    }
    function Uh() {
      if (N === null) {
        var d = M.alternate;
        d = d !== null ? d.memoizedState : null;
      } else d = N.next;
      var _ = O === null ? M.memoizedState : O.next;
      if (_ !== null) O = _, N = d;
      else {
        if (d === null) throw Error(p$1(310));
        N = d, d = {
          memoizedState: N.memoizedState,
          baseState: N.baseState,
          baseQueue: N.baseQueue,
          queue: N.queue,
          next: null
        }, O === null ? M.memoizedState = O = d : O = O.next = d;
      }
      return O;
    }
    function Vh(d, _) {
      return typeof _ == "function" ? _(d) : _;
    }
    function Wh(d) {
      var _ = Uh(), $ = _.queue;
      if ($ === null) throw Error(p$1(311));
      $.lastRenderedReducer = d;
      var j = N, rt = j.baseQueue, et = $.pending;
      if (et !== null) {
        if (rt !== null) {
          var st = rt.next;
          rt.next = et.next, et.next = st;
        }
        j.baseQueue = rt = et, $.pending = null;
      }
      if (rt !== null) {
        et = rt.next, j = j.baseState;
        var pt = st = null, Et = null, Bt = et;
        do {
          var St = Bt.lane;
          if ((Hh & St) === St) Et !== null && (Et = Et.next = {
            lane: 0,
            action: Bt.action,
            hasEagerState: Bt.hasEagerState,
            eagerState: Bt.eagerState,
            next: null
          }), j = Bt.hasEagerState ? Bt.eagerState : d(j, Bt.action);
          else {
            var $t = {
              lane: St,
              action: Bt.action,
              hasEagerState: Bt.hasEagerState,
              eagerState: Bt.eagerState,
              next: null
            };
            Et === null ? (pt = Et = $t, st = j) : Et = Et.next = $t, M.lanes |= St, rh |= St;
          }
          Bt = Bt.next;
        } while (Bt !== null && Bt !== et);
        Et === null ? st = j : Et.next = pt, He(j, _.memoizedState) || (dh$1 = true), _.memoizedState = j, _.baseState = st, _.baseQueue = Et, $.lastRenderedState = j;
      }
      if (d = $.interleaved, d !== null) {
        rt = d;
        do
          et = rt.lane, M.lanes |= et, rh |= et, rt = rt.next;
        while (rt !== d);
      } else rt === null && ($.lanes = 0);
      return [
        _.memoizedState,
        $.dispatch
      ];
    }
    function Xh(d) {
      var _ = Uh(), $ = _.queue;
      if ($ === null) throw Error(p$1(311));
      $.lastRenderedReducer = d;
      var j = $.dispatch, rt = $.pending, et = _.memoizedState;
      if (rt !== null) {
        $.pending = null;
        var st = rt = rt.next;
        do
          et = d(et, st.action), st = st.next;
        while (st !== rt);
        He(et, _.memoizedState) || (dh$1 = true), _.memoizedState = et, _.baseQueue === null && (_.baseState = et), $.lastRenderedState = et;
      }
      return [
        et,
        j
      ];
    }
    function Yh() {
    }
    function Zh(d, _) {
      var $ = M, j = Uh(), rt = _(), et = !He(j.memoizedState, rt);
      if (et && (j.memoizedState = rt, dh$1 = true), j = j.queue, $h(ai.bind(null, $, j, d), [
        d
      ]), j.getSnapshot !== _ || et || O !== null && O.memoizedState.tag & 1) {
        if ($.flags |= 2048, bi(9, ci.bind(null, $, j, rt, _), void 0, null), Q$1 === null) throw Error(p$1(349));
        Hh & 30 || di($, _, rt);
      }
      return rt;
    }
    function di(d, _, $) {
      d.flags |= 16384, d = {
        getSnapshot: _,
        value: $
      }, _ = M.updateQueue, _ === null ? (_ = {
        lastEffect: null,
        stores: null
      }, M.updateQueue = _, _.stores = [
        d
      ]) : ($ = _.stores, $ === null ? _.stores = [
        d
      ] : $.push(d));
    }
    function ci(d, _, $, j) {
      _.value = $, _.getSnapshot = j, ei(_) && fi(d);
    }
    function ai(d, _, $) {
      return $(function() {
        ei(_) && fi(d);
      });
    }
    function ei(d) {
      var _ = d.getSnapshot;
      d = d.value;
      try {
        var $ = _();
        return !He(d, $);
      } catch {
        return true;
      }
    }
    function fi(d) {
      var _ = ih(d, 1);
      _ !== null && gi(_, d, 1, -1);
    }
    function hi(d) {
      var _ = Th();
      return typeof d == "function" && (d = d()), _.memoizedState = _.baseState = d, d = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: Vh,
        lastRenderedState: d
      }, _.queue = d, d = d.dispatch = ii.bind(null, M, d), [
        _.memoizedState,
        d
      ];
    }
    function bi(d, _, $, j) {
      return d = {
        tag: d,
        create: _,
        destroy: $,
        deps: j,
        next: null
      }, _ = M.updateQueue, _ === null ? (_ = {
        lastEffect: null,
        stores: null
      }, M.updateQueue = _, _.lastEffect = d.next = d) : ($ = _.lastEffect, $ === null ? _.lastEffect = d.next = d : (j = $.next, $.next = d, d.next = j, _.lastEffect = d)), d;
    }
    function ji() {
      return Uh().memoizedState;
    }
    function ki(d, _, $, j) {
      var rt = Th();
      M.flags |= d, rt.memoizedState = bi(1 | _, $, void 0, j === void 0 ? null : j);
    }
    function li(d, _, $, j) {
      var rt = Uh();
      j = j === void 0 ? null : j;
      var et = void 0;
      if (N !== null) {
        var st = N.memoizedState;
        if (et = st.destroy, j !== null && Mh(j, st.deps)) {
          rt.memoizedState = bi(_, $, et, j);
          return;
        }
      }
      M.flags |= d, rt.memoizedState = bi(1 | _, $, et, j);
    }
    function mi(d, _) {
      return ki(8390656, 8, d, _);
    }
    function $h(d, _) {
      return li(2048, 8, d, _);
    }
    function ni(d, _) {
      return li(4, 2, d, _);
    }
    function oi(d, _) {
      return li(4, 4, d, _);
    }
    function pi(d, _) {
      if (typeof _ == "function") return d = d(), _(d), function() {
        _(null);
      };
      if (_ != null) return d = d(), _.current = d, function() {
        _.current = null;
      };
    }
    function qi(d, _, $) {
      return $ = $ != null ? $.concat([
        d
      ]) : null, li(4, 4, pi.bind(null, _, d), $);
    }
    function ri() {
    }
    function si(d, _) {
      var $ = Uh();
      _ = _ === void 0 ? null : _;
      var j = $.memoizedState;
      return j !== null && _ !== null && Mh(_, j[1]) ? j[0] : ($.memoizedState = [
        d,
        _
      ], d);
    }
    function ti(d, _) {
      var $ = Uh();
      _ = _ === void 0 ? null : _;
      var j = $.memoizedState;
      return j !== null && _ !== null && Mh(_, j[1]) ? j[0] : (d = d(), $.memoizedState = [
        d,
        _
      ], d);
    }
    function ui(d, _, $) {
      return Hh & 21 ? (He($, _) || ($ = yc(), M.lanes |= $, rh |= $, d.baseState = true), _) : (d.baseState && (d.baseState = false, dh$1 = true), d.memoizedState = $);
    }
    function vi(d, _) {
      var $ = C;
      C = $ !== 0 && 4 > $ ? $ : 4, d(true);
      var j = Gh.transition;
      Gh.transition = {};
      try {
        d(false), _();
      } finally {
        C = $, Gh.transition = j;
      }
    }
    function wi() {
      return Uh().memoizedState;
    }
    function xi(d, _, $) {
      var j = yi(d);
      if ($ = {
        lane: j,
        action: $,
        hasEagerState: false,
        eagerState: null,
        next: null
      }, zi(d)) Ai(_, $);
      else if ($ = hh(d, _, $, j), $ !== null) {
        var rt = R$1();
        gi($, d, j, rt), Bi($, _, j);
      }
    }
    function ii(d, _, $) {
      var j = yi(d), rt = {
        lane: j,
        action: $,
        hasEagerState: false,
        eagerState: null,
        next: null
      };
      if (zi(d)) Ai(_, rt);
      else {
        var et = d.alternate;
        if (d.lanes === 0 && (et === null || et.lanes === 0) && (et = _.lastRenderedReducer, et !== null)) try {
          var st = _.lastRenderedState, pt = et(st, $);
          if (rt.hasEagerState = true, rt.eagerState = pt, He(pt, st)) {
            var Et = _.interleaved;
            Et === null ? (rt.next = rt, gh(_)) : (rt.next = Et.next, Et.next = rt), _.interleaved = rt;
            return;
          }
        } catch {
        } finally {
        }
        $ = hh(d, _, rt, j), $ !== null && (rt = R$1(), gi($, d, j, rt), Bi($, _, j));
      }
    }
    function zi(d) {
      var _ = d.alternate;
      return d === M || _ !== null && _ === M;
    }
    function Ai(d, _) {
      Jh = Ih = true;
      var $ = d.pending;
      $ === null ? _.next = _ : (_.next = $.next, $.next = _), d.pending = _;
    }
    function Bi(d, _, $) {
      if ($ & 4194240) {
        var j = _.lanes;
        j &= d.pendingLanes, $ |= j, _.lanes = $, Cc(d, $);
      }
    }
    var Rh = {
      readContext: eh,
      useCallback: P$1,
      useContext: P$1,
      useEffect: P$1,
      useImperativeHandle: P$1,
      useInsertionEffect: P$1,
      useLayoutEffect: P$1,
      useMemo: P$1,
      useReducer: P$1,
      useRef: P$1,
      useState: P$1,
      useDebugValue: P$1,
      useDeferredValue: P$1,
      useTransition: P$1,
      useMutableSource: P$1,
      useSyncExternalStore: P$1,
      useId: P$1,
      unstable_isNewReconciler: false
    }, Oh = {
      readContext: eh,
      useCallback: function(d, _) {
        return Th().memoizedState = [
          d,
          _ === void 0 ? null : _
        ], d;
      },
      useContext: eh,
      useEffect: mi,
      useImperativeHandle: function(d, _, $) {
        return $ = $ != null ? $.concat([
          d
        ]) : null, ki(4194308, 4, pi.bind(null, _, d), $);
      },
      useLayoutEffect: function(d, _) {
        return ki(4194308, 4, d, _);
      },
      useInsertionEffect: function(d, _) {
        return ki(4, 2, d, _);
      },
      useMemo: function(d, _) {
        var $ = Th();
        return _ = _ === void 0 ? null : _, d = d(), $.memoizedState = [
          d,
          _
        ], d;
      },
      useReducer: function(d, _, $) {
        var j = Th();
        return _ = $ !== void 0 ? $(_) : _, j.memoizedState = j.baseState = _, d = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: d,
          lastRenderedState: _
        }, j.queue = d, d = d.dispatch = xi.bind(null, M, d), [
          j.memoizedState,
          d
        ];
      },
      useRef: function(d) {
        var _ = Th();
        return d = {
          current: d
        }, _.memoizedState = d;
      },
      useState: hi,
      useDebugValue: ri,
      useDeferredValue: function(d) {
        return Th().memoizedState = d;
      },
      useTransition: function() {
        var d = hi(false), _ = d[0];
        return d = vi.bind(null, d[1]), Th().memoizedState = d, [
          _,
          d
        ];
      },
      useMutableSource: function() {
      },
      useSyncExternalStore: function(d, _, $) {
        var j = M, rt = Th();
        if (I) {
          if ($ === void 0) throw Error(p$1(407));
          $ = $();
        } else {
          if ($ = _(), Q$1 === null) throw Error(p$1(349));
          Hh & 30 || di(j, _, $);
        }
        rt.memoizedState = $;
        var et = {
          value: $,
          getSnapshot: _
        };
        return rt.queue = et, mi(ai.bind(null, j, et, d), [
          d
        ]), j.flags |= 2048, bi(9, ci.bind(null, j, et, $, _), void 0, null), $;
      },
      useId: function() {
        var d = Th(), _ = Q$1.identifierPrefix;
        if (I) {
          var $ = sg, j = rg;
          $ = (j & ~(1 << 32 - oc(j) - 1)).toString(32) + $, _ = ":" + _ + "R" + $, $ = Kh++, 0 < $ && (_ += "H" + $.toString(32)), _ += ":";
        } else $ = Lh++, _ = ":" + _ + "r" + $.toString(32) + ":";
        return d.memoizedState = _;
      },
      unstable_isNewReconciler: false
    }, Ph = {
      readContext: eh,
      useCallback: si,
      useContext: eh,
      useEffect: $h,
      useImperativeHandle: qi,
      useInsertionEffect: ni,
      useLayoutEffect: oi,
      useMemo: ti,
      useReducer: Wh,
      useRef: ji,
      useState: function() {
        return Wh(Vh);
      },
      useDebugValue: ri,
      useDeferredValue: function(d) {
        var _ = Uh();
        return ui(_, N.memoizedState, d);
      },
      useTransition: function() {
        var d = Wh(Vh)[0], _ = Uh().memoizedState;
        return [
          d,
          _
        ];
      },
      useMutableSource: Yh,
      useSyncExternalStore: Zh,
      useId: wi,
      unstable_isNewReconciler: false
    }, Qh = {
      readContext: eh,
      useCallback: si,
      useContext: eh,
      useEffect: $h,
      useImperativeHandle: qi,
      useInsertionEffect: ni,
      useLayoutEffect: oi,
      useMemo: ti,
      useReducer: Xh,
      useRef: ji,
      useState: function() {
        return Xh(Vh);
      },
      useDebugValue: ri,
      useDeferredValue: function(d) {
        var _ = Uh();
        return N === null ? _.memoizedState = d : ui(_, N.memoizedState, d);
      },
      useTransition: function() {
        var d = Xh(Vh)[0], _ = Uh().memoizedState;
        return [
          d,
          _
        ];
      },
      useMutableSource: Yh,
      useSyncExternalStore: Zh,
      useId: wi,
      unstable_isNewReconciler: false
    };
    function Ci(d, _) {
      if (d && d.defaultProps) {
        _ = A({}, _), d = d.defaultProps;
        for (var $ in d) _[$] === void 0 && (_[$] = d[$]);
        return _;
      }
      return _;
    }
    function Di(d, _, $, j) {
      _ = d.memoizedState, $ = $(j, _), $ = $ == null ? _ : A({}, _, $), d.memoizedState = $, d.lanes === 0 && (d.updateQueue.baseState = $);
    }
    var Ei = {
      isMounted: function(d) {
        return (d = d._reactInternals) ? Vb(d) === d : false;
      },
      enqueueSetState: function(d, _, $) {
        d = d._reactInternals;
        var j = R$1(), rt = yi(d), et = mh(j, rt);
        et.payload = _, $ != null && (et.callback = $), _ = nh(d, et, rt), _ !== null && (gi(_, d, rt, j), oh(_, d, rt));
      },
      enqueueReplaceState: function(d, _, $) {
        d = d._reactInternals;
        var j = R$1(), rt = yi(d), et = mh(j, rt);
        et.tag = 1, et.payload = _, $ != null && (et.callback = $), _ = nh(d, et, rt), _ !== null && (gi(_, d, rt, j), oh(_, d, rt));
      },
      enqueueForceUpdate: function(d, _) {
        d = d._reactInternals;
        var $ = R$1(), j = yi(d), rt = mh($, j);
        rt.tag = 2, _ != null && (rt.callback = _), _ = nh(d, rt, j), _ !== null && (gi(_, d, j, $), oh(_, d, j));
      }
    };
    function Fi(d, _, $, j, rt, et, st) {
      return d = d.stateNode, typeof d.shouldComponentUpdate == "function" ? d.shouldComponentUpdate(j, et, st) : _.prototype && _.prototype.isPureReactComponent ? !Ie$1($, j) || !Ie$1(rt, et) : true;
    }
    function Gi(d, _, $) {
      var j = false, rt = Vf, et = _.contextType;
      return typeof et == "object" && et !== null ? et = eh(et) : (rt = Zf(_) ? Xf : H.current, j = _.contextTypes, et = (j = j != null) ? Yf(d, rt) : Vf), _ = new _($, et), d.memoizedState = _.state !== null && _.state !== void 0 ? _.state : null, _.updater = Ei, d.stateNode = _, _._reactInternals = d, j && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = rt, d.__reactInternalMemoizedMaskedChildContext = et), _;
    }
    function Hi(d, _, $, j) {
      d = _.state, typeof _.componentWillReceiveProps == "function" && _.componentWillReceiveProps($, j), typeof _.UNSAFE_componentWillReceiveProps == "function" && _.UNSAFE_componentWillReceiveProps($, j), _.state !== d && Ei.enqueueReplaceState(_, _.state, null);
    }
    function Ii(d, _, $, j) {
      var rt = d.stateNode;
      rt.props = $, rt.state = d.memoizedState, rt.refs = {}, kh(d);
      var et = _.contextType;
      typeof et == "object" && et !== null ? rt.context = eh(et) : (et = Zf(_) ? Xf : H.current, rt.context = Yf(d, et)), rt.state = d.memoizedState, et = _.getDerivedStateFromProps, typeof et == "function" && (Di(d, _, et, $), rt.state = d.memoizedState), typeof _.getDerivedStateFromProps == "function" || typeof rt.getSnapshotBeforeUpdate == "function" || typeof rt.UNSAFE_componentWillMount != "function" && typeof rt.componentWillMount != "function" || (_ = rt.state, typeof rt.componentWillMount == "function" && rt.componentWillMount(), typeof rt.UNSAFE_componentWillMount == "function" && rt.UNSAFE_componentWillMount(), _ !== rt.state && Ei.enqueueReplaceState(rt, rt.state, null), qh(d, $, rt, j), rt.state = d.memoizedState), typeof rt.componentDidMount == "function" && (d.flags |= 4194308);
    }
    function Ji(d, _) {
      try {
        var $ = "", j = _;
        do
          $ += Pa(j), j = j.return;
        while (j);
        var rt = $;
      } catch (et) {
        rt = `
Error generating stack: ` + et.message + `
` + et.stack;
      }
      return {
        value: d,
        source: _,
        stack: rt,
        digest: null
      };
    }
    function Ki(d, _, $) {
      return {
        value: d,
        source: null,
        stack: $ ?? null,
        digest: _ ?? null
      };
    }
    function Li(d, _) {
      try {
        console.error(_.value);
      } catch ($) {
        setTimeout(function() {
          throw $;
        });
      }
    }
    var Mi = typeof WeakMap == "function" ? WeakMap : Map;
    function Ni(d, _, $) {
      $ = mh(-1, $), $.tag = 3, $.payload = {
        element: null
      };
      var j = _.value;
      return $.callback = function() {
        Oi || (Oi = true, Pi = j), Li(d, _);
      }, $;
    }
    function Qi(d, _, $) {
      $ = mh(-1, $), $.tag = 3;
      var j = d.type.getDerivedStateFromError;
      if (typeof j == "function") {
        var rt = _.value;
        $.payload = function() {
          return j(rt);
        }, $.callback = function() {
          Li(d, _);
        };
      }
      var et = d.stateNode;
      return et !== null && typeof et.componentDidCatch == "function" && ($.callback = function() {
        Li(d, _), typeof j != "function" && (Ri === null ? Ri = /* @__PURE__ */ new Set([
          this
        ]) : Ri.add(this));
        var st = _.stack;
        this.componentDidCatch(_.value, {
          componentStack: st !== null ? st : ""
        });
      }), $;
    }
    function Si(d, _, $) {
      var j = d.pingCache;
      if (j === null) {
        j = d.pingCache = new Mi();
        var rt = /* @__PURE__ */ new Set();
        j.set(_, rt);
      } else rt = j.get(_), rt === void 0 && (rt = /* @__PURE__ */ new Set(), j.set(_, rt));
      rt.has($) || (rt.add($), d = Ti.bind(null, d, _, $), _.then(d, d));
    }
    function Ui(d) {
      do {
        var _;
        if ((_ = d.tag === 13) && (_ = d.memoizedState, _ = _ !== null ? _.dehydrated !== null : true), _) return d;
        d = d.return;
      } while (d !== null);
      return null;
    }
    function Vi(d, _, $, j, rt) {
      return d.mode & 1 ? (d.flags |= 65536, d.lanes = rt, d) : (d === _ ? d.flags |= 65536 : (d.flags |= 128, $.flags |= 131072, $.flags &= -52805, $.tag === 1 && ($.alternate === null ? $.tag = 17 : (_ = mh(-1, 1), _.tag = 2, nh($, _, 1))), $.lanes |= 1), d);
    }
    var Wi = ua.ReactCurrentOwner, dh$1 = false;
    function Xi(d, _, $, j) {
      _.child = d === null ? Vg(_, null, $, j) : Ug(_, d.child, $, j);
    }
    function Yi(d, _, $, j, rt) {
      $ = $.render;
      var et = _.ref;
      return ch(_, rt), j = Nh(d, _, $, j, et, rt), $ = Sh(), d !== null && !dh$1 ? (_.updateQueue = d.updateQueue, _.flags &= -2053, d.lanes &= ~rt, Zi(d, _, rt)) : (I && $ && vg(_), _.flags |= 1, Xi(d, _, j, rt), _.child);
    }
    function $i(d, _, $, j, rt) {
      if (d === null) {
        var et = $.type;
        return typeof et == "function" && !aj(et) && et.defaultProps === void 0 && $.compare === null && $.defaultProps === void 0 ? (_.tag = 15, _.type = et, bj(d, _, et, j, rt)) : (d = Rg($.type, null, j, _, _.mode, rt), d.ref = _.ref, d.return = _, _.child = d);
      }
      if (et = d.child, !(d.lanes & rt)) {
        var st = et.memoizedProps;
        if ($ = $.compare, $ = $ !== null ? $ : Ie$1, $(st, j) && d.ref === _.ref) return Zi(d, _, rt);
      }
      return _.flags |= 1, d = Pg(et, j), d.ref = _.ref, d.return = _, _.child = d;
    }
    function bj(d, _, $, j, rt) {
      if (d !== null) {
        var et = d.memoizedProps;
        if (Ie$1(et, j) && d.ref === _.ref) if (dh$1 = false, _.pendingProps = j = et, (d.lanes & rt) !== 0) d.flags & 131072 && (dh$1 = true);
        else return _.lanes = d.lanes, Zi(d, _, rt);
      }
      return cj(d, _, $, j, rt);
    }
    function dj(d, _, $) {
      var j = _.pendingProps, rt = j.children, et = d !== null ? d.memoizedState : null;
      if (j.mode === "hidden") if (!(_.mode & 1)) _.memoizedState = {
        baseLanes: 0,
        cachePool: null,
        transitions: null
      }, G(ej, fj), fj |= $;
      else {
        if (!($ & 1073741824)) return d = et !== null ? et.baseLanes | $ : $, _.lanes = _.childLanes = 1073741824, _.memoizedState = {
          baseLanes: d,
          cachePool: null,
          transitions: null
        }, _.updateQueue = null, G(ej, fj), fj |= d, null;
        _.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null
        }, j = et !== null ? et.baseLanes : $, G(ej, fj), fj |= j;
      }
      else et !== null ? (j = et.baseLanes | $, _.memoizedState = null) : j = $, G(ej, fj), fj |= j;
      return Xi(d, _, rt, $), _.child;
    }
    function gj(d, _) {
      var $ = _.ref;
      (d === null && $ !== null || d !== null && d.ref !== $) && (_.flags |= 512, _.flags |= 2097152);
    }
    function cj(d, _, $, j, rt) {
      var et = Zf($) ? Xf : H.current;
      return et = Yf(_, et), ch(_, rt), $ = Nh(d, _, $, j, et, rt), j = Sh(), d !== null && !dh$1 ? (_.updateQueue = d.updateQueue, _.flags &= -2053, d.lanes &= ~rt, Zi(d, _, rt)) : (I && j && vg(_), _.flags |= 1, Xi(d, _, $, rt), _.child);
    }
    function hj(d, _, $, j, rt) {
      if (Zf($)) {
        var et = true;
        cg(_);
      } else et = false;
      if (ch(_, rt), _.stateNode === null) ij(d, _), Gi(_, $, j), Ii(_, $, j, rt), j = true;
      else if (d === null) {
        var st = _.stateNode, pt = _.memoizedProps;
        st.props = pt;
        var Et = st.context, Bt = $.contextType;
        typeof Bt == "object" && Bt !== null ? Bt = eh(Bt) : (Bt = Zf($) ? Xf : H.current, Bt = Yf(_, Bt));
        var St = $.getDerivedStateFromProps, $t = typeof St == "function" || typeof st.getSnapshotBeforeUpdate == "function";
        $t || typeof st.UNSAFE_componentWillReceiveProps != "function" && typeof st.componentWillReceiveProps != "function" || (pt !== j || Et !== Bt) && Hi(_, st, j, Bt), jh = false;
        var kt = _.memoizedState;
        st.state = kt, qh(_, j, st, rt), Et = _.memoizedState, pt !== j || kt !== Et || Wf.current || jh ? (typeof St == "function" && (Di(_, $, St, j), Et = _.memoizedState), (pt = jh || Fi(_, $, pt, j, kt, Et, Bt)) ? ($t || typeof st.UNSAFE_componentWillMount != "function" && typeof st.componentWillMount != "function" || (typeof st.componentWillMount == "function" && st.componentWillMount(), typeof st.UNSAFE_componentWillMount == "function" && st.UNSAFE_componentWillMount()), typeof st.componentDidMount == "function" && (_.flags |= 4194308)) : (typeof st.componentDidMount == "function" && (_.flags |= 4194308), _.memoizedProps = j, _.memoizedState = Et), st.props = j, st.state = Et, st.context = Bt, j = pt) : (typeof st.componentDidMount == "function" && (_.flags |= 4194308), j = false);
      } else {
        st = _.stateNode, lh(d, _), pt = _.memoizedProps, Bt = _.type === _.elementType ? pt : Ci(_.type, pt), st.props = Bt, $t = _.pendingProps, kt = st.context, Et = $.contextType, typeof Et == "object" && Et !== null ? Et = eh(Et) : (Et = Zf($) ? Xf : H.current, Et = Yf(_, Et));
        var Tt = $.getDerivedStateFromProps;
        (St = typeof Tt == "function" || typeof st.getSnapshotBeforeUpdate == "function") || typeof st.UNSAFE_componentWillReceiveProps != "function" && typeof st.componentWillReceiveProps != "function" || (pt !== $t || kt !== Et) && Hi(_, st, j, Et), jh = false, kt = _.memoizedState, st.state = kt, qh(_, j, st, rt);
        var Pt = _.memoizedState;
        pt !== $t || kt !== Pt || Wf.current || jh ? (typeof Tt == "function" && (Di(_, $, Tt, j), Pt = _.memoizedState), (Bt = jh || Fi(_, $, Bt, j, kt, Pt, Et) || false) ? (St || typeof st.UNSAFE_componentWillUpdate != "function" && typeof st.componentWillUpdate != "function" || (typeof st.componentWillUpdate == "function" && st.componentWillUpdate(j, Pt, Et), typeof st.UNSAFE_componentWillUpdate == "function" && st.UNSAFE_componentWillUpdate(j, Pt, Et)), typeof st.componentDidUpdate == "function" && (_.flags |= 4), typeof st.getSnapshotBeforeUpdate == "function" && (_.flags |= 1024)) : (typeof st.componentDidUpdate != "function" || pt === d.memoizedProps && kt === d.memoizedState || (_.flags |= 4), typeof st.getSnapshotBeforeUpdate != "function" || pt === d.memoizedProps && kt === d.memoizedState || (_.flags |= 1024), _.memoizedProps = j, _.memoizedState = Pt), st.props = j, st.state = Pt, st.context = Et, j = Bt) : (typeof st.componentDidUpdate != "function" || pt === d.memoizedProps && kt === d.memoizedState || (_.flags |= 4), typeof st.getSnapshotBeforeUpdate != "function" || pt === d.memoizedProps && kt === d.memoizedState || (_.flags |= 1024), j = false);
      }
      return jj(d, _, $, j, et, rt);
    }
    function jj(d, _, $, j, rt, et) {
      gj(d, _);
      var st = (_.flags & 128) !== 0;
      if (!j && !st) return rt && dg(_, $, false), Zi(d, _, et);
      j = _.stateNode, Wi.current = _;
      var pt = st && typeof $.getDerivedStateFromError != "function" ? null : j.render();
      return _.flags |= 1, d !== null && st ? (_.child = Ug(_, d.child, null, et), _.child = Ug(_, null, pt, et)) : Xi(d, _, pt, et), _.memoizedState = j.state, rt && dg(_, $, true), _.child;
    }
    function kj(d) {
      var _ = d.stateNode;
      _.pendingContext ? ag(d, _.pendingContext, _.pendingContext !== _.context) : _.context && ag(d, _.context, false), yh(d, _.containerInfo);
    }
    function lj(d, _, $, j, rt) {
      return Ig(), Jg(rt), _.flags |= 256, Xi(d, _, $, j), _.child;
    }
    var mj = {
      dehydrated: null,
      treeContext: null,
      retryLane: 0
    };
    function nj(d) {
      return {
        baseLanes: d,
        cachePool: null,
        transitions: null
      };
    }
    function oj(d, _, $) {
      var j = _.pendingProps, rt = L.current, et = false, st = (_.flags & 128) !== 0, pt;
      if ((pt = st) || (pt = d !== null && d.memoizedState === null ? false : (rt & 2) !== 0), pt ? (et = true, _.flags &= -129) : (d === null || d.memoizedState !== null) && (rt |= 1), G(L, rt & 1), d === null) return Eg(_), d = _.memoizedState, d !== null && (d = d.dehydrated, d !== null) ? (_.mode & 1 ? d.data === "$!" ? _.lanes = 8 : _.lanes = 1073741824 : _.lanes = 1, null) : (st = j.children, d = j.fallback, et ? (j = _.mode, et = _.child, st = {
        mode: "hidden",
        children: st
      }, !(j & 1) && et !== null ? (et.childLanes = 0, et.pendingProps = st) : et = pj(st, j, 0, null), d = Tg(d, j, $, null), et.return = _, d.return = _, et.sibling = d, _.child = et, _.child.memoizedState = nj($), _.memoizedState = mj, d) : qj(_, st));
      if (rt = d.memoizedState, rt !== null && (pt = rt.dehydrated, pt !== null)) return rj(d, _, st, j, pt, rt, $);
      if (et) {
        et = j.fallback, st = _.mode, rt = d.child, pt = rt.sibling;
        var Et = {
          mode: "hidden",
          children: j.children
        };
        return !(st & 1) && _.child !== rt ? (j = _.child, j.childLanes = 0, j.pendingProps = Et, _.deletions = null) : (j = Pg(rt, Et), j.subtreeFlags = rt.subtreeFlags & 14680064), pt !== null ? et = Pg(pt, et) : (et = Tg(et, st, $, null), et.flags |= 2), et.return = _, j.return = _, j.sibling = et, _.child = j, j = et, et = _.child, st = d.child.memoizedState, st = st === null ? nj($) : {
          baseLanes: st.baseLanes | $,
          cachePool: null,
          transitions: st.transitions
        }, et.memoizedState = st, et.childLanes = d.childLanes & ~$, _.memoizedState = mj, j;
      }
      return et = d.child, d = et.sibling, j = Pg(et, {
        mode: "visible",
        children: j.children
      }), !(_.mode & 1) && (j.lanes = $), j.return = _, j.sibling = null, d !== null && ($ = _.deletions, $ === null ? (_.deletions = [
        d
      ], _.flags |= 16) : $.push(d)), _.child = j, _.memoizedState = null, j;
    }
    function qj(d, _) {
      return _ = pj({
        mode: "visible",
        children: _
      }, d.mode, 0, null), _.return = d, d.child = _;
    }
    function sj(d, _, $, j) {
      return j !== null && Jg(j), Ug(_, d.child, null, $), d = qj(_, _.pendingProps.children), d.flags |= 2, _.memoizedState = null, d;
    }
    function rj(d, _, $, j, rt, et, st) {
      if ($) return _.flags & 256 ? (_.flags &= -257, j = Ki(Error(p$1(422))), sj(d, _, st, j)) : _.memoizedState !== null ? (_.child = d.child, _.flags |= 128, null) : (et = j.fallback, rt = _.mode, j = pj({
        mode: "visible",
        children: j.children
      }, rt, 0, null), et = Tg(et, rt, st, null), et.flags |= 2, j.return = _, et.return = _, j.sibling = et, _.child = j, _.mode & 1 && Ug(_, d.child, null, st), _.child.memoizedState = nj(st), _.memoizedState = mj, et);
      if (!(_.mode & 1)) return sj(d, _, st, null);
      if (rt.data === "$!") {
        if (j = rt.nextSibling && rt.nextSibling.dataset, j) var pt = j.dgst;
        return j = pt, et = Error(p$1(419)), j = Ki(et, j, void 0), sj(d, _, st, j);
      }
      if (pt = (st & d.childLanes) !== 0, dh$1 || pt) {
        if (j = Q$1, j !== null) {
          switch (st & -st) {
            case 4:
              rt = 2;
              break;
            case 16:
              rt = 8;
              break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              rt = 32;
              break;
            case 536870912:
              rt = 268435456;
              break;
            default:
              rt = 0;
          }
          rt = rt & (j.suspendedLanes | st) ? 0 : rt, rt !== 0 && rt !== et.retryLane && (et.retryLane = rt, ih(d, rt), gi(j, d, rt, -1));
        }
        return tj(), j = Ki(Error(p$1(421))), sj(d, _, st, j);
      }
      return rt.data === "$?" ? (_.flags |= 128, _.child = d.child, _ = uj.bind(null, d), rt._reactRetry = _, null) : (d = et.treeContext, yg = Lf(rt.nextSibling), xg = _, I = true, zg = null, d !== null && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = d.id, sg = d.overflow, qg = _), _ = qj(_, j.children), _.flags |= 4096, _);
    }
    function vj(d, _, $) {
      d.lanes |= _;
      var j = d.alternate;
      j !== null && (j.lanes |= _), bh(d.return, _, $);
    }
    function wj(d, _, $, j, rt) {
      var et = d.memoizedState;
      et === null ? d.memoizedState = {
        isBackwards: _,
        rendering: null,
        renderingStartTime: 0,
        last: j,
        tail: $,
        tailMode: rt
      } : (et.isBackwards = _, et.rendering = null, et.renderingStartTime = 0, et.last = j, et.tail = $, et.tailMode = rt);
    }
    function xj(d, _, $) {
      var j = _.pendingProps, rt = j.revealOrder, et = j.tail;
      if (Xi(d, _, j.children, $), j = L.current, j & 2) j = j & 1 | 2, _.flags |= 128;
      else {
        if (d !== null && d.flags & 128) e: for (d = _.child; d !== null; ) {
          if (d.tag === 13) d.memoizedState !== null && vj(d, $, _);
          else if (d.tag === 19) vj(d, $, _);
          else if (d.child !== null) {
            d.child.return = d, d = d.child;
            continue;
          }
          if (d === _) break e;
          for (; d.sibling === null; ) {
            if (d.return === null || d.return === _) break e;
            d = d.return;
          }
          d.sibling.return = d.return, d = d.sibling;
        }
        j &= 1;
      }
      if (G(L, j), !(_.mode & 1)) _.memoizedState = null;
      else switch (rt) {
        case "forwards":
          for ($ = _.child, rt = null; $ !== null; ) d = $.alternate, d !== null && Ch(d) === null && (rt = $), $ = $.sibling;
          $ = rt, $ === null ? (rt = _.child, _.child = null) : (rt = $.sibling, $.sibling = null), wj(_, false, rt, $, et);
          break;
        case "backwards":
          for ($ = null, rt = _.child, _.child = null; rt !== null; ) {
            if (d = rt.alternate, d !== null && Ch(d) === null) {
              _.child = rt;
              break;
            }
            d = rt.sibling, rt.sibling = $, $ = rt, rt = d;
          }
          wj(_, true, $, null, et);
          break;
        case "together":
          wj(_, false, null, null, void 0);
          break;
        default:
          _.memoizedState = null;
      }
      return _.child;
    }
    function ij(d, _) {
      !(_.mode & 1) && d !== null && (d.alternate = null, _.alternate = null, _.flags |= 2);
    }
    function Zi(d, _, $) {
      if (d !== null && (_.dependencies = d.dependencies), rh |= _.lanes, !($ & _.childLanes)) return null;
      if (d !== null && _.child !== d.child) throw Error(p$1(153));
      if (_.child !== null) {
        for (d = _.child, $ = Pg(d, d.pendingProps), _.child = $, $.return = _; d.sibling !== null; ) d = d.sibling, $ = $.sibling = Pg(d, d.pendingProps), $.return = _;
        $.sibling = null;
      }
      return _.child;
    }
    function yj(d, _, $) {
      switch (_.tag) {
        case 3:
          kj(_), Ig();
          break;
        case 5:
          Ah(_);
          break;
        case 1:
          Zf(_.type) && cg(_);
          break;
        case 4:
          yh(_, _.stateNode.containerInfo);
          break;
        case 10:
          var j = _.type._context, rt = _.memoizedProps.value;
          G(Wg, j._currentValue), j._currentValue = rt;
          break;
        case 13:
          if (j = _.memoizedState, j !== null) return j.dehydrated !== null ? (G(L, L.current & 1), _.flags |= 128, null) : $ & _.child.childLanes ? oj(d, _, $) : (G(L, L.current & 1), d = Zi(d, _, $), d !== null ? d.sibling : null);
          G(L, L.current & 1);
          break;
        case 19:
          if (j = ($ & _.childLanes) !== 0, d.flags & 128) {
            if (j) return xj(d, _, $);
            _.flags |= 128;
          }
          if (rt = _.memoizedState, rt !== null && (rt.rendering = null, rt.tail = null, rt.lastEffect = null), G(L, L.current), j) break;
          return null;
        case 22:
        case 23:
          return _.lanes = 0, dj(d, _, $);
      }
      return Zi(d, _, $);
    }
    var zj, Aj, Bj, Cj;
    zj = function(d, _) {
      for (var $ = _.child; $ !== null; ) {
        if ($.tag === 5 || $.tag === 6) d.appendChild($.stateNode);
        else if ($.tag !== 4 && $.child !== null) {
          $.child.return = $, $ = $.child;
          continue;
        }
        if ($ === _) break;
        for (; $.sibling === null; ) {
          if ($.return === null || $.return === _) return;
          $ = $.return;
        }
        $.sibling.return = $.return, $ = $.sibling;
      }
    };
    Aj = function() {
    };
    Bj = function(d, _, $, j) {
      var rt = d.memoizedProps;
      if (rt !== j) {
        d = _.stateNode, xh(uh.current);
        var et = null;
        switch ($) {
          case "input":
            rt = Ya(d, rt), j = Ya(d, j), et = [];
            break;
          case "select":
            rt = A({}, rt, {
              value: void 0
            }), j = A({}, j, {
              value: void 0
            }), et = [];
            break;
          case "textarea":
            rt = gb(d, rt), j = gb(d, j), et = [];
            break;
          default:
            typeof rt.onClick != "function" && typeof j.onClick == "function" && (d.onclick = Bf);
        }
        ub($, j);
        var st;
        $ = null;
        for (Bt in rt) if (!j.hasOwnProperty(Bt) && rt.hasOwnProperty(Bt) && rt[Bt] != null) if (Bt === "style") {
          var pt = rt[Bt];
          for (st in pt) pt.hasOwnProperty(st) && ($ || ($ = {}), $[st] = "");
        } else Bt !== "dangerouslySetInnerHTML" && Bt !== "children" && Bt !== "suppressContentEditableWarning" && Bt !== "suppressHydrationWarning" && Bt !== "autoFocus" && (ea.hasOwnProperty(Bt) ? et || (et = []) : (et = et || []).push(Bt, null));
        for (Bt in j) {
          var Et = j[Bt];
          if (pt = rt == null ? void 0 : rt[Bt], j.hasOwnProperty(Bt) && Et !== pt && (Et != null || pt != null)) if (Bt === "style") if (pt) {
            for (st in pt) !pt.hasOwnProperty(st) || Et && Et.hasOwnProperty(st) || ($ || ($ = {}), $[st] = "");
            for (st in Et) Et.hasOwnProperty(st) && pt[st] !== Et[st] && ($ || ($ = {}), $[st] = Et[st]);
          } else $ || (et || (et = []), et.push(Bt, $)), $ = Et;
          else Bt === "dangerouslySetInnerHTML" ? (Et = Et ? Et.__html : void 0, pt = pt ? pt.__html : void 0, Et != null && pt !== Et && (et = et || []).push(Bt, Et)) : Bt === "children" ? typeof Et != "string" && typeof Et != "number" || (et = et || []).push(Bt, "" + Et) : Bt !== "suppressContentEditableWarning" && Bt !== "suppressHydrationWarning" && (ea.hasOwnProperty(Bt) ? (Et != null && Bt === "onScroll" && D$1("scroll", d), et || pt === Et || (et = [])) : (et = et || []).push(Bt, Et));
        }
        $ && (et = et || []).push("style", $);
        var Bt = et;
        (_.updateQueue = Bt) && (_.flags |= 4);
      }
    };
    Cj = function(d, _, $, j) {
      $ !== j && (_.flags |= 4);
    };
    function Dj(d, _) {
      if (!I) switch (d.tailMode) {
        case "hidden":
          _ = d.tail;
          for (var $ = null; _ !== null; ) _.alternate !== null && ($ = _), _ = _.sibling;
          $ === null ? d.tail = null : $.sibling = null;
          break;
        case "collapsed":
          $ = d.tail;
          for (var j = null; $ !== null; ) $.alternate !== null && (j = $), $ = $.sibling;
          j === null ? _ || d.tail === null ? d.tail = null : d.tail.sibling = null : j.sibling = null;
      }
    }
    function S$1(d) {
      var _ = d.alternate !== null && d.alternate.child === d.child, $ = 0, j = 0;
      if (_) for (var rt = d.child; rt !== null; ) $ |= rt.lanes | rt.childLanes, j |= rt.subtreeFlags & 14680064, j |= rt.flags & 14680064, rt.return = d, rt = rt.sibling;
      else for (rt = d.child; rt !== null; ) $ |= rt.lanes | rt.childLanes, j |= rt.subtreeFlags, j |= rt.flags, rt.return = d, rt = rt.sibling;
      return d.subtreeFlags |= j, d.childLanes = $, _;
    }
    function Ej(d, _, $) {
      var j = _.pendingProps;
      switch (wg(_), _.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return S$1(_), null;
        case 1:
          return Zf(_.type) && $f(), S$1(_), null;
        case 3:
          return j = _.stateNode, zh(), E$1(Wf), E$1(H), Eh(), j.pendingContext && (j.context = j.pendingContext, j.pendingContext = null), (d === null || d.child === null) && (Gg(_) ? _.flags |= 4 : d === null || d.memoizedState.isDehydrated && !(_.flags & 256) || (_.flags |= 1024, zg !== null && (Fj(zg), zg = null))), Aj(d, _), S$1(_), null;
        case 5:
          Bh(_);
          var rt = xh(wh.current);
          if ($ = _.type, d !== null && _.stateNode != null) Bj(d, _, $, j, rt), d.ref !== _.ref && (_.flags |= 512, _.flags |= 2097152);
          else {
            if (!j) {
              if (_.stateNode === null) throw Error(p$1(166));
              return S$1(_), null;
            }
            if (d = xh(uh.current), Gg(_)) {
              j = _.stateNode, $ = _.type;
              var et = _.memoizedProps;
              switch (j[Of] = _, j[Pf] = et, d = (_.mode & 1) !== 0, $) {
                case "dialog":
                  D$1("cancel", j), D$1("close", j);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  D$1("load", j);
                  break;
                case "video":
                case "audio":
                  for (rt = 0; rt < lf.length; rt++) D$1(lf[rt], j);
                  break;
                case "source":
                  D$1("error", j);
                  break;
                case "img":
                case "image":
                case "link":
                  D$1("error", j), D$1("load", j);
                  break;
                case "details":
                  D$1("toggle", j);
                  break;
                case "input":
                  Za(j, et), D$1("invalid", j);
                  break;
                case "select":
                  j._wrapperState = {
                    wasMultiple: !!et.multiple
                  }, D$1("invalid", j);
                  break;
                case "textarea":
                  hb(j, et), D$1("invalid", j);
              }
              ub($, et), rt = null;
              for (var st in et) if (et.hasOwnProperty(st)) {
                var pt = et[st];
                st === "children" ? typeof pt == "string" ? j.textContent !== pt && (et.suppressHydrationWarning !== true && Af(j.textContent, pt, d), rt = [
                  "children",
                  pt
                ]) : typeof pt == "number" && j.textContent !== "" + pt && (et.suppressHydrationWarning !== true && Af(j.textContent, pt, d), rt = [
                  "children",
                  "" + pt
                ]) : ea.hasOwnProperty(st) && pt != null && st === "onScroll" && D$1("scroll", j);
              }
              switch ($) {
                case "input":
                  Va(j), db(j, et, true);
                  break;
                case "textarea":
                  Va(j), jb(j);
                  break;
                case "select":
                case "option":
                  break;
                default:
                  typeof et.onClick == "function" && (j.onclick = Bf);
              }
              j = rt, _.updateQueue = j, j !== null && (_.flags |= 4);
            } else {
              st = rt.nodeType === 9 ? rt : rt.ownerDocument, d === "http://www.w3.org/1999/xhtml" && (d = kb($)), d === "http://www.w3.org/1999/xhtml" ? $ === "script" ? (d = st.createElement("div"), d.innerHTML = "<script><\/script>", d = d.removeChild(d.firstChild)) : typeof j.is == "string" ? d = st.createElement($, {
                is: j.is
              }) : (d = st.createElement($), $ === "select" && (st = d, j.multiple ? st.multiple = true : j.size && (st.size = j.size))) : d = st.createElementNS(d, $), d[Of] = _, d[Pf] = j, zj(d, _, false, false), _.stateNode = d;
              e: {
                switch (st = vb($, j), $) {
                  case "dialog":
                    D$1("cancel", d), D$1("close", d), rt = j;
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    D$1("load", d), rt = j;
                    break;
                  case "video":
                  case "audio":
                    for (rt = 0; rt < lf.length; rt++) D$1(lf[rt], d);
                    rt = j;
                    break;
                  case "source":
                    D$1("error", d), rt = j;
                    break;
                  case "img":
                  case "image":
                  case "link":
                    D$1("error", d), D$1("load", d), rt = j;
                    break;
                  case "details":
                    D$1("toggle", d), rt = j;
                    break;
                  case "input":
                    Za(d, j), rt = Ya(d, j), D$1("invalid", d);
                    break;
                  case "option":
                    rt = j;
                    break;
                  case "select":
                    d._wrapperState = {
                      wasMultiple: !!j.multiple
                    }, rt = A({}, j, {
                      value: void 0
                    }), D$1("invalid", d);
                    break;
                  case "textarea":
                    hb(d, j), rt = gb(d, j), D$1("invalid", d);
                    break;
                  default:
                    rt = j;
                }
                ub($, rt), pt = rt;
                for (et in pt) if (pt.hasOwnProperty(et)) {
                  var Et = pt[et];
                  et === "style" ? sb(d, Et) : et === "dangerouslySetInnerHTML" ? (Et = Et ? Et.__html : void 0, Et != null && nb(d, Et)) : et === "children" ? typeof Et == "string" ? ($ !== "textarea" || Et !== "") && ob(d, Et) : typeof Et == "number" && ob(d, "" + Et) : et !== "suppressContentEditableWarning" && et !== "suppressHydrationWarning" && et !== "autoFocus" && (ea.hasOwnProperty(et) ? Et != null && et === "onScroll" && D$1("scroll", d) : Et != null && ta(d, et, Et, st));
                }
                switch ($) {
                  case "input":
                    Va(d), db(d, j, false);
                    break;
                  case "textarea":
                    Va(d), jb(d);
                    break;
                  case "option":
                    j.value != null && d.setAttribute("value", "" + Sa(j.value));
                    break;
                  case "select":
                    d.multiple = !!j.multiple, et = j.value, et != null ? fb(d, !!j.multiple, et, false) : j.defaultValue != null && fb(d, !!j.multiple, j.defaultValue, true);
                    break;
                  default:
                    typeof rt.onClick == "function" && (d.onclick = Bf);
                }
                switch ($) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    j = !!j.autoFocus;
                    break e;
                  case "img":
                    j = true;
                    break e;
                  default:
                    j = false;
                }
              }
              j && (_.flags |= 4);
            }
            _.ref !== null && (_.flags |= 512, _.flags |= 2097152);
          }
          return S$1(_), null;
        case 6:
          if (d && _.stateNode != null) Cj(d, _, d.memoizedProps, j);
          else {
            if (typeof j != "string" && _.stateNode === null) throw Error(p$1(166));
            if ($ = xh(wh.current), xh(uh.current), Gg(_)) {
              if (j = _.stateNode, $ = _.memoizedProps, j[Of] = _, (et = j.nodeValue !== $) && (d = xg, d !== null)) switch (d.tag) {
                case 3:
                  Af(j.nodeValue, $, (d.mode & 1) !== 0);
                  break;
                case 5:
                  d.memoizedProps.suppressHydrationWarning !== true && Af(j.nodeValue, $, (d.mode & 1) !== 0);
              }
              et && (_.flags |= 4);
            } else j = ($.nodeType === 9 ? $ : $.ownerDocument).createTextNode(j), j[Of] = _, _.stateNode = j;
          }
          return S$1(_), null;
        case 13:
          if (E$1(L), j = _.memoizedState, d === null || d.memoizedState !== null && d.memoizedState.dehydrated !== null) {
            if (I && yg !== null && _.mode & 1 && !(_.flags & 128)) Hg(), Ig(), _.flags |= 98560, et = false;
            else if (et = Gg(_), j !== null && j.dehydrated !== null) {
              if (d === null) {
                if (!et) throw Error(p$1(318));
                if (et = _.memoizedState, et = et !== null ? et.dehydrated : null, !et) throw Error(p$1(317));
                et[Of] = _;
              } else Ig(), !(_.flags & 128) && (_.memoizedState = null), _.flags |= 4;
              S$1(_), et = false;
            } else zg !== null && (Fj(zg), zg = null), et = true;
            if (!et) return _.flags & 65536 ? _ : null;
          }
          return _.flags & 128 ? (_.lanes = $, _) : (j = j !== null, j !== (d !== null && d.memoizedState !== null) && j && (_.child.flags |= 8192, _.mode & 1 && (d === null || L.current & 1 ? T === 0 && (T = 3) : tj())), _.updateQueue !== null && (_.flags |= 4), S$1(_), null);
        case 4:
          return zh(), Aj(d, _), d === null && sf(_.stateNode.containerInfo), S$1(_), null;
        case 10:
          return ah(_.type._context), S$1(_), null;
        case 17:
          return Zf(_.type) && $f(), S$1(_), null;
        case 19:
          if (E$1(L), et = _.memoizedState, et === null) return S$1(_), null;
          if (j = (_.flags & 128) !== 0, st = et.rendering, st === null) if (j) Dj(et, false);
          else {
            if (T !== 0 || d !== null && d.flags & 128) for (d = _.child; d !== null; ) {
              if (st = Ch(d), st !== null) {
                for (_.flags |= 128, Dj(et, false), j = st.updateQueue, j !== null && (_.updateQueue = j, _.flags |= 4), _.subtreeFlags = 0, j = $, $ = _.child; $ !== null; ) et = $, d = j, et.flags &= 14680066, st = et.alternate, st === null ? (et.childLanes = 0, et.lanes = d, et.child = null, et.subtreeFlags = 0, et.memoizedProps = null, et.memoizedState = null, et.updateQueue = null, et.dependencies = null, et.stateNode = null) : (et.childLanes = st.childLanes, et.lanes = st.lanes, et.child = st.child, et.subtreeFlags = 0, et.deletions = null, et.memoizedProps = st.memoizedProps, et.memoizedState = st.memoizedState, et.updateQueue = st.updateQueue, et.type = st.type, d = st.dependencies, et.dependencies = d === null ? null : {
                  lanes: d.lanes,
                  firstContext: d.firstContext
                }), $ = $.sibling;
                return G(L, L.current & 1 | 2), _.child;
              }
              d = d.sibling;
            }
            et.tail !== null && B() > Gj && (_.flags |= 128, j = true, Dj(et, false), _.lanes = 4194304);
          }
          else {
            if (!j) if (d = Ch(st), d !== null) {
              if (_.flags |= 128, j = true, $ = d.updateQueue, $ !== null && (_.updateQueue = $, _.flags |= 4), Dj(et, true), et.tail === null && et.tailMode === "hidden" && !st.alternate && !I) return S$1(_), null;
            } else 2 * B() - et.renderingStartTime > Gj && $ !== 1073741824 && (_.flags |= 128, j = true, Dj(et, false), _.lanes = 4194304);
            et.isBackwards ? (st.sibling = _.child, _.child = st) : ($ = et.last, $ !== null ? $.sibling = st : _.child = st, et.last = st);
          }
          return et.tail !== null ? (_ = et.tail, et.rendering = _, et.tail = _.sibling, et.renderingStartTime = B(), _.sibling = null, $ = L.current, G(L, j ? $ & 1 | 2 : $ & 1), _) : (S$1(_), null);
        case 22:
        case 23:
          return Hj(), j = _.memoizedState !== null, d !== null && d.memoizedState !== null !== j && (_.flags |= 8192), j && _.mode & 1 ? fj & 1073741824 && (S$1(_), _.subtreeFlags & 6 && (_.flags |= 8192)) : S$1(_), null;
        case 24:
          return null;
        case 25:
          return null;
      }
      throw Error(p$1(156, _.tag));
    }
    function Ij(d, _) {
      switch (wg(_), _.tag) {
        case 1:
          return Zf(_.type) && $f(), d = _.flags, d & 65536 ? (_.flags = d & -65537 | 128, _) : null;
        case 3:
          return zh(), E$1(Wf), E$1(H), Eh(), d = _.flags, d & 65536 && !(d & 128) ? (_.flags = d & -65537 | 128, _) : null;
        case 5:
          return Bh(_), null;
        case 13:
          if (E$1(L), d = _.memoizedState, d !== null && d.dehydrated !== null) {
            if (_.alternate === null) throw Error(p$1(340));
            Ig();
          }
          return d = _.flags, d & 65536 ? (_.flags = d & -65537 | 128, _) : null;
        case 19:
          return E$1(L), null;
        case 4:
          return zh(), null;
        case 10:
          return ah(_.type._context), null;
        case 22:
        case 23:
          return Hj(), null;
        case 24:
          return null;
        default:
          return null;
      }
    }
    var Jj = false, U = false, Kj = typeof WeakSet == "function" ? WeakSet : Set, V$1 = null;
    function Lj(d, _) {
      var $ = d.ref;
      if ($ !== null) if (typeof $ == "function") try {
        $(null);
      } catch (j) {
        W(d, _, j);
      }
      else $.current = null;
    }
    function Mj(d, _, $) {
      try {
        $();
      } catch (j) {
        W(d, _, j);
      }
    }
    var Nj = false;
    function Oj(d, _) {
      if (Cf = dd, d = Me(), Ne(d)) {
        if ("selectionStart" in d) var $ = {
          start: d.selectionStart,
          end: d.selectionEnd
        };
        else e: {
          $ = ($ = d.ownerDocument) && $.defaultView || window;
          var j = $.getSelection && $.getSelection();
          if (j && j.rangeCount !== 0) {
            $ = j.anchorNode;
            var rt = j.anchorOffset, et = j.focusNode;
            j = j.focusOffset;
            try {
              $.nodeType, et.nodeType;
            } catch {
              $ = null;
              break e;
            }
            var st = 0, pt = -1, Et = -1, Bt = 0, St = 0, $t = d, kt = null;
            t: for (; ; ) {
              for (var Tt; $t !== $ || rt !== 0 && $t.nodeType !== 3 || (pt = st + rt), $t !== et || j !== 0 && $t.nodeType !== 3 || (Et = st + j), $t.nodeType === 3 && (st += $t.nodeValue.length), (Tt = $t.firstChild) !== null; ) kt = $t, $t = Tt;
              for (; ; ) {
                if ($t === d) break t;
                if (kt === $ && ++Bt === rt && (pt = st), kt === et && ++St === j && (Et = st), (Tt = $t.nextSibling) !== null) break;
                $t = kt, kt = $t.parentNode;
              }
              $t = Tt;
            }
            $ = pt === -1 || Et === -1 ? null : {
              start: pt,
              end: Et
            };
          } else $ = null;
        }
        $ = $ || {
          start: 0,
          end: 0
        };
      } else $ = null;
      for (Df = {
        focusedElem: d,
        selectionRange: $
      }, dd = false, V$1 = _; V$1 !== null; ) if (_ = V$1, d = _.child, (_.subtreeFlags & 1028) !== 0 && d !== null) d.return = _, V$1 = d;
      else for (; V$1 !== null; ) {
        _ = V$1;
        try {
          var Pt = _.alternate;
          if (_.flags & 1024) switch (_.tag) {
            case 0:
            case 11:
            case 15:
              break;
            case 1:
              if (Pt !== null) {
                var It = Pt.memoizedProps, jt = Pt.memoizedState, Dt = _.stateNode, Ot = Dt.getSnapshotBeforeUpdate(_.elementType === _.type ? It : Ci(_.type, It), jt);
                Dt.__reactInternalSnapshotBeforeUpdate = Ot;
              }
              break;
            case 3:
              var Ft = _.stateNode.containerInfo;
              Ft.nodeType === 1 ? Ft.textContent = "" : Ft.nodeType === 9 && Ft.documentElement && Ft.removeChild(Ft.documentElement);
              break;
            case 5:
            case 6:
            case 4:
            case 17:
              break;
            default:
              throw Error(p$1(163));
          }
        } catch (Lt) {
          W(_, _.return, Lt);
        }
        if (d = _.sibling, d !== null) {
          d.return = _.return, V$1 = d;
          break;
        }
        V$1 = _.return;
      }
      return Pt = Nj, Nj = false, Pt;
    }
    function Pj(d, _, $) {
      var j = _.updateQueue;
      if (j = j !== null ? j.lastEffect : null, j !== null) {
        var rt = j = j.next;
        do {
          if ((rt.tag & d) === d) {
            var et = rt.destroy;
            rt.destroy = void 0, et !== void 0 && Mj(_, $, et);
          }
          rt = rt.next;
        } while (rt !== j);
      }
    }
    function Qj(d, _) {
      if (_ = _.updateQueue, _ = _ !== null ? _.lastEffect : null, _ !== null) {
        var $ = _ = _.next;
        do {
          if (($.tag & d) === d) {
            var j = $.create;
            $.destroy = j();
          }
          $ = $.next;
        } while ($ !== _);
      }
    }
    function Rj(d) {
      var _ = d.ref;
      if (_ !== null) {
        var $ = d.stateNode;
        switch (d.tag) {
          case 5:
            d = $;
            break;
          default:
            d = $;
        }
        typeof _ == "function" ? _(d) : _.current = d;
      }
    }
    function Sj(d) {
      var _ = d.alternate;
      _ !== null && (d.alternate = null, Sj(_)), d.child = null, d.deletions = null, d.sibling = null, d.tag === 5 && (_ = d.stateNode, _ !== null && (delete _[Of], delete _[Pf], delete _[of$1], delete _[Qf], delete _[Rf])), d.stateNode = null, d.return = null, d.dependencies = null, d.memoizedProps = null, d.memoizedState = null, d.pendingProps = null, d.stateNode = null, d.updateQueue = null;
    }
    function Tj(d) {
      return d.tag === 5 || d.tag === 3 || d.tag === 4;
    }
    function Uj(d) {
      e: for (; ; ) {
        for (; d.sibling === null; ) {
          if (d.return === null || Tj(d.return)) return null;
          d = d.return;
        }
        for (d.sibling.return = d.return, d = d.sibling; d.tag !== 5 && d.tag !== 6 && d.tag !== 18; ) {
          if (d.flags & 2 || d.child === null || d.tag === 4) continue e;
          d.child.return = d, d = d.child;
        }
        if (!(d.flags & 2)) return d.stateNode;
      }
    }
    function Vj(d, _, $) {
      var j = d.tag;
      if (j === 5 || j === 6) d = d.stateNode, _ ? $.nodeType === 8 ? $.parentNode.insertBefore(d, _) : $.insertBefore(d, _) : ($.nodeType === 8 ? (_ = $.parentNode, _.insertBefore(d, $)) : (_ = $, _.appendChild(d)), $ = $._reactRootContainer, $ != null || _.onclick !== null || (_.onclick = Bf));
      else if (j !== 4 && (d = d.child, d !== null)) for (Vj(d, _, $), d = d.sibling; d !== null; ) Vj(d, _, $), d = d.sibling;
    }
    function Wj(d, _, $) {
      var j = d.tag;
      if (j === 5 || j === 6) d = d.stateNode, _ ? $.insertBefore(d, _) : $.appendChild(d);
      else if (j !== 4 && (d = d.child, d !== null)) for (Wj(d, _, $), d = d.sibling; d !== null; ) Wj(d, _, $), d = d.sibling;
    }
    var X$1 = null, Xj = false;
    function Yj(d, _, $) {
      for ($ = $.child; $ !== null; ) Zj(d, _, $), $ = $.sibling;
    }
    function Zj(d, _, $) {
      if (lc && typeof lc.onCommitFiberUnmount == "function") try {
        lc.onCommitFiberUnmount(kc, $);
      } catch {
      }
      switch ($.tag) {
        case 5:
          U || Lj($, _);
        case 6:
          var j = X$1, rt = Xj;
          X$1 = null, Yj(d, _, $), X$1 = j, Xj = rt, X$1 !== null && (Xj ? (d = X$1, $ = $.stateNode, d.nodeType === 8 ? d.parentNode.removeChild($) : d.removeChild($)) : X$1.removeChild($.stateNode));
          break;
        case 18:
          X$1 !== null && (Xj ? (d = X$1, $ = $.stateNode, d.nodeType === 8 ? Kf(d.parentNode, $) : d.nodeType === 1 && Kf(d, $), bd(d)) : Kf(X$1, $.stateNode));
          break;
        case 4:
          j = X$1, rt = Xj, X$1 = $.stateNode.containerInfo, Xj = true, Yj(d, _, $), X$1 = j, Xj = rt;
          break;
        case 0:
        case 11:
        case 14:
        case 15:
          if (!U && (j = $.updateQueue, j !== null && (j = j.lastEffect, j !== null))) {
            rt = j = j.next;
            do {
              var et = rt, st = et.destroy;
              et = et.tag, st !== void 0 && (et & 2 || et & 4) && Mj($, _, st), rt = rt.next;
            } while (rt !== j);
          }
          Yj(d, _, $);
          break;
        case 1:
          if (!U && (Lj($, _), j = $.stateNode, typeof j.componentWillUnmount == "function")) try {
            j.props = $.memoizedProps, j.state = $.memoizedState, j.componentWillUnmount();
          } catch (pt) {
            W($, _, pt);
          }
          Yj(d, _, $);
          break;
        case 21:
          Yj(d, _, $);
          break;
        case 22:
          $.mode & 1 ? (U = (j = U) || $.memoizedState !== null, Yj(d, _, $), U = j) : Yj(d, _, $);
          break;
        default:
          Yj(d, _, $);
      }
    }
    function ak(d) {
      var _ = d.updateQueue;
      if (_ !== null) {
        d.updateQueue = null;
        var $ = d.stateNode;
        $ === null && ($ = d.stateNode = new Kj()), _.forEach(function(j) {
          var rt = bk.bind(null, d, j);
          $.has(j) || ($.add(j), j.then(rt, rt));
        });
      }
    }
    function ck(d, _) {
      var $ = _.deletions;
      if ($ !== null) for (var j = 0; j < $.length; j++) {
        var rt = $[j];
        try {
          var et = d, st = _, pt = st;
          e: for (; pt !== null; ) {
            switch (pt.tag) {
              case 5:
                X$1 = pt.stateNode, Xj = false;
                break e;
              case 3:
                X$1 = pt.stateNode.containerInfo, Xj = true;
                break e;
              case 4:
                X$1 = pt.stateNode.containerInfo, Xj = true;
                break e;
            }
            pt = pt.return;
          }
          if (X$1 === null) throw Error(p$1(160));
          Zj(et, st, rt), X$1 = null, Xj = false;
          var Et = rt.alternate;
          Et !== null && (Et.return = null), rt.return = null;
        } catch (Bt) {
          W(rt, _, Bt);
        }
      }
      if (_.subtreeFlags & 12854) for (_ = _.child; _ !== null; ) dk(_, d), _ = _.sibling;
    }
    function dk(d, _) {
      var $ = d.alternate, j = d.flags;
      switch (d.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          if (ck(_, d), ek(d), j & 4) {
            try {
              Pj(3, d, d.return), Qj(3, d);
            } catch (It) {
              W(d, d.return, It);
            }
            try {
              Pj(5, d, d.return);
            } catch (It) {
              W(d, d.return, It);
            }
          }
          break;
        case 1:
          ck(_, d), ek(d), j & 512 && $ !== null && Lj($, $.return);
          break;
        case 5:
          if (ck(_, d), ek(d), j & 512 && $ !== null && Lj($, $.return), d.flags & 32) {
            var rt = d.stateNode;
            try {
              ob(rt, "");
            } catch (It) {
              W(d, d.return, It);
            }
          }
          if (j & 4 && (rt = d.stateNode, rt != null)) {
            var et = d.memoizedProps, st = $ !== null ? $.memoizedProps : et, pt = d.type, Et = d.updateQueue;
            if (d.updateQueue = null, Et !== null) try {
              pt === "input" && et.type === "radio" && et.name != null && ab(rt, et), vb(pt, st);
              var Bt = vb(pt, et);
              for (st = 0; st < Et.length; st += 2) {
                var St = Et[st], $t = Et[st + 1];
                St === "style" ? sb(rt, $t) : St === "dangerouslySetInnerHTML" ? nb(rt, $t) : St === "children" ? ob(rt, $t) : ta(rt, St, $t, Bt);
              }
              switch (pt) {
                case "input":
                  bb(rt, et);
                  break;
                case "textarea":
                  ib(rt, et);
                  break;
                case "select":
                  var kt = rt._wrapperState.wasMultiple;
                  rt._wrapperState.wasMultiple = !!et.multiple;
                  var Tt = et.value;
                  Tt != null ? fb(rt, !!et.multiple, Tt, false) : kt !== !!et.multiple && (et.defaultValue != null ? fb(rt, !!et.multiple, et.defaultValue, true) : fb(rt, !!et.multiple, et.multiple ? [] : "", false));
              }
              rt[Pf] = et;
            } catch (It) {
              W(d, d.return, It);
            }
          }
          break;
        case 6:
          if (ck(_, d), ek(d), j & 4) {
            if (d.stateNode === null) throw Error(p$1(162));
            rt = d.stateNode, et = d.memoizedProps;
            try {
              rt.nodeValue = et;
            } catch (It) {
              W(d, d.return, It);
            }
          }
          break;
        case 3:
          if (ck(_, d), ek(d), j & 4 && $ !== null && $.memoizedState.isDehydrated) try {
            bd(_.containerInfo);
          } catch (It) {
            W(d, d.return, It);
          }
          break;
        case 4:
          ck(_, d), ek(d);
          break;
        case 13:
          ck(_, d), ek(d), rt = d.child, rt.flags & 8192 && (et = rt.memoizedState !== null, rt.stateNode.isHidden = et, !et || rt.alternate !== null && rt.alternate.memoizedState !== null || (fk = B())), j & 4 && ak(d);
          break;
        case 22:
          if (St = $ !== null && $.memoizedState !== null, d.mode & 1 ? (U = (Bt = U) || St, ck(_, d), U = Bt) : ck(_, d), ek(d), j & 8192) {
            if (Bt = d.memoizedState !== null, (d.stateNode.isHidden = Bt) && !St && d.mode & 1) for (V$1 = d, St = d.child; St !== null; ) {
              for ($t = V$1 = St; V$1 !== null; ) {
                switch (kt = V$1, Tt = kt.child, kt.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Pj(4, kt, kt.return);
                    break;
                  case 1:
                    Lj(kt, kt.return);
                    var Pt = kt.stateNode;
                    if (typeof Pt.componentWillUnmount == "function") {
                      j = kt, $ = kt.return;
                      try {
                        _ = j, Pt.props = _.memoizedProps, Pt.state = _.memoizedState, Pt.componentWillUnmount();
                      } catch (It) {
                        W(j, $, It);
                      }
                    }
                    break;
                  case 5:
                    Lj(kt, kt.return);
                    break;
                  case 22:
                    if (kt.memoizedState !== null) {
                      gk($t);
                      continue;
                    }
                }
                Tt !== null ? (Tt.return = kt, V$1 = Tt) : gk($t);
              }
              St = St.sibling;
            }
            e: for (St = null, $t = d; ; ) {
              if ($t.tag === 5) {
                if (St === null) {
                  St = $t;
                  try {
                    rt = $t.stateNode, Bt ? (et = rt.style, typeof et.setProperty == "function" ? et.setProperty("display", "none", "important") : et.display = "none") : (pt = $t.stateNode, Et = $t.memoizedProps.style, st = Et != null && Et.hasOwnProperty("display") ? Et.display : null, pt.style.display = rb("display", st));
                  } catch (It) {
                    W(d, d.return, It);
                  }
                }
              } else if ($t.tag === 6) {
                if (St === null) try {
                  $t.stateNode.nodeValue = Bt ? "" : $t.memoizedProps;
                } catch (It) {
                  W(d, d.return, It);
                }
              } else if (($t.tag !== 22 && $t.tag !== 23 || $t.memoizedState === null || $t === d) && $t.child !== null) {
                $t.child.return = $t, $t = $t.child;
                continue;
              }
              if ($t === d) break e;
              for (; $t.sibling === null; ) {
                if ($t.return === null || $t.return === d) break e;
                St === $t && (St = null), $t = $t.return;
              }
              St === $t && (St = null), $t.sibling.return = $t.return, $t = $t.sibling;
            }
          }
          break;
        case 19:
          ck(_, d), ek(d), j & 4 && ak(d);
          break;
        case 21:
          break;
        default:
          ck(_, d), ek(d);
      }
    }
    function ek(d) {
      var _ = d.flags;
      if (_ & 2) {
        try {
          e: {
            for (var $ = d.return; $ !== null; ) {
              if (Tj($)) {
                var j = $;
                break e;
              }
              $ = $.return;
            }
            throw Error(p$1(160));
          }
          switch (j.tag) {
            case 5:
              var rt = j.stateNode;
              j.flags & 32 && (ob(rt, ""), j.flags &= -33);
              var et = Uj(d);
              Wj(d, et, rt);
              break;
            case 3:
            case 4:
              var st = j.stateNode.containerInfo, pt = Uj(d);
              Vj(d, pt, st);
              break;
            default:
              throw Error(p$1(161));
          }
        } catch (Et) {
          W(d, d.return, Et);
        }
        d.flags &= -3;
      }
      _ & 4096 && (d.flags &= -4097);
    }
    function hk(d, _, $) {
      V$1 = d, ik(d);
    }
    function ik(d, _, $) {
      for (var j = (d.mode & 1) !== 0; V$1 !== null; ) {
        var rt = V$1, et = rt.child;
        if (rt.tag === 22 && j) {
          var st = rt.memoizedState !== null || Jj;
          if (!st) {
            var pt = rt.alternate, Et = pt !== null && pt.memoizedState !== null || U;
            pt = Jj;
            var Bt = U;
            if (Jj = st, (U = Et) && !Bt) for (V$1 = rt; V$1 !== null; ) st = V$1, Et = st.child, st.tag === 22 && st.memoizedState !== null ? jk(rt) : Et !== null ? (Et.return = st, V$1 = Et) : jk(rt);
            for (; et !== null; ) V$1 = et, ik(et), et = et.sibling;
            V$1 = rt, Jj = pt, U = Bt;
          }
          kk(d);
        } else rt.subtreeFlags & 8772 && et !== null ? (et.return = rt, V$1 = et) : kk(d);
      }
    }
    function kk(d) {
      for (; V$1 !== null; ) {
        var _ = V$1;
        if (_.flags & 8772) {
          var $ = _.alternate;
          try {
            if (_.flags & 8772) switch (_.tag) {
              case 0:
              case 11:
              case 15:
                U || Qj(5, _);
                break;
              case 1:
                var j = _.stateNode;
                if (_.flags & 4 && !U) if ($ === null) j.componentDidMount();
                else {
                  var rt = _.elementType === _.type ? $.memoizedProps : Ci(_.type, $.memoizedProps);
                  j.componentDidUpdate(rt, $.memoizedState, j.__reactInternalSnapshotBeforeUpdate);
                }
                var et = _.updateQueue;
                et !== null && sh(_, et, j);
                break;
              case 3:
                var st = _.updateQueue;
                if (st !== null) {
                  if ($ = null, _.child !== null) switch (_.child.tag) {
                    case 5:
                      $ = _.child.stateNode;
                      break;
                    case 1:
                      $ = _.child.stateNode;
                  }
                  sh(_, st, $);
                }
                break;
              case 5:
                var pt = _.stateNode;
                if ($ === null && _.flags & 4) {
                  $ = pt;
                  var Et = _.memoizedProps;
                  switch (_.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      Et.autoFocus && $.focus();
                      break;
                    case "img":
                      Et.src && ($.src = Et.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (_.memoizedState === null) {
                  var Bt = _.alternate;
                  if (Bt !== null) {
                    var St = Bt.memoizedState;
                    if (St !== null) {
                      var $t = St.dehydrated;
                      $t !== null && bd($t);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(p$1(163));
            }
            U || _.flags & 512 && Rj(_);
          } catch (kt) {
            W(_, _.return, kt);
          }
        }
        if (_ === d) {
          V$1 = null;
          break;
        }
        if ($ = _.sibling, $ !== null) {
          $.return = _.return, V$1 = $;
          break;
        }
        V$1 = _.return;
      }
    }
    function gk(d) {
      for (; V$1 !== null; ) {
        var _ = V$1;
        if (_ === d) {
          V$1 = null;
          break;
        }
        var $ = _.sibling;
        if ($ !== null) {
          $.return = _.return, V$1 = $;
          break;
        }
        V$1 = _.return;
      }
    }
    function jk(d) {
      for (; V$1 !== null; ) {
        var _ = V$1;
        try {
          switch (_.tag) {
            case 0:
            case 11:
            case 15:
              var $ = _.return;
              try {
                Qj(4, _);
              } catch (Et) {
                W(_, $, Et);
              }
              break;
            case 1:
              var j = _.stateNode;
              if (typeof j.componentDidMount == "function") {
                var rt = _.return;
                try {
                  j.componentDidMount();
                } catch (Et) {
                  W(_, rt, Et);
                }
              }
              var et = _.return;
              try {
                Rj(_);
              } catch (Et) {
                W(_, et, Et);
              }
              break;
            case 5:
              var st = _.return;
              try {
                Rj(_);
              } catch (Et) {
                W(_, st, Et);
              }
          }
        } catch (Et) {
          W(_, _.return, Et);
        }
        if (_ === d) {
          V$1 = null;
          break;
        }
        var pt = _.sibling;
        if (pt !== null) {
          pt.return = _.return, V$1 = pt;
          break;
        }
        V$1 = _.return;
      }
    }
    var lk = Math.ceil, mk = ua.ReactCurrentDispatcher, nk = ua.ReactCurrentOwner, ok = ua.ReactCurrentBatchConfig, K$1 = 0, Q$1 = null, Y = null, Z = 0, fj = 0, ej = Uf(0), T = 0, pk = null, rh = 0, qk = 0, rk = 0, sk = null, tk = null, fk = 0, Gj = 1 / 0, uk = null, Oi = false, Pi = null, Ri = null, vk = false, wk = null, xk = 0, yk = 0, zk = null, Ak = -1, Bk = 0;
    function R$1() {
      return K$1 & 6 ? B() : Ak !== -1 ? Ak : Ak = B();
    }
    function yi(d) {
      return d.mode & 1 ? K$1 & 2 && Z !== 0 ? Z & -Z : Kg.transition !== null ? (Bk === 0 && (Bk = yc()), Bk) : (d = C, d !== 0 || (d = window.event, d = d === void 0 ? 16 : jd(d.type)), d) : 1;
    }
    function gi(d, _, $, j) {
      if (50 < yk) throw yk = 0, zk = null, Error(p$1(185));
      Ac(d, $, j), (!(K$1 & 2) || d !== Q$1) && (d === Q$1 && (!(K$1 & 2) && (qk |= $), T === 4 && Ck(d, Z)), Dk(d, j), $ === 1 && K$1 === 0 && !(_.mode & 1) && (Gj = B() + 500, fg && jg()));
    }
    function Dk(d, _) {
      var $ = d.callbackNode;
      wc(d, _);
      var j = uc(d, d === Q$1 ? Z : 0);
      if (j === 0) $ !== null && bc($), d.callbackNode = null, d.callbackPriority = 0;
      else if (_ = j & -j, d.callbackPriority !== _) {
        if ($ != null && bc($), _ === 1) d.tag === 0 ? ig(Ek.bind(null, d)) : hg(Ek.bind(null, d)), Jf(function() {
          !(K$1 & 6) && jg();
        }), $ = null;
        else {
          switch (Dc(j)) {
            case 1:
              $ = fc;
              break;
            case 4:
              $ = gc;
              break;
            case 16:
              $ = hc;
              break;
            case 536870912:
              $ = jc;
              break;
            default:
              $ = hc;
          }
          $ = Fk($, Gk.bind(null, d));
        }
        d.callbackPriority = _, d.callbackNode = $;
      }
    }
    function Gk(d, _) {
      if (Ak = -1, Bk = 0, K$1 & 6) throw Error(p$1(327));
      var $ = d.callbackNode;
      if (Hk() && d.callbackNode !== $) return null;
      var j = uc(d, d === Q$1 ? Z : 0);
      if (j === 0) return null;
      if (j & 30 || j & d.expiredLanes || _) _ = Ik(d, j);
      else {
        _ = j;
        var rt = K$1;
        K$1 |= 2;
        var et = Jk();
        (Q$1 !== d || Z !== _) && (uk = null, Gj = B() + 500, Kk(d, _));
        do
          try {
            Lk();
            break;
          } catch (pt) {
            Mk(d, pt);
          }
        while (true);
        $g(), mk.current = et, K$1 = rt, Y !== null ? _ = 0 : (Q$1 = null, Z = 0, _ = T);
      }
      if (_ !== 0) {
        if (_ === 2 && (rt = xc(d), rt !== 0 && (j = rt, _ = Nk(d, rt))), _ === 1) throw $ = pk, Kk(d, 0), Ck(d, j), Dk(d, B()), $;
        if (_ === 6) Ck(d, j);
        else {
          if (rt = d.current.alternate, !(j & 30) && !Ok(rt) && (_ = Ik(d, j), _ === 2 && (et = xc(d), et !== 0 && (j = et, _ = Nk(d, et))), _ === 1)) throw $ = pk, Kk(d, 0), Ck(d, j), Dk(d, B()), $;
          switch (d.finishedWork = rt, d.finishedLanes = j, _) {
            case 0:
            case 1:
              throw Error(p$1(345));
            case 2:
              Pk(d, tk, uk);
              break;
            case 3:
              if (Ck(d, j), (j & 130023424) === j && (_ = fk + 500 - B(), 10 < _)) {
                if (uc(d, 0) !== 0) break;
                if (rt = d.suspendedLanes, (rt & j) !== j) {
                  R$1(), d.pingedLanes |= d.suspendedLanes & rt;
                  break;
                }
                d.timeoutHandle = Ff(Pk.bind(null, d, tk, uk), _);
                break;
              }
              Pk(d, tk, uk);
              break;
            case 4:
              if (Ck(d, j), (j & 4194240) === j) break;
              for (_ = d.eventTimes, rt = -1; 0 < j; ) {
                var st = 31 - oc(j);
                et = 1 << st, st = _[st], st > rt && (rt = st), j &= ~et;
              }
              if (j = rt, j = B() - j, j = (120 > j ? 120 : 480 > j ? 480 : 1080 > j ? 1080 : 1920 > j ? 1920 : 3e3 > j ? 3e3 : 4320 > j ? 4320 : 1960 * lk(j / 1960)) - j, 10 < j) {
                d.timeoutHandle = Ff(Pk.bind(null, d, tk, uk), j);
                break;
              }
              Pk(d, tk, uk);
              break;
            case 5:
              Pk(d, tk, uk);
              break;
            default:
              throw Error(p$1(329));
          }
        }
      }
      return Dk(d, B()), d.callbackNode === $ ? Gk.bind(null, d) : null;
    }
    function Nk(d, _) {
      var $ = sk;
      return d.current.memoizedState.isDehydrated && (Kk(d, _).flags |= 256), d = Ik(d, _), d !== 2 && (_ = tk, tk = $, _ !== null && Fj(_)), d;
    }
    function Fj(d) {
      tk === null ? tk = d : tk.push.apply(tk, d);
    }
    function Ok(d) {
      for (var _ = d; ; ) {
        if (_.flags & 16384) {
          var $ = _.updateQueue;
          if ($ !== null && ($ = $.stores, $ !== null)) for (var j = 0; j < $.length; j++) {
            var rt = $[j], et = rt.getSnapshot;
            rt = rt.value;
            try {
              if (!He(et(), rt)) return false;
            } catch {
              return false;
            }
          }
        }
        if ($ = _.child, _.subtreeFlags & 16384 && $ !== null) $.return = _, _ = $;
        else {
          if (_ === d) break;
          for (; _.sibling === null; ) {
            if (_.return === null || _.return === d) return true;
            _ = _.return;
          }
          _.sibling.return = _.return, _ = _.sibling;
        }
      }
      return true;
    }
    function Ck(d, _) {
      for (_ &= ~rk, _ &= ~qk, d.suspendedLanes |= _, d.pingedLanes &= ~_, d = d.expirationTimes; 0 < _; ) {
        var $ = 31 - oc(_), j = 1 << $;
        d[$] = -1, _ &= ~j;
      }
    }
    function Ek(d) {
      if (K$1 & 6) throw Error(p$1(327));
      Hk();
      var _ = uc(d, 0);
      if (!(_ & 1)) return Dk(d, B()), null;
      var $ = Ik(d, _);
      if (d.tag !== 0 && $ === 2) {
        var j = xc(d);
        j !== 0 && (_ = j, $ = Nk(d, j));
      }
      if ($ === 1) throw $ = pk, Kk(d, 0), Ck(d, _), Dk(d, B()), $;
      if ($ === 6) throw Error(p$1(345));
      return d.finishedWork = d.current.alternate, d.finishedLanes = _, Pk(d, tk, uk), Dk(d, B()), null;
    }
    function Qk(d, _) {
      var $ = K$1;
      K$1 |= 1;
      try {
        return d(_);
      } finally {
        K$1 = $, K$1 === 0 && (Gj = B() + 500, fg && jg());
      }
    }
    function Rk(d) {
      wk !== null && wk.tag === 0 && !(K$1 & 6) && Hk();
      var _ = K$1;
      K$1 |= 1;
      var $ = ok.transition, j = C;
      try {
        if (ok.transition = null, C = 1, d) return d();
      } finally {
        C = j, ok.transition = $, K$1 = _, !(K$1 & 6) && jg();
      }
    }
    function Hj() {
      fj = ej.current, E$1(ej);
    }
    function Kk(d, _) {
      d.finishedWork = null, d.finishedLanes = 0;
      var $ = d.timeoutHandle;
      if ($ !== -1 && (d.timeoutHandle = -1, Gf($)), Y !== null) for ($ = Y.return; $ !== null; ) {
        var j = $;
        switch (wg(j), j.tag) {
          case 1:
            j = j.type.childContextTypes, j != null && $f();
            break;
          case 3:
            zh(), E$1(Wf), E$1(H), Eh();
            break;
          case 5:
            Bh(j);
            break;
          case 4:
            zh();
            break;
          case 13:
            E$1(L);
            break;
          case 19:
            E$1(L);
            break;
          case 10:
            ah(j.type._context);
            break;
          case 22:
          case 23:
            Hj();
        }
        $ = $.return;
      }
      if (Q$1 = d, Y = d = Pg(d.current, null), Z = fj = _, T = 0, pk = null, rk = qk = rh = 0, tk = sk = null, fh !== null) {
        for (_ = 0; _ < fh.length; _++) if ($ = fh[_], j = $.interleaved, j !== null) {
          $.interleaved = null;
          var rt = j.next, et = $.pending;
          if (et !== null) {
            var st = et.next;
            et.next = rt, j.next = st;
          }
          $.pending = j;
        }
        fh = null;
      }
      return d;
    }
    function Mk(d, _) {
      do {
        var $ = Y;
        try {
          if ($g(), Fh.current = Rh, Ih) {
            for (var j = M.memoizedState; j !== null; ) {
              var rt = j.queue;
              rt !== null && (rt.pending = null), j = j.next;
            }
            Ih = false;
          }
          if (Hh = 0, O = N = M = null, Jh = false, Kh = 0, nk.current = null, $ === null || $.return === null) {
            T = 1, pk = _, Y = null;
            break;
          }
          e: {
            var et = d, st = $.return, pt = $, Et = _;
            if (_ = Z, pt.flags |= 32768, Et !== null && typeof Et == "object" && typeof Et.then == "function") {
              var Bt = Et, St = pt, $t = St.tag;
              if (!(St.mode & 1) && ($t === 0 || $t === 11 || $t === 15)) {
                var kt = St.alternate;
                kt ? (St.updateQueue = kt.updateQueue, St.memoizedState = kt.memoizedState, St.lanes = kt.lanes) : (St.updateQueue = null, St.memoizedState = null);
              }
              var Tt = Ui(st);
              if (Tt !== null) {
                Tt.flags &= -257, Vi(Tt, st, pt, et, _), Tt.mode & 1 && Si(et, Bt, _), _ = Tt, Et = Bt;
                var Pt = _.updateQueue;
                if (Pt === null) {
                  var It = /* @__PURE__ */ new Set();
                  It.add(Et), _.updateQueue = It;
                } else Pt.add(Et);
                break e;
              } else {
                if (!(_ & 1)) {
                  Si(et, Bt, _), tj();
                  break e;
                }
                Et = Error(p$1(426));
              }
            } else if (I && pt.mode & 1) {
              var jt = Ui(st);
              if (jt !== null) {
                !(jt.flags & 65536) && (jt.flags |= 256), Vi(jt, st, pt, et, _), Jg(Ji(Et, pt));
                break e;
              }
            }
            et = Et = Ji(Et, pt), T !== 4 && (T = 2), sk === null ? sk = [
              et
            ] : sk.push(et), et = st;
            do {
              switch (et.tag) {
                case 3:
                  et.flags |= 65536, _ &= -_, et.lanes |= _;
                  var Dt = Ni(et, Et, _);
                  ph(et, Dt);
                  break e;
                case 1:
                  pt = Et;
                  var Ot = et.type, Ft = et.stateNode;
                  if (!(et.flags & 128) && (typeof Ot.getDerivedStateFromError == "function" || Ft !== null && typeof Ft.componentDidCatch == "function" && (Ri === null || !Ri.has(Ft)))) {
                    et.flags |= 65536, _ &= -_, et.lanes |= _;
                    var Lt = Qi(et, pt, _);
                    ph(et, Lt);
                    break e;
                  }
              }
              et = et.return;
            } while (et !== null);
          }
          Sk($);
        } catch (Zt) {
          _ = Zt, Y === $ && $ !== null && (Y = $ = $.return);
          continue;
        }
        break;
      } while (true);
    }
    function Jk() {
      var d = mk.current;
      return mk.current = Rh, d === null ? Rh : d;
    }
    function tj() {
      (T === 0 || T === 3 || T === 2) && (T = 4), Q$1 === null || !(rh & 268435455) && !(qk & 268435455) || Ck(Q$1, Z);
    }
    function Ik(d, _) {
      var $ = K$1;
      K$1 |= 2;
      var j = Jk();
      (Q$1 !== d || Z !== _) && (uk = null, Kk(d, _));
      do
        try {
          Tk();
          break;
        } catch (rt) {
          Mk(d, rt);
        }
      while (true);
      if ($g(), K$1 = $, mk.current = j, Y !== null) throw Error(p$1(261));
      return Q$1 = null, Z = 0, T;
    }
    function Tk() {
      for (; Y !== null; ) Uk(Y);
    }
    function Lk() {
      for (; Y !== null && !cc(); ) Uk(Y);
    }
    function Uk(d) {
      var _ = Vk(d.alternate, d, fj);
      d.memoizedProps = d.pendingProps, _ === null ? Sk(d) : Y = _, nk.current = null;
    }
    function Sk(d) {
      var _ = d;
      do {
        var $ = _.alternate;
        if (d = _.return, _.flags & 32768) {
          if ($ = Ij($, _), $ !== null) {
            $.flags &= 32767, Y = $;
            return;
          }
          if (d !== null) d.flags |= 32768, d.subtreeFlags = 0, d.deletions = null;
          else {
            T = 6, Y = null;
            return;
          }
        } else if ($ = Ej($, _, fj), $ !== null) {
          Y = $;
          return;
        }
        if (_ = _.sibling, _ !== null) {
          Y = _;
          return;
        }
        Y = _ = d;
      } while (_ !== null);
      T === 0 && (T = 5);
    }
    function Pk(d, _, $) {
      var j = C, rt = ok.transition;
      try {
        ok.transition = null, C = 1, Wk(d, _, $, j);
      } finally {
        ok.transition = rt, C = j;
      }
      return null;
    }
    function Wk(d, _, $, j) {
      do
        Hk();
      while (wk !== null);
      if (K$1 & 6) throw Error(p$1(327));
      $ = d.finishedWork;
      var rt = d.finishedLanes;
      if ($ === null) return null;
      if (d.finishedWork = null, d.finishedLanes = 0, $ === d.current) throw Error(p$1(177));
      d.callbackNode = null, d.callbackPriority = 0;
      var et = $.lanes | $.childLanes;
      if (Bc(d, et), d === Q$1 && (Y = Q$1 = null, Z = 0), !($.subtreeFlags & 2064) && !($.flags & 2064) || vk || (vk = true, Fk(hc, function() {
        return Hk(), null;
      })), et = ($.flags & 15990) !== 0, $.subtreeFlags & 15990 || et) {
        et = ok.transition, ok.transition = null;
        var st = C;
        C = 1;
        var pt = K$1;
        K$1 |= 4, nk.current = null, Oj(d, $), dk($, d), Oe(Df), dd = !!Cf, Df = Cf = null, d.current = $, hk($), dc(), K$1 = pt, C = st, ok.transition = et;
      } else d.current = $;
      if (vk && (vk = false, wk = d, xk = rt), et = d.pendingLanes, et === 0 && (Ri = null), mc($.stateNode), Dk(d, B()), _ !== null) for (j = d.onRecoverableError, $ = 0; $ < _.length; $++) rt = _[$], j(rt.value, {
        componentStack: rt.stack,
        digest: rt.digest
      });
      if (Oi) throw Oi = false, d = Pi, Pi = null, d;
      return xk & 1 && d.tag !== 0 && Hk(), et = d.pendingLanes, et & 1 ? d === zk ? yk++ : (yk = 0, zk = d) : yk = 0, jg(), null;
    }
    function Hk() {
      if (wk !== null) {
        var d = Dc(xk), _ = ok.transition, $ = C;
        try {
          if (ok.transition = null, C = 16 > d ? 16 : d, wk === null) var j = false;
          else {
            if (d = wk, wk = null, xk = 0, K$1 & 6) throw Error(p$1(331));
            var rt = K$1;
            for (K$1 |= 4, V$1 = d.current; V$1 !== null; ) {
              var et = V$1, st = et.child;
              if (V$1.flags & 16) {
                var pt = et.deletions;
                if (pt !== null) {
                  for (var Et = 0; Et < pt.length; Et++) {
                    var Bt = pt[Et];
                    for (V$1 = Bt; V$1 !== null; ) {
                      var St = V$1;
                      switch (St.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Pj(8, St, et);
                      }
                      var $t = St.child;
                      if ($t !== null) $t.return = St, V$1 = $t;
                      else for (; V$1 !== null; ) {
                        St = V$1;
                        var kt = St.sibling, Tt = St.return;
                        if (Sj(St), St === Bt) {
                          V$1 = null;
                          break;
                        }
                        if (kt !== null) {
                          kt.return = Tt, V$1 = kt;
                          break;
                        }
                        V$1 = Tt;
                      }
                    }
                  }
                  var Pt = et.alternate;
                  if (Pt !== null) {
                    var It = Pt.child;
                    if (It !== null) {
                      Pt.child = null;
                      do {
                        var jt = It.sibling;
                        It.sibling = null, It = jt;
                      } while (It !== null);
                    }
                  }
                  V$1 = et;
                }
              }
              if (et.subtreeFlags & 2064 && st !== null) st.return = et, V$1 = st;
              else e: for (; V$1 !== null; ) {
                if (et = V$1, et.flags & 2048) switch (et.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Pj(9, et, et.return);
                }
                var Dt = et.sibling;
                if (Dt !== null) {
                  Dt.return = et.return, V$1 = Dt;
                  break e;
                }
                V$1 = et.return;
              }
            }
            var Ot = d.current;
            for (V$1 = Ot; V$1 !== null; ) {
              st = V$1;
              var Ft = st.child;
              if (st.subtreeFlags & 2064 && Ft !== null) Ft.return = st, V$1 = Ft;
              else e: for (st = Ot; V$1 !== null; ) {
                if (pt = V$1, pt.flags & 2048) try {
                  switch (pt.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, pt);
                  }
                } catch (Zt) {
                  W(pt, pt.return, Zt);
                }
                if (pt === st) {
                  V$1 = null;
                  break e;
                }
                var Lt = pt.sibling;
                if (Lt !== null) {
                  Lt.return = pt.return, V$1 = Lt;
                  break e;
                }
                V$1 = pt.return;
              }
            }
            if (K$1 = rt, jg(), lc && typeof lc.onPostCommitFiberRoot == "function") try {
              lc.onPostCommitFiberRoot(kc, d);
            } catch {
            }
            j = true;
          }
          return j;
        } finally {
          C = $, ok.transition = _;
        }
      }
      return false;
    }
    function Xk(d, _, $) {
      _ = Ji($, _), _ = Ni(d, _, 1), d = nh(d, _, 1), _ = R$1(), d !== null && (Ac(d, 1, _), Dk(d, _));
    }
    function W(d, _, $) {
      if (d.tag === 3) Xk(d, d, $);
      else for (; _ !== null; ) {
        if (_.tag === 3) {
          Xk(_, d, $);
          break;
        } else if (_.tag === 1) {
          var j = _.stateNode;
          if (typeof _.type.getDerivedStateFromError == "function" || typeof j.componentDidCatch == "function" && (Ri === null || !Ri.has(j))) {
            d = Ji($, d), d = Qi(_, d, 1), _ = nh(_, d, 1), d = R$1(), _ !== null && (Ac(_, 1, d), Dk(_, d));
            break;
          }
        }
        _ = _.return;
      }
    }
    function Ti(d, _, $) {
      var j = d.pingCache;
      j !== null && j.delete(_), _ = R$1(), d.pingedLanes |= d.suspendedLanes & $, Q$1 === d && (Z & $) === $ && (T === 4 || T === 3 && (Z & 130023424) === Z && 500 > B() - fk ? Kk(d, 0) : rk |= $), Dk(d, _);
    }
    function Yk(d, _) {
      _ === 0 && (d.mode & 1 ? (_ = sc, sc <<= 1, !(sc & 130023424) && (sc = 4194304)) : _ = 1);
      var $ = R$1();
      d = ih(d, _), d !== null && (Ac(d, _, $), Dk(d, $));
    }
    function uj(d) {
      var _ = d.memoizedState, $ = 0;
      _ !== null && ($ = _.retryLane), Yk(d, $);
    }
    function bk(d, _) {
      var $ = 0;
      switch (d.tag) {
        case 13:
          var j = d.stateNode, rt = d.memoizedState;
          rt !== null && ($ = rt.retryLane);
          break;
        case 19:
          j = d.stateNode;
          break;
        default:
          throw Error(p$1(314));
      }
      j !== null && j.delete(_), Yk(d, $);
    }
    var Vk;
    Vk = function(d, _, $) {
      if (d !== null) if (d.memoizedProps !== _.pendingProps || Wf.current) dh$1 = true;
      else {
        if (!(d.lanes & $) && !(_.flags & 128)) return dh$1 = false, yj(d, _, $);
        dh$1 = !!(d.flags & 131072);
      }
      else dh$1 = false, I && _.flags & 1048576 && ug(_, ng, _.index);
      switch (_.lanes = 0, _.tag) {
        case 2:
          var j = _.type;
          ij(d, _), d = _.pendingProps;
          var rt = Yf(_, H.current);
          ch(_, $), rt = Nh(null, _, j, d, rt, $);
          var et = Sh();
          return _.flags |= 1, typeof rt == "object" && rt !== null && typeof rt.render == "function" && rt.$$typeof === void 0 ? (_.tag = 1, _.memoizedState = null, _.updateQueue = null, Zf(j) ? (et = true, cg(_)) : et = false, _.memoizedState = rt.state !== null && rt.state !== void 0 ? rt.state : null, kh(_), rt.updater = Ei, _.stateNode = rt, rt._reactInternals = _, Ii(_, j, d, $), _ = jj(null, _, j, true, et, $)) : (_.tag = 0, I && et && vg(_), Xi(null, _, rt, $), _ = _.child), _;
        case 16:
          j = _.elementType;
          e: {
            switch (ij(d, _), d = _.pendingProps, rt = j._init, j = rt(j._payload), _.type = j, rt = _.tag = Zk(j), d = Ci(j, d), rt) {
              case 0:
                _ = cj(null, _, j, d, $);
                break e;
              case 1:
                _ = hj(null, _, j, d, $);
                break e;
              case 11:
                _ = Yi(null, _, j, d, $);
                break e;
              case 14:
                _ = $i(null, _, j, Ci(j.type, d), $);
                break e;
            }
            throw Error(p$1(306, j, ""));
          }
          return _;
        case 0:
          return j = _.type, rt = _.pendingProps, rt = _.elementType === j ? rt : Ci(j, rt), cj(d, _, j, rt, $);
        case 1:
          return j = _.type, rt = _.pendingProps, rt = _.elementType === j ? rt : Ci(j, rt), hj(d, _, j, rt, $);
        case 3:
          e: {
            if (kj(_), d === null) throw Error(p$1(387));
            j = _.pendingProps, et = _.memoizedState, rt = et.element, lh(d, _), qh(_, j, null, $);
            var st = _.memoizedState;
            if (j = st.element, et.isDehydrated) if (et = {
              element: j,
              isDehydrated: false,
              cache: st.cache,
              pendingSuspenseBoundaries: st.pendingSuspenseBoundaries,
              transitions: st.transitions
            }, _.updateQueue.baseState = et, _.memoizedState = et, _.flags & 256) {
              rt = Ji(Error(p$1(423)), _), _ = lj(d, _, j, $, rt);
              break e;
            } else if (j !== rt) {
              rt = Ji(Error(p$1(424)), _), _ = lj(d, _, j, $, rt);
              break e;
            } else for (yg = Lf(_.stateNode.containerInfo.firstChild), xg = _, I = true, zg = null, $ = Vg(_, null, j, $), _.child = $; $; ) $.flags = $.flags & -3 | 4096, $ = $.sibling;
            else {
              if (Ig(), j === rt) {
                _ = Zi(d, _, $);
                break e;
              }
              Xi(d, _, j, $);
            }
            _ = _.child;
          }
          return _;
        case 5:
          return Ah(_), d === null && Eg(_), j = _.type, rt = _.pendingProps, et = d !== null ? d.memoizedProps : null, st = rt.children, Ef(j, rt) ? st = null : et !== null && Ef(j, et) && (_.flags |= 32), gj(d, _), Xi(d, _, st, $), _.child;
        case 6:
          return d === null && Eg(_), null;
        case 13:
          return oj(d, _, $);
        case 4:
          return yh(_, _.stateNode.containerInfo), j = _.pendingProps, d === null ? _.child = Ug(_, null, j, $) : Xi(d, _, j, $), _.child;
        case 11:
          return j = _.type, rt = _.pendingProps, rt = _.elementType === j ? rt : Ci(j, rt), Yi(d, _, j, rt, $);
        case 7:
          return Xi(d, _, _.pendingProps, $), _.child;
        case 8:
          return Xi(d, _, _.pendingProps.children, $), _.child;
        case 12:
          return Xi(d, _, _.pendingProps.children, $), _.child;
        case 10:
          e: {
            if (j = _.type._context, rt = _.pendingProps, et = _.memoizedProps, st = rt.value, G(Wg, j._currentValue), j._currentValue = st, et !== null) if (He(et.value, st)) {
              if (et.children === rt.children && !Wf.current) {
                _ = Zi(d, _, $);
                break e;
              }
            } else for (et = _.child, et !== null && (et.return = _); et !== null; ) {
              var pt = et.dependencies;
              if (pt !== null) {
                st = et.child;
                for (var Et = pt.firstContext; Et !== null; ) {
                  if (Et.context === j) {
                    if (et.tag === 1) {
                      Et = mh(-1, $ & -$), Et.tag = 2;
                      var Bt = et.updateQueue;
                      if (Bt !== null) {
                        Bt = Bt.shared;
                        var St = Bt.pending;
                        St === null ? Et.next = Et : (Et.next = St.next, St.next = Et), Bt.pending = Et;
                      }
                    }
                    et.lanes |= $, Et = et.alternate, Et !== null && (Et.lanes |= $), bh(et.return, $, _), pt.lanes |= $;
                    break;
                  }
                  Et = Et.next;
                }
              } else if (et.tag === 10) st = et.type === _.type ? null : et.child;
              else if (et.tag === 18) {
                if (st = et.return, st === null) throw Error(p$1(341));
                st.lanes |= $, pt = st.alternate, pt !== null && (pt.lanes |= $), bh(st, $, _), st = et.sibling;
              } else st = et.child;
              if (st !== null) st.return = et;
              else for (st = et; st !== null; ) {
                if (st === _) {
                  st = null;
                  break;
                }
                if (et = st.sibling, et !== null) {
                  et.return = st.return, st = et;
                  break;
                }
                st = st.return;
              }
              et = st;
            }
            Xi(d, _, rt.children, $), _ = _.child;
          }
          return _;
        case 9:
          return rt = _.type, j = _.pendingProps.children, ch(_, $), rt = eh(rt), j = j(rt), _.flags |= 1, Xi(d, _, j, $), _.child;
        case 14:
          return j = _.type, rt = Ci(j, _.pendingProps), rt = Ci(j.type, rt), $i(d, _, j, rt, $);
        case 15:
          return bj(d, _, _.type, _.pendingProps, $);
        case 17:
          return j = _.type, rt = _.pendingProps, rt = _.elementType === j ? rt : Ci(j, rt), ij(d, _), _.tag = 1, Zf(j) ? (d = true, cg(_)) : d = false, ch(_, $), Gi(_, j, rt), Ii(_, j, rt, $), jj(null, _, j, true, d, $);
        case 19:
          return xj(d, _, $);
        case 22:
          return dj(d, _, $);
      }
      throw Error(p$1(156, _.tag));
    };
    function Fk(d, _) {
      return ac(d, _);
    }
    function $k(d, _, $, j) {
      this.tag = d, this.key = $, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = _, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = j, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
    }
    function Bg(d, _, $, j) {
      return new $k(d, _, $, j);
    }
    function aj(d) {
      return d = d.prototype, !(!d || !d.isReactComponent);
    }
    function Zk(d) {
      if (typeof d == "function") return aj(d) ? 1 : 0;
      if (d != null) {
        if (d = d.$$typeof, d === Da) return 11;
        if (d === Ga) return 14;
      }
      return 2;
    }
    function Pg(d, _) {
      var $ = d.alternate;
      return $ === null ? ($ = Bg(d.tag, _, d.key, d.mode), $.elementType = d.elementType, $.type = d.type, $.stateNode = d.stateNode, $.alternate = d, d.alternate = $) : ($.pendingProps = _, $.type = d.type, $.flags = 0, $.subtreeFlags = 0, $.deletions = null), $.flags = d.flags & 14680064, $.childLanes = d.childLanes, $.lanes = d.lanes, $.child = d.child, $.memoizedProps = d.memoizedProps, $.memoizedState = d.memoizedState, $.updateQueue = d.updateQueue, _ = d.dependencies, $.dependencies = _ === null ? null : {
        lanes: _.lanes,
        firstContext: _.firstContext
      }, $.sibling = d.sibling, $.index = d.index, $.ref = d.ref, $;
    }
    function Rg(d, _, $, j, rt, et) {
      var st = 2;
      if (j = d, typeof d == "function") aj(d) && (st = 1);
      else if (typeof d == "string") st = 5;
      else e: switch (d) {
        case ya:
          return Tg($.children, rt, et, _);
        case za:
          st = 8, rt |= 8;
          break;
        case Aa:
          return d = Bg(12, $, _, rt | 2), d.elementType = Aa, d.lanes = et, d;
        case Ea:
          return d = Bg(13, $, _, rt), d.elementType = Ea, d.lanes = et, d;
        case Fa:
          return d = Bg(19, $, _, rt), d.elementType = Fa, d.lanes = et, d;
        case Ia:
          return pj($, rt, et, _);
        default:
          if (typeof d == "object" && d !== null) switch (d.$$typeof) {
            case Ba:
              st = 10;
              break e;
            case Ca:
              st = 9;
              break e;
            case Da:
              st = 11;
              break e;
            case Ga:
              st = 14;
              break e;
            case Ha:
              st = 16, j = null;
              break e;
          }
          throw Error(p$1(130, d == null ? d : typeof d, ""));
      }
      return _ = Bg(st, $, _, rt), _.elementType = d, _.type = j, _.lanes = et, _;
    }
    function Tg(d, _, $, j) {
      return d = Bg(7, d, j, _), d.lanes = $, d;
    }
    function pj(d, _, $, j) {
      return d = Bg(22, d, j, _), d.elementType = Ia, d.lanes = $, d.stateNode = {
        isHidden: false
      }, d;
    }
    function Qg(d, _, $) {
      return d = Bg(6, d, null, _), d.lanes = $, d;
    }
    function Sg(d, _, $) {
      return _ = Bg(4, d.children !== null ? d.children : [], d.key, _), _.lanes = $, _.stateNode = {
        containerInfo: d.containerInfo,
        pendingChildren: null,
        implementation: d.implementation
      }, _;
    }
    function al(d, _, $, j, rt) {
      this.tag = _, this.containerInfo = d, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = zc(0), this.expirationTimes = zc(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = zc(0), this.identifierPrefix = j, this.onRecoverableError = rt, this.mutableSourceEagerHydrationData = null;
    }
    function bl(d, _, $, j, rt, et, st, pt, Et) {
      return d = new al(d, _, $, pt, Et), _ === 1 ? (_ = 1, et === true && (_ |= 8)) : _ = 0, et = Bg(3, null, null, _), d.current = et, et.stateNode = d, et.memoizedState = {
        element: j,
        isDehydrated: $,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null
      }, kh(et), d;
    }
    function cl(d, _, $) {
      var j = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return {
        $$typeof: wa,
        key: j == null ? null : "" + j,
        children: d,
        containerInfo: _,
        implementation: $
      };
    }
    function dl(d) {
      if (!d) return Vf;
      d = d._reactInternals;
      e: {
        if (Vb(d) !== d || d.tag !== 1) throw Error(p$1(170));
        var _ = d;
        do {
          switch (_.tag) {
            case 3:
              _ = _.stateNode.context;
              break e;
            case 1:
              if (Zf(_.type)) {
                _ = _.stateNode.__reactInternalMemoizedMergedChildContext;
                break e;
              }
          }
          _ = _.return;
        } while (_ !== null);
        throw Error(p$1(171));
      }
      if (d.tag === 1) {
        var $ = d.type;
        if (Zf($)) return bg(d, $, _);
      }
      return _;
    }
    function el(d, _, $, j, rt, et, st, pt, Et) {
      return d = bl($, j, true, d, rt, et, st, pt, Et), d.context = dl(null), $ = d.current, j = R$1(), rt = yi($), et = mh(j, rt), et.callback = _ ?? null, nh($, et, rt), d.current.lanes = rt, Ac(d, rt, j), Dk(d, j), d;
    }
    function fl(d, _, $, j) {
      var rt = _.current, et = R$1(), st = yi(rt);
      return $ = dl($), _.context === null ? _.context = $ : _.pendingContext = $, _ = mh(et, st), _.payload = {
        element: d
      }, j = j === void 0 ? null : j, j !== null && (_.callback = j), d = nh(rt, _, st), d !== null && (gi(d, rt, st, et), oh(d, rt, st)), st;
    }
    function gl(d) {
      if (d = d.current, !d.child) return null;
      switch (d.child.tag) {
        case 5:
          return d.child.stateNode;
        default:
          return d.child.stateNode;
      }
    }
    function hl(d, _) {
      if (d = d.memoizedState, d !== null && d.dehydrated !== null) {
        var $ = d.retryLane;
        d.retryLane = $ !== 0 && $ < _ ? $ : _;
      }
    }
    function il(d, _) {
      hl(d, _), (d = d.alternate) && hl(d, _);
    }
    function jl() {
      return null;
    }
    var kl = typeof reportError == "function" ? reportError : function(d) {
      console.error(d);
    };
    function ll(d) {
      this._internalRoot = d;
    }
    ml.prototype.render = ll.prototype.render = function(d) {
      var _ = this._internalRoot;
      if (_ === null) throw Error(p$1(409));
      fl(d, _, null, null);
    };
    ml.prototype.unmount = ll.prototype.unmount = function() {
      var d = this._internalRoot;
      if (d !== null) {
        this._internalRoot = null;
        var _ = d.containerInfo;
        Rk(function() {
          fl(null, d, null, null);
        }), _[uf] = null;
      }
    };
    function ml(d) {
      this._internalRoot = d;
    }
    ml.prototype.unstable_scheduleHydration = function(d) {
      if (d) {
        var _ = Hc();
        d = {
          blockedOn: null,
          target: d,
          priority: _
        };
        for (var $ = 0; $ < Qc.length && _ !== 0 && _ < Qc[$].priority; $++) ;
        Qc.splice($, 0, d), $ === 0 && Vc(d);
      }
    };
    function nl(d) {
      return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11);
    }
    function ol(d) {
      return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11 && (d.nodeType !== 8 || d.nodeValue !== " react-mount-point-unstable "));
    }
    function pl() {
    }
    function ql(d, _, $, j, rt) {
      if (rt) {
        if (typeof j == "function") {
          var et = j;
          j = function() {
            var Bt = gl(st);
            et.call(Bt);
          };
        }
        var st = el(_, j, d, 0, null, false, false, "", pl);
        return d._reactRootContainer = st, d[uf] = st.current, sf(d.nodeType === 8 ? d.parentNode : d), Rk(), st;
      }
      for (; rt = d.lastChild; ) d.removeChild(rt);
      if (typeof j == "function") {
        var pt = j;
        j = function() {
          var Bt = gl(Et);
          pt.call(Bt);
        };
      }
      var Et = bl(d, 0, false, null, null, false, false, "", pl);
      return d._reactRootContainer = Et, d[uf] = Et.current, sf(d.nodeType === 8 ? d.parentNode : d), Rk(function() {
        fl(_, Et, $, j);
      }), Et;
    }
    function rl(d, _, $, j, rt) {
      var et = $._reactRootContainer;
      if (et) {
        var st = et;
        if (typeof rt == "function") {
          var pt = rt;
          rt = function() {
            var Et = gl(st);
            pt.call(Et);
          };
        }
        fl(_, st, d, rt);
      } else st = ql($, _, d, rt, j);
      return gl(st);
    }
    Ec = function(d) {
      switch (d.tag) {
        case 3:
          var _ = d.stateNode;
          if (_.current.memoizedState.isDehydrated) {
            var $ = tc(_.pendingLanes);
            $ !== 0 && (Cc(_, $ | 1), Dk(_, B()), !(K$1 & 6) && (Gj = B() + 500, jg()));
          }
          break;
        case 13:
          Rk(function() {
            var j = ih(d, 1);
            if (j !== null) {
              var rt = R$1();
              gi(j, d, 1, rt);
            }
          }), il(d, 1);
      }
    };
    Fc = function(d) {
      if (d.tag === 13) {
        var _ = ih(d, 134217728);
        if (_ !== null) {
          var $ = R$1();
          gi(_, d, 134217728, $);
        }
        il(d, 134217728);
      }
    };
    Gc = function(d) {
      if (d.tag === 13) {
        var _ = yi(d), $ = ih(d, _);
        if ($ !== null) {
          var j = R$1();
          gi($, d, _, j);
        }
        il(d, _);
      }
    };
    Hc = function() {
      return C;
    };
    Ic = function(d, _) {
      var $ = C;
      try {
        return C = d, _();
      } finally {
        C = $;
      }
    };
    yb = function(d, _, $) {
      switch (_) {
        case "input":
          if (bb(d, $), _ = $.name, $.type === "radio" && _ != null) {
            for ($ = d; $.parentNode; ) $ = $.parentNode;
            for ($ = $.querySelectorAll("input[name=" + JSON.stringify("" + _) + '][type="radio"]'), _ = 0; _ < $.length; _++) {
              var j = $[_];
              if (j !== d && j.form === d.form) {
                var rt = Db(j);
                if (!rt) throw Error(p$1(90));
                Wa(j), bb(j, rt);
              }
            }
          }
          break;
        case "textarea":
          ib(d, $);
          break;
        case "select":
          _ = $.value, _ != null && fb(d, !!$.multiple, _, false);
      }
    };
    Gb = Qk;
    Hb = Rk;
    var sl = {
      usingClientEntryPoint: false,
      Events: [
        Cb,
        ue,
        Db,
        Eb,
        Fb,
        Qk
      ]
    }, tl = {
      findFiberByHostInstance: Wc,
      bundleType: 0,
      version: "18.3.1",
      rendererPackageName: "react-dom"
    }, ul = {
      bundleType: tl.bundleType,
      version: tl.version,
      rendererPackageName: tl.rendererPackageName,
      rendererConfig: tl.rendererConfig,
      overrideHookState: null,
      overrideHookStateDeletePath: null,
      overrideHookStateRenamePath: null,
      overrideProps: null,
      overridePropsDeletePath: null,
      overridePropsRenamePath: null,
      setErrorHandler: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ua.ReactCurrentDispatcher,
      findHostInstanceByFiber: function(d) {
        return d = Zb(d), d === null ? null : d.stateNode;
      },
      findFiberByHostInstance: tl.findFiberByHostInstance || jl,
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null,
      reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
    };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
      var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (!vl.isDisabled && vl.supportsFiber) try {
        kc = vl.inject(ul), lc = vl;
      } catch {
      }
    }
    reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
    reactDom_production_min.createPortal = function(d, _) {
      var $ = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
      if (!nl(_)) throw Error(p$1(200));
      return cl(d, _, null, $);
    };
    reactDom_production_min.createRoot = function(d, _) {
      if (!nl(d)) throw Error(p$1(299));
      var $ = false, j = "", rt = kl;
      return _ != null && (_.unstable_strictMode === true && ($ = true), _.identifierPrefix !== void 0 && (j = _.identifierPrefix), _.onRecoverableError !== void 0 && (rt = _.onRecoverableError)), _ = bl(d, 1, false, null, null, $, false, j, rt), d[uf] = _.current, sf(d.nodeType === 8 ? d.parentNode : d), new ll(_);
    };
    reactDom_production_min.findDOMNode = function(d) {
      if (d == null) return null;
      if (d.nodeType === 1) return d;
      var _ = d._reactInternals;
      if (_ === void 0) throw typeof d.render == "function" ? Error(p$1(188)) : (d = Object.keys(d).join(","), Error(p$1(268, d)));
      return d = Zb(_), d = d === null ? null : d.stateNode, d;
    };
    reactDom_production_min.flushSync = function(d) {
      return Rk(d);
    };
    reactDom_production_min.hydrate = function(d, _, $) {
      if (!ol(_)) throw Error(p$1(200));
      return rl(null, d, _, true, $);
    };
    reactDom_production_min.hydrateRoot = function(d, _, $) {
      if (!nl(d)) throw Error(p$1(405));
      var j = $ != null && $.hydratedSources || null, rt = false, et = "", st = kl;
      if ($ != null && ($.unstable_strictMode === true && (rt = true), $.identifierPrefix !== void 0 && (et = $.identifierPrefix), $.onRecoverableError !== void 0 && (st = $.onRecoverableError)), _ = el(_, null, d, 1, $ ?? null, rt, false, et, st), d[uf] = _.current, sf(d), j) for (d = 0; d < j.length; d++) $ = j[d], rt = $._getVersion, rt = rt($._source), _.mutableSourceEagerHydrationData == null ? _.mutableSourceEagerHydrationData = [
        $,
        rt
      ] : _.mutableSourceEagerHydrationData.push($, rt);
      return new ml(_);
    };
    reactDom_production_min.render = function(d, _, $) {
      if (!ol(_)) throw Error(p$1(200));
      return rl(null, d, _, false, $);
    };
    reactDom_production_min.unmountComponentAtNode = function(d) {
      if (!ol(d)) throw Error(p$1(40));
      return d._reactRootContainer ? (Rk(function() {
        rl(null, null, d, false, function() {
          d._reactRootContainer = null, d[uf] = null;
        });
      }), true) : false;
    };
    reactDom_production_min.unstable_batchedUpdates = Qk;
    reactDom_production_min.unstable_renderSubtreeIntoContainer = function(d, _, $, j) {
      if (!ol($)) throw Error(p$1(200));
      if (d == null || d._reactInternals === void 0) throw Error(p$1(38));
      return rl(d, _, $, false, j);
    };
    reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
    function checkDCE() {
      if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (d) {
        console.error(d);
      }
    }
    checkDCE(), reactDom.exports = reactDom_production_min;
    var reactDomExports = reactDom.exports, m = reactDomExports;
    client.createRoot = m.createRoot, client.hydrateRoot = m.hydrateRoot;
    const global$1 = globalThis || void 0 || self;
    var dist$5 = {};
    Object.defineProperty(dist$5, "__esModule", {
      value: true
    });
    dist$5.parse = parse$7;
    dist$5.serialize = serialize;
    const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/, cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/, domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i, pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/, __toString = Object.prototype.toString, NullObject = (() => {
      const d = function() {
      };
      return d.prototype = /* @__PURE__ */ Object.create(null), d;
    })();
    function parse$7(d, _) {
      const $ = new NullObject(), j = d.length;
      if (j < 2) return $;
      const rt = (_ == null ? void 0 : _.decode) || decode$2;
      let et = 0;
      do {
        const st = d.indexOf("=", et);
        if (st === -1) break;
        const pt = d.indexOf(";", et), Et = pt === -1 ? j : pt;
        if (st > Et) {
          et = d.lastIndexOf(";", st - 1) + 1;
          continue;
        }
        const Bt = startIndex(d, et, st), St = endIndex(d, st, Bt), $t = d.slice(Bt, St);
        if ($[$t] === void 0) {
          let kt = startIndex(d, st + 1, Et), Tt = endIndex(d, Et, kt);
          const Pt = rt(d.slice(kt, Tt));
          $[$t] = Pt;
        }
        et = Et + 1;
      } while (et < j);
      return $;
    }
    function startIndex(d, _, $) {
      do {
        const j = d.charCodeAt(_);
        if (j !== 32 && j !== 9) return _;
      } while (++_ < $);
      return $;
    }
    function endIndex(d, _, $) {
      for (; _ > $; ) {
        const j = d.charCodeAt(--_);
        if (j !== 32 && j !== 9) return _ + 1;
      }
      return $;
    }
    function serialize(d, _, $) {
      const j = ($ == null ? void 0 : $.encode) || encodeURIComponent;
      if (!cookieNameRegExp.test(d)) throw new TypeError(`argument name is invalid: ${d}`);
      const rt = j(_);
      if (!cookieValueRegExp.test(rt)) throw new TypeError(`argument val is invalid: ${_}`);
      let et = d + "=" + rt;
      if (!$) return et;
      if ($.maxAge !== void 0) {
        if (!Number.isInteger($.maxAge)) throw new TypeError(`option maxAge is invalid: ${$.maxAge}`);
        et += "; Max-Age=" + $.maxAge;
      }
      if ($.domain) {
        if (!domainValueRegExp.test($.domain)) throw new TypeError(`option domain is invalid: ${$.domain}`);
        et += "; Domain=" + $.domain;
      }
      if ($.path) {
        if (!pathValueRegExp.test($.path)) throw new TypeError(`option path is invalid: ${$.path}`);
        et += "; Path=" + $.path;
      }
      if ($.expires) {
        if (!isDate$1($.expires) || !Number.isFinite($.expires.valueOf())) throw new TypeError(`option expires is invalid: ${$.expires}`);
        et += "; Expires=" + $.expires.toUTCString();
      }
      if ($.httpOnly && (et += "; HttpOnly"), $.secure && (et += "; Secure"), $.partitioned && (et += "; Partitioned"), $.priority) switch (typeof $.priority == "string" ? $.priority.toLowerCase() : void 0) {
        case "low":
          et += "; Priority=Low";
          break;
        case "medium":
          et += "; Priority=Medium";
          break;
        case "high":
          et += "; Priority=High";
          break;
        default:
          throw new TypeError(`option priority is invalid: ${$.priority}`);
      }
      if ($.sameSite) switch (typeof $.sameSite == "string" ? $.sameSite.toLowerCase() : $.sameSite) {
        case true:
        case "strict":
          et += "; SameSite=Strict";
          break;
        case "lax":
          et += "; SameSite=Lax";
          break;
        case "none":
          et += "; SameSite=None";
          break;
        default:
          throw new TypeError(`option sameSite is invalid: ${$.sameSite}`);
      }
      return et;
    }
    function decode$2(d) {
      if (d.indexOf("%") === -1) return d;
      try {
        return decodeURIComponent(d);
      } catch {
        return d;
      }
    }
    function isDate$1(d) {
      return __toString.call(d) === "[object Date]";
    }
    var PopStateEventType = "popstate";
    function createBrowserHistory(d = {}) {
      function _(j, rt) {
        let { pathname: et, search: st, hash: pt } = j.location;
        return createLocation("", {
          pathname: et,
          search: st,
          hash: pt
        }, rt.state && rt.state.usr || null, rt.state && rt.state.key || "default");
      }
      function $(j, rt) {
        return typeof rt == "string" ? rt : createPath(rt);
      }
      return getUrlBasedHistory(_, $, null, d);
    }
    function invariant(d, _) {
      if (d === false || d === null || typeof d > "u") throw new Error(_);
    }
    function warning(d, _) {
      if (!d) {
        typeof console < "u" && console.warn(_);
        try {
          throw new Error(_);
        } catch {
        }
      }
    }
    function createKey() {
      return Math.random().toString(36).substring(2, 10);
    }
    function getHistoryState(d, _) {
      return {
        usr: d.state,
        key: d.key,
        idx: _
      };
    }
    function createLocation(d, _, $ = null, j) {
      return {
        pathname: typeof d == "string" ? d : d.pathname,
        search: "",
        hash: "",
        ...typeof _ == "string" ? parsePath(_) : _,
        state: $,
        key: _ && _.key || j || createKey()
      };
    }
    function createPath({ pathname: d = "/", search: _ = "", hash: $ = "" }) {
      return _ && _ !== "?" && (d += _.charAt(0) === "?" ? _ : "?" + _), $ && $ !== "#" && (d += $.charAt(0) === "#" ? $ : "#" + $), d;
    }
    function parsePath(d) {
      let _ = {};
      if (d) {
        let $ = d.indexOf("#");
        $ >= 0 && (_.hash = d.substring($), d = d.substring(0, $));
        let j = d.indexOf("?");
        j >= 0 && (_.search = d.substring(j), d = d.substring(0, j)), d && (_.pathname = d);
      }
      return _;
    }
    function getUrlBasedHistory(d, _, $, j = {}) {
      let { window: rt = document.defaultView, v5Compat: et = false } = j, st = rt.history, pt = "POP", Et = null, Bt = St();
      Bt == null && (Bt = 0, st.replaceState({
        ...st.state,
        idx: Bt
      }, ""));
      function St() {
        return (st.state || {
          idx: null
        }).idx;
      }
      function $t() {
        pt = "POP";
        let jt = St(), Dt = jt == null ? null : jt - Bt;
        Bt = jt, Et && Et({
          action: pt,
          location: It.location,
          delta: Dt
        });
      }
      function kt(jt, Dt) {
        pt = "PUSH";
        let Ot = createLocation(It.location, jt, Dt);
        Bt = St() + 1;
        let Ft = getHistoryState(Ot, Bt), Lt = It.createHref(Ot);
        try {
          st.pushState(Ft, "", Lt);
        } catch (Zt) {
          if (Zt instanceof DOMException && Zt.name === "DataCloneError") throw Zt;
          rt.location.assign(Lt);
        }
        et && Et && Et({
          action: pt,
          location: It.location,
          delta: 1
        });
      }
      function Tt(jt, Dt) {
        pt = "REPLACE";
        let Ot = createLocation(It.location, jt, Dt);
        Bt = St();
        let Ft = getHistoryState(Ot, Bt), Lt = It.createHref(Ot);
        st.replaceState(Ft, "", Lt), et && Et && Et({
          action: pt,
          location: It.location,
          delta: 0
        });
      }
      function Pt(jt) {
        let Dt = rt.location.origin !== "null" ? rt.location.origin : rt.location.href, Ot = typeof jt == "string" ? jt : createPath(jt);
        return Ot = Ot.replace(/ $/, "%20"), invariant(Dt, `No window.location.(origin|href) available to create URL for href: ${Ot}`), new URL(Ot, Dt);
      }
      let It = {
        get action() {
          return pt;
        },
        get location() {
          return d(rt, st);
        },
        listen(jt) {
          if (Et) throw new Error("A history only accepts one active listener");
          return rt.addEventListener(PopStateEventType, $t), Et = jt, () => {
            rt.removeEventListener(PopStateEventType, $t), Et = null;
          };
        },
        createHref(jt) {
          return _(rt, jt);
        },
        createURL: Pt,
        encodeLocation(jt) {
          let Dt = Pt(jt);
          return {
            pathname: Dt.pathname,
            search: Dt.search,
            hash: Dt.hash
          };
        },
        push: kt,
        replace: Tt,
        go(jt) {
          return st.go(jt);
        }
      };
      return It;
    }
    function matchRoutes(d, _, $ = "/") {
      return matchRoutesImpl(d, _, $, false);
    }
    function matchRoutesImpl(d, _, $, j) {
      let rt = typeof _ == "string" ? parsePath(_) : _, et = stripBasename(rt.pathname || "/", $);
      if (et == null) return null;
      let st = flattenRoutes(d);
      rankRouteBranches(st);
      let pt = null;
      for (let Et = 0; pt == null && Et < st.length; ++Et) {
        let Bt = decodePath(et);
        pt = matchRouteBranch(st[Et], Bt, j);
      }
      return pt;
    }
    function flattenRoutes(d, _ = [], $ = [], j = "") {
      let rt = (et, st, pt) => {
        let Et = {
          relativePath: pt === void 0 ? et.path || "" : pt,
          caseSensitive: et.caseSensitive === true,
          childrenIndex: st,
          route: et
        };
        Et.relativePath.startsWith("/") && (invariant(Et.relativePath.startsWith(j), `Absolute route path "${Et.relativePath}" nested under path "${j}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`), Et.relativePath = Et.relativePath.slice(j.length));
        let Bt = joinPaths([
          j,
          Et.relativePath
        ]), St = $.concat(Et);
        et.children && et.children.length > 0 && (invariant(et.index !== true, `Index routes must not have child routes. Please remove all child routes from route path "${Bt}".`), flattenRoutes(et.children, _, St, Bt)), !(et.path == null && !et.index) && _.push({
          path: Bt,
          score: computeScore(Bt, et.index),
          routesMeta: St
        });
      };
      return d.forEach((et, st) => {
        var _a3;
        if (et.path === "" || !((_a3 = et.path) == null ? void 0 : _a3.includes("?"))) rt(et, st);
        else for (let pt of explodeOptionalSegments(et.path)) rt(et, st, pt);
      }), _;
    }
    function explodeOptionalSegments(d) {
      let _ = d.split("/");
      if (_.length === 0) return [];
      let [$, ...j] = _, rt = $.endsWith("?"), et = $.replace(/\?$/, "");
      if (j.length === 0) return rt ? [
        et,
        ""
      ] : [
        et
      ];
      let st = explodeOptionalSegments(j.join("/")), pt = [];
      return pt.push(...st.map((Et) => Et === "" ? et : [
        et,
        Et
      ].join("/"))), rt && pt.push(...st), pt.map((Et) => d.startsWith("/") && Et === "" ? "/" : Et);
    }
    function rankRouteBranches(d) {
      d.sort((_, $) => _.score !== $.score ? $.score - _.score : compareIndexes(_.routesMeta.map((j) => j.childrenIndex), $.routesMeta.map((j) => j.childrenIndex)));
    }
    var paramRe = /^:[\w-]+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (d) => d === "*";
    function computeScore(d, _) {
      let $ = d.split("/"), j = $.length;
      return $.some(isSplat) && (j += splatPenalty), _ && (j += indexRouteValue), $.filter((rt) => !isSplat(rt)).reduce((rt, et) => rt + (paramRe.test(et) ? dynamicSegmentValue : et === "" ? emptySegmentValue : staticSegmentValue), j);
    }
    function compareIndexes(d, _) {
      return d.length === _.length && d.slice(0, -1).every((j, rt) => j === _[rt]) ? d[d.length - 1] - _[_.length - 1] : 0;
    }
    function matchRouteBranch(d, _, $ = false) {
      let { routesMeta: j } = d, rt = {}, et = "/", st = [];
      for (let pt = 0; pt < j.length; ++pt) {
        let Et = j[pt], Bt = pt === j.length - 1, St = et === "/" ? _ : _.slice(et.length) || "/", $t = matchPath({
          path: Et.relativePath,
          caseSensitive: Et.caseSensitive,
          end: Bt
        }, St), kt = Et.route;
        if (!$t && Bt && $ && !j[j.length - 1].route.index && ($t = matchPath({
          path: Et.relativePath,
          caseSensitive: Et.caseSensitive,
          end: false
        }, St)), !$t) return null;
        Object.assign(rt, $t.params), st.push({
          params: rt,
          pathname: joinPaths([
            et,
            $t.pathname
          ]),
          pathnameBase: normalizePathname(joinPaths([
            et,
            $t.pathnameBase
          ])),
          route: kt
        }), $t.pathnameBase !== "/" && (et = joinPaths([
          et,
          $t.pathnameBase
        ]));
      }
      return st;
    }
    function matchPath(d, _) {
      typeof d == "string" && (d = {
        path: d,
        caseSensitive: false,
        end: true
      });
      let [$, j] = compilePath(d.path, d.caseSensitive, d.end), rt = _.match($);
      if (!rt) return null;
      let et = rt[0], st = et.replace(/(.)\/+$/, "$1"), pt = rt.slice(1);
      return {
        params: j.reduce((Bt, { paramName: St, isOptional: $t }, kt) => {
          if (St === "*") {
            let Pt = pt[kt] || "";
            st = et.slice(0, et.length - Pt.length).replace(/(.)\/+$/, "$1");
          }
          const Tt = pt[kt];
          return $t && !Tt ? Bt[St] = void 0 : Bt[St] = (Tt || "").replace(/%2F/g, "/"), Bt;
        }, {}),
        pathname: et,
        pathnameBase: st,
        pattern: d
      };
    }
    function compilePath(d, _ = false, $ = true) {
      warning(d === "*" || !d.endsWith("*") || d.endsWith("/*"), `Route path "${d}" will be treated as if it were "${d.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${d.replace(/\*$/, "/*")}".`);
      let j = [], rt = "^" + d.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (st, pt, Et) => (j.push({
        paramName: pt,
        isOptional: Et != null
      }), Et ? "/?([^\\/]+)?" : "/([^\\/]+)"));
      return d.endsWith("*") ? (j.push({
        paramName: "*"
      }), rt += d === "*" || d === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : $ ? rt += "\\/*$" : d !== "" && d !== "/" && (rt += "(?:(?=\\/|$))"), [
        new RegExp(rt, _ ? void 0 : "i"),
        j
      ];
    }
    function decodePath(d) {
      try {
        return d.split("/").map((_) => decodeURIComponent(_).replace(/\//g, "%2F")).join("/");
      } catch (_) {
        return warning(false, `The URL path "${d}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${_}).`), d;
      }
    }
    function stripBasename(d, _) {
      if (_ === "/") return d;
      if (!d.toLowerCase().startsWith(_.toLowerCase())) return null;
      let $ = _.endsWith("/") ? _.length - 1 : _.length, j = d.charAt($);
      return j && j !== "/" ? null : d.slice($) || "/";
    }
    function resolvePath(d, _ = "/") {
      let { pathname: $, search: j = "", hash: rt = "" } = typeof d == "string" ? parsePath(d) : d;
      return {
        pathname: $ ? $.startsWith("/") ? $ : resolvePathname($, _) : _,
        search: normalizeSearch(j),
        hash: normalizeHash(rt)
      };
    }
    function resolvePathname(d, _) {
      let $ = _.replace(/\/+$/, "").split("/");
      return d.split("/").forEach((rt) => {
        rt === ".." ? $.length > 1 && $.pop() : rt !== "." && $.push(rt);
      }), $.length > 1 ? $.join("/") : "/";
    }
    function getInvalidPathError(d, _, $, j) {
      return `Cannot include a '${d}' character in a manually specified \`to.${_}\` field [${JSON.stringify(j)}].  Please separate it out to the \`to.${$}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
    }
    function getPathContributingMatches(d) {
      return d.filter((_, $) => $ === 0 || _.route.path && _.route.path.length > 0);
    }
    function getResolveToMatches(d) {
      let _ = getPathContributingMatches(d);
      return _.map(($, j) => j === _.length - 1 ? $.pathname : $.pathnameBase);
    }
    function resolveTo(d, _, $, j = false) {
      let rt;
      typeof d == "string" ? rt = parsePath(d) : (rt = {
        ...d
      }, invariant(!rt.pathname || !rt.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", rt)), invariant(!rt.pathname || !rt.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", rt)), invariant(!rt.search || !rt.search.includes("#"), getInvalidPathError("#", "search", "hash", rt)));
      let et = d === "" || rt.pathname === "", st = et ? "/" : rt.pathname, pt;
      if (st == null) pt = $;
      else {
        let $t = _.length - 1;
        if (!j && st.startsWith("..")) {
          let kt = st.split("/");
          for (; kt[0] === ".."; ) kt.shift(), $t -= 1;
          rt.pathname = kt.join("/");
        }
        pt = $t >= 0 ? _[$t] : "/";
      }
      let Et = resolvePath(rt, pt), Bt = st && st !== "/" && st.endsWith("/"), St = (et || st === ".") && $.endsWith("/");
      return !Et.pathname.endsWith("/") && (Bt || St) && (Et.pathname += "/"), Et;
    }
    var joinPaths = (d) => d.join("/").replace(/\/\/+/g, "/"), normalizePathname = (d) => d.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (d) => !d || d === "?" ? "" : d.startsWith("?") ? d : "?" + d, normalizeHash = (d) => !d || d === "#" ? "" : d.startsWith("#") ? d : "#" + d;
    function isRouteErrorResponse(d) {
      return d != null && typeof d.status == "number" && typeof d.statusText == "string" && typeof d.internal == "boolean" && "data" in d;
    }
    var validMutationMethodsArr = [
      "POST",
      "PUT",
      "PATCH",
      "DELETE"
    ];
    new Set(validMutationMethodsArr);
    var validRequestMethodsArr = [
      "GET",
      ...validMutationMethodsArr
    ];
    new Set(validRequestMethodsArr);
    var DataRouterContext = reactExports.createContext(null);
    DataRouterContext.displayName = "DataRouter";
    var DataRouterStateContext = reactExports.createContext(null);
    DataRouterStateContext.displayName = "DataRouterState";
    var ViewTransitionContext = reactExports.createContext({
      isTransitioning: false
    });
    ViewTransitionContext.displayName = "ViewTransition";
    var FetchersContext = reactExports.createContext(/* @__PURE__ */ new Map());
    FetchersContext.displayName = "Fetchers";
    var AwaitContext = reactExports.createContext(null);
    AwaitContext.displayName = "Await";
    var NavigationContext = reactExports.createContext(null);
    NavigationContext.displayName = "Navigation";
    var LocationContext = reactExports.createContext(null);
    LocationContext.displayName = "Location";
    var RouteContext = reactExports.createContext({
      outlet: null,
      matches: [],
      isDataRoute: false
    });
    RouteContext.displayName = "Route";
    var RouteErrorContext = reactExports.createContext(null);
    RouteErrorContext.displayName = "RouteError";
    function useHref(d, { relative: _ } = {}) {
      invariant(useInRouterContext(), "useHref() may be used only in the context of a <Router> component.");
      let { basename: $, navigator: j } = reactExports.useContext(NavigationContext), { hash: rt, pathname: et, search: st } = useResolvedPath(d, {
        relative: _
      }), pt = et;
      return $ !== "/" && (pt = et === "/" ? $ : joinPaths([
        $,
        et
      ])), j.createHref({
        pathname: pt,
        search: st,
        hash: rt
      });
    }
    function useInRouterContext() {
      return reactExports.useContext(LocationContext) != null;
    }
    function useLocation() {
      return invariant(useInRouterContext(), "useLocation() may be used only in the context of a <Router> component."), reactExports.useContext(LocationContext).location;
    }
    var navigateEffectWarning = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
    function useIsomorphicLayoutEffect(d) {
      reactExports.useContext(NavigationContext).static || reactExports.useLayoutEffect(d);
    }
    function useNavigate() {
      let { isDataRoute: d } = reactExports.useContext(RouteContext);
      return d ? useNavigateStable() : useNavigateUnstable();
    }
    function useNavigateUnstable() {
      invariant(useInRouterContext(), "useNavigate() may be used only in the context of a <Router> component.");
      let d = reactExports.useContext(DataRouterContext), { basename: _, navigator: $ } = reactExports.useContext(NavigationContext), { matches: j } = reactExports.useContext(RouteContext), { pathname: rt } = useLocation(), et = JSON.stringify(getResolveToMatches(j)), st = reactExports.useRef(false);
      return useIsomorphicLayoutEffect(() => {
        st.current = true;
      }), reactExports.useCallback((Et, Bt = {}) => {
        if (warning(st.current, navigateEffectWarning), !st.current) return;
        if (typeof Et == "number") {
          $.go(Et);
          return;
        }
        let St = resolveTo(Et, JSON.parse(et), rt, Bt.relative === "path");
        d == null && _ !== "/" && (St.pathname = St.pathname === "/" ? _ : joinPaths([
          _,
          St.pathname
        ])), (Bt.replace ? $.replace : $.push)(St, Bt.state, Bt);
      }, [
        _,
        $,
        et,
        rt,
        d
      ]);
    }
    reactExports.createContext(null);
    function useResolvedPath(d, { relative: _ } = {}) {
      let { matches: $ } = reactExports.useContext(RouteContext), { pathname: j } = useLocation(), rt = JSON.stringify(getResolveToMatches($));
      return reactExports.useMemo(() => resolveTo(d, JSON.parse(rt), j, _ === "path"), [
        d,
        rt,
        j,
        _
      ]);
    }
    function useRoutes(d, _) {
      return useRoutesImpl(d, _);
    }
    function useRoutesImpl(d, _, $, j) {
      var _a3;
      invariant(useInRouterContext(), "useRoutes() may be used only in the context of a <Router> component.");
      let { navigator: rt, static: et } = reactExports.useContext(NavigationContext), { matches: st } = reactExports.useContext(RouteContext), pt = st[st.length - 1], Et = pt ? pt.params : {}, Bt = pt ? pt.pathname : "/", St = pt ? pt.pathnameBase : "/", $t = pt && pt.route;
      {
        let Ot = $t && $t.path || "";
        warningOnce(Bt, !$t || Ot.endsWith("*") || Ot.endsWith("*?"), `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${Bt}" (under <Route path="${Ot}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${Ot}"> to <Route path="${Ot === "/" ? "*" : `${Ot}/*`}">.`);
      }
      let kt = useLocation(), Tt;
      if (_) {
        let Ot = typeof _ == "string" ? parsePath(_) : _;
        invariant(St === "/" || ((_a3 = Ot.pathname) == null ? void 0 : _a3.startsWith(St)), `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${St}" but pathname "${Ot.pathname}" was given in the \`location\` prop.`), Tt = Ot;
      } else Tt = kt;
      let Pt = Tt.pathname || "/", It = Pt;
      if (St !== "/") {
        let Ot = St.replace(/^\//, "").split("/");
        It = "/" + Pt.replace(/^\//, "").split("/").slice(Ot.length).join("/");
      }
      let jt = !et && $ && $.matches && $.matches.length > 0 ? $.matches : matchRoutes(d, {
        pathname: It
      });
      warning($t || jt != null, `No routes matched location "${Tt.pathname}${Tt.search}${Tt.hash}" `), warning(jt == null || jt[jt.length - 1].route.element !== void 0 || jt[jt.length - 1].route.Component !== void 0 || jt[jt.length - 1].route.lazy !== void 0, `Matched leaf route at location "${Tt.pathname}${Tt.search}${Tt.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);
      let Dt = _renderMatches(jt && jt.map((Ot) => Object.assign({}, Ot, {
        params: Object.assign({}, Et, Ot.params),
        pathname: joinPaths([
          St,
          rt.encodeLocation ? rt.encodeLocation(Ot.pathname).pathname : Ot.pathname
        ]),
        pathnameBase: Ot.pathnameBase === "/" ? St : joinPaths([
          St,
          rt.encodeLocation ? rt.encodeLocation(Ot.pathnameBase).pathname : Ot.pathnameBase
        ])
      })), st, $, j);
      return _ && Dt ? reactExports.createElement(LocationContext.Provider, {
        value: {
          location: {
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: "default",
            ...Tt
          },
          navigationType: "POP"
        }
      }, Dt) : Dt;
    }
    function DefaultErrorComponent() {
      let d = useRouteError(), _ = isRouteErrorResponse(d) ? `${d.status} ${d.statusText}` : d instanceof Error ? d.message : JSON.stringify(d), $ = d instanceof Error ? d.stack : null, j = "rgba(200,200,200, 0.5)", rt = {
        padding: "0.5rem",
        backgroundColor: j
      }, et = {
        padding: "2px 4px",
        backgroundColor: j
      }, st = null;
      return console.error("Error handled by React Router default ErrorBoundary:", d), st = reactExports.createElement(reactExports.Fragment, null, reactExports.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), reactExports.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", reactExports.createElement("code", {
        style: et
      }, "ErrorBoundary"), " or", " ", reactExports.createElement("code", {
        style: et
      }, "errorElement"), " prop on your route.")), reactExports.createElement(reactExports.Fragment, null, reactExports.createElement("h2", null, "Unexpected Application Error!"), reactExports.createElement("h3", {
        style: {
          fontStyle: "italic"
        }
      }, _), $ ? reactExports.createElement("pre", {
        style: rt
      }, $) : null, st);
    }
    var defaultErrorElement = reactExports.createElement(DefaultErrorComponent, null), RenderErrorBoundary = class extends reactExports.Component {
      constructor(d) {
        super(d), this.state = {
          location: d.location,
          revalidation: d.revalidation,
          error: d.error
        };
      }
      static getDerivedStateFromError(d) {
        return {
          error: d
        };
      }
      static getDerivedStateFromProps(d, _) {
        return _.location !== d.location || _.revalidation !== "idle" && d.revalidation === "idle" ? {
          error: d.error,
          location: d.location,
          revalidation: d.revalidation
        } : {
          error: d.error !== void 0 ? d.error : _.error,
          location: _.location,
          revalidation: d.revalidation || _.revalidation
        };
      }
      componentDidCatch(d, _) {
        console.error("React Router caught the following error during render", d, _);
      }
      render() {
        return this.state.error !== void 0 ? reactExports.createElement(RouteContext.Provider, {
          value: this.props.routeContext
        }, reactExports.createElement(RouteErrorContext.Provider, {
          value: this.state.error,
          children: this.props.component
        })) : this.props.children;
      }
    };
    function RenderedRoute({ routeContext: d, match: _, children: $ }) {
      let j = reactExports.useContext(DataRouterContext);
      return j && j.static && j.staticContext && (_.route.errorElement || _.route.ErrorBoundary) && (j.staticContext._deepestRenderedBoundaryId = _.route.id), reactExports.createElement(RouteContext.Provider, {
        value: d
      }, $);
    }
    function _renderMatches(d, _ = [], $ = null, j = null) {
      if (d == null) {
        if (!$) return null;
        if ($.errors) d = $.matches;
        else if (_.length === 0 && !$.initialized && $.matches.length > 0) d = $.matches;
        else return null;
      }
      let rt = d, et = $ == null ? void 0 : $.errors;
      if (et != null) {
        let Et = rt.findIndex((Bt) => Bt.route.id && (et == null ? void 0 : et[Bt.route.id]) !== void 0);
        invariant(Et >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(et).join(",")}`), rt = rt.slice(0, Math.min(rt.length, Et + 1));
      }
      let st = false, pt = -1;
      if ($) for (let Et = 0; Et < rt.length; Et++) {
        let Bt = rt[Et];
        if ((Bt.route.HydrateFallback || Bt.route.hydrateFallbackElement) && (pt = Et), Bt.route.id) {
          let { loaderData: St, errors: $t } = $, kt = Bt.route.loader && !St.hasOwnProperty(Bt.route.id) && (!$t || $t[Bt.route.id] === void 0);
          if (Bt.route.lazy || kt) {
            st = true, pt >= 0 ? rt = rt.slice(0, pt + 1) : rt = [
              rt[0]
            ];
            break;
          }
        }
      }
      return rt.reduceRight((Et, Bt, St) => {
        let $t, kt = false, Tt = null, Pt = null;
        $ && ($t = et && Bt.route.id ? et[Bt.route.id] : void 0, Tt = Bt.route.errorElement || defaultErrorElement, st && (pt < 0 && St === 0 ? (warningOnce("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration"), kt = true, Pt = null) : pt === St && (kt = true, Pt = Bt.route.hydrateFallbackElement || null)));
        let It = _.concat(rt.slice(0, St + 1)), jt = () => {
          let Dt;
          return $t ? Dt = Tt : kt ? Dt = Pt : Bt.route.Component ? Dt = reactExports.createElement(Bt.route.Component, null) : Bt.route.element ? Dt = Bt.route.element : Dt = Et, reactExports.createElement(RenderedRoute, {
            match: Bt,
            routeContext: {
              outlet: Et,
              matches: It,
              isDataRoute: $ != null
            },
            children: Dt
          });
        };
        return $ && (Bt.route.ErrorBoundary || Bt.route.errorElement || St === 0) ? reactExports.createElement(RenderErrorBoundary, {
          location: $.location,
          revalidation: $.revalidation,
          component: Tt,
          error: $t,
          children: jt(),
          routeContext: {
            outlet: null,
            matches: It,
            isDataRoute: true
          }
        }) : jt();
      }, null);
    }
    function getDataRouterConsoleError(d) {
      return `${d} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
    }
    function useDataRouterContext(d) {
      let _ = reactExports.useContext(DataRouterContext);
      return invariant(_, getDataRouterConsoleError(d)), _;
    }
    function useDataRouterState(d) {
      let _ = reactExports.useContext(DataRouterStateContext);
      return invariant(_, getDataRouterConsoleError(d)), _;
    }
    function useRouteContext(d) {
      let _ = reactExports.useContext(RouteContext);
      return invariant(_, getDataRouterConsoleError(d)), _;
    }
    function useCurrentRouteId(d) {
      let _ = useRouteContext(d), $ = _.matches[_.matches.length - 1];
      return invariant($.route.id, `${d} can only be used on routes that contain a unique "id"`), $.route.id;
    }
    function useRouteId() {
      return useCurrentRouteId("useRouteId");
    }
    function useRouteError() {
      var _a3;
      let d = reactExports.useContext(RouteErrorContext), _ = useDataRouterState("useRouteError"), $ = useCurrentRouteId("useRouteError");
      return d !== void 0 ? d : (_a3 = _.errors) == null ? void 0 : _a3[$];
    }
    function useNavigateStable() {
      let { router: d } = useDataRouterContext("useNavigate"), _ = useCurrentRouteId("useNavigate"), $ = reactExports.useRef(false);
      return useIsomorphicLayoutEffect(() => {
        $.current = true;
      }), reactExports.useCallback(async (rt, et = {}) => {
        warning($.current, navigateEffectWarning), $.current && (typeof rt == "number" ? d.navigate(rt) : await d.navigate(rt, {
          fromRouteId: _,
          ...et
        }));
      }, [
        d,
        _
      ]);
    }
    var alreadyWarned = {};
    function warningOnce(d, _, $) {
      !_ && !alreadyWarned[d] && (alreadyWarned[d] = true, warning(false, $));
    }
    reactExports.memo(DataRoutes);
    function DataRoutes({ routes: d, future: _, state: $ }) {
      return useRoutesImpl(d, void 0, $, _);
    }
    function Navigate({ to: d, replace: _, state: $, relative: j }) {
      invariant(useInRouterContext(), "<Navigate> may be used only in the context of a <Router> component.");
      let { static: rt } = reactExports.useContext(NavigationContext);
      warning(!rt, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
      let { matches: et } = reactExports.useContext(RouteContext), { pathname: st } = useLocation(), pt = useNavigate(), Et = resolveTo(d, getResolveToMatches(et), st, j === "path"), Bt = JSON.stringify(Et);
      return reactExports.useEffect(() => {
        pt(JSON.parse(Bt), {
          replace: _,
          state: $,
          relative: j
        });
      }, [
        pt,
        Bt,
        j,
        _,
        $
      ]), null;
    }
    function Route(d) {
      invariant(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
    }
    function Router({ basename: d = "/", children: _ = null, location: $, navigationType: j = "POP", navigator: rt, static: et = false }) {
      invariant(!useInRouterContext(), "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
      let st = d.replace(/^\/*/, "/"), pt = reactExports.useMemo(() => ({
        basename: st,
        navigator: rt,
        static: et,
        future: {}
      }), [
        st,
        rt,
        et
      ]);
      typeof $ == "string" && ($ = parsePath($));
      let { pathname: Et = "/", search: Bt = "", hash: St = "", state: $t = null, key: kt = "default" } = $, Tt = reactExports.useMemo(() => {
        let Pt = stripBasename(Et, st);
        return Pt == null ? null : {
          location: {
            pathname: Pt,
            search: Bt,
            hash: St,
            state: $t,
            key: kt
          },
          navigationType: j
        };
      }, [
        st,
        Et,
        Bt,
        St,
        $t,
        kt,
        j
      ]);
      return warning(Tt != null, `<Router basename="${st}"> is not able to match the URL "${Et}${Bt}${St}" because it does not start with the basename, so the <Router> won't render anything.`), Tt == null ? null : reactExports.createElement(NavigationContext.Provider, {
        value: pt
      }, reactExports.createElement(LocationContext.Provider, {
        children: _,
        value: Tt
      }));
    }
    function Routes({ children: d, location: _ }) {
      return useRoutes(createRoutesFromChildren(d), _);
    }
    function createRoutesFromChildren(d, _ = []) {
      let $ = [];
      return reactExports.Children.forEach(d, (j, rt) => {
        if (!reactExports.isValidElement(j)) return;
        let et = [
          ..._,
          rt
        ];
        if (j.type === reactExports.Fragment) {
          $.push.apply($, createRoutesFromChildren(j.props.children, et));
          return;
        }
        invariant(j.type === Route, `[${typeof j.type == "string" ? j.type : j.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`), invariant(!j.props.index || !j.props.children, "An index route cannot have child routes.");
        let st = {
          id: j.props.id || et.join("-"),
          caseSensitive: j.props.caseSensitive,
          element: j.props.element,
          Component: j.props.Component,
          index: j.props.index,
          path: j.props.path,
          loader: j.props.loader,
          action: j.props.action,
          hydrateFallbackElement: j.props.hydrateFallbackElement,
          HydrateFallback: j.props.HydrateFallback,
          errorElement: j.props.errorElement,
          ErrorBoundary: j.props.ErrorBoundary,
          hasErrorBoundary: j.props.hasErrorBoundary === true || j.props.ErrorBoundary != null || j.props.errorElement != null,
          shouldRevalidate: j.props.shouldRevalidate,
          handle: j.props.handle,
          lazy: j.props.lazy
        };
        j.props.children && (st.children = createRoutesFromChildren(j.props.children, et)), $.push(st);
      }), $;
    }
    var defaultMethod = "get", defaultEncType = "application/x-www-form-urlencoded";
    function isHtmlElement(d) {
      return d != null && typeof d.tagName == "string";
    }
    function isButtonElement(d) {
      return isHtmlElement(d) && d.tagName.toLowerCase() === "button";
    }
    function isFormElement(d) {
      return isHtmlElement(d) && d.tagName.toLowerCase() === "form";
    }
    function isInputElement(d) {
      return isHtmlElement(d) && d.tagName.toLowerCase() === "input";
    }
    function isModifiedEvent(d) {
      return !!(d.metaKey || d.altKey || d.ctrlKey || d.shiftKey);
    }
    function shouldProcessLinkClick(d, _) {
      return d.button === 0 && (!_ || _ === "_self") && !isModifiedEvent(d);
    }
    var _formDataSupportsSubmitter = null;
    function isFormDataSubmitterSupported() {
      if (_formDataSupportsSubmitter === null) try {
        new FormData(document.createElement("form"), 0), _formDataSupportsSubmitter = false;
      } catch {
        _formDataSupportsSubmitter = true;
      }
      return _formDataSupportsSubmitter;
    }
    var supportedFormEncTypes = /* @__PURE__ */ new Set([
      "application/x-www-form-urlencoded",
      "multipart/form-data",
      "text/plain"
    ]);
    function getFormEncType(d) {
      return d != null && !supportedFormEncTypes.has(d) ? (warning(false, `"${d}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`), null) : d;
    }
    function getFormSubmissionInfo(d, _) {
      let $, j, rt, et, st;
      if (isFormElement(d)) {
        let pt = d.getAttribute("action");
        j = pt ? stripBasename(pt, _) : null, $ = d.getAttribute("method") || defaultMethod, rt = getFormEncType(d.getAttribute("enctype")) || defaultEncType, et = new FormData(d);
      } else if (isButtonElement(d) || isInputElement(d) && (d.type === "submit" || d.type === "image")) {
        let pt = d.form;
        if (pt == null) throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
        let Et = d.getAttribute("formaction") || pt.getAttribute("action");
        if (j = Et ? stripBasename(Et, _) : null, $ = d.getAttribute("formmethod") || pt.getAttribute("method") || defaultMethod, rt = getFormEncType(d.getAttribute("formenctype")) || getFormEncType(pt.getAttribute("enctype")) || defaultEncType, et = new FormData(pt, d), !isFormDataSubmitterSupported()) {
          let { name: Bt, type: St, value: $t } = d;
          if (St === "image") {
            let kt = Bt ? `${Bt}.` : "";
            et.append(`${kt}x`, "0"), et.append(`${kt}y`, "0");
          } else Bt && et.append(Bt, $t);
        }
      } else {
        if (isHtmlElement(d)) throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
        $ = defaultMethod, j = null, rt = defaultEncType, st = d;
      }
      return et && rt === "text/plain" && (st = et, et = void 0), {
        action: j,
        method: $.toLowerCase(),
        encType: rt,
        formData: et,
        body: st
      };
    }
    function invariant2(d, _) {
      if (d === false || d === null || typeof d > "u") throw new Error(_);
    }
    async function loadRouteModule(d, _) {
      if (d.id in _) return _[d.id];
      try {
        let $ = await import(d.module).then(async (m2) => {
          await m2.__tla;
          return m2;
        });
        return _[d.id] = $, $;
      } catch ($) {
        return console.error(`Error loading route module \`${d.module}\`, reloading page...`), console.error($), window.__reactRouterContext && window.__reactRouterContext.isSpaMode, window.location.reload(), new Promise(() => {
        });
      }
    }
    function isHtmlLinkDescriptor(d) {
      return d == null ? false : d.href == null ? d.rel === "preload" && typeof d.imageSrcSet == "string" && typeof d.imageSizes == "string" : typeof d.rel == "string" && typeof d.href == "string";
    }
    async function getKeyedPrefetchLinks(d, _, $) {
      let j = await Promise.all(d.map(async (rt) => {
        let et = _.routes[rt.route.id];
        if (et) {
          let st = await loadRouteModule(et, $);
          return st.links ? st.links() : [];
        }
        return [];
      }));
      return dedupeLinkDescriptors(j.flat(1).filter(isHtmlLinkDescriptor).filter((rt) => rt.rel === "stylesheet" || rt.rel === "preload").map((rt) => rt.rel === "stylesheet" ? {
        ...rt,
        rel: "prefetch",
        as: "style"
      } : {
        ...rt,
        rel: "prefetch"
      }));
    }
    function getNewMatchesForLinks(d, _, $, j, rt, et) {
      let st = (Et, Bt) => $[Bt] ? Et.route.id !== $[Bt].route.id : true, pt = (Et, Bt) => {
        var _a3;
        return $[Bt].pathname !== Et.pathname || ((_a3 = $[Bt].route.path) == null ? void 0 : _a3.endsWith("*")) && $[Bt].params["*"] !== Et.params["*"];
      };
      return et === "assets" ? _.filter((Et, Bt) => st(Et, Bt) || pt(Et, Bt)) : et === "data" ? _.filter((Et, Bt) => {
        var _a3;
        let St = j.routes[Et.route.id];
        if (!St || !St.hasLoader) return false;
        if (st(Et, Bt) || pt(Et, Bt)) return true;
        if (Et.route.shouldRevalidate) {
          let $t = Et.route.shouldRevalidate({
            currentUrl: new URL(rt.pathname + rt.search + rt.hash, window.origin),
            currentParams: ((_a3 = $[0]) == null ? void 0 : _a3.params) || {},
            nextUrl: new URL(d, window.origin),
            nextParams: Et.params,
            defaultShouldRevalidate: true
          });
          if (typeof $t == "boolean") return $t;
        }
        return true;
      }) : [];
    }
    function getModuleLinkHrefs(d, _, { includeHydrateFallback: $ } = {}) {
      return dedupeHrefs(d.map((j) => {
        let rt = _.routes[j.route.id];
        if (!rt) return [];
        let et = [
          rt.module
        ];
        return rt.clientActionModule && (et = et.concat(rt.clientActionModule)), rt.clientLoaderModule && (et = et.concat(rt.clientLoaderModule)), $ && rt.hydrateFallbackModule && (et = et.concat(rt.hydrateFallbackModule)), rt.imports && (et = et.concat(rt.imports)), et;
      }).flat(1));
    }
    function dedupeHrefs(d) {
      return [
        ...new Set(d)
      ];
    }
    function sortKeys(d) {
      let _ = {}, $ = Object.keys(d).sort();
      for (let j of $) _[j] = d[j];
      return _;
    }
    function dedupeLinkDescriptors(d, _) {
      let $ = /* @__PURE__ */ new Set();
      return new Set(_), d.reduce((j, rt) => {
        let et = JSON.stringify(sortKeys(rt));
        return $.has(et) || ($.add(et), j.push({
          key: et,
          link: rt
        })), j;
      }, []);
    }
    function singleFetchUrl(d) {
      let _ = typeof d == "string" ? new URL(d, typeof window > "u" ? "server://singlefetch/" : window.location.origin) : d;
      return _.pathname === "/" ? _.pathname = "_root.data" : _.pathname = `${_.pathname.replace(/\/$/, "")}.data`, _;
    }
    function useDataRouterContext2() {
      let d = reactExports.useContext(DataRouterContext);
      return invariant2(d, "You must render this element inside a <DataRouterContext.Provider> element"), d;
    }
    function useDataRouterStateContext() {
      let d = reactExports.useContext(DataRouterStateContext);
      return invariant2(d, "You must render this element inside a <DataRouterStateContext.Provider> element"), d;
    }
    var FrameworkContext = reactExports.createContext(void 0);
    FrameworkContext.displayName = "FrameworkContext";
    function useFrameworkContext() {
      let d = reactExports.useContext(FrameworkContext);
      return invariant2(d, "You must render this element inside a <HydratedRouter> element"), d;
    }
    function usePrefetchBehavior(d, _) {
      let $ = reactExports.useContext(FrameworkContext), [j, rt] = reactExports.useState(false), [et, st] = reactExports.useState(false), { onFocus: pt, onBlur: Et, onMouseEnter: Bt, onMouseLeave: St, onTouchStart: $t } = _, kt = reactExports.useRef(null);
      reactExports.useEffect(() => {
        if (d === "render" && st(true), d === "viewport") {
          let It = (Dt) => {
            Dt.forEach((Ot) => {
              st(Ot.isIntersecting);
            });
          }, jt = new IntersectionObserver(It, {
            threshold: 0.5
          });
          return kt.current && jt.observe(kt.current), () => {
            jt.disconnect();
          };
        }
      }, [
        d
      ]), reactExports.useEffect(() => {
        if (j) {
          let It = setTimeout(() => {
            st(true);
          }, 100);
          return () => {
            clearTimeout(It);
          };
        }
      }, [
        j
      ]);
      let Tt = () => {
        rt(true);
      }, Pt = () => {
        rt(false), st(false);
      };
      return $ ? d !== "intent" ? [
        et,
        kt,
        {}
      ] : [
        et,
        kt,
        {
          onFocus: composeEventHandlers(pt, Tt),
          onBlur: composeEventHandlers(Et, Pt),
          onMouseEnter: composeEventHandlers(Bt, Tt),
          onMouseLeave: composeEventHandlers(St, Pt),
          onTouchStart: composeEventHandlers($t, Tt)
        }
      ] : [
        false,
        kt,
        {}
      ];
    }
    function composeEventHandlers(d, _) {
      return ($) => {
        d && d($), $.defaultPrevented || _($);
      };
    }
    function PrefetchPageLinks({ page: d, ..._ }) {
      let { router: $ } = useDataRouterContext2(), j = reactExports.useMemo(() => matchRoutes($.routes, d, $.basename), [
        $.routes,
        d,
        $.basename
      ]);
      return j ? reactExports.createElement(PrefetchPageLinksImpl, {
        page: d,
        matches: j,
        ..._
      }) : null;
    }
    function useKeyedPrefetchLinks(d) {
      let { manifest: _, routeModules: $ } = useFrameworkContext(), [j, rt] = reactExports.useState([]);
      return reactExports.useEffect(() => {
        let et = false;
        return getKeyedPrefetchLinks(d, _, $).then((st) => {
          et || rt(st);
        }), () => {
          et = true;
        };
      }, [
        d,
        _,
        $
      ]), j;
    }
    function PrefetchPageLinksImpl({ page: d, matches: _, ...$ }) {
      let j = useLocation(), { manifest: rt, routeModules: et } = useFrameworkContext(), { loaderData: st, matches: pt } = useDataRouterStateContext(), Et = reactExports.useMemo(() => getNewMatchesForLinks(d, _, pt, rt, j, "data"), [
        d,
        _,
        pt,
        rt,
        j
      ]), Bt = reactExports.useMemo(() => getNewMatchesForLinks(d, _, pt, rt, j, "assets"), [
        d,
        _,
        pt,
        rt,
        j
      ]), St = reactExports.useMemo(() => {
        if (d === j.pathname + j.search + j.hash) return [];
        let Tt = /* @__PURE__ */ new Set(), Pt = false;
        if (_.forEach((jt) => {
          var _a3;
          let Dt = rt.routes[jt.route.id];
          !Dt || !Dt.hasLoader || (!Et.some((Ot) => Ot.route.id === jt.route.id) && jt.route.id in st && ((_a3 = et[jt.route.id]) == null ? void 0 : _a3.shouldRevalidate) || Dt.hasClientLoader ? Pt = true : Tt.add(jt.route.id));
        }), Tt.size === 0) return [];
        let It = singleFetchUrl(d);
        return Pt && Tt.size > 0 && It.searchParams.set("_routes", _.filter((jt) => Tt.has(jt.route.id)).map((jt) => jt.route.id).join(",")), [
          It.pathname + It.search
        ];
      }, [
        st,
        j,
        rt,
        Et,
        _,
        d,
        et
      ]), $t = reactExports.useMemo(() => getModuleLinkHrefs(Bt, rt), [
        Bt,
        rt
      ]), kt = useKeyedPrefetchLinks(Bt);
      return reactExports.createElement(reactExports.Fragment, null, St.map((Tt) => reactExports.createElement("link", {
        key: Tt,
        rel: "prefetch",
        as: "fetch",
        href: Tt,
        ...$
      })), $t.map((Tt) => reactExports.createElement("link", {
        key: Tt,
        rel: "modulepreload",
        href: Tt,
        ...$
      })), kt.map(({ key: Tt, link: Pt }) => reactExports.createElement("link", {
        key: Tt,
        ...Pt
      })));
    }
    function mergeRefs(...d) {
      return (_) => {
        d.forEach(($) => {
          typeof $ == "function" ? $(_) : $ != null && ($.current = _);
        });
      };
    }
    var isBrowser$1 = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u";
    try {
      isBrowser$1 && (window.__reactRouterVersion = "7.2.0");
    } catch {
    }
    function BrowserRouter({ basename: d, children: _, window: $ }) {
      let j = reactExports.useRef();
      j.current == null && (j.current = createBrowserHistory({
        window: $,
        v5Compat: true
      }));
      let rt = j.current, [et, st] = reactExports.useState({
        action: rt.action,
        location: rt.location
      }), pt = reactExports.useCallback((Et) => {
        reactExports.startTransition(() => st(Et));
      }, [
        st
      ]);
      return reactExports.useLayoutEffect(() => rt.listen(pt), [
        rt,
        pt
      ]), reactExports.createElement(Router, {
        basename: d,
        children: _,
        location: et.location,
        navigationType: et.action,
        navigator: rt
      });
    }
    var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Link$1 = reactExports.forwardRef(function({ onClick: _, discover: $ = "render", prefetch: j = "none", relative: rt, reloadDocument: et, replace: st, state: pt, target: Et, to: Bt, preventScrollReset: St, viewTransition: $t, ...kt }, Tt) {
      let { basename: Pt } = reactExports.useContext(NavigationContext), It = typeof Bt == "string" && ABSOLUTE_URL_REGEX2.test(Bt), jt, Dt = false;
      if (typeof Bt == "string" && It && (jt = Bt, isBrowser$1)) try {
        let er = new URL(window.location.href), Ut = Bt.startsWith("//") ? new URL(er.protocol + Bt) : new URL(Bt), xt = stripBasename(Ut.pathname, Pt);
        Ut.origin === er.origin && xt != null ? Bt = xt + Ut.search + Ut.hash : Dt = true;
      } catch {
        warning(false, `<Link to="${Bt}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`);
      }
      let Ot = useHref(Bt, {
        relative: rt
      }), [Ft, Lt, Zt] = usePrefetchBehavior(j, kt), Kt = useLinkClickHandler(Bt, {
        replace: st,
        state: pt,
        target: Et,
        preventScrollReset: St,
        relative: rt,
        viewTransition: $t
      });
      function ar(er) {
        _ && _(er), er.defaultPrevented || Kt(er);
      }
      let sr = reactExports.createElement("a", {
        ...kt,
        ...Zt,
        href: jt || Ot,
        onClick: Dt || et ? _ : ar,
        ref: mergeRefs(Tt, Lt),
        target: Et,
        "data-discover": !It && $ === "render" ? "true" : void 0
      });
      return Ft && !It ? reactExports.createElement(reactExports.Fragment, null, sr, reactExports.createElement(PrefetchPageLinks, {
        page: Ot
      })) : sr;
    });
    Link$1.displayName = "Link";
    var NavLink = reactExports.forwardRef(function({ "aria-current": _ = "page", caseSensitive: $ = false, className: j = "", end: rt = false, style: et, to: st, viewTransition: pt, children: Et, ...Bt }, St) {
      let $t = useResolvedPath(st, {
        relative: Bt.relative
      }), kt = useLocation(), Tt = reactExports.useContext(DataRouterStateContext), { navigator: Pt, basename: It } = reactExports.useContext(NavigationContext), jt = Tt != null && useViewTransitionState($t) && pt === true, Dt = Pt.encodeLocation ? Pt.encodeLocation($t).pathname : $t.pathname, Ot = kt.pathname, Ft = Tt && Tt.navigation && Tt.navigation.location ? Tt.navigation.location.pathname : null;
      $ || (Ot = Ot.toLowerCase(), Ft = Ft ? Ft.toLowerCase() : null, Dt = Dt.toLowerCase()), Ft && It && (Ft = stripBasename(Ft, It) || Ft);
      const Lt = Dt !== "/" && Dt.endsWith("/") ? Dt.length - 1 : Dt.length;
      let Zt = Ot === Dt || !rt && Ot.startsWith(Dt) && Ot.charAt(Lt) === "/", Kt = Ft != null && (Ft === Dt || !rt && Ft.startsWith(Dt) && Ft.charAt(Dt.length) === "/"), ar = {
        isActive: Zt,
        isPending: Kt,
        isTransitioning: jt
      }, sr = Zt ? _ : void 0, er;
      typeof j == "function" ? er = j(ar) : er = [
        j,
        Zt ? "active" : null,
        Kt ? "pending" : null,
        jt ? "transitioning" : null
      ].filter(Boolean).join(" ");
      let Ut = typeof et == "function" ? et(ar) : et;
      return reactExports.createElement(Link$1, {
        ...Bt,
        "aria-current": sr,
        className: er,
        ref: St,
        style: Ut,
        to: st,
        viewTransition: pt
      }, typeof Et == "function" ? Et(ar) : Et);
    });
    NavLink.displayName = "NavLink";
    var Form = reactExports.forwardRef(({ discover: d = "render", fetcherKey: _, navigate: $, reloadDocument: j, replace: rt, state: et, method: st = defaultMethod, action: pt, onSubmit: Et, relative: Bt, preventScrollReset: St, viewTransition: $t, ...kt }, Tt) => {
      let Pt = useSubmit(), It = useFormAction(pt, {
        relative: Bt
      }), jt = st.toLowerCase() === "get" ? "get" : "post", Dt = typeof pt == "string" && ABSOLUTE_URL_REGEX2.test(pt), Ot = (Ft) => {
        if (Et && Et(Ft), Ft.defaultPrevented) return;
        Ft.preventDefault();
        let Lt = Ft.nativeEvent.submitter, Zt = (Lt == null ? void 0 : Lt.getAttribute("formmethod")) || st;
        Pt(Lt || Ft.currentTarget, {
          fetcherKey: _,
          method: Zt,
          navigate: $,
          replace: rt,
          state: et,
          relative: Bt,
          preventScrollReset: St,
          viewTransition: $t
        });
      };
      return reactExports.createElement("form", {
        ref: Tt,
        method: jt,
        action: It,
        onSubmit: j ? Et : Ot,
        ...kt,
        "data-discover": !Dt && d === "render" ? "true" : void 0
      });
    });
    Form.displayName = "Form";
    function getDataRouterConsoleError2(d) {
      return `${d} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
    }
    function useDataRouterContext3(d) {
      let _ = reactExports.useContext(DataRouterContext);
      return invariant(_, getDataRouterConsoleError2(d)), _;
    }
    function useLinkClickHandler(d, { target: _, replace: $, state: j, preventScrollReset: rt, relative: et, viewTransition: st } = {}) {
      let pt = useNavigate(), Et = useLocation(), Bt = useResolvedPath(d, {
        relative: et
      });
      return reactExports.useCallback((St) => {
        if (shouldProcessLinkClick(St, _)) {
          St.preventDefault();
          let $t = $ !== void 0 ? $ : createPath(Et) === createPath(Bt);
          pt(d, {
            replace: $t,
            state: j,
            preventScrollReset: rt,
            relative: et,
            viewTransition: st
          });
        }
      }, [
        Et,
        pt,
        Bt,
        $,
        j,
        _,
        d,
        rt,
        et,
        st
      ]);
    }
    var fetcherId = 0, getUniqueFetcherId = () => `__${String(++fetcherId)}__`;
    function useSubmit() {
      let { router: d } = useDataRouterContext3("useSubmit"), { basename: _ } = reactExports.useContext(NavigationContext), $ = useRouteId();
      return reactExports.useCallback(async (j, rt = {}) => {
        let { action: et, method: st, encType: pt, formData: Et, body: Bt } = getFormSubmissionInfo(j, _);
        if (rt.navigate === false) {
          let St = rt.fetcherKey || getUniqueFetcherId();
          await d.fetch(St, $, rt.action || et, {
            preventScrollReset: rt.preventScrollReset,
            formData: Et,
            body: Bt,
            formMethod: rt.method || st,
            formEncType: rt.encType || pt,
            flushSync: rt.flushSync
          });
        } else await d.navigate(rt.action || et, {
          preventScrollReset: rt.preventScrollReset,
          formData: Et,
          body: Bt,
          formMethod: rt.method || st,
          formEncType: rt.encType || pt,
          replace: rt.replace,
          state: rt.state,
          fromRouteId: $,
          flushSync: rt.flushSync,
          viewTransition: rt.viewTransition
        });
      }, [
        d,
        _,
        $
      ]);
    }
    function useFormAction(d, { relative: _ } = {}) {
      let { basename: $ } = reactExports.useContext(NavigationContext), j = reactExports.useContext(RouteContext);
      invariant(j, "useFormAction must be used inside a RouteContext");
      let [rt] = j.matches.slice(-1), et = {
        ...useResolvedPath(d || ".", {
          relative: _
        })
      }, st = useLocation();
      if (d == null) {
        et.search = st.search;
        let pt = new URLSearchParams(et.search), Et = pt.getAll("index");
        if (Et.some((St) => St === "")) {
          pt.delete("index"), Et.filter(($t) => $t).forEach(($t) => pt.append("index", $t));
          let St = pt.toString();
          et.search = St ? `?${St}` : "";
        }
      }
      return (!d || d === ".") && rt.route.index && (et.search = et.search ? et.search.replace(/^\?/, "?index&") : "?index"), $ !== "/" && (et.pathname = et.pathname === "/" ? $ : joinPaths([
        $,
        et.pathname
      ])), createPath(et);
    }
    function useViewTransitionState(d, _ = {}) {
      let $ = reactExports.useContext(ViewTransitionContext);
      invariant($ != null, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
      let { basename: j } = useDataRouterContext3("useViewTransitionState"), rt = useResolvedPath(d, {
        relative: _.relative
      });
      if (!$.isTransitioning) return false;
      let et = stripBasename($.currentLocation.pathname, j) || $.currentLocation.pathname, st = stripBasename($.nextLocation.pathname, j) || $.nextLocation.pathname;
      return matchPath(rt.pathname, st) != null || matchPath(rt.pathname, et) != null;
    }
    new TextEncoder();
    const createStoreImpl = (d) => {
      let _;
      const $ = /* @__PURE__ */ new Set(), j = (Bt, St) => {
        const $t = typeof Bt == "function" ? Bt(_) : Bt;
        if (!Object.is($t, _)) {
          const kt = _;
          _ = St ?? (typeof $t != "object" || $t === null) ? $t : Object.assign({}, _, $t), $.forEach((Tt) => Tt(_, kt));
        }
      }, rt = () => _, pt = {
        setState: j,
        getState: rt,
        getInitialState: () => Et,
        subscribe: (Bt) => ($.add(Bt), () => $.delete(Bt))
      }, Et = _ = d(j, rt, pt);
      return pt;
    }, createStore$1 = (d) => d ? createStoreImpl(d) : createStoreImpl, identity$1 = (d) => d;
    function useStore(d, _ = identity$1) {
      const $ = React.useSyncExternalStore(d.subscribe, () => _(d.getState()), () => _(d.getInitialState()));
      return React.useDebugValue($), $;
    }
    const createImpl = (d) => {
      const _ = createStore$1(d), $ = (j) => useStore(_, j);
      return Object.assign($, _), $;
    }, create = (d) => d ? createImpl(d) : createImpl, useAuthStore = create((d, _) => ({
      isAuthenticated: false,
      user: null,
      isLoading: true,
      isInitialized: false,
      initializeUser: async () => {
        var _a3, _b2, _c2, _d2, _e2;
        if (_().isInitialized && _().user) return console.log("User already initialized"), true;
        console.log("Initializing user...");
        try {
          if (!((_d2 = (_c2 = (_b2 = (_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) == null ? void 0 : _b2.initDataUnsafe) == null ? void 0 : _c2.user) == null ? void 0 : _d2.id)) return console.error("Telegram WebApp \u043D\u0435 \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D"), d({
            isLoading: false
          }), false;
          const $ = window.Telegram.WebApp.initDataUnsafe.user.id, j = window.Telegram.WebApp.initDataUnsafe.user.username || window.Telegram.WebApp.initDataUnsafe.user.first_name || `user${$}`;
          console.log(`
      \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557
      \u2551 \u{1F680} POKO APP - USER LOGIN               \u2551
      \u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563
      \u2551 \u{1F464} Username: ${j.padEnd(27)} \u2551
      \u2551 \u{1F194} Telegram ID: ${$.toString().padEnd(23)} \u2551
      \u2551 \u23F0 Time: ${(/* @__PURE__ */ new Date()).toLocaleTimeString().padEnd(29)} \u2551
      \u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D
      `);
          const et = new URLSearchParams(window.location.search).get("ref");
          try {
            console.log("Checking for existing user...");
            const st = await fetch(`/get-user?telegramId=${$}`, {
              headers: {
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              }
            }), pt = await st.json();
            if (st.ok && pt.success) {
              console.log("Existing user found:", pt);
              const $t = (_e2 = window.Telegram) == null ? void 0 : _e2.WebApp;
              if ($t == null ? void 0 : $t.CloudStorage) try {
                $t.CloudStorage.getItem("miners", (kt, Tt) => {
                  if (kt) {
                    console.error("Error loading miners from CloudStorage:", kt);
                    return;
                  }
                  try {
                    const Pt = Tt ? JSON.parse(Tt) : [], It = pt.user.rootBalance;
                    pt.user.miners = Array.isArray(Pt) ? Pt : [], pt.user.rootBalance = It, d({
                      user: {
                        ...pt.user,
                        rootBalance: It
                      },
                      isAuthenticated: true,
                      isLoading: false,
                      isInitialized: true
                    });
                  } catch (Pt) {
                    console.error("Error parsing miners:", Pt);
                    const It = pt.user.rootBalance;
                    $t.CloudStorage.setItem("miners", "[]", (jt) => {
                      jt && console.error("Error resetting miners:", jt);
                    }), pt.user.miners = [], pt.user.rootBalance = It, d({
                      user: {
                        ...pt.user,
                        rootBalance: It
                      },
                      isAuthenticated: true,
                      isLoading: false,
                      isInitialized: true
                    });
                  }
                });
              } catch (kt) {
                console.error("CloudStorage error:", kt);
              }
              return d({
                user: pt.user,
                isAuthenticated: true,
                isLoading: false,
                isInitialized: true
              }), true;
            }
            const Et = Math.random().toString(36).substring(2, 8).toUpperCase();
            console.log("Creating new user with referral code:", Et);
            const Bt = await fetch("/create-user", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              },
              body: JSON.stringify({
                telegramId: $,
                username: j,
                referralCode: Et,
                referredBy: et
              })
            }), St = await Bt.json();
            if (console.log("Create user response:", St), !Bt.ok || !St.success) throw new Error("Failed to create user");
            return d({
              user: St.user,
              isAuthenticated: true,
              isLoading: false,
              isInitialized: true
            }), true;
          } catch (st) {
            return console.error("Auth error:", st), d({
              isLoading: false,
              isAuthenticated: false,
              user: null,
              isInitialized: true
            }), false;
          }
        } catch ($) {
          return console.error("Init error:", $), d({
            isLoading: false,
            isAuthenticated: false,
            user: null,
            isInitialized: true
          }), false;
        }
      },
      logout: () => {
        d({
          isAuthenticated: false,
          user: null,
          isInitialized: false
        });
      },
      setUser: ($) => d({
        user: $
      }),
      updateUser: ($) => {
        var _a3;
        console.log("\u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F:", $);
        const j = (_a3 = _().user) == null ? void 0 : _a3.maxSlots;
        console.log(`maxSlots: ${j} -> ${$.maxSlots}`), d({
          user: $
        });
      }
    }));
    function BallCatcher({ onClose: d, gyroscopeMovement: _ }) {
      const [$, j] = reactExports.useState(0), [rt, et] = reactExports.useState(0), [st, pt] = reactExports.useState(50), [Et, Bt] = reactExports.useState([]), St = reactExports.useRef(null), { user: $t } = useAuthStore(), kt = reactExports.useRef(Date.now()), Tt = reactExports.useRef(Date.now()), Pt = reactExports.useRef(50), It = {
        WHITE: {
          color: "#FFFFFF",
          points: 10,
          probability: 0.45
        },
        GREEN: {
          color: "#10B981",
          points: "mth",
          probability: 0.35
        },
        GOLD: {
          color: "#FFD700",
          points: 100,
          probability: 0.15
        },
        RED: {
          color: "#EF4444",
          points: -50,
          probability: 0.05
        }
      }, jt = () => {
        const Lt = Math.random();
        let Zt, Kt = 0;
        for (const ar in It) if (Kt += It[ar].probability, Lt <= Kt) {
          Zt = It[ar];
          break;
        }
        return {
          x: Math.random() * 80 + 10,
          y: -10,
          speed: 0.04 + Math.random() * 0.02,
          type: Zt,
          id: Date.now() + Math.random(),
          caught: false,
          processed: false
        };
      }, Dt = (Lt, Zt) => {
        const Kt = Pt.current, ar = 90, sr = 95, er = 4, Ut = 4, xt = Math.abs(Lt - Kt), tt = Math.abs(Zt - ar);
        return xt < er && tt < Ut && Zt < sr && Zt > ar - Ut;
      }, Ot = () => {
        const Lt = Date.now(), Zt = Lt - kt.current;
        kt.current = Lt, Lt - Tt.current > 1e3 && (Bt((Kt) => [
          ...Kt,
          jt()
        ]), Tt.current = Lt), Bt((Kt) => Kt.map((ar) => {
          if (ar.caught) return ar;
          const sr = ar.y + ar.speed * Zt;
          return sr > ar.y && Dt(ar.x, sr) ? (ar.type.points === "mth" ? et((er) => er + 1) : j((er) => er + ar.type.points), {
            ...ar,
            caught: true
          }) : sr > 100 ? {
            ...ar,
            outOfBounds: true
          } : {
            ...ar,
            y: sr
          };
        }).filter((ar) => !ar.outOfBounds && !ar.caught)), requestAnimationFrame(Ot);
      }, Ft = (Lt) => {
        Lt.preventDefault();
      };
      return reactExports.useEffect(() => {
        document.body.style.overflow = "hidden", document.addEventListener("touchmove", Ft, {
          passive: false
        });
        const Lt = requestAnimationFrame(Ot), Zt = (Kt) => {
          if (Kt.key === "ArrowLeft") {
            const ar = Math.max(5, Pt.current - 5);
            pt(ar), Pt.current = ar;
          } else if (Kt.key === "ArrowRight") {
            const ar = Math.min(95, Pt.current + 5);
            pt(ar), Pt.current = ar;
          } else Kt.key === "Escape" && d();
        };
        return window.addEventListener("keydown", Zt), () => {
          window.removeEventListener("keydown", Zt), cancelAnimationFrame(Lt), document.body.style.overflow = "auto", document.removeEventListener("touchmove", Ft);
        };
      }, [
        d
      ]), reactExports.useEffect(() => {
        Pt.current = st;
      }, []), reactExports.useEffect(() => {
        if (_ !== void 0) {
          const Lt = Math.max(5, Math.min(95, st + _));
          pt(Lt), Pt.current = Lt;
        }
      }, [
        _
      ]), jsxRuntimeExports.jsx("div", {
        className: "fixed inset-0 bg-black/80 z-50 flex items-center justify-center p-4",
        children: jsxRuntimeExports.jsxs("div", {
          className: "bg-[#0F172A] rounded-xl p-4 w-full max-w-md relative",
          children: [
            jsxRuntimeExports.jsxs("div", {
              className: "flex justify-between items-center mb-4",
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "flex gap-6",
                  children: [
                    jsxRuntimeExports.jsxs("div", {
                      className: "text-white text-xl",
                      children: [
                        jsxRuntimeExports.jsx("span", {
                          className: "text-emerald-400",
                          children: "ROKO:"
                        }),
                        " ",
                        $
                      ]
                    }),
                    jsxRuntimeExports.jsxs("div", {
                      className: "text-white text-xl",
                      children: [
                        jsxRuntimeExports.jsx("span", {
                          className: "text-emerald-400",
                          children: "MTH:"
                        }),
                        " ",
                        rt
                      ]
                    })
                  ]
                }),
                jsxRuntimeExports.jsx("button", {
                  onClick: d,
                  className: "px-4 py-2 bg-emerald-500 text-white rounded-lg",
                  children: "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044C"
                })
              ]
            }),
            jsxRuntimeExports.jsxs("div", {
              ref: St,
              className: "relative w-full h-[500px] bg-[#1E293B] rounded-lg overflow-hidden select-none touch-none",
              style: {
                backgroundImage: `
              linear-gradient(to right, rgba(255,255,255,0.1) 1px, transparent 1px),
              linear-gradient(to bottom, rgba(255,255,255,0.1) 1px, transparent 1px)
            `,
                backgroundSize: "50px 50px",
                backgroundColor: "#0A0A0A"
              },
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "absolute bottom-0 transform -translate-x-1/2",
                  style: {
                    left: `${st}%`
                  },
                  children: [
                    jsxRuntimeExports.jsx("div", {
                      className: "absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1/2",
                      style: {
                        width: "8px",
                        height: "8px",
                        background: "rgba(52,211,153,0.3)",
                        border: "1px solid rgba(52,211,153,0.7)",
                        borderRadius: "50%"
                      }
                    }),
                    jsxRuntimeExports.jsx("div", {
                      className: `w-0 h-0 
                        border-l-[20px] border-l-transparent
                        border-r-[20px] border-r-transparent
                        border-b-[30px] border-emerald-400
                        filter drop-shadow-[0_0_10px_rgba(52,211,153,0.5)]
                        relative`,
                      children: jsxRuntimeExports.jsx("div", {
                        className: "absolute",
                        style: {
                          width: "2px",
                          height: "2px",
                          backgroundColor: "rgba(52,211,153,0.9)",
                          borderRadius: "50%",
                          top: "30px",
                          left: "-1px"
                        }
                      })
                    })
                  ]
                }),
                Et.map((Lt) => jsxRuntimeExports.jsx("div", {
                  className: "absolute w-8 h-8 rounded-full flex items-center justify-center transition-opacity duration-200",
                  style: {
                    left: `${Lt.x}%`,
                    top: `${Lt.y}%`,
                    backgroundColor: Lt.type.color,
                    boxShadow: `0 0 20px ${Lt.type.color}80`,
                    transform: "translate(-50%, -50%)",
                    opacity: Lt.caught ? 0 : 1
                  },
                  children: jsxRuntimeExports.jsx("div", {
                    className: "w-1 h-1 rounded-full bg-white/50"
                  })
                }, Lt.id))
              ]
            }),
            jsxRuntimeExports.jsxs("div", {
              className: "mt-4 flex justify-center gap-4 text-sm",
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "text-white",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "inline-block w-3 h-3 rounded-full bg-white mr-2"
                    }),
                    "+10 ROKO"
                  ]
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "text-white",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "inline-block w-3 h-3 rounded-full bg-[#10B981] mr-2"
                    }),
                    "+1 MTH"
                  ]
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "text-white",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "inline-block w-3 h-3 rounded-full bg-[#FFD700] mr-2"
                    }),
                    "+100 ROKO"
                  ]
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "text-white",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "inline-block w-3 h-3 rounded-full bg-[#EF4444] mr-2"
                    }),
                    "-50 ROKO"
                  ]
                })
              ]
            })
          ]
        })
      });
    }
    function SearchForm() {
      const [d, _] = reactExports.useState(false), [$, j] = reactExports.useState(0), [rt, et] = reactExports.useState(false), st = (Et) => {
        if (!d || !rt) return;
        const Bt = 2, St = Et.gamma, kt = Math.max(-45, Math.min(45, St)) / 45 * Bt;
        j(kt);
      }, pt = async () => {
        try {
          typeof DeviceOrientationEvent.requestPermission == "function" ? await DeviceOrientationEvent.requestPermission() === "granted" ? (et(true), _(true)) : alert("\u0414\u043B\u044F \u0438\u0433\u0440\u044B \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C \u0434\u043E\u0441\u0442\u0443\u043F \u043A \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0443") : (et(true), _(true), window.addEventListener("deviceorientation", st));
        } catch (Et) {
          console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u043F\u0440\u043E\u0441\u0435 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0430:", Et), alert("\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0434\u043E\u0441\u0442\u0443\u043F \u043A \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0443. \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u043A\u043B\u0430\u0432\u0438\u0448\u0438 \u0432\u043B\u0435\u0432\u043E/\u0432\u043F\u0440\u0430\u0432\u043E \u0438\u043B\u0438 \u043A\u0430\u0441\u0430\u043D\u0438\u0435 \u044D\u043A\u0440\u0430\u043D\u0430."), _(true);
        }
      };
      return reactExports.useEffect(() => (rt && d && (window.addEventListener("deviceorientation", st), console.log("Gyroscope listener added")), () => {
        window.removeEventListener("deviceorientation", st);
      }), [
        rt,
        d
      ]), jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
        children: [
          jsxRuntimeExports.jsx("div", {
            onClick: pt,
            className: `w-full max-w-md bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                  backdrop-blur-md rounded-xl p-4 
                  border border-blue-400/20
                  shadow-[0_0_10px_rgba(30,58,138,0.1)]
                  hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                  transition-all cursor-pointer relative z-10`,
            children: jsxRuntimeExports.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "flex items-center gap-3",
                  children: [
                    jsxRuntimeExports.jsx("div", {
                      className: "p-2 rounded-lg bg-blue-400/10",
                      children: jsxRuntimeExports.jsxs("svg", {
                        className: "w-6 h-6 text-blue-400",
                        fill: "none",
                        stroke: "currentColor",
                        viewBox: "0 0 24 24",
                        children: [
                          jsxRuntimeExports.jsx("path", {
                            strokeLinecap: "round",
                            strokeLinejoin: "round",
                            strokeWidth: "2",
                            d: "M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"
                          }),
                          jsxRuntimeExports.jsx("path", {
                            strokeLinecap: "round",
                            strokeLinejoin: "round",
                            strokeWidth: "2",
                            d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                          })
                        ]
                      })
                    }),
                    jsxRuntimeExports.jsxs("div", {
                      children: [
                        jsxRuntimeExports.jsx("h3", {
                          className: "text-white font-medium font-mono",
                          children: "Play Catch Balls"
                        }),
                        jsxRuntimeExports.jsx("p", {
                          className: "text-blue-400/60 text-sm font-mono",
                          children: "Get ROKO"
                        })
                      ]
                    })
                  ]
                }),
                jsxRuntimeExports.jsx("div", {
                  className: "p-2 rounded-full bg-blue-400/20 text-blue-400",
                  children: jsxRuntimeExports.jsx("svg", {
                    className: "w-6 h-6",
                    fill: "none",
                    stroke: "currentColor",
                    viewBox: "0 0 24 24",
                    children: jsxRuntimeExports.jsx("path", {
                      strokeLinecap: "round",
                      strokeLinejoin: "round",
                      strokeWidth: "2",
                      d: "M9 5l7 7-7 7"
                    })
                  })
                })
              ]
            })
          }),
          d && jsxRuntimeExports.jsx(BallCatcher, {
            onClose: () => {
              _(false), et(false);
            },
            gyroscopeMovement: $
          })
        ]
      });
    }
    function Navigation() {
      const d = useNavigate(), _ = useLocation(), $ = () => _.pathname.slice(1) || "main", j = (st) => {
        d(st === "main" ? "/" : `/${st}`);
      }, rt = $(), et = [
        {
          id: "bag",
          icon: jsxRuntimeExports.jsx("svg", {
            className: "w-5 h-5",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: jsxRuntimeExports.jsx("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2",
              d: "M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"
            })
          }),
          label: "Bag"
        },
        {
          id: "shop",
          icon: jsxRuntimeExports.jsx("svg", {
            className: "w-5 h-5",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: jsxRuntimeExports.jsx("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2",
              d: "M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
            })
          }),
          label: "Shop"
        },
        {
          id: "method",
          icon: jsxRuntimeExports.jsx("svg", {
            className: "w-5 h-5",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: jsxRuntimeExports.jsx("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2",
              d: "M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
            })
          }),
          label: "POKO"
        },
        {
          id: "tasks",
          icon: jsxRuntimeExports.jsx("svg", {
            className: "w-5 h-5",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: jsxRuntimeExports.jsx("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2",
              d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"
            })
          }),
          label: "Tasks"
        },
        {
          id: "top",
          icon: jsxRuntimeExports.jsx("svg", {
            className: "w-5 h-5",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: jsxRuntimeExports.jsx("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2",
              d: "M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"
            })
          }),
          label: "Top"
        }
      ];
      return jsxRuntimeExports.jsx("nav", {
        className: "fixed bottom-0 left-0 right-0 bg-[#0A0F1C] border-t border-blue-400/20 z-40",
        children: jsxRuntimeExports.jsx("div", {
          className: "max-w-md mx-auto px-4",
          children: jsxRuntimeExports.jsx("div", {
            className: "flex justify-center py-2",
            children: et.map((st) => jsxRuntimeExports.jsxs("button", {
              onClick: () => j(st.id),
              className: `
                flex flex-col items-center justify-center
                w-16 h-16 mx-2
                rounded-lg
                transition-all duration-300
                relative z-40
                ${rt === st.id ? "text-blue-400 drop-shadow-[0_0_8px_rgba(96,165,250,0.5)]" : "text-blue-400/40 hover:text-blue-400/60"}
                ${rt === st.id && "after:absolute after:bottom-0 after:left-1/2 after:-translate-x-1/2 after:w-1/2 after:h-0.5 after:bg-blue-400 after:rounded-full after:shadow-[0_0_8px_#60A5FA]"}
              `,
              children: [
                st.icon,
                jsxRuntimeExports.jsx("span", {
                  className: `text-xs mt-1 ${rt === st.id ? "text-blue-400" : "text-blue-400/40"}`,
                  style: {
                    fontFamily: "Polonium"
                  },
                  children: st.label
                }),
                st.id === "tasks" && _.pathname !== "/tasks" && jsxRuntimeExports.jsx("span", {
                  className: `absolute top-1 right-1 w-3 h-3 rounded-full bg-blue-500 animate-pulse\r
                               shadow-[0_0_10px_rgba(96,165,250,0.7)]\r
                               before:content-[''] before:absolute before:inset-0\r
                               before:rounded-full before:bg-blue-400\r
                               before:animate-ping before:opacity-75`
                })
              ]
            }, st.id))
          })
        })
      });
    }
    let isWebAppInitialized = false;
    function useTelegram() {
      var _a3, _b2;
      const [d, _] = reactExports.useState(false), $ = (_a3 = window.Telegram) == null ? void 0 : _a3.WebApp;
      return reactExports.useEffect(() => {
        if (!$ || isWebAppInitialized) return;
        (() => {
          if ($.ready(), $.expand(), $.setHeaderColor("#0A0F1C"), $.setBottomBarColor("#0A0F1C"), typeof $.requestWriteAccess == "function") try {
            $.requestWriteAccess((rt) => {
              rt ? (console.log("Access granted to send messages"), localStorage.setItem("bot_write_access", "true")) : console.warn("Access denied to send messages");
            });
          } catch (rt) {
            console.warn("Error requesting write access:", rt);
          }
          isWebAppInitialized = true, _(true);
        })();
      }, [
        $
      ]), {
        tg: $,
        user: (_b2 = $ == null ? void 0 : $.initDataUnsafe) == null ? void 0 : _b2.user,
        isReady: d
      };
    }
    function UserInfo() {
      const { user: d } = useAuthStore(), { user: _ } = useTelegram(), $ = (_ == null ? void 0 : _.username) || (_ == null ? void 0 : _.first_name) || (d == null ? void 0 : d.username) || "User", j = _ == null ? void 0 : _.photo_url, rt = parseInt((d == null ? void 0 : d.rootBalance) || 0);
      return jsxRuntimeExports.jsxs("div", {
        className: "w-full",
        children: [
          jsxRuntimeExports.jsxs("div", {
            className: "flex justify-between items-center mb-2",
            children: [
              jsxRuntimeExports.jsxs("h1", {
                className: "text-base text-white button-text",
                children: [
                  "HI, ",
                  jsxRuntimeExports.jsx("span", {
                    className: "text-white button-text",
                    children: $.toUpperCase()
                  })
                ]
              }),
              jsxRuntimeExports.jsx("div", {
                className: "bg-[#0F172A] px-3 py-1 rounded-md border border-blue-400/20",
                children: jsxRuntimeExports.jsxs("span", {
                  className: "text-blue-400 text-sm button-text",
                  children: [
                    rt,
                    " POKO"
                  ]
                })
              })
            ]
          }),
          jsxRuntimeExports.jsxs("div", {
            className: "flex items-center gap-1.5",
            children: [
              jsxRuntimeExports.jsx("img", {
                src: "/assets/eyes.png",
                alt: "Eyes",
                className: "w-6 h-6 object-contain"
              }),
              jsxRuntimeExports.jsx("span", {
                className: "text-white text-base",
                children: "\xD7"
              }),
              j ? jsxRuntimeExports.jsx("img", {
                src: j,
                alt: "Profile",
                className: "w-6 h-6 rounded-full border border-blue-400/20"
              }) : jsxRuntimeExports.jsx("div", {
                className: "w-6 h-6 rounded-full bg-blue-400/20 flex items-center justify-center",
                children: jsxRuntimeExports.jsx("span", {
                  className: "text-blue-400 text-sm",
                  children: $.charAt(0).toUpperCase()
                })
              })
            ]
          })
        ]
      });
    }
    function GyroscopeBall() {
      const [d, _] = reactExports.useState({
        x: 50,
        y: 50
      }), [$, j] = reactExports.useState(false), [rt, et] = reactExports.useState(false), st = reactExports.useRef(null), pt = reactExports.useRef(null), Et = 80, Bt = async () => {
        try {
          "DeviceOrientationEvent" in window ? (console.log("DeviceOrientation \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F"), typeof DeviceOrientationEvent.requestPermission == "function" ? await DeviceOrientationEvent.requestPermission() === "granted" ? (et(true), alert("\u0414\u043E\u0441\u0442\u0443\u043F \u043A \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0443 \u043F\u043E\u043B\u0443\u0447\u0435\u043D! \u041D\u0430\u043A\u043B\u043E\u043D\u0438\u0442\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E.")) : alert("\u0414\u043E\u0441\u0442\u0443\u043F \u043A \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0443 \u043D\u0435 \u043F\u043E\u043B\u0443\u0447\u0435\u043D") : (et(true), alert("\u0414\u043E\u0441\u0442\u0443\u043F \u043A \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0443 \u043F\u043E\u043B\u0443\u0447\u0435\u043D! \u041D\u0430\u043A\u043B\u043E\u043D\u0438\u0442\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E."))) : alert("\u0412\u0430\u0448\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F");
        } catch (kt) {
          console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u043F\u0440\u043E\u0441\u0435 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0430:", kt), alert("\u041F\u0440\u043E\u0438\u0437\u043E\u0448\u043B\u0430 \u043E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u043F\u0440\u043E\u0441\u0435 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0430");
        }
      }, St = (kt) => {
        if (!$ || !pt.current || !st.current) return;
        const Tt = pt.current.getBoundingClientRect(), Pt = st.current.getBoundingClientRect(), It = 0.5, jt = 1, Dt = 0.2, Ot = -1e3, Ft = kt.gamma, Lt = kt.beta;
        _((Zt) => {
          let Kt = Zt.x + Ft * It;
          const ar = Lt > 0 ? Dt : jt;
          let sr = Zt.y + Lt * ar;
          Kt = Math.max(0, Math.min(Kt, Tt.width - Pt.width));
          const er = Tt.height - Pt.height;
          return sr >= er && (sr = er, sr += Ot), sr = Math.max(0, sr), {
            x: Kt,
            y: sr
          };
        });
      }, $t = async () => {
        rt ? j((kt) => !kt) : await Bt();
      };
      return reactExports.useEffect(() => (rt && $ && window.addEventListener("deviceorientation", St), () => {
        window.removeEventListener("deviceorientation", St);
      }), [
        rt,
        $
      ]), jsxRuntimeExports.jsx("div", {
        ref: pt,
        className: "fixed inset-0 z-10",
        style: {
          pointerEvents: "none",
          bottom: `${Et}px`
        },
        children: jsxRuntimeExports.jsxs("div", {
          ref: st,
          onClick: $t,
          style: {
            transform: `translate(${d.x}px, ${d.y}px)`,
            transition: "transform 0.1s linear",
            pointerEvents: "auto",
            cursor: "pointer",
            zIndex: 50
          },
          className: `
          absolute w-16 h-16 rounded-full 
          bg-gradient-to-br from-emerald-400 to-emerald-600
          shadow-lg shadow-emerald-500/20
          flex items-center justify-center
          ${$ ? "ring-4 ring-emerald-300 animate-pulse" : ""}
          ${rt ? "" : "opacity-50"}
        `,
          children: [
            jsxRuntimeExports.jsx("div", {
              className: `
          w-10 h-10 rounded-full 
          ${$ ? "bg-emerald-300/30 animate-ping" : "bg-emerald-300/10"}
        `
            }),
            jsxRuntimeExports.jsx("div", {
              className: "w-6 h-6 rounded-full bg-emerald-200/50"
            }),
            jsxRuntimeExports.jsx("div", {
              className: "absolute -bottom-8 left-1/2 transform -translate-x-1/2 whitespace-nowrap",
              children: jsxRuntimeExports.jsx("span", {
                className: `
            text-sm font-medium
            ${$ ? "text-emerald-400" : "text-gray-400"}
          `,
                children: rt ? $ ? "\u{1F7E2} \u0410\u043A\u0442\u0438\u0432\u0435\u043D" : "\u26AA \u041D\u0430\u0436\u043C\u0438\u0442\u0435" : "\u{1F504} \u041D\u0430\u0436\u043C\u0438\u0442\u0435 \u0434\u043B\u044F \u0434\u043E\u0441\u0442\u0443\u043F\u0430"
              })
            })
          ]
        })
      });
    }
    function MainPage() {
      return jsxRuntimeExports.jsxs("div", {
        className: "w-full h-full flex flex-col items-center p-4 overflow-hidden relative",
        children: [
          jsxRuntimeExports.jsx(GyroscopeBall, {}),
          jsxRuntimeExports.jsxs("div", {
            className: "w-full max-w-md flex flex-col items-center mt-8",
            children: [
              jsxRuntimeExports.jsx(UserInfo, {}),
              jsxRuntimeExports.jsx(SearchForm, {})
            ]
          }),
          jsxRuntimeExports.jsx(Navigation, {})
        ]
      });
    }
    function ReferralBanner() {
      const { user: d } = useAuthStore(), { tg: _ } = useTelegram(), [$, j] = reactExports.useState([]), [rt, et] = reactExports.useState(false);
      reactExports.useEffect(() => {
        (async () => {
          if (d == null ? void 0 : d.telegramId) try {
            const St = await (await fetch(`/get-referral-count?telegramId=${d.telegramId}`, {
              headers: {
                "x-telegram-init-data": _.initData
              }
            })).json();
            St.success && j(St.referrals);
          } catch (Bt) {
            console.error("Error fetching referral data:", Bt);
          }
        })();
      }, [
        d == null ? void 0 : d.telegramId,
        _.initData
      ]);
      const st = async () => {
        var _a3;
        if (d == null ? void 0 : d.telegramId) try {
          const Bt = await (await fetch(`/get-referral-link?telegramId=${d.telegramId}`, {
            headers: {
              "x-telegram-init-data": _.initData
            }
          })).json();
          if (Bt.inviteLink) {
            const $t = `https://t.me/share/url?text=${encodeURIComponent(`\u{1F680} Join POKO!

\u{1F48E} Complete tasks
\u{1F4B0} Get rewards
\u{1F3AE} Play games
\u{1F465} Invite friends

\u{1F525} Join now!`)}&url=${encodeURIComponent(Bt.inviteLink)}`;
            ((_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) ? window.Telegram.WebApp.openTelegramLink($t) : window.open($t, "_blank");
          }
        } catch (Et) {
          console.error("Error getting invite link:", Et);
        }
      }, pt = (Et) => {
        Et.preventDefault(), console.log("Expand button clicked, current state:", rt), et(!rt);
      };
      return jsxRuntimeExports.jsx("div", {
        className: "w-full max-w-md mx-auto relative z-20",
        children: jsxRuntimeExports.jsxs("div", {
          className: `bg-gradient-to-br from-[#1E293B]/90 to-[#0F172A]/90 backdrop-blur-sm rounded-xl p-4 
                    shadow-[0_8px_32px_rgba(59,130,246,0.1)] border border-blue-400/20 
                    relative overflow-hidden`,
          children: [
            jsxRuntimeExports.jsx("div", {
              className: "absolute inset-0 bg-[url('/grid.svg')] opacity-10"
            }),
            jsxRuntimeExports.jsx("div", {
              className: "absolute -right-20 -top-20 w-40 h-40 bg-blue-500/20 rounded-full blur-3xl"
            }),
            jsxRuntimeExports.jsx("div", {
              className: "absolute -left-20 -bottom-20 w-40 h-40 bg-blue-400/20 rounded-full blur-3xl"
            }),
            jsxRuntimeExports.jsxs("div", {
              className: "flex items-center justify-between relative",
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "flex flex-col items-start",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "text-blue-400 text-sm",
                      style: {
                        fontFamily: "Polonium"
                      },
                      children: "Your Network"
                    }),
                    jsxRuntimeExports.jsxs("div", {
                      className: "flex items-baseline gap-1",
                      children: [
                        jsxRuntimeExports.jsx("span", {
                          className: "text-white text-3xl",
                          style: {
                            fontFamily: "Polonium"
                          },
                          children: $.length
                        }),
                        jsxRuntimeExports.jsx("span", {
                          className: "text-blue-400/60 text-sm",
                          style: {
                            fontFamily: "Polonium"
                          },
                          children: "friends"
                        })
                      ]
                    })
                  ]
                }),
                jsxRuntimeExports.jsxs("button", {
                  onClick: st,
                  type: "button",
                  className: `bg-[#1E293B] text-blue-400 px-6 py-2 rounded-lg 
                      transition-all duration-200 flex items-center gap-2
                      border border-blue-400/20
                      shadow-[inset_0_1px_1px_rgba(59,130,246,0.2)]
                      hover:shadow-[0_0_20px_rgba(59,130,246,0.2)]
                      hover:border-blue-400/30 hover:text-blue-300
                      active:scale-95`,
                  style: {
                    fontFamily: "Polonium"
                  },
                  children: [
                    jsxRuntimeExports.jsx("svg", {
                      className: "w-4 h-4",
                      fill: "none",
                      stroke: "currentColor",
                      viewBox: "0 0 24 24",
                      children: jsxRuntimeExports.jsx("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2",
                        d: "M12 4v16m8-8H4"
                      })
                    }),
                    jsxRuntimeExports.jsx("span", {
                      className: "tracking-wider",
                      style: {
                        fontFamily: "Polonium"
                      },
                      children: "Invite"
                    })
                  ]
                }),
                jsxRuntimeExports.jsx("button", {
                  onClick: pt,
                  type: "button",
                  className: "ml-2 p-2 rounded-lg hover:bg-blue-500/10 transition-colors duration-200",
                  children: jsxRuntimeExports.jsx("svg", {
                    className: `w-5 h-5 text-blue-400 transition-transform duration-300 ${rt ? "rotate-180" : ""}`,
                    fill: "none",
                    stroke: "currentColor",
                    viewBox: "0 0 24 24",
                    children: jsxRuntimeExports.jsx("path", {
                      strokeLinecap: "round",
                      strokeLinejoin: "round",
                      strokeWidth: "2",
                      d: "M19 9l-7 7-7-7"
                    })
                  })
                })
              ]
            }),
            rt && jsxRuntimeExports.jsxs("div", {
              className: "mt-4 space-y-2 relative animate-fadeIn",
              children: [
                jsxRuntimeExports.jsx("div", {
                  className: "h-[1px] w-full bg-gradient-to-r from-transparent via-blue-400/20 to-transparent mb-3"
                }),
                jsxRuntimeExports.jsx("div", {
                  className: "max-h-48 overflow-y-auto custom-scrollbar space-y-2",
                  children: $.length > 0 ? $.map((Et) => jsxRuntimeExports.jsxs("div", {
                    className: `flex items-center gap-3 p-2 hover:bg-blue-500/10 rounded-lg 
                              transition-colors duration-200 group`,
                    children: [
                      jsxRuntimeExports.jsx("div", {
                        className: `w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500/20 to-blue-400/20 
                                  flex items-center justify-center border border-blue-400/20
                                  group-hover:border-blue-400/40 transition-colors duration-200`,
                        children: jsxRuntimeExports.jsx("span", {
                          className: "text-blue-400 text-sm font-medium",
                          children: Et.username[0].toUpperCase()
                        })
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex flex-col",
                        children: [
                          jsxRuntimeExports.jsx("span", {
                            className: `text-white text-sm font-medium group-hover:text-blue-400 
                                     transition-colors duration-200`,
                            children: Et.username
                          }),
                          jsxRuntimeExports.jsx("span", {
                            className: "text-blue-400/60 text-xs",
                            children: new Date(Et.joinDate).toLocaleDateString()
                          })
                        ]
                      })
                    ]
                  }, Et.id)) : jsxRuntimeExports.jsxs("div", {
                    className: "text-center py-6",
                    children: [
                      jsxRuntimeExports.jsx("div", {
                        className: "text-blue-400/60 text-sm mb-2",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "No friends yet"
                      }),
                      jsxRuntimeExports.jsx("div", {
                        className: "text-blue-400/40 text-xs",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "Invite friends to earn rewards together!"
                      })
                    ]
                  })
                })
              ]
            })
          ]
        })
      });
    }
    const GRID_SIZE = 15, CELL_SIZE = 16, CELL_TYPES = {
      EMPTY: 0,
      WALL: 1,
      DOT: 2,
      POWER_PELLET: 3
    }, generateMaze = () => {
      const d = Array(GRID_SIZE).fill().map(() => Array(GRID_SIZE).fill(CELL_TYPES.WALL)), _ = (j, rt) => {
        const et = [
          [
            0,
            -2
          ],
          [
            2,
            0
          ],
          [
            0,
            2
          ],
          [
            -2,
            0
          ]
        ].sort(() => Math.random() - 0.5);
        d[rt][j] = CELL_TYPES.DOT;
        for (const [st, pt] of et) {
          const Et = j + st, Bt = rt + pt;
          Et > 0 && Et < GRID_SIZE - 1 && Bt > 0 && Bt < GRID_SIZE - 1 && d[Bt][Et] === CELL_TYPES.WALL && (d[rt + pt / 2][j + st / 2] = CELL_TYPES.DOT, _(Et, Bt));
        }
      };
      _(1, 1);
      for (let j = 0; j < GRID_SIZE * 2; j++) {
        const rt = Math.floor(Math.random() * (GRID_SIZE - 2)) + 1, et = Math.floor(Math.random() * (GRID_SIZE - 2)) + 1;
        d[et][rt] === CELL_TYPES.WALL && [
          [
            rt - 1,
            et
          ],
          [
            rt + 1,
            et
          ],
          [
            rt,
            et - 1
          ],
          [
            rt,
            et + 1
          ]
        ].filter(([pt, Et]) => pt > 0 && pt < GRID_SIZE - 1 && Et > 0 && Et < GRID_SIZE - 1 && d[Et][pt] === CELL_TYPES.DOT).length >= 1 && (d[et][rt] = CELL_TYPES.DOT);
      }
      let $ = 0;
      for (; $ < 4; ) {
        const j = Math.floor(Math.random() * (GRID_SIZE - 2)) + 1, rt = Math.floor(Math.random() * (GRID_SIZE - 2)) + 1;
        d[rt][j] === CELL_TYPES.DOT && (d[rt][j] = CELL_TYPES.POWER_PELLET, $++);
      }
      return d;
    }, PacmanGame = ({ setGameActive: d }) => {
      const { user: _, setUser: $ } = useAuthStore(), j = (ut) => {
        const ot = [];
        for (let Ct = 0; Ct < GRID_SIZE; Ct++) for (let Rt = 0; Rt < GRID_SIZE; Rt++) ut[Ct][Rt] !== CELL_TYPES.WALL && Math.abs(Rt - 1) + Math.abs(Ct - 1) > 5 && ot.push({
          x: Rt,
          y: Ct
        });
        return ot[Math.floor(Math.random() * ot.length)];
      }, [rt, et] = reactExports.useState(() => generateMaze()), [st, pt] = reactExports.useState({
        x: 1,
        y: 1
      }), [Et, Bt] = reactExports.useState(() => [
        "red",
        "pink",
        "cyan",
        "orange"
      ].map((ot) => ({
        ...j(rt),
        color: ot
      }))), [St, $t] = reactExports.useState(0), [kt, Tt] = reactExports.useState(false), [Pt, It] = reactExports.useState(false), [jt, Dt] = reactExports.useState(true);
      reactExports.useEffect(() => {
        const ut = setInterval(() => {
          Dt((ot) => !ot);
        }, 200);
        return () => clearInterval(ut);
      }, []);
      const [Ot, Ft] = reactExports.useState("ArrowRight"), [Lt, Zt] = reactExports.useState(false), [Kt, ar] = reactExports.useState(0), [sr, er] = reactExports.useState(/* @__PURE__ */ new Set()), Ut = reactExports.useCallback(() => {
        Et.forEach((ut, ot) => {
          ut.x === st.x && ut.y === st.y && !sr.has(ot) && (kt ? ($t((Ct) => Ct + 25), er((Ct) => /* @__PURE__ */ new Set([
            ...Ct,
            ot
          ]))) : It(true));
        });
      }, [
        st,
        Et,
        kt,
        sr
      ]), xt = () => {
        const ut = generateMaze();
        et(ut), pt({
          x: 1,
          y: 1
        }), Bt((ot) => ot.map((Ct) => ({
          ...j(ut),
          color: Ct.color
        }))), $t(0), Tt(false), It(false), er(/* @__PURE__ */ new Set());
      }, tt = reactExports.useCallback((ut) => {
        ut.some((Ct) => Ct.some((Rt) => Rt === CELL_TYPES.DOT || Rt === CELL_TYPES.POWER_PELLET)) || (Zt(true), at(St));
      }, [
        St
      ]), nt = reactExports.useCallback((ut) => {
        Pt || Lt || (Ft(ut), pt((ot) => {
          var _a3, _b2, _c2, _d2;
          const Ct = {
            ...ot
          };
          switch (ut) {
            case "ArrowUp":
              ((_a3 = rt[ot.y - 1]) == null ? void 0 : _a3[ot.x]) !== CELL_TYPES.WALL && (Ct.y -= 1);
              break;
            case "ArrowDown":
              ((_b2 = rt[ot.y + 1]) == null ? void 0 : _b2[ot.x]) !== CELL_TYPES.WALL && (Ct.y += 1);
              break;
            case "ArrowLeft":
              ((_c2 = rt[ot.y]) == null ? void 0 : _c2[ot.x - 1]) !== CELL_TYPES.WALL && (Ct.x -= 1);
              break;
            case "ArrowRight":
              ((_d2 = rt[ot.y]) == null ? void 0 : _d2[ot.x + 1]) !== CELL_TYPES.WALL && (Ct.x += 1);
              break;
          }
          const Rt = rt[Ct.y][Ct.x];
          if (Rt === CELL_TYPES.DOT) {
            $t((Wt) => Wt + 1);
            const Nt = [
              ...rt
            ];
            Nt[Ct.y][Ct.x] = CELL_TYPES.EMPTY, et(Nt), tt(Nt);
          } else if (Rt === CELL_TYPES.POWER_PELLET) {
            $t((Wt) => Wt + 10), At();
            const Nt = [
              ...rt
            ];
            Nt[Ct.y][Ct.x] = CELL_TYPES.EMPTY, et(Nt), tt(Nt);
          }
          return Ct;
        }));
      }, [
        rt,
        Pt,
        Lt,
        tt
      ]);
      reactExports.useEffect(() => {
        if (Pt) return;
        const ot = setInterval(() => {
          Bt((Ct) => Ct.map((Rt) => {
            var _a3, _b2;
            const Nt = Rt.collisionCount || 0;
            if (((_a3 = rt[Rt.y]) == null ? void 0 : _a3[Rt.x]) === CELL_TYPES.WALL) {
              const Gt = j(rt);
              return {
                ...Rt,
                ...Gt,
                direction: null,
                collisionCount: 0
              };
            }
            const Wt = [
              {
                dx: 0,
                dy: -1,
                dir: "up"
              },
              {
                dx: 1,
                dy: 0,
                dir: "right"
              },
              {
                dx: 0,
                dy: 1,
                dir: "down"
              },
              {
                dx: -1,
                dy: 0,
                dir: "left"
              }
            ];
            if (Rt.direction && Nt < 2) {
              const Gt = Wt.find((cr) => cr.dir === Rt.direction), Yt = Rt.x + Gt.dx, tr = Rt.y + Gt.dy;
              return ((_b2 = rt[tr]) == null ? void 0 : _b2[Yt]) !== CELL_TYPES.WALL ? {
                ...Rt,
                x: Yt,
                y: tr,
                collisionCount: 0
              } : {
                ...Rt,
                collisionCount: Nt + 1,
                direction: null
              };
            }
            const Xt = Wt.filter(({ dx: Gt, dy: Yt }) => {
              var _a4;
              const tr = Rt.x + Gt, cr = Rt.y + Yt;
              return ((_a4 = rt[cr]) == null ? void 0 : _a4[tr]) !== CELL_TYPES.WALL;
            });
            if (Xt.length === 0) return Rt;
            const rr = Xt[Math.floor(Math.random() * Xt.length)];
            return {
              ...Rt,
              x: Rt.x + rr.dx,
              y: Rt.y + rr.dy,
              direction: rr.dir,
              collisionCount: 0
            };
          }));
        }, 300);
        return () => clearInterval(ot);
      }, [
        Pt,
        rt
      ]), reactExports.useEffect(() => {
        Ut();
      }, [
        st,
        Ut
      ]), reactExports.useEffect(() => {
        const ut = (ot) => {
          nt(ot.key);
        };
        return window.addEventListener("keydown", ut), () => window.removeEventListener("keydown", ut);
      }, [
        nt
      ]);
      const it = (ut) => {
        nt(ut);
      }, at = async (ut) => {
        var _a3, _b2, _c2, _d2, _e2, _f2;
        try {
          const ot = (_d2 = (_c2 = (_b2 = (_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) == null ? void 0 : _b2.initDataUnsafe) == null ? void 0 : _c2.user) == null ? void 0 : _d2.id;
          if (!ot) return;
          const Rt = parseFloat((_ == null ? void 0 : _.rootBalance) || 0) + ut, Wt = await (await fetch("/update-root-balance", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "x-telegram-init-data": ((_f2 = (_e2 = window.Telegram) == null ? void 0 : _e2.WebApp) == null ? void 0 : _f2.initData) || ""
            },
            body: JSON.stringify({
              telegramId: ot,
              rootBalance: Rt
            })
          })).json();
          Wt.success && $({
            ..._,
            rootBalance: Wt.rootBalance
          });
        } catch (ot) {
          console.error("Error updating balance:", ot);
        }
      }, ct = () => {
        St > 0 && at(St), xt(), d(false);
      };
      reactExports.useEffect(() => {
        Pt && St > 0 && at(St);
      }, [
        Pt,
        St
      ]);
      const Mt = () => {
        switch (Ot) {
          case "ArrowUp":
            return "rotate(-90deg)";
          case "ArrowDown":
            return "rotate(90deg)";
          case "ArrowLeft":
            return "scaleX(-1)";
          case "ArrowRight":
            return "rotate(0deg)";
          default:
            return "rotate(0deg)";
        }
      }, At = () => {
        kt && (clearTimeout(window.powerModeTimeout), clearInterval(window.powerModeInterval)), Tt(true), ar(10), window.powerModeInterval = setInterval(() => {
          ar((ut) => ut - 1);
        }, 1e3), window.powerModeTimeout = setTimeout(() => {
          clearInterval(window.powerModeInterval), Tt(false), ar(0);
        }, 1e4);
      };
      return reactExports.useEffect(() => () => {
        window.powerModeTimeout && clearTimeout(window.powerModeTimeout), window.powerModeInterval && clearInterval(window.powerModeInterval);
      }, []), jsxRuntimeExports.jsxs("div", {
        className: "relative bg-[#0A0F1C] p-4 rounded-xl max-w-[300px] mx-auto pacman-container",
        children: [
          jsxRuntimeExports.jsxs("div", {
            className: "flex items-center justify-between mb-4 gap-2",
            children: [
              jsxRuntimeExports.jsxs("div", {
                className: "text-blue-400 text-base rqnd-text",
                children: [
                  "Score: ",
                  St
                ]
              }),
              kt && jsxRuntimeExports.jsxs("div", {
                className: "text-blue-400 animate-pulse rqnd-text whitespace-nowrap",
                children: [
                  "Power: ",
                  Kt,
                  "s"
                ]
              }),
              jsxRuntimeExports.jsx("button", {
                onClick: ct,
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                    backdrop-blur-md rounded-lg p-2
                    border border-red-500/50 hover:border-red-400
                    shadow-[0_0_10px_rgba(239,68,68,0.2)]
                    hover:shadow-[0_0_15px_rgba(239,68,68,0.4)]
                    transition-all duration-300`,
                children: jsxRuntimeExports.jsx("svg", {
                  className: "w-5 h-5 text-red-500",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: jsxRuntimeExports.jsx("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2",
                    d: "M6 18L18 6M6 6l12 12"
                  })
                })
              })
            ]
          }),
          Lt && jsxRuntimeExports.jsxs("div", {
            className: "absolute inset-0 bg-[#0A0F1C]/90 backdrop-blur-sm flex flex-col items-center justify-center z-10 rounded-xl",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "text-blue-400 text-2xl mb-2 rqnd-text",
                children: "\u{1F3C6} Victory! \u{1F3C6}"
              }),
              jsxRuntimeExports.jsxs("div", {
                className: "text-white mb-4",
                children: [
                  jsxRuntimeExports.jsx("div", {
                    className: "text-center mb-2 rqnd-text",
                    children: "Congratulations!"
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "text-center text-blue-400 rqnd-text",
                    children: [
                      "Score: ",
                      St
                    ]
                  })
                ]
              }),
              jsxRuntimeExports.jsx("button", {
                onClick: () => {
                  at(St), d(false);
                },
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                      backdrop-blur-md rounded-xl px-6 py-2
                      border-2 border-blue-500/50 hover:border-blue-400
                      shadow-[0_0_10px_rgba(96,165,250,0.2)]
                      hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                      transition-all duration-300 text-blue-400 rqnd-text`,
                children: "Close game"
              })
            ]
          }),
          Pt && jsxRuntimeExports.jsxs("div", {
            className: "absolute inset-0 bg-[#0A0F1C]/90 backdrop-blur-sm flex flex-col items-center justify-center z-10 rounded-xl",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "text-red-500 text-2xl mb-2 rqnd-text",
                children: "Game Over!"
              }),
              jsxRuntimeExports.jsxs("div", {
                className: "text-blue-400 mb-4 rqnd-text",
                children: [
                  "Final Score: ",
                  St
                ]
              }),
              jsxRuntimeExports.jsxs("div", {
                className: "flex flex-col gap-3",
                children: [
                  jsxRuntimeExports.jsx("button", {
                    onClick: xt,
                    className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl px-6 py-2
                        border-2 border-blue-500/50 hover:border-blue-400
                        shadow-[0_0_10px_rgba(96,165,250,0.2)]
                        hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                        transition-all duration-300 text-blue-400 rqnd-text`,
                    children: "Play Again"
                  }),
                  jsxRuntimeExports.jsx("button", {
                    onClick: () => {
                      at(St), d(false);
                    },
                    className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl px-6 py-2
                        border-2 border-red-500/50 hover:border-red-400
                        shadow-[0_0_10px_rgba(239,68,68,0.2)]
                        hover:shadow-[0_0_15px_rgba(239,68,68,0.4)]
                        transition-all duration-300 text-red-400 rqnd-text`,
                    children: "Close Game"
                  })
                ]
              })
            ]
          }),
          jsxRuntimeExports.jsx("div", {
            className: "pacman-game-grid",
            style: {
              display: "grid",
              gridTemplateColumns: `repeat(${GRID_SIZE}, ${CELL_SIZE}px)`,
              gap: "1px",
              padding: "4px",
              borderRadius: "8px"
            },
            children: rt.map((ut, ot) => ut.map((Ct, Rt) => jsxRuntimeExports.jsxs("div", {
              style: {
                width: `${CELL_SIZE}px`,
                height: `${CELL_SIZE}px`,
                position: "relative",
                backgroundColor: Ct === CELL_TYPES.WALL ? "#2563eb" : "#000"
              },
              children: [
                Ct === CELL_TYPES.DOT && jsxRuntimeExports.jsx("div", {
                  className: "absolute inset-0 m-auto w-1 h-1 bg-yellow-200 rounded-full"
                }),
                Ct === CELL_TYPES.POWER_PELLET && jsxRuntimeExports.jsx("div", {
                  className: "absolute inset-0 m-auto w-3 h-3 bg-yellow-400 rounded-full"
                }),
                st.x === Rt && st.y === ot && jsxRuntimeExports.jsx("div", {
                  className: "absolute inset-0",
                  style: {
                    transform: Mt(),
                    transition: "transform 0.2s"
                  },
                  children: jsxRuntimeExports.jsxs("div", {
                    className: "relative w-full h-full",
                    children: [
                      jsxRuntimeExports.jsx("div", {
                        className: "absolute inset-0 bg-yellow-400 rounded-full",
                        style: {
                          clipPath: jt ? "polygon(0 0, 85% 0, 50% 50%, 85% 100%, 0 100%)" : "polygon(0 0, 100% 0, 100% 100%, 0 100%)",
                          transition: "clip-path 0.2s ease-in-out"
                        }
                      }),
                      jsxRuntimeExports.jsx("div", {
                        className: "absolute bg-black rounded-full",
                        style: {
                          width: "12%",
                          height: "12%",
                          top: "25%",
                          left: "25%"
                        }
                      })
                    ]
                  })
                }),
                Et.map((Nt, Wt) => !sr.has(Wt) && Nt.x === Rt && Nt.y === ot && jsxRuntimeExports.jsx("div", {
                  className: "absolute inset-0 flex items-center justify-center",
                  children: jsxRuntimeExports.jsxs("div", {
                    className: `w-full h-full relative ${kt ? "animate-pulse" : ""}`,
                    style: {
                      backgroundColor: kt ? "#2563eb" : Nt.color,
                      borderRadius: "50% 50% 0 0",
                      opacity: kt ? "0.7" : "1"
                    },
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "absolute",
                        style: {
                          width: "80%",
                          height: "40%",
                          top: "20%",
                          left: "10%",
                          display: "flex",
                          justifyContent: "space-between"
                        },
                        children: [
                          jsxRuntimeExports.jsx("div", {
                            className: "w-[45%] h-full bg-white rounded-full relative",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "absolute w-[40%] h-[40%] bg-black rounded-full",
                              style: {
                                top: "50%",
                                left: "50%",
                                transform: "translate(-50%, -50%)"
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-[45%] h-full bg-white rounded-full relative",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "absolute w-[40%] h-[40%] bg-black rounded-full",
                              style: {
                                top: "50%",
                                left: "50%",
                                transform: "translate(-50%, -50%)"
                              }
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsx("div", {
                        className: "absolute bottom-0 w-full",
                        style: {
                          height: "25%",
                          backgroundColor: kt ? "#2563eb" : Nt.color,
                          clipPath: "polygon(0 0, 25% 0, 25% 100%, 50% 0, 75% 0, 75% 100%, 100% 0, 100% 100%, 0 100%)"
                        }
                      })
                    ]
                  })
                }, Wt))
              ]
            }, `${Rt}-${ot}`)))
          }),
          jsxRuntimeExports.jsxs("div", {
            className: "mt-4 relative h-32 max-w-[180px] mx-auto pacman-controls",
            children: [
              jsxRuntimeExports.jsx("button", {
                onClick: () => it("ArrowUp"),
                className: `absolute top-0 left-1/2 -translate-x-1/2 w-12 h-12 
                    bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                    backdrop-blur-md rounded-xl
                    border-2 border-blue-500/50 hover:border-blue-400
                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                    transition-all duration-300 flex items-center justify-center`,
                children: jsxRuntimeExports.jsx("svg", {
                  className: "w-6 h-6 text-blue-400",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: jsxRuntimeExports.jsx("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2.5",
                    d: "M5 15l7-7 7 7"
                  })
                })
              }),
              jsxRuntimeExports.jsx("button", {
                onClick: () => it("ArrowLeft"),
                className: `absolute left-0 top-1/2 -translate-y-1/2 w-12 h-12 
                    bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                    backdrop-blur-md rounded-xl
                    border-2 border-blue-500/50 hover:border-blue-400
                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                    transition-all duration-300 flex items-center justify-center`,
                children: jsxRuntimeExports.jsx("svg", {
                  className: "w-6 h-6 text-blue-400",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: jsxRuntimeExports.jsx("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2.5",
                    d: "M15 19l-7-7 7-7"
                  })
                })
              }),
              jsxRuntimeExports.jsx("button", {
                onClick: () => it("ArrowRight"),
                className: `absolute right-0 top-1/2 -translate-y-1/2 w-12 h-12 
                    bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                    backdrop-blur-md rounded-xl
                    border-2 border-blue-500/50 hover:border-blue-400
                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                    transition-all duration-300 flex items-center justify-center`,
                children: jsxRuntimeExports.jsx("svg", {
                  className: "w-6 h-6 text-blue-400",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: jsxRuntimeExports.jsx("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2.5",
                    d: "M9 5l7 7-7 7"
                  })
                })
              }),
              jsxRuntimeExports.jsx("button", {
                onClick: () => it("ArrowDown"),
                className: `absolute bottom-0 left-1/2 -translate-x-1/2 w-12 h-12 
                    bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                    backdrop-blur-md rounded-xl
                    border-2 border-blue-500/50 hover:border-blue-400
                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                    transition-all duration-300 flex items-center justify-center`,
                children: jsxRuntimeExports.jsx("svg", {
                  className: "w-6 h-6 text-blue-400",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: jsxRuntimeExports.jsx("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: "2.5",
                    d: "M19 9l-7 7-7-7"
                  })
                })
              })
            ]
          })
        ]
      });
    };
    function TaskCategories() {
      var _a3;
      const [d, _] = reactExports.useState("Social"), [$, j] = reactExports.useState(null), [rt, et] = reactExports.useState(false), { user: st, updateUser: pt } = useAuthStore(), { tg: Et } = useTelegram(), [Bt, St] = reactExports.useState(false), [$t, kt] = reactExports.useState({}), [Tt, Pt] = reactExports.useState({
        isOpen: false,
        title: "",
        message: ""
      }), It = [
        "Social",
        "Media",
        "Daily"
      ], jt = {
        Social: [
          {
            id: 1,
            title: "Join POKO Channel",
            reward: 1e3,
            description: "Join our official POKO Community channel.",
            channelUsername: "JoinPoko",
            type: "channel"
          },
          {
            id: 2,
            title: "Join Root Channel",
            reward: 1e3,
            description: "Join the official Root Community channel.",
            channelUsername: "rootcommunity",
            type: "channel"
          },
          {
            id: 3,
            title: "Join Panda Channel",
            reward: 1e3,
            description: "Join the Timber Panda channel.",
            channelUsername: "timberpanda",
            type: "channel"
          },
          {
            id: 4,
            title: "Join Dino Channel",
            reward: 1e3,
            description: "Join the Dino Rush News channel.",
            channelUsername: "DinoRushNews",
            type: "channel"
          }
        ],
        Media: [
          {
            id: 5,
            title: "Play Root Game",
            reward: 1500,
            description: "Play Root game and earn rewards.",
            botUsername: "RootBTC_bot",
            type: "bot"
          },
          {
            id: 6,
            title: "Play Panda Game",
            reward: 1500,
            description: "Play Panda game and earn rewards.",
            botUsername: "pandapp_gamebot",
            type: "bot"
          },
          {
            id: 7,
            title: "Play Dino Game",
            reward: 1500,
            description: "Play Dino game and earn rewards.",
            botUsername: "Dinosaur_Gamebot",
            type: "bot"
          }
        ],
        Daily: [
          {
            id: 8,
            title: "Play POKO Game",
            reward: "???",
            description: "Play Method Pacman game and have fun!",
            type: "game"
          }
        ]
      };
      reactExports.useEffect(() => {
        var _a4, _b2;
        ((_b2 = (_a4 = window.Telegram) == null ? void 0 : _a4.WebApp) == null ? void 0 : _b2.CloudStorage) && (jt.Social.forEach((Kt) => {
          window.Telegram.WebApp.CloudStorage.getItem(`task_${Kt.id}`, (ar, sr) => {
            !ar && sr && kt((er) => ({
              ...er,
              [Kt.id]: sr === "true"
            }));
          });
        }), jt.Media.forEach((Kt) => {
          window.Telegram.WebApp.CloudStorage.getItem(`task_${Kt.id}`, (ar, sr) => {
            !ar && sr && kt((er) => ({
              ...er,
              [Kt.id]: sr === "true"
            }));
          });
        }));
      }, []);
      const Dt = (Kt) => {
        if (Kt === 8) {
          St(true);
          return;
        }
        j($ === Kt ? null : Kt);
      }, Ot = async (Kt, ar) => {
        var _a4;
        if (console.log("\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043F\u043E\u0434\u043F\u0438\u0441\u043A\u0438 \u043D\u0430 \u043A\u0430\u043D\u0430\u043B:", Kt), (!(st == null ? void 0 : st.telegramId) || rt || $t[ar]) && $t[ar]) {
          Zt("Reward Already Claimed", "You have already claimed this reward!");
          return;
        }
        try {
          et(true), ((_a4 = window.Telegram) == null ? void 0 : _a4.WebApp) && window.Telegram.WebApp.openTelegramLink(`https://t.me/${Kt}`), await new Promise((Ut) => setTimeout(Ut, 2e3));
          const er = await (await fetch(`/check-channel-subscription?telegramId=${st.telegramId}&channel=${Kt}`, {
            headers: {
              "X-Telegram-Init-Data": Et.initData
            }
          })).json();
          console.log("\u041E\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:", er), er.success ? window.Telegram.WebApp.CloudStorage.setItem(`task_${ar}`, "true", (Ut) => {
            Ut || (kt((xt) => ({
              ...xt,
              [ar]: true
            })), pt({
              ...st,
              rootBalance: er.newBalance
            }), Zt("Success", "Reward claimed successfully!"));
          }) : Zt("Subscription Required", "Please subscribe to the channel first!");
        } catch (sr) {
          console.error("Error checking subscription:", sr), Zt("Error", "Failed to check subscription. Please try again.");
        } finally {
          et(false);
        }
      }, Ft = async (Kt, ar) => {
        var _a4;
        if (ar.stopPropagation(), !(st == null ? void 0 : st.telegramId) || rt || $t[Kt.id]) {
          if ($t[Kt.id]) {
            Zt("Reward Claimed", "You have already claimed the reward!");
            return;
          }
          return;
        }
        et(true);
        try {
          ((_a4 = window.Telegram) == null ? void 0 : _a4.WebApp) ? window.Telegram.WebApp.openTelegramLink(`https://t.me/${Kt.botUsername}`) : window.open(`https://t.me/${Kt.botUsername}`, "_blank");
          const er = parseInt(st.rootBalance || 0) + Kt.reward;
          if ((await (await fetch("/update-root-balance", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-Telegram-Init-Data": Et.initData
            },
            body: JSON.stringify({
              telegramId: st.telegramId,
              rootBalance: er
            })
          })).json()).success) window.Telegram.WebApp.CloudStorage.setItem(`task_${Kt.id}`, "true", (tt) => {
            tt || (kt((nt) => ({
              ...nt,
              [Kt.id]: true
            })), pt({
              ...st,
              rootBalance: er
            }), Zt("\u2705 Reward successfully claimed!", "Reward successfully claimed!"));
          });
          else throw new Error("Failed to update balance");
        } catch (sr) {
          console.error("Error processing bot reward:", sr), Zt("\u274C Failed to process reward. Please try again.", "Failed to process reward. Please try again.");
        } finally {
          et(false);
        }
      }, Lt = async (Kt, ar) => {
        ar.stopPropagation();
        try {
          const er = await (await fetch(`/check-channel-subscription?telegramId=${st.telegramId}&channel=${Kt.channelUsername}`, {
            headers: {
              "x-telegram-init-data": Et.initData
            }
          })).json();
          er.success ? window.Telegram.WebApp.CloudStorage.setItem(`task_${Kt.id}`, "true", (Ut) => {
            Ut || (kt((xt) => ({
              ...xt,
              [Kt.id]: true
            })), pt({
              ...st,
              rootBalance: er.newBalance
            }), Zt("\u2705 Reward successfully claimed!", "Reward successfully claimed!"));
          }) : Zt("\u274C Please subscribe to the channel first!", "Please subscribe to the channel first!");
        } catch (sr) {
          console.error("Error:", sr), Zt("\u274C An error occurred. Please try again.", "An error occurred. Please try again.");
        }
      }, Zt = (Kt, ar) => {
        Pt({
          isOpen: true,
          title: Kt,
          message: ar
        });
      };
      return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
        children: [
          jsxRuntimeExports.jsxs("div", {
            className: "w-full max-w-md mx-auto mt-2 relative z-10",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "flex gap-1.5 mb-4 overflow-x-auto p-1.5 custom-scrollbar",
                children: It.map((Kt) => jsxRuntimeExports.jsx("button", {
                  onClick: () => _(Kt),
                  className: `px-4 py-2 rounded-lg text-sm whitespace-nowrap transition-all duration-300
                        ${d === Kt ? "bg-blue-500 text-white shadow-[0_0_15px_rgba(59,130,246,0.3)]" : "bg-[#1E293B]/80 text-blue-400 hover:bg-[#1E293B] border border-blue-400/20"}`,
                  style: {
                    fontFamily: "Polonium"
                  },
                  children: Kt
                }, Kt))
              }),
              jsxRuntimeExports.jsx("div", {
                className: "space-y-3",
                children: (_a3 = jt[d]) == null ? void 0 : _a3.map((Kt) => jsxRuntimeExports.jsxs("div", {
                  onClick: () => Dt(Kt.id),
                  className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-lg
                        border border-blue-400/20
                        shadow-[0_0_10px_rgba(30,58,138,0.1)]
                        hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                        transition-all duration-300
                        overflow-hidden pointer-events-auto`,
                  children: [
                    jsxRuntimeExports.jsxs("div", {
                      className: "flex items-center justify-between p-3",
                      children: [
                        jsxRuntimeExports.jsxs("div", {
                          className: "flex items-center gap-3",
                          children: [
                            jsxRuntimeExports.jsx("div", {
                              className: "p-2 rounded-lg bg-[#0F172A] border border-blue-400/20",
                              children: jsxRuntimeExports.jsx("svg", {
                                className: "w-4 h-4 text-blue-400",
                                fill: "none",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24",
                                children: jsxRuntimeExports.jsx("path", {
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  strokeWidth: "2",
                                  d: "M13 10V3L4 14h7v7l9-11h-7z"
                                })
                              })
                            }),
                            jsxRuntimeExports.jsx("span", {
                              className: "text-white/90 text-sm drop-shadow-[0_0_8px_rgba(255,255,255,0.5)]",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: Kt.title
                            })
                          ]
                        }),
                        jsxRuntimeExports.jsxs("div", {
                          className: "bg-[#0F172A]/50 text-blue-400 px-3 py-1 rounded-lg text-xs border border-blue-400/20",
                          style: {
                            fontFamily: "Polonium"
                          },
                          children: [
                            Kt.reward,
                            " POKO"
                          ]
                        })
                      ]
                    }),
                    $ === Kt.id && jsxRuntimeExports.jsxs("div", {
                      className: "px-3 pb-3 animate-slideDown",
                      children: [
                        jsxRuntimeExports.jsx("div", {
                          className: "text-blue-400/60 text-xs mb-3 pl-11",
                          style: {
                            fontFamily: "Polonium"
                          },
                          children: Kt.description
                        }),
                        jsxRuntimeExports.jsx("div", {
                          className: "space-y-2",
                          children: Kt.type === "bot" ? jsxRuntimeExports.jsxs("button", {
                            onClick: (ar) => Ft(Kt, ar),
                            disabled: rt || $t[Kt.id],
                            className: `w-full bg-[#0F172A]/80 hover:bg-[#0F172A] text-blue-400 py-2 rounded-lg 
                                  text-sm transition-all duration-200
                                  border-2 border-blue-400/50 hover:border-blue-400
                                  shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                  hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                                  flex items-center justify-center gap-2
                                  ${rt || $t[Kt.id] ? "opacity-50 cursor-not-allowed" : ""}`,
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: [
                              jsxRuntimeExports.jsx("svg", {
                                className: "w-4 h-4",
                                fill: "none",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24",
                                children: jsxRuntimeExports.jsx("path", {
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  strokeWidth: "2",
                                  d: "M13 10V3L4 14h7v7l9-11h-7z"
                                })
                              }),
                              $t[Kt.id] ? "Reward Claimed" : "Play Game"
                            ]
                          }) : Kt.type === "game" ? jsxRuntimeExports.jsxs("button", {
                            onClick: () => St(true),
                            className: `w-full bg-[#0F172A]/80 hover:bg-[#0F172A] text-blue-400 py-2 rounded-lg 
                                  text-sm transition-all duration-200
                                  border-2 border-blue-400/50 hover:border-blue-400
                                  shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                  hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                                  flex items-center justify-center gap-2`,
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: [
                              jsxRuntimeExports.jsx("svg", {
                                className: "w-4 h-4",
                                fill: "none",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24",
                                children: jsxRuntimeExports.jsx("path", {
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  strokeWidth: "2",
                                  d: "M13 10V3L4 14h7v7l9-11h-7z"
                                })
                              }),
                              "Play Game"
                            ]
                          }) : jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
                            children: [
                              jsxRuntimeExports.jsxs("button", {
                                onClick: (ar) => Ot(Kt.channelUsername, Kt.id),
                                className: `w-full bg-[#0F172A]/80 hover:bg-[#0F172A] text-blue-400 py-2 rounded-lg 
                                    text-sm transition-all duration-200
                                    border-2 border-blue-400/50 hover:border-blue-400
                                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                                    flex items-center justify-center gap-2`,
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  jsxRuntimeExports.jsx("svg", {
                                    className: "w-4 h-4",
                                    fill: "none",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24",
                                    children: jsxRuntimeExports.jsx("path", {
                                      strokeLinecap: "round",
                                      strokeLinejoin: "round",
                                      strokeWidth: "2",
                                      d: "M13 10V3L4 14h7v7l9-11h-7z"
                                    })
                                  }),
                                  "Join Channel"
                                ]
                              }),
                              jsxRuntimeExports.jsx("button", {
                                onClick: (ar) => Lt(Kt, ar),
                                disabled: $t[Kt.id],
                                className: `w-full bg-[#0F172A]/80 hover:bg-[#0F172A] text-blue-400 py-2 rounded-lg 
                                    text-sm transition-all duration-200
                                    border-2 border-blue-400/50 hover:border-blue-400
                                    shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                    hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                                    flex items-center justify-center gap-2
                                    ${$t[Kt.id] ? "opacity-50 cursor-not-allowed" : ""}`,
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: $t[Kt.id] ? "Reward Claimed" : "Claim Reward"
                              })
                            ]
                          })
                        })
                      ]
                    })
                  ]
                }, Kt.id))
              })
            ]
          }),
          Tt.isOpen && jsxRuntimeExports.jsxs("div", {
            className: "fixed inset-0 flex items-center justify-center z-[9999]",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "fixed inset-0 bg-black/40 backdrop-blur-md",
                onClick: () => Pt({
                  ...Tt,
                  isOpen: false
                })
              }),
              jsxRuntimeExports.jsxs("div", {
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl p-6
                        border-2 border-blue-500/50
                        shadow-[0_0_30px_rgba(96,165,250,0.2)]
                        max-w-sm w-full mx-4
                        relative z-10`,
                children: [
                  jsxRuntimeExports.jsx("h2", {
                    className: "text-3xl text-blue-400 mb-6 drop-shadow-[0_0_8px_rgba(96,165,250,0.5)] rqnd-text",
                    children: Tt.title
                  }),
                  jsxRuntimeExports.jsx("p", {
                    className: "text-gray-300 mb-8 leading-relaxed",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: Tt.message
                  }),
                  jsxRuntimeExports.jsx("button", {
                    onClick: () => Pt({
                      ...Tt,
                      isOpen: false
                    }),
                    className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl p-3
                        border-2 border-blue-500/50 hover:border-blue-400
                        shadow-[0_0_10px_rgba(96,165,250,0.2)]
                        hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                        transition-all duration-300
                        w-full h-12 text-blue-400`,
                    children: jsxRuntimeExports.jsxs("span", {
                      className: "flex items-center justify-center",
                      style: {
                        fontFamily: "Polonium"
                      },
                      children: [
                        jsxRuntimeExports.jsx("span", {
                          className: "mr-2",
                          children: "\u26A1"
                        }),
                        " Close"
                      ]
                    })
                  })
                ]
              })
            ]
          }),
          Bt && jsxRuntimeExports.jsxs("div", {
            className: "fixed inset-0 flex items-center justify-center z-[9999]",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "fixed inset-0 bg-black/40 backdrop-blur-md",
                onClick: () => St(false)
              }),
              jsxRuntimeExports.jsxs("div", {
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl p-6
                        border-2 border-blue-500/50
                        shadow-[0_0_30px_rgba(96,165,250,0.2)]
                        max-w-lg w-full mx-4
                        relative z-10`,
                children: [
                  jsxRuntimeExports.jsx("h2", {
                    className: "text-3xl text-blue-400 mb-6 drop-shadow-[0_0_8px_rgba(96,165,250,0.5)] rqnd-text",
                    children: "POKO PACMAN"
                  }),
                  jsxRuntimeExports.jsx(PacmanGame, {
                    setGameActive: St
                  })
                ]
              })
            ]
          })
        ]
      });
    }
    const BalanceDisplay = () => {
      const { user: d } = useAuthStore(), _ = parseInt((d == null ? void 0 : d.rootBalance) || 0);
      return jsxRuntimeExports.jsx("div", {
        className: "w-full max-w-md mx-auto",
        children: jsxRuntimeExports.jsx("div", {
          className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95 
                    backdrop-blur-md rounded-lg px-4 py-2
                    border border-blue-400/20 mb-4
                    shadow-[0_0_10px_rgba(30,58,138,0.1)]
                    hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                    transition-all duration-300
                    w-full`,
          children: jsxRuntimeExports.jsx("div", {
            className: "flex justify-center items-center",
            children: jsxRuntimeExports.jsxs("span", {
              className: "text-lg text-white/90",
              style: {
                fontFamily: "Polonium"
              },
              children: [
                _,
                " POKO"
              ]
            })
          })
        })
      });
    };
    function TasksPage() {
      return jsxRuntimeExports.jsxs("div", {
        className: "min-h-screen bg-[#0A0F1C]",
        style: {
          fontFamily: "Polonium"
        },
        children: [
          jsxRuntimeExports.jsx("div", {
            className: "h-screen overflow-y-auto",
            children: jsxRuntimeExports.jsxs("div", {
              className: "w-full max-w-md mx-auto px-4 pt-8 pb-24",
              children: [
                jsxRuntimeExports.jsx("div", {
                  className: "flex justify-end",
                  children: jsxRuntimeExports.jsx(BalanceDisplay, {})
                }),
                jsxRuntimeExports.jsx(ReferralBanner, {}),
                jsxRuntimeExports.jsx(TaskCategories, {})
              ]
            })
          }),
          jsxRuntimeExports.jsx("div", {
            className: "fixed bottom-0 left-0 right-0 bg-[#0A0F1C] z-50",
            children: jsxRuntimeExports.jsx(Navigation, {})
          })
        ]
      });
    }
    const imageCache = {}, imagesToPreload = [
      "/assets/power.webp",
      "/assets/poowerr.webp",
      "/assets/purpule1.webp",
      "/assets/purpule2.webp",
      "/assets/red1.webp",
      "/assets/red2.webp",
      "/assets/egg1.webp",
      "/assets/basic.webp",
      "/assets/minion.webp",
      "/assets/cube1.webp",
      "/assets/cube2.webp",
      "/assets/cube3.webp",
      "/assets/cube4.webp"
    ], preloadImage = (d) => new Promise((_, $) => {
      if (imageCache[d]) {
        _(imageCache[d]);
        return;
      }
      const j = new Image();
      j.src = d, j.onload = () => {
        imageCache[d] = d, _(d);
      }, j.onerror = (rt) => {
        console.error(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F: ${d}`, rt), $(rt);
      };
    }), preloadAllImages = () => Promise.all(imagesToPreload.map((d) => preloadImage(d))), getImageFromCache = (d) => imageCache[d] || d, images$1 = {
      basic: getImageFromCache("/assets/power.webp"),
      minion: getImageFromCache("/assets/poowerr.webp"),
      cube1: getImageFromCache("/assets/purpule1.webp"),
      cube2: getImageFromCache("/assets/purpule2.webp"),
      cube3: getImageFromCache("/assets/red1.webp"),
      cube4: getImageFromCache("/assets/red2.webp")
    };
    function BagPage() {
      const { user: d, updateUser: _ } = useAuthStore(), [$, j] = reactExports.useState(null), [rt, et] = reactExports.useState(true), [st, pt] = reactExports.useState([]), [Et, Bt] = reactExports.useState({
        basic: 0,
        minion: 0,
        cube1: 0,
        cube2: 0,
        cube3: 0,
        cube4: 0
      }), [St, $t] = reactExports.useState(false), [kt, Tt] = reactExports.useState(0), [Pt, It] = reactExports.useState(false);
      reactExports.useEffect(() => {
        (async () => {
          if (!(d == null ? void 0 : d.telegramId)) {
            et(false);
            return;
          }
          try {
            const Lt = await (await fetch(`/get-user-miners?telegramId=${d.telegramId}`, {
              headers: {
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              }
            })).json();
            if (Lt.success) {
              let Zt = Lt.miners || [];
              if (Zt.filter((ar) => ar.type === "minion").length > 10) {
                Zt = Zt.filter((ar) => ar.type !== "minion");
                for (let ar = 0; ar < 10; ar++) Zt.push({
                  type: "minion",
                  id: `minion-${ar}`
                });
              }
              pt(Zt);
            }
          } catch {
            j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u043C\u0430\u0439\u043D\u0435\u0440\u043E\u0432");
          } finally {
            et(false);
          }
        })();
      }, [
        d == null ? void 0 : d.telegramId
      ]), reactExports.useEffect(() => {
        window.Telegram.WebApp.CloudStorage.getItem("lastCollection", (Lt, Zt) => {
          if (Lt || !Zt) {
            const sr = {
              basic: Date.now(),
              minion: Date.now(),
              cube1: Date.now(),
              cube2: Date.now(),
              cube3: Date.now(),
              cube4: Date.now()
            };
            window.Telegram.WebApp.CloudStorage.setItem("lastCollection", JSON.stringify(sr));
            return;
          }
          const Kt = JSON.parse(Zt);
          let ar = false;
          Kt.cube1 || (Kt.cube1 = Date.now(), ar = true), Kt.cube2 || (Kt.cube2 = Date.now(), ar = true), Kt.cube3 || (Kt.cube3 = Date.now(), ar = true), Kt.cube4 || (Kt.cube4 = Date.now(), ar = true), ar && window.Telegram.WebApp.CloudStorage.setItem("lastCollection", JSON.stringify(Kt));
        });
        const Ot = () => {
          window.Telegram.WebApp.CloudStorage.getItem("lastCollection", (Lt, Zt) => {
            if (Lt) {
              console.error("Error getting lastCollection:", Lt);
              return;
            }
            const Kt = JSON.parse(Zt || "{}"), ar = Date.now(), sr = {
              ...Et
            }, er = st.reduce((Ut, xt) => (Ut[xt.type] = (Ut[xt.type] || 0) + 1, Ut), {});
            Object.entries(er).forEach(([Ut, xt]) => {
              const tt = Ut === "basic" ? 0.005787037037037037 : Ut === "minion" ? 0.11574074074074074 : Ut === "cube1" ? 0.008680555555555556 : Ut === "cube2" ? 0.023148148148148147 : Ut === "cube3" ? 0.1388888888888889 : 1.8518518518518519, nt = (ar - (Kt[Ut] || ar)) / 1e3, it = tt * xt, at = Math.min(Ut === "cube1" ? 3750 : Ut === "minion" ? 4e4 : Ut === "cube2" ? 22e3 : Ut === "cube3" ? 288e3 : Ut === "basic" ? 1e3 : 1 / 0, Math.floor(nt * it));
              sr[Ut] = at;
            }), Bt(sr);
          });
        };
        Ot();
        const Ft = setInterval(Ot, 1e5);
        return () => clearInterval(Ft);
      }, [
        st
      ]);
      const jt = async (Ot) => {
        try {
          if (!(d == null ? void 0 : d.telegramId)) return;
          const Ft = Et[Ot];
          if (Ft <= 0) return;
          const Lt = parseInt(d.rootBalance || 0), Zt = Lt + Ft;
          console.log("Collecting MTH:", {
            currentBalance: Lt,
            amountToAdd: Ft,
            newBalance: Zt
          }), (await (await fetch("/update-root-balance", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            },
            body: JSON.stringify({
              telegramId: d.telegramId,
              rootBalance: Zt
            })
          })).json()).success && window.Telegram.WebApp.CloudStorage.getItem("lastCollection", (sr, er) => {
            if (sr) {
              console.error("Error getting lastCollection:", sr);
              return;
            }
            const Ut = JSON.parse(er || "{}");
            Ut[Ot] = Date.now(), window.Telegram.WebApp.CloudStorage.setItem("lastCollection", JSON.stringify(Ut), (xt) => {
              if (xt) {
                console.error("Error saving lastCollection:", xt);
                return;
              }
              _({
                ...d,
                rootBalance: Zt
              }), Bt((tt) => ({
                ...tt,
                [Ot]: 0
              })), Tt(Ft), It(true), setTimeout(() => It(false), 2e3);
            });
          });
        } catch (Ft) {
          console.error("Error collecting MTH:", Ft), j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0441\u0431\u043E\u0440\u0435 MTH");
        }
      }, Dt = () => {
        const Ot = {
          basic: 500,
          minion: 1e4,
          cube1: 750,
          cube2: 2e3,
          cube3: 12e3,
          cube4: 16e4
        };
        return st.reduce((Ft, Lt) => {
          const Zt = Ot[Lt.type] || 0;
          return Ft + Zt;
        }, 0);
      };
      return rt ? jsxRuntimeExports.jsx("div", {
        className: "min-h-screen bg-[#0A0F1C] flex items-center justify-center",
        children: jsxRuntimeExports.jsxs("div", {
          className: "flex flex-col items-center",
          children: [
            jsxRuntimeExports.jsxs("div", {
              className: "w-16 h-16 relative",
              children: [
                jsxRuntimeExports.jsx("div", {
                  className: "absolute inset-0 rounded-full bg-blue-500/20 animate-ping"
                }),
                jsxRuntimeExports.jsx("div", {
                  className: `absolute inset-2 rounded-full bg-gradient-to-br from-blue-400 to-blue-600 
                           shadow-[0_0_15px_rgba(59,130,246,0.5)] animate-pulse`
                }),
                jsxRuntimeExports.jsx("div", {
                  className: `absolute inset-[30%] rounded-full bg-blue-300 
                           shadow-[0_0_10px_rgba(147,197,253,0.8)]`
                })
              ]
            }),
            jsxRuntimeExports.jsx("div", {
              className: `mt-4 text-blue-400 text-lg font-mono 
                        drop-shadow-[0_0_8px_rgba(96,165,250,0.5)]`,
              children: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430..."
            })
          ]
        })
      }) : jsxRuntimeExports.jsxs("div", {
        className: "min-h-screen bg-[#0A0F1C]",
        children: [
          jsxRuntimeExports.jsx("div", {
            className: "min-h-screen bg-[#0A0F1C] relative",
            children: jsxRuntimeExports.jsx("div", {
              className: `h-screen overflow-y-auto ${St ? "pointer-events-none blur-sm" : ""}`,
              children: jsxRuntimeExports.jsxs("div", {
                className: "w-full max-w-md mx-auto px-4 pt-6 pb-24 relative z-10",
                style: {
                  fontFamily: "Polonium"
                },
                children: [
                  jsxRuntimeExports.jsx("div", {
                    className: "flex justify-end",
                    children: jsxRuntimeExports.jsx(BalanceDisplay, {})
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex items-center gap-2",
                    children: [
                      jsxRuntimeExports.jsx("h1", {
                        className: "text-3xl text-white/90 mb-6",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "Bag"
                      }),
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => $t(true),
                        className: "w-5 h-5 rounded-full bg-blue-400/20 text-blue-400 flex items-center justify-center text-sm hover:bg-blue-400/30 self-start",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "?"
                      })
                    ]
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex items-center gap-2 mb-6",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: [
                      jsxRuntimeExports.jsx("h2", {
                        className: "text-xl text-blue-400/70",
                        children: "POKO mining:"
                      }),
                      jsxRuntimeExports.jsxs("span", {
                        className: "text-sm text-blue-400/70",
                        children: [
                          " +",
                          Dt(),
                          " POKO/day"
                        ]
                      })
                    ]
                  }),
                  jsxRuntimeExports.jsx("div", {
                    className: "grid grid-cols-5 gap-3",
                    children: (() => {
                      const Ot = st.filter((Ut) => Ut.type === "basic"), Ft = st.filter((Ut) => Ut.type === "minion"), Lt = st.filter((Ut) => Ut.type === "cube1"), Zt = st.filter((Ut) => Ut.type === "cube2"), Kt = st.filter((Ut) => Ut.type === "cube3"), ar = st.filter((Ut) => Ut.type === "cube4"), sr = [];
                      Ot.length > 0 && sr.push(jsxRuntimeExports.jsx("div", {
                        className: "relative",
                        children: jsxRuntimeExports.jsxs("div", {
                          className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                          children: [
                            jsxRuntimeExports.jsx("img", {
                              src: images$1.basic,
                              alt: "Basic",
                              className: "h-full w-full object-contain scale-125 border-2 border-blue-500 rounded"
                            }),
                            jsxRuntimeExports.jsxs("div", {
                              className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                              children: [
                                Ot.length,
                                "/5"
                              ]
                            })
                          ]
                        })
                      }, "basic")), Ft.length > 0 && sr.push(jsxRuntimeExports.jsx("div", {
                        className: "relative",
                        children: jsxRuntimeExports.jsxs("div", {
                          className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                          children: [
                            jsxRuntimeExports.jsx("img", {
                              src: images$1.minion,
                              alt: "Minion",
                              className: "h-full w-full object-cover scale-125 border-2 border-blue-500 rounded"
                            }),
                            jsxRuntimeExports.jsxs("div", {
                              className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                              children: [
                                Ft.length,
                                "/10"
                              ]
                            })
                          ]
                        })
                      }, "minion")), Lt.forEach((Ut) => {
                        sr.push(jsxRuntimeExports.jsx("div", {
                          className: "relative",
                          children: jsxRuntimeExports.jsxs("div", {
                            className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                            children: [
                              jsxRuntimeExports.jsx("img", {
                                src: images$1.cube1,
                                alt: "Cube 1",
                                className: "h-full w-full object-cover scale-125 border-2 border-blue-500 rounded"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                                children: "1"
                              })
                            ]
                          })
                        }, Ut.id));
                      }), Zt.forEach((Ut) => {
                        sr.push(jsxRuntimeExports.jsx("div", {
                          className: "relative",
                          children: jsxRuntimeExports.jsxs("div", {
                            className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                            children: [
                              jsxRuntimeExports.jsx("img", {
                                src: images$1.cube2,
                                alt: "Cube 2",
                                className: "h-full w-full object-cover scale-125 border-2 border-blue-500 rounded"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                                children: "1"
                              })
                            ]
                          })
                        }, Ut.id));
                      }), Kt.forEach((Ut) => {
                        sr.push(jsxRuntimeExports.jsx("div", {
                          className: "relative",
                          children: jsxRuntimeExports.jsxs("div", {
                            className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                            children: [
                              jsxRuntimeExports.jsx("img", {
                                src: images$1.cube3,
                                alt: "Cube 3",
                                className: "h-full w-full object-cover scale-125 border-2 border-blue-500 rounded"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                                children: "1"
                              })
                            ]
                          })
                        }, Ut.id));
                      }), ar.forEach((Ut) => {
                        sr.push(jsxRuntimeExports.jsx("div", {
                          className: "relative",
                          children: jsxRuntimeExports.jsxs("div", {
                            className: "bg-[#1E293B]/80 backdrop-blur-sm p-2 rounded-lg border border-blue-400/20 shadow-lg",
                            children: [
                              jsxRuntimeExports.jsx("img", {
                                src: images$1.cube4,
                                alt: "Cube 4",
                                className: "h-full w-full object-cover scale-125 border-2 border-blue-500 rounded"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "absolute bottom-1 right-1 bg-blue-400/20 px-2 py-1 rounded text-xs text-blue-400",
                                children: "1"
                              })
                            ]
                          })
                        }, Ut.id));
                      });
                      const er = Math.max(0, ((d == null ? void 0 : d.maxSlots) || 5) - sr.length);
                      for (let Ut = 0; Ut < er; Ut++) sr.push(jsxRuntimeExports.jsx("div", {
                        className: "aspect-square bg-[#1E293B]/50 rounded-xl border border-blue-400/10"
                      }, `empty-${Ut}`));
                      return sr;
                    })()
                  }),
                  st.some((Ot) => Ot.type === "basic") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Basic"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                500 * st.filter((Ot) => Ot.type === "basic").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          500 * st.filter((Ot) => Ot.type === "basic").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.min(Et.basic, 1e3),
                                  "/",
                                  1e3,
                                  " POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.basic / 1e3 * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: `${Et.basic / 1e3 * 100}%`
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("basic"),
                              disabled: Et.basic <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.basic <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  }),
                  st.some((Ot) => Ot.type === "minion") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Classic"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                1e4 * st.filter((Ot) => Ot.type === "minion").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          1e4 * st.filter((Ot) => Ot.type === "minion").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Et.minion,
                                  "/40000 POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.minion / 4e4 * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: `${Et.minion / 4e4 * 100}%`
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("minion"),
                              disabled: Et.minion <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.minion <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  }),
                  st.some((Ot) => Ot.type === "cube1") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Superior"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                750 * st.filter((Ot) => Ot.type === "cube1").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          750 * st.filter((Ot) => Ot.type === "cube1").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Et.cube1,
                                  "/3750 POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.cube1 / 3750 * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: `${Et.cube1 / 3750 * 100}%`
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("cube1"),
                              disabled: Et.cube1 <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.cube1 <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  }),
                  st.some((Ot) => Ot.type === "cube2") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Enhanced"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                2e3 * st.filter((Ot) => Ot.type === "cube2").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          2e3 * st.filter((Ot) => Ot.type === "cube2").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Et.cube2,
                                  "/22000 POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.cube2 / 22e3 * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: `${Et.cube2 / 22e3 * 100}%`
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("cube2"),
                              disabled: Et.cube2 <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.cube2 <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  }),
                  st.some((Ot) => Ot.type === "cube3") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Excellent"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                12e3 * st.filter((Ot) => Ot.type === "cube3").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          12e3 * st.filter((Ot) => Ot.type === "cube3").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Et.cube3,
                                  "/288000 POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.cube3 / 288e3 * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: `${Et.cube3 / 288e3 * 100}%`
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("cube3"),
                              disabled: Et.cube3 <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.cube3 <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  }),
                  st.some((Ot) => Ot.type === "cube4") && jsxRuntimeExports.jsxs("div", {
                    className: "mt-3 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-2.5 border border-blue-400/20",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex justify-between items-center mb-1",
                        children: [
                          jsxRuntimeExports.jsx("h3", {
                            className: "text-lg text-white",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Prime"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 rounded-md px-2 py-0.5 border border-blue-400/20",
                            children: jsxRuntimeExports.jsxs("span", {
                              className: "text-blue-400 text-xs",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: [
                                "+",
                                16e4 * st.filter((Ot) => Ot.type === "cube4").length,
                                " POKO/day"
                              ]
                            })
                          })
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "text-blue-400/60 text-xs mb-1.5",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: [
                          "Total mining: ",
                          16e4 * st.filter((Ot) => Ot.type === "cube4").length,
                          " POKO/day"
                        ]
                      }),
                      jsxRuntimeExports.jsxs("div", {
                        className: "bg-[#0F172A]/50 rounded-md p-2 border border-blue-400/20",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-1",
                            children: [
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Et.cube4,
                                  "/\u221E POKO"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400 text-xs",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Math.floor(Et.cube4 / (1 / 0) * 100),
                                  "%"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "w-full h-1 bg-[#1E293B] rounded-full overflow-hidden mb-1.5",
                            children: jsxRuntimeExports.jsx("div", {
                              className: "h-full bg-blue-400 transition-all duration-500",
                              style: {
                                width: "100%"
                              }
                            })
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center",
                            children: jsxRuntimeExports.jsx("button", {
                              onClick: () => jt("cube4"),
                              disabled: Et.cube4 <= 0,
                              className: `px-3 py-0.5 rounded text-xs
                                ${Et.cube4 <= 0 ? "bg-blue-400/20 text-blue-400/40 cursor-not-allowed" : "bg-blue-400/20 text-blue-400 hover:bg-blue-400/30"}`,
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "COLLECT"
                            })
                          })
                        ]
                      })
                    ]
                  })
                ]
              })
            })
          }),
          St && jsxRuntimeExports.jsx("div", {
            className: "fixed inset-0 bg-black/50 flex items-center justify-center z-[100] px-4",
            children: jsxRuntimeExports.jsxs("div", {
              className: "bg-[#1E293B] rounded-lg p-6 max-w-md w-full border border-blue-400/20 backdrop-blur-sm",
              children: [
                jsxRuntimeExports.jsxs("div", {
                  className: "flex justify-between items-center mb-4",
                  children: [
                    jsxRuntimeExports.jsx("h3", {
                      className: "text-xl font-mono text-white",
                      children: "About POKO"
                    }),
                    jsxRuntimeExports.jsx("button", {
                      onClick: () => $t(false),
                      className: "text-blue-400 hover:text-blue-300",
                      children: "\xD7"
                    })
                  ]
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "space-y-4 mb-6",
                  children: [
                    jsxRuntimeExports.jsx("p", {
                      className: "text-blue-400/70 font-mono text-sm",
                      children: "Poko is simple: the more POKO points you have, the more respect and rewards from Poko you receive."
                    }),
                    jsxRuntimeExports.jsx("p", {
                      className: "text-blue-400/70 font-mono text-sm",
                      children: "You can get POKO via quests, mining nodes, raids, mentioning Poko in chats across Telegram, and using Poko reactions around Telegram"
                    })
                  ]
                }),
                jsxRuntimeExports.jsx("div", {
                  className: "flex justify-center",
                  children: jsxRuntimeExports.jsx("button", {
                    onClick: () => $t(false),
                    className: "px-6 py-2 bg-blue-400/20 text-blue-400 rounded-md font-mono text-sm hover:bg-blue-400/30",
                    children: "I understand"
                  })
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "flex items-center justify-center mt-4 text-blue-400/50 text-xs font-mono",
                  children: [
                    jsxRuntimeExports.jsx("span", {
                      className: "mr-2",
                      children: "\u{1F441}"
                    }),
                    "Poko is watching"
                  ]
                })
              ]
            })
          }),
          Pt && jsxRuntimeExports.jsx("div", {
            className: "collected-popup",
            children: jsxRuntimeExports.jsxs("div", {
              className: "popup-title",
              children: [
                "You've collected ",
                kt,
                " POKO!"
              ]
            })
          }),
          jsxRuntimeExports.jsx("div", {
            className: `fixed bottom-0 left-0 right-0 bg-[#0A0F1C] z-50 ${St ? "pointer-events-none blur-sm" : ""}`,
            children: jsxRuntimeExports.jsx(Navigation, {})
          }),
          $ && jsxRuntimeExports.jsx("div", {
            className: "fixed top-4 right-4 bg-blue-500/80 text-white px-4 py-2 rounded-lg z-50",
            style: {
              fontFamily: "Polonium"
            },
            children: $
          })
        ]
      });
    }
    const PRICES = {
      SLOTS: {
        stars: 149,
        ton: 0.9
      },
      CUBES: {
        cube1: {
          stars: 50,
          ton: 0.2
        },
        cube2: {
          stars: 97,
          ton: 0.4
        },
        cube3: {
          stars: 497,
          ton: 1.6
        },
        cube4: {
          stars: 5e3,
          ton: 16
        }
      }
    }, CUBE_PRICES = {
      cube1: PRICES.CUBES.cube1.stars,
      cube2: PRICES.CUBES.cube2.stars,
      cube3: PRICES.CUBES.cube3.stars,
      cube4: PRICES.CUBES.cube4.stars
    }, CUBE_INFO = {
      cube1: {
        name: "Superior",
        dailyRate: 750,
        capacity: 3750
      },
      cube2: {
        name: "Enhanced",
        dailyRate: 2e3,
        capacity: 22e3
      },
      cube3: {
        name: "Excellent",
        dailyRate: 12e3,
        capacity: 228e3
      },
      cube4: {
        name: "Prime",
        dailyRate: 16e4,
        capacity: 1 / 0
      }
    }, useTelegramCubes = () => ({
      purchaseCube: async (_) => {
        try {
          const $ = window.Telegram.WebApp.initDataUnsafe.user.id, j = await fetch(`/create-cube-invoice?telegramId=${$}&cubeType=${_}`), rt = await j.json();
          if (!j.ok) throw new Error(rt.error || "Failed to create invoice");
          if (rt.slug) return new Promise((et, st) => {
            window.Telegram.WebApp.openInvoice(rt.slug, {
              callback: async (pt) => {
                if (pt === "paid") try {
                  et({
                    success: true,
                    cubeType: _
                  });
                } catch {
                  st(new Error("Failed to update user data"));
                }
                else pt === "cancelled" ? et({
                  success: false,
                  reason: "cancelled"
                }) : pt === "failed" && et({
                  success: false,
                  reason: "failed"
                });
              }
            });
          });
        } catch ($) {
          throw console.error("Error purchasing cube:", $), new Error("Failed to purchase cube");
        }
      }
    });
    function getDefaultExportFromCjs(d) {
      return d && d.__esModule && Object.prototype.hasOwnProperty.call(d, "default") ? d.default : d;
    }
    var browser$f = {
      exports: {}
    }, process = browser$f.exports = {}, cachedSetTimeout, cachedClearTimeout;
    function defaultSetTimout() {
      throw new Error("setTimeout has not been defined");
    }
    function defaultClearTimeout() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        typeof setTimeout == "function" ? cachedSetTimeout = setTimeout : cachedSetTimeout = defaultSetTimout;
      } catch {
        cachedSetTimeout = defaultSetTimout;
      }
      try {
        typeof clearTimeout == "function" ? cachedClearTimeout = clearTimeout : cachedClearTimeout = defaultClearTimeout;
      } catch {
        cachedClearTimeout = defaultClearTimeout;
      }
    })();
    function runTimeout(d) {
      if (cachedSetTimeout === setTimeout) return setTimeout(d, 0);
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) return cachedSetTimeout = setTimeout, setTimeout(d, 0);
      try {
        return cachedSetTimeout(d, 0);
      } catch {
        try {
          return cachedSetTimeout.call(null, d, 0);
        } catch {
          return cachedSetTimeout.call(this, d, 0);
        }
      }
    }
    function runClearTimeout(d) {
      if (cachedClearTimeout === clearTimeout) return clearTimeout(d);
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) return cachedClearTimeout = clearTimeout, clearTimeout(d);
      try {
        return cachedClearTimeout(d);
      } catch {
        try {
          return cachedClearTimeout.call(null, d);
        } catch {
          return cachedClearTimeout.call(this, d);
        }
      }
    }
    var queue$1 = [], draining = false, currentQueue, queueIndex = -1;
    function cleanUpNextTick() {
      !draining || !currentQueue || (draining = false, currentQueue.length ? queue$1 = currentQueue.concat(queue$1) : queueIndex = -1, queue$1.length && drainQueue());
    }
    function drainQueue() {
      if (!draining) {
        var d = runTimeout(cleanUpNextTick);
        draining = true;
        for (var _ = queue$1.length; _; ) {
          for (currentQueue = queue$1, queue$1 = []; ++queueIndex < _; ) currentQueue && currentQueue[queueIndex].run();
          queueIndex = -1, _ = queue$1.length;
        }
        currentQueue = null, draining = false, runClearTimeout(d);
      }
    }
    process.nextTick = function(d) {
      var _ = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var $ = 1; $ < arguments.length; $++) _[$ - 1] = arguments[$];
      queue$1.push(new Item(d, _)), queue$1.length === 1 && !draining && runTimeout(drainQueue);
    };
    function Item(d, _) {
      this.fun = d, this.array = _;
    }
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    process.title = "browser";
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = "";
    process.versions = {};
    function noop$2() {
    }
    process.on = noop$2;
    process.addListener = noop$2;
    process.once = noop$2;
    process.off = noop$2;
    process.removeListener = noop$2;
    process.removeAllListeners = noop$2;
    process.emit = noop$2;
    process.prependListener = noop$2;
    process.prependOnceListener = noop$2;
    process.listeners = function(d) {
      return [];
    };
    process.binding = function(d) {
      throw new Error("process.binding is not supported");
    };
    process.cwd = function() {
      return "/";
    };
    process.chdir = function(d) {
      throw new Error("process.chdir is not supported");
    };
    process.umask = function() {
      return 0;
    };
    var browserExports = browser$f.exports;
    const process$1 = getDefaultExportFromCjs(browserExports);
    var buffer$1 = {}, base64Js = {};
    base64Js.byteLength = byteLength;
    base64Js.toByteArray = toByteArray;
    base64Js.fromByteArray = fromByteArray;
    var lookup$1 = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var i$1 = 0, len = code.length; i$1 < len; ++i$1) lookup$1[i$1] = code[i$1], revLookup[code.charCodeAt(i$1)] = i$1;
    revLookup[45] = 62;
    revLookup[95] = 63;
    function getLens(d) {
      var _ = d.length;
      if (_ % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var $ = d.indexOf("=");
      $ === -1 && ($ = _);
      var j = $ === _ ? 0 : 4 - $ % 4;
      return [
        $,
        j
      ];
    }
    function byteLength(d) {
      var _ = getLens(d), $ = _[0], j = _[1];
      return ($ + j) * 3 / 4 - j;
    }
    function _byteLength(d, _, $) {
      return (_ + $) * 3 / 4 - $;
    }
    function toByteArray(d) {
      var _, $ = getLens(d), j = $[0], rt = $[1], et = new Arr(_byteLength(d, j, rt)), st = 0, pt = rt > 0 ? j - 4 : j, Et;
      for (Et = 0; Et < pt; Et += 4) _ = revLookup[d.charCodeAt(Et)] << 18 | revLookup[d.charCodeAt(Et + 1)] << 12 | revLookup[d.charCodeAt(Et + 2)] << 6 | revLookup[d.charCodeAt(Et + 3)], et[st++] = _ >> 16 & 255, et[st++] = _ >> 8 & 255, et[st++] = _ & 255;
      return rt === 2 && (_ = revLookup[d.charCodeAt(Et)] << 2 | revLookup[d.charCodeAt(Et + 1)] >> 4, et[st++] = _ & 255), rt === 1 && (_ = revLookup[d.charCodeAt(Et)] << 10 | revLookup[d.charCodeAt(Et + 1)] << 4 | revLookup[d.charCodeAt(Et + 2)] >> 2, et[st++] = _ >> 8 & 255, et[st++] = _ & 255), et;
    }
    function tripletToBase64(d) {
      return lookup$1[d >> 18 & 63] + lookup$1[d >> 12 & 63] + lookup$1[d >> 6 & 63] + lookup$1[d & 63];
    }
    function encodeChunk(d, _, $) {
      for (var j, rt = [], et = _; et < $; et += 3) j = (d[et] << 16 & 16711680) + (d[et + 1] << 8 & 65280) + (d[et + 2] & 255), rt.push(tripletToBase64(j));
      return rt.join("");
    }
    function fromByteArray(d) {
      for (var _, $ = d.length, j = $ % 3, rt = [], et = 16383, st = 0, pt = $ - j; st < pt; st += et) rt.push(encodeChunk(d, st, st + et > pt ? pt : st + et));
      return j === 1 ? (_ = d[$ - 1], rt.push(lookup$1[_ >> 2] + lookup$1[_ << 4 & 63] + "==")) : j === 2 && (_ = (d[$ - 2] << 8) + d[$ - 1], rt.push(lookup$1[_ >> 10] + lookup$1[_ >> 4 & 63] + lookup$1[_ << 2 & 63] + "=")), rt.join("");
    }
    var ieee754 = {};
    ieee754.read = function(d, _, $, j, rt) {
      var et, st, pt = rt * 8 - j - 1, Et = (1 << pt) - 1, Bt = Et >> 1, St = -7, $t = $ ? rt - 1 : 0, kt = $ ? -1 : 1, Tt = d[_ + $t];
      for ($t += kt, et = Tt & (1 << -St) - 1, Tt >>= -St, St += pt; St > 0; et = et * 256 + d[_ + $t], $t += kt, St -= 8) ;
      for (st = et & (1 << -St) - 1, et >>= -St, St += j; St > 0; st = st * 256 + d[_ + $t], $t += kt, St -= 8) ;
      if (et === 0) et = 1 - Bt;
      else {
        if (et === Et) return st ? NaN : (Tt ? -1 : 1) * (1 / 0);
        st = st + Math.pow(2, j), et = et - Bt;
      }
      return (Tt ? -1 : 1) * st * Math.pow(2, et - j);
    };
    ieee754.write = function(d, _, $, j, rt, et) {
      var st, pt, Et, Bt = et * 8 - rt - 1, St = (1 << Bt) - 1, $t = St >> 1, kt = rt === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, Tt = j ? 0 : et - 1, Pt = j ? 1 : -1, It = _ < 0 || _ === 0 && 1 / _ < 0 ? 1 : 0;
      for (_ = Math.abs(_), isNaN(_) || _ === 1 / 0 ? (pt = isNaN(_) ? 1 : 0, st = St) : (st = Math.floor(Math.log(_) / Math.LN2), _ * (Et = Math.pow(2, -st)) < 1 && (st--, Et *= 2), st + $t >= 1 ? _ += kt / Et : _ += kt * Math.pow(2, 1 - $t), _ * Et >= 2 && (st++, Et /= 2), st + $t >= St ? (pt = 0, st = St) : st + $t >= 1 ? (pt = (_ * Et - 1) * Math.pow(2, rt), st = st + $t) : (pt = _ * Math.pow(2, $t - 1) * Math.pow(2, rt), st = 0)); rt >= 8; d[$ + Tt] = pt & 255, Tt += Pt, pt /= 256, rt -= 8) ;
      for (st = st << rt | pt, Bt += rt; Bt > 0; d[$ + Tt] = st & 255, Tt += Pt, st /= 256, Bt -= 8) ;
      d[$ + Tt - Pt] |= It * 128;
    };
    (function(d) {
      const _ = base64Js, $ = ieee754, j = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      d.Buffer = St, d.SlowBuffer = Zt, d.INSPECT_MAX_BYTES = 50;
      const rt = 2147483647;
      d.kMaxLength = rt;
      const { Uint8Array: et, ArrayBuffer: st, SharedArrayBuffer: pt } = globalThis;
      St.TYPED_ARRAY_SUPPORT = Et(), !St.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
      function Et() {
        try {
          const zt = new et(1), qt = {
            foo: function() {
              return 42;
            }
          };
          return Object.setPrototypeOf(qt, et.prototype), Object.setPrototypeOf(zt, qt), zt.foo() === 42;
        } catch {
          return false;
        }
      }
      Object.defineProperty(St.prototype, "parent", {
        enumerable: true,
        get: function() {
          if (St.isBuffer(this)) return this.buffer;
        }
      }), Object.defineProperty(St.prototype, "offset", {
        enumerable: true,
        get: function() {
          if (St.isBuffer(this)) return this.byteOffset;
        }
      });
      function Bt(zt) {
        if (zt > rt) throw new RangeError('The value "' + zt + '" is invalid for option "size"');
        const qt = new et(zt);
        return Object.setPrototypeOf(qt, St.prototype), qt;
      }
      function St(zt, qt, Vt) {
        if (typeof zt == "number") {
          if (typeof qt == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
          return Pt(zt);
        }
        return $t(zt, qt, Vt);
      }
      St.poolSize = 8192;
      function $t(zt, qt, Vt) {
        if (typeof zt == "string") return It(zt, qt);
        if (st.isView(zt)) return Dt(zt);
        if (zt == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof zt);
        if (yr(zt, st) || zt && yr(zt.buffer, st) || typeof pt < "u" && (yr(zt, pt) || zt && yr(zt.buffer, pt))) return Ot(zt, qt, Vt);
        if (typeof zt == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
        const Qt = zt.valueOf && zt.valueOf();
        if (Qt != null && Qt !== zt) return St.from(Qt, qt, Vt);
        const hr = Ft(zt);
        if (hr) return hr;
        if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof zt[Symbol.toPrimitive] == "function") return St.from(zt[Symbol.toPrimitive]("string"), qt, Vt);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof zt);
      }
      St.from = function(zt, qt, Vt) {
        return $t(zt, qt, Vt);
      }, Object.setPrototypeOf(St.prototype, et.prototype), Object.setPrototypeOf(St, et);
      function kt(zt) {
        if (typeof zt != "number") throw new TypeError('"size" argument must be of type number');
        if (zt < 0) throw new RangeError('The value "' + zt + '" is invalid for option "size"');
      }
      function Tt(zt, qt, Vt) {
        return kt(zt), zt <= 0 ? Bt(zt) : qt !== void 0 ? typeof Vt == "string" ? Bt(zt).fill(qt, Vt) : Bt(zt).fill(qt) : Bt(zt);
      }
      St.alloc = function(zt, qt, Vt) {
        return Tt(zt, qt, Vt);
      };
      function Pt(zt) {
        return kt(zt), Bt(zt < 0 ? 0 : Lt(zt) | 0);
      }
      St.allocUnsafe = function(zt) {
        return Pt(zt);
      }, St.allocUnsafeSlow = function(zt) {
        return Pt(zt);
      };
      function It(zt, qt) {
        if ((typeof qt != "string" || qt === "") && (qt = "utf8"), !St.isEncoding(qt)) throw new TypeError("Unknown encoding: " + qt);
        const Vt = Kt(zt, qt) | 0;
        let Qt = Bt(Vt);
        const hr = Qt.write(zt, qt);
        return hr !== Vt && (Qt = Qt.slice(0, hr)), Qt;
      }
      function jt(zt) {
        const qt = zt.length < 0 ? 0 : Lt(zt.length) | 0, Vt = Bt(qt);
        for (let Qt = 0; Qt < qt; Qt += 1) Vt[Qt] = zt[Qt] & 255;
        return Vt;
      }
      function Dt(zt) {
        if (yr(zt, et)) {
          const qt = new et(zt);
          return Ot(qt.buffer, qt.byteOffset, qt.byteLength);
        }
        return jt(zt);
      }
      function Ot(zt, qt, Vt) {
        if (qt < 0 || zt.byteLength < qt) throw new RangeError('"offset" is outside of buffer bounds');
        if (zt.byteLength < qt + (Vt || 0)) throw new RangeError('"length" is outside of buffer bounds');
        let Qt;
        return qt === void 0 && Vt === void 0 ? Qt = new et(zt) : Vt === void 0 ? Qt = new et(zt, qt) : Qt = new et(zt, qt, Vt), Object.setPrototypeOf(Qt, St.prototype), Qt;
      }
      function Ft(zt) {
        if (St.isBuffer(zt)) {
          const qt = Lt(zt.length) | 0, Vt = Bt(qt);
          return Vt.length === 0 || zt.copy(Vt, 0, 0, qt), Vt;
        }
        if (zt.length !== void 0) return typeof zt.length != "number" || fr(zt.length) ? Bt(0) : jt(zt);
        if (zt.type === "Buffer" && Array.isArray(zt.data)) return jt(zt.data);
      }
      function Lt(zt) {
        if (zt >= rt) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + rt.toString(16) + " bytes");
        return zt | 0;
      }
      function Zt(zt) {
        return +zt != zt && (zt = 0), St.alloc(+zt);
      }
      St.isBuffer = function(qt) {
        return qt != null && qt._isBuffer === true && qt !== St.prototype;
      }, St.compare = function(qt, Vt) {
        if (yr(qt, et) && (qt = St.from(qt, qt.offset, qt.byteLength)), yr(Vt, et) && (Vt = St.from(Vt, Vt.offset, Vt.byteLength)), !St.isBuffer(qt) || !St.isBuffer(Vt)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (qt === Vt) return 0;
        let Qt = qt.length, hr = Vt.length;
        for (let br = 0, pr = Math.min(Qt, hr); br < pr; ++br) if (qt[br] !== Vt[br]) {
          Qt = qt[br], hr = Vt[br];
          break;
        }
        return Qt < hr ? -1 : hr < Qt ? 1 : 0;
      }, St.isEncoding = function(qt) {
        switch (String(qt).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, St.concat = function(qt, Vt) {
        if (!Array.isArray(qt)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (qt.length === 0) return St.alloc(0);
        let Qt;
        if (Vt === void 0) for (Vt = 0, Qt = 0; Qt < qt.length; ++Qt) Vt += qt[Qt].length;
        const hr = St.allocUnsafe(Vt);
        let br = 0;
        for (Qt = 0; Qt < qt.length; ++Qt) {
          let pr = qt[Qt];
          if (yr(pr, et)) br + pr.length > hr.length ? (St.isBuffer(pr) || (pr = St.from(pr)), pr.copy(hr, br)) : et.prototype.set.call(hr, pr, br);
          else if (St.isBuffer(pr)) pr.copy(hr, br);
          else throw new TypeError('"list" argument must be an Array of Buffers');
          br += pr.length;
        }
        return hr;
      };
      function Kt(zt, qt) {
        if (St.isBuffer(zt)) return zt.length;
        if (st.isView(zt) || yr(zt, st)) return zt.byteLength;
        if (typeof zt != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof zt);
        const Vt = zt.length, Qt = arguments.length > 2 && arguments[2] === true;
        if (!Qt && Vt === 0) return 0;
        let hr = false;
        for (; ; ) switch (qt) {
          case "ascii":
          case "latin1":
          case "binary":
            return Vt;
          case "utf8":
          case "utf-8":
            return Kr(zt).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Vt * 2;
          case "hex":
            return Vt >>> 1;
          case "base64":
            return Gr(zt).length;
          default:
            if (hr) return Qt ? -1 : Kr(zt).length;
            qt = ("" + qt).toLowerCase(), hr = true;
        }
      }
      St.byteLength = Kt;
      function ar(zt, qt, Vt) {
        let Qt = false;
        if ((qt === void 0 || qt < 0) && (qt = 0), qt > this.length || ((Vt === void 0 || Vt > this.length) && (Vt = this.length), Vt <= 0) || (Vt >>>= 0, qt >>>= 0, Vt <= qt)) return "";
        for (zt || (zt = "utf8"); ; ) switch (zt) {
          case "hex":
            return Rt(this, qt, Vt);
          case "utf8":
          case "utf-8":
            return Mt(this, qt, Vt);
          case "ascii":
            return ot(this, qt, Vt);
          case "latin1":
          case "binary":
            return Ct(this, qt, Vt);
          case "base64":
            return ct(this, qt, Vt);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Nt(this, qt, Vt);
          default:
            if (Qt) throw new TypeError("Unknown encoding: " + zt);
            zt = (zt + "").toLowerCase(), Qt = true;
        }
      }
      St.prototype._isBuffer = true;
      function sr(zt, qt, Vt) {
        const Qt = zt[qt];
        zt[qt] = zt[Vt], zt[Vt] = Qt;
      }
      St.prototype.swap16 = function() {
        const qt = this.length;
        if (qt % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (let Vt = 0; Vt < qt; Vt += 2) sr(this, Vt, Vt + 1);
        return this;
      }, St.prototype.swap32 = function() {
        const qt = this.length;
        if (qt % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (let Vt = 0; Vt < qt; Vt += 4) sr(this, Vt, Vt + 3), sr(this, Vt + 1, Vt + 2);
        return this;
      }, St.prototype.swap64 = function() {
        const qt = this.length;
        if (qt % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (let Vt = 0; Vt < qt; Vt += 8) sr(this, Vt, Vt + 7), sr(this, Vt + 1, Vt + 6), sr(this, Vt + 2, Vt + 5), sr(this, Vt + 3, Vt + 4);
        return this;
      }, St.prototype.toString = function() {
        const qt = this.length;
        return qt === 0 ? "" : arguments.length === 0 ? Mt(this, 0, qt) : ar.apply(this, arguments);
      }, St.prototype.toLocaleString = St.prototype.toString, St.prototype.equals = function(qt) {
        if (!St.isBuffer(qt)) throw new TypeError("Argument must be a Buffer");
        return this === qt ? true : St.compare(this, qt) === 0;
      }, St.prototype.inspect = function() {
        let qt = "";
        const Vt = d.INSPECT_MAX_BYTES;
        return qt = this.toString("hex", 0, Vt).replace(/(.{2})/g, "$1 ").trim(), this.length > Vt && (qt += " ... "), "<Buffer " + qt + ">";
      }, j && (St.prototype[j] = St.prototype.inspect), St.prototype.compare = function(qt, Vt, Qt, hr, br) {
        if (yr(qt, et) && (qt = St.from(qt, qt.offset, qt.byteLength)), !St.isBuffer(qt)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof qt);
        if (Vt === void 0 && (Vt = 0), Qt === void 0 && (Qt = qt ? qt.length : 0), hr === void 0 && (hr = 0), br === void 0 && (br = this.length), Vt < 0 || Qt > qt.length || hr < 0 || br > this.length) throw new RangeError("out of range index");
        if (hr >= br && Vt >= Qt) return 0;
        if (hr >= br) return -1;
        if (Vt >= Qt) return 1;
        if (Vt >>>= 0, Qt >>>= 0, hr >>>= 0, br >>>= 0, this === qt) return 0;
        let pr = br - hr, Rr = Qt - Vt;
        const qr = Math.min(pr, Rr), xr = this.slice(hr, br), Fr = qt.slice(Vt, Qt);
        for (let zr = 0; zr < qr; ++zr) if (xr[zr] !== Fr[zr]) {
          pr = xr[zr], Rr = Fr[zr];
          break;
        }
        return pr < Rr ? -1 : Rr < pr ? 1 : 0;
      };
      function er(zt, qt, Vt, Qt, hr) {
        if (zt.length === 0) return -1;
        if (typeof Vt == "string" ? (Qt = Vt, Vt = 0) : Vt > 2147483647 ? Vt = 2147483647 : Vt < -2147483648 && (Vt = -2147483648), Vt = +Vt, fr(Vt) && (Vt = hr ? 0 : zt.length - 1), Vt < 0 && (Vt = zt.length + Vt), Vt >= zt.length) {
          if (hr) return -1;
          Vt = zt.length - 1;
        } else if (Vt < 0) if (hr) Vt = 0;
        else return -1;
        if (typeof qt == "string" && (qt = St.from(qt, Qt)), St.isBuffer(qt)) return qt.length === 0 ? -1 : Ut(zt, qt, Vt, Qt, hr);
        if (typeof qt == "number") return qt = qt & 255, typeof et.prototype.indexOf == "function" ? hr ? et.prototype.indexOf.call(zt, qt, Vt) : et.prototype.lastIndexOf.call(zt, qt, Vt) : Ut(zt, [
          qt
        ], Vt, Qt, hr);
        throw new TypeError("val must be string, number or Buffer");
      }
      function Ut(zt, qt, Vt, Qt, hr) {
        let br = 1, pr = zt.length, Rr = qt.length;
        if (Qt !== void 0 && (Qt = String(Qt).toLowerCase(), Qt === "ucs2" || Qt === "ucs-2" || Qt === "utf16le" || Qt === "utf-16le")) {
          if (zt.length < 2 || qt.length < 2) return -1;
          br = 2, pr /= 2, Rr /= 2, Vt /= 2;
        }
        function qr(Fr, zr) {
          return br === 1 ? Fr[zr] : Fr.readUInt16BE(zr * br);
        }
        let xr;
        if (hr) {
          let Fr = -1;
          for (xr = Vt; xr < pr; xr++) if (qr(zt, xr) === qr(qt, Fr === -1 ? 0 : xr - Fr)) {
            if (Fr === -1 && (Fr = xr), xr - Fr + 1 === Rr) return Fr * br;
          } else Fr !== -1 && (xr -= xr - Fr), Fr = -1;
        } else for (Vt + Rr > pr && (Vt = pr - Rr), xr = Vt; xr >= 0; xr--) {
          let Fr = true;
          for (let zr = 0; zr < Rr; zr++) if (qr(zt, xr + zr) !== qr(qt, zr)) {
            Fr = false;
            break;
          }
          if (Fr) return xr;
        }
        return -1;
      }
      St.prototype.includes = function(qt, Vt, Qt) {
        return this.indexOf(qt, Vt, Qt) !== -1;
      }, St.prototype.indexOf = function(qt, Vt, Qt) {
        return er(this, qt, Vt, Qt, true);
      }, St.prototype.lastIndexOf = function(qt, Vt, Qt) {
        return er(this, qt, Vt, Qt, false);
      };
      function xt(zt, qt, Vt, Qt) {
        Vt = Number(Vt) || 0;
        const hr = zt.length - Vt;
        Qt ? (Qt = Number(Qt), Qt > hr && (Qt = hr)) : Qt = hr;
        const br = qt.length;
        Qt > br / 2 && (Qt = br / 2);
        let pr;
        for (pr = 0; pr < Qt; ++pr) {
          const Rr = parseInt(qt.substr(pr * 2, 2), 16);
          if (fr(Rr)) return pr;
          zt[Vt + pr] = Rr;
        }
        return pr;
      }
      function tt(zt, qt, Vt, Qt) {
        return Tr(Kr(qt, zt.length - Vt), zt, Vt, Qt);
      }
      function nt(zt, qt, Vt, Qt) {
        return Tr(kr(qt), zt, Vt, Qt);
      }
      function it(zt, qt, Vt, Qt) {
        return Tr(Gr(qt), zt, Vt, Qt);
      }
      function at(zt, qt, Vt, Qt) {
        return Tr(Lr(qt, zt.length - Vt), zt, Vt, Qt);
      }
      St.prototype.write = function(qt, Vt, Qt, hr) {
        if (Vt === void 0) hr = "utf8", Qt = this.length, Vt = 0;
        else if (Qt === void 0 && typeof Vt == "string") hr = Vt, Qt = this.length, Vt = 0;
        else if (isFinite(Vt)) Vt = Vt >>> 0, isFinite(Qt) ? (Qt = Qt >>> 0, hr === void 0 && (hr = "utf8")) : (hr = Qt, Qt = void 0);
        else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        const br = this.length - Vt;
        if ((Qt === void 0 || Qt > br) && (Qt = br), qt.length > 0 && (Qt < 0 || Vt < 0) || Vt > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        hr || (hr = "utf8");
        let pr = false;
        for (; ; ) switch (hr) {
          case "hex":
            return xt(this, qt, Vt, Qt);
          case "utf8":
          case "utf-8":
            return tt(this, qt, Vt, Qt);
          case "ascii":
          case "latin1":
          case "binary":
            return nt(this, qt, Vt, Qt);
          case "base64":
            return it(this, qt, Vt, Qt);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return at(this, qt, Vt, Qt);
          default:
            if (pr) throw new TypeError("Unknown encoding: " + hr);
            hr = ("" + hr).toLowerCase(), pr = true;
        }
      }, St.prototype.toJSON = function() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function ct(zt, qt, Vt) {
        return qt === 0 && Vt === zt.length ? _.fromByteArray(zt) : _.fromByteArray(zt.slice(qt, Vt));
      }
      function Mt(zt, qt, Vt) {
        Vt = Math.min(zt.length, Vt);
        const Qt = [];
        let hr = qt;
        for (; hr < Vt; ) {
          const br = zt[hr];
          let pr = null, Rr = br > 239 ? 4 : br > 223 ? 3 : br > 191 ? 2 : 1;
          if (hr + Rr <= Vt) {
            let qr, xr, Fr, zr;
            switch (Rr) {
              case 1:
                br < 128 && (pr = br);
                break;
              case 2:
                qr = zt[hr + 1], (qr & 192) === 128 && (zr = (br & 31) << 6 | qr & 63, zr > 127 && (pr = zr));
                break;
              case 3:
                qr = zt[hr + 1], xr = zt[hr + 2], (qr & 192) === 128 && (xr & 192) === 128 && (zr = (br & 15) << 12 | (qr & 63) << 6 | xr & 63, zr > 2047 && (zr < 55296 || zr > 57343) && (pr = zr));
                break;
              case 4:
                qr = zt[hr + 1], xr = zt[hr + 2], Fr = zt[hr + 3], (qr & 192) === 128 && (xr & 192) === 128 && (Fr & 192) === 128 && (zr = (br & 15) << 18 | (qr & 63) << 12 | (xr & 63) << 6 | Fr & 63, zr > 65535 && zr < 1114112 && (pr = zr));
            }
          }
          pr === null ? (pr = 65533, Rr = 1) : pr > 65535 && (pr -= 65536, Qt.push(pr >>> 10 & 1023 | 55296), pr = 56320 | pr & 1023), Qt.push(pr), hr += Rr;
        }
        return ut(Qt);
      }
      const At = 4096;
      function ut(zt) {
        const qt = zt.length;
        if (qt <= At) return String.fromCharCode.apply(String, zt);
        let Vt = "", Qt = 0;
        for (; Qt < qt; ) Vt += String.fromCharCode.apply(String, zt.slice(Qt, Qt += At));
        return Vt;
      }
      function ot(zt, qt, Vt) {
        let Qt = "";
        Vt = Math.min(zt.length, Vt);
        for (let hr = qt; hr < Vt; ++hr) Qt += String.fromCharCode(zt[hr] & 127);
        return Qt;
      }
      function Ct(zt, qt, Vt) {
        let Qt = "";
        Vt = Math.min(zt.length, Vt);
        for (let hr = qt; hr < Vt; ++hr) Qt += String.fromCharCode(zt[hr]);
        return Qt;
      }
      function Rt(zt, qt, Vt) {
        const Qt = zt.length;
        (!qt || qt < 0) && (qt = 0), (!Vt || Vt < 0 || Vt > Qt) && (Vt = Qt);
        let hr = "";
        for (let br = qt; br < Vt; ++br) hr += dr[zt[br]];
        return hr;
      }
      function Nt(zt, qt, Vt) {
        const Qt = zt.slice(qt, Vt);
        let hr = "";
        for (let br = 0; br < Qt.length - 1; br += 2) hr += String.fromCharCode(Qt[br] + Qt[br + 1] * 256);
        return hr;
      }
      St.prototype.slice = function(qt, Vt) {
        const Qt = this.length;
        qt = ~~qt, Vt = Vt === void 0 ? Qt : ~~Vt, qt < 0 ? (qt += Qt, qt < 0 && (qt = 0)) : qt > Qt && (qt = Qt), Vt < 0 ? (Vt += Qt, Vt < 0 && (Vt = 0)) : Vt > Qt && (Vt = Qt), Vt < qt && (Vt = qt);
        const hr = this.subarray(qt, Vt);
        return Object.setPrototypeOf(hr, St.prototype), hr;
      };
      function Wt(zt, qt, Vt) {
        if (zt % 1 !== 0 || zt < 0) throw new RangeError("offset is not uint");
        if (zt + qt > Vt) throw new RangeError("Trying to access beyond buffer length");
      }
      St.prototype.readUintLE = St.prototype.readUIntLE = function(qt, Vt, Qt) {
        qt = qt >>> 0, Vt = Vt >>> 0, Qt || Wt(qt, Vt, this.length);
        let hr = this[qt], br = 1, pr = 0;
        for (; ++pr < Vt && (br *= 256); ) hr += this[qt + pr] * br;
        return hr;
      }, St.prototype.readUintBE = St.prototype.readUIntBE = function(qt, Vt, Qt) {
        qt = qt >>> 0, Vt = Vt >>> 0, Qt || Wt(qt, Vt, this.length);
        let hr = this[qt + --Vt], br = 1;
        for (; Vt > 0 && (br *= 256); ) hr += this[qt + --Vt] * br;
        return hr;
      }, St.prototype.readUint8 = St.prototype.readUInt8 = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 1, this.length), this[qt];
      }, St.prototype.readUint16LE = St.prototype.readUInt16LE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 2, this.length), this[qt] | this[qt + 1] << 8;
      }, St.prototype.readUint16BE = St.prototype.readUInt16BE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 2, this.length), this[qt] << 8 | this[qt + 1];
      }, St.prototype.readUint32LE = St.prototype.readUInt32LE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), (this[qt] | this[qt + 1] << 8 | this[qt + 2] << 16) + this[qt + 3] * 16777216;
      }, St.prototype.readUint32BE = St.prototype.readUInt32BE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), this[qt] * 16777216 + (this[qt + 1] << 16 | this[qt + 2] << 8 | this[qt + 3]);
      }, St.prototype.readBigUInt64LE = gr(function(qt) {
        qt = qt >>> 0, $r(qt, "offset");
        const Vt = this[qt], Qt = this[qt + 7];
        (Vt === void 0 || Qt === void 0) && Ur(qt, this.length - 8);
        const hr = Vt + this[++qt] * 2 ** 8 + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 24, br = this[++qt] + this[++qt] * 2 ** 8 + this[++qt] * 2 ** 16 + Qt * 2 ** 24;
        return BigInt(hr) + (BigInt(br) << BigInt(32));
      }), St.prototype.readBigUInt64BE = gr(function(qt) {
        qt = qt >>> 0, $r(qt, "offset");
        const Vt = this[qt], Qt = this[qt + 7];
        (Vt === void 0 || Qt === void 0) && Ur(qt, this.length - 8);
        const hr = Vt * 2 ** 24 + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 8 + this[++qt], br = this[++qt] * 2 ** 24 + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 8 + Qt;
        return (BigInt(hr) << BigInt(32)) + BigInt(br);
      }), St.prototype.readIntLE = function(qt, Vt, Qt) {
        qt = qt >>> 0, Vt = Vt >>> 0, Qt || Wt(qt, Vt, this.length);
        let hr = this[qt], br = 1, pr = 0;
        for (; ++pr < Vt && (br *= 256); ) hr += this[qt + pr] * br;
        return br *= 128, hr >= br && (hr -= Math.pow(2, 8 * Vt)), hr;
      }, St.prototype.readIntBE = function(qt, Vt, Qt) {
        qt = qt >>> 0, Vt = Vt >>> 0, Qt || Wt(qt, Vt, this.length);
        let hr = Vt, br = 1, pr = this[qt + --hr];
        for (; hr > 0 && (br *= 256); ) pr += this[qt + --hr] * br;
        return br *= 128, pr >= br && (pr -= Math.pow(2, 8 * Vt)), pr;
      }, St.prototype.readInt8 = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 1, this.length), this[qt] & 128 ? (255 - this[qt] + 1) * -1 : this[qt];
      }, St.prototype.readInt16LE = function(qt, Vt) {
        qt = qt >>> 0, Vt || Wt(qt, 2, this.length);
        const Qt = this[qt] | this[qt + 1] << 8;
        return Qt & 32768 ? Qt | 4294901760 : Qt;
      }, St.prototype.readInt16BE = function(qt, Vt) {
        qt = qt >>> 0, Vt || Wt(qt, 2, this.length);
        const Qt = this[qt + 1] | this[qt] << 8;
        return Qt & 32768 ? Qt | 4294901760 : Qt;
      }, St.prototype.readInt32LE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), this[qt] | this[qt + 1] << 8 | this[qt + 2] << 16 | this[qt + 3] << 24;
      }, St.prototype.readInt32BE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), this[qt] << 24 | this[qt + 1] << 16 | this[qt + 2] << 8 | this[qt + 3];
      }, St.prototype.readBigInt64LE = gr(function(qt) {
        qt = qt >>> 0, $r(qt, "offset");
        const Vt = this[qt], Qt = this[qt + 7];
        (Vt === void 0 || Qt === void 0) && Ur(qt, this.length - 8);
        const hr = this[qt + 4] + this[qt + 5] * 2 ** 8 + this[qt + 6] * 2 ** 16 + (Qt << 24);
        return (BigInt(hr) << BigInt(32)) + BigInt(Vt + this[++qt] * 2 ** 8 + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 24);
      }), St.prototype.readBigInt64BE = gr(function(qt) {
        qt = qt >>> 0, $r(qt, "offset");
        const Vt = this[qt], Qt = this[qt + 7];
        (Vt === void 0 || Qt === void 0) && Ur(qt, this.length - 8);
        const hr = (Vt << 24) + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 8 + this[++qt];
        return (BigInt(hr) << BigInt(32)) + BigInt(this[++qt] * 2 ** 24 + this[++qt] * 2 ** 16 + this[++qt] * 2 ** 8 + Qt);
      }), St.prototype.readFloatLE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), $.read(this, qt, true, 23, 4);
      }, St.prototype.readFloatBE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 4, this.length), $.read(this, qt, false, 23, 4);
      }, St.prototype.readDoubleLE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 8, this.length), $.read(this, qt, true, 52, 8);
      }, St.prototype.readDoubleBE = function(qt, Vt) {
        return qt = qt >>> 0, Vt || Wt(qt, 8, this.length), $.read(this, qt, false, 52, 8);
      };
      function Xt(zt, qt, Vt, Qt, hr, br) {
        if (!St.isBuffer(zt)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (qt > hr || qt < br) throw new RangeError('"value" argument is out of bounds');
        if (Vt + Qt > zt.length) throw new RangeError("Index out of range");
      }
      St.prototype.writeUintLE = St.prototype.writeUIntLE = function(qt, Vt, Qt, hr) {
        if (qt = +qt, Vt = Vt >>> 0, Qt = Qt >>> 0, !hr) {
          const Rr = Math.pow(2, 8 * Qt) - 1;
          Xt(this, qt, Vt, Qt, Rr, 0);
        }
        let br = 1, pr = 0;
        for (this[Vt] = qt & 255; ++pr < Qt && (br *= 256); ) this[Vt + pr] = qt / br & 255;
        return Vt + Qt;
      }, St.prototype.writeUintBE = St.prototype.writeUIntBE = function(qt, Vt, Qt, hr) {
        if (qt = +qt, Vt = Vt >>> 0, Qt = Qt >>> 0, !hr) {
          const Rr = Math.pow(2, 8 * Qt) - 1;
          Xt(this, qt, Vt, Qt, Rr, 0);
        }
        let br = Qt - 1, pr = 1;
        for (this[Vt + br] = qt & 255; --br >= 0 && (pr *= 256); ) this[Vt + br] = qt / pr & 255;
        return Vt + Qt;
      }, St.prototype.writeUint8 = St.prototype.writeUInt8 = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 1, 255, 0), this[Vt] = qt & 255, Vt + 1;
      }, St.prototype.writeUint16LE = St.prototype.writeUInt16LE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 2, 65535, 0), this[Vt] = qt & 255, this[Vt + 1] = qt >>> 8, Vt + 2;
      }, St.prototype.writeUint16BE = St.prototype.writeUInt16BE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 2, 65535, 0), this[Vt] = qt >>> 8, this[Vt + 1] = qt & 255, Vt + 2;
      }, St.prototype.writeUint32LE = St.prototype.writeUInt32LE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 4, 4294967295, 0), this[Vt + 3] = qt >>> 24, this[Vt + 2] = qt >>> 16, this[Vt + 1] = qt >>> 8, this[Vt] = qt & 255, Vt + 4;
      }, St.prototype.writeUint32BE = St.prototype.writeUInt32BE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 4, 4294967295, 0), this[Vt] = qt >>> 24, this[Vt + 1] = qt >>> 16, this[Vt + 2] = qt >>> 8, this[Vt + 3] = qt & 255, Vt + 4;
      };
      function rr(zt, qt, Vt, Qt, hr) {
        _r(qt, Qt, hr, zt, Vt, 7);
        let br = Number(qt & BigInt(4294967295));
        zt[Vt++] = br, br = br >> 8, zt[Vt++] = br, br = br >> 8, zt[Vt++] = br, br = br >> 8, zt[Vt++] = br;
        let pr = Number(qt >> BigInt(32) & BigInt(4294967295));
        return zt[Vt++] = pr, pr = pr >> 8, zt[Vt++] = pr, pr = pr >> 8, zt[Vt++] = pr, pr = pr >> 8, zt[Vt++] = pr, Vt;
      }
      function Gt(zt, qt, Vt, Qt, hr) {
        _r(qt, Qt, hr, zt, Vt, 7);
        let br = Number(qt & BigInt(4294967295));
        zt[Vt + 7] = br, br = br >> 8, zt[Vt + 6] = br, br = br >> 8, zt[Vt + 5] = br, br = br >> 8, zt[Vt + 4] = br;
        let pr = Number(qt >> BigInt(32) & BigInt(4294967295));
        return zt[Vt + 3] = pr, pr = pr >> 8, zt[Vt + 2] = pr, pr = pr >> 8, zt[Vt + 1] = pr, pr = pr >> 8, zt[Vt] = pr, Vt + 8;
      }
      St.prototype.writeBigUInt64LE = gr(function(qt, Vt = 0) {
        return rr(this, qt, Vt, BigInt(0), BigInt("0xffffffffffffffff"));
      }), St.prototype.writeBigUInt64BE = gr(function(qt, Vt = 0) {
        return Gt(this, qt, Vt, BigInt(0), BigInt("0xffffffffffffffff"));
      }), St.prototype.writeIntLE = function(qt, Vt, Qt, hr) {
        if (qt = +qt, Vt = Vt >>> 0, !hr) {
          const qr = Math.pow(2, 8 * Qt - 1);
          Xt(this, qt, Vt, Qt, qr - 1, -qr);
        }
        let br = 0, pr = 1, Rr = 0;
        for (this[Vt] = qt & 255; ++br < Qt && (pr *= 256); ) qt < 0 && Rr === 0 && this[Vt + br - 1] !== 0 && (Rr = 1), this[Vt + br] = (qt / pr >> 0) - Rr & 255;
        return Vt + Qt;
      }, St.prototype.writeIntBE = function(qt, Vt, Qt, hr) {
        if (qt = +qt, Vt = Vt >>> 0, !hr) {
          const qr = Math.pow(2, 8 * Qt - 1);
          Xt(this, qt, Vt, Qt, qr - 1, -qr);
        }
        let br = Qt - 1, pr = 1, Rr = 0;
        for (this[Vt + br] = qt & 255; --br >= 0 && (pr *= 256); ) qt < 0 && Rr === 0 && this[Vt + br + 1] !== 0 && (Rr = 1), this[Vt + br] = (qt / pr >> 0) - Rr & 255;
        return Vt + Qt;
      }, St.prototype.writeInt8 = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 1, 127, -128), qt < 0 && (qt = 255 + qt + 1), this[Vt] = qt & 255, Vt + 1;
      }, St.prototype.writeInt16LE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 2, 32767, -32768), this[Vt] = qt & 255, this[Vt + 1] = qt >>> 8, Vt + 2;
      }, St.prototype.writeInt16BE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 2, 32767, -32768), this[Vt] = qt >>> 8, this[Vt + 1] = qt & 255, Vt + 2;
      }, St.prototype.writeInt32LE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 4, 2147483647, -2147483648), this[Vt] = qt & 255, this[Vt + 1] = qt >>> 8, this[Vt + 2] = qt >>> 16, this[Vt + 3] = qt >>> 24, Vt + 4;
      }, St.prototype.writeInt32BE = function(qt, Vt, Qt) {
        return qt = +qt, Vt = Vt >>> 0, Qt || Xt(this, qt, Vt, 4, 2147483647, -2147483648), qt < 0 && (qt = 4294967295 + qt + 1), this[Vt] = qt >>> 24, this[Vt + 1] = qt >>> 16, this[Vt + 2] = qt >>> 8, this[Vt + 3] = qt & 255, Vt + 4;
      }, St.prototype.writeBigInt64LE = gr(function(qt, Vt = 0) {
        return rr(this, qt, Vt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      }), St.prototype.writeBigInt64BE = gr(function(qt, Vt = 0) {
        return Gt(this, qt, Vt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function Yt(zt, qt, Vt, Qt, hr, br) {
        if (Vt + Qt > zt.length) throw new RangeError("Index out of range");
        if (Vt < 0) throw new RangeError("Index out of range");
      }
      function tr(zt, qt, Vt, Qt, hr) {
        return qt = +qt, Vt = Vt >>> 0, hr || Yt(zt, qt, Vt, 4), $.write(zt, qt, Vt, Qt, 23, 4), Vt + 4;
      }
      St.prototype.writeFloatLE = function(qt, Vt, Qt) {
        return tr(this, qt, Vt, true, Qt);
      }, St.prototype.writeFloatBE = function(qt, Vt, Qt) {
        return tr(this, qt, Vt, false, Qt);
      };
      function cr(zt, qt, Vt, Qt, hr) {
        return qt = +qt, Vt = Vt >>> 0, hr || Yt(zt, qt, Vt, 8), $.write(zt, qt, Vt, Qt, 52, 8), Vt + 8;
      }
      St.prototype.writeDoubleLE = function(qt, Vt, Qt) {
        return cr(this, qt, Vt, true, Qt);
      }, St.prototype.writeDoubleBE = function(qt, Vt, Qt) {
        return cr(this, qt, Vt, false, Qt);
      }, St.prototype.copy = function(qt, Vt, Qt, hr) {
        if (!St.isBuffer(qt)) throw new TypeError("argument should be a Buffer");
        if (Qt || (Qt = 0), !hr && hr !== 0 && (hr = this.length), Vt >= qt.length && (Vt = qt.length), Vt || (Vt = 0), hr > 0 && hr < Qt && (hr = Qt), hr === Qt || qt.length === 0 || this.length === 0) return 0;
        if (Vt < 0) throw new RangeError("targetStart out of bounds");
        if (Qt < 0 || Qt >= this.length) throw new RangeError("Index out of range");
        if (hr < 0) throw new RangeError("sourceEnd out of bounds");
        hr > this.length && (hr = this.length), qt.length - Vt < hr - Qt && (hr = qt.length - Vt + Qt);
        const br = hr - Qt;
        return this === qt && typeof et.prototype.copyWithin == "function" ? this.copyWithin(Vt, Qt, hr) : et.prototype.set.call(qt, this.subarray(Qt, hr), Vt), br;
      }, St.prototype.fill = function(qt, Vt, Qt, hr) {
        if (typeof qt == "string") {
          if (typeof Vt == "string" ? (hr = Vt, Vt = 0, Qt = this.length) : typeof Qt == "string" && (hr = Qt, Qt = this.length), hr !== void 0 && typeof hr != "string") throw new TypeError("encoding must be a string");
          if (typeof hr == "string" && !St.isEncoding(hr)) throw new TypeError("Unknown encoding: " + hr);
          if (qt.length === 1) {
            const pr = qt.charCodeAt(0);
            (hr === "utf8" && pr < 128 || hr === "latin1") && (qt = pr);
          }
        } else typeof qt == "number" ? qt = qt & 255 : typeof qt == "boolean" && (qt = Number(qt));
        if (Vt < 0 || this.length < Vt || this.length < Qt) throw new RangeError("Out of range index");
        if (Qt <= Vt) return this;
        Vt = Vt >>> 0, Qt = Qt === void 0 ? this.length : Qt >>> 0, qt || (qt = 0);
        let br;
        if (typeof qt == "number") for (br = Vt; br < Qt; ++br) this[br] = qt;
        else {
          const pr = St.isBuffer(qt) ? qt : St.from(qt, hr), Rr = pr.length;
          if (Rr === 0) throw new TypeError('The value "' + qt + '" is invalid for argument "value"');
          for (br = 0; br < Qt - Vt; ++br) this[br + Vt] = pr[br % Rr];
        }
        return this;
      };
      const ir = {};
      function Jt(zt, qt, Vt) {
        ir[zt] = class extends Vt {
          constructor() {
            super(), Object.defineProperty(this, "message", {
              value: qt.apply(this, arguments),
              writable: true,
              configurable: true
            }), this.name = `${this.name} [${zt}]`, this.stack, delete this.name;
          }
          get code() {
            return zt;
          }
          set code(hr) {
            Object.defineProperty(this, "code", {
              configurable: true,
              enumerable: true,
              value: hr,
              writable: true
            });
          }
          toString() {
            return `${this.name} [${zt}]: ${this.message}`;
          }
        };
      }
      Jt("ERR_BUFFER_OUT_OF_BOUNDS", function(zt) {
        return zt ? `${zt} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
      }, RangeError), Jt("ERR_INVALID_ARG_TYPE", function(zt, qt) {
        return `The "${zt}" argument must be of type number. Received type ${typeof qt}`;
      }, TypeError), Jt("ERR_OUT_OF_RANGE", function(zt, qt, Vt) {
        let Qt = `The value of "${zt}" is out of range.`, hr = Vt;
        return Number.isInteger(Vt) && Math.abs(Vt) > 2 ** 32 ? hr = vr(String(Vt)) : typeof Vt == "bigint" && (hr = String(Vt), (Vt > BigInt(2) ** BigInt(32) || Vt < -(BigInt(2) ** BigInt(32))) && (hr = vr(hr)), hr += "n"), Qt += ` It must be ${qt}. Received ${hr}`, Qt;
      }, RangeError);
      function vr(zt) {
        let qt = "", Vt = zt.length;
        const Qt = zt[0] === "-" ? 1 : 0;
        for (; Vt >= Qt + 4; Vt -= 3) qt = `_${zt.slice(Vt - 3, Vt)}${qt}`;
        return `${zt.slice(0, Vt)}${qt}`;
      }
      function Br(zt, qt, Vt) {
        $r(qt, "offset"), (zt[qt] === void 0 || zt[qt + Vt] === void 0) && Ur(qt, zt.length - (Vt + 1));
      }
      function _r(zt, qt, Vt, Qt, hr, br) {
        if (zt > Vt || zt < qt) {
          const pr = typeof qt == "bigint" ? "n" : "";
          let Rr;
          throw qt === 0 || qt === BigInt(0) ? Rr = `>= 0${pr} and < 2${pr} ** ${(br + 1) * 8}${pr}` : Rr = `>= -(2${pr} ** ${(br + 1) * 8 - 1}${pr}) and < 2 ** ${(br + 1) * 8 - 1}${pr}`, new ir.ERR_OUT_OF_RANGE("value", Rr, zt);
        }
        Br(Qt, hr, br);
      }
      function $r(zt, qt) {
        if (typeof zt != "number") throw new ir.ERR_INVALID_ARG_TYPE(qt, "number", zt);
      }
      function Ur(zt, qt, Vt) {
        throw Math.floor(zt) !== zt ? ($r(zt, Vt), new ir.ERR_OUT_OF_RANGE("offset", "an integer", zt)) : qt < 0 ? new ir.ERR_BUFFER_OUT_OF_BOUNDS() : new ir.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${qt}`, zt);
      }
      const Sr = /[^+/0-9A-Za-z-_]/g;
      function Mr(zt) {
        if (zt = zt.split("=")[0], zt = zt.trim().replace(Sr, ""), zt.length < 2) return "";
        for (; zt.length % 4 !== 0; ) zt = zt + "=";
        return zt;
      }
      function Kr(zt, qt) {
        qt = qt || 1 / 0;
        let Vt;
        const Qt = zt.length;
        let hr = null;
        const br = [];
        for (let pr = 0; pr < Qt; ++pr) {
          if (Vt = zt.charCodeAt(pr), Vt > 55295 && Vt < 57344) {
            if (!hr) {
              if (Vt > 56319) {
                (qt -= 3) > -1 && br.push(239, 191, 189);
                continue;
              } else if (pr + 1 === Qt) {
                (qt -= 3) > -1 && br.push(239, 191, 189);
                continue;
              }
              hr = Vt;
              continue;
            }
            if (Vt < 56320) {
              (qt -= 3) > -1 && br.push(239, 191, 189), hr = Vt;
              continue;
            }
            Vt = (hr - 55296 << 10 | Vt - 56320) + 65536;
          } else hr && (qt -= 3) > -1 && br.push(239, 191, 189);
          if (hr = null, Vt < 128) {
            if ((qt -= 1) < 0) break;
            br.push(Vt);
          } else if (Vt < 2048) {
            if ((qt -= 2) < 0) break;
            br.push(Vt >> 6 | 192, Vt & 63 | 128);
          } else if (Vt < 65536) {
            if ((qt -= 3) < 0) break;
            br.push(Vt >> 12 | 224, Vt >> 6 & 63 | 128, Vt & 63 | 128);
          } else if (Vt < 1114112) {
            if ((qt -= 4) < 0) break;
            br.push(Vt >> 18 | 240, Vt >> 12 & 63 | 128, Vt >> 6 & 63 | 128, Vt & 63 | 128);
          } else throw new Error("Invalid code point");
        }
        return br;
      }
      function kr(zt) {
        const qt = [];
        for (let Vt = 0; Vt < zt.length; ++Vt) qt.push(zt.charCodeAt(Vt) & 255);
        return qt;
      }
      function Lr(zt, qt) {
        let Vt, Qt, hr;
        const br = [];
        for (let pr = 0; pr < zt.length && !((qt -= 2) < 0); ++pr) Vt = zt.charCodeAt(pr), Qt = Vt >> 8, hr = Vt % 256, br.push(hr), br.push(Qt);
        return br;
      }
      function Gr(zt) {
        return _.toByteArray(Mr(zt));
      }
      function Tr(zt, qt, Vt, Qt) {
        let hr;
        for (hr = 0; hr < Qt && !(hr + Vt >= qt.length || hr >= zt.length); ++hr) qt[hr + Vt] = zt[hr];
        return hr;
      }
      function yr(zt, qt) {
        return zt instanceof qt || zt != null && zt.constructor != null && zt.constructor.name != null && zt.constructor.name === qt.name;
      }
      function fr(zt) {
        return zt !== zt;
      }
      const dr = function() {
        const zt = "0123456789abcdef", qt = new Array(256);
        for (let Vt = 0; Vt < 16; ++Vt) {
          const Qt = Vt * 16;
          for (let hr = 0; hr < 16; ++hr) qt[Qt + hr] = zt[Vt] + zt[hr];
        }
        return qt;
      }();
      function gr(zt) {
        return typeof BigInt > "u" ? Er : zt;
      }
      function Er() {
        throw new Error("BigInt not supported");
      }
    })(buffer$1);
    const Buffer = buffer$1.Buffer, Blob$2 = buffer$1.Blob, BlobOptions = buffer$1.BlobOptions, Buffer$1 = buffer$1.Buffer, File = buffer$1.File, FileOptions = buffer$1.FileOptions, INSPECT_MAX_BYTES = buffer$1.INSPECT_MAX_BYTES, SlowBuffer = buffer$1.SlowBuffer, TranscodeEncoding = buffer$1.TranscodeEncoding, atob$1 = buffer$1.atob, btoa$1 = buffer$1.btoa, constants$3 = buffer$1.constants, isAscii = buffer$1.isAscii, isUtf8 = buffer$1.isUtf8, kMaxLength = buffer$1.kMaxLength, kStringMaxLength = buffer$1.kStringMaxLength, resolveObjectURL = buffer$1.resolveObjectURL, transcode = buffer$1.transcode, dist$4 = Object.freeze(Object.defineProperty({
      __proto__: null,
      Blob: Blob$2,
      BlobOptions,
      Buffer: Buffer$1,
      File,
      FileOptions,
      INSPECT_MAX_BYTES,
      SlowBuffer,
      TranscodeEncoding,
      atob: atob$1,
      btoa: btoa$1,
      constants: constants$3,
      default: Buffer,
      isAscii,
      isUtf8,
      kMaxLength,
      kStringMaxLength,
      resolveObjectURL,
      transcode
    }, Symbol.toStringTag, {
      value: "Module"
    }));
    var naclUtil = {
      exports: {}
    };
    (function(d) {
      (function(_, $) {
        d.exports ? d.exports = $() : (_.nacl || (_.nacl = {}), _.nacl.util = $());
      })(commonjsGlobal, function() {
        var _ = {};
        function $(j) {
          if (!/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(j)) throw new TypeError("invalid encoding");
        }
        return _.decodeUTF8 = function(j) {
          if (typeof j != "string") throw new TypeError("expected string");
          var rt, et = unescape(encodeURIComponent(j)), st = new Uint8Array(et.length);
          for (rt = 0; rt < et.length; rt++) st[rt] = et.charCodeAt(rt);
          return st;
        }, _.encodeUTF8 = function(j) {
          var rt, et = [];
          for (rt = 0; rt < j.length; rt++) et.push(String.fromCharCode(j[rt]));
          return decodeURIComponent(escape(et.join("")));
        }, typeof atob > "u" ? typeof Buffer.from < "u" ? (_.encodeBase64 = function(j) {
          return Buffer.from(j).toString("base64");
        }, _.decodeBase64 = function(j) {
          return $(j), new Uint8Array(Array.prototype.slice.call(Buffer.from(j, "base64"), 0));
        }) : (_.encodeBase64 = function(j) {
          return new Buffer(j).toString("base64");
        }, _.decodeBase64 = function(j) {
          return $(j), new Uint8Array(Array.prototype.slice.call(new Buffer(j, "base64"), 0));
        }) : (_.encodeBase64 = function(j) {
          var rt, et = [], st = j.length;
          for (rt = 0; rt < st; rt++) et.push(String.fromCharCode(j[rt]));
          return btoa(et.join(""));
        }, _.decodeBase64 = function(j) {
          $(j);
          var rt, et = atob(j), st = new Uint8Array(et.length);
          for (rt = 0; rt < et.length; rt++) st[rt] = et.charCodeAt(rt);
          return st;
        }), _;
      });
    })(naclUtil);
    var naclUtilExports = naclUtil.exports;
    const nacl$8 = getDefaultExportFromCjs$1(naclUtilExports);
    function commonjsRequire(d) {
      throw new Error('Could not dynamically require "' + d + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
    }
    var naclFast = {
      exports: {}
    }, cryptoBrowserify = {}, browser$e = {
      exports: {}
    }, safeBuffer$1 = {
      exports: {}
    };
    const require$$0$2 = getAugmentedNamespace(dist$4);
    var hasRequiredSafeBuffer$1;
    function requireSafeBuffer$1() {
      return hasRequiredSafeBuffer$1 || (hasRequiredSafeBuffer$1 = 1, function(d, _) {
        var $ = require$$0$2, j = $.Buffer;
        function rt(st, pt) {
          for (var Et in st) pt[Et] = st[Et];
        }
        j.from && j.alloc && j.allocUnsafe && j.allocUnsafeSlow ? d.exports = $ : (rt($, _), _.Buffer = et);
        function et(st, pt, Et) {
          return j(st, pt, Et);
        }
        et.prototype = Object.create(j.prototype), rt(j, et), et.from = function(st, pt, Et) {
          if (typeof st == "number") throw new TypeError("Argument must not be a number");
          return j(st, pt, Et);
        }, et.alloc = function(st, pt, Et) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          var Bt = j(st);
          return pt !== void 0 ? typeof Et == "string" ? Bt.fill(pt, Et) : Bt.fill(pt) : Bt.fill(0), Bt;
        }, et.allocUnsafe = function(st) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          return j(st);
        }, et.allocUnsafeSlow = function(st) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          return $.SlowBuffer(st);
        };
      }(safeBuffer$1, safeBuffer$1.exports)), safeBuffer$1.exports;
    }
    var hasRequiredBrowser$b;
    function requireBrowser$b() {
      if (hasRequiredBrowser$b) return browser$e.exports;
      hasRequiredBrowser$b = 1;
      var d = 65536, _ = 4294967295;
      function $() {
        throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
      }
      var j = requireSafeBuffer$1().Buffer, rt = commonjsGlobal.crypto || commonjsGlobal.msCrypto;
      rt && rt.getRandomValues ? browser$e.exports = et : browser$e.exports = $;
      function et(st, pt) {
        if (st > _) throw new RangeError("requested too many random bytes");
        var Et = j.allocUnsafe(st);
        if (st > 0) if (st > d) for (var Bt = 0; Bt < st; Bt += d) rt.getRandomValues(Et.slice(Bt, Bt + d));
        else rt.getRandomValues(Et);
        return typeof pt == "function" ? process$1.nextTick(function() {
          pt(null, Et);
        }) : Et;
      }
      return browser$e.exports;
    }
    var inherits_browser = {
      exports: {}
    }, hasRequiredInherits_browser;
    function requireInherits_browser() {
      return hasRequiredInherits_browser || (hasRequiredInherits_browser = 1, typeof Object.create == "function" ? inherits_browser.exports = function(_, $) {
        $ && (_.super_ = $, _.prototype = Object.create($.prototype, {
          constructor: {
            value: _,
            enumerable: false,
            writable: true,
            configurable: true
          }
        }));
      } : inherits_browser.exports = function(_, $) {
        if ($) {
          _.super_ = $;
          var j = function() {
          };
          j.prototype = $.prototype, _.prototype = new j(), _.prototype.constructor = _;
        }
      }), inherits_browser.exports;
    }
    var events = {
      exports: {}
    }, R = typeof Reflect == "object" ? Reflect : null, ReflectApply = R && typeof R.apply == "function" ? R.apply : function(_, $, j) {
      return Function.prototype.apply.call(_, $, j);
    }, ReflectOwnKeys;
    R && typeof R.ownKeys == "function" ? ReflectOwnKeys = R.ownKeys : Object.getOwnPropertySymbols ? ReflectOwnKeys = function(_) {
      return Object.getOwnPropertyNames(_).concat(Object.getOwnPropertySymbols(_));
    } : ReflectOwnKeys = function(_) {
      return Object.getOwnPropertyNames(_);
    };
    function ProcessEmitWarning(d) {
      console && console.warn && console.warn(d);
    }
    var NumberIsNaN = Number.isNaN || function(_) {
      return _ !== _;
    };
    function EventEmitter() {
      EventEmitter.init.call(this);
    }
    events.exports = EventEmitter;
    events.exports.once = once;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = void 0;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(d) {
      if (typeof d != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof d);
    }
    Object.defineProperty(EventEmitter, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(d) {
        if (typeof d != "number" || d < 0 || NumberIsNaN(d)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + d + ".");
        defaultMaxListeners = d;
      }
    });
    EventEmitter.init = function() {
      (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter.prototype.setMaxListeners = function(_) {
      if (typeof _ != "number" || _ < 0 || NumberIsNaN(_)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + _ + ".");
      return this._maxListeners = _, this;
    };
    function _getMaxListeners(d) {
      return d._maxListeners === void 0 ? EventEmitter.defaultMaxListeners : d._maxListeners;
    }
    EventEmitter.prototype.getMaxListeners = function() {
      return _getMaxListeners(this);
    };
    EventEmitter.prototype.emit = function(_) {
      for (var $ = [], j = 1; j < arguments.length; j++) $.push(arguments[j]);
      var rt = _ === "error", et = this._events;
      if (et !== void 0) rt = rt && et.error === void 0;
      else if (!rt) return false;
      if (rt) {
        var st;
        if ($.length > 0 && (st = $[0]), st instanceof Error) throw st;
        var pt = new Error("Unhandled error." + (st ? " (" + st.message + ")" : ""));
        throw pt.context = st, pt;
      }
      var Et = et[_];
      if (Et === void 0) return false;
      if (typeof Et == "function") ReflectApply(Et, this, $);
      else for (var Bt = Et.length, St = arrayClone(Et, Bt), j = 0; j < Bt; ++j) ReflectApply(St[j], this, $);
      return true;
    };
    function _addListener(d, _, $, j) {
      var rt, et, st;
      if (checkListener($), et = d._events, et === void 0 ? (et = d._events = /* @__PURE__ */ Object.create(null), d._eventsCount = 0) : (et.newListener !== void 0 && (d.emit("newListener", _, $.listener ? $.listener : $), et = d._events), st = et[_]), st === void 0) st = et[_] = $, ++d._eventsCount;
      else if (typeof st == "function" ? st = et[_] = j ? [
        $,
        st
      ] : [
        st,
        $
      ] : j ? st.unshift($) : st.push($), rt = _getMaxListeners(d), rt > 0 && st.length > rt && !st.warned) {
        st.warned = true;
        var pt = new Error("Possible EventEmitter memory leak detected. " + st.length + " " + String(_) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        pt.name = "MaxListenersExceededWarning", pt.emitter = d, pt.type = _, pt.count = st.length, ProcessEmitWarning(pt);
      }
      return d;
    }
    EventEmitter.prototype.addListener = function(_, $) {
      return _addListener(this, _, $, false);
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.prependListener = function(_, $) {
      return _addListener(this, _, $, true);
    };
    function onceWrapper() {
      if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function _onceWrap(d, _, $) {
      var j = {
        fired: false,
        wrapFn: void 0,
        target: d,
        type: _,
        listener: $
      }, rt = onceWrapper.bind(j);
      return rt.listener = $, j.wrapFn = rt, rt;
    }
    EventEmitter.prototype.once = function(_, $) {
      return checkListener($), this.on(_, _onceWrap(this, _, $)), this;
    };
    EventEmitter.prototype.prependOnceListener = function(_, $) {
      return checkListener($), this.prependListener(_, _onceWrap(this, _, $)), this;
    };
    EventEmitter.prototype.removeListener = function(_, $) {
      var j, rt, et, st, pt;
      if (checkListener($), rt = this._events, rt === void 0) return this;
      if (j = rt[_], j === void 0) return this;
      if (j === $ || j.listener === $) --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete rt[_], rt.removeListener && this.emit("removeListener", _, j.listener || $));
      else if (typeof j != "function") {
        for (et = -1, st = j.length - 1; st >= 0; st--) if (j[st] === $ || j[st].listener === $) {
          pt = j[st].listener, et = st;
          break;
        }
        if (et < 0) return this;
        et === 0 ? j.shift() : spliceOne(j, et), j.length === 1 && (rt[_] = j[0]), rt.removeListener !== void 0 && this.emit("removeListener", _, pt || $);
      }
      return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.removeAllListeners = function(_) {
      var $, j, rt;
      if (j = this._events, j === void 0) return this;
      if (j.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : j[_] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete j[_]), this;
      if (arguments.length === 0) {
        var et = Object.keys(j), st;
        for (rt = 0; rt < et.length; ++rt) st = et[rt], st !== "removeListener" && this.removeAllListeners(st);
        return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
      }
      if ($ = j[_], typeof $ == "function") this.removeListener(_, $);
      else if ($ !== void 0) for (rt = $.length - 1; rt >= 0; rt--) this.removeListener(_, $[rt]);
      return this;
    };
    function _listeners(d, _, $) {
      var j = d._events;
      if (j === void 0) return [];
      var rt = j[_];
      return rt === void 0 ? [] : typeof rt == "function" ? $ ? [
        rt.listener || rt
      ] : [
        rt
      ] : $ ? unwrapListeners(rt) : arrayClone(rt, rt.length);
    }
    EventEmitter.prototype.listeners = function(_) {
      return _listeners(this, _, true);
    };
    EventEmitter.prototype.rawListeners = function(_) {
      return _listeners(this, _, false);
    };
    EventEmitter.listenerCount = function(d, _) {
      return typeof d.listenerCount == "function" ? d.listenerCount(_) : listenerCount.call(d, _);
    };
    EventEmitter.prototype.listenerCount = listenerCount;
    function listenerCount(d) {
      var _ = this._events;
      if (_ !== void 0) {
        var $ = _[d];
        if (typeof $ == "function") return 1;
        if ($ !== void 0) return $.length;
      }
      return 0;
    }
    EventEmitter.prototype.eventNames = function() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(d, _) {
      for (var $ = new Array(_), j = 0; j < _; ++j) $[j] = d[j];
      return $;
    }
    function spliceOne(d, _) {
      for (; _ + 1 < d.length; _++) d[_] = d[_ + 1];
      d.pop();
    }
    function unwrapListeners(d) {
      for (var _ = new Array(d.length), $ = 0; $ < _.length; ++$) _[$] = d[$].listener || d[$];
      return _;
    }
    function once(d, _) {
      return new Promise(function($, j) {
        function rt(st) {
          d.removeListener(_, et), j(st);
        }
        function et() {
          typeof d.removeListener == "function" && d.removeListener("error", rt), $([].slice.call(arguments));
        }
        eventTargetAgnosticAddListener(d, _, et, {
          once: true
        }), _ !== "error" && addErrorHandlerIfEventEmitter(d, rt, {
          once: true
        });
      });
    }
    function addErrorHandlerIfEventEmitter(d, _, $) {
      typeof d.on == "function" && eventTargetAgnosticAddListener(d, "error", _, $);
    }
    function eventTargetAgnosticAddListener(d, _, $, j) {
      if (typeof d.on == "function") j.once ? d.once(_, $) : d.on(_, $);
      else if (typeof d.addEventListener == "function") d.addEventListener(_, function rt(et) {
        j.once && d.removeEventListener(_, rt), $(et);
      });
      else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof d);
    }
    var eventsExports = events.exports;
    const EventEmitter$1 = getDefaultExportFromCjs$1(eventsExports);
    var streamBrowser$1, hasRequiredStreamBrowser$1;
    function requireStreamBrowser$1() {
      return hasRequiredStreamBrowser$1 || (hasRequiredStreamBrowser$1 = 1, streamBrowser$1 = eventsExports.EventEmitter), streamBrowser$1;
    }
    var util$2 = {}, types$1 = {}, shams$1, hasRequiredShams$1;
    function requireShams$1() {
      return hasRequiredShams$1 || (hasRequiredShams$1 = 1, shams$1 = function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return false;
        if (typeof Symbol.iterator == "symbol") return true;
        var _ = {}, $ = Symbol("test"), j = Object($);
        if (typeof $ == "string" || Object.prototype.toString.call($) !== "[object Symbol]" || Object.prototype.toString.call(j) !== "[object Symbol]") return false;
        var rt = 42;
        _[$] = rt;
        for (var et in _) return false;
        if (typeof Object.keys == "function" && Object.keys(_).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(_).length !== 0) return false;
        var st = Object.getOwnPropertySymbols(_);
        if (st.length !== 1 || st[0] !== $ || !Object.prototype.propertyIsEnumerable.call(_, $)) return false;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
          var pt = Object.getOwnPropertyDescriptor(_, $);
          if (pt.value !== rt || pt.enumerable !== true) return false;
        }
        return true;
      }), shams$1;
    }
    var shams, hasRequiredShams;
    function requireShams() {
      if (hasRequiredShams) return shams;
      hasRequiredShams = 1;
      var d = requireShams$1();
      return shams = function() {
        return d() && !!Symbol.toStringTag;
      }, shams;
    }
    var esObjectAtoms, hasRequiredEsObjectAtoms;
    function requireEsObjectAtoms() {
      return hasRequiredEsObjectAtoms || (hasRequiredEsObjectAtoms = 1, esObjectAtoms = Object), esObjectAtoms;
    }
    var esErrors, hasRequiredEsErrors;
    function requireEsErrors() {
      return hasRequiredEsErrors || (hasRequiredEsErrors = 1, esErrors = Error), esErrors;
    }
    var _eval, hasRequired_eval;
    function require_eval() {
      return hasRequired_eval || (hasRequired_eval = 1, _eval = EvalError), _eval;
    }
    var range$2, hasRequiredRange$1;
    function requireRange$1() {
      return hasRequiredRange$1 || (hasRequiredRange$1 = 1, range$2 = RangeError), range$2;
    }
    var ref, hasRequiredRef;
    function requireRef() {
      return hasRequiredRef || (hasRequiredRef = 1, ref = ReferenceError), ref;
    }
    var syntax, hasRequiredSyntax;
    function requireSyntax() {
      return hasRequiredSyntax || (hasRequiredSyntax = 1, syntax = SyntaxError), syntax;
    }
    var type, hasRequiredType;
    function requireType() {
      return hasRequiredType || (hasRequiredType = 1, type = TypeError), type;
    }
    var uri, hasRequiredUri;
    function requireUri() {
      return hasRequiredUri || (hasRequiredUri = 1, uri = URIError), uri;
    }
    var abs, hasRequiredAbs;
    function requireAbs() {
      return hasRequiredAbs || (hasRequiredAbs = 1, abs = Math.abs), abs;
    }
    var floor, hasRequiredFloor;
    function requireFloor() {
      return hasRequiredFloor || (hasRequiredFloor = 1, floor = Math.floor), floor;
    }
    var max$1, hasRequiredMax;
    function requireMax() {
      return hasRequiredMax || (hasRequiredMax = 1, max$1 = Math.max), max$1;
    }
    var min$1, hasRequiredMin;
    function requireMin() {
      return hasRequiredMin || (hasRequiredMin = 1, min$1 = Math.min), min$1;
    }
    var pow, hasRequiredPow;
    function requirePow() {
      return hasRequiredPow || (hasRequiredPow = 1, pow = Math.pow), pow;
    }
    var round$1, hasRequiredRound;
    function requireRound() {
      return hasRequiredRound || (hasRequiredRound = 1, round$1 = Math.round), round$1;
    }
    var _isNaN, hasRequired_isNaN;
    function require_isNaN() {
      return hasRequired_isNaN || (hasRequired_isNaN = 1, _isNaN = Number.isNaN || function(_) {
        return _ !== _;
      }), _isNaN;
    }
    var sign$2, hasRequiredSign$1;
    function requireSign$1() {
      if (hasRequiredSign$1) return sign$2;
      hasRequiredSign$1 = 1;
      var d = require_isNaN();
      return sign$2 = function($) {
        return d($) || $ === 0 ? $ : $ < 0 ? -1 : 1;
      }, sign$2;
    }
    var gOPD, hasRequiredGOPD;
    function requireGOPD() {
      return hasRequiredGOPD || (hasRequiredGOPD = 1, gOPD = Object.getOwnPropertyDescriptor), gOPD;
    }
    var gopd, hasRequiredGopd;
    function requireGopd() {
      if (hasRequiredGopd) return gopd;
      hasRequiredGopd = 1;
      var d = requireGOPD();
      if (d) try {
        d([], "length");
      } catch {
        d = null;
      }
      return gopd = d, gopd;
    }
    var esDefineProperty, hasRequiredEsDefineProperty;
    function requireEsDefineProperty() {
      if (hasRequiredEsDefineProperty) return esDefineProperty;
      hasRequiredEsDefineProperty = 1;
      var d = Object.defineProperty || false;
      if (d) try {
        d({}, "a", {
          value: 1
        });
      } catch {
        d = false;
      }
      return esDefineProperty = d, esDefineProperty;
    }
    var hasSymbols, hasRequiredHasSymbols;
    function requireHasSymbols() {
      if (hasRequiredHasSymbols) return hasSymbols;
      hasRequiredHasSymbols = 1;
      var d = typeof Symbol < "u" && Symbol, _ = requireShams$1();
      return hasSymbols = function() {
        return typeof d != "function" || typeof Symbol != "function" || typeof d("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? false : _();
      }, hasSymbols;
    }
    var Reflect_getPrototypeOf, hasRequiredReflect_getPrototypeOf;
    function requireReflect_getPrototypeOf() {
      return hasRequiredReflect_getPrototypeOf || (hasRequiredReflect_getPrototypeOf = 1, Reflect_getPrototypeOf = typeof Reflect < "u" && Reflect.getPrototypeOf || null), Reflect_getPrototypeOf;
    }
    var Object_getPrototypeOf, hasRequiredObject_getPrototypeOf;
    function requireObject_getPrototypeOf() {
      if (hasRequiredObject_getPrototypeOf) return Object_getPrototypeOf;
      hasRequiredObject_getPrototypeOf = 1;
      var d = requireEsObjectAtoms();
      return Object_getPrototypeOf = d.getPrototypeOf || null, Object_getPrototypeOf;
    }
    var implementation, hasRequiredImplementation;
    function requireImplementation() {
      if (hasRequiredImplementation) return implementation;
      hasRequiredImplementation = 1;
      var d = "Function.prototype.bind called on incompatible ", _ = Object.prototype.toString, $ = Math.max, j = "[object Function]", rt = function(Et, Bt) {
        for (var St = [], $t = 0; $t < Et.length; $t += 1) St[$t] = Et[$t];
        for (var kt = 0; kt < Bt.length; kt += 1) St[kt + Et.length] = Bt[kt];
        return St;
      }, et = function(Et, Bt) {
        for (var St = [], $t = Bt, kt = 0; $t < Et.length; $t += 1, kt += 1) St[kt] = Et[$t];
        return St;
      }, st = function(pt, Et) {
        for (var Bt = "", St = 0; St < pt.length; St += 1) Bt += pt[St], St + 1 < pt.length && (Bt += Et);
        return Bt;
      };
      return implementation = function(Et) {
        var Bt = this;
        if (typeof Bt != "function" || _.apply(Bt) !== j) throw new TypeError(d + Bt);
        for (var St = et(arguments, 1), $t, kt = function() {
          if (this instanceof $t) {
            var Dt = Bt.apply(this, rt(St, arguments));
            return Object(Dt) === Dt ? Dt : this;
          }
          return Bt.apply(Et, rt(St, arguments));
        }, Tt = $(0, Bt.length - St.length), Pt = [], It = 0; It < Tt; It++) Pt[It] = "$" + It;
        if ($t = Function("binder", "return function (" + st(Pt, ",") + "){ return binder.apply(this,arguments); }")(kt), Bt.prototype) {
          var jt = function() {
          };
          jt.prototype = Bt.prototype, $t.prototype = new jt(), jt.prototype = null;
        }
        return $t;
      }, implementation;
    }
    var functionBind, hasRequiredFunctionBind;
    function requireFunctionBind() {
      if (hasRequiredFunctionBind) return functionBind;
      hasRequiredFunctionBind = 1;
      var d = requireImplementation();
      return functionBind = Function.prototype.bind || d, functionBind;
    }
    var functionCall, hasRequiredFunctionCall;
    function requireFunctionCall() {
      return hasRequiredFunctionCall || (hasRequiredFunctionCall = 1, functionCall = Function.prototype.call), functionCall;
    }
    var functionApply, hasRequiredFunctionApply;
    function requireFunctionApply() {
      return hasRequiredFunctionApply || (hasRequiredFunctionApply = 1, functionApply = Function.prototype.apply), functionApply;
    }
    var reflectApply, hasRequiredReflectApply;
    function requireReflectApply() {
      return hasRequiredReflectApply || (hasRequiredReflectApply = 1, reflectApply = typeof Reflect < "u" && Reflect && Reflect.apply), reflectApply;
    }
    var actualApply, hasRequiredActualApply;
    function requireActualApply() {
      if (hasRequiredActualApply) return actualApply;
      hasRequiredActualApply = 1;
      var d = requireFunctionBind(), _ = requireFunctionApply(), $ = requireFunctionCall(), j = requireReflectApply();
      return actualApply = j || d.call($, _), actualApply;
    }
    var callBindApplyHelpers, hasRequiredCallBindApplyHelpers;
    function requireCallBindApplyHelpers() {
      if (hasRequiredCallBindApplyHelpers) return callBindApplyHelpers;
      hasRequiredCallBindApplyHelpers = 1;
      var d = requireFunctionBind(), _ = requireType(), $ = requireFunctionCall(), j = requireActualApply();
      return callBindApplyHelpers = function(et) {
        if (et.length < 1 || typeof et[0] != "function") throw new _("a function is required");
        return j(d, $, et);
      }, callBindApplyHelpers;
    }
    var get, hasRequiredGet;
    function requireGet() {
      if (hasRequiredGet) return get;
      hasRequiredGet = 1;
      var d = requireCallBindApplyHelpers(), _ = requireGopd(), $;
      try {
        $ = [].__proto__ === Array.prototype;
      } catch (st) {
        if (!st || typeof st != "object" || !("code" in st) || st.code !== "ERR_PROTO_ACCESS") throw st;
      }
      var j = !!$ && _ && _(Object.prototype, "__proto__"), rt = Object, et = rt.getPrototypeOf;
      return get = j && typeof j.get == "function" ? d([
        j.get
      ]) : typeof et == "function" ? function(pt) {
        return et(pt == null ? pt : rt(pt));
      } : false, get;
    }
    var getProto, hasRequiredGetProto;
    function requireGetProto() {
      if (hasRequiredGetProto) return getProto;
      hasRequiredGetProto = 1;
      var d = requireReflect_getPrototypeOf(), _ = requireObject_getPrototypeOf(), $ = requireGet();
      return getProto = d ? function(rt) {
        return d(rt);
      } : _ ? function(rt) {
        if (!rt || typeof rt != "object" && typeof rt != "function") throw new TypeError("getProto: not an object");
        return _(rt);
      } : $ ? function(rt) {
        return $(rt);
      } : null, getProto;
    }
    var hasown, hasRequiredHasown;
    function requireHasown() {
      if (hasRequiredHasown) return hasown;
      hasRequiredHasown = 1;
      var d = Function.prototype.call, _ = Object.prototype.hasOwnProperty, $ = requireFunctionBind();
      return hasown = $.call(d, _), hasown;
    }
    var getIntrinsic, hasRequiredGetIntrinsic;
    function requireGetIntrinsic() {
      if (hasRequiredGetIntrinsic) return getIntrinsic;
      hasRequiredGetIntrinsic = 1;
      var d, _ = requireEsObjectAtoms(), $ = requireEsErrors(), j = require_eval(), rt = requireRange$1(), et = requireRef(), st = requireSyntax(), pt = requireType(), Et = requireUri(), Bt = requireAbs(), St = requireFloor(), $t = requireMax(), kt = requireMin(), Tt = requirePow(), Pt = requireRound(), It = requireSign$1(), jt = Function, Dt = function(tr) {
        try {
          return jt('"use strict"; return (' + tr + ").constructor;")();
        } catch {
        }
      }, Ot = requireGopd(), Ft = requireEsDefineProperty(), Lt = function() {
        throw new pt();
      }, Zt = Ot ? function() {
        try {
          return arguments.callee, Lt;
        } catch {
          try {
            return Ot(arguments, "callee").get;
          } catch {
            return Lt;
          }
        }
      }() : Lt, Kt = requireHasSymbols()(), ar = requireGetProto(), sr = requireObject_getPrototypeOf(), er = requireReflect_getPrototypeOf(), Ut = requireFunctionApply(), xt = requireFunctionCall(), tt = {}, nt = typeof Uint8Array > "u" || !ar ? d : ar(Uint8Array), it = {
        __proto__: null,
        "%AggregateError%": typeof AggregateError > "u" ? d : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer > "u" ? d : ArrayBuffer,
        "%ArrayIteratorPrototype%": Kt && ar ? ar([][Symbol.iterator]()) : d,
        "%AsyncFromSyncIteratorPrototype%": d,
        "%AsyncFunction%": tt,
        "%AsyncGenerator%": tt,
        "%AsyncGeneratorFunction%": tt,
        "%AsyncIteratorPrototype%": tt,
        "%Atomics%": typeof Atomics > "u" ? d : Atomics,
        "%BigInt%": typeof BigInt > "u" ? d : BigInt,
        "%BigInt64Array%": typeof BigInt64Array > "u" ? d : BigInt64Array,
        "%BigUint64Array%": typeof BigUint64Array > "u" ? d : BigUint64Array,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView > "u" ? d : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": $,
        "%eval%": eval,
        "%EvalError%": j,
        "%Float16Array%": typeof Float16Array > "u" ? d : Float16Array,
        "%Float32Array%": typeof Float32Array > "u" ? d : Float32Array,
        "%Float64Array%": typeof Float64Array > "u" ? d : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? d : FinalizationRegistry,
        "%Function%": jt,
        "%GeneratorFunction%": tt,
        "%Int8Array%": typeof Int8Array > "u" ? d : Int8Array,
        "%Int16Array%": typeof Int16Array > "u" ? d : Int16Array,
        "%Int32Array%": typeof Int32Array > "u" ? d : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": Kt && ar ? ar(ar([][Symbol.iterator]())) : d,
        "%JSON%": typeof JSON == "object" ? JSON : d,
        "%Map%": typeof Map > "u" ? d : Map,
        "%MapIteratorPrototype%": typeof Map > "u" || !Kt || !ar ? d : ar((/* @__PURE__ */ new Map())[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": _,
        "%Object.getOwnPropertyDescriptor%": Ot,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise > "u" ? d : Promise,
        "%Proxy%": typeof Proxy > "u" ? d : Proxy,
        "%RangeError%": rt,
        "%ReferenceError%": et,
        "%Reflect%": typeof Reflect > "u" ? d : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set > "u" ? d : Set,
        "%SetIteratorPrototype%": typeof Set > "u" || !Kt || !ar ? d : ar((/* @__PURE__ */ new Set())[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? d : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": Kt && ar ? ar(""[Symbol.iterator]()) : d,
        "%Symbol%": Kt ? Symbol : d,
        "%SyntaxError%": st,
        "%ThrowTypeError%": Zt,
        "%TypedArray%": nt,
        "%TypeError%": pt,
        "%Uint8Array%": typeof Uint8Array > "u" ? d : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? d : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array > "u" ? d : Uint16Array,
        "%Uint32Array%": typeof Uint32Array > "u" ? d : Uint32Array,
        "%URIError%": Et,
        "%WeakMap%": typeof WeakMap > "u" ? d : WeakMap,
        "%WeakRef%": typeof WeakRef > "u" ? d : WeakRef,
        "%WeakSet%": typeof WeakSet > "u" ? d : WeakSet,
        "%Function.prototype.call%": xt,
        "%Function.prototype.apply%": Ut,
        "%Object.defineProperty%": Ft,
        "%Object.getPrototypeOf%": sr,
        "%Math.abs%": Bt,
        "%Math.floor%": St,
        "%Math.max%": $t,
        "%Math.min%": kt,
        "%Math.pow%": Tt,
        "%Math.round%": Pt,
        "%Math.sign%": It,
        "%Reflect.getPrototypeOf%": er
      };
      if (ar) try {
        null.error;
      } catch (tr) {
        var at = ar(ar(tr));
        it["%Error.prototype%"] = at;
      }
      var ct = function tr(cr) {
        var ir;
        if (cr === "%AsyncFunction%") ir = Dt("async function () {}");
        else if (cr === "%GeneratorFunction%") ir = Dt("function* () {}");
        else if (cr === "%AsyncGeneratorFunction%") ir = Dt("async function* () {}");
        else if (cr === "%AsyncGenerator%") {
          var Jt = tr("%AsyncGeneratorFunction%");
          Jt && (ir = Jt.prototype);
        } else if (cr === "%AsyncIteratorPrototype%") {
          var vr = tr("%AsyncGenerator%");
          vr && ar && (ir = ar(vr.prototype));
        }
        return it[cr] = ir, ir;
      }, Mt = {
        __proto__: null,
        "%ArrayBufferPrototype%": [
          "ArrayBuffer",
          "prototype"
        ],
        "%ArrayPrototype%": [
          "Array",
          "prototype"
        ],
        "%ArrayProto_entries%": [
          "Array",
          "prototype",
          "entries"
        ],
        "%ArrayProto_forEach%": [
          "Array",
          "prototype",
          "forEach"
        ],
        "%ArrayProto_keys%": [
          "Array",
          "prototype",
          "keys"
        ],
        "%ArrayProto_values%": [
          "Array",
          "prototype",
          "values"
        ],
        "%AsyncFunctionPrototype%": [
          "AsyncFunction",
          "prototype"
        ],
        "%AsyncGenerator%": [
          "AsyncGeneratorFunction",
          "prototype"
        ],
        "%AsyncGeneratorPrototype%": [
          "AsyncGeneratorFunction",
          "prototype",
          "prototype"
        ],
        "%BooleanPrototype%": [
          "Boolean",
          "prototype"
        ],
        "%DataViewPrototype%": [
          "DataView",
          "prototype"
        ],
        "%DatePrototype%": [
          "Date",
          "prototype"
        ],
        "%ErrorPrototype%": [
          "Error",
          "prototype"
        ],
        "%EvalErrorPrototype%": [
          "EvalError",
          "prototype"
        ],
        "%Float32ArrayPrototype%": [
          "Float32Array",
          "prototype"
        ],
        "%Float64ArrayPrototype%": [
          "Float64Array",
          "prototype"
        ],
        "%FunctionPrototype%": [
          "Function",
          "prototype"
        ],
        "%Generator%": [
          "GeneratorFunction",
          "prototype"
        ],
        "%GeneratorPrototype%": [
          "GeneratorFunction",
          "prototype",
          "prototype"
        ],
        "%Int8ArrayPrototype%": [
          "Int8Array",
          "prototype"
        ],
        "%Int16ArrayPrototype%": [
          "Int16Array",
          "prototype"
        ],
        "%Int32ArrayPrototype%": [
          "Int32Array",
          "prototype"
        ],
        "%JSONParse%": [
          "JSON",
          "parse"
        ],
        "%JSONStringify%": [
          "JSON",
          "stringify"
        ],
        "%MapPrototype%": [
          "Map",
          "prototype"
        ],
        "%NumberPrototype%": [
          "Number",
          "prototype"
        ],
        "%ObjectPrototype%": [
          "Object",
          "prototype"
        ],
        "%ObjProto_toString%": [
          "Object",
          "prototype",
          "toString"
        ],
        "%ObjProto_valueOf%": [
          "Object",
          "prototype",
          "valueOf"
        ],
        "%PromisePrototype%": [
          "Promise",
          "prototype"
        ],
        "%PromiseProto_then%": [
          "Promise",
          "prototype",
          "then"
        ],
        "%Promise_all%": [
          "Promise",
          "all"
        ],
        "%Promise_reject%": [
          "Promise",
          "reject"
        ],
        "%Promise_resolve%": [
          "Promise",
          "resolve"
        ],
        "%RangeErrorPrototype%": [
          "RangeError",
          "prototype"
        ],
        "%ReferenceErrorPrototype%": [
          "ReferenceError",
          "prototype"
        ],
        "%RegExpPrototype%": [
          "RegExp",
          "prototype"
        ],
        "%SetPrototype%": [
          "Set",
          "prototype"
        ],
        "%SharedArrayBufferPrototype%": [
          "SharedArrayBuffer",
          "prototype"
        ],
        "%StringPrototype%": [
          "String",
          "prototype"
        ],
        "%SymbolPrototype%": [
          "Symbol",
          "prototype"
        ],
        "%SyntaxErrorPrototype%": [
          "SyntaxError",
          "prototype"
        ],
        "%TypedArrayPrototype%": [
          "TypedArray",
          "prototype"
        ],
        "%TypeErrorPrototype%": [
          "TypeError",
          "prototype"
        ],
        "%Uint8ArrayPrototype%": [
          "Uint8Array",
          "prototype"
        ],
        "%Uint8ClampedArrayPrototype%": [
          "Uint8ClampedArray",
          "prototype"
        ],
        "%Uint16ArrayPrototype%": [
          "Uint16Array",
          "prototype"
        ],
        "%Uint32ArrayPrototype%": [
          "Uint32Array",
          "prototype"
        ],
        "%URIErrorPrototype%": [
          "URIError",
          "prototype"
        ],
        "%WeakMapPrototype%": [
          "WeakMap",
          "prototype"
        ],
        "%WeakSetPrototype%": [
          "WeakSet",
          "prototype"
        ]
      }, At = requireFunctionBind(), ut = requireHasown(), ot = At.call(xt, Array.prototype.concat), Ct = At.call(Ut, Array.prototype.splice), Rt = At.call(xt, String.prototype.replace), Nt = At.call(xt, String.prototype.slice), Wt = At.call(xt, RegExp.prototype.exec), Xt = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, rr = /\\(\\)?/g, Gt = function(cr) {
        var ir = Nt(cr, 0, 1), Jt = Nt(cr, -1);
        if (ir === "%" && Jt !== "%") throw new st("invalid intrinsic syntax, expected closing `%`");
        if (Jt === "%" && ir !== "%") throw new st("invalid intrinsic syntax, expected opening `%`");
        var vr = [];
        return Rt(cr, Xt, function(Br, _r, $r, Ur) {
          vr[vr.length] = $r ? Rt(Ur, rr, "$1") : _r || Br;
        }), vr;
      }, Yt = function(cr, ir) {
        var Jt = cr, vr;
        if (ut(Mt, Jt) && (vr = Mt[Jt], Jt = "%" + vr[0] + "%"), ut(it, Jt)) {
          var Br = it[Jt];
          if (Br === tt && (Br = ct(Jt)), typeof Br > "u" && !ir) throw new pt("intrinsic " + cr + " exists, but is not available. Please file an issue!");
          return {
            alias: vr,
            name: Jt,
            value: Br
          };
        }
        throw new st("intrinsic " + cr + " does not exist!");
      };
      return getIntrinsic = function(cr, ir) {
        if (typeof cr != "string" || cr.length === 0) throw new pt("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof ir != "boolean") throw new pt('"allowMissing" argument must be a boolean');
        if (Wt(/^%?[^%]*%?$/, cr) === null) throw new st("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var Jt = Gt(cr), vr = Jt.length > 0 ? Jt[0] : "", Br = Yt("%" + vr + "%", ir), _r = Br.name, $r = Br.value, Ur = false, Sr = Br.alias;
        Sr && (vr = Sr[0], Ct(Jt, ot([
          0,
          1
        ], Sr)));
        for (var Mr = 1, Kr = true; Mr < Jt.length; Mr += 1) {
          var kr = Jt[Mr], Lr = Nt(kr, 0, 1), Gr = Nt(kr, -1);
          if ((Lr === '"' || Lr === "'" || Lr === "`" || Gr === '"' || Gr === "'" || Gr === "`") && Lr !== Gr) throw new st("property names with quotes must have matching quotes");
          if ((kr === "constructor" || !Kr) && (Ur = true), vr += "." + kr, _r = "%" + vr + "%", ut(it, _r)) $r = it[_r];
          else if ($r != null) {
            if (!(kr in $r)) {
              if (!ir) throw new pt("base intrinsic for " + cr + " exists, but the property is not available.");
              return;
            }
            if (Ot && Mr + 1 >= Jt.length) {
              var Tr = Ot($r, kr);
              Kr = !!Tr, Kr && "get" in Tr && !("originalValue" in Tr.get) ? $r = Tr.get : $r = $r[kr];
            } else Kr = ut($r, kr), $r = $r[kr];
            Kr && !Ur && (it[_r] = $r);
          }
        }
        return $r;
      }, getIntrinsic;
    }
    var callBound, hasRequiredCallBound;
    function requireCallBound() {
      if (hasRequiredCallBound) return callBound;
      hasRequiredCallBound = 1;
      var d = requireGetIntrinsic(), _ = requireCallBindApplyHelpers(), $ = _([
        d("%String.prototype.indexOf%")
      ]);
      return callBound = function(rt, et) {
        var st = d(rt, !!et);
        return typeof st == "function" && $(rt, ".prototype.") > -1 ? _([
          st
        ]) : st;
      }, callBound;
    }
    var isArguments, hasRequiredIsArguments;
    function requireIsArguments() {
      if (hasRequiredIsArguments) return isArguments;
      hasRequiredIsArguments = 1;
      var d = requireShams()(), _ = requireCallBound(), $ = _("Object.prototype.toString"), j = function(pt) {
        return d && pt && typeof pt == "object" && Symbol.toStringTag in pt ? false : $(pt) === "[object Arguments]";
      }, rt = function(pt) {
        return j(pt) ? true : pt !== null && typeof pt == "object" && "length" in pt && typeof pt.length == "number" && pt.length >= 0 && $(pt) !== "[object Array]" && "callee" in pt && $(pt.callee) === "[object Function]";
      }, et = function() {
        return j(arguments);
      }();
      return j.isLegacyArguments = rt, isArguments = et ? j : rt, isArguments;
    }
    var isRegex, hasRequiredIsRegex;
    function requireIsRegex() {
      if (hasRequiredIsRegex) return isRegex;
      hasRequiredIsRegex = 1;
      var d = requireCallBound(), _ = requireShams()(), $ = requireHasown(), j = requireGopd(), rt;
      if (_) {
        var et = d("RegExp.prototype.exec"), st = {}, pt = function() {
          throw st;
        }, Et = {
          toString: pt,
          valueOf: pt
        };
        typeof Symbol.toPrimitive == "symbol" && (Et[Symbol.toPrimitive] = pt), rt = function(kt) {
          if (!kt || typeof kt != "object") return false;
          var Tt = j(kt, "lastIndex"), Pt = Tt && $(Tt, "value");
          if (!Pt) return false;
          try {
            et(kt, Et);
          } catch (It) {
            return It === st;
          }
        };
      } else {
        var Bt = d("Object.prototype.toString"), St = "[object RegExp]";
        rt = function(kt) {
          return !kt || typeof kt != "object" && typeof kt != "function" ? false : Bt(kt) === St;
        };
      }
      return isRegex = rt, isRegex;
    }
    var safeRegexTest, hasRequiredSafeRegexTest;
    function requireSafeRegexTest() {
      if (hasRequiredSafeRegexTest) return safeRegexTest;
      hasRequiredSafeRegexTest = 1;
      var d = requireCallBound(), _ = requireIsRegex(), $ = d("RegExp.prototype.exec"), j = requireType();
      return safeRegexTest = function(et) {
        if (!_(et)) throw new j("`regex` must be a RegExp");
        return function(pt) {
          return $(et, pt) !== null;
        };
      }, safeRegexTest;
    }
    var isGeneratorFunction, hasRequiredIsGeneratorFunction;
    function requireIsGeneratorFunction() {
      if (hasRequiredIsGeneratorFunction) return isGeneratorFunction;
      hasRequiredIsGeneratorFunction = 1;
      var d = requireCallBound(), _ = requireSafeRegexTest(), $ = _(/^\s*(?:function)?\*/), j = requireShams()(), rt = requireGetProto(), et = d("Object.prototype.toString"), st = d("Function.prototype.toString"), pt = function() {
        if (!j) return false;
        try {
          return Function("return function*() {}")();
        } catch {
        }
      }, Et;
      return isGeneratorFunction = function(St) {
        if (typeof St != "function") return false;
        if ($(st(St))) return true;
        if (!j) {
          var $t = et(St);
          return $t === "[object GeneratorFunction]";
        }
        if (!rt) return false;
        if (typeof Et > "u") {
          var kt = pt();
          Et = kt ? rt(kt) : false;
        }
        return rt(St) === Et;
      }, isGeneratorFunction;
    }
    var isCallable, hasRequiredIsCallable;
    function requireIsCallable() {
      if (hasRequiredIsCallable) return isCallable;
      hasRequiredIsCallable = 1;
      var d = Function.prototype.toString, _ = typeof Reflect == "object" && Reflect !== null && Reflect.apply, $, j;
      if (typeof _ == "function" && typeof Object.defineProperty == "function") try {
        $ = Object.defineProperty({}, "length", {
          get: function() {
            throw j;
          }
        }), j = {}, _(function() {
          throw 42;
        }, null, $);
      } catch (Ot) {
        Ot !== j && (_ = null);
      }
      else _ = null;
      var rt = /^\s*class\b/, et = function(Ft) {
        try {
          var Lt = d.call(Ft);
          return rt.test(Lt);
        } catch {
          return false;
        }
      }, st = function(Ft) {
        try {
          return et(Ft) ? false : (d.call(Ft), true);
        } catch {
          return false;
        }
      }, pt = Object.prototype.toString, Et = "[object Object]", Bt = "[object Function]", St = "[object GeneratorFunction]", $t = "[object HTMLAllCollection]", kt = "[object HTML document.all class]", Tt = "[object HTMLCollection]", Pt = typeof Symbol == "function" && !!Symbol.toStringTag, It = !(0 in [
        ,
      ]), jt = function() {
        return false;
      };
      if (typeof document == "object") {
        var Dt = document.all;
        pt.call(Dt) === pt.call(document.all) && (jt = function(Ft) {
          if ((It || !Ft) && (typeof Ft > "u" || typeof Ft == "object")) try {
            var Lt = pt.call(Ft);
            return (Lt === $t || Lt === kt || Lt === Tt || Lt === Et) && Ft("") == null;
          } catch {
          }
          return false;
        });
      }
      return isCallable = _ ? function(Ft) {
        if (jt(Ft)) return true;
        if (!Ft || typeof Ft != "function" && typeof Ft != "object") return false;
        try {
          _(Ft, null, $);
        } catch (Lt) {
          if (Lt !== j) return false;
        }
        return !et(Ft) && st(Ft);
      } : function(Ft) {
        if (jt(Ft)) return true;
        if (!Ft || typeof Ft != "function" && typeof Ft != "object") return false;
        if (Pt) return st(Ft);
        if (et(Ft)) return false;
        var Lt = pt.call(Ft);
        return Lt !== Bt && Lt !== St && !/^\[object HTML/.test(Lt) ? false : st(Ft);
      }, isCallable;
    }
    var forEach$1, hasRequiredForEach;
    function requireForEach() {
      if (hasRequiredForEach) return forEach$1;
      hasRequiredForEach = 1;
      var d = requireIsCallable(), _ = Object.prototype.toString, $ = Object.prototype.hasOwnProperty, j = function(Et, Bt, St) {
        for (var $t = 0, kt = Et.length; $t < kt; $t++) $.call(Et, $t) && (St == null ? Bt(Et[$t], $t, Et) : Bt.call(St, Et[$t], $t, Et));
      }, rt = function(Et, Bt, St) {
        for (var $t = 0, kt = Et.length; $t < kt; $t++) St == null ? Bt(Et.charAt($t), $t, Et) : Bt.call(St, Et.charAt($t), $t, Et);
      }, et = function(Et, Bt, St) {
        for (var $t in Et) $.call(Et, $t) && (St == null ? Bt(Et[$t], $t, Et) : Bt.call(St, Et[$t], $t, Et));
      };
      function st(pt) {
        return _.call(pt) === "[object Array]";
      }
      return forEach$1 = function(Et, Bt, St) {
        if (!d(Bt)) throw new TypeError("iterator must be a function");
        var $t;
        arguments.length >= 3 && ($t = St), st(Et) ? j(Et, Bt, $t) : typeof Et == "string" ? rt(Et, Bt, $t) : et(Et, Bt, $t);
      }, forEach$1;
    }
    var possibleTypedArrayNames, hasRequiredPossibleTypedArrayNames;
    function requirePossibleTypedArrayNames() {
      return hasRequiredPossibleTypedArrayNames || (hasRequiredPossibleTypedArrayNames = 1, possibleTypedArrayNames = [
        "Float16Array",
        "Float32Array",
        "Float64Array",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "BigInt64Array",
        "BigUint64Array"
      ]), possibleTypedArrayNames;
    }
    var availableTypedArrays, hasRequiredAvailableTypedArrays;
    function requireAvailableTypedArrays() {
      if (hasRequiredAvailableTypedArrays) return availableTypedArrays;
      hasRequiredAvailableTypedArrays = 1;
      var d = requirePossibleTypedArrayNames(), _ = typeof globalThis > "u" ? commonjsGlobal : globalThis;
      return availableTypedArrays = function() {
        for (var j = [], rt = 0; rt < d.length; rt++) typeof _[d[rt]] == "function" && (j[j.length] = d[rt]);
        return j;
      }, availableTypedArrays;
    }
    var callBind = {
      exports: {}
    }, defineDataProperty, hasRequiredDefineDataProperty;
    function requireDefineDataProperty() {
      if (hasRequiredDefineDataProperty) return defineDataProperty;
      hasRequiredDefineDataProperty = 1;
      var d = requireEsDefineProperty(), _ = requireSyntax(), $ = requireType(), j = requireGopd();
      return defineDataProperty = function(et, st, pt) {
        if (!et || typeof et != "object" && typeof et != "function") throw new $("`obj` must be an object or a function`");
        if (typeof st != "string" && typeof st != "symbol") throw new $("`property` must be a string or a symbol`");
        if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new $("`nonEnumerable`, if provided, must be a boolean or null");
        if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new $("`nonWritable`, if provided, must be a boolean or null");
        if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new $("`nonConfigurable`, if provided, must be a boolean or null");
        if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new $("`loose`, if provided, must be a boolean");
        var Et = arguments.length > 3 ? arguments[3] : null, Bt = arguments.length > 4 ? arguments[4] : null, St = arguments.length > 5 ? arguments[5] : null, $t = arguments.length > 6 ? arguments[6] : false, kt = !!j && j(et, st);
        if (d) d(et, st, {
          configurable: St === null && kt ? kt.configurable : !St,
          enumerable: Et === null && kt ? kt.enumerable : !Et,
          value: pt,
          writable: Bt === null && kt ? kt.writable : !Bt
        });
        else if ($t || !Et && !Bt && !St) et[st] = pt;
        else throw new _("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
      }, defineDataProperty;
    }
    var hasPropertyDescriptors_1, hasRequiredHasPropertyDescriptors;
    function requireHasPropertyDescriptors() {
      if (hasRequiredHasPropertyDescriptors) return hasPropertyDescriptors_1;
      hasRequiredHasPropertyDescriptors = 1;
      var d = requireEsDefineProperty(), _ = function() {
        return !!d;
      };
      return _.hasArrayLengthDefineBug = function() {
        if (!d) return null;
        try {
          return d([], "length", {
            value: 1
          }).length !== 1;
        } catch {
          return true;
        }
      }, hasPropertyDescriptors_1 = _, hasPropertyDescriptors_1;
    }
    var setFunctionLength, hasRequiredSetFunctionLength;
    function requireSetFunctionLength() {
      if (hasRequiredSetFunctionLength) return setFunctionLength;
      hasRequiredSetFunctionLength = 1;
      var d = requireGetIntrinsic(), _ = requireDefineDataProperty(), $ = requireHasPropertyDescriptors()(), j = requireGopd(), rt = requireType(), et = d("%Math.floor%");
      return setFunctionLength = function(pt, Et) {
        if (typeof pt != "function") throw new rt("`fn` is not a function");
        if (typeof Et != "number" || Et < 0 || Et > 4294967295 || et(Et) !== Et) throw new rt("`length` must be a positive 32-bit integer");
        var Bt = arguments.length > 2 && !!arguments[2], St = true, $t = true;
        if ("length" in pt && j) {
          var kt = j(pt, "length");
          kt && !kt.configurable && (St = false), kt && !kt.writable && ($t = false);
        }
        return (St || $t || !Bt) && ($ ? _(pt, "length", Et, true, true) : _(pt, "length", Et)), pt;
      }, setFunctionLength;
    }
    var applyBind, hasRequiredApplyBind;
    function requireApplyBind() {
      if (hasRequiredApplyBind) return applyBind;
      hasRequiredApplyBind = 1;
      var d = requireFunctionBind(), _ = requireFunctionApply(), $ = requireActualApply();
      return applyBind = function() {
        return $(d, _, arguments);
      }, applyBind;
    }
    var hasRequiredCallBind;
    function requireCallBind() {
      return hasRequiredCallBind || (hasRequiredCallBind = 1, function(d) {
        var _ = requireSetFunctionLength(), $ = requireEsDefineProperty(), j = requireCallBindApplyHelpers(), rt = requireApplyBind();
        d.exports = function(st) {
          var pt = j(arguments), Et = st.length - (arguments.length - 1);
          return _(pt, 1 + (Et > 0 ? Et : 0), true);
        }, $ ? $(d.exports, "apply", {
          value: rt
        }) : d.exports.apply = rt;
      }(callBind)), callBind.exports;
    }
    var whichTypedArray, hasRequiredWhichTypedArray;
    function requireWhichTypedArray() {
      if (hasRequiredWhichTypedArray) return whichTypedArray;
      hasRequiredWhichTypedArray = 1;
      var d = requireForEach(), _ = requireAvailableTypedArrays(), $ = requireCallBind(), j = requireCallBound(), rt = requireGopd(), et = j("Object.prototype.toString"), st = requireShams()(), pt = typeof globalThis > "u" ? commonjsGlobal : globalThis, Et = _(), Bt = j("String.prototype.slice"), St = Object.getPrototypeOf, $t = j("Array.prototype.indexOf", true) || function(jt, Dt) {
        for (var Ot = 0; Ot < jt.length; Ot += 1) if (jt[Ot] === Dt) return Ot;
        return -1;
      }, kt = {
        __proto__: null
      };
      st && rt && St ? d(Et, function(It) {
        var jt = new pt[It]();
        if (Symbol.toStringTag in jt) {
          var Dt = St(jt), Ot = rt(Dt, Symbol.toStringTag);
          if (!Ot) {
            var Ft = St(Dt);
            Ot = rt(Ft, Symbol.toStringTag);
          }
          kt["$" + It] = $(Ot.get);
        }
      }) : d(Et, function(It) {
        var jt = new pt[It](), Dt = jt.slice || jt.set;
        Dt && (kt["$" + It] = $(Dt));
      });
      var Tt = function(jt) {
        var Dt = false;
        return d(kt, function(Ot, Ft) {
          if (!Dt) try {
            "$" + Ot(jt) === Ft && (Dt = Bt(Ft, 1));
          } catch {
          }
        }), Dt;
      }, Pt = function(jt) {
        var Dt = false;
        return d(kt, function(Ot, Ft) {
          if (!Dt) try {
            Ot(jt), Dt = Bt(Ft, 1);
          } catch {
          }
        }), Dt;
      };
      return whichTypedArray = function(jt) {
        if (!jt || typeof jt != "object") return false;
        if (!st) {
          var Dt = Bt(et(jt), 8, -1);
          return $t(Et, Dt) > -1 ? Dt : Dt !== "Object" ? false : Pt(jt);
        }
        return rt ? Tt(jt) : null;
      }, whichTypedArray;
    }
    var isTypedArray$1, hasRequiredIsTypedArray;
    function requireIsTypedArray() {
      if (hasRequiredIsTypedArray) return isTypedArray$1;
      hasRequiredIsTypedArray = 1;
      var d = requireWhichTypedArray();
      return isTypedArray$1 = function($) {
        return !!d($);
      }, isTypedArray$1;
    }
    var hasRequiredTypes;
    function requireTypes() {
      return hasRequiredTypes || (hasRequiredTypes = 1, function(d) {
        var _ = requireIsArguments(), $ = requireIsGeneratorFunction(), j = requireWhichTypedArray(), rt = requireIsTypedArray();
        function et(Mr) {
          return Mr.call.bind(Mr);
        }
        var st = typeof BigInt < "u", pt = typeof Symbol < "u", Et = et(Object.prototype.toString), Bt = et(Number.prototype.valueOf), St = et(String.prototype.valueOf), $t = et(Boolean.prototype.valueOf);
        if (st) var kt = et(BigInt.prototype.valueOf);
        if (pt) var Tt = et(Symbol.prototype.valueOf);
        function Pt(Mr, Kr) {
          if (typeof Mr != "object") return false;
          try {
            return Kr(Mr), true;
          } catch {
            return false;
          }
        }
        d.isArgumentsObject = _, d.isGeneratorFunction = $, d.isTypedArray = rt;
        function It(Mr) {
          return typeof Promise < "u" && Mr instanceof Promise || Mr !== null && typeof Mr == "object" && typeof Mr.then == "function" && typeof Mr.catch == "function";
        }
        d.isPromise = It;
        function jt(Mr) {
          return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(Mr) : rt(Mr) || Nt(Mr);
        }
        d.isArrayBufferView = jt;
        function Dt(Mr) {
          return j(Mr) === "Uint8Array";
        }
        d.isUint8Array = Dt;
        function Ot(Mr) {
          return j(Mr) === "Uint8ClampedArray";
        }
        d.isUint8ClampedArray = Ot;
        function Ft(Mr) {
          return j(Mr) === "Uint16Array";
        }
        d.isUint16Array = Ft;
        function Lt(Mr) {
          return j(Mr) === "Uint32Array";
        }
        d.isUint32Array = Lt;
        function Zt(Mr) {
          return j(Mr) === "Int8Array";
        }
        d.isInt8Array = Zt;
        function Kt(Mr) {
          return j(Mr) === "Int16Array";
        }
        d.isInt16Array = Kt;
        function ar(Mr) {
          return j(Mr) === "Int32Array";
        }
        d.isInt32Array = ar;
        function sr(Mr) {
          return j(Mr) === "Float32Array";
        }
        d.isFloat32Array = sr;
        function er(Mr) {
          return j(Mr) === "Float64Array";
        }
        d.isFloat64Array = er;
        function Ut(Mr) {
          return j(Mr) === "BigInt64Array";
        }
        d.isBigInt64Array = Ut;
        function xt(Mr) {
          return j(Mr) === "BigUint64Array";
        }
        d.isBigUint64Array = xt;
        function tt(Mr) {
          return Et(Mr) === "[object Map]";
        }
        tt.working = typeof Map < "u" && tt(/* @__PURE__ */ new Map());
        function nt(Mr) {
          return typeof Map > "u" ? false : tt.working ? tt(Mr) : Mr instanceof Map;
        }
        d.isMap = nt;
        function it(Mr) {
          return Et(Mr) === "[object Set]";
        }
        it.working = typeof Set < "u" && it(/* @__PURE__ */ new Set());
        function at(Mr) {
          return typeof Set > "u" ? false : it.working ? it(Mr) : Mr instanceof Set;
        }
        d.isSet = at;
        function ct(Mr) {
          return Et(Mr) === "[object WeakMap]";
        }
        ct.working = typeof WeakMap < "u" && ct(/* @__PURE__ */ new WeakMap());
        function Mt(Mr) {
          return typeof WeakMap > "u" ? false : ct.working ? ct(Mr) : Mr instanceof WeakMap;
        }
        d.isWeakMap = Mt;
        function At(Mr) {
          return Et(Mr) === "[object WeakSet]";
        }
        At.working = typeof WeakSet < "u" && At(/* @__PURE__ */ new WeakSet());
        function ut(Mr) {
          return At(Mr);
        }
        d.isWeakSet = ut;
        function ot(Mr) {
          return Et(Mr) === "[object ArrayBuffer]";
        }
        ot.working = typeof ArrayBuffer < "u" && ot(new ArrayBuffer());
        function Ct(Mr) {
          return typeof ArrayBuffer > "u" ? false : ot.working ? ot(Mr) : Mr instanceof ArrayBuffer;
        }
        d.isArrayBuffer = Ct;
        function Rt(Mr) {
          return Et(Mr) === "[object DataView]";
        }
        Rt.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && Rt(new DataView(new ArrayBuffer(1), 0, 1));
        function Nt(Mr) {
          return typeof DataView > "u" ? false : Rt.working ? Rt(Mr) : Mr instanceof DataView;
        }
        d.isDataView = Nt;
        var Wt = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
        function Xt(Mr) {
          return Et(Mr) === "[object SharedArrayBuffer]";
        }
        function rr(Mr) {
          return typeof Wt > "u" ? false : (typeof Xt.working > "u" && (Xt.working = Xt(new Wt())), Xt.working ? Xt(Mr) : Mr instanceof Wt);
        }
        d.isSharedArrayBuffer = rr;
        function Gt(Mr) {
          return Et(Mr) === "[object AsyncFunction]";
        }
        d.isAsyncFunction = Gt;
        function Yt(Mr) {
          return Et(Mr) === "[object Map Iterator]";
        }
        d.isMapIterator = Yt;
        function tr(Mr) {
          return Et(Mr) === "[object Set Iterator]";
        }
        d.isSetIterator = tr;
        function cr(Mr) {
          return Et(Mr) === "[object Generator]";
        }
        d.isGeneratorObject = cr;
        function ir(Mr) {
          return Et(Mr) === "[object WebAssembly.Module]";
        }
        d.isWebAssemblyCompiledModule = ir;
        function Jt(Mr) {
          return Pt(Mr, Bt);
        }
        d.isNumberObject = Jt;
        function vr(Mr) {
          return Pt(Mr, St);
        }
        d.isStringObject = vr;
        function Br(Mr) {
          return Pt(Mr, $t);
        }
        d.isBooleanObject = Br;
        function _r(Mr) {
          return st && Pt(Mr, kt);
        }
        d.isBigIntObject = _r;
        function $r(Mr) {
          return pt && Pt(Mr, Tt);
        }
        d.isSymbolObject = $r;
        function Ur(Mr) {
          return Jt(Mr) || vr(Mr) || Br(Mr) || _r(Mr) || $r(Mr);
        }
        d.isBoxedPrimitive = Ur;
        function Sr(Mr) {
          return typeof Uint8Array < "u" && (Ct(Mr) || rr(Mr));
        }
        d.isAnyArrayBuffer = Sr, [
          "isProxy",
          "isExternal",
          "isModuleNamespaceObject"
        ].forEach(function(Mr) {
          Object.defineProperty(d, Mr, {
            enumerable: false,
            value: function() {
              throw new Error(Mr + " is not supported in userland");
            }
          });
        });
      }(types$1)), types$1;
    }
    var isBufferBrowser, hasRequiredIsBufferBrowser;
    function requireIsBufferBrowser() {
      return hasRequiredIsBufferBrowser || (hasRequiredIsBufferBrowser = 1, isBufferBrowser = function(_) {
        return _ && typeof _ == "object" && typeof _.copy == "function" && typeof _.fill == "function" && typeof _.readUInt8 == "function";
      }), isBufferBrowser;
    }
    var hasRequiredUtil$1;
    function requireUtil$1() {
      return hasRequiredUtil$1 || (hasRequiredUtil$1 = 1, function(d) {
        var _ = {}, $ = Object.getOwnPropertyDescriptors || function(Wt) {
          for (var Xt = Object.keys(Wt), rr = {}, Gt = 0; Gt < Xt.length; Gt++) rr[Xt[Gt]] = Object.getOwnPropertyDescriptor(Wt, Xt[Gt]);
          return rr;
        }, j = /%[sdj%]/g;
        d.format = function(Nt) {
          if (!Kt(Nt)) {
            for (var Wt = [], Xt = 0; Xt < arguments.length; Xt++) Wt.push(pt(arguments[Xt]));
            return Wt.join(" ");
          }
          for (var Xt = 1, rr = arguments, Gt = rr.length, Yt = String(Nt).replace(j, function(cr) {
            if (cr === "%%") return "%";
            if (Xt >= Gt) return cr;
            switch (cr) {
              case "%s":
                return String(rr[Xt++]);
              case "%d":
                return Number(rr[Xt++]);
              case "%j":
                try {
                  return JSON.stringify(rr[Xt++]);
                } catch {
                  return "[Circular]";
                }
              default:
                return cr;
            }
          }), tr = rr[Xt]; Xt < Gt; tr = rr[++Xt]) Ft(tr) || !Ut(tr) ? Yt += " " + tr : Yt += " " + pt(tr);
          return Yt;
        }, d.deprecate = function(Nt, Wt) {
          if (typeof process$1 < "u" && process$1.noDeprecation === true) return Nt;
          if (typeof process$1 > "u") return function() {
            return d.deprecate(Nt, Wt).apply(this, arguments);
          };
          var Xt = false;
          function rr() {
            if (!Xt) {
              if (process$1.throwDeprecation) throw new Error(Wt);
              process$1.traceDeprecation ? console.trace(Wt) : console.error(Wt), Xt = true;
            }
            return Nt.apply(this, arguments);
          }
          return rr;
        };
        var rt = {}, et = /^$/;
        if (_.NODE_DEBUG) {
          var st = _.NODE_DEBUG;
          st = st.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), et = new RegExp("^" + st + "$", "i");
        }
        d.debuglog = function(Nt) {
          if (Nt = Nt.toUpperCase(), !rt[Nt]) if (et.test(Nt)) {
            var Wt = process$1.pid;
            rt[Nt] = function() {
              var Xt = d.format.apply(d, arguments);
              console.error("%s %d: %s", Nt, Wt, Xt);
            };
          } else rt[Nt] = function() {
          };
          return rt[Nt];
        };
        function pt(Nt, Wt) {
          var Xt = {
            seen: [],
            stylize: Bt
          };
          return arguments.length >= 3 && (Xt.depth = arguments[2]), arguments.length >= 4 && (Xt.colors = arguments[3]), Ot(Wt) ? Xt.showHidden = Wt : Wt && d._extend(Xt, Wt), sr(Xt.showHidden) && (Xt.showHidden = false), sr(Xt.depth) && (Xt.depth = 2), sr(Xt.colors) && (Xt.colors = false), sr(Xt.customInspect) && (Xt.customInspect = true), Xt.colors && (Xt.stylize = Et), $t(Xt, Nt, Xt.depth);
        }
        d.inspect = pt, pt.colors = {
          bold: [
            1,
            22
          ],
          italic: [
            3,
            23
          ],
          underline: [
            4,
            24
          ],
          inverse: [
            7,
            27
          ],
          white: [
            37,
            39
          ],
          grey: [
            90,
            39
          ],
          black: [
            30,
            39
          ],
          blue: [
            34,
            39
          ],
          cyan: [
            36,
            39
          ],
          green: [
            32,
            39
          ],
          magenta: [
            35,
            39
          ],
          red: [
            31,
            39
          ],
          yellow: [
            33,
            39
          ]
        }, pt.styles = {
          special: "cyan",
          number: "yellow",
          boolean: "yellow",
          undefined: "grey",
          null: "bold",
          string: "green",
          date: "magenta",
          regexp: "red"
        };
        function Et(Nt, Wt) {
          var Xt = pt.styles[Wt];
          return Xt ? "\x1B[" + pt.colors[Xt][0] + "m" + Nt + "\x1B[" + pt.colors[Xt][1] + "m" : Nt;
        }
        function Bt(Nt, Wt) {
          return Nt;
        }
        function St(Nt) {
          var Wt = {};
          return Nt.forEach(function(Xt, rr) {
            Wt[Xt] = true;
          }), Wt;
        }
        function $t(Nt, Wt, Xt) {
          if (Nt.customInspect && Wt && nt(Wt.inspect) && Wt.inspect !== d.inspect && !(Wt.constructor && Wt.constructor.prototype === Wt)) {
            var rr = Wt.inspect(Xt, Nt);
            return Kt(rr) || (rr = $t(Nt, rr, Xt)), rr;
          }
          var Gt = kt(Nt, Wt);
          if (Gt) return Gt;
          var Yt = Object.keys(Wt), tr = St(Yt);
          if (Nt.showHidden && (Yt = Object.getOwnPropertyNames(Wt)), tt(Wt) && (Yt.indexOf("message") >= 0 || Yt.indexOf("description") >= 0)) return Tt(Wt);
          if (Yt.length === 0) {
            if (nt(Wt)) {
              var cr = Wt.name ? ": " + Wt.name : "";
              return Nt.stylize("[Function" + cr + "]", "special");
            }
            if (er(Wt)) return Nt.stylize(RegExp.prototype.toString.call(Wt), "regexp");
            if (xt(Wt)) return Nt.stylize(Date.prototype.toString.call(Wt), "date");
            if (tt(Wt)) return Tt(Wt);
          }
          var ir = "", Jt = false, vr = [
            "{",
            "}"
          ];
          if (Dt(Wt) && (Jt = true, vr = [
            "[",
            "]"
          ]), nt(Wt)) {
            var Br = Wt.name ? ": " + Wt.name : "";
            ir = " [Function" + Br + "]";
          }
          if (er(Wt) && (ir = " " + RegExp.prototype.toString.call(Wt)), xt(Wt) && (ir = " " + Date.prototype.toUTCString.call(Wt)), tt(Wt) && (ir = " " + Tt(Wt)), Yt.length === 0 && (!Jt || Wt.length == 0)) return vr[0] + ir + vr[1];
          if (Xt < 0) return er(Wt) ? Nt.stylize(RegExp.prototype.toString.call(Wt), "regexp") : Nt.stylize("[Object]", "special");
          Nt.seen.push(Wt);
          var _r;
          return Jt ? _r = Pt(Nt, Wt, Xt, tr, Yt) : _r = Yt.map(function($r) {
            return It(Nt, Wt, Xt, tr, $r, Jt);
          }), Nt.seen.pop(), jt(_r, ir, vr);
        }
        function kt(Nt, Wt) {
          if (sr(Wt)) return Nt.stylize("undefined", "undefined");
          if (Kt(Wt)) {
            var Xt = "'" + JSON.stringify(Wt).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
            return Nt.stylize(Xt, "string");
          }
          if (Zt(Wt)) return Nt.stylize("" + Wt, "number");
          if (Ot(Wt)) return Nt.stylize("" + Wt, "boolean");
          if (Ft(Wt)) return Nt.stylize("null", "null");
        }
        function Tt(Nt) {
          return "[" + Error.prototype.toString.call(Nt) + "]";
        }
        function Pt(Nt, Wt, Xt, rr, Gt) {
          for (var Yt = [], tr = 0, cr = Wt.length; tr < cr; ++tr) ut(Wt, String(tr)) ? Yt.push(It(Nt, Wt, Xt, rr, String(tr), true)) : Yt.push("");
          return Gt.forEach(function(ir) {
            ir.match(/^\d+$/) || Yt.push(It(Nt, Wt, Xt, rr, ir, true));
          }), Yt;
        }
        function It(Nt, Wt, Xt, rr, Gt, Yt) {
          var tr, cr, ir;
          if (ir = Object.getOwnPropertyDescriptor(Wt, Gt) || {
            value: Wt[Gt]
          }, ir.get ? ir.set ? cr = Nt.stylize("[Getter/Setter]", "special") : cr = Nt.stylize("[Getter]", "special") : ir.set && (cr = Nt.stylize("[Setter]", "special")), ut(rr, Gt) || (tr = "[" + Gt + "]"), cr || (Nt.seen.indexOf(ir.value) < 0 ? (Ft(Xt) ? cr = $t(Nt, ir.value, null) : cr = $t(Nt, ir.value, Xt - 1), cr.indexOf(`
`) > -1 && (Yt ? cr = cr.split(`
`).map(function(Jt) {
            return "  " + Jt;
          }).join(`
`).slice(2) : cr = `
` + cr.split(`
`).map(function(Jt) {
            return "   " + Jt;
          }).join(`
`))) : cr = Nt.stylize("[Circular]", "special")), sr(tr)) {
            if (Yt && Gt.match(/^\d+$/)) return cr;
            tr = JSON.stringify("" + Gt), tr.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (tr = tr.slice(1, -1), tr = Nt.stylize(tr, "name")) : (tr = tr.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), tr = Nt.stylize(tr, "string"));
          }
          return tr + ": " + cr;
        }
        function jt(Nt, Wt, Xt) {
          var rr = Nt.reduce(function(Gt, Yt) {
            return Yt.indexOf(`
`) >= 0, Gt + Yt.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0);
          return rr > 60 ? Xt[0] + (Wt === "" ? "" : Wt + `
 `) + " " + Nt.join(`,
  `) + " " + Xt[1] : Xt[0] + Wt + " " + Nt.join(", ") + " " + Xt[1];
        }
        d.types = requireTypes();
        function Dt(Nt) {
          return Array.isArray(Nt);
        }
        d.isArray = Dt;
        function Ot(Nt) {
          return typeof Nt == "boolean";
        }
        d.isBoolean = Ot;
        function Ft(Nt) {
          return Nt === null;
        }
        d.isNull = Ft;
        function Lt(Nt) {
          return Nt == null;
        }
        d.isNullOrUndefined = Lt;
        function Zt(Nt) {
          return typeof Nt == "number";
        }
        d.isNumber = Zt;
        function Kt(Nt) {
          return typeof Nt == "string";
        }
        d.isString = Kt;
        function ar(Nt) {
          return typeof Nt == "symbol";
        }
        d.isSymbol = ar;
        function sr(Nt) {
          return Nt === void 0;
        }
        d.isUndefined = sr;
        function er(Nt) {
          return Ut(Nt) && at(Nt) === "[object RegExp]";
        }
        d.isRegExp = er, d.types.isRegExp = er;
        function Ut(Nt) {
          return typeof Nt == "object" && Nt !== null;
        }
        d.isObject = Ut;
        function xt(Nt) {
          return Ut(Nt) && at(Nt) === "[object Date]";
        }
        d.isDate = xt, d.types.isDate = xt;
        function tt(Nt) {
          return Ut(Nt) && (at(Nt) === "[object Error]" || Nt instanceof Error);
        }
        d.isError = tt, d.types.isNativeError = tt;
        function nt(Nt) {
          return typeof Nt == "function";
        }
        d.isFunction = nt;
        function it(Nt) {
          return Nt === null || typeof Nt == "boolean" || typeof Nt == "number" || typeof Nt == "string" || typeof Nt == "symbol" || typeof Nt > "u";
        }
        d.isPrimitive = it, d.isBuffer = requireIsBufferBrowser();
        function at(Nt) {
          return Object.prototype.toString.call(Nt);
        }
        function ct(Nt) {
          return Nt < 10 ? "0" + Nt.toString(10) : Nt.toString(10);
        }
        var Mt = [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec"
        ];
        function At() {
          var Nt = /* @__PURE__ */ new Date(), Wt = [
            ct(Nt.getHours()),
            ct(Nt.getMinutes()),
            ct(Nt.getSeconds())
          ].join(":");
          return [
            Nt.getDate(),
            Mt[Nt.getMonth()],
            Wt
          ].join(" ");
        }
        d.log = function() {
          console.log("%s - %s", At(), d.format.apply(d, arguments));
        }, d.inherits = requireInherits_browser(), d._extend = function(Nt, Wt) {
          if (!Wt || !Ut(Wt)) return Nt;
          for (var Xt = Object.keys(Wt), rr = Xt.length; rr--; ) Nt[Xt[rr]] = Wt[Xt[rr]];
          return Nt;
        };
        function ut(Nt, Wt) {
          return Object.prototype.hasOwnProperty.call(Nt, Wt);
        }
        var ot = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
        d.promisify = function(Wt) {
          if (typeof Wt != "function") throw new TypeError('The "original" argument must be of type Function');
          if (ot && Wt[ot]) {
            var Xt = Wt[ot];
            if (typeof Xt != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(Xt, ot, {
              value: Xt,
              enumerable: false,
              writable: false,
              configurable: true
            }), Xt;
          }
          function Xt() {
            for (var rr, Gt, Yt = new Promise(function(ir, Jt) {
              rr = ir, Gt = Jt;
            }), tr = [], cr = 0; cr < arguments.length; cr++) tr.push(arguments[cr]);
            tr.push(function(ir, Jt) {
              ir ? Gt(ir) : rr(Jt);
            });
            try {
              Wt.apply(this, tr);
            } catch (ir) {
              Gt(ir);
            }
            return Yt;
          }
          return Object.setPrototypeOf(Xt, Object.getPrototypeOf(Wt)), ot && Object.defineProperty(Xt, ot, {
            value: Xt,
            enumerable: false,
            writable: false,
            configurable: true
          }), Object.defineProperties(Xt, $(Wt));
        }, d.promisify.custom = ot;
        function Ct(Nt, Wt) {
          if (!Nt) {
            var Xt = new Error("Promise was rejected with a falsy value");
            Xt.reason = Nt, Nt = Xt;
          }
          return Wt(Nt);
        }
        function Rt(Nt) {
          if (typeof Nt != "function") throw new TypeError('The "original" argument must be of type Function');
          function Wt() {
            for (var Xt = [], rr = 0; rr < arguments.length; rr++) Xt.push(arguments[rr]);
            var Gt = Xt.pop();
            if (typeof Gt != "function") throw new TypeError("The last argument must be of type Function");
            var Yt = this, tr = function() {
              return Gt.apply(Yt, arguments);
            };
            Nt.apply(this, Xt).then(function(cr) {
              process$1.nextTick(tr.bind(null, null, cr));
            }, function(cr) {
              process$1.nextTick(Ct.bind(null, cr, tr));
            });
          }
          return Object.setPrototypeOf(Wt, Object.getPrototypeOf(Nt)), Object.defineProperties(Wt, $(Nt)), Wt;
        }
        d.callbackify = Rt;
      }(util$2)), util$2;
    }
    var buffer_list, hasRequiredBuffer_list;
    function requireBuffer_list() {
      if (hasRequiredBuffer_list) return buffer_list;
      hasRequiredBuffer_list = 1;
      function d(Pt, It) {
        var jt = Object.keys(Pt);
        if (Object.getOwnPropertySymbols) {
          var Dt = Object.getOwnPropertySymbols(Pt);
          It && (Dt = Dt.filter(function(Ot) {
            return Object.getOwnPropertyDescriptor(Pt, Ot).enumerable;
          })), jt.push.apply(jt, Dt);
        }
        return jt;
      }
      function _(Pt) {
        for (var It = 1; It < arguments.length; It++) {
          var jt = arguments[It] != null ? arguments[It] : {};
          It % 2 ? d(Object(jt), true).forEach(function(Dt) {
            $(Pt, Dt, jt[Dt]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Pt, Object.getOwnPropertyDescriptors(jt)) : d(Object(jt)).forEach(function(Dt) {
            Object.defineProperty(Pt, Dt, Object.getOwnPropertyDescriptor(jt, Dt));
          });
        }
        return Pt;
      }
      function $(Pt, It, jt) {
        return It = st(It), It in Pt ? Object.defineProperty(Pt, It, {
          value: jt,
          enumerable: true,
          configurable: true,
          writable: true
        }) : Pt[It] = jt, Pt;
      }
      function j(Pt, It) {
        if (!(Pt instanceof It)) throw new TypeError("Cannot call a class as a function");
      }
      function rt(Pt, It) {
        for (var jt = 0; jt < It.length; jt++) {
          var Dt = It[jt];
          Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(Pt, st(Dt.key), Dt);
        }
      }
      function et(Pt, It, jt) {
        return It && rt(Pt.prototype, It), Object.defineProperty(Pt, "prototype", {
          writable: false
        }), Pt;
      }
      function st(Pt) {
        var It = pt(Pt, "string");
        return typeof It == "symbol" ? It : String(It);
      }
      function pt(Pt, It) {
        if (typeof Pt != "object" || Pt === null) return Pt;
        var jt = Pt[Symbol.toPrimitive];
        if (jt !== void 0) {
          var Dt = jt.call(Pt, It);
          if (typeof Dt != "object") return Dt;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return String(Pt);
      }
      var Et = require$$0$2, Bt = Et.Buffer, St = requireUtil$1(), $t = St.inspect, kt = $t && $t.custom || "inspect";
      function Tt(Pt, It, jt) {
        Bt.prototype.copy.call(Pt, It, jt);
      }
      return buffer_list = function() {
        function Pt() {
          j(this, Pt), this.head = null, this.tail = null, this.length = 0;
        }
        return et(Pt, [
          {
            key: "push",
            value: function(jt) {
              var Dt = {
                data: jt,
                next: null
              };
              this.length > 0 ? this.tail.next = Dt : this.head = Dt, this.tail = Dt, ++this.length;
            }
          },
          {
            key: "unshift",
            value: function(jt) {
              var Dt = {
                data: jt,
                next: this.head
              };
              this.length === 0 && (this.tail = Dt), this.head = Dt, ++this.length;
            }
          },
          {
            key: "shift",
            value: function() {
              if (this.length !== 0) {
                var jt = this.head.data;
                return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, jt;
              }
            }
          },
          {
            key: "clear",
            value: function() {
              this.head = this.tail = null, this.length = 0;
            }
          },
          {
            key: "join",
            value: function(jt) {
              if (this.length === 0) return "";
              for (var Dt = this.head, Ot = "" + Dt.data; Dt = Dt.next; ) Ot += jt + Dt.data;
              return Ot;
            }
          },
          {
            key: "concat",
            value: function(jt) {
              if (this.length === 0) return Bt.alloc(0);
              for (var Dt = Bt.allocUnsafe(jt >>> 0), Ot = this.head, Ft = 0; Ot; ) Tt(Ot.data, Dt, Ft), Ft += Ot.data.length, Ot = Ot.next;
              return Dt;
            }
          },
          {
            key: "consume",
            value: function(jt, Dt) {
              var Ot;
              return jt < this.head.data.length ? (Ot = this.head.data.slice(0, jt), this.head.data = this.head.data.slice(jt)) : jt === this.head.data.length ? Ot = this.shift() : Ot = Dt ? this._getString(jt) : this._getBuffer(jt), Ot;
            }
          },
          {
            key: "first",
            value: function() {
              return this.head.data;
            }
          },
          {
            key: "_getString",
            value: function(jt) {
              var Dt = this.head, Ot = 1, Ft = Dt.data;
              for (jt -= Ft.length; Dt = Dt.next; ) {
                var Lt = Dt.data, Zt = jt > Lt.length ? Lt.length : jt;
                if (Zt === Lt.length ? Ft += Lt : Ft += Lt.slice(0, jt), jt -= Zt, jt === 0) {
                  Zt === Lt.length ? (++Ot, Dt.next ? this.head = Dt.next : this.head = this.tail = null) : (this.head = Dt, Dt.data = Lt.slice(Zt));
                  break;
                }
                ++Ot;
              }
              return this.length -= Ot, Ft;
            }
          },
          {
            key: "_getBuffer",
            value: function(jt) {
              var Dt = Bt.allocUnsafe(jt), Ot = this.head, Ft = 1;
              for (Ot.data.copy(Dt), jt -= Ot.data.length; Ot = Ot.next; ) {
                var Lt = Ot.data, Zt = jt > Lt.length ? Lt.length : jt;
                if (Lt.copy(Dt, Dt.length - jt, 0, Zt), jt -= Zt, jt === 0) {
                  Zt === Lt.length ? (++Ft, Ot.next ? this.head = Ot.next : this.head = this.tail = null) : (this.head = Ot, Ot.data = Lt.slice(Zt));
                  break;
                }
                ++Ft;
              }
              return this.length -= Ft, Dt;
            }
          },
          {
            key: kt,
            value: function(jt, Dt) {
              return $t(this, _(_({}, Dt), {}, {
                depth: 0,
                customInspect: false
              }));
            }
          }
        ]), Pt;
      }(), buffer_list;
    }
    var destroy_1$1, hasRequiredDestroy$1;
    function requireDestroy$1() {
      if (hasRequiredDestroy$1) return destroy_1$1;
      hasRequiredDestroy$1 = 1;
      function d(st, pt) {
        var Et = this, Bt = this._readableState && this._readableState.destroyed, St = this._writableState && this._writableState.destroyed;
        return Bt || St ? (pt ? pt(st) : st && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process$1.nextTick(rt, this, st)) : process$1.nextTick(rt, this, st)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(st || null, function($t) {
          !pt && $t ? Et._writableState ? Et._writableState.errorEmitted ? process$1.nextTick($, Et) : (Et._writableState.errorEmitted = true, process$1.nextTick(_, Et, $t)) : process$1.nextTick(_, Et, $t) : pt ? (process$1.nextTick($, Et), pt($t)) : process$1.nextTick($, Et);
        }), this);
      }
      function _(st, pt) {
        rt(st, pt), $(st);
      }
      function $(st) {
        st._writableState && !st._writableState.emitClose || st._readableState && !st._readableState.emitClose || st.emit("close");
      }
      function j() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      }
      function rt(st, pt) {
        st.emit("error", pt);
      }
      function et(st, pt) {
        var Et = st._readableState, Bt = st._writableState;
        Et && Et.autoDestroy || Bt && Bt.autoDestroy ? st.destroy(pt) : st.emit("error", pt);
      }
      return destroy_1$1 = {
        destroy: d,
        undestroy: j,
        errorOrDestroy: et
      }, destroy_1$1;
    }
    var errorsBrowser = {}, hasRequiredErrorsBrowser;
    function requireErrorsBrowser() {
      if (hasRequiredErrorsBrowser) return errorsBrowser;
      hasRequiredErrorsBrowser = 1;
      function d(pt, Et) {
        pt.prototype = Object.create(Et.prototype), pt.prototype.constructor = pt, pt.__proto__ = Et;
      }
      var _ = {};
      function $(pt, Et, Bt) {
        Bt || (Bt = Error);
        function St(kt, Tt, Pt) {
          return typeof Et == "string" ? Et : Et(kt, Tt, Pt);
        }
        var $t = function(kt) {
          d(Tt, kt);
          function Tt(Pt, It, jt) {
            return kt.call(this, St(Pt, It, jt)) || this;
          }
          return Tt;
        }(Bt);
        $t.prototype.name = Bt.name, $t.prototype.code = pt, _[pt] = $t;
      }
      function j(pt, Et) {
        if (Array.isArray(pt)) {
          var Bt = pt.length;
          return pt = pt.map(function(St) {
            return String(St);
          }), Bt > 2 ? "one of ".concat(Et, " ").concat(pt.slice(0, Bt - 1).join(", "), ", or ") + pt[Bt - 1] : Bt === 2 ? "one of ".concat(Et, " ").concat(pt[0], " or ").concat(pt[1]) : "of ".concat(Et, " ").concat(pt[0]);
        } else return "of ".concat(Et, " ").concat(String(pt));
      }
      function rt(pt, Et, Bt) {
        return pt.substr(0, Et.length) === Et;
      }
      function et(pt, Et, Bt) {
        return (Bt === void 0 || Bt > pt.length) && (Bt = pt.length), pt.substring(Bt - Et.length, Bt) === Et;
      }
      function st(pt, Et, Bt) {
        return typeof Bt != "number" && (Bt = 0), Bt + Et.length > pt.length ? false : pt.indexOf(Et, Bt) !== -1;
      }
      return $("ERR_INVALID_OPT_VALUE", function(pt, Et) {
        return 'The value "' + Et + '" is invalid for option "' + pt + '"';
      }, TypeError), $("ERR_INVALID_ARG_TYPE", function(pt, Et, Bt) {
        var St;
        typeof Et == "string" && rt(Et, "not ") ? (St = "must not be", Et = Et.replace(/^not /, "")) : St = "must be";
        var $t;
        if (et(pt, " argument")) $t = "The ".concat(pt, " ").concat(St, " ").concat(j(Et, "type"));
        else {
          var kt = st(pt, ".") ? "property" : "argument";
          $t = 'The "'.concat(pt, '" ').concat(kt, " ").concat(St, " ").concat(j(Et, "type"));
        }
        return $t += ". Received type ".concat(typeof Bt), $t;
      }, TypeError), $("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), $("ERR_METHOD_NOT_IMPLEMENTED", function(pt) {
        return "The " + pt + " method is not implemented";
      }), $("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), $("ERR_STREAM_DESTROYED", function(pt) {
        return "Cannot call " + pt + " after a stream was destroyed";
      }), $("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), $("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), $("ERR_STREAM_WRITE_AFTER_END", "write after end"), $("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), $("ERR_UNKNOWN_ENCODING", function(pt) {
        return "Unknown encoding: " + pt;
      }, TypeError), $("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), errorsBrowser.codes = _, errorsBrowser;
    }
    var state, hasRequiredState;
    function requireState() {
      if (hasRequiredState) return state;
      hasRequiredState = 1;
      var d = requireErrorsBrowser().codes.ERR_INVALID_OPT_VALUE;
      function _(j, rt, et) {
        return j.highWaterMark != null ? j.highWaterMark : rt ? j[et] : null;
      }
      function $(j, rt, et, st) {
        var pt = _(rt, st, et);
        if (pt != null) {
          if (!(isFinite(pt) && Math.floor(pt) === pt) || pt < 0) {
            var Et = st ? et : "highWaterMark";
            throw new d(Et, pt);
          }
          return Math.floor(pt);
        }
        return j.objectMode ? 16 : 16 * 1024;
      }
      return state = {
        getHighWaterMark: $
      }, state;
    }
    var browser$d, hasRequiredBrowser$a;
    function requireBrowser$a() {
      if (hasRequiredBrowser$a) return browser$d;
      hasRequiredBrowser$a = 1, browser$d = d;
      function d($, j) {
        if (_("noDeprecation")) return $;
        var rt = false;
        function et() {
          if (!rt) {
            if (_("throwDeprecation")) throw new Error(j);
            _("traceDeprecation") ? console.trace(j) : console.warn(j), rt = true;
          }
          return $.apply(this, arguments);
        }
        return et;
      }
      function _($) {
        try {
          if (!commonjsGlobal.localStorage) return false;
        } catch {
          return false;
        }
        var j = commonjsGlobal.localStorage[$];
        return j == null ? false : String(j).toLowerCase() === "true";
      }
      return browser$d;
    }
    var _stream_writable$1, hasRequired_stream_writable$1;
    function require_stream_writable$1() {
      if (hasRequired_stream_writable$1) return _stream_writable$1;
      hasRequired_stream_writable$1 = 1, _stream_writable$1 = sr;
      function d(rr) {
        var Gt = this;
        this.next = null, this.entry = null, this.finish = function() {
          Xt(Gt, rr);
        };
      }
      var _;
      sr.WritableState = Kt;
      var $ = {
        deprecate: requireBrowser$a()
      }, j = requireStreamBrowser$1(), rt = require$$0$2.Buffer, et = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
      };
      function st(rr) {
        return rt.from(rr);
      }
      function pt(rr) {
        return rt.isBuffer(rr) || rr instanceof et;
      }
      var Et = requireDestroy$1(), Bt = requireState(), St = Bt.getHighWaterMark, $t = requireErrorsBrowser().codes, kt = $t.ERR_INVALID_ARG_TYPE, Tt = $t.ERR_METHOD_NOT_IMPLEMENTED, Pt = $t.ERR_MULTIPLE_CALLBACK, It = $t.ERR_STREAM_CANNOT_PIPE, jt = $t.ERR_STREAM_DESTROYED, Dt = $t.ERR_STREAM_NULL_VALUES, Ot = $t.ERR_STREAM_WRITE_AFTER_END, Ft = $t.ERR_UNKNOWN_ENCODING, Lt = Et.errorOrDestroy;
      requireInherits_browser()(sr, j);
      function Zt() {
      }
      function Kt(rr, Gt, Yt) {
        _ = _ || require_stream_duplex$1(), rr = rr || {}, typeof Yt != "boolean" && (Yt = Gt instanceof _), this.objectMode = !!rr.objectMode, Yt && (this.objectMode = this.objectMode || !!rr.writableObjectMode), this.highWaterMark = St(this, rr, "writableHighWaterMark", Yt), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
        var tr = rr.decodeStrings === false;
        this.decodeStrings = !tr, this.defaultEncoding = rr.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(cr) {
          ct(Gt, cr);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = rr.emitClose !== false, this.autoDestroy = !!rr.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new d(this);
      }
      Kt.prototype.getBuffer = function() {
        for (var Gt = this.bufferedRequest, Yt = []; Gt; ) Yt.push(Gt), Gt = Gt.next;
        return Yt;
      }, function() {
        try {
          Object.defineProperty(Kt.prototype, "buffer", {
            get: $.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch {
        }
      }();
      var ar;
      typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (ar = Function.prototype[Symbol.hasInstance], Object.defineProperty(sr, Symbol.hasInstance, {
        value: function(Gt) {
          return ar.call(this, Gt) ? true : this !== sr ? false : Gt && Gt._writableState instanceof Kt;
        }
      })) : ar = function(Gt) {
        return Gt instanceof this;
      };
      function sr(rr) {
        _ = _ || require_stream_duplex$1();
        var Gt = this instanceof _;
        if (!Gt && !ar.call(sr, this)) return new sr(rr);
        this._writableState = new Kt(rr, this, Gt), this.writable = true, rr && (typeof rr.write == "function" && (this._write = rr.write), typeof rr.writev == "function" && (this._writev = rr.writev), typeof rr.destroy == "function" && (this._destroy = rr.destroy), typeof rr.final == "function" && (this._final = rr.final)), j.call(this);
      }
      sr.prototype.pipe = function() {
        Lt(this, new It());
      };
      function er(rr, Gt) {
        var Yt = new Ot();
        Lt(rr, Yt), process$1.nextTick(Gt, Yt);
      }
      function Ut(rr, Gt, Yt, tr) {
        var cr;
        return Yt === null ? cr = new Dt() : typeof Yt != "string" && !Gt.objectMode && (cr = new kt("chunk", [
          "string",
          "Buffer"
        ], Yt)), cr ? (Lt(rr, cr), process$1.nextTick(tr, cr), false) : true;
      }
      sr.prototype.write = function(rr, Gt, Yt) {
        var tr = this._writableState, cr = false, ir = !tr.objectMode && pt(rr);
        return ir && !rt.isBuffer(rr) && (rr = st(rr)), typeof Gt == "function" && (Yt = Gt, Gt = null), ir ? Gt = "buffer" : Gt || (Gt = tr.defaultEncoding), typeof Yt != "function" && (Yt = Zt), tr.ending ? er(this, Yt) : (ir || Ut(this, tr, rr, Yt)) && (tr.pendingcb++, cr = tt(this, tr, ir, rr, Gt, Yt)), cr;
      }, sr.prototype.cork = function() {
        this._writableState.corked++;
      }, sr.prototype.uncork = function() {
        var rr = this._writableState;
        rr.corked && (rr.corked--, !rr.writing && !rr.corked && !rr.bufferProcessing && rr.bufferedRequest && ut(this, rr));
      }, sr.prototype.setDefaultEncoding = function(Gt) {
        if (typeof Gt == "string" && (Gt = Gt.toLowerCase()), !([
          "hex",
          "utf8",
          "utf-8",
          "ascii",
          "binary",
          "base64",
          "ucs2",
          "ucs-2",
          "utf16le",
          "utf-16le",
          "raw"
        ].indexOf((Gt + "").toLowerCase()) > -1)) throw new Ft(Gt);
        return this._writableState.defaultEncoding = Gt, this;
      }, Object.defineProperty(sr.prototype, "writableBuffer", {
        enumerable: false,
        get: function() {
          return this._writableState && this._writableState.getBuffer();
        }
      });
      function xt(rr, Gt, Yt) {
        return !rr.objectMode && rr.decodeStrings !== false && typeof Gt == "string" && (Gt = rt.from(Gt, Yt)), Gt;
      }
      Object.defineProperty(sr.prototype, "writableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark;
        }
      });
      function tt(rr, Gt, Yt, tr, cr, ir) {
        if (!Yt) {
          var Jt = xt(Gt, tr, cr);
          tr !== Jt && (Yt = true, cr = "buffer", tr = Jt);
        }
        var vr = Gt.objectMode ? 1 : tr.length;
        Gt.length += vr;
        var Br = Gt.length < Gt.highWaterMark;
        if (Br || (Gt.needDrain = true), Gt.writing || Gt.corked) {
          var _r = Gt.lastBufferedRequest;
          Gt.lastBufferedRequest = {
            chunk: tr,
            encoding: cr,
            isBuf: Yt,
            callback: ir,
            next: null
          }, _r ? _r.next = Gt.lastBufferedRequest : Gt.bufferedRequest = Gt.lastBufferedRequest, Gt.bufferedRequestCount += 1;
        } else nt(rr, Gt, false, vr, tr, cr, ir);
        return Br;
      }
      function nt(rr, Gt, Yt, tr, cr, ir, Jt) {
        Gt.writelen = tr, Gt.writecb = Jt, Gt.writing = true, Gt.sync = true, Gt.destroyed ? Gt.onwrite(new jt("write")) : Yt ? rr._writev(cr, Gt.onwrite) : rr._write(cr, ir, Gt.onwrite), Gt.sync = false;
      }
      function it(rr, Gt, Yt, tr, cr) {
        --Gt.pendingcb, Yt ? (process$1.nextTick(cr, tr), process$1.nextTick(Nt, rr, Gt), rr._writableState.errorEmitted = true, Lt(rr, tr)) : (cr(tr), rr._writableState.errorEmitted = true, Lt(rr, tr), Nt(rr, Gt));
      }
      function at(rr) {
        rr.writing = false, rr.writecb = null, rr.length -= rr.writelen, rr.writelen = 0;
      }
      function ct(rr, Gt) {
        var Yt = rr._writableState, tr = Yt.sync, cr = Yt.writecb;
        if (typeof cr != "function") throw new Pt();
        if (at(Yt), Gt) it(rr, Yt, tr, Gt, cr);
        else {
          var ir = ot(Yt) || rr.destroyed;
          !ir && !Yt.corked && !Yt.bufferProcessing && Yt.bufferedRequest && ut(rr, Yt), tr ? process$1.nextTick(Mt, rr, Yt, ir, cr) : Mt(rr, Yt, ir, cr);
        }
      }
      function Mt(rr, Gt, Yt, tr) {
        Yt || At(rr, Gt), Gt.pendingcb--, tr(), Nt(rr, Gt);
      }
      function At(rr, Gt) {
        Gt.length === 0 && Gt.needDrain && (Gt.needDrain = false, rr.emit("drain"));
      }
      function ut(rr, Gt) {
        Gt.bufferProcessing = true;
        var Yt = Gt.bufferedRequest;
        if (rr._writev && Yt && Yt.next) {
          var tr = Gt.bufferedRequestCount, cr = new Array(tr), ir = Gt.corkedRequestsFree;
          ir.entry = Yt;
          for (var Jt = 0, vr = true; Yt; ) cr[Jt] = Yt, Yt.isBuf || (vr = false), Yt = Yt.next, Jt += 1;
          cr.allBuffers = vr, nt(rr, Gt, true, Gt.length, cr, "", ir.finish), Gt.pendingcb++, Gt.lastBufferedRequest = null, ir.next ? (Gt.corkedRequestsFree = ir.next, ir.next = null) : Gt.corkedRequestsFree = new d(Gt), Gt.bufferedRequestCount = 0;
        } else {
          for (; Yt; ) {
            var Br = Yt.chunk, _r = Yt.encoding, $r = Yt.callback, Ur = Gt.objectMode ? 1 : Br.length;
            if (nt(rr, Gt, false, Ur, Br, _r, $r), Yt = Yt.next, Gt.bufferedRequestCount--, Gt.writing) break;
          }
          Yt === null && (Gt.lastBufferedRequest = null);
        }
        Gt.bufferedRequest = Yt, Gt.bufferProcessing = false;
      }
      sr.prototype._write = function(rr, Gt, Yt) {
        Yt(new Tt("_write()"));
      }, sr.prototype._writev = null, sr.prototype.end = function(rr, Gt, Yt) {
        var tr = this._writableState;
        return typeof rr == "function" ? (Yt = rr, rr = null, Gt = null) : typeof Gt == "function" && (Yt = Gt, Gt = null), rr != null && this.write(rr, Gt), tr.corked && (tr.corked = 1, this.uncork()), tr.ending || Wt(this, tr, Yt), this;
      }, Object.defineProperty(sr.prototype, "writableLength", {
        enumerable: false,
        get: function() {
          return this._writableState.length;
        }
      });
      function ot(rr) {
        return rr.ending && rr.length === 0 && rr.bufferedRequest === null && !rr.finished && !rr.writing;
      }
      function Ct(rr, Gt) {
        rr._final(function(Yt) {
          Gt.pendingcb--, Yt && Lt(rr, Yt), Gt.prefinished = true, rr.emit("prefinish"), Nt(rr, Gt);
        });
      }
      function Rt(rr, Gt) {
        !Gt.prefinished && !Gt.finalCalled && (typeof rr._final == "function" && !Gt.destroyed ? (Gt.pendingcb++, Gt.finalCalled = true, process$1.nextTick(Ct, rr, Gt)) : (Gt.prefinished = true, rr.emit("prefinish")));
      }
      function Nt(rr, Gt) {
        var Yt = ot(Gt);
        if (Yt && (Rt(rr, Gt), Gt.pendingcb === 0 && (Gt.finished = true, rr.emit("finish"), Gt.autoDestroy))) {
          var tr = rr._readableState;
          (!tr || tr.autoDestroy && tr.endEmitted) && rr.destroy();
        }
        return Yt;
      }
      function Wt(rr, Gt, Yt) {
        Gt.ending = true, Nt(rr, Gt), Yt && (Gt.finished ? process$1.nextTick(Yt) : rr.once("finish", Yt)), Gt.ended = true, rr.writable = false;
      }
      function Xt(rr, Gt, Yt) {
        var tr = rr.entry;
        for (rr.entry = null; tr; ) {
          var cr = tr.callback;
          Gt.pendingcb--, cr(Yt), tr = tr.next;
        }
        Gt.corkedRequestsFree.next = rr;
      }
      return Object.defineProperty(sr.prototype, "destroyed", {
        enumerable: false,
        get: function() {
          return this._writableState === void 0 ? false : this._writableState.destroyed;
        },
        set: function(Gt) {
          this._writableState && (this._writableState.destroyed = Gt);
        }
      }), sr.prototype.destroy = Et.destroy, sr.prototype._undestroy = Et.undestroy, sr.prototype._destroy = function(rr, Gt) {
        Gt(rr);
      }, _stream_writable$1;
    }
    var _stream_duplex$1, hasRequired_stream_duplex$1;
    function require_stream_duplex$1() {
      if (hasRequired_stream_duplex$1) return _stream_duplex$1;
      hasRequired_stream_duplex$1 = 1;
      var d = Object.keys || function(Bt) {
        var St = [];
        for (var $t in Bt) St.push($t);
        return St;
      };
      _stream_duplex$1 = st;
      var _ = require_stream_readable$1(), $ = require_stream_writable$1();
      requireInherits_browser()(st, _);
      for (var j = d($.prototype), rt = 0; rt < j.length; rt++) {
        var et = j[rt];
        st.prototype[et] || (st.prototype[et] = $.prototype[et]);
      }
      function st(Bt) {
        if (!(this instanceof st)) return new st(Bt);
        _.call(this, Bt), $.call(this, Bt), this.allowHalfOpen = true, Bt && (Bt.readable === false && (this.readable = false), Bt.writable === false && (this.writable = false), Bt.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", pt)));
      }
      Object.defineProperty(st.prototype, "writableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark;
        }
      }), Object.defineProperty(st.prototype, "writableBuffer", {
        enumerable: false,
        get: function() {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(st.prototype, "writableLength", {
        enumerable: false,
        get: function() {
          return this._writableState.length;
        }
      });
      function pt() {
        this._writableState.ended || process$1.nextTick(Et, this);
      }
      function Et(Bt) {
        Bt.end();
      }
      return Object.defineProperty(st.prototype, "destroyed", {
        enumerable: false,
        get: function() {
          return this._readableState === void 0 || this._writableState === void 0 ? false : this._readableState.destroyed && this._writableState.destroyed;
        },
        set: function(St) {
          this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = St, this._writableState.destroyed = St);
        }
      }), _stream_duplex$1;
    }
    var string_decoder = {}, hasRequiredString_decoder;
    function requireString_decoder() {
      if (hasRequiredString_decoder) return string_decoder;
      hasRequiredString_decoder = 1;
      var d = requireSafeBuffer$1().Buffer, _ = d.isEncoding || function(Dt) {
        switch (Dt = "" + Dt, Dt && Dt.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function $(Dt) {
        if (!Dt) return "utf8";
        for (var Ot; ; ) switch (Dt) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return Dt;
          default:
            if (Ot) return;
            Dt = ("" + Dt).toLowerCase(), Ot = true;
        }
      }
      function j(Dt) {
        var Ot = $(Dt);
        if (typeof Ot != "string" && (d.isEncoding === _ || !_(Dt))) throw new Error("Unknown encoding: " + Dt);
        return Ot || Dt;
      }
      string_decoder.StringDecoder = rt;
      function rt(Dt) {
        this.encoding = j(Dt);
        var Ot;
        switch (this.encoding) {
          case "utf16le":
            this.text = $t, this.end = kt, Ot = 4;
            break;
          case "utf8":
            this.fillLast = Et, Ot = 4;
            break;
          case "base64":
            this.text = Tt, this.end = Pt, Ot = 3;
            break;
          default:
            this.write = It, this.end = jt;
            return;
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = d.allocUnsafe(Ot);
      }
      rt.prototype.write = function(Dt) {
        if (Dt.length === 0) return "";
        var Ot, Ft;
        if (this.lastNeed) {
          if (Ot = this.fillLast(Dt), Ot === void 0) return "";
          Ft = this.lastNeed, this.lastNeed = 0;
        } else Ft = 0;
        return Ft < Dt.length ? Ot ? Ot + this.text(Dt, Ft) : this.text(Dt, Ft) : Ot || "";
      }, rt.prototype.end = St, rt.prototype.text = Bt, rt.prototype.fillLast = function(Dt) {
        if (this.lastNeed <= Dt.length) return Dt.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        Dt.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, Dt.length), this.lastNeed -= Dt.length;
      };
      function et(Dt) {
        return Dt <= 127 ? 0 : Dt >> 5 === 6 ? 2 : Dt >> 4 === 14 ? 3 : Dt >> 3 === 30 ? 4 : Dt >> 6 === 2 ? -1 : -2;
      }
      function st(Dt, Ot, Ft) {
        var Lt = Ot.length - 1;
        if (Lt < Ft) return 0;
        var Zt = et(Ot[Lt]);
        return Zt >= 0 ? (Zt > 0 && (Dt.lastNeed = Zt - 1), Zt) : --Lt < Ft || Zt === -2 ? 0 : (Zt = et(Ot[Lt]), Zt >= 0 ? (Zt > 0 && (Dt.lastNeed = Zt - 2), Zt) : --Lt < Ft || Zt === -2 ? 0 : (Zt = et(Ot[Lt]), Zt >= 0 ? (Zt > 0 && (Zt === 2 ? Zt = 0 : Dt.lastNeed = Zt - 3), Zt) : 0));
      }
      function pt(Dt, Ot, Ft) {
        if ((Ot[0] & 192) !== 128) return Dt.lastNeed = 0, "\uFFFD";
        if (Dt.lastNeed > 1 && Ot.length > 1) {
          if ((Ot[1] & 192) !== 128) return Dt.lastNeed = 1, "\uFFFD";
          if (Dt.lastNeed > 2 && Ot.length > 2 && (Ot[2] & 192) !== 128) return Dt.lastNeed = 2, "\uFFFD";
        }
      }
      function Et(Dt) {
        var Ot = this.lastTotal - this.lastNeed, Ft = pt(this, Dt);
        if (Ft !== void 0) return Ft;
        if (this.lastNeed <= Dt.length) return Dt.copy(this.lastChar, Ot, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        Dt.copy(this.lastChar, Ot, 0, Dt.length), this.lastNeed -= Dt.length;
      }
      function Bt(Dt, Ot) {
        var Ft = st(this, Dt, Ot);
        if (!this.lastNeed) return Dt.toString("utf8", Ot);
        this.lastTotal = Ft;
        var Lt = Dt.length - (Ft - this.lastNeed);
        return Dt.copy(this.lastChar, 0, Lt), Dt.toString("utf8", Ot, Lt);
      }
      function St(Dt) {
        var Ot = Dt && Dt.length ? this.write(Dt) : "";
        return this.lastNeed ? Ot + "\uFFFD" : Ot;
      }
      function $t(Dt, Ot) {
        if ((Dt.length - Ot) % 2 === 0) {
          var Ft = Dt.toString("utf16le", Ot);
          if (Ft) {
            var Lt = Ft.charCodeAt(Ft.length - 1);
            if (Lt >= 55296 && Lt <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = Dt[Dt.length - 2], this.lastChar[1] = Dt[Dt.length - 1], Ft.slice(0, -1);
          }
          return Ft;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = Dt[Dt.length - 1], Dt.toString("utf16le", Ot, Dt.length - 1);
      }
      function kt(Dt) {
        var Ot = Dt && Dt.length ? this.write(Dt) : "";
        if (this.lastNeed) {
          var Ft = this.lastTotal - this.lastNeed;
          return Ot + this.lastChar.toString("utf16le", 0, Ft);
        }
        return Ot;
      }
      function Tt(Dt, Ot) {
        var Ft = (Dt.length - Ot) % 3;
        return Ft === 0 ? Dt.toString("base64", Ot) : (this.lastNeed = 3 - Ft, this.lastTotal = 3, Ft === 1 ? this.lastChar[0] = Dt[Dt.length - 1] : (this.lastChar[0] = Dt[Dt.length - 2], this.lastChar[1] = Dt[Dt.length - 1]), Dt.toString("base64", Ot, Dt.length - Ft));
      }
      function Pt(Dt) {
        var Ot = Dt && Dt.length ? this.write(Dt) : "";
        return this.lastNeed ? Ot + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : Ot;
      }
      function It(Dt) {
        return Dt.toString(this.encoding);
      }
      function jt(Dt) {
        return Dt && Dt.length ? this.write(Dt) : "";
      }
      return string_decoder;
    }
    var endOfStream, hasRequiredEndOfStream;
    function requireEndOfStream() {
      if (hasRequiredEndOfStream) return endOfStream;
      hasRequiredEndOfStream = 1;
      var d = requireErrorsBrowser().codes.ERR_STREAM_PREMATURE_CLOSE;
      function _(et) {
        var st = false;
        return function() {
          if (!st) {
            st = true;
            for (var pt = arguments.length, Et = new Array(pt), Bt = 0; Bt < pt; Bt++) Et[Bt] = arguments[Bt];
            et.apply(this, Et);
          }
        };
      }
      function $() {
      }
      function j(et) {
        return et.setHeader && typeof et.abort == "function";
      }
      function rt(et, st, pt) {
        if (typeof st == "function") return rt(et, null, st);
        st || (st = {}), pt = _(pt || $);
        var Et = st.readable || st.readable !== false && et.readable, Bt = st.writable || st.writable !== false && et.writable, St = function() {
          et.writable || kt();
        }, $t = et._writableState && et._writableState.finished, kt = function() {
          Bt = false, $t = true, Et || pt.call(et);
        }, Tt = et._readableState && et._readableState.endEmitted, Pt = function() {
          Et = false, Tt = true, Bt || pt.call(et);
        }, It = function(Ft) {
          pt.call(et, Ft);
        }, jt = function() {
          var Ft;
          if (Et && !Tt) return (!et._readableState || !et._readableState.ended) && (Ft = new d()), pt.call(et, Ft);
          if (Bt && !$t) return (!et._writableState || !et._writableState.ended) && (Ft = new d()), pt.call(et, Ft);
        }, Dt = function() {
          et.req.on("finish", kt);
        };
        return j(et) ? (et.on("complete", kt), et.on("abort", jt), et.req ? Dt() : et.on("request", Dt)) : Bt && !et._writableState && (et.on("end", St), et.on("close", St)), et.on("end", Pt), et.on("finish", kt), st.error !== false && et.on("error", It), et.on("close", jt), function() {
          et.removeListener("complete", kt), et.removeListener("abort", jt), et.removeListener("request", Dt), et.req && et.req.removeListener("finish", kt), et.removeListener("end", St), et.removeListener("close", St), et.removeListener("finish", kt), et.removeListener("end", Pt), et.removeListener("error", It), et.removeListener("close", jt);
        };
      }
      return endOfStream = rt, endOfStream;
    }
    var async_iterator, hasRequiredAsync_iterator;
    function requireAsync_iterator() {
      if (hasRequiredAsync_iterator) return async_iterator;
      hasRequiredAsync_iterator = 1;
      var d;
      function _(Ft, Lt, Zt) {
        return Lt = $(Lt), Lt in Ft ? Object.defineProperty(Ft, Lt, {
          value: Zt,
          enumerable: true,
          configurable: true,
          writable: true
        }) : Ft[Lt] = Zt, Ft;
      }
      function $(Ft) {
        var Lt = j(Ft, "string");
        return typeof Lt == "symbol" ? Lt : String(Lt);
      }
      function j(Ft, Lt) {
        if (typeof Ft != "object" || Ft === null) return Ft;
        var Zt = Ft[Symbol.toPrimitive];
        if (Zt !== void 0) {
          var Kt = Zt.call(Ft, Lt);
          if (typeof Kt != "object") return Kt;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (Lt === "string" ? String : Number)(Ft);
      }
      var rt = requireEndOfStream(), et = Symbol("lastResolve"), st = Symbol("lastReject"), pt = Symbol("error"), Et = Symbol("ended"), Bt = Symbol("lastPromise"), St = Symbol("handlePromise"), $t = Symbol("stream");
      function kt(Ft, Lt) {
        return {
          value: Ft,
          done: Lt
        };
      }
      function Tt(Ft) {
        var Lt = Ft[et];
        if (Lt !== null) {
          var Zt = Ft[$t].read();
          Zt !== null && (Ft[Bt] = null, Ft[et] = null, Ft[st] = null, Lt(kt(Zt, false)));
        }
      }
      function Pt(Ft) {
        process$1.nextTick(Tt, Ft);
      }
      function It(Ft, Lt) {
        return function(Zt, Kt) {
          Ft.then(function() {
            if (Lt[Et]) {
              Zt(kt(void 0, true));
              return;
            }
            Lt[St](Zt, Kt);
          }, Kt);
        };
      }
      var jt = Object.getPrototypeOf(function() {
      }), Dt = Object.setPrototypeOf((d = {
        get stream() {
          return this[$t];
        },
        next: function() {
          var Lt = this, Zt = this[pt];
          if (Zt !== null) return Promise.reject(Zt);
          if (this[Et]) return Promise.resolve(kt(void 0, true));
          if (this[$t].destroyed) return new Promise(function(er, Ut) {
            process$1.nextTick(function() {
              Lt[pt] ? Ut(Lt[pt]) : er(kt(void 0, true));
            });
          });
          var Kt = this[Bt], ar;
          if (Kt) ar = new Promise(It(Kt, this));
          else {
            var sr = this[$t].read();
            if (sr !== null) return Promise.resolve(kt(sr, false));
            ar = new Promise(this[St]);
          }
          return this[Bt] = ar, ar;
        }
      }, _(d, Symbol.asyncIterator, function() {
        return this;
      }), _(d, "return", function() {
        var Lt = this;
        return new Promise(function(Zt, Kt) {
          Lt[$t].destroy(null, function(ar) {
            if (ar) {
              Kt(ar);
              return;
            }
            Zt(kt(void 0, true));
          });
        });
      }), d), jt), Ot = function(Lt) {
        var Zt, Kt = Object.create(Dt, (Zt = {}, _(Zt, $t, {
          value: Lt,
          writable: true
        }), _(Zt, et, {
          value: null,
          writable: true
        }), _(Zt, st, {
          value: null,
          writable: true
        }), _(Zt, pt, {
          value: null,
          writable: true
        }), _(Zt, Et, {
          value: Lt._readableState.endEmitted,
          writable: true
        }), _(Zt, St, {
          value: function(sr, er) {
            var Ut = Kt[$t].read();
            Ut ? (Kt[Bt] = null, Kt[et] = null, Kt[st] = null, sr(kt(Ut, false))) : (Kt[et] = sr, Kt[st] = er);
          },
          writable: true
        }), Zt));
        return Kt[Bt] = null, rt(Lt, function(ar) {
          if (ar && ar.code !== "ERR_STREAM_PREMATURE_CLOSE") {
            var sr = Kt[st];
            sr !== null && (Kt[Bt] = null, Kt[et] = null, Kt[st] = null, sr(ar)), Kt[pt] = ar;
            return;
          }
          var er = Kt[et];
          er !== null && (Kt[Bt] = null, Kt[et] = null, Kt[st] = null, er(kt(void 0, true))), Kt[Et] = true;
        }), Lt.on("readable", Pt.bind(null, Kt)), Kt;
      };
      return async_iterator = Ot, async_iterator;
    }
    var fromBrowser, hasRequiredFromBrowser;
    function requireFromBrowser() {
      return hasRequiredFromBrowser || (hasRequiredFromBrowser = 1, fromBrowser = function() {
        throw new Error("Readable.from is not available in the browser");
      }), fromBrowser;
    }
    var _stream_readable$1, hasRequired_stream_readable$1;
    function require_stream_readable$1() {
      if (hasRequired_stream_readable$1) return _stream_readable$1;
      hasRequired_stream_readable$1 = 1, _stream_readable$1 = er;
      var d;
      er.ReadableState = sr, eventsExports.EventEmitter;
      var _ = function(Jt, vr) {
        return Jt.listeners(vr).length;
      }, $ = requireStreamBrowser$1(), j = require$$0$2.Buffer, rt = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
      };
      function et(ir) {
        return j.from(ir);
      }
      function st(ir) {
        return j.isBuffer(ir) || ir instanceof rt;
      }
      var pt = requireUtil$1(), Et;
      pt && pt.debuglog ? Et = pt.debuglog("stream") : Et = function() {
      };
      var Bt = requireBuffer_list(), St = requireDestroy$1(), $t = requireState(), kt = $t.getHighWaterMark, Tt = requireErrorsBrowser().codes, Pt = Tt.ERR_INVALID_ARG_TYPE, It = Tt.ERR_STREAM_PUSH_AFTER_EOF, jt = Tt.ERR_METHOD_NOT_IMPLEMENTED, Dt = Tt.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Ot, Ft, Lt;
      requireInherits_browser()(er, $);
      var Zt = St.errorOrDestroy, Kt = [
        "error",
        "close",
        "destroy",
        "pause",
        "resume"
      ];
      function ar(ir, Jt, vr) {
        if (typeof ir.prependListener == "function") return ir.prependListener(Jt, vr);
        !ir._events || !ir._events[Jt] ? ir.on(Jt, vr) : Array.isArray(ir._events[Jt]) ? ir._events[Jt].unshift(vr) : ir._events[Jt] = [
          vr,
          ir._events[Jt]
        ];
      }
      function sr(ir, Jt, vr) {
        d = d || require_stream_duplex$1(), ir = ir || {}, typeof vr != "boolean" && (vr = Jt instanceof d), this.objectMode = !!ir.objectMode, vr && (this.objectMode = this.objectMode || !!ir.readableObjectMode), this.highWaterMark = kt(this, ir, "readableHighWaterMark", vr), this.buffer = new Bt(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = ir.emitClose !== false, this.autoDestroy = !!ir.autoDestroy, this.destroyed = false, this.defaultEncoding = ir.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, ir.encoding && (Ot || (Ot = requireString_decoder().StringDecoder), this.decoder = new Ot(ir.encoding), this.encoding = ir.encoding);
      }
      function er(ir) {
        if (d = d || require_stream_duplex$1(), !(this instanceof er)) return new er(ir);
        var Jt = this instanceof d;
        this._readableState = new sr(ir, this, Jt), this.readable = true, ir && (typeof ir.read == "function" && (this._read = ir.read), typeof ir.destroy == "function" && (this._destroy = ir.destroy)), $.call(this);
      }
      Object.defineProperty(er.prototype, "destroyed", {
        enumerable: false,
        get: function() {
          return this._readableState === void 0 ? false : this._readableState.destroyed;
        },
        set: function(Jt) {
          this._readableState && (this._readableState.destroyed = Jt);
        }
      }), er.prototype.destroy = St.destroy, er.prototype._undestroy = St.undestroy, er.prototype._destroy = function(ir, Jt) {
        Jt(ir);
      }, er.prototype.push = function(ir, Jt) {
        var vr = this._readableState, Br;
        return vr.objectMode ? Br = true : typeof ir == "string" && (Jt = Jt || vr.defaultEncoding, Jt !== vr.encoding && (ir = j.from(ir, Jt), Jt = ""), Br = true), Ut(this, ir, Jt, false, Br);
      }, er.prototype.unshift = function(ir) {
        return Ut(this, ir, null, true, false);
      };
      function Ut(ir, Jt, vr, Br, _r) {
        Et("readableAddChunk", Jt);
        var $r = ir._readableState;
        if (Jt === null) $r.reading = false, ct(ir, $r);
        else {
          var Ur;
          if (_r || (Ur = tt($r, Jt)), Ur) Zt(ir, Ur);
          else if ($r.objectMode || Jt && Jt.length > 0) if (typeof Jt != "string" && !$r.objectMode && Object.getPrototypeOf(Jt) !== j.prototype && (Jt = et(Jt)), Br) $r.endEmitted ? Zt(ir, new Dt()) : xt(ir, $r, Jt, true);
          else if ($r.ended) Zt(ir, new It());
          else {
            if ($r.destroyed) return false;
            $r.reading = false, $r.decoder && !vr ? (Jt = $r.decoder.write(Jt), $r.objectMode || Jt.length !== 0 ? xt(ir, $r, Jt, false) : ut(ir, $r)) : xt(ir, $r, Jt, false);
          }
          else Br || ($r.reading = false, ut(ir, $r));
        }
        return !$r.ended && ($r.length < $r.highWaterMark || $r.length === 0);
      }
      function xt(ir, Jt, vr, Br) {
        Jt.flowing && Jt.length === 0 && !Jt.sync ? (Jt.awaitDrain = 0, ir.emit("data", vr)) : (Jt.length += Jt.objectMode ? 1 : vr.length, Br ? Jt.buffer.unshift(vr) : Jt.buffer.push(vr), Jt.needReadable && Mt(ir)), ut(ir, Jt);
      }
      function tt(ir, Jt) {
        var vr;
        return !st(Jt) && typeof Jt != "string" && Jt !== void 0 && !ir.objectMode && (vr = new Pt("chunk", [
          "string",
          "Buffer",
          "Uint8Array"
        ], Jt)), vr;
      }
      er.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      }, er.prototype.setEncoding = function(ir) {
        Ot || (Ot = requireString_decoder().StringDecoder);
        var Jt = new Ot(ir);
        this._readableState.decoder = Jt, this._readableState.encoding = this._readableState.decoder.encoding;
        for (var vr = this._readableState.buffer.head, Br = ""; vr !== null; ) Br += Jt.write(vr.data), vr = vr.next;
        return this._readableState.buffer.clear(), Br !== "" && this._readableState.buffer.push(Br), this._readableState.length = Br.length, this;
      };
      var nt = 1073741824;
      function it(ir) {
        return ir >= nt ? ir = nt : (ir--, ir |= ir >>> 1, ir |= ir >>> 2, ir |= ir >>> 4, ir |= ir >>> 8, ir |= ir >>> 16, ir++), ir;
      }
      function at(ir, Jt) {
        return ir <= 0 || Jt.length === 0 && Jt.ended ? 0 : Jt.objectMode ? 1 : ir !== ir ? Jt.flowing && Jt.length ? Jt.buffer.head.data.length : Jt.length : (ir > Jt.highWaterMark && (Jt.highWaterMark = it(ir)), ir <= Jt.length ? ir : Jt.ended ? Jt.length : (Jt.needReadable = true, 0));
      }
      er.prototype.read = function(ir) {
        Et("read", ir), ir = parseInt(ir, 10);
        var Jt = this._readableState, vr = ir;
        if (ir !== 0 && (Jt.emittedReadable = false), ir === 0 && Jt.needReadable && ((Jt.highWaterMark !== 0 ? Jt.length >= Jt.highWaterMark : Jt.length > 0) || Jt.ended)) return Et("read: emitReadable", Jt.length, Jt.ended), Jt.length === 0 && Jt.ended ? Yt(this) : Mt(this), null;
        if (ir = at(ir, Jt), ir === 0 && Jt.ended) return Jt.length === 0 && Yt(this), null;
        var Br = Jt.needReadable;
        Et("need readable", Br), (Jt.length === 0 || Jt.length - ir < Jt.highWaterMark) && (Br = true, Et("length less than watermark", Br)), Jt.ended || Jt.reading ? (Br = false, Et("reading or ended", Br)) : Br && (Et("do read"), Jt.reading = true, Jt.sync = true, Jt.length === 0 && (Jt.needReadable = true), this._read(Jt.highWaterMark), Jt.sync = false, Jt.reading || (ir = at(vr, Jt)));
        var _r;
        return ir > 0 ? _r = Gt(ir, Jt) : _r = null, _r === null ? (Jt.needReadable = Jt.length <= Jt.highWaterMark, ir = 0) : (Jt.length -= ir, Jt.awaitDrain = 0), Jt.length === 0 && (Jt.ended || (Jt.needReadable = true), vr !== ir && Jt.ended && Yt(this)), _r !== null && this.emit("data", _r), _r;
      };
      function ct(ir, Jt) {
        if (Et("onEofChunk"), !Jt.ended) {
          if (Jt.decoder) {
            var vr = Jt.decoder.end();
            vr && vr.length && (Jt.buffer.push(vr), Jt.length += Jt.objectMode ? 1 : vr.length);
          }
          Jt.ended = true, Jt.sync ? Mt(ir) : (Jt.needReadable = false, Jt.emittedReadable || (Jt.emittedReadable = true, At(ir)));
        }
      }
      function Mt(ir) {
        var Jt = ir._readableState;
        Et("emitReadable", Jt.needReadable, Jt.emittedReadable), Jt.needReadable = false, Jt.emittedReadable || (Et("emitReadable", Jt.flowing), Jt.emittedReadable = true, process$1.nextTick(At, ir));
      }
      function At(ir) {
        var Jt = ir._readableState;
        Et("emitReadable_", Jt.destroyed, Jt.length, Jt.ended), !Jt.destroyed && (Jt.length || Jt.ended) && (ir.emit("readable"), Jt.emittedReadable = false), Jt.needReadable = !Jt.flowing && !Jt.ended && Jt.length <= Jt.highWaterMark, rr(ir);
      }
      function ut(ir, Jt) {
        Jt.readingMore || (Jt.readingMore = true, process$1.nextTick(ot, ir, Jt));
      }
      function ot(ir, Jt) {
        for (; !Jt.reading && !Jt.ended && (Jt.length < Jt.highWaterMark || Jt.flowing && Jt.length === 0); ) {
          var vr = Jt.length;
          if (Et("maybeReadMore read 0"), ir.read(0), vr === Jt.length) break;
        }
        Jt.readingMore = false;
      }
      er.prototype._read = function(ir) {
        Zt(this, new jt("_read()"));
      }, er.prototype.pipe = function(ir, Jt) {
        var vr = this, Br = this._readableState;
        switch (Br.pipesCount) {
          case 0:
            Br.pipes = ir;
            break;
          case 1:
            Br.pipes = [
              Br.pipes,
              ir
            ];
            break;
          default:
            Br.pipes.push(ir);
            break;
        }
        Br.pipesCount += 1, Et("pipe count=%d opts=%j", Br.pipesCount, Jt);
        var _r = (!Jt || Jt.end !== false) && ir !== process$1.stdout && ir !== process$1.stderr, $r = _r ? Sr : fr;
        Br.endEmitted ? process$1.nextTick($r) : vr.once("end", $r), ir.on("unpipe", Ur);
        function Ur(dr, gr) {
          Et("onunpipe"), dr === vr && gr && gr.hasUnpiped === false && (gr.hasUnpiped = true, kr());
        }
        function Sr() {
          Et("onend"), ir.end();
        }
        var Mr = Ct(vr);
        ir.on("drain", Mr);
        var Kr = false;
        function kr() {
          Et("cleanup"), ir.removeListener("close", Tr), ir.removeListener("finish", yr), ir.removeListener("drain", Mr), ir.removeListener("error", Gr), ir.removeListener("unpipe", Ur), vr.removeListener("end", Sr), vr.removeListener("end", fr), vr.removeListener("data", Lr), Kr = true, Br.awaitDrain && (!ir._writableState || ir._writableState.needDrain) && Mr();
        }
        vr.on("data", Lr);
        function Lr(dr) {
          Et("ondata");
          var gr = ir.write(dr);
          Et("dest.write", gr), gr === false && ((Br.pipesCount === 1 && Br.pipes === ir || Br.pipesCount > 1 && cr(Br.pipes, ir) !== -1) && !Kr && (Et("false write response, pause", Br.awaitDrain), Br.awaitDrain++), vr.pause());
        }
        function Gr(dr) {
          Et("onerror", dr), fr(), ir.removeListener("error", Gr), _(ir, "error") === 0 && Zt(ir, dr);
        }
        ar(ir, "error", Gr);
        function Tr() {
          ir.removeListener("finish", yr), fr();
        }
        ir.once("close", Tr);
        function yr() {
          Et("onfinish"), ir.removeListener("close", Tr), fr();
        }
        ir.once("finish", yr);
        function fr() {
          Et("unpipe"), vr.unpipe(ir);
        }
        return ir.emit("pipe", vr), Br.flowing || (Et("pipe resume"), vr.resume()), ir;
      };
      function Ct(ir) {
        return function() {
          var vr = ir._readableState;
          Et("pipeOnDrain", vr.awaitDrain), vr.awaitDrain && vr.awaitDrain--, vr.awaitDrain === 0 && _(ir, "data") && (vr.flowing = true, rr(ir));
        };
      }
      er.prototype.unpipe = function(ir) {
        var Jt = this._readableState, vr = {
          hasUnpiped: false
        };
        if (Jt.pipesCount === 0) return this;
        if (Jt.pipesCount === 1) return ir && ir !== Jt.pipes ? this : (ir || (ir = Jt.pipes), Jt.pipes = null, Jt.pipesCount = 0, Jt.flowing = false, ir && ir.emit("unpipe", this, vr), this);
        if (!ir) {
          var Br = Jt.pipes, _r = Jt.pipesCount;
          Jt.pipes = null, Jt.pipesCount = 0, Jt.flowing = false;
          for (var $r = 0; $r < _r; $r++) Br[$r].emit("unpipe", this, {
            hasUnpiped: false
          });
          return this;
        }
        var Ur = cr(Jt.pipes, ir);
        return Ur === -1 ? this : (Jt.pipes.splice(Ur, 1), Jt.pipesCount -= 1, Jt.pipesCount === 1 && (Jt.pipes = Jt.pipes[0]), ir.emit("unpipe", this, vr), this);
      }, er.prototype.on = function(ir, Jt) {
        var vr = $.prototype.on.call(this, ir, Jt), Br = this._readableState;
        return ir === "data" ? (Br.readableListening = this.listenerCount("readable") > 0, Br.flowing !== false && this.resume()) : ir === "readable" && !Br.endEmitted && !Br.readableListening && (Br.readableListening = Br.needReadable = true, Br.flowing = false, Br.emittedReadable = false, Et("on readable", Br.length, Br.reading), Br.length ? Mt(this) : Br.reading || process$1.nextTick(Nt, this)), vr;
      }, er.prototype.addListener = er.prototype.on, er.prototype.removeListener = function(ir, Jt) {
        var vr = $.prototype.removeListener.call(this, ir, Jt);
        return ir === "readable" && process$1.nextTick(Rt, this), vr;
      }, er.prototype.removeAllListeners = function(ir) {
        var Jt = $.prototype.removeAllListeners.apply(this, arguments);
        return (ir === "readable" || ir === void 0) && process$1.nextTick(Rt, this), Jt;
      };
      function Rt(ir) {
        var Jt = ir._readableState;
        Jt.readableListening = ir.listenerCount("readable") > 0, Jt.resumeScheduled && !Jt.paused ? Jt.flowing = true : ir.listenerCount("data") > 0 && ir.resume();
      }
      function Nt(ir) {
        Et("readable nexttick read 0"), ir.read(0);
      }
      er.prototype.resume = function() {
        var ir = this._readableState;
        return ir.flowing || (Et("resume"), ir.flowing = !ir.readableListening, Wt(this, ir)), ir.paused = false, this;
      };
      function Wt(ir, Jt) {
        Jt.resumeScheduled || (Jt.resumeScheduled = true, process$1.nextTick(Xt, ir, Jt));
      }
      function Xt(ir, Jt) {
        Et("resume", Jt.reading), Jt.reading || ir.read(0), Jt.resumeScheduled = false, ir.emit("resume"), rr(ir), Jt.flowing && !Jt.reading && ir.read(0);
      }
      er.prototype.pause = function() {
        return Et("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Et("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
      };
      function rr(ir) {
        var Jt = ir._readableState;
        for (Et("flow", Jt.flowing); Jt.flowing && ir.read() !== null; ) ;
      }
      er.prototype.wrap = function(ir) {
        var Jt = this, vr = this._readableState, Br = false;
        ir.on("end", function() {
          if (Et("wrapped end"), vr.decoder && !vr.ended) {
            var Ur = vr.decoder.end();
            Ur && Ur.length && Jt.push(Ur);
          }
          Jt.push(null);
        }), ir.on("data", function(Ur) {
          if (Et("wrapped data"), vr.decoder && (Ur = vr.decoder.write(Ur)), !(vr.objectMode && Ur == null) && !(!vr.objectMode && (!Ur || !Ur.length))) {
            var Sr = Jt.push(Ur);
            Sr || (Br = true, ir.pause());
          }
        });
        for (var _r in ir) this[_r] === void 0 && typeof ir[_r] == "function" && (this[_r] = /* @__PURE__ */ function(Sr) {
          return function() {
            return ir[Sr].apply(ir, arguments);
          };
        }(_r));
        for (var $r = 0; $r < Kt.length; $r++) ir.on(Kt[$r], this.emit.bind(this, Kt[$r]));
        return this._read = function(Ur) {
          Et("wrapped _read", Ur), Br && (Br = false, ir.resume());
        }, this;
      }, typeof Symbol == "function" && (er.prototype[Symbol.asyncIterator] = function() {
        return Ft === void 0 && (Ft = requireAsync_iterator()), Ft(this);
      }), Object.defineProperty(er.prototype, "readableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._readableState.highWaterMark;
        }
      }), Object.defineProperty(er.prototype, "readableBuffer", {
        enumerable: false,
        get: function() {
          return this._readableState && this._readableState.buffer;
        }
      }), Object.defineProperty(er.prototype, "readableFlowing", {
        enumerable: false,
        get: function() {
          return this._readableState.flowing;
        },
        set: function(Jt) {
          this._readableState && (this._readableState.flowing = Jt);
        }
      }), er._fromList = Gt, Object.defineProperty(er.prototype, "readableLength", {
        enumerable: false,
        get: function() {
          return this._readableState.length;
        }
      });
      function Gt(ir, Jt) {
        if (Jt.length === 0) return null;
        var vr;
        return Jt.objectMode ? vr = Jt.buffer.shift() : !ir || ir >= Jt.length ? (Jt.decoder ? vr = Jt.buffer.join("") : Jt.buffer.length === 1 ? vr = Jt.buffer.first() : vr = Jt.buffer.concat(Jt.length), Jt.buffer.clear()) : vr = Jt.buffer.consume(ir, Jt.decoder), vr;
      }
      function Yt(ir) {
        var Jt = ir._readableState;
        Et("endReadable", Jt.endEmitted), Jt.endEmitted || (Jt.ended = true, process$1.nextTick(tr, Jt, ir));
      }
      function tr(ir, Jt) {
        if (Et("endReadableNT", ir.endEmitted, ir.length), !ir.endEmitted && ir.length === 0 && (ir.endEmitted = true, Jt.readable = false, Jt.emit("end"), ir.autoDestroy)) {
          var vr = Jt._writableState;
          (!vr || vr.autoDestroy && vr.finished) && Jt.destroy();
        }
      }
      typeof Symbol == "function" && (er.from = function(ir, Jt) {
        return Lt === void 0 && (Lt = requireFromBrowser()), Lt(er, ir, Jt);
      });
      function cr(ir, Jt) {
        for (var vr = 0, Br = ir.length; vr < Br; vr++) if (ir[vr] === Jt) return vr;
        return -1;
      }
      return _stream_readable$1;
    }
    var _stream_transform$1, hasRequired_stream_transform$1;
    function require_stream_transform$1() {
      if (hasRequired_stream_transform$1) return _stream_transform$1;
      hasRequired_stream_transform$1 = 1, _stream_transform$1 = pt;
      var d = requireErrorsBrowser().codes, _ = d.ERR_METHOD_NOT_IMPLEMENTED, $ = d.ERR_MULTIPLE_CALLBACK, j = d.ERR_TRANSFORM_ALREADY_TRANSFORMING, rt = d.ERR_TRANSFORM_WITH_LENGTH_0, et = require_stream_duplex$1();
      requireInherits_browser()(pt, et);
      function st(St, $t) {
        var kt = this._transformState;
        kt.transforming = false;
        var Tt = kt.writecb;
        if (Tt === null) return this.emit("error", new $());
        kt.writechunk = null, kt.writecb = null, $t != null && this.push($t), Tt(St);
        var Pt = this._readableState;
        Pt.reading = false, (Pt.needReadable || Pt.length < Pt.highWaterMark) && this._read(Pt.highWaterMark);
      }
      function pt(St) {
        if (!(this instanceof pt)) return new pt(St);
        et.call(this, St), this._transformState = {
          afterTransform: st.bind(this),
          needTransform: false,
          transforming: false,
          writecb: null,
          writechunk: null,
          writeencoding: null
        }, this._readableState.needReadable = true, this._readableState.sync = false, St && (typeof St.transform == "function" && (this._transform = St.transform), typeof St.flush == "function" && (this._flush = St.flush)), this.on("prefinish", Et);
      }
      function Et() {
        var St = this;
        typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function($t, kt) {
          Bt(St, $t, kt);
        }) : Bt(this, null, null);
      }
      pt.prototype.push = function(St, $t) {
        return this._transformState.needTransform = false, et.prototype.push.call(this, St, $t);
      }, pt.prototype._transform = function(St, $t, kt) {
        kt(new _("_transform()"));
      }, pt.prototype._write = function(St, $t, kt) {
        var Tt = this._transformState;
        if (Tt.writecb = kt, Tt.writechunk = St, Tt.writeencoding = $t, !Tt.transforming) {
          var Pt = this._readableState;
          (Tt.needTransform || Pt.needReadable || Pt.length < Pt.highWaterMark) && this._read(Pt.highWaterMark);
        }
      }, pt.prototype._read = function(St) {
        var $t = this._transformState;
        $t.writechunk !== null && !$t.transforming ? ($t.transforming = true, this._transform($t.writechunk, $t.writeencoding, $t.afterTransform)) : $t.needTransform = true;
      }, pt.prototype._destroy = function(St, $t) {
        et.prototype._destroy.call(this, St, function(kt) {
          $t(kt);
        });
      };
      function Bt(St, $t, kt) {
        if ($t) return St.emit("error", $t);
        if (kt != null && St.push(kt), St._writableState.length) throw new rt();
        if (St._transformState.transforming) throw new j();
        return St.push(null);
      }
      return _stream_transform$1;
    }
    var _stream_passthrough$1, hasRequired_stream_passthrough$1;
    function require_stream_passthrough$1() {
      if (hasRequired_stream_passthrough$1) return _stream_passthrough$1;
      hasRequired_stream_passthrough$1 = 1, _stream_passthrough$1 = _;
      var d = require_stream_transform$1();
      requireInherits_browser()(_, d);
      function _($) {
        if (!(this instanceof _)) return new _($);
        d.call(this, $);
      }
      return _.prototype._transform = function($, j, rt) {
        rt(null, $);
      }, _stream_passthrough$1;
    }
    var pipeline_1, hasRequiredPipeline;
    function requirePipeline() {
      if (hasRequiredPipeline) return pipeline_1;
      hasRequiredPipeline = 1;
      var d;
      function _(kt) {
        var Tt = false;
        return function() {
          Tt || (Tt = true, kt.apply(void 0, arguments));
        };
      }
      var $ = requireErrorsBrowser().codes, j = $.ERR_MISSING_ARGS, rt = $.ERR_STREAM_DESTROYED;
      function et(kt) {
        if (kt) throw kt;
      }
      function st(kt) {
        return kt.setHeader && typeof kt.abort == "function";
      }
      function pt(kt, Tt, Pt, It) {
        It = _(It);
        var jt = false;
        kt.on("close", function() {
          jt = true;
        }), d === void 0 && (d = requireEndOfStream()), d(kt, {
          readable: Tt,
          writable: Pt
        }, function(Ot) {
          if (Ot) return It(Ot);
          jt = true, It();
        });
        var Dt = false;
        return function(Ot) {
          if (!jt && !Dt) {
            if (Dt = true, st(kt)) return kt.abort();
            if (typeof kt.destroy == "function") return kt.destroy();
            It(Ot || new rt("pipe"));
          }
        };
      }
      function Et(kt) {
        kt();
      }
      function Bt(kt, Tt) {
        return kt.pipe(Tt);
      }
      function St(kt) {
        return !kt.length || typeof kt[kt.length - 1] != "function" ? et : kt.pop();
      }
      function $t() {
        for (var kt = arguments.length, Tt = new Array(kt), Pt = 0; Pt < kt; Pt++) Tt[Pt] = arguments[Pt];
        var It = St(Tt);
        if (Array.isArray(Tt[0]) && (Tt = Tt[0]), Tt.length < 2) throw new j("streams");
        var jt, Dt = Tt.map(function(Ot, Ft) {
          var Lt = Ft < Tt.length - 1, Zt = Ft > 0;
          return pt(Ot, Lt, Zt, function(Kt) {
            jt || (jt = Kt), Kt && Dt.forEach(Et), !Lt && (Dt.forEach(Et), It(jt));
          });
        });
        return Tt.reduce(Bt);
      }
      return pipeline_1 = $t, pipeline_1;
    }
    var streamBrowserify, hasRequiredStreamBrowserify;
    function requireStreamBrowserify() {
      if (hasRequiredStreamBrowserify) return streamBrowserify;
      hasRequiredStreamBrowserify = 1, streamBrowserify = $;
      var d = eventsExports.EventEmitter, _ = requireInherits_browser();
      _($, d), $.Readable = require_stream_readable$1(), $.Writable = require_stream_writable$1(), $.Duplex = require_stream_duplex$1(), $.Transform = require_stream_transform$1(), $.PassThrough = require_stream_passthrough$1(), $.finished = requireEndOfStream(), $.pipeline = requirePipeline(), $.Stream = $;
      function $() {
        d.call(this);
      }
      return $.prototype.pipe = function(j, rt) {
        var et = this;
        function st(Tt) {
          j.writable && j.write(Tt) === false && et.pause && et.pause();
        }
        et.on("data", st);
        function pt() {
          et.readable && et.resume && et.resume();
        }
        j.on("drain", pt), !j._isStdio && (!rt || rt.end !== false) && (et.on("end", Bt), et.on("close", St));
        var Et = false;
        function Bt() {
          Et || (Et = true, j.end());
        }
        function St() {
          Et || (Et = true, typeof j.destroy == "function" && j.destroy());
        }
        function $t(Tt) {
          if (kt(), d.listenerCount(this, "error") === 0) throw Tt;
        }
        et.on("error", $t), j.on("error", $t);
        function kt() {
          et.removeListener("data", st), j.removeListener("drain", pt), et.removeListener("end", Bt), et.removeListener("close", St), et.removeListener("error", $t), j.removeListener("error", $t), et.removeListener("end", kt), et.removeListener("close", kt), j.removeListener("close", kt);
        }
        return et.on("end", kt), et.on("close", kt), j.on("close", kt), j.emit("pipe", et), j;
      }, streamBrowserify;
    }
    var hashBase, hasRequiredHashBase;
    function requireHashBase() {
      if (hasRequiredHashBase) return hashBase;
      hasRequiredHashBase = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireStreamBrowserify().Transform, $ = requireInherits_browser();
      function j(pt) {
        _.call(this), this._block = d.allocUnsafe(pt), this._blockSize = pt, this._blockOffset = 0, this._length = [
          0,
          0,
          0,
          0
        ], this._finalized = false;
      }
      $(j, _), j.prototype._transform = function(pt, Et, Bt) {
        var St = null;
        try {
          this.update(pt, Et);
        } catch ($t) {
          St = $t;
        }
        Bt(St);
      }, j.prototype._flush = function(pt) {
        var Et = null;
        try {
          this.push(this.digest());
        } catch (Bt) {
          Et = Bt;
        }
        pt(Et);
      };
      var rt = typeof Uint8Array < "u", et = typeof ArrayBuffer < "u" && typeof Uint8Array < "u" && ArrayBuffer.isView && (d.prototype instanceof Uint8Array || d.TYPED_ARRAY_SUPPORT);
      function st(pt, Et) {
        if (pt instanceof d) return pt;
        if (typeof pt == "string") return d.from(pt, Et);
        if (et && ArrayBuffer.isView(pt)) {
          if (pt.byteLength === 0) return d.alloc(0);
          var Bt = d.from(pt.buffer, pt.byteOffset, pt.byteLength);
          if (Bt.byteLength === pt.byteLength) return Bt;
        }
        if (rt && pt instanceof Uint8Array || d.isBuffer(pt) && pt.constructor && typeof pt.constructor.isBuffer == "function" && pt.constructor.isBuffer(pt)) return d.from(pt);
        throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
      }
      return j.prototype.update = function(pt, Et) {
        if (this._finalized) throw new Error("Digest already called");
        pt = st(pt, Et);
        for (var Bt = this._block, St = 0; this._blockOffset + pt.length - St >= this._blockSize; ) {
          for (var $t = this._blockOffset; $t < this._blockSize; ) Bt[$t++] = pt[St++];
          this._update(), this._blockOffset = 0;
        }
        for (; St < pt.length; ) Bt[this._blockOffset++] = pt[St++];
        for (var kt = 0, Tt = pt.length * 8; Tt > 0; ++kt) this._length[kt] += Tt, Tt = this._length[kt] / 4294967296 | 0, Tt > 0 && (this._length[kt] -= 4294967296 * Tt);
        return this;
      }, j.prototype._update = function() {
        throw new Error("_update is not implemented");
      }, j.prototype.digest = function(pt) {
        if (this._finalized) throw new Error("Digest already called");
        this._finalized = true;
        var Et = this._digest();
        pt !== void 0 && (Et = Et.toString(pt)), this._block.fill(0), this._blockOffset = 0;
        for (var Bt = 0; Bt < 4; ++Bt) this._length[Bt] = 0;
        return Et;
      }, j.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      }, hashBase = j, hashBase;
    }
    var md5_js, hasRequiredMd5_js;
    function requireMd5_js() {
      if (hasRequiredMd5_js) return md5_js;
      hasRequiredMd5_js = 1;
      var d = requireInherits_browser(), _ = requireHashBase(), $ = requireSafeBuffer$1().Buffer, j = new Array(16);
      function rt() {
        _.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
      }
      d(rt, _), rt.prototype._update = function() {
        for (var St = j, $t = 0; $t < 16; ++$t) St[$t] = this._block.readInt32LE($t * 4);
        var kt = this._a, Tt = this._b, Pt = this._c, It = this._d;
        kt = st(kt, Tt, Pt, It, St[0], 3614090360, 7), It = st(It, kt, Tt, Pt, St[1], 3905402710, 12), Pt = st(Pt, It, kt, Tt, St[2], 606105819, 17), Tt = st(Tt, Pt, It, kt, St[3], 3250441966, 22), kt = st(kt, Tt, Pt, It, St[4], 4118548399, 7), It = st(It, kt, Tt, Pt, St[5], 1200080426, 12), Pt = st(Pt, It, kt, Tt, St[6], 2821735955, 17), Tt = st(Tt, Pt, It, kt, St[7], 4249261313, 22), kt = st(kt, Tt, Pt, It, St[8], 1770035416, 7), It = st(It, kt, Tt, Pt, St[9], 2336552879, 12), Pt = st(Pt, It, kt, Tt, St[10], 4294925233, 17), Tt = st(Tt, Pt, It, kt, St[11], 2304563134, 22), kt = st(kt, Tt, Pt, It, St[12], 1804603682, 7), It = st(It, kt, Tt, Pt, St[13], 4254626195, 12), Pt = st(Pt, It, kt, Tt, St[14], 2792965006, 17), Tt = st(Tt, Pt, It, kt, St[15], 1236535329, 22), kt = pt(kt, Tt, Pt, It, St[1], 4129170786, 5), It = pt(It, kt, Tt, Pt, St[6], 3225465664, 9), Pt = pt(Pt, It, kt, Tt, St[11], 643717713, 14), Tt = pt(Tt, Pt, It, kt, St[0], 3921069994, 20), kt = pt(kt, Tt, Pt, It, St[5], 3593408605, 5), It = pt(It, kt, Tt, Pt, St[10], 38016083, 9), Pt = pt(Pt, It, kt, Tt, St[15], 3634488961, 14), Tt = pt(Tt, Pt, It, kt, St[4], 3889429448, 20), kt = pt(kt, Tt, Pt, It, St[9], 568446438, 5), It = pt(It, kt, Tt, Pt, St[14], 3275163606, 9), Pt = pt(Pt, It, kt, Tt, St[3], 4107603335, 14), Tt = pt(Tt, Pt, It, kt, St[8], 1163531501, 20), kt = pt(kt, Tt, Pt, It, St[13], 2850285829, 5), It = pt(It, kt, Tt, Pt, St[2], 4243563512, 9), Pt = pt(Pt, It, kt, Tt, St[7], 1735328473, 14), Tt = pt(Tt, Pt, It, kt, St[12], 2368359562, 20), kt = Et(kt, Tt, Pt, It, St[5], 4294588738, 4), It = Et(It, kt, Tt, Pt, St[8], 2272392833, 11), Pt = Et(Pt, It, kt, Tt, St[11], 1839030562, 16), Tt = Et(Tt, Pt, It, kt, St[14], 4259657740, 23), kt = Et(kt, Tt, Pt, It, St[1], 2763975236, 4), It = Et(It, kt, Tt, Pt, St[4], 1272893353, 11), Pt = Et(Pt, It, kt, Tt, St[7], 4139469664, 16), Tt = Et(Tt, Pt, It, kt, St[10], 3200236656, 23), kt = Et(kt, Tt, Pt, It, St[13], 681279174, 4), It = Et(It, kt, Tt, Pt, St[0], 3936430074, 11), Pt = Et(Pt, It, kt, Tt, St[3], 3572445317, 16), Tt = Et(Tt, Pt, It, kt, St[6], 76029189, 23), kt = Et(kt, Tt, Pt, It, St[9], 3654602809, 4), It = Et(It, kt, Tt, Pt, St[12], 3873151461, 11), Pt = Et(Pt, It, kt, Tt, St[15], 530742520, 16), Tt = Et(Tt, Pt, It, kt, St[2], 3299628645, 23), kt = Bt(kt, Tt, Pt, It, St[0], 4096336452, 6), It = Bt(It, kt, Tt, Pt, St[7], 1126891415, 10), Pt = Bt(Pt, It, kt, Tt, St[14], 2878612391, 15), Tt = Bt(Tt, Pt, It, kt, St[5], 4237533241, 21), kt = Bt(kt, Tt, Pt, It, St[12], 1700485571, 6), It = Bt(It, kt, Tt, Pt, St[3], 2399980690, 10), Pt = Bt(Pt, It, kt, Tt, St[10], 4293915773, 15), Tt = Bt(Tt, Pt, It, kt, St[1], 2240044497, 21), kt = Bt(kt, Tt, Pt, It, St[8], 1873313359, 6), It = Bt(It, kt, Tt, Pt, St[15], 4264355552, 10), Pt = Bt(Pt, It, kt, Tt, St[6], 2734768916, 15), Tt = Bt(Tt, Pt, It, kt, St[13], 1309151649, 21), kt = Bt(kt, Tt, Pt, It, St[4], 4149444226, 6), It = Bt(It, kt, Tt, Pt, St[11], 3174756917, 10), Pt = Bt(Pt, It, kt, Tt, St[2], 718787259, 15), Tt = Bt(Tt, Pt, It, kt, St[9], 3951481745, 21), this._a = this._a + kt | 0, this._b = this._b + Tt | 0, this._c = this._c + Pt | 0, this._d = this._d + It | 0;
      }, rt.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var St = $.allocUnsafe(16);
        return St.writeInt32LE(this._a, 0), St.writeInt32LE(this._b, 4), St.writeInt32LE(this._c, 8), St.writeInt32LE(this._d, 12), St;
      };
      function et(St, $t) {
        return St << $t | St >>> 32 - $t;
      }
      function st(St, $t, kt, Tt, Pt, It, jt) {
        return et(St + ($t & kt | ~$t & Tt) + Pt + It | 0, jt) + $t | 0;
      }
      function pt(St, $t, kt, Tt, Pt, It, jt) {
        return et(St + ($t & Tt | kt & ~Tt) + Pt + It | 0, jt) + $t | 0;
      }
      function Et(St, $t, kt, Tt, Pt, It, jt) {
        return et(St + ($t ^ kt ^ Tt) + Pt + It | 0, jt) + $t | 0;
      }
      function Bt(St, $t, kt, Tt, Pt, It, jt) {
        return et(St + (kt ^ ($t | ~Tt)) + Pt + It | 0, jt) + $t | 0;
      }
      return md5_js = rt, md5_js;
    }
    var ripemd160, hasRequiredRipemd160;
    function requireRipemd160() {
      if (hasRequiredRipemd160) return ripemd160;
      hasRequiredRipemd160 = 1;
      var d = require$$0$2.Buffer, _ = requireInherits_browser(), $ = requireHashBase(), j = new Array(16), rt = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ], et = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ], st = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ], pt = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ], Et = [
        0,
        1518500249,
        1859775393,
        2400959708,
        2840853838
      ], Bt = [
        1352829926,
        1548603684,
        1836072691,
        2053994217,
        0
      ];
      function St() {
        $.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
      }
      _(St, $), St.prototype._update = function() {
        for (var Dt = j, Ot = 0; Ot < 16; ++Ot) Dt[Ot] = this._block.readInt32LE(Ot * 4);
        for (var Ft = this._a | 0, Lt = this._b | 0, Zt = this._c | 0, Kt = this._d | 0, ar = this._e | 0, sr = this._a | 0, er = this._b | 0, Ut = this._c | 0, xt = this._d | 0, tt = this._e | 0, nt = 0; nt < 80; nt += 1) {
          var it, at;
          nt < 16 ? (it = kt(Ft, Lt, Zt, Kt, ar, Dt[rt[nt]], Et[0], st[nt]), at = jt(sr, er, Ut, xt, tt, Dt[et[nt]], Bt[0], pt[nt])) : nt < 32 ? (it = Tt(Ft, Lt, Zt, Kt, ar, Dt[rt[nt]], Et[1], st[nt]), at = It(sr, er, Ut, xt, tt, Dt[et[nt]], Bt[1], pt[nt])) : nt < 48 ? (it = Pt(Ft, Lt, Zt, Kt, ar, Dt[rt[nt]], Et[2], st[nt]), at = Pt(sr, er, Ut, xt, tt, Dt[et[nt]], Bt[2], pt[nt])) : nt < 64 ? (it = It(Ft, Lt, Zt, Kt, ar, Dt[rt[nt]], Et[3], st[nt]), at = Tt(sr, er, Ut, xt, tt, Dt[et[nt]], Bt[3], pt[nt])) : (it = jt(Ft, Lt, Zt, Kt, ar, Dt[rt[nt]], Et[4], st[nt]), at = kt(sr, er, Ut, xt, tt, Dt[et[nt]], Bt[4], pt[nt])), Ft = ar, ar = Kt, Kt = $t(Zt, 10), Zt = Lt, Lt = it, sr = tt, tt = xt, xt = $t(Ut, 10), Ut = er, er = at;
        }
        var ct = this._b + Zt + xt | 0;
        this._b = this._c + Kt + tt | 0, this._c = this._d + ar + sr | 0, this._d = this._e + Ft + er | 0, this._e = this._a + Lt + Ut | 0, this._a = ct;
      }, St.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var Dt = d.alloc ? d.alloc(20) : new d(20);
        return Dt.writeInt32LE(this._a, 0), Dt.writeInt32LE(this._b, 4), Dt.writeInt32LE(this._c, 8), Dt.writeInt32LE(this._d, 12), Dt.writeInt32LE(this._e, 16), Dt;
      };
      function $t(Dt, Ot) {
        return Dt << Ot | Dt >>> 32 - Ot;
      }
      function kt(Dt, Ot, Ft, Lt, Zt, Kt, ar, sr) {
        return $t(Dt + (Ot ^ Ft ^ Lt) + Kt + ar | 0, sr) + Zt | 0;
      }
      function Tt(Dt, Ot, Ft, Lt, Zt, Kt, ar, sr) {
        return $t(Dt + (Ot & Ft | ~Ot & Lt) + Kt + ar | 0, sr) + Zt | 0;
      }
      function Pt(Dt, Ot, Ft, Lt, Zt, Kt, ar, sr) {
        return $t(Dt + ((Ot | ~Ft) ^ Lt) + Kt + ar | 0, sr) + Zt | 0;
      }
      function It(Dt, Ot, Ft, Lt, Zt, Kt, ar, sr) {
        return $t(Dt + (Ot & Lt | Ft & ~Lt) + Kt + ar | 0, sr) + Zt | 0;
      }
      function jt(Dt, Ot, Ft, Lt, Zt, Kt, ar, sr) {
        return $t(Dt + (Ot ^ (Ft | ~Lt)) + Kt + ar | 0, sr) + Zt | 0;
      }
      return ripemd160 = St, ripemd160;
    }
    var sha_js = {
      exports: {}
    }, hash$1, hasRequiredHash$1;
    function requireHash$1() {
      if (hasRequiredHash$1) return hash$1;
      hasRequiredHash$1 = 1;
      var d = requireSafeBuffer$1().Buffer;
      function _($, j) {
        this._block = d.alloc($), this._finalSize = j, this._blockSize = $, this._len = 0;
      }
      return _.prototype.update = function($, j) {
        typeof $ == "string" && (j = j || "utf8", $ = d.from($, j));
        for (var rt = this._block, et = this._blockSize, st = $.length, pt = this._len, Et = 0; Et < st; ) {
          for (var Bt = pt % et, St = Math.min(st - Et, et - Bt), $t = 0; $t < St; $t++) rt[Bt + $t] = $[Et + $t];
          pt += St, Et += St, pt % et === 0 && this._update(rt);
        }
        return this._len += st, this;
      }, _.prototype.digest = function($) {
        var j = this._len % this._blockSize;
        this._block[j] = 128, this._block.fill(0, j + 1), j >= this._finalSize && (this._update(this._block), this._block.fill(0));
        var rt = this._len * 8;
        if (rt <= 4294967295) this._block.writeUInt32BE(rt, this._blockSize - 4);
        else {
          var et = (rt & 4294967295) >>> 0, st = (rt - et) / 4294967296;
          this._block.writeUInt32BE(st, this._blockSize - 8), this._block.writeUInt32BE(et, this._blockSize - 4);
        }
        this._update(this._block);
        var pt = this._hash();
        return $ ? pt.toString($) : pt;
      }, _.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      }, hash$1 = _, hash$1;
    }
    var sha$2, hasRequiredSha$1;
    function requireSha$1() {
      if (hasRequiredSha$1) return sha$2;
      hasRequiredSha$1 = 1;
      var d = requireInherits_browser(), _ = requireHash$1(), $ = requireSafeBuffer$1().Buffer, j = [
        1518500249,
        1859775393,
        -1894007588,
        -899497514
      ], rt = new Array(80);
      function et() {
        this.init(), this._w = rt, _.call(this, 64, 56);
      }
      d(et, _), et.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      };
      function st(Bt) {
        return Bt << 5 | Bt >>> 27;
      }
      function pt(Bt) {
        return Bt << 30 | Bt >>> 2;
      }
      function Et(Bt, St, $t, kt) {
        return Bt === 0 ? St & $t | ~St & kt : Bt === 2 ? St & $t | St & kt | $t & kt : St ^ $t ^ kt;
      }
      return et.prototype._update = function(Bt) {
        for (var St = this._w, $t = this._a | 0, kt = this._b | 0, Tt = this._c | 0, Pt = this._d | 0, It = this._e | 0, jt = 0; jt < 16; ++jt) St[jt] = Bt.readInt32BE(jt * 4);
        for (; jt < 80; ++jt) St[jt] = St[jt - 3] ^ St[jt - 8] ^ St[jt - 14] ^ St[jt - 16];
        for (var Dt = 0; Dt < 80; ++Dt) {
          var Ot = ~~(Dt / 20), Ft = st($t) + Et(Ot, kt, Tt, Pt) + It + St[Dt] + j[Ot] | 0;
          It = Pt, Pt = Tt, Tt = pt(kt), kt = $t, $t = Ft;
        }
        this._a = $t + this._a | 0, this._b = kt + this._b | 0, this._c = Tt + this._c | 0, this._d = Pt + this._d | 0, this._e = It + this._e | 0;
      }, et.prototype._hash = function() {
        var Bt = $.allocUnsafe(20);
        return Bt.writeInt32BE(this._a | 0, 0), Bt.writeInt32BE(this._b | 0, 4), Bt.writeInt32BE(this._c | 0, 8), Bt.writeInt32BE(this._d | 0, 12), Bt.writeInt32BE(this._e | 0, 16), Bt;
      }, sha$2 = et, sha$2;
    }
    var sha1, hasRequiredSha1;
    function requireSha1() {
      if (hasRequiredSha1) return sha1;
      hasRequiredSha1 = 1;
      var d = requireInherits_browser(), _ = requireHash$1(), $ = requireSafeBuffer$1().Buffer, j = [
        1518500249,
        1859775393,
        -1894007588,
        -899497514
      ], rt = new Array(80);
      function et() {
        this.init(), this._w = rt, _.call(this, 64, 56);
      }
      d(et, _), et.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      };
      function st(St) {
        return St << 1 | St >>> 31;
      }
      function pt(St) {
        return St << 5 | St >>> 27;
      }
      function Et(St) {
        return St << 30 | St >>> 2;
      }
      function Bt(St, $t, kt, Tt) {
        return St === 0 ? $t & kt | ~$t & Tt : St === 2 ? $t & kt | $t & Tt | kt & Tt : $t ^ kt ^ Tt;
      }
      return et.prototype._update = function(St) {
        for (var $t = this._w, kt = this._a | 0, Tt = this._b | 0, Pt = this._c | 0, It = this._d | 0, jt = this._e | 0, Dt = 0; Dt < 16; ++Dt) $t[Dt] = St.readInt32BE(Dt * 4);
        for (; Dt < 80; ++Dt) $t[Dt] = st($t[Dt - 3] ^ $t[Dt - 8] ^ $t[Dt - 14] ^ $t[Dt - 16]);
        for (var Ot = 0; Ot < 80; ++Ot) {
          var Ft = ~~(Ot / 20), Lt = pt(kt) + Bt(Ft, Tt, Pt, It) + jt + $t[Ot] + j[Ft] | 0;
          jt = It, It = Pt, Pt = Et(Tt), Tt = kt, kt = Lt;
        }
        this._a = kt + this._a | 0, this._b = Tt + this._b | 0, this._c = Pt + this._c | 0, this._d = It + this._d | 0, this._e = jt + this._e | 0;
      }, et.prototype._hash = function() {
        var St = $.allocUnsafe(20);
        return St.writeInt32BE(this._a | 0, 0), St.writeInt32BE(this._b | 0, 4), St.writeInt32BE(this._c | 0, 8), St.writeInt32BE(this._d | 0, 12), St.writeInt32BE(this._e | 0, 16), St;
      }, sha1 = et, sha1;
    }
    var sha256$9, hasRequiredSha256;
    function requireSha256() {
      if (hasRequiredSha256) return sha256$9;
      hasRequiredSha256 = 1;
      var d = requireInherits_browser(), _ = requireHash$1(), $ = requireSafeBuffer$1().Buffer, j = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ], rt = new Array(64);
      function et() {
        this.init(), this._w = rt, _.call(this, 64, 56);
      }
      d(et, _), et.prototype.init = function() {
        return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
      };
      function st(kt, Tt, Pt) {
        return Pt ^ kt & (Tt ^ Pt);
      }
      function pt(kt, Tt, Pt) {
        return kt & Tt | Pt & (kt | Tt);
      }
      function Et(kt) {
        return (kt >>> 2 | kt << 30) ^ (kt >>> 13 | kt << 19) ^ (kt >>> 22 | kt << 10);
      }
      function Bt(kt) {
        return (kt >>> 6 | kt << 26) ^ (kt >>> 11 | kt << 21) ^ (kt >>> 25 | kt << 7);
      }
      function St(kt) {
        return (kt >>> 7 | kt << 25) ^ (kt >>> 18 | kt << 14) ^ kt >>> 3;
      }
      function $t(kt) {
        return (kt >>> 17 | kt << 15) ^ (kt >>> 19 | kt << 13) ^ kt >>> 10;
      }
      return et.prototype._update = function(kt) {
        for (var Tt = this._w, Pt = this._a | 0, It = this._b | 0, jt = this._c | 0, Dt = this._d | 0, Ot = this._e | 0, Ft = this._f | 0, Lt = this._g | 0, Zt = this._h | 0, Kt = 0; Kt < 16; ++Kt) Tt[Kt] = kt.readInt32BE(Kt * 4);
        for (; Kt < 64; ++Kt) Tt[Kt] = $t(Tt[Kt - 2]) + Tt[Kt - 7] + St(Tt[Kt - 15]) + Tt[Kt - 16] | 0;
        for (var ar = 0; ar < 64; ++ar) {
          var sr = Zt + Bt(Ot) + st(Ot, Ft, Lt) + j[ar] + Tt[ar] | 0, er = Et(Pt) + pt(Pt, It, jt) | 0;
          Zt = Lt, Lt = Ft, Ft = Ot, Ot = Dt + sr | 0, Dt = jt, jt = It, It = Pt, Pt = sr + er | 0;
        }
        this._a = Pt + this._a | 0, this._b = It + this._b | 0, this._c = jt + this._c | 0, this._d = Dt + this._d | 0, this._e = Ot + this._e | 0, this._f = Ft + this._f | 0, this._g = Lt + this._g | 0, this._h = Zt + this._h | 0;
      }, et.prototype._hash = function() {
        var kt = $.allocUnsafe(32);
        return kt.writeInt32BE(this._a, 0), kt.writeInt32BE(this._b, 4), kt.writeInt32BE(this._c, 8), kt.writeInt32BE(this._d, 12), kt.writeInt32BE(this._e, 16), kt.writeInt32BE(this._f, 20), kt.writeInt32BE(this._g, 24), kt.writeInt32BE(this._h, 28), kt;
      }, sha256$9 = et, sha256$9;
    }
    var sha224$1, hasRequiredSha224;
    function requireSha224() {
      if (hasRequiredSha224) return sha224$1;
      hasRequiredSha224 = 1;
      var d = requireInherits_browser(), _ = requireSha256(), $ = requireHash$1(), j = requireSafeBuffer$1().Buffer, rt = new Array(64);
      function et() {
        this.init(), this._w = rt, $.call(this, 64, 56);
      }
      return d(et, _), et.prototype.init = function() {
        return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
      }, et.prototype._hash = function() {
        var st = j.allocUnsafe(28);
        return st.writeInt32BE(this._a, 0), st.writeInt32BE(this._b, 4), st.writeInt32BE(this._c, 8), st.writeInt32BE(this._d, 12), st.writeInt32BE(this._e, 16), st.writeInt32BE(this._f, 20), st.writeInt32BE(this._g, 24), st;
      }, sha224$1 = et, sha224$1;
    }
    var sha512$5, hasRequiredSha512;
    function requireSha512() {
      if (hasRequiredSha512) return sha512$5;
      hasRequiredSha512 = 1;
      var d = requireInherits_browser(), _ = requireHash$1(), $ = requireSafeBuffer$1().Buffer, j = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ], rt = new Array(160);
      function et() {
        this.init(), this._w = rt, _.call(this, 128, 112);
      }
      d(et, _), et.prototype.init = function() {
        return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
      };
      function st(It, jt, Dt) {
        return Dt ^ It & (jt ^ Dt);
      }
      function pt(It, jt, Dt) {
        return It & jt | Dt & (It | jt);
      }
      function Et(It, jt) {
        return (It >>> 28 | jt << 4) ^ (jt >>> 2 | It << 30) ^ (jt >>> 7 | It << 25);
      }
      function Bt(It, jt) {
        return (It >>> 14 | jt << 18) ^ (It >>> 18 | jt << 14) ^ (jt >>> 9 | It << 23);
      }
      function St(It, jt) {
        return (It >>> 1 | jt << 31) ^ (It >>> 8 | jt << 24) ^ It >>> 7;
      }
      function $t(It, jt) {
        return (It >>> 1 | jt << 31) ^ (It >>> 8 | jt << 24) ^ (It >>> 7 | jt << 25);
      }
      function kt(It, jt) {
        return (It >>> 19 | jt << 13) ^ (jt >>> 29 | It << 3) ^ It >>> 6;
      }
      function Tt(It, jt) {
        return (It >>> 19 | jt << 13) ^ (jt >>> 29 | It << 3) ^ (It >>> 6 | jt << 26);
      }
      function Pt(It, jt) {
        return It >>> 0 < jt >>> 0 ? 1 : 0;
      }
      return et.prototype._update = function(It) {
        for (var jt = this._w, Dt = this._ah | 0, Ot = this._bh | 0, Ft = this._ch | 0, Lt = this._dh | 0, Zt = this._eh | 0, Kt = this._fh | 0, ar = this._gh | 0, sr = this._hh | 0, er = this._al | 0, Ut = this._bl | 0, xt = this._cl | 0, tt = this._dl | 0, nt = this._el | 0, it = this._fl | 0, at = this._gl | 0, ct = this._hl | 0, Mt = 0; Mt < 32; Mt += 2) jt[Mt] = It.readInt32BE(Mt * 4), jt[Mt + 1] = It.readInt32BE(Mt * 4 + 4);
        for (; Mt < 160; Mt += 2) {
          var At = jt[Mt - 30], ut = jt[Mt - 15 * 2 + 1], ot = St(At, ut), Ct = $t(ut, At);
          At = jt[Mt - 2 * 2], ut = jt[Mt - 2 * 2 + 1];
          var Rt = kt(At, ut), Nt = Tt(ut, At), Wt = jt[Mt - 7 * 2], Xt = jt[Mt - 7 * 2 + 1], rr = jt[Mt - 16 * 2], Gt = jt[Mt - 16 * 2 + 1], Yt = Ct + Xt | 0, tr = ot + Wt + Pt(Yt, Ct) | 0;
          Yt = Yt + Nt | 0, tr = tr + Rt + Pt(Yt, Nt) | 0, Yt = Yt + Gt | 0, tr = tr + rr + Pt(Yt, Gt) | 0, jt[Mt] = tr, jt[Mt + 1] = Yt;
        }
        for (var cr = 0; cr < 160; cr += 2) {
          tr = jt[cr], Yt = jt[cr + 1];
          var ir = pt(Dt, Ot, Ft), Jt = pt(er, Ut, xt), vr = Et(Dt, er), Br = Et(er, Dt), _r = Bt(Zt, nt), $r = Bt(nt, Zt), Ur = j[cr], Sr = j[cr + 1], Mr = st(Zt, Kt, ar), Kr = st(nt, it, at), kr = ct + $r | 0, Lr = sr + _r + Pt(kr, ct) | 0;
          kr = kr + Kr | 0, Lr = Lr + Mr + Pt(kr, Kr) | 0, kr = kr + Sr | 0, Lr = Lr + Ur + Pt(kr, Sr) | 0, kr = kr + Yt | 0, Lr = Lr + tr + Pt(kr, Yt) | 0;
          var Gr = Br + Jt | 0, Tr = vr + ir + Pt(Gr, Br) | 0;
          sr = ar, ct = at, ar = Kt, at = it, Kt = Zt, it = nt, nt = tt + kr | 0, Zt = Lt + Lr + Pt(nt, tt) | 0, Lt = Ft, tt = xt, Ft = Ot, xt = Ut, Ot = Dt, Ut = er, er = kr + Gr | 0, Dt = Lr + Tr + Pt(er, kr) | 0;
        }
        this._al = this._al + er | 0, this._bl = this._bl + Ut | 0, this._cl = this._cl + xt | 0, this._dl = this._dl + tt | 0, this._el = this._el + nt | 0, this._fl = this._fl + it | 0, this._gl = this._gl + at | 0, this._hl = this._hl + ct | 0, this._ah = this._ah + Dt + Pt(this._al, er) | 0, this._bh = this._bh + Ot + Pt(this._bl, Ut) | 0, this._ch = this._ch + Ft + Pt(this._cl, xt) | 0, this._dh = this._dh + Lt + Pt(this._dl, tt) | 0, this._eh = this._eh + Zt + Pt(this._el, nt) | 0, this._fh = this._fh + Kt + Pt(this._fl, it) | 0, this._gh = this._gh + ar + Pt(this._gl, at) | 0, this._hh = this._hh + sr + Pt(this._hl, ct) | 0;
      }, et.prototype._hash = function() {
        var It = $.allocUnsafe(64);
        function jt(Dt, Ot, Ft) {
          It.writeInt32BE(Dt, Ft), It.writeInt32BE(Ot, Ft + 4);
        }
        return jt(this._ah, this._al, 0), jt(this._bh, this._bl, 8), jt(this._ch, this._cl, 16), jt(this._dh, this._dl, 24), jt(this._eh, this._el, 32), jt(this._fh, this._fl, 40), jt(this._gh, this._gl, 48), jt(this._hh, this._hl, 56), It;
      }, sha512$5 = et, sha512$5;
    }
    var sha384$1, hasRequiredSha384;
    function requireSha384() {
      if (hasRequiredSha384) return sha384$1;
      hasRequiredSha384 = 1;
      var d = requireInherits_browser(), _ = requireSha512(), $ = requireHash$1(), j = requireSafeBuffer$1().Buffer, rt = new Array(160);
      function et() {
        this.init(), this._w = rt, $.call(this, 128, 112);
      }
      return d(et, _), et.prototype.init = function() {
        return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
      }, et.prototype._hash = function() {
        var st = j.allocUnsafe(48);
        function pt(Et, Bt, St) {
          st.writeInt32BE(Et, St), st.writeInt32BE(Bt, St + 4);
        }
        return pt(this._ah, this._al, 0), pt(this._bh, this._bl, 8), pt(this._ch, this._cl, 16), pt(this._dh, this._dl, 24), pt(this._eh, this._el, 32), pt(this._fh, this._fl, 40), st;
      }, sha384$1 = et, sha384$1;
    }
    var hasRequiredSha_js;
    function requireSha_js() {
      if (hasRequiredSha_js) return sha_js.exports;
      hasRequiredSha_js = 1;
      var d = sha_js.exports = function($) {
        $ = $.toLowerCase();
        var j = d[$];
        if (!j) throw new Error($ + " is not supported (we accept pull requests)");
        return new j();
      };
      return d.sha = requireSha$1(), d.sha1 = requireSha1(), d.sha224 = requireSha224(), d.sha256 = requireSha256(), d.sha384 = requireSha384(), d.sha512 = requireSha512(), sha_js.exports;
    }
    var cipherBase, hasRequiredCipherBase;
    function requireCipherBase() {
      if (hasRequiredCipherBase) return cipherBase;
      hasRequiredCipherBase = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireStreamBrowserify().Transform, $ = requireString_decoder().StringDecoder, j = requireInherits_browser();
      function rt(Et) {
        _.call(this), this.hashMode = typeof Et == "string", this.hashMode ? this[Et] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
      }
      j(rt, _);
      var et = typeof Uint8Array < "u", st = typeof ArrayBuffer < "u" && typeof Uint8Array < "u" && ArrayBuffer.isView && (d.prototype instanceof Uint8Array || d.TYPED_ARRAY_SUPPORT);
      function pt(Et, Bt) {
        if (Et instanceof d) return Et;
        if (typeof Et == "string") return d.from(Et, Bt);
        if (st && ArrayBuffer.isView(Et)) {
          if (Et.byteLength === 0) return d.alloc(0);
          var St = d.from(Et.buffer, Et.byteOffset, Et.byteLength);
          if (St.byteLength === Et.byteLength) return St;
        }
        if (et && Et instanceof Uint8Array || d.isBuffer(Et) && Et.constructor && typeof Et.constructor.isBuffer == "function" && Et.constructor.isBuffer(Et)) return d.from(Et);
        throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
      }
      return rt.prototype.update = function(Et, Bt, St) {
        var $t = pt(Et, Bt), kt = this._update($t);
        return this.hashMode ? this : (St && (kt = this._toString(kt, St)), kt);
      }, rt.prototype.setAutoPadding = function() {
      }, rt.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      }, rt.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      }, rt.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      }, rt.prototype._transform = function(Et, Bt, St) {
        var $t;
        try {
          this.hashMode ? this._update(Et) : this.push(this._update(Et));
        } catch (kt) {
          $t = kt;
        } finally {
          St($t);
        }
      }, rt.prototype._flush = function(Et) {
        var Bt;
        try {
          this.push(this.__final());
        } catch (St) {
          Bt = St;
        }
        Et(Bt);
      }, rt.prototype._finalOrDigest = function(Et) {
        var Bt = this.__final() || d.alloc(0);
        return Et && (Bt = this._toString(Bt, Et, true)), Bt;
      }, rt.prototype._toString = function(Et, Bt, St) {
        if (this._decoder || (this._decoder = new $(Bt), this._encoding = Bt), this._encoding !== Bt) throw new Error("can\u2019t switch encodings");
        var $t = this._decoder.write(Et);
        return St && ($t += this._decoder.end()), $t;
      }, cipherBase = rt, cipherBase;
    }
    var browser$c, hasRequiredBrowser$9;
    function requireBrowser$9() {
      if (hasRequiredBrowser$9) return browser$c;
      hasRequiredBrowser$9 = 1;
      var d = requireInherits_browser(), _ = requireMd5_js(), $ = requireRipemd160(), j = requireSha_js(), rt = requireCipherBase();
      function et(st) {
        rt.call(this, "digest"), this._hash = st;
      }
      return d(et, rt), et.prototype._update = function(st) {
        this._hash.update(st);
      }, et.prototype._final = function() {
        return this._hash.digest();
      }, browser$c = function(pt) {
        return pt = pt.toLowerCase(), pt === "md5" ? new _() : pt === "rmd160" || pt === "ripemd160" ? new $() : new et(j(pt));
      }, browser$c;
    }
    var legacy, hasRequiredLegacy;
    function requireLegacy() {
      if (hasRequiredLegacy) return legacy;
      hasRequiredLegacy = 1;
      var d = requireInherits_browser(), _ = requireSafeBuffer$1().Buffer, $ = requireCipherBase(), j = _.alloc(128), rt = 64;
      function et(st, pt) {
        $.call(this, "digest"), typeof pt == "string" && (pt = _.from(pt)), this._alg = st, this._key = pt, pt.length > rt ? pt = st(pt) : pt.length < rt && (pt = _.concat([
          pt,
          j
        ], rt));
        for (var Et = this._ipad = _.allocUnsafe(rt), Bt = this._opad = _.allocUnsafe(rt), St = 0; St < rt; St++) Et[St] = pt[St] ^ 54, Bt[St] = pt[St] ^ 92;
        this._hash = [
          Et
        ];
      }
      return d(et, $), et.prototype._update = function(st) {
        this._hash.push(st);
      }, et.prototype._final = function() {
        var st = this._alg(_.concat(this._hash));
        return this._alg(_.concat([
          this._opad,
          st
        ]));
      }, legacy = et, legacy;
    }
    var md5, hasRequiredMd5;
    function requireMd5() {
      if (hasRequiredMd5) return md5;
      hasRequiredMd5 = 1;
      var d = requireMd5_js();
      return md5 = function(_) {
        return new d().update(_).digest();
      }, md5;
    }
    var browser$b, hasRequiredBrowser$8;
    function requireBrowser$8() {
      if (hasRequiredBrowser$8) return browser$b;
      hasRequiredBrowser$8 = 1;
      var d = requireInherits_browser(), _ = requireLegacy(), $ = requireCipherBase(), j = requireSafeBuffer$1().Buffer, rt = requireMd5(), et = requireRipemd160(), st = requireSha_js(), pt = j.alloc(128);
      function Et(Bt, St) {
        $.call(this, "digest"), typeof St == "string" && (St = j.from(St));
        var $t = Bt === "sha512" || Bt === "sha384" ? 128 : 64;
        if (this._alg = Bt, this._key = St, St.length > $t) {
          var kt = Bt === "rmd160" ? new et() : st(Bt);
          St = kt.update(St).digest();
        } else St.length < $t && (St = j.concat([
          St,
          pt
        ], $t));
        for (var Tt = this._ipad = j.allocUnsafe($t), Pt = this._opad = j.allocUnsafe($t), It = 0; It < $t; It++) Tt[It] = St[It] ^ 54, Pt[It] = St[It] ^ 92;
        this._hash = Bt === "rmd160" ? new et() : st(Bt), this._hash.update(Tt);
      }
      return d(Et, $), Et.prototype._update = function(Bt) {
        this._hash.update(Bt);
      }, Et.prototype._final = function() {
        var Bt = this._hash.digest(), St = this._alg === "rmd160" ? new et() : st(this._alg);
        return St.update(this._opad).update(Bt).digest();
      }, browser$b = function(St, $t) {
        return St = St.toLowerCase(), St === "rmd160" || St === "ripemd160" ? new Et("rmd160", $t) : St === "md5" ? new _(rt, $t) : new Et(St, $t);
      }, browser$b;
    }
    const sha224WithRSAEncryption = {
      sign: "rsa",
      hash: "sha224",
      id: "302d300d06096086480165030402040500041c"
    }, sha256WithRSAEncryption = {
      sign: "rsa",
      hash: "sha256",
      id: "3031300d060960864801650304020105000420"
    }, sha384WithRSAEncryption = {
      sign: "rsa",
      hash: "sha384",
      id: "3041300d060960864801650304020205000430"
    }, sha512WithRSAEncryption = {
      sign: "rsa",
      hash: "sha512",
      id: "3051300d060960864801650304020305000440"
    }, sha256$8 = {
      sign: "ecdsa",
      hash: "sha256",
      id: ""
    }, sha224 = {
      sign: "ecdsa",
      hash: "sha224",
      id: ""
    }, sha384 = {
      sign: "ecdsa",
      hash: "sha384",
      id: ""
    }, sha512$4 = {
      sign: "ecdsa",
      hash: "sha512",
      id: ""
    }, DSA = {
      sign: "dsa",
      hash: "sha1",
      id: ""
    }, ripemd160WithRSA = {
      sign: "rsa",
      hash: "rmd160",
      id: "3021300906052b2403020105000414"
    }, md5WithRSAEncryption = {
      sign: "rsa",
      hash: "md5",
      id: "3020300c06082a864886f70d020505000410"
    }, require$$6 = {
      sha224WithRSAEncryption,
      "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      sha256WithRSAEncryption,
      "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      sha384WithRSAEncryption,
      "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      sha512WithRSAEncryption,
      "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
      },
      "ecdsa-with-SHA1": {
        sign: "ecdsa",
        hash: "sha1",
        id: ""
      },
      sha256: sha256$8,
      sha224,
      sha384,
      sha512: sha512$4,
      "DSA-SHA": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-SHA1": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      DSA,
      "DSA-WITH-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-WITH-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-WITH-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-WITH-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-RIPEMD160": {
        sign: "dsa",
        hash: "rmd160",
        id: ""
      },
      ripemd160WithRSA,
      "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      md5WithRSAEncryption,
      "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      }
    };
    var algos, hasRequiredAlgos;
    function requireAlgos() {
      return hasRequiredAlgos || (hasRequiredAlgos = 1, algos = require$$6), algos;
    }
    var browser$a = {}, precondition, hasRequiredPrecondition;
    function requirePrecondition() {
      if (hasRequiredPrecondition) return precondition;
      hasRequiredPrecondition = 1;
      var d = Math.pow(2, 30) - 1;
      return precondition = function(_, $) {
        if (typeof _ != "number") throw new TypeError("Iterations not a number");
        if (_ < 0) throw new TypeError("Bad iterations");
        if (typeof $ != "number") throw new TypeError("Key length not a number");
        if ($ < 0 || $ > d || $ !== $) throw new TypeError("Bad key length");
      }, precondition;
    }
    var defaultEncoding_1, hasRequiredDefaultEncoding;
    function requireDefaultEncoding() {
      if (hasRequiredDefaultEncoding) return defaultEncoding_1;
      hasRequiredDefaultEncoding = 1;
      var d;
      if (commonjsGlobal.process && commonjsGlobal.process.browser) d = "utf-8";
      else if (commonjsGlobal.process && commonjsGlobal.process.version) {
        var _ = parseInt(process$1.version.split(".")[0].slice(1), 10);
        d = _ >= 6 ? "utf-8" : "binary";
      } else d = "utf-8";
      return defaultEncoding_1 = d, defaultEncoding_1;
    }
    var toBuffer, hasRequiredToBuffer;
    function requireToBuffer() {
      if (hasRequiredToBuffer) return toBuffer;
      hasRequiredToBuffer = 1;
      var d = requireSafeBuffer$1().Buffer;
      return toBuffer = function(_, $, j) {
        if (d.isBuffer(_)) return _;
        if (typeof _ == "string") return d.from(_, $);
        if (ArrayBuffer.isView(_)) return d.from(_.buffer);
        throw new TypeError(j + " must be a string, a Buffer, a typed array or a DataView");
      }, toBuffer;
    }
    var syncBrowser, hasRequiredSyncBrowser;
    function requireSyncBrowser() {
      if (hasRequiredSyncBrowser) return syncBrowser;
      hasRequiredSyncBrowser = 1;
      var d = requireMd5(), _ = requireRipemd160(), $ = requireSha_js(), j = requireSafeBuffer$1().Buffer, rt = requirePrecondition(), et = requireDefaultEncoding(), st = requireToBuffer(), pt = j.alloc(128), Et = {
        md5: 16,
        sha1: 20,
        sha224: 28,
        sha256: 32,
        sha384: 48,
        sha512: 64,
        rmd160: 20,
        ripemd160: 20
      };
      function Bt(kt, Tt, Pt) {
        var It = St(kt), jt = kt === "sha512" || kt === "sha384" ? 128 : 64;
        Tt.length > jt ? Tt = It(Tt) : Tt.length < jt && (Tt = j.concat([
          Tt,
          pt
        ], jt));
        for (var Dt = j.allocUnsafe(jt + Et[kt]), Ot = j.allocUnsafe(jt + Et[kt]), Ft = 0; Ft < jt; Ft++) Dt[Ft] = Tt[Ft] ^ 54, Ot[Ft] = Tt[Ft] ^ 92;
        var Lt = j.allocUnsafe(jt + Pt + 4);
        Dt.copy(Lt, 0, 0, jt), this.ipad1 = Lt, this.ipad2 = Dt, this.opad = Ot, this.alg = kt, this.blocksize = jt, this.hash = It, this.size = Et[kt];
      }
      Bt.prototype.run = function(kt, Tt) {
        kt.copy(Tt, this.blocksize);
        var Pt = this.hash(Tt);
        return Pt.copy(this.opad, this.blocksize), this.hash(this.opad);
      };
      function St(kt) {
        function Tt(It) {
          return $(kt).update(It).digest();
        }
        function Pt(It) {
          return new _().update(It).digest();
        }
        return kt === "rmd160" || kt === "ripemd160" ? Pt : kt === "md5" ? d : Tt;
      }
      function $t(kt, Tt, Pt, It, jt) {
        rt(Pt, It), kt = st(kt, et, "Password"), Tt = st(Tt, et, "Salt"), jt = jt || "sha1";
        var Dt = new Bt(jt, kt, Tt.length), Ot = j.allocUnsafe(It), Ft = j.allocUnsafe(Tt.length + 4);
        Tt.copy(Ft, 0, 0, Tt.length);
        for (var Lt = 0, Zt = Et[jt], Kt = Math.ceil(It / Zt), ar = 1; ar <= Kt; ar++) {
          Ft.writeUInt32BE(ar, Tt.length);
          for (var sr = Dt.run(Ft, Dt.ipad1), er = sr, Ut = 1; Ut < Pt; Ut++) {
            er = Dt.run(er, Dt.ipad2);
            for (var xt = 0; xt < Zt; xt++) sr[xt] ^= er[xt];
          }
          sr.copy(Ot, Lt), Lt += Zt;
        }
        return Ot;
      }
      return syncBrowser = $t, syncBrowser;
    }
    var async$1, hasRequiredAsync;
    function requireAsync() {
      if (hasRequiredAsync) return async$1;
      hasRequiredAsync = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requirePrecondition(), $ = requireDefaultEncoding(), j = requireSyncBrowser(), rt = requireToBuffer(), et, st = commonjsGlobal.crypto && commonjsGlobal.crypto.subtle, pt = {
        sha: "SHA-1",
        "sha-1": "SHA-1",
        sha1: "SHA-1",
        sha256: "SHA-256",
        "sha-256": "SHA-256",
        sha384: "SHA-384",
        "sha-384": "SHA-384",
        "sha-512": "SHA-512",
        sha512: "SHA-512"
      }, Et = [];
      function Bt(Pt) {
        if (commonjsGlobal.process && !commonjsGlobal.process.browser || !st || !st.importKey || !st.deriveBits) return Promise.resolve(false);
        if (Et[Pt] !== void 0) return Et[Pt];
        et = et || d.alloc(8);
        var It = kt(et, et, 10, 128, Pt).then(function() {
          return true;
        }).catch(function() {
          return false;
        });
        return Et[Pt] = It, It;
      }
      var St;
      function $t() {
        return St || (commonjsGlobal.process && commonjsGlobal.process.nextTick ? St = commonjsGlobal.process.nextTick : commonjsGlobal.queueMicrotask ? St = commonjsGlobal.queueMicrotask : commonjsGlobal.setImmediate ? St = commonjsGlobal.setImmediate : St = commonjsGlobal.setTimeout, St);
      }
      function kt(Pt, It, jt, Dt, Ot) {
        return st.importKey("raw", Pt, {
          name: "PBKDF2"
        }, false, [
          "deriveBits"
        ]).then(function(Ft) {
          return st.deriveBits({
            name: "PBKDF2",
            salt: It,
            iterations: jt,
            hash: {
              name: Ot
            }
          }, Ft, Dt << 3);
        }).then(function(Ft) {
          return d.from(Ft);
        });
      }
      function Tt(Pt, It) {
        Pt.then(function(jt) {
          $t()(function() {
            It(null, jt);
          });
        }, function(jt) {
          $t()(function() {
            It(jt);
          });
        });
      }
      return async$1 = function(Pt, It, jt, Dt, Ot, Ft) {
        typeof Ot == "function" && (Ft = Ot, Ot = void 0), Ot = Ot || "sha1";
        var Lt = pt[Ot.toLowerCase()];
        if (!Lt || typeof commonjsGlobal.Promise != "function") {
          $t()(function() {
            var Zt;
            try {
              Zt = j(Pt, It, jt, Dt, Ot);
            } catch (Kt) {
              return Ft(Kt);
            }
            Ft(null, Zt);
          });
          return;
        }
        if (_(jt, Dt), Pt = rt(Pt, $, "Password"), It = rt(It, $, "Salt"), typeof Ft != "function") throw new Error("No callback provided to pbkdf2");
        Tt(Bt(Lt).then(function(Zt) {
          return Zt ? kt(Pt, It, jt, Dt, Lt) : j(Pt, It, jt, Dt, Ot);
        }), Ft);
      }, async$1;
    }
    var hasRequiredBrowser$7;
    function requireBrowser$7() {
      return hasRequiredBrowser$7 || (hasRequiredBrowser$7 = 1, browser$a.pbkdf2 = requireAsync(), browser$a.pbkdf2Sync = requireSyncBrowser()), browser$a;
    }
    var browser$9 = {}, des$1 = {}, utils$6 = {}, hasRequiredUtils$3;
    function requireUtils$3() {
      if (hasRequiredUtils$3) return utils$6;
      hasRequiredUtils$3 = 1, utils$6.readUInt32BE = function(rt, et) {
        var st = rt[0 + et] << 24 | rt[1 + et] << 16 | rt[2 + et] << 8 | rt[3 + et];
        return st >>> 0;
      }, utils$6.writeUInt32BE = function(rt, et, st) {
        rt[0 + st] = et >>> 24, rt[1 + st] = et >>> 16 & 255, rt[2 + st] = et >>> 8 & 255, rt[3 + st] = et & 255;
      }, utils$6.ip = function(rt, et, st, pt) {
        for (var Et = 0, Bt = 0, St = 6; St >= 0; St -= 2) {
          for (var $t = 0; $t <= 24; $t += 8) Et <<= 1, Et |= et >>> $t + St & 1;
          for (var $t = 0; $t <= 24; $t += 8) Et <<= 1, Et |= rt >>> $t + St & 1;
        }
        for (var St = 6; St >= 0; St -= 2) {
          for (var $t = 1; $t <= 25; $t += 8) Bt <<= 1, Bt |= et >>> $t + St & 1;
          for (var $t = 1; $t <= 25; $t += 8) Bt <<= 1, Bt |= rt >>> $t + St & 1;
        }
        st[pt + 0] = Et >>> 0, st[pt + 1] = Bt >>> 0;
      }, utils$6.rip = function(rt, et, st, pt) {
        for (var Et = 0, Bt = 0, St = 0; St < 4; St++) for (var $t = 24; $t >= 0; $t -= 8) Et <<= 1, Et |= et >>> $t + St & 1, Et <<= 1, Et |= rt >>> $t + St & 1;
        for (var St = 4; St < 8; St++) for (var $t = 24; $t >= 0; $t -= 8) Bt <<= 1, Bt |= et >>> $t + St & 1, Bt <<= 1, Bt |= rt >>> $t + St & 1;
        st[pt + 0] = Et >>> 0, st[pt + 1] = Bt >>> 0;
      }, utils$6.pc1 = function(rt, et, st, pt) {
        for (var Et = 0, Bt = 0, St = 7; St >= 5; St--) {
          for (var $t = 0; $t <= 24; $t += 8) Et <<= 1, Et |= et >> $t + St & 1;
          for (var $t = 0; $t <= 24; $t += 8) Et <<= 1, Et |= rt >> $t + St & 1;
        }
        for (var $t = 0; $t <= 24; $t += 8) Et <<= 1, Et |= et >> $t + St & 1;
        for (var St = 1; St <= 3; St++) {
          for (var $t = 0; $t <= 24; $t += 8) Bt <<= 1, Bt |= et >> $t + St & 1;
          for (var $t = 0; $t <= 24; $t += 8) Bt <<= 1, Bt |= rt >> $t + St & 1;
        }
        for (var $t = 0; $t <= 24; $t += 8) Bt <<= 1, Bt |= rt >> $t + St & 1;
        st[pt + 0] = Et >>> 0, st[pt + 1] = Bt >>> 0;
      }, utils$6.r28shl = function(rt, et) {
        return rt << et & 268435455 | rt >>> 28 - et;
      };
      var d = [
        14,
        11,
        17,
        4,
        27,
        23,
        25,
        0,
        13,
        22,
        7,
        18,
        5,
        9,
        16,
        24,
        2,
        20,
        12,
        21,
        1,
        8,
        15,
        26,
        15,
        4,
        25,
        19,
        9,
        1,
        26,
        16,
        5,
        11,
        23,
        8,
        12,
        7,
        17,
        0,
        22,
        3,
        10,
        14,
        6,
        20,
        27,
        24
      ];
      utils$6.pc2 = function(rt, et, st, pt) {
        for (var Et = 0, Bt = 0, St = d.length >>> 1, $t = 0; $t < St; $t++) Et <<= 1, Et |= rt >>> d[$t] & 1;
        for (var $t = St; $t < d.length; $t++) Bt <<= 1, Bt |= et >>> d[$t] & 1;
        st[pt + 0] = Et >>> 0, st[pt + 1] = Bt >>> 0;
      }, utils$6.expand = function(rt, et, st) {
        var pt = 0, Et = 0;
        pt = (rt & 1) << 5 | rt >>> 27;
        for (var Bt = 23; Bt >= 15; Bt -= 4) pt <<= 6, pt |= rt >>> Bt & 63;
        for (var Bt = 11; Bt >= 3; Bt -= 4) Et |= rt >>> Bt & 63, Et <<= 6;
        Et |= (rt & 31) << 1 | rt >>> 31, et[st + 0] = pt >>> 0, et[st + 1] = Et >>> 0;
      };
      var _ = [
        14,
        0,
        4,
        15,
        13,
        7,
        1,
        4,
        2,
        14,
        15,
        2,
        11,
        13,
        8,
        1,
        3,
        10,
        10,
        6,
        6,
        12,
        12,
        11,
        5,
        9,
        9,
        5,
        0,
        3,
        7,
        8,
        4,
        15,
        1,
        12,
        14,
        8,
        8,
        2,
        13,
        4,
        6,
        9,
        2,
        1,
        11,
        7,
        15,
        5,
        12,
        11,
        9,
        3,
        7,
        14,
        3,
        10,
        10,
        0,
        5,
        6,
        0,
        13,
        15,
        3,
        1,
        13,
        8,
        4,
        14,
        7,
        6,
        15,
        11,
        2,
        3,
        8,
        4,
        14,
        9,
        12,
        7,
        0,
        2,
        1,
        13,
        10,
        12,
        6,
        0,
        9,
        5,
        11,
        10,
        5,
        0,
        13,
        14,
        8,
        7,
        10,
        11,
        1,
        10,
        3,
        4,
        15,
        13,
        4,
        1,
        2,
        5,
        11,
        8,
        6,
        12,
        7,
        6,
        12,
        9,
        0,
        3,
        5,
        2,
        14,
        15,
        9,
        10,
        13,
        0,
        7,
        9,
        0,
        14,
        9,
        6,
        3,
        3,
        4,
        15,
        6,
        5,
        10,
        1,
        2,
        13,
        8,
        12,
        5,
        7,
        14,
        11,
        12,
        4,
        11,
        2,
        15,
        8,
        1,
        13,
        1,
        6,
        10,
        4,
        13,
        9,
        0,
        8,
        6,
        15,
        9,
        3,
        8,
        0,
        7,
        11,
        4,
        1,
        15,
        2,
        14,
        12,
        3,
        5,
        11,
        10,
        5,
        14,
        2,
        7,
        12,
        7,
        13,
        13,
        8,
        14,
        11,
        3,
        5,
        0,
        6,
        6,
        15,
        9,
        0,
        10,
        3,
        1,
        4,
        2,
        7,
        8,
        2,
        5,
        12,
        11,
        1,
        12,
        10,
        4,
        14,
        15,
        9,
        10,
        3,
        6,
        15,
        9,
        0,
        0,
        6,
        12,
        10,
        11,
        1,
        7,
        13,
        13,
        8,
        15,
        9,
        1,
        4,
        3,
        5,
        14,
        11,
        5,
        12,
        2,
        7,
        8,
        2,
        4,
        14,
        2,
        14,
        12,
        11,
        4,
        2,
        1,
        12,
        7,
        4,
        10,
        7,
        11,
        13,
        6,
        1,
        8,
        5,
        5,
        0,
        3,
        15,
        15,
        10,
        13,
        3,
        0,
        9,
        14,
        8,
        9,
        6,
        4,
        11,
        2,
        8,
        1,
        12,
        11,
        7,
        10,
        1,
        13,
        14,
        7,
        2,
        8,
        13,
        15,
        6,
        9,
        15,
        12,
        0,
        5,
        9,
        6,
        10,
        3,
        4,
        0,
        5,
        14,
        3,
        12,
        10,
        1,
        15,
        10,
        4,
        15,
        2,
        9,
        7,
        2,
        12,
        6,
        9,
        8,
        5,
        0,
        6,
        13,
        1,
        3,
        13,
        4,
        14,
        14,
        0,
        7,
        11,
        5,
        3,
        11,
        8,
        9,
        4,
        14,
        3,
        15,
        2,
        5,
        12,
        2,
        9,
        8,
        5,
        12,
        15,
        3,
        10,
        7,
        11,
        0,
        14,
        4,
        1,
        10,
        7,
        1,
        6,
        13,
        0,
        11,
        8,
        6,
        13,
        4,
        13,
        11,
        0,
        2,
        11,
        14,
        7,
        15,
        4,
        0,
        9,
        8,
        1,
        13,
        10,
        3,
        14,
        12,
        3,
        9,
        5,
        7,
        12,
        5,
        2,
        10,
        15,
        6,
        8,
        1,
        6,
        1,
        6,
        4,
        11,
        11,
        13,
        13,
        8,
        12,
        1,
        3,
        4,
        7,
        10,
        14,
        7,
        10,
        9,
        15,
        5,
        6,
        0,
        8,
        15,
        0,
        14,
        5,
        2,
        9,
        3,
        2,
        12,
        13,
        1,
        2,
        15,
        8,
        13,
        4,
        8,
        6,
        10,
        15,
        3,
        11,
        7,
        1,
        4,
        10,
        12,
        9,
        5,
        3,
        6,
        14,
        11,
        5,
        0,
        0,
        14,
        12,
        9,
        7,
        2,
        7,
        2,
        11,
        1,
        4,
        14,
        1,
        7,
        9,
        4,
        12,
        10,
        14,
        8,
        2,
        13,
        0,
        15,
        6,
        12,
        10,
        9,
        13,
        0,
        15,
        3,
        3,
        5,
        5,
        6,
        8,
        11
      ];
      utils$6.substitute = function(rt, et) {
        for (var st = 0, pt = 0; pt < 4; pt++) {
          var Et = rt >>> 18 - pt * 6 & 63, Bt = _[pt * 64 + Et];
          st <<= 4, st |= Bt;
        }
        for (var pt = 0; pt < 4; pt++) {
          var Et = et >>> 18 - pt * 6 & 63, Bt = _[4 * 64 + pt * 64 + Et];
          st <<= 4, st |= Bt;
        }
        return st >>> 0;
      };
      var $ = [
        16,
        25,
        12,
        11,
        3,
        20,
        4,
        15,
        31,
        17,
        9,
        6,
        27,
        14,
        1,
        22,
        30,
        24,
        8,
        18,
        0,
        5,
        29,
        23,
        13,
        19,
        2,
        26,
        10,
        21,
        28,
        7
      ];
      return utils$6.permute = function(rt) {
        for (var et = 0, st = 0; st < $.length; st++) et <<= 1, et |= rt >>> $[st] & 1;
        return et >>> 0;
      }, utils$6.padSplit = function(rt, et, st) {
        for (var pt = rt.toString(2); pt.length < et; ) pt = "0" + pt;
        for (var Et = [], Bt = 0; Bt < et; Bt += st) Et.push(pt.slice(Bt, Bt + st));
        return Et.join(" ");
      }, utils$6;
    }
    var minimalisticAssert, hasRequiredMinimalisticAssert;
    function requireMinimalisticAssert() {
      if (hasRequiredMinimalisticAssert) return minimalisticAssert;
      hasRequiredMinimalisticAssert = 1, minimalisticAssert = d;
      function d(_, $) {
        if (!_) throw new Error($ || "Assertion failed");
      }
      return d.equal = function($, j, rt) {
        if ($ != j) throw new Error(rt || "Assertion failed: " + $ + " != " + j);
      }, minimalisticAssert;
    }
    var cipher, hasRequiredCipher;
    function requireCipher() {
      if (hasRequiredCipher) return cipher;
      hasRequiredCipher = 1;
      var d = requireMinimalisticAssert();
      function _($) {
        this.options = $, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0, this.padding = $.padding !== false;
      }
      return cipher = _, _.prototype._init = function() {
      }, _.prototype.update = function(j) {
        return j.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(j) : this._updateEncrypt(j);
      }, _.prototype._buffer = function(j, rt) {
        for (var et = Math.min(this.buffer.length - this.bufferOff, j.length - rt), st = 0; st < et; st++) this.buffer[this.bufferOff + st] = j[rt + st];
        return this.bufferOff += et, et;
      }, _.prototype._flushBuffer = function(j, rt) {
        return this._update(this.buffer, 0, j, rt), this.bufferOff = 0, this.blockSize;
      }, _.prototype._updateEncrypt = function(j) {
        var rt = 0, et = 0, st = (this.bufferOff + j.length) / this.blockSize | 0, pt = new Array(st * this.blockSize);
        this.bufferOff !== 0 && (rt += this._buffer(j, rt), this.bufferOff === this.buffer.length && (et += this._flushBuffer(pt, et)));
        for (var Et = j.length - (j.length - rt) % this.blockSize; rt < Et; rt += this.blockSize) this._update(j, rt, pt, et), et += this.blockSize;
        for (; rt < j.length; rt++, this.bufferOff++) this.buffer[this.bufferOff] = j[rt];
        return pt;
      }, _.prototype._updateDecrypt = function(j) {
        for (var rt = 0, et = 0, st = Math.ceil((this.bufferOff + j.length) / this.blockSize) - 1, pt = new Array(st * this.blockSize); st > 0; st--) rt += this._buffer(j, rt), et += this._flushBuffer(pt, et);
        return rt += this._buffer(j, rt), pt;
      }, _.prototype.final = function(j) {
        var rt;
        j && (rt = this.update(j));
        var et;
        return this.type === "encrypt" ? et = this._finalEncrypt() : et = this._finalDecrypt(), rt ? rt.concat(et) : et;
      }, _.prototype._pad = function(j, rt) {
        if (rt === 0) return false;
        for (; rt < j.length; ) j[rt++] = 0;
        return true;
      }, _.prototype._finalEncrypt = function() {
        if (!this._pad(this.buffer, this.bufferOff)) return [];
        var j = new Array(this.blockSize);
        return this._update(this.buffer, 0, j, 0), j;
      }, _.prototype._unpad = function(j) {
        return j;
      }, _.prototype._finalDecrypt = function() {
        d.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
        var j = new Array(this.blockSize);
        return this._flushBuffer(j, 0), this._unpad(j);
      }, cipher;
    }
    var des, hasRequiredDes$1;
    function requireDes$1() {
      if (hasRequiredDes$1) return des;
      hasRequiredDes$1 = 1;
      var d = requireMinimalisticAssert(), _ = requireInherits_browser(), $ = requireUtils$3(), j = requireCipher();
      function rt() {
        this.tmp = new Array(2), this.keys = null;
      }
      function et(pt) {
        j.call(this, pt);
        var Et = new rt();
        this._desState = Et, this.deriveKeys(Et, pt.key);
      }
      _(et, j), des = et, et.create = function(Et) {
        return new et(Et);
      };
      var st = [
        1,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        1
      ];
      return et.prototype.deriveKeys = function(Et, Bt) {
        Et.keys = new Array(16 * 2), d.equal(Bt.length, this.blockSize, "Invalid key length");
        var St = $.readUInt32BE(Bt, 0), $t = $.readUInt32BE(Bt, 4);
        $.pc1(St, $t, Et.tmp, 0), St = Et.tmp[0], $t = Et.tmp[1];
        for (var kt = 0; kt < Et.keys.length; kt += 2) {
          var Tt = st[kt >>> 1];
          St = $.r28shl(St, Tt), $t = $.r28shl($t, Tt), $.pc2(St, $t, Et.keys, kt);
        }
      }, et.prototype._update = function(Et, Bt, St, $t) {
        var kt = this._desState, Tt = $.readUInt32BE(Et, Bt), Pt = $.readUInt32BE(Et, Bt + 4);
        $.ip(Tt, Pt, kt.tmp, 0), Tt = kt.tmp[0], Pt = kt.tmp[1], this.type === "encrypt" ? this._encrypt(kt, Tt, Pt, kt.tmp, 0) : this._decrypt(kt, Tt, Pt, kt.tmp, 0), Tt = kt.tmp[0], Pt = kt.tmp[1], $.writeUInt32BE(St, Tt, $t), $.writeUInt32BE(St, Pt, $t + 4);
      }, et.prototype._pad = function(Et, Bt) {
        if (this.padding === false) return false;
        for (var St = Et.length - Bt, $t = Bt; $t < Et.length; $t++) Et[$t] = St;
        return true;
      }, et.prototype._unpad = function(Et) {
        if (this.padding === false) return Et;
        for (var Bt = Et[Et.length - 1], St = Et.length - Bt; St < Et.length; St++) d.equal(Et[St], Bt);
        return Et.slice(0, Et.length - Bt);
      }, et.prototype._encrypt = function(Et, Bt, St, $t, kt) {
        for (var Tt = Bt, Pt = St, It = 0; It < Et.keys.length; It += 2) {
          var jt = Et.keys[It], Dt = Et.keys[It + 1];
          $.expand(Pt, Et.tmp, 0), jt ^= Et.tmp[0], Dt ^= Et.tmp[1];
          var Ot = $.substitute(jt, Dt), Ft = $.permute(Ot), Lt = Pt;
          Pt = (Tt ^ Ft) >>> 0, Tt = Lt;
        }
        $.rip(Pt, Tt, $t, kt);
      }, et.prototype._decrypt = function(Et, Bt, St, $t, kt) {
        for (var Tt = St, Pt = Bt, It = Et.keys.length - 2; It >= 0; It -= 2) {
          var jt = Et.keys[It], Dt = Et.keys[It + 1];
          $.expand(Tt, Et.tmp, 0), jt ^= Et.tmp[0], Dt ^= Et.tmp[1];
          var Ot = $.substitute(jt, Dt), Ft = $.permute(Ot), Lt = Tt;
          Tt = (Pt ^ Ft) >>> 0, Pt = Lt;
        }
        $.rip(Tt, Pt, $t, kt);
      }, des;
    }
    var cbc$1 = {}, hasRequiredCbc$1;
    function requireCbc$1() {
      if (hasRequiredCbc$1) return cbc$1;
      hasRequiredCbc$1 = 1;
      var d = requireMinimalisticAssert(), _ = requireInherits_browser(), $ = {};
      function j(et) {
        d.equal(et.length, 8, "Invalid IV length"), this.iv = new Array(8);
        for (var st = 0; st < this.iv.length; st++) this.iv[st] = et[st];
      }
      function rt(et) {
        function st(St) {
          et.call(this, St), this._cbcInit();
        }
        _(st, et);
        for (var pt = Object.keys($), Et = 0; Et < pt.length; Et++) {
          var Bt = pt[Et];
          st.prototype[Bt] = $[Bt];
        }
        return st.create = function($t) {
          return new st($t);
        }, st;
      }
      return cbc$1.instantiate = rt, $._cbcInit = function() {
        var st = new j(this.options.iv);
        this._cbcState = st;
      }, $._update = function(st, pt, Et, Bt) {
        var St = this._cbcState, $t = this.constructor.super_.prototype, kt = St.iv;
        if (this.type === "encrypt") {
          for (var Tt = 0; Tt < this.blockSize; Tt++) kt[Tt] ^= st[pt + Tt];
          $t._update.call(this, kt, 0, Et, Bt);
          for (var Tt = 0; Tt < this.blockSize; Tt++) kt[Tt] = Et[Bt + Tt];
        } else {
          $t._update.call(this, st, pt, Et, Bt);
          for (var Tt = 0; Tt < this.blockSize; Tt++) Et[Bt + Tt] ^= kt[Tt];
          for (var Tt = 0; Tt < this.blockSize; Tt++) kt[Tt] = st[pt + Tt];
        }
      }, cbc$1;
    }
    var ede, hasRequiredEde;
    function requireEde() {
      if (hasRequiredEde) return ede;
      hasRequiredEde = 1;
      var d = requireMinimalisticAssert(), _ = requireInherits_browser(), $ = requireCipher(), j = requireDes$1();
      function rt(st, pt) {
        d.equal(pt.length, 24, "Invalid key length");
        var Et = pt.slice(0, 8), Bt = pt.slice(8, 16), St = pt.slice(16, 24);
        st === "encrypt" ? this.ciphers = [
          j.create({
            type: "encrypt",
            key: Et
          }),
          j.create({
            type: "decrypt",
            key: Bt
          }),
          j.create({
            type: "encrypt",
            key: St
          })
        ] : this.ciphers = [
          j.create({
            type: "decrypt",
            key: St
          }),
          j.create({
            type: "encrypt",
            key: Bt
          }),
          j.create({
            type: "decrypt",
            key: Et
          })
        ];
      }
      function et(st) {
        $.call(this, st);
        var pt = new rt(this.type, this.options.key);
        this._edeState = pt;
      }
      return _(et, $), ede = et, et.create = function(pt) {
        return new et(pt);
      }, et.prototype._update = function(pt, Et, Bt, St) {
        var $t = this._edeState;
        $t.ciphers[0]._update(pt, Et, Bt, St), $t.ciphers[1]._update(Bt, St, Bt, St), $t.ciphers[2]._update(Bt, St, Bt, St);
      }, et.prototype._pad = j.prototype._pad, et.prototype._unpad = j.prototype._unpad, ede;
    }
    var hasRequiredDes;
    function requireDes() {
      return hasRequiredDes || (hasRequiredDes = 1, des$1.utils = requireUtils$3(), des$1.Cipher = requireCipher(), des$1.DES = requireDes$1(), des$1.CBC = requireCbc$1(), des$1.EDE = requireEde()), des$1;
    }
    var browserifyDes, hasRequiredBrowserifyDes;
    function requireBrowserifyDes() {
      if (hasRequiredBrowserifyDes) return browserifyDes;
      hasRequiredBrowserifyDes = 1;
      var d = requireCipherBase(), _ = requireDes(), $ = requireInherits_browser(), j = requireSafeBuffer$1().Buffer, rt = {
        "des-ede3-cbc": _.CBC.instantiate(_.EDE),
        "des-ede3": _.EDE,
        "des-ede-cbc": _.CBC.instantiate(_.EDE),
        "des-ede": _.EDE,
        "des-cbc": _.CBC.instantiate(_.DES),
        "des-ecb": _.DES
      };
      rt.des = rt["des-cbc"], rt.des3 = rt["des-ede3-cbc"], browserifyDes = et, $(et, d);
      function et(st) {
        d.call(this);
        var pt = st.mode.toLowerCase(), Et = rt[pt], Bt;
        st.decrypt ? Bt = "decrypt" : Bt = "encrypt";
        var St = st.key;
        j.isBuffer(St) || (St = j.from(St)), (pt === "des-ede" || pt === "des-ede-cbc") && (St = j.concat([
          St,
          St.slice(0, 8)
        ]));
        var $t = st.iv;
        j.isBuffer($t) || ($t = j.from($t)), this._des = Et.create({
          key: St,
          iv: $t,
          type: Bt
        });
      }
      return et.prototype._update = function(st) {
        return j.from(this._des.update(st));
      }, et.prototype._final = function() {
        return j.from(this._des.final());
      }, browserifyDes;
    }
    var browser$8 = {}, encrypter = {}, ecb = {}, hasRequiredEcb;
    function requireEcb() {
      return hasRequiredEcb || (hasRequiredEcb = 1, ecb.encrypt = function(d, _) {
        return d._cipher.encryptBlock(_);
      }, ecb.decrypt = function(d, _) {
        return d._cipher.decryptBlock(_);
      }), ecb;
    }
    var cbc = {}, bufferXor, hasRequiredBufferXor;
    function requireBufferXor() {
      return hasRequiredBufferXor || (hasRequiredBufferXor = 1, bufferXor = function(_, $) {
        for (var j = Math.min(_.length, $.length), rt = new Buffer(j), et = 0; et < j; ++et) rt[et] = _[et] ^ $[et];
        return rt;
      }), bufferXor;
    }
    var hasRequiredCbc;
    function requireCbc() {
      if (hasRequiredCbc) return cbc;
      hasRequiredCbc = 1;
      var d = requireBufferXor();
      return cbc.encrypt = function(_, $) {
        var j = d($, _._prev);
        return _._prev = _._cipher.encryptBlock(j), _._prev;
      }, cbc.decrypt = function(_, $) {
        var j = _._prev;
        _._prev = $;
        var rt = _._cipher.decryptBlock($);
        return d(rt, j);
      }, cbc;
    }
    var cfb = {}, hasRequiredCfb;
    function requireCfb() {
      if (hasRequiredCfb) return cfb;
      hasRequiredCfb = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireBufferXor();
      function $(j, rt, et) {
        var st = rt.length, pt = _(rt, j._cache);
        return j._cache = j._cache.slice(st), j._prev = d.concat([
          j._prev,
          et ? rt : pt
        ]), pt;
      }
      return cfb.encrypt = function(j, rt, et) {
        for (var st = d.allocUnsafe(0), pt; rt.length; ) if (j._cache.length === 0 && (j._cache = j._cipher.encryptBlock(j._prev), j._prev = d.allocUnsafe(0)), j._cache.length <= rt.length) pt = j._cache.length, st = d.concat([
          st,
          $(j, rt.slice(0, pt), et)
        ]), rt = rt.slice(pt);
        else {
          st = d.concat([
            st,
            $(j, rt, et)
          ]);
          break;
        }
        return st;
      }, cfb;
    }
    var cfb8 = {}, hasRequiredCfb8;
    function requireCfb8() {
      if (hasRequiredCfb8) return cfb8;
      hasRequiredCfb8 = 1;
      var d = requireSafeBuffer$1().Buffer;
      function _($, j, rt) {
        var et = $._cipher.encryptBlock($._prev), st = et[0] ^ j;
        return $._prev = d.concat([
          $._prev.slice(1),
          d.from([
            rt ? j : st
          ])
        ]), st;
      }
      return cfb8.encrypt = function($, j, rt) {
        for (var et = j.length, st = d.allocUnsafe(et), pt = -1; ++pt < et; ) st[pt] = _($, j[pt], rt);
        return st;
      }, cfb8;
    }
    var cfb1 = {}, hasRequiredCfb1;
    function requireCfb1() {
      if (hasRequiredCfb1) return cfb1;
      hasRequiredCfb1 = 1;
      var d = requireSafeBuffer$1().Buffer;
      function _(j, rt, et) {
        for (var st, pt = -1, Et = 8, Bt = 0, St, $t; ++pt < Et; ) st = j._cipher.encryptBlock(j._prev), St = rt & 1 << 7 - pt ? 128 : 0, $t = st[0] ^ St, Bt += ($t & 128) >> pt % 8, j._prev = $(j._prev, et ? St : $t);
        return Bt;
      }
      function $(j, rt) {
        var et = j.length, st = -1, pt = d.allocUnsafe(j.length);
        for (j = d.concat([
          j,
          d.from([
            rt
          ])
        ]); ++st < et; ) pt[st] = j[st] << 1 | j[st + 1] >> 7;
        return pt;
      }
      return cfb1.encrypt = function(j, rt, et) {
        for (var st = rt.length, pt = d.allocUnsafe(st), Et = -1; ++Et < st; ) pt[Et] = _(j, rt[Et], et);
        return pt;
      }, cfb1;
    }
    var ofb = {}, hasRequiredOfb;
    function requireOfb() {
      if (hasRequiredOfb) return ofb;
      hasRequiredOfb = 1;
      var d = requireBufferXor();
      function _($) {
        return $._prev = $._cipher.encryptBlock($._prev), $._prev;
      }
      return ofb.encrypt = function($, j) {
        for (; $._cache.length < j.length; ) $._cache = Buffer.concat([
          $._cache,
          _($)
        ]);
        var rt = $._cache.slice(0, j.length);
        return $._cache = $._cache.slice(j.length), d(j, rt);
      }, ofb;
    }
    var ctr = {}, incr32_1, hasRequiredIncr32;
    function requireIncr32() {
      if (hasRequiredIncr32) return incr32_1;
      hasRequiredIncr32 = 1;
      function d(_) {
        for (var $ = _.length, j; $--; ) if (j = _.readUInt8($), j === 255) _.writeUInt8(0, $);
        else {
          j++, _.writeUInt8(j, $);
          break;
        }
      }
      return incr32_1 = d, incr32_1;
    }
    var hasRequiredCtr;
    function requireCtr() {
      if (hasRequiredCtr) return ctr;
      hasRequiredCtr = 1;
      var d = requireBufferXor(), _ = requireSafeBuffer$1().Buffer, $ = requireIncr32();
      function j(et) {
        var st = et._cipher.encryptBlockRaw(et._prev);
        return $(et._prev), st;
      }
      var rt = 16;
      return ctr.encrypt = function(et, st) {
        var pt = Math.ceil(st.length / rt), Et = et._cache.length;
        et._cache = _.concat([
          et._cache,
          _.allocUnsafe(pt * rt)
        ]);
        for (var Bt = 0; Bt < pt; Bt++) {
          var St = j(et), $t = Et + Bt * rt;
          et._cache.writeUInt32BE(St[0], $t + 0), et._cache.writeUInt32BE(St[1], $t + 4), et._cache.writeUInt32BE(St[2], $t + 8), et._cache.writeUInt32BE(St[3], $t + 12);
        }
        var kt = et._cache.slice(0, st.length);
        return et._cache = et._cache.slice(st.length), d(st, kt);
      }, ctr;
    }
    const aes128 = {
      cipher: "AES",
      key: 128,
      iv: 16,
      mode: "CBC",
      type: "block"
    }, aes192 = {
      cipher: "AES",
      key: 192,
      iv: 16,
      mode: "CBC",
      type: "block"
    }, aes256 = {
      cipher: "AES",
      key: 256,
      iv: 16,
      mode: "CBC",
      type: "block"
    }, require$$2$1 = {
      "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes128,
      aes192,
      aes256,
      "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
      }
    };
    var modes_1, hasRequiredModes$1;
    function requireModes$1() {
      if (hasRequiredModes$1) return modes_1;
      hasRequiredModes$1 = 1;
      var d = {
        ECB: requireEcb(),
        CBC: requireCbc(),
        CFB: requireCfb(),
        CFB8: requireCfb8(),
        CFB1: requireCfb1(),
        OFB: requireOfb(),
        CTR: requireCtr(),
        GCM: requireCtr()
      }, _ = require$$2$1;
      for (var $ in _) _[$].module = d[_[$].mode];
      return modes_1 = _, modes_1;
    }
    var aes = {}, hasRequiredAes;
    function requireAes() {
      if (hasRequiredAes) return aes;
      hasRequiredAes = 1;
      var d = requireSafeBuffer$1().Buffer;
      function _(pt) {
        d.isBuffer(pt) || (pt = d.from(pt));
        for (var Et = pt.length / 4 | 0, Bt = new Array(Et), St = 0; St < Et; St++) Bt[St] = pt.readUInt32BE(St * 4);
        return Bt;
      }
      function $(pt) {
        for (var Et = 0; Et < pt.length; pt++) pt[Et] = 0;
      }
      function j(pt, Et, Bt, St, $t) {
        for (var kt = Bt[0], Tt = Bt[1], Pt = Bt[2], It = Bt[3], jt = pt[0] ^ Et[0], Dt = pt[1] ^ Et[1], Ot = pt[2] ^ Et[2], Ft = pt[3] ^ Et[3], Lt, Zt, Kt, ar, sr = 4, er = 1; er < $t; er++) Lt = kt[jt >>> 24] ^ Tt[Dt >>> 16 & 255] ^ Pt[Ot >>> 8 & 255] ^ It[Ft & 255] ^ Et[sr++], Zt = kt[Dt >>> 24] ^ Tt[Ot >>> 16 & 255] ^ Pt[Ft >>> 8 & 255] ^ It[jt & 255] ^ Et[sr++], Kt = kt[Ot >>> 24] ^ Tt[Ft >>> 16 & 255] ^ Pt[jt >>> 8 & 255] ^ It[Dt & 255] ^ Et[sr++], ar = kt[Ft >>> 24] ^ Tt[jt >>> 16 & 255] ^ Pt[Dt >>> 8 & 255] ^ It[Ot & 255] ^ Et[sr++], jt = Lt, Dt = Zt, Ot = Kt, Ft = ar;
        return Lt = (St[jt >>> 24] << 24 | St[Dt >>> 16 & 255] << 16 | St[Ot >>> 8 & 255] << 8 | St[Ft & 255]) ^ Et[sr++], Zt = (St[Dt >>> 24] << 24 | St[Ot >>> 16 & 255] << 16 | St[Ft >>> 8 & 255] << 8 | St[jt & 255]) ^ Et[sr++], Kt = (St[Ot >>> 24] << 24 | St[Ft >>> 16 & 255] << 16 | St[jt >>> 8 & 255] << 8 | St[Dt & 255]) ^ Et[sr++], ar = (St[Ft >>> 24] << 24 | St[jt >>> 16 & 255] << 16 | St[Dt >>> 8 & 255] << 8 | St[Ot & 255]) ^ Et[sr++], Lt = Lt >>> 0, Zt = Zt >>> 0, Kt = Kt >>> 0, ar = ar >>> 0, [
          Lt,
          Zt,
          Kt,
          ar
        ];
      }
      var rt = [
        0,
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        27,
        54
      ], et = function() {
        for (var pt = new Array(256), Et = 0; Et < 256; Et++) Et < 128 ? pt[Et] = Et << 1 : pt[Et] = Et << 1 ^ 283;
        for (var Bt = [], St = [], $t = [
          [],
          [],
          [],
          []
        ], kt = [
          [],
          [],
          [],
          []
        ], Tt = 0, Pt = 0, It = 0; It < 256; ++It) {
          var jt = Pt ^ Pt << 1 ^ Pt << 2 ^ Pt << 3 ^ Pt << 4;
          jt = jt >>> 8 ^ jt & 255 ^ 99, Bt[Tt] = jt, St[jt] = Tt;
          var Dt = pt[Tt], Ot = pt[Dt], Ft = pt[Ot], Lt = pt[jt] * 257 ^ jt * 16843008;
          $t[0][Tt] = Lt << 24 | Lt >>> 8, $t[1][Tt] = Lt << 16 | Lt >>> 16, $t[2][Tt] = Lt << 8 | Lt >>> 24, $t[3][Tt] = Lt, Lt = Ft * 16843009 ^ Ot * 65537 ^ Dt * 257 ^ Tt * 16843008, kt[0][jt] = Lt << 24 | Lt >>> 8, kt[1][jt] = Lt << 16 | Lt >>> 16, kt[2][jt] = Lt << 8 | Lt >>> 24, kt[3][jt] = Lt, Tt === 0 ? Tt = Pt = 1 : (Tt = Dt ^ pt[pt[pt[Ft ^ Dt]]], Pt ^= pt[pt[Pt]]);
        }
        return {
          SBOX: Bt,
          INV_SBOX: St,
          SUB_MIX: $t,
          INV_SUB_MIX: kt
        };
      }();
      function st(pt) {
        this._key = _(pt), this._reset();
      }
      return st.blockSize = 4 * 4, st.keySize = 256 / 8, st.prototype.blockSize = st.blockSize, st.prototype.keySize = st.keySize, st.prototype._reset = function() {
        for (var pt = this._key, Et = pt.length, Bt = Et + 6, St = (Bt + 1) * 4, $t = [], kt = 0; kt < Et; kt++) $t[kt] = pt[kt];
        for (kt = Et; kt < St; kt++) {
          var Tt = $t[kt - 1];
          kt % Et === 0 ? (Tt = Tt << 8 | Tt >>> 24, Tt = et.SBOX[Tt >>> 24] << 24 | et.SBOX[Tt >>> 16 & 255] << 16 | et.SBOX[Tt >>> 8 & 255] << 8 | et.SBOX[Tt & 255], Tt ^= rt[kt / Et | 0] << 24) : Et > 6 && kt % Et === 4 && (Tt = et.SBOX[Tt >>> 24] << 24 | et.SBOX[Tt >>> 16 & 255] << 16 | et.SBOX[Tt >>> 8 & 255] << 8 | et.SBOX[Tt & 255]), $t[kt] = $t[kt - Et] ^ Tt;
        }
        for (var Pt = [], It = 0; It < St; It++) {
          var jt = St - It, Dt = $t[jt - (It % 4 ? 0 : 4)];
          It < 4 || jt <= 4 ? Pt[It] = Dt : Pt[It] = et.INV_SUB_MIX[0][et.SBOX[Dt >>> 24]] ^ et.INV_SUB_MIX[1][et.SBOX[Dt >>> 16 & 255]] ^ et.INV_SUB_MIX[2][et.SBOX[Dt >>> 8 & 255]] ^ et.INV_SUB_MIX[3][et.SBOX[Dt & 255]];
        }
        this._nRounds = Bt, this._keySchedule = $t, this._invKeySchedule = Pt;
      }, st.prototype.encryptBlockRaw = function(pt) {
        return pt = _(pt), j(pt, this._keySchedule, et.SUB_MIX, et.SBOX, this._nRounds);
      }, st.prototype.encryptBlock = function(pt) {
        var Et = this.encryptBlockRaw(pt), Bt = d.allocUnsafe(16);
        return Bt.writeUInt32BE(Et[0], 0), Bt.writeUInt32BE(Et[1], 4), Bt.writeUInt32BE(Et[2], 8), Bt.writeUInt32BE(Et[3], 12), Bt;
      }, st.prototype.decryptBlock = function(pt) {
        pt = _(pt);
        var Et = pt[1];
        pt[1] = pt[3], pt[3] = Et;
        var Bt = j(pt, this._invKeySchedule, et.INV_SUB_MIX, et.INV_SBOX, this._nRounds), St = d.allocUnsafe(16);
        return St.writeUInt32BE(Bt[0], 0), St.writeUInt32BE(Bt[3], 4), St.writeUInt32BE(Bt[2], 8), St.writeUInt32BE(Bt[1], 12), St;
      }, st.prototype.scrub = function() {
        $(this._keySchedule), $(this._invKeySchedule), $(this._key);
      }, aes.AES = st, aes;
    }
    var ghash, hasRequiredGhash;
    function requireGhash() {
      if (hasRequiredGhash) return ghash;
      hasRequiredGhash = 1;
      var d = requireSafeBuffer$1().Buffer, _ = d.alloc(16, 0);
      function $(et) {
        return [
          et.readUInt32BE(0),
          et.readUInt32BE(4),
          et.readUInt32BE(8),
          et.readUInt32BE(12)
        ];
      }
      function j(et) {
        var st = d.allocUnsafe(16);
        return st.writeUInt32BE(et[0] >>> 0, 0), st.writeUInt32BE(et[1] >>> 0, 4), st.writeUInt32BE(et[2] >>> 0, 8), st.writeUInt32BE(et[3] >>> 0, 12), st;
      }
      function rt(et) {
        this.h = et, this.state = d.alloc(16, 0), this.cache = d.allocUnsafe(0);
      }
      return rt.prototype.ghash = function(et) {
        for (var st = -1; ++st < et.length; ) this.state[st] ^= et[st];
        this._multiply();
      }, rt.prototype._multiply = function() {
        for (var et = $(this.h), st = [
          0,
          0,
          0,
          0
        ], pt, Et, Bt, St = -1; ++St < 128; ) {
          for (Et = (this.state[~~(St / 8)] & 1 << 7 - St % 8) !== 0, Et && (st[0] ^= et[0], st[1] ^= et[1], st[2] ^= et[2], st[3] ^= et[3]), Bt = (et[3] & 1) !== 0, pt = 3; pt > 0; pt--) et[pt] = et[pt] >>> 1 | (et[pt - 1] & 1) << 31;
          et[0] = et[0] >>> 1, Bt && (et[0] = et[0] ^ 225 << 24);
        }
        this.state = j(st);
      }, rt.prototype.update = function(et) {
        this.cache = d.concat([
          this.cache,
          et
        ]);
        for (var st; this.cache.length >= 16; ) st = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(st);
      }, rt.prototype.final = function(et, st) {
        return this.cache.length && this.ghash(d.concat([
          this.cache,
          _
        ], 16)), this.ghash(j([
          0,
          et,
          0,
          st
        ])), this.state;
      }, ghash = rt, ghash;
    }
    var authCipher, hasRequiredAuthCipher;
    function requireAuthCipher() {
      if (hasRequiredAuthCipher) return authCipher;
      hasRequiredAuthCipher = 1;
      var d = requireAes(), _ = requireSafeBuffer$1().Buffer, $ = requireCipherBase(), j = requireInherits_browser(), rt = requireGhash(), et = requireBufferXor(), st = requireIncr32();
      function pt(St, $t) {
        var kt = 0;
        St.length !== $t.length && kt++;
        for (var Tt = Math.min(St.length, $t.length), Pt = 0; Pt < Tt; ++Pt) kt += St[Pt] ^ $t[Pt];
        return kt;
      }
      function Et(St, $t, kt) {
        if ($t.length === 12) return St._finID = _.concat([
          $t,
          _.from([
            0,
            0,
            0,
            1
          ])
        ]), _.concat([
          $t,
          _.from([
            0,
            0,
            0,
            2
          ])
        ]);
        var Tt = new rt(kt), Pt = $t.length, It = Pt % 16;
        Tt.update($t), It && (It = 16 - It, Tt.update(_.alloc(It, 0))), Tt.update(_.alloc(8, 0));
        var jt = Pt * 8, Dt = _.alloc(8);
        Dt.writeUIntBE(jt, 0, 8), Tt.update(Dt), St._finID = Tt.state;
        var Ot = _.from(St._finID);
        return st(Ot), Ot;
      }
      function Bt(St, $t, kt, Tt) {
        $.call(this);
        var Pt = _.alloc(4, 0);
        this._cipher = new d.AES($t);
        var It = this._cipher.encryptBlock(Pt);
        this._ghash = new rt(It), kt = Et(this, kt, It), this._prev = _.from(kt), this._cache = _.allocUnsafe(0), this._secCache = _.allocUnsafe(0), this._decrypt = Tt, this._alen = 0, this._len = 0, this._mode = St, this._authTag = null, this._called = false;
      }
      return j(Bt, $), Bt.prototype._update = function(St) {
        if (!this._called && this._alen) {
          var $t = 16 - this._alen % 16;
          $t < 16 && ($t = _.alloc($t, 0), this._ghash.update($t));
        }
        this._called = true;
        var kt = this._mode.encrypt(this, St);
        return this._decrypt ? this._ghash.update(St) : this._ghash.update(kt), this._len += St.length, kt;
      }, Bt.prototype._final = function() {
        if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
        var St = et(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
        if (this._decrypt && pt(St, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
        this._authTag = St, this._cipher.scrub();
      }, Bt.prototype.getAuthTag = function() {
        if (this._decrypt || !_.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
        return this._authTag;
      }, Bt.prototype.setAuthTag = function($t) {
        if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
        this._authTag = $t;
      }, Bt.prototype.setAAD = function($t) {
        if (this._called) throw new Error("Attempting to set AAD in unsupported state");
        this._ghash.update($t), this._alen += $t.length;
      }, authCipher = Bt, authCipher;
    }
    var streamCipher, hasRequiredStreamCipher;
    function requireStreamCipher() {
      if (hasRequiredStreamCipher) return streamCipher;
      hasRequiredStreamCipher = 1;
      var d = requireAes(), _ = requireSafeBuffer$1().Buffer, $ = requireCipherBase(), j = requireInherits_browser();
      function rt(et, st, pt, Et) {
        $.call(this), this._cipher = new d.AES(st), this._prev = _.from(pt), this._cache = _.allocUnsafe(0), this._secCache = _.allocUnsafe(0), this._decrypt = Et, this._mode = et;
      }
      return j(rt, $), rt.prototype._update = function(et) {
        return this._mode.encrypt(this, et, this._decrypt);
      }, rt.prototype._final = function() {
        this._cipher.scrub();
      }, streamCipher = rt, streamCipher;
    }
    var evp_bytestokey, hasRequiredEvp_bytestokey;
    function requireEvp_bytestokey() {
      if (hasRequiredEvp_bytestokey) return evp_bytestokey;
      hasRequiredEvp_bytestokey = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireMd5_js();
      function $(j, rt, et, st) {
        if (d.isBuffer(j) || (j = d.from(j, "binary")), rt && (d.isBuffer(rt) || (rt = d.from(rt, "binary")), rt.length !== 8)) throw new RangeError("salt should be Buffer with 8 byte length");
        for (var pt = et / 8, Et = d.alloc(pt), Bt = d.alloc(st || 0), St = d.alloc(0); pt > 0 || st > 0; ) {
          var $t = new _();
          $t.update(St), $t.update(j), rt && $t.update(rt), St = $t.digest();
          var kt = 0;
          if (pt > 0) {
            var Tt = Et.length - pt;
            kt = Math.min(pt, St.length), St.copy(Et, Tt, 0, kt), pt -= kt;
          }
          if (kt < St.length && st > 0) {
            var Pt = Bt.length - st, It = Math.min(st, St.length - kt);
            St.copy(Bt, Pt, kt, kt + It), st -= It;
          }
        }
        return St.fill(0), {
          key: Et,
          iv: Bt
        };
      }
      return evp_bytestokey = $, evp_bytestokey;
    }
    var hasRequiredEncrypter;
    function requireEncrypter() {
      if (hasRequiredEncrypter) return encrypter;
      hasRequiredEncrypter = 1;
      var d = requireModes$1(), _ = requireAuthCipher(), $ = requireSafeBuffer$1().Buffer, j = requireStreamCipher(), rt = requireCipherBase(), et = requireAes(), st = requireEvp_bytestokey(), pt = requireInherits_browser();
      function Et(Tt, Pt, It) {
        rt.call(this), this._cache = new St(), this._cipher = new et.AES(Pt), this._prev = $.from(It), this._mode = Tt, this._autopadding = true;
      }
      pt(Et, rt), Et.prototype._update = function(Tt) {
        this._cache.add(Tt);
        for (var Pt, It, jt = []; Pt = this._cache.get(); ) It = this._mode.encrypt(this, Pt), jt.push(It);
        return $.concat(jt);
      };
      var Bt = $.alloc(16, 16);
      Et.prototype._final = function() {
        var Tt = this._cache.flush();
        if (this._autopadding) return Tt = this._mode.encrypt(this, Tt), this._cipher.scrub(), Tt;
        if (!Tt.equals(Bt)) throw this._cipher.scrub(), new Error("data not multiple of block length");
      }, Et.prototype.setAutoPadding = function(Tt) {
        return this._autopadding = !!Tt, this;
      };
      function St() {
        this.cache = $.allocUnsafe(0);
      }
      St.prototype.add = function(Tt) {
        this.cache = $.concat([
          this.cache,
          Tt
        ]);
      }, St.prototype.get = function() {
        if (this.cache.length > 15) {
          var Tt = this.cache.slice(0, 16);
          return this.cache = this.cache.slice(16), Tt;
        }
        return null;
      }, St.prototype.flush = function() {
        for (var Tt = 16 - this.cache.length, Pt = $.allocUnsafe(Tt), It = -1; ++It < Tt; ) Pt.writeUInt8(Tt, It);
        return $.concat([
          this.cache,
          Pt
        ]);
      };
      function $t(Tt, Pt, It) {
        var jt = d[Tt.toLowerCase()];
        if (!jt) throw new TypeError("invalid suite type");
        if (typeof Pt == "string" && (Pt = $.from(Pt)), Pt.length !== jt.key / 8) throw new TypeError("invalid key length " + Pt.length);
        if (typeof It == "string" && (It = $.from(It)), jt.mode !== "GCM" && It.length !== jt.iv) throw new TypeError("invalid iv length " + It.length);
        return jt.type === "stream" ? new j(jt.module, Pt, It) : jt.type === "auth" ? new _(jt.module, Pt, It) : new Et(jt.module, Pt, It);
      }
      function kt(Tt, Pt) {
        var It = d[Tt.toLowerCase()];
        if (!It) throw new TypeError("invalid suite type");
        var jt = st(Pt, false, It.key, It.iv);
        return $t(Tt, jt.key, jt.iv);
      }
      return encrypter.createCipheriv = $t, encrypter.createCipher = kt, encrypter;
    }
    var decrypter = {}, hasRequiredDecrypter;
    function requireDecrypter() {
      if (hasRequiredDecrypter) return decrypter;
      hasRequiredDecrypter = 1;
      var d = requireAuthCipher(), _ = requireSafeBuffer$1().Buffer, $ = requireModes$1(), j = requireStreamCipher(), rt = requireCipherBase(), et = requireAes(), st = requireEvp_bytestokey(), pt = requireInherits_browser();
      function Et(Tt, Pt, It) {
        rt.call(this), this._cache = new Bt(), this._last = void 0, this._cipher = new et.AES(Pt), this._prev = _.from(It), this._mode = Tt, this._autopadding = true;
      }
      pt(Et, rt), Et.prototype._update = function(Tt) {
        this._cache.add(Tt);
        for (var Pt, It, jt = []; Pt = this._cache.get(this._autopadding); ) It = this._mode.decrypt(this, Pt), jt.push(It);
        return _.concat(jt);
      }, Et.prototype._final = function() {
        var Tt = this._cache.flush();
        if (this._autopadding) return St(this._mode.decrypt(this, Tt));
        if (Tt) throw new Error("data not multiple of block length");
      }, Et.prototype.setAutoPadding = function(Tt) {
        return this._autopadding = !!Tt, this;
      };
      function Bt() {
        this.cache = _.allocUnsafe(0);
      }
      Bt.prototype.add = function(Tt) {
        this.cache = _.concat([
          this.cache,
          Tt
        ]);
      }, Bt.prototype.get = function(Tt) {
        var Pt;
        if (Tt) {
          if (this.cache.length > 16) return Pt = this.cache.slice(0, 16), this.cache = this.cache.slice(16), Pt;
        } else if (this.cache.length >= 16) return Pt = this.cache.slice(0, 16), this.cache = this.cache.slice(16), Pt;
        return null;
      }, Bt.prototype.flush = function() {
        if (this.cache.length) return this.cache;
      };
      function St(Tt) {
        var Pt = Tt[15];
        if (Pt < 1 || Pt > 16) throw new Error("unable to decrypt data");
        for (var It = -1; ++It < Pt; ) if (Tt[It + (16 - Pt)] !== Pt) throw new Error("unable to decrypt data");
        if (Pt !== 16) return Tt.slice(0, 16 - Pt);
      }
      function $t(Tt, Pt, It) {
        var jt = $[Tt.toLowerCase()];
        if (!jt) throw new TypeError("invalid suite type");
        if (typeof It == "string" && (It = _.from(It)), jt.mode !== "GCM" && It.length !== jt.iv) throw new TypeError("invalid iv length " + It.length);
        if (typeof Pt == "string" && (Pt = _.from(Pt)), Pt.length !== jt.key / 8) throw new TypeError("invalid key length " + Pt.length);
        return jt.type === "stream" ? new j(jt.module, Pt, It, true) : jt.type === "auth" ? new d(jt.module, Pt, It, true) : new Et(jt.module, Pt, It);
      }
      function kt(Tt, Pt) {
        var It = $[Tt.toLowerCase()];
        if (!It) throw new TypeError("invalid suite type");
        var jt = st(Pt, false, It.key, It.iv);
        return $t(Tt, jt.key, jt.iv);
      }
      return decrypter.createDecipher = kt, decrypter.createDecipheriv = $t, decrypter;
    }
    var hasRequiredBrowser$6;
    function requireBrowser$6() {
      if (hasRequiredBrowser$6) return browser$8;
      hasRequiredBrowser$6 = 1;
      var d = requireEncrypter(), _ = requireDecrypter(), $ = require$$2$1;
      function j() {
        return Object.keys($);
      }
      return browser$8.createCipher = browser$8.Cipher = d.createCipher, browser$8.createCipheriv = browser$8.Cipheriv = d.createCipheriv, browser$8.createDecipher = browser$8.Decipher = _.createDecipher, browser$8.createDecipheriv = browser$8.Decipheriv = _.createDecipheriv, browser$8.listCiphers = browser$8.getCiphers = j, browser$8;
    }
    var modes = {}, hasRequiredModes;
    function requireModes() {
      return hasRequiredModes || (hasRequiredModes = 1, function(d) {
        d["des-ecb"] = {
          key: 8,
          iv: 0
        }, d["des-cbc"] = d.des = {
          key: 8,
          iv: 8
        }, d["des-ede3-cbc"] = d.des3 = {
          key: 24,
          iv: 8
        }, d["des-ede3"] = {
          key: 24,
          iv: 0
        }, d["des-ede-cbc"] = {
          key: 16,
          iv: 8
        }, d["des-ede"] = {
          key: 16,
          iv: 0
        };
      }(modes)), modes;
    }
    var hasRequiredBrowser$5;
    function requireBrowser$5() {
      if (hasRequiredBrowser$5) return browser$9;
      hasRequiredBrowser$5 = 1;
      var d = requireBrowserifyDes(), _ = requireBrowser$6(), $ = requireModes$1(), j = requireModes(), rt = requireEvp_bytestokey();
      function et(St, $t) {
        St = St.toLowerCase();
        var kt, Tt;
        if ($[St]) kt = $[St].key, Tt = $[St].iv;
        else if (j[St]) kt = j[St].key * 8, Tt = j[St].iv;
        else throw new TypeError("invalid suite type");
        var Pt = rt($t, false, kt, Tt);
        return pt(St, Pt.key, Pt.iv);
      }
      function st(St, $t) {
        St = St.toLowerCase();
        var kt, Tt;
        if ($[St]) kt = $[St].key, Tt = $[St].iv;
        else if (j[St]) kt = j[St].key * 8, Tt = j[St].iv;
        else throw new TypeError("invalid suite type");
        var Pt = rt($t, false, kt, Tt);
        return Et(St, Pt.key, Pt.iv);
      }
      function pt(St, $t, kt) {
        if (St = St.toLowerCase(), $[St]) return _.createCipheriv(St, $t, kt);
        if (j[St]) return new d({
          key: $t,
          iv: kt,
          mode: St
        });
        throw new TypeError("invalid suite type");
      }
      function Et(St, $t, kt) {
        if (St = St.toLowerCase(), $[St]) return _.createDecipheriv(St, $t, kt);
        if (j[St]) return new d({
          key: $t,
          iv: kt,
          mode: St,
          decrypt: true
        });
        throw new TypeError("invalid suite type");
      }
      function Bt() {
        return Object.keys(j).concat(_.getCiphers());
      }
      return browser$9.createCipher = browser$9.Cipher = et, browser$9.createCipheriv = browser$9.Cipheriv = pt, browser$9.createDecipher = browser$9.Decipher = st, browser$9.createDecipheriv = browser$9.Decipheriv = Et, browser$9.listCiphers = browser$9.getCiphers = Bt, browser$9;
    }
    var browser$7 = {}, bn$a = {
      exports: {}
    };
    bn$a.exports;
    var hasRequiredBn$7;
    function requireBn$7() {
      return hasRequiredBn$7 || (hasRequiredBn$7 = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$a)), bn$a.exports;
    }
    var bn$9 = {
      exports: {}
    };
    bn$9.exports;
    var hasRequiredBn$6;
    function requireBn$6() {
      return hasRequiredBn$6 || (hasRequiredBn$6 = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$9)), bn$9.exports;
    }
    var brorand = {
      exports: {}
    }, hasRequiredBrorand;
    function requireBrorand() {
      if (hasRequiredBrorand) return brorand.exports;
      hasRequiredBrorand = 1;
      var d;
      brorand.exports = function(rt) {
        return d || (d = new _(null)), d.generate(rt);
      };
      function _(j) {
        this.rand = j;
      }
      if (brorand.exports.Rand = _, _.prototype.generate = function(rt) {
        return this._rand(rt);
      }, _.prototype._rand = function(rt) {
        if (this.rand.getBytes) return this.rand.getBytes(rt);
        for (var et = new Uint8Array(rt), st = 0; st < et.length; st++) et[st] = this.rand.getByte();
        return et;
      }, typeof self == "object") self.crypto && self.crypto.getRandomValues ? _.prototype._rand = function(rt) {
        var et = new Uint8Array(rt);
        return self.crypto.getRandomValues(et), et;
      } : self.msCrypto && self.msCrypto.getRandomValues ? _.prototype._rand = function(rt) {
        var et = new Uint8Array(rt);
        return self.msCrypto.getRandomValues(et), et;
      } : typeof window == "object" && (_.prototype._rand = function() {
        throw new Error("Not implemented yet");
      });
      else try {
        var $ = requireCryptoBrowserify();
        if (typeof $.randomBytes != "function") throw new Error("Not supported");
        _.prototype._rand = function(rt) {
          return $.randomBytes(rt);
        };
      } catch {
      }
      return brorand.exports;
    }
    var mr, hasRequiredMr;
    function requireMr() {
      if (hasRequiredMr) return mr;
      hasRequiredMr = 1;
      var d = requireBn$6(), _ = requireBrorand();
      function $(j) {
        this.rand = j || new _.Rand();
      }
      return mr = $, $.create = function(rt) {
        return new $(rt);
      }, $.prototype._randbelow = function(rt) {
        var et = rt.bitLength(), st = Math.ceil(et / 8);
        do
          var pt = new d(this.rand.generate(st));
        while (pt.cmp(rt) >= 0);
        return pt;
      }, $.prototype._randrange = function(rt, et) {
        var st = et.sub(rt);
        return rt.add(this._randbelow(st));
      }, $.prototype.test = function(rt, et, st) {
        var pt = rt.bitLength(), Et = d.mont(rt), Bt = new d(1).toRed(Et);
        et || (et = Math.max(1, pt / 48 | 0));
        for (var St = rt.subn(1), $t = 0; !St.testn($t); $t++) ;
        for (var kt = rt.shrn($t), Tt = St.toRed(Et), Pt = true; et > 0; et--) {
          var It = this._randrange(new d(2), St);
          st && st(It);
          var jt = It.toRed(Et).redPow(kt);
          if (!(jt.cmp(Bt) === 0 || jt.cmp(Tt) === 0)) {
            for (var Dt = 1; Dt < $t; Dt++) {
              if (jt = jt.redSqr(), jt.cmp(Bt) === 0) return false;
              if (jt.cmp(Tt) === 0) break;
            }
            if (Dt === $t) return false;
          }
        }
        return Pt;
      }, $.prototype.getDivisor = function(rt, et) {
        var st = rt.bitLength(), pt = d.mont(rt), Et = new d(1).toRed(pt);
        et || (et = Math.max(1, st / 48 | 0));
        for (var Bt = rt.subn(1), St = 0; !Bt.testn(St); St++) ;
        for (var $t = rt.shrn(St), kt = Bt.toRed(pt); et > 0; et--) {
          var Tt = this._randrange(new d(2), Bt), Pt = rt.gcd(Tt);
          if (Pt.cmpn(1) !== 0) return Pt;
          var It = Tt.toRed(pt).redPow($t);
          if (!(It.cmp(Et) === 0 || It.cmp(kt) === 0)) {
            for (var jt = 1; jt < St; jt++) {
              if (It = It.redSqr(), It.cmp(Et) === 0) return It.fromRed().subn(1).gcd(rt);
              if (It.cmp(kt) === 0) break;
            }
            if (jt === St) return It = It.redSqr(), It.fromRed().subn(1).gcd(rt);
          }
        }
        return false;
      }, mr;
    }
    var generatePrime, hasRequiredGeneratePrime;
    function requireGeneratePrime() {
      if (hasRequiredGeneratePrime) return generatePrime;
      hasRequiredGeneratePrime = 1;
      var d = requireBrowser$b();
      generatePrime = jt, jt.simpleSieve = Pt, jt.fermatTest = It;
      var _ = requireBn$7(), $ = new _(24), j = requireMr(), rt = new j(), et = new _(1), st = new _(2), pt = new _(5);
      new _(16), new _(8);
      var Et = new _(10), Bt = new _(3);
      new _(7);
      var St = new _(11), $t = new _(4);
      new _(12);
      var kt = null;
      function Tt() {
        if (kt !== null) return kt;
        var Dt = 1048576, Ot = [];
        Ot[0] = 2;
        for (var Ft = 1, Lt = 3; Lt < Dt; Lt += 2) {
          for (var Zt = Math.ceil(Math.sqrt(Lt)), Kt = 0; Kt < Ft && Ot[Kt] <= Zt && Lt % Ot[Kt] !== 0; Kt++) ;
          Ft !== Kt && Ot[Kt] <= Zt || (Ot[Ft++] = Lt);
        }
        return kt = Ot, Ot;
      }
      function Pt(Dt) {
        for (var Ot = Tt(), Ft = 0; Ft < Ot.length; Ft++) if (Dt.modn(Ot[Ft]) === 0) return Dt.cmpn(Ot[Ft]) === 0;
        return true;
      }
      function It(Dt) {
        var Ot = _.mont(Dt);
        return st.toRed(Ot).redPow(Dt.subn(1)).fromRed().cmpn(1) === 0;
      }
      function jt(Dt, Ot) {
        if (Dt < 16) return Ot === 2 || Ot === 5 ? new _([
          140,
          123
        ]) : new _([
          140,
          39
        ]);
        Ot = new _(Ot);
        for (var Ft, Lt; ; ) {
          for (Ft = new _(d(Math.ceil(Dt / 8))); Ft.bitLength() > Dt; ) Ft.ishrn(1);
          if (Ft.isEven() && Ft.iadd(et), Ft.testn(1) || Ft.iadd(st), Ot.cmp(st)) {
            if (!Ot.cmp(pt)) for (; Ft.mod(Et).cmp(Bt); ) Ft.iadd($t);
          } else for (; Ft.mod($).cmp(St); ) Ft.iadd($t);
          if (Lt = Ft.shrn(1), Pt(Lt) && Pt(Ft) && It(Lt) && It(Ft) && rt.test(Lt) && rt.test(Ft)) return Ft;
        }
      }
      return generatePrime;
    }
    const modp1 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    }, modp2 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    }, modp5 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    }, modp14 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    }, modp15 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    }, modp16 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    }, modp17 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    }, modp18 = {
      gen: "02",
      prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }, require$$1$3 = {
      modp1,
      modp2,
      modp5,
      modp14,
      modp15,
      modp16,
      modp17,
      modp18
    };
    var dh, hasRequiredDh;
    function requireDh() {
      if (hasRequiredDh) return dh;
      hasRequiredDh = 1;
      var d = requireBn$7(), _ = requireMr(), $ = new _(), j = new d(24), rt = new d(11), et = new d(10), st = new d(3), pt = new d(7), Et = requireGeneratePrime(), Bt = requireBrowser$b();
      dh = Pt;
      function St(jt, Dt) {
        return Dt = Dt || "utf8", Buffer.isBuffer(jt) || (jt = new Buffer(jt, Dt)), this._pub = new d(jt), this;
      }
      function $t(jt, Dt) {
        return Dt = Dt || "utf8", Buffer.isBuffer(jt) || (jt = new Buffer(jt, Dt)), this._priv = new d(jt), this;
      }
      var kt = {};
      function Tt(jt, Dt) {
        var Ot = Dt.toString("hex"), Ft = [
          Ot,
          jt.toString(16)
        ].join("_");
        if (Ft in kt) return kt[Ft];
        var Lt = 0;
        if (jt.isEven() || !Et.simpleSieve || !Et.fermatTest(jt) || !$.test(jt)) return Lt += 1, Ot === "02" || Ot === "05" ? Lt += 8 : Lt += 4, kt[Ft] = Lt, Lt;
        $.test(jt.shrn(1)) || (Lt += 2);
        var Zt;
        switch (Ot) {
          case "02":
            jt.mod(j).cmp(rt) && (Lt += 8);
            break;
          case "05":
            Zt = jt.mod(et), Zt.cmp(st) && Zt.cmp(pt) && (Lt += 8);
            break;
          default:
            Lt += 4;
        }
        return kt[Ft] = Lt, Lt;
      }
      function Pt(jt, Dt, Ot) {
        this.setGenerator(Dt), this.__prime = new d(jt), this._prime = d.mont(this.__prime), this._primeLen = jt.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, Ot ? (this.setPublicKey = St, this.setPrivateKey = $t) : this._primeCode = 8;
      }
      Object.defineProperty(Pt.prototype, "verifyError", {
        enumerable: true,
        get: function() {
          return typeof this._primeCode != "number" && (this._primeCode = Tt(this.__prime, this.__gen)), this._primeCode;
        }
      }), Pt.prototype.generateKeys = function() {
        return this._priv || (this._priv = new d(Bt(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
      }, Pt.prototype.computeSecret = function(jt) {
        jt = new d(jt), jt = jt.toRed(this._prime);
        var Dt = jt.redPow(this._priv).fromRed(), Ot = new Buffer(Dt.toArray()), Ft = this.getPrime();
        if (Ot.length < Ft.length) {
          var Lt = new Buffer(Ft.length - Ot.length);
          Lt.fill(0), Ot = Buffer.concat([
            Lt,
            Ot
          ]);
        }
        return Ot;
      }, Pt.prototype.getPublicKey = function(Dt) {
        return It(this._pub, Dt);
      }, Pt.prototype.getPrivateKey = function(Dt) {
        return It(this._priv, Dt);
      }, Pt.prototype.getPrime = function(jt) {
        return It(this.__prime, jt);
      }, Pt.prototype.getGenerator = function(jt) {
        return It(this._gen, jt);
      }, Pt.prototype.setGenerator = function(jt, Dt) {
        return Dt = Dt || "utf8", Buffer.isBuffer(jt) || (jt = new Buffer(jt, Dt)), this.__gen = jt, this._gen = new d(jt), this;
      };
      function It(jt, Dt) {
        var Ot = new Buffer(jt.toArray());
        return Dt ? Ot.toString(Dt) : Ot;
      }
      return dh;
    }
    var hasRequiredBrowser$4;
    function requireBrowser$4() {
      if (hasRequiredBrowser$4) return browser$7;
      hasRequiredBrowser$4 = 1;
      var d = requireGeneratePrime(), _ = require$$1$3, $ = requireDh();
      function j(st) {
        var pt = new Buffer(_[st].prime, "hex"), Et = new Buffer(_[st].gen, "hex");
        return new $(pt, Et);
      }
      var rt = {
        binary: true,
        hex: true,
        base64: true
      };
      function et(st, pt, Et, Bt) {
        return Buffer.isBuffer(pt) || rt[pt] === void 0 ? et(st, "binary", pt, Et) : (pt = pt || "binary", Bt = Bt || "binary", Et = Et || new Buffer([
          2
        ]), Buffer.isBuffer(Et) || (Et = new Buffer(Et, Bt)), typeof st == "number" ? new $(d(st, Et), Et, true) : (Buffer.isBuffer(st) || (st = new Buffer(st, pt)), new $(st, Et, true)));
      }
      return browser$7.DiffieHellmanGroup = browser$7.createDiffieHellmanGroup = browser$7.getDiffieHellman = j, browser$7.createDiffieHellman = browser$7.DiffieHellman = et, browser$7;
    }
    var readableBrowser = {
      exports: {}
    }, processNextickArgs = {
      exports: {}
    }, hasRequiredProcessNextickArgs;
    function requireProcessNextickArgs() {
      if (hasRequiredProcessNextickArgs) return processNextickArgs.exports;
      hasRequiredProcessNextickArgs = 1, typeof process$1 > "u" || !process$1.version || process$1.version.indexOf("v0.") === 0 || process$1.version.indexOf("v1.") === 0 && process$1.version.indexOf("v1.8.") !== 0 ? processNextickArgs.exports = {
        nextTick: d
      } : processNextickArgs.exports = process$1;
      function d(_, $, j, rt) {
        if (typeof _ != "function") throw new TypeError('"callback" argument must be a function');
        var et = arguments.length, st, pt;
        switch (et) {
          case 0:
          case 1:
            return process$1.nextTick(_);
          case 2:
            return process$1.nextTick(function() {
              _.call(null, $);
            });
          case 3:
            return process$1.nextTick(function() {
              _.call(null, $, j);
            });
          case 4:
            return process$1.nextTick(function() {
              _.call(null, $, j, rt);
            });
          default:
            for (st = new Array(et - 1), pt = 0; pt < st.length; ) st[pt++] = arguments[pt];
            return process$1.nextTick(function() {
              _.apply(null, st);
            });
        }
      }
      return processNextickArgs.exports;
    }
    var isarray, hasRequiredIsarray;
    function requireIsarray() {
      if (hasRequiredIsarray) return isarray;
      hasRequiredIsarray = 1;
      var d = {}.toString;
      return isarray = Array.isArray || function(_) {
        return d.call(_) == "[object Array]";
      }, isarray;
    }
    var streamBrowser, hasRequiredStreamBrowser;
    function requireStreamBrowser() {
      return hasRequiredStreamBrowser || (hasRequiredStreamBrowser = 1, streamBrowser = eventsExports.EventEmitter), streamBrowser;
    }
    var safeBuffer = {
      exports: {}
    }, hasRequiredSafeBuffer;
    function requireSafeBuffer() {
      return hasRequiredSafeBuffer || (hasRequiredSafeBuffer = 1, function(d, _) {
        var $ = require$$0$2, j = $.Buffer;
        function rt(st, pt) {
          for (var Et in st) pt[Et] = st[Et];
        }
        j.from && j.alloc && j.allocUnsafe && j.allocUnsafeSlow ? d.exports = $ : (rt($, _), _.Buffer = et);
        function et(st, pt, Et) {
          return j(st, pt, Et);
        }
        rt(j, et), et.from = function(st, pt, Et) {
          if (typeof st == "number") throw new TypeError("Argument must not be a number");
          return j(st, pt, Et);
        }, et.alloc = function(st, pt, Et) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          var Bt = j(st);
          return pt !== void 0 ? typeof Et == "string" ? Bt.fill(pt, Et) : Bt.fill(pt) : Bt.fill(0), Bt;
        }, et.allocUnsafe = function(st) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          return j(st);
        }, et.allocUnsafeSlow = function(st) {
          if (typeof st != "number") throw new TypeError("Argument must be a number");
          return $.SlowBuffer(st);
        };
      }(safeBuffer, safeBuffer.exports)), safeBuffer.exports;
    }
    var util$1 = {}, hasRequiredUtil;
    function requireUtil() {
      if (hasRequiredUtil) return util$1;
      hasRequiredUtil = 1;
      function d(It) {
        return Array.isArray ? Array.isArray(It) : Pt(It) === "[object Array]";
      }
      util$1.isArray = d;
      function _(It) {
        return typeof It == "boolean";
      }
      util$1.isBoolean = _;
      function $(It) {
        return It === null;
      }
      util$1.isNull = $;
      function j(It) {
        return It == null;
      }
      util$1.isNullOrUndefined = j;
      function rt(It) {
        return typeof It == "number";
      }
      util$1.isNumber = rt;
      function et(It) {
        return typeof It == "string";
      }
      util$1.isString = et;
      function st(It) {
        return typeof It == "symbol";
      }
      util$1.isSymbol = st;
      function pt(It) {
        return It === void 0;
      }
      util$1.isUndefined = pt;
      function Et(It) {
        return Pt(It) === "[object RegExp]";
      }
      util$1.isRegExp = Et;
      function Bt(It) {
        return typeof It == "object" && It !== null;
      }
      util$1.isObject = Bt;
      function St(It) {
        return Pt(It) === "[object Date]";
      }
      util$1.isDate = St;
      function $t(It) {
        return Pt(It) === "[object Error]" || It instanceof Error;
      }
      util$1.isError = $t;
      function kt(It) {
        return typeof It == "function";
      }
      util$1.isFunction = kt;
      function Tt(It) {
        return It === null || typeof It == "boolean" || typeof It == "number" || typeof It == "string" || typeof It == "symbol" || typeof It > "u";
      }
      util$1.isPrimitive = Tt, util$1.isBuffer = require$$0$2.Buffer.isBuffer;
      function Pt(It) {
        return Object.prototype.toString.call(It);
      }
      return util$1;
    }
    var BufferList = {
      exports: {}
    }, hasRequiredBufferList;
    function requireBufferList() {
      return hasRequiredBufferList || (hasRequiredBufferList = 1, function(d) {
        function _(et, st) {
          if (!(et instanceof st)) throw new TypeError("Cannot call a class as a function");
        }
        var $ = requireSafeBuffer().Buffer, j = requireUtil$1();
        function rt(et, st, pt) {
          et.copy(st, pt);
        }
        d.exports = function() {
          function et() {
            _(this, et), this.head = null, this.tail = null, this.length = 0;
          }
          return et.prototype.push = function(pt) {
            var Et = {
              data: pt,
              next: null
            };
            this.length > 0 ? this.tail.next = Et : this.head = Et, this.tail = Et, ++this.length;
          }, et.prototype.unshift = function(pt) {
            var Et = {
              data: pt,
              next: this.head
            };
            this.length === 0 && (this.tail = Et), this.head = Et, ++this.length;
          }, et.prototype.shift = function() {
            if (this.length !== 0) {
              var pt = this.head.data;
              return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, pt;
            }
          }, et.prototype.clear = function() {
            this.head = this.tail = null, this.length = 0;
          }, et.prototype.join = function(pt) {
            if (this.length === 0) return "";
            for (var Et = this.head, Bt = "" + Et.data; Et = Et.next; ) Bt += pt + Et.data;
            return Bt;
          }, et.prototype.concat = function(pt) {
            if (this.length === 0) return $.alloc(0);
            for (var Et = $.allocUnsafe(pt >>> 0), Bt = this.head, St = 0; Bt; ) rt(Bt.data, Et, St), St += Bt.data.length, Bt = Bt.next;
            return Et;
          }, et;
        }(), j && j.inspect && j.inspect.custom && (d.exports.prototype[j.inspect.custom] = function() {
          var et = j.inspect({
            length: this.length
          });
          return this.constructor.name + " " + et;
        });
      }(BufferList)), BufferList.exports;
    }
    var destroy_1, hasRequiredDestroy;
    function requireDestroy() {
      if (hasRequiredDestroy) return destroy_1;
      hasRequiredDestroy = 1;
      var d = requireProcessNextickArgs();
      function _(rt, et) {
        var st = this, pt = this._readableState && this._readableState.destroyed, Et = this._writableState && this._writableState.destroyed;
        return pt || Et ? (et ? et(rt) : rt && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, d.nextTick(j, this, rt)) : d.nextTick(j, this, rt)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(rt || null, function(Bt) {
          !et && Bt ? st._writableState ? st._writableState.errorEmitted || (st._writableState.errorEmitted = true, d.nextTick(j, st, Bt)) : d.nextTick(j, st, Bt) : et && et(Bt);
        }), this);
      }
      function $() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      }
      function j(rt, et) {
        rt.emit("error", et);
      }
      return destroy_1 = {
        destroy: _,
        undestroy: $
      }, destroy_1;
    }
    var _stream_writable, hasRequired_stream_writable;
    function require_stream_writable() {
      if (hasRequired_stream_writable) return _stream_writable;
      hasRequired_stream_writable = 1;
      var d = requireProcessNextickArgs();
      _stream_writable = It;
      function _(Mt) {
        var At = this;
        this.next = null, this.entry = null, this.finish = function() {
          ct(At, Mt);
        };
      }
      var $ = !process$1.browser && [
        "v0.10",
        "v0.9."
      ].indexOf(process$1.version.slice(0, 5)) > -1 ? setImmediate : d.nextTick, j;
      It.WritableState = Tt;
      var rt = Object.create(requireUtil());
      rt.inherits = requireInherits_browser();
      var et = {
        deprecate: requireBrowser$a()
      }, st = requireStreamBrowser(), pt = requireSafeBuffer().Buffer, Et = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
      };
      function Bt(Mt) {
        return pt.from(Mt);
      }
      function St(Mt) {
        return pt.isBuffer(Mt) || Mt instanceof Et;
      }
      var $t = requireDestroy();
      rt.inherits(It, st);
      function kt() {
      }
      function Tt(Mt, At) {
        j = j || require_stream_duplex(), Mt = Mt || {};
        var ut = At instanceof j;
        this.objectMode = !!Mt.objectMode, ut && (this.objectMode = this.objectMode || !!Mt.writableObjectMode);
        var ot = Mt.highWaterMark, Ct = Mt.writableHighWaterMark, Rt = this.objectMode ? 16 : 16 * 1024;
        ot || ot === 0 ? this.highWaterMark = ot : ut && (Ct || Ct === 0) ? this.highWaterMark = Ct : this.highWaterMark = Rt, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
        var Nt = Mt.decodeStrings === false;
        this.decodeStrings = !Nt, this.defaultEncoding = Mt.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(Wt) {
          ar(At, Wt);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.bufferedRequestCount = 0, this.corkedRequestsFree = new _(this);
      }
      Tt.prototype.getBuffer = function() {
        for (var At = this.bufferedRequest, ut = []; At; ) ut.push(At), At = At.next;
        return ut;
      }, function() {
        try {
          Object.defineProperty(Tt.prototype, "buffer", {
            get: et.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch {
        }
      }();
      var Pt;
      typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Pt = Function.prototype[Symbol.hasInstance], Object.defineProperty(It, Symbol.hasInstance, {
        value: function(Mt) {
          return Pt.call(this, Mt) ? true : this !== It ? false : Mt && Mt._writableState instanceof Tt;
        }
      })) : Pt = function(Mt) {
        return Mt instanceof this;
      };
      function It(Mt) {
        if (j = j || require_stream_duplex(), !Pt.call(It, this) && !(this instanceof j)) return new It(Mt);
        this._writableState = new Tt(Mt, this), this.writable = true, Mt && (typeof Mt.write == "function" && (this._write = Mt.write), typeof Mt.writev == "function" && (this._writev = Mt.writev), typeof Mt.destroy == "function" && (this._destroy = Mt.destroy), typeof Mt.final == "function" && (this._final = Mt.final)), st.call(this);
      }
      It.prototype.pipe = function() {
        this.emit("error", new Error("Cannot pipe, not readable"));
      };
      function jt(Mt, At) {
        var ut = new Error("write after end");
        Mt.emit("error", ut), d.nextTick(At, ut);
      }
      function Dt(Mt, At, ut, ot) {
        var Ct = true, Rt = false;
        return ut === null ? Rt = new TypeError("May not write null values to stream") : typeof ut != "string" && ut !== void 0 && !At.objectMode && (Rt = new TypeError("Invalid non-string/buffer chunk")), Rt && (Mt.emit("error", Rt), d.nextTick(ot, Rt), Ct = false), Ct;
      }
      It.prototype.write = function(Mt, At, ut) {
        var ot = this._writableState, Ct = false, Rt = !ot.objectMode && St(Mt);
        return Rt && !pt.isBuffer(Mt) && (Mt = Bt(Mt)), typeof At == "function" && (ut = At, At = null), Rt ? At = "buffer" : At || (At = ot.defaultEncoding), typeof ut != "function" && (ut = kt), ot.ended ? jt(this, ut) : (Rt || Dt(this, ot, Mt, ut)) && (ot.pendingcb++, Ct = Ft(this, ot, Rt, Mt, At, ut)), Ct;
      }, It.prototype.cork = function() {
        var Mt = this._writableState;
        Mt.corked++;
      }, It.prototype.uncork = function() {
        var Mt = this._writableState;
        Mt.corked && (Mt.corked--, !Mt.writing && !Mt.corked && !Mt.bufferProcessing && Mt.bufferedRequest && Ut(this, Mt));
      }, It.prototype.setDefaultEncoding = function(At) {
        if (typeof At == "string" && (At = At.toLowerCase()), !([
          "hex",
          "utf8",
          "utf-8",
          "ascii",
          "binary",
          "base64",
          "ucs2",
          "ucs-2",
          "utf16le",
          "utf-16le",
          "raw"
        ].indexOf((At + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + At);
        return this._writableState.defaultEncoding = At, this;
      };
      function Ot(Mt, At, ut) {
        return !Mt.objectMode && Mt.decodeStrings !== false && typeof At == "string" && (At = pt.from(At, ut)), At;
      }
      Object.defineProperty(It.prototype, "writableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark;
        }
      });
      function Ft(Mt, At, ut, ot, Ct, Rt) {
        if (!ut) {
          var Nt = Ot(At, ot, Ct);
          ot !== Nt && (ut = true, Ct = "buffer", ot = Nt);
        }
        var Wt = At.objectMode ? 1 : ot.length;
        At.length += Wt;
        var Xt = At.length < At.highWaterMark;
        if (Xt || (At.needDrain = true), At.writing || At.corked) {
          var rr = At.lastBufferedRequest;
          At.lastBufferedRequest = {
            chunk: ot,
            encoding: Ct,
            isBuf: ut,
            callback: Rt,
            next: null
          }, rr ? rr.next = At.lastBufferedRequest : At.bufferedRequest = At.lastBufferedRequest, At.bufferedRequestCount += 1;
        } else Lt(Mt, At, false, Wt, ot, Ct, Rt);
        return Xt;
      }
      function Lt(Mt, At, ut, ot, Ct, Rt, Nt) {
        At.writelen = ot, At.writecb = Nt, At.writing = true, At.sync = true, ut ? Mt._writev(Ct, At.onwrite) : Mt._write(Ct, Rt, At.onwrite), At.sync = false;
      }
      function Zt(Mt, At, ut, ot, Ct) {
        --At.pendingcb, ut ? (d.nextTick(Ct, ot), d.nextTick(it, Mt, At), Mt._writableState.errorEmitted = true, Mt.emit("error", ot)) : (Ct(ot), Mt._writableState.errorEmitted = true, Mt.emit("error", ot), it(Mt, At));
      }
      function Kt(Mt) {
        Mt.writing = false, Mt.writecb = null, Mt.length -= Mt.writelen, Mt.writelen = 0;
      }
      function ar(Mt, At) {
        var ut = Mt._writableState, ot = ut.sync, Ct = ut.writecb;
        if (Kt(ut), At) Zt(Mt, ut, ot, At, Ct);
        else {
          var Rt = xt(ut);
          !Rt && !ut.corked && !ut.bufferProcessing && ut.bufferedRequest && Ut(Mt, ut), ot ? $(sr, Mt, ut, Rt, Ct) : sr(Mt, ut, Rt, Ct);
        }
      }
      function sr(Mt, At, ut, ot) {
        ut || er(Mt, At), At.pendingcb--, ot(), it(Mt, At);
      }
      function er(Mt, At) {
        At.length === 0 && At.needDrain && (At.needDrain = false, Mt.emit("drain"));
      }
      function Ut(Mt, At) {
        At.bufferProcessing = true;
        var ut = At.bufferedRequest;
        if (Mt._writev && ut && ut.next) {
          var ot = At.bufferedRequestCount, Ct = new Array(ot), Rt = At.corkedRequestsFree;
          Rt.entry = ut;
          for (var Nt = 0, Wt = true; ut; ) Ct[Nt] = ut, ut.isBuf || (Wt = false), ut = ut.next, Nt += 1;
          Ct.allBuffers = Wt, Lt(Mt, At, true, At.length, Ct, "", Rt.finish), At.pendingcb++, At.lastBufferedRequest = null, Rt.next ? (At.corkedRequestsFree = Rt.next, Rt.next = null) : At.corkedRequestsFree = new _(At), At.bufferedRequestCount = 0;
        } else {
          for (; ut; ) {
            var Xt = ut.chunk, rr = ut.encoding, Gt = ut.callback, Yt = At.objectMode ? 1 : Xt.length;
            if (Lt(Mt, At, false, Yt, Xt, rr, Gt), ut = ut.next, At.bufferedRequestCount--, At.writing) break;
          }
          ut === null && (At.lastBufferedRequest = null);
        }
        At.bufferedRequest = ut, At.bufferProcessing = false;
      }
      It.prototype._write = function(Mt, At, ut) {
        ut(new Error("_write() is not implemented"));
      }, It.prototype._writev = null, It.prototype.end = function(Mt, At, ut) {
        var ot = this._writableState;
        typeof Mt == "function" ? (ut = Mt, Mt = null, At = null) : typeof At == "function" && (ut = At, At = null), Mt != null && this.write(Mt, At), ot.corked && (ot.corked = 1, this.uncork()), ot.ending || at(this, ot, ut);
      };
      function xt(Mt) {
        return Mt.ending && Mt.length === 0 && Mt.bufferedRequest === null && !Mt.finished && !Mt.writing;
      }
      function tt(Mt, At) {
        Mt._final(function(ut) {
          At.pendingcb--, ut && Mt.emit("error", ut), At.prefinished = true, Mt.emit("prefinish"), it(Mt, At);
        });
      }
      function nt(Mt, At) {
        !At.prefinished && !At.finalCalled && (typeof Mt._final == "function" ? (At.pendingcb++, At.finalCalled = true, d.nextTick(tt, Mt, At)) : (At.prefinished = true, Mt.emit("prefinish")));
      }
      function it(Mt, At) {
        var ut = xt(At);
        return ut && (nt(Mt, At), At.pendingcb === 0 && (At.finished = true, Mt.emit("finish"))), ut;
      }
      function at(Mt, At, ut) {
        At.ending = true, it(Mt, At), ut && (At.finished ? d.nextTick(ut) : Mt.once("finish", ut)), At.ended = true, Mt.writable = false;
      }
      function ct(Mt, At, ut) {
        var ot = Mt.entry;
        for (Mt.entry = null; ot; ) {
          var Ct = ot.callback;
          At.pendingcb--, Ct(ut), ot = ot.next;
        }
        At.corkedRequestsFree.next = Mt;
      }
      return Object.defineProperty(It.prototype, "destroyed", {
        get: function() {
          return this._writableState === void 0 ? false : this._writableState.destroyed;
        },
        set: function(Mt) {
          this._writableState && (this._writableState.destroyed = Mt);
        }
      }), It.prototype.destroy = $t.destroy, It.prototype._undestroy = $t.undestroy, It.prototype._destroy = function(Mt, At) {
        this.end(), At(Mt);
      }, _stream_writable;
    }
    var _stream_duplex, hasRequired_stream_duplex;
    function require_stream_duplex() {
      if (hasRequired_stream_duplex) return _stream_duplex;
      hasRequired_stream_duplex = 1;
      var d = requireProcessNextickArgs(), _ = Object.keys || function($t) {
        var kt = [];
        for (var Tt in $t) kt.push(Tt);
        return kt;
      };
      _stream_duplex = Et;
      var $ = Object.create(requireUtil());
      $.inherits = requireInherits_browser();
      var j = require_stream_readable(), rt = require_stream_writable();
      $.inherits(Et, j);
      for (var et = _(rt.prototype), st = 0; st < et.length; st++) {
        var pt = et[st];
        Et.prototype[pt] || (Et.prototype[pt] = rt.prototype[pt]);
      }
      function Et($t) {
        if (!(this instanceof Et)) return new Et($t);
        j.call(this, $t), rt.call(this, $t), $t && $t.readable === false && (this.readable = false), $t && $t.writable === false && (this.writable = false), this.allowHalfOpen = true, $t && $t.allowHalfOpen === false && (this.allowHalfOpen = false), this.once("end", Bt);
      }
      Object.defineProperty(Et.prototype, "writableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark;
        }
      });
      function Bt() {
        this.allowHalfOpen || this._writableState.ended || d.nextTick(St, this);
      }
      function St($t) {
        $t.end();
      }
      return Object.defineProperty(Et.prototype, "destroyed", {
        get: function() {
          return this._readableState === void 0 || this._writableState === void 0 ? false : this._readableState.destroyed && this._writableState.destroyed;
        },
        set: function($t) {
          this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = $t, this._writableState.destroyed = $t);
        }
      }), Et.prototype._destroy = function($t, kt) {
        this.push(null), this.end(), d.nextTick(kt, $t);
      }, _stream_duplex;
    }
    var _stream_readable, hasRequired_stream_readable;
    function require_stream_readable() {
      if (hasRequired_stream_readable) return _stream_readable;
      hasRequired_stream_readable = 1;
      var d = requireProcessNextickArgs();
      _stream_readable = Ot;
      var _ = requireIsarray(), $;
      Ot.ReadableState = Dt, eventsExports.EventEmitter;
      var j = function(Gt, Yt) {
        return Gt.listeners(Yt).length;
      }, rt = requireStreamBrowser(), et = requireSafeBuffer().Buffer, st = (typeof commonjsGlobal < "u" ? commonjsGlobal : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
      };
      function pt(Gt) {
        return et.from(Gt);
      }
      function Et(Gt) {
        return et.isBuffer(Gt) || Gt instanceof st;
      }
      var Bt = Object.create(requireUtil());
      Bt.inherits = requireInherits_browser();
      var St = requireUtil$1(), $t = void 0;
      St && St.debuglog ? $t = St.debuglog("stream") : $t = function() {
      };
      var kt = requireBufferList(), Tt = requireDestroy(), Pt;
      Bt.inherits(Ot, rt);
      var It = [
        "error",
        "close",
        "destroy",
        "pause",
        "resume"
      ];
      function jt(Gt, Yt, tr) {
        if (typeof Gt.prependListener == "function") return Gt.prependListener(Yt, tr);
        !Gt._events || !Gt._events[Yt] ? Gt.on(Yt, tr) : _(Gt._events[Yt]) ? Gt._events[Yt].unshift(tr) : Gt._events[Yt] = [
          tr,
          Gt._events[Yt]
        ];
      }
      function Dt(Gt, Yt) {
        $ = $ || require_stream_duplex(), Gt = Gt || {};
        var tr = Yt instanceof $;
        this.objectMode = !!Gt.objectMode, tr && (this.objectMode = this.objectMode || !!Gt.readableObjectMode);
        var cr = Gt.highWaterMark, ir = Gt.readableHighWaterMark, Jt = this.objectMode ? 16 : 16 * 1024;
        cr || cr === 0 ? this.highWaterMark = cr : tr && (ir || ir === 0) ? this.highWaterMark = ir : this.highWaterMark = Jt, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new kt(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.destroyed = false, this.defaultEncoding = Gt.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, Gt.encoding && (Pt || (Pt = requireString_decoder().StringDecoder), this.decoder = new Pt(Gt.encoding), this.encoding = Gt.encoding);
      }
      function Ot(Gt) {
        if ($ = $ || require_stream_duplex(), !(this instanceof Ot)) return new Ot(Gt);
        this._readableState = new Dt(Gt, this), this.readable = true, Gt && (typeof Gt.read == "function" && (this._read = Gt.read), typeof Gt.destroy == "function" && (this._destroy = Gt.destroy)), rt.call(this);
      }
      Object.defineProperty(Ot.prototype, "destroyed", {
        get: function() {
          return this._readableState === void 0 ? false : this._readableState.destroyed;
        },
        set: function(Gt) {
          this._readableState && (this._readableState.destroyed = Gt);
        }
      }), Ot.prototype.destroy = Tt.destroy, Ot.prototype._undestroy = Tt.undestroy, Ot.prototype._destroy = function(Gt, Yt) {
        this.push(null), Yt(Gt);
      }, Ot.prototype.push = function(Gt, Yt) {
        var tr = this._readableState, cr;
        return tr.objectMode ? cr = true : typeof Gt == "string" && (Yt = Yt || tr.defaultEncoding, Yt !== tr.encoding && (Gt = et.from(Gt, Yt), Yt = ""), cr = true), Ft(this, Gt, Yt, false, cr);
      }, Ot.prototype.unshift = function(Gt) {
        return Ft(this, Gt, null, true, false);
      };
      function Ft(Gt, Yt, tr, cr, ir) {
        var Jt = Gt._readableState;
        if (Yt === null) Jt.reading = false, Ut(Gt, Jt);
        else {
          var vr;
          ir || (vr = Zt(Jt, Yt)), vr ? Gt.emit("error", vr) : Jt.objectMode || Yt && Yt.length > 0 ? (typeof Yt != "string" && !Jt.objectMode && Object.getPrototypeOf(Yt) !== et.prototype && (Yt = pt(Yt)), cr ? Jt.endEmitted ? Gt.emit("error", new Error("stream.unshift() after end event")) : Lt(Gt, Jt, Yt, true) : Jt.ended ? Gt.emit("error", new Error("stream.push() after EOF")) : (Jt.reading = false, Jt.decoder && !tr ? (Yt = Jt.decoder.write(Yt), Jt.objectMode || Yt.length !== 0 ? Lt(Gt, Jt, Yt, false) : nt(Gt, Jt)) : Lt(Gt, Jt, Yt, false))) : cr || (Jt.reading = false);
        }
        return Kt(Jt);
      }
      function Lt(Gt, Yt, tr, cr) {
        Yt.flowing && Yt.length === 0 && !Yt.sync ? (Gt.emit("data", tr), Gt.read(0)) : (Yt.length += Yt.objectMode ? 1 : tr.length, cr ? Yt.buffer.unshift(tr) : Yt.buffer.push(tr), Yt.needReadable && xt(Gt)), nt(Gt, Yt);
      }
      function Zt(Gt, Yt) {
        var tr;
        return !Et(Yt) && typeof Yt != "string" && Yt !== void 0 && !Gt.objectMode && (tr = new TypeError("Invalid non-string/buffer chunk")), tr;
      }
      function Kt(Gt) {
        return !Gt.ended && (Gt.needReadable || Gt.length < Gt.highWaterMark || Gt.length === 0);
      }
      Ot.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      }, Ot.prototype.setEncoding = function(Gt) {
        return Pt || (Pt = requireString_decoder().StringDecoder), this._readableState.decoder = new Pt(Gt), this._readableState.encoding = Gt, this;
      };
      var ar = 8388608;
      function sr(Gt) {
        return Gt >= ar ? Gt = ar : (Gt--, Gt |= Gt >>> 1, Gt |= Gt >>> 2, Gt |= Gt >>> 4, Gt |= Gt >>> 8, Gt |= Gt >>> 16, Gt++), Gt;
      }
      function er(Gt, Yt) {
        return Gt <= 0 || Yt.length === 0 && Yt.ended ? 0 : Yt.objectMode ? 1 : Gt !== Gt ? Yt.flowing && Yt.length ? Yt.buffer.head.data.length : Yt.length : (Gt > Yt.highWaterMark && (Yt.highWaterMark = sr(Gt)), Gt <= Yt.length ? Gt : Yt.ended ? Yt.length : (Yt.needReadable = true, 0));
      }
      Ot.prototype.read = function(Gt) {
        $t("read", Gt), Gt = parseInt(Gt, 10);
        var Yt = this._readableState, tr = Gt;
        if (Gt !== 0 && (Yt.emittedReadable = false), Gt === 0 && Yt.needReadable && (Yt.length >= Yt.highWaterMark || Yt.ended)) return $t("read: emitReadable", Yt.length, Yt.ended), Yt.length === 0 && Yt.ended ? Wt(this) : xt(this), null;
        if (Gt = er(Gt, Yt), Gt === 0 && Yt.ended) return Yt.length === 0 && Wt(this), null;
        var cr = Yt.needReadable;
        $t("need readable", cr), (Yt.length === 0 || Yt.length - Gt < Yt.highWaterMark) && (cr = true, $t("length less than watermark", cr)), Yt.ended || Yt.reading ? (cr = false, $t("reading or ended", cr)) : cr && ($t("do read"), Yt.reading = true, Yt.sync = true, Yt.length === 0 && (Yt.needReadable = true), this._read(Yt.highWaterMark), Yt.sync = false, Yt.reading || (Gt = er(tr, Yt)));
        var ir;
        return Gt > 0 ? ir = ot(Gt, Yt) : ir = null, ir === null ? (Yt.needReadable = true, Gt = 0) : Yt.length -= Gt, Yt.length === 0 && (Yt.ended || (Yt.needReadable = true), tr !== Gt && Yt.ended && Wt(this)), ir !== null && this.emit("data", ir), ir;
      };
      function Ut(Gt, Yt) {
        if (!Yt.ended) {
          if (Yt.decoder) {
            var tr = Yt.decoder.end();
            tr && tr.length && (Yt.buffer.push(tr), Yt.length += Yt.objectMode ? 1 : tr.length);
          }
          Yt.ended = true, xt(Gt);
        }
      }
      function xt(Gt) {
        var Yt = Gt._readableState;
        Yt.needReadable = false, Yt.emittedReadable || ($t("emitReadable", Yt.flowing), Yt.emittedReadable = true, Yt.sync ? d.nextTick(tt, Gt) : tt(Gt));
      }
      function tt(Gt) {
        $t("emit readable"), Gt.emit("readable"), ut(Gt);
      }
      function nt(Gt, Yt) {
        Yt.readingMore || (Yt.readingMore = true, d.nextTick(it, Gt, Yt));
      }
      function it(Gt, Yt) {
        for (var tr = Yt.length; !Yt.reading && !Yt.flowing && !Yt.ended && Yt.length < Yt.highWaterMark && ($t("maybeReadMore read 0"), Gt.read(0), tr !== Yt.length); ) tr = Yt.length;
        Yt.readingMore = false;
      }
      Ot.prototype._read = function(Gt) {
        this.emit("error", new Error("_read() is not implemented"));
      }, Ot.prototype.pipe = function(Gt, Yt) {
        var tr = this, cr = this._readableState;
        switch (cr.pipesCount) {
          case 0:
            cr.pipes = Gt;
            break;
          case 1:
            cr.pipes = [
              cr.pipes,
              Gt
            ];
            break;
          default:
            cr.pipes.push(Gt);
            break;
        }
        cr.pipesCount += 1, $t("pipe count=%d opts=%j", cr.pipesCount, Yt);
        var ir = (!Yt || Yt.end !== false) && Gt !== process$1.stdout && Gt !== process$1.stderr, Jt = ir ? Br : Gr;
        cr.endEmitted ? d.nextTick(Jt) : tr.once("end", Jt), Gt.on("unpipe", vr);
        function vr(Tr, yr) {
          $t("onunpipe"), Tr === tr && yr && yr.hasUnpiped === false && (yr.hasUnpiped = true, Ur());
        }
        function Br() {
          $t("onend"), Gt.end();
        }
        var _r = at(tr);
        Gt.on("drain", _r);
        var $r = false;
        function Ur() {
          $t("cleanup"), Gt.removeListener("close", kr), Gt.removeListener("finish", Lr), Gt.removeListener("drain", _r), Gt.removeListener("error", Kr), Gt.removeListener("unpipe", vr), tr.removeListener("end", Br), tr.removeListener("end", Gr), tr.removeListener("data", Mr), $r = true, cr.awaitDrain && (!Gt._writableState || Gt._writableState.needDrain) && _r();
        }
        var Sr = false;
        tr.on("data", Mr);
        function Mr(Tr) {
          $t("ondata"), Sr = false;
          var yr = Gt.write(Tr);
          yr === false && !Sr && ((cr.pipesCount === 1 && cr.pipes === Gt || cr.pipesCount > 1 && rr(cr.pipes, Gt) !== -1) && !$r && ($t("false write response, pause", cr.awaitDrain), cr.awaitDrain++, Sr = true), tr.pause());
        }
        function Kr(Tr) {
          $t("onerror", Tr), Gr(), Gt.removeListener("error", Kr), j(Gt, "error") === 0 && Gt.emit("error", Tr);
        }
        jt(Gt, "error", Kr);
        function kr() {
          Gt.removeListener("finish", Lr), Gr();
        }
        Gt.once("close", kr);
        function Lr() {
          $t("onfinish"), Gt.removeListener("close", kr), Gr();
        }
        Gt.once("finish", Lr);
        function Gr() {
          $t("unpipe"), tr.unpipe(Gt);
        }
        return Gt.emit("pipe", tr), cr.flowing || ($t("pipe resume"), tr.resume()), Gt;
      };
      function at(Gt) {
        return function() {
          var Yt = Gt._readableState;
          $t("pipeOnDrain", Yt.awaitDrain), Yt.awaitDrain && Yt.awaitDrain--, Yt.awaitDrain === 0 && j(Gt, "data") && (Yt.flowing = true, ut(Gt));
        };
      }
      Ot.prototype.unpipe = function(Gt) {
        var Yt = this._readableState, tr = {
          hasUnpiped: false
        };
        if (Yt.pipesCount === 0) return this;
        if (Yt.pipesCount === 1) return Gt && Gt !== Yt.pipes ? this : (Gt || (Gt = Yt.pipes), Yt.pipes = null, Yt.pipesCount = 0, Yt.flowing = false, Gt && Gt.emit("unpipe", this, tr), this);
        if (!Gt) {
          var cr = Yt.pipes, ir = Yt.pipesCount;
          Yt.pipes = null, Yt.pipesCount = 0, Yt.flowing = false;
          for (var Jt = 0; Jt < ir; Jt++) cr[Jt].emit("unpipe", this, {
            hasUnpiped: false
          });
          return this;
        }
        var vr = rr(Yt.pipes, Gt);
        return vr === -1 ? this : (Yt.pipes.splice(vr, 1), Yt.pipesCount -= 1, Yt.pipesCount === 1 && (Yt.pipes = Yt.pipes[0]), Gt.emit("unpipe", this, tr), this);
      }, Ot.prototype.on = function(Gt, Yt) {
        var tr = rt.prototype.on.call(this, Gt, Yt);
        if (Gt === "data") this._readableState.flowing !== false && this.resume();
        else if (Gt === "readable") {
          var cr = this._readableState;
          !cr.endEmitted && !cr.readableListening && (cr.readableListening = cr.needReadable = true, cr.emittedReadable = false, cr.reading ? cr.length && xt(this) : d.nextTick(ct, this));
        }
        return tr;
      }, Ot.prototype.addListener = Ot.prototype.on;
      function ct(Gt) {
        $t("readable nexttick read 0"), Gt.read(0);
      }
      Ot.prototype.resume = function() {
        var Gt = this._readableState;
        return Gt.flowing || ($t("resume"), Gt.flowing = true, Mt(this, Gt)), this;
      };
      function Mt(Gt, Yt) {
        Yt.resumeScheduled || (Yt.resumeScheduled = true, d.nextTick(At, Gt, Yt));
      }
      function At(Gt, Yt) {
        Yt.reading || ($t("resume read 0"), Gt.read(0)), Yt.resumeScheduled = false, Yt.awaitDrain = 0, Gt.emit("resume"), ut(Gt), Yt.flowing && !Yt.reading && Gt.read(0);
      }
      Ot.prototype.pause = function() {
        return $t("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && ($t("pause"), this._readableState.flowing = false, this.emit("pause")), this;
      };
      function ut(Gt) {
        var Yt = Gt._readableState;
        for ($t("flow", Yt.flowing); Yt.flowing && Gt.read() !== null; ) ;
      }
      Ot.prototype.wrap = function(Gt) {
        var Yt = this, tr = this._readableState, cr = false;
        Gt.on("end", function() {
          if ($t("wrapped end"), tr.decoder && !tr.ended) {
            var vr = tr.decoder.end();
            vr && vr.length && Yt.push(vr);
          }
          Yt.push(null);
        }), Gt.on("data", function(vr) {
          if ($t("wrapped data"), tr.decoder && (vr = tr.decoder.write(vr)), !(tr.objectMode && vr == null) && !(!tr.objectMode && (!vr || !vr.length))) {
            var Br = Yt.push(vr);
            Br || (cr = true, Gt.pause());
          }
        });
        for (var ir in Gt) this[ir] === void 0 && typeof Gt[ir] == "function" && (this[ir] = /* @__PURE__ */ function(vr) {
          return function() {
            return Gt[vr].apply(Gt, arguments);
          };
        }(ir));
        for (var Jt = 0; Jt < It.length; Jt++) Gt.on(It[Jt], this.emit.bind(this, It[Jt]));
        return this._read = function(vr) {
          $t("wrapped _read", vr), cr && (cr = false, Gt.resume());
        }, this;
      }, Object.defineProperty(Ot.prototype, "readableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._readableState.highWaterMark;
        }
      }), Ot._fromList = ot;
      function ot(Gt, Yt) {
        if (Yt.length === 0) return null;
        var tr;
        return Yt.objectMode ? tr = Yt.buffer.shift() : !Gt || Gt >= Yt.length ? (Yt.decoder ? tr = Yt.buffer.join("") : Yt.buffer.length === 1 ? tr = Yt.buffer.head.data : tr = Yt.buffer.concat(Yt.length), Yt.buffer.clear()) : tr = Ct(Gt, Yt.buffer, Yt.decoder), tr;
      }
      function Ct(Gt, Yt, tr) {
        var cr;
        return Gt < Yt.head.data.length ? (cr = Yt.head.data.slice(0, Gt), Yt.head.data = Yt.head.data.slice(Gt)) : Gt === Yt.head.data.length ? cr = Yt.shift() : cr = tr ? Rt(Gt, Yt) : Nt(Gt, Yt), cr;
      }
      function Rt(Gt, Yt) {
        var tr = Yt.head, cr = 1, ir = tr.data;
        for (Gt -= ir.length; tr = tr.next; ) {
          var Jt = tr.data, vr = Gt > Jt.length ? Jt.length : Gt;
          if (vr === Jt.length ? ir += Jt : ir += Jt.slice(0, Gt), Gt -= vr, Gt === 0) {
            vr === Jt.length ? (++cr, tr.next ? Yt.head = tr.next : Yt.head = Yt.tail = null) : (Yt.head = tr, tr.data = Jt.slice(vr));
            break;
          }
          ++cr;
        }
        return Yt.length -= cr, ir;
      }
      function Nt(Gt, Yt) {
        var tr = et.allocUnsafe(Gt), cr = Yt.head, ir = 1;
        for (cr.data.copy(tr), Gt -= cr.data.length; cr = cr.next; ) {
          var Jt = cr.data, vr = Gt > Jt.length ? Jt.length : Gt;
          if (Jt.copy(tr, tr.length - Gt, 0, vr), Gt -= vr, Gt === 0) {
            vr === Jt.length ? (++ir, cr.next ? Yt.head = cr.next : Yt.head = Yt.tail = null) : (Yt.head = cr, cr.data = Jt.slice(vr));
            break;
          }
          ++ir;
        }
        return Yt.length -= ir, tr;
      }
      function Wt(Gt) {
        var Yt = Gt._readableState;
        if (Yt.length > 0) throw new Error('"endReadable()" called on non-empty stream');
        Yt.endEmitted || (Yt.ended = true, d.nextTick(Xt, Yt, Gt));
      }
      function Xt(Gt, Yt) {
        !Gt.endEmitted && Gt.length === 0 && (Gt.endEmitted = true, Yt.readable = false, Yt.emit("end"));
      }
      function rr(Gt, Yt) {
        for (var tr = 0, cr = Gt.length; tr < cr; tr++) if (Gt[tr] === Yt) return tr;
        return -1;
      }
      return _stream_readable;
    }
    var _stream_transform, hasRequired_stream_transform;
    function require_stream_transform() {
      if (hasRequired_stream_transform) return _stream_transform;
      hasRequired_stream_transform = 1, _stream_transform = j;
      var d = require_stream_duplex(), _ = Object.create(requireUtil());
      _.inherits = requireInherits_browser(), _.inherits(j, d);
      function $(st, pt) {
        var Et = this._transformState;
        Et.transforming = false;
        var Bt = Et.writecb;
        if (!Bt) return this.emit("error", new Error("write callback called multiple times"));
        Et.writechunk = null, Et.writecb = null, pt != null && this.push(pt), Bt(st);
        var St = this._readableState;
        St.reading = false, (St.needReadable || St.length < St.highWaterMark) && this._read(St.highWaterMark);
      }
      function j(st) {
        if (!(this instanceof j)) return new j(st);
        d.call(this, st), this._transformState = {
          afterTransform: $.bind(this),
          needTransform: false,
          transforming: false,
          writecb: null,
          writechunk: null,
          writeencoding: null
        }, this._readableState.needReadable = true, this._readableState.sync = false, st && (typeof st.transform == "function" && (this._transform = st.transform), typeof st.flush == "function" && (this._flush = st.flush)), this.on("prefinish", rt);
      }
      function rt() {
        var st = this;
        typeof this._flush == "function" ? this._flush(function(pt, Et) {
          et(st, pt, Et);
        }) : et(this, null, null);
      }
      j.prototype.push = function(st, pt) {
        return this._transformState.needTransform = false, d.prototype.push.call(this, st, pt);
      }, j.prototype._transform = function(st, pt, Et) {
        throw new Error("_transform() is not implemented");
      }, j.prototype._write = function(st, pt, Et) {
        var Bt = this._transformState;
        if (Bt.writecb = Et, Bt.writechunk = st, Bt.writeencoding = pt, !Bt.transforming) {
          var St = this._readableState;
          (Bt.needTransform || St.needReadable || St.length < St.highWaterMark) && this._read(St.highWaterMark);
        }
      }, j.prototype._read = function(st) {
        var pt = this._transformState;
        pt.writechunk !== null && pt.writecb && !pt.transforming ? (pt.transforming = true, this._transform(pt.writechunk, pt.writeencoding, pt.afterTransform)) : pt.needTransform = true;
      }, j.prototype._destroy = function(st, pt) {
        var Et = this;
        d.prototype._destroy.call(this, st, function(Bt) {
          pt(Bt), Et.emit("close");
        });
      };
      function et(st, pt, Et) {
        if (pt) return st.emit("error", pt);
        if (Et != null && st.push(Et), st._writableState.length) throw new Error("Calling transform done when ws.length != 0");
        if (st._transformState.transforming) throw new Error("Calling transform done when still transforming");
        return st.push(null);
      }
      return _stream_transform;
    }
    var _stream_passthrough, hasRequired_stream_passthrough;
    function require_stream_passthrough() {
      if (hasRequired_stream_passthrough) return _stream_passthrough;
      hasRequired_stream_passthrough = 1, _stream_passthrough = $;
      var d = require_stream_transform(), _ = Object.create(requireUtil());
      _.inherits = requireInherits_browser(), _.inherits($, d);
      function $(j) {
        if (!(this instanceof $)) return new $(j);
        d.call(this, j);
      }
      return $.prototype._transform = function(j, rt, et) {
        et(null, j);
      }, _stream_passthrough;
    }
    var hasRequiredReadableBrowser;
    function requireReadableBrowser() {
      return hasRequiredReadableBrowser || (hasRequiredReadableBrowser = 1, function(d, _) {
        _ = d.exports = require_stream_readable(), _.Stream = _, _.Readable = _, _.Writable = require_stream_writable(), _.Duplex = require_stream_duplex(), _.Transform = require_stream_transform(), _.PassThrough = require_stream_passthrough();
      }(readableBrowser, readableBrowser.exports)), readableBrowser.exports;
    }
    var sign$1 = {
      exports: {}
    }, bn$8 = {
      exports: {}
    };
    bn$8.exports;
    var hasRequiredBn$5;
    function requireBn$5() {
      return hasRequiredBn$5 || (hasRequiredBn$5 = 1, function(d) {
        (function(_, $) {
          function j(nt, it) {
            if (!nt) throw new Error(it || "Assertion failed");
          }
          function rt(nt, it) {
            nt.super_ = it;
            var at = function() {
            };
            at.prototype = it.prototype, nt.prototype = new at(), nt.prototype.constructor = nt;
          }
          function et(nt, it, at) {
            if (et.isBN(nt)) return nt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, nt !== null && ((it === "le" || it === "be") && (at = it, it = 10), this._init(nt || 0, it || 10, at || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(it) {
            return it instanceof et ? true : it !== null && typeof it == "object" && it.constructor.wordSize === et.wordSize && Array.isArray(it.words);
          }, et.max = function(it, at) {
            return it.cmp(at) > 0 ? it : at;
          }, et.min = function(it, at) {
            return it.cmp(at) < 0 ? it : at;
          }, et.prototype._init = function(it, at, ct) {
            if (typeof it == "number") return this._initNumber(it, at, ct);
            if (typeof it == "object") return this._initArray(it, at, ct);
            at === "hex" && (at = 16), j(at === (at | 0) && at >= 2 && at <= 36), it = it.toString().replace(/\s+/g, "");
            var Mt = 0;
            it[0] === "-" && (Mt++, this.negative = 1), Mt < it.length && (at === 16 ? this._parseHex(it, Mt, ct) : (this._parseBase(it, at, Mt), ct === "le" && this._initArray(this.toArray(), at, ct)));
          }, et.prototype._initNumber = function(it, at, ct) {
            it < 0 && (this.negative = 1, it = -it), it < 67108864 ? (this.words = [
              it & 67108863
            ], this.length = 1) : it < 4503599627370496 ? (this.words = [
              it & 67108863,
              it / 67108864 & 67108863
            ], this.length = 2) : (j(it < 9007199254740992), this.words = [
              it & 67108863,
              it / 67108864 & 67108863,
              1
            ], this.length = 3), ct === "le" && this._initArray(this.toArray(), at, ct);
          }, et.prototype._initArray = function(it, at, ct) {
            if (j(typeof it.length == "number"), it.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(it.length / 3), this.words = new Array(this.length);
            for (var Mt = 0; Mt < this.length; Mt++) this.words[Mt] = 0;
            var At, ut, ot = 0;
            if (ct === "be") for (Mt = it.length - 1, At = 0; Mt >= 0; Mt -= 3) ut = it[Mt] | it[Mt - 1] << 8 | it[Mt - 2] << 16, this.words[At] |= ut << ot & 67108863, this.words[At + 1] = ut >>> 26 - ot & 67108863, ot += 24, ot >= 26 && (ot -= 26, At++);
            else if (ct === "le") for (Mt = 0, At = 0; Mt < it.length; Mt += 3) ut = it[Mt] | it[Mt + 1] << 8 | it[Mt + 2] << 16, this.words[At] |= ut << ot & 67108863, this.words[At + 1] = ut >>> 26 - ot & 67108863, ot += 24, ot >= 26 && (ot -= 26, At++);
            return this._strip();
          };
          function pt(nt, it) {
            var at = nt.charCodeAt(it);
            if (at >= 48 && at <= 57) return at - 48;
            if (at >= 65 && at <= 70) return at - 55;
            if (at >= 97 && at <= 102) return at - 87;
            j(false, "Invalid character in " + nt);
          }
          function Et(nt, it, at) {
            var ct = pt(nt, at);
            return at - 1 >= it && (ct |= pt(nt, at - 1) << 4), ct;
          }
          et.prototype._parseHex = function(it, at, ct) {
            this.length = Math.ceil((it.length - at) / 6), this.words = new Array(this.length);
            for (var Mt = 0; Mt < this.length; Mt++) this.words[Mt] = 0;
            var At = 0, ut = 0, ot;
            if (ct === "be") for (Mt = it.length - 1; Mt >= at; Mt -= 2) ot = Et(it, at, Mt) << At, this.words[ut] |= ot & 67108863, At >= 18 ? (At -= 18, ut += 1, this.words[ut] |= ot >>> 26) : At += 8;
            else {
              var Ct = it.length - at;
              for (Mt = Ct % 2 === 0 ? at + 1 : at; Mt < it.length; Mt += 2) ot = Et(it, at, Mt) << At, this.words[ut] |= ot & 67108863, At >= 18 ? (At -= 18, ut += 1, this.words[ut] |= ot >>> 26) : At += 8;
            }
            this._strip();
          };
          function Bt(nt, it, at, ct) {
            for (var Mt = 0, At = 0, ut = Math.min(nt.length, at), ot = it; ot < ut; ot++) {
              var Ct = nt.charCodeAt(ot) - 48;
              Mt *= ct, Ct >= 49 ? At = Ct - 49 + 10 : Ct >= 17 ? At = Ct - 17 + 10 : At = Ct, j(Ct >= 0 && At < ct, "Invalid character"), Mt += At;
            }
            return Mt;
          }
          et.prototype._parseBase = function(it, at, ct) {
            this.words = [
              0
            ], this.length = 1;
            for (var Mt = 0, At = 1; At <= 67108863; At *= at) Mt++;
            Mt--, At = At / at | 0;
            for (var ut = it.length - ct, ot = ut % Mt, Ct = Math.min(ut, ut - ot) + ct, Rt = 0, Nt = ct; Nt < Ct; Nt += Mt) Rt = Bt(it, Nt, Nt + Mt, at), this.imuln(At), this.words[0] + Rt < 67108864 ? this.words[0] += Rt : this._iaddn(Rt);
            if (ot !== 0) {
              var Wt = 1;
              for (Rt = Bt(it, Nt, it.length, at), Nt = 0; Nt < ot; Nt++) Wt *= at;
              this.imuln(Wt), this.words[0] + Rt < 67108864 ? this.words[0] += Rt : this._iaddn(Rt);
            }
            this._strip();
          }, et.prototype.copy = function(it) {
            it.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) it.words[at] = this.words[at];
            it.length = this.length, it.negative = this.negative, it.red = this.red;
          };
          function St(nt, it) {
            nt.words = it.words, nt.length = it.length, nt.negative = it.negative, nt.red = it.red;
          }
          if (et.prototype._move = function(it) {
            St(it, this);
          }, et.prototype.clone = function() {
            var it = new et(null);
            return this.copy(it), it;
          }, et.prototype._expand = function(it) {
            for (; this.length < it; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype._strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
            et.prototype[Symbol.for("nodejs.util.inspect.custom")] = $t;
          } catch {
            et.prototype.inspect = $t;
          }
          else et.prototype.inspect = $t;
          function $t() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          }
          var kt = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], Tt = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], Pt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(it, at) {
            it = it || 10, at = at | 0 || 1;
            var ct;
            if (it === 16 || it === "hex") {
              ct = "";
              for (var Mt = 0, At = 0, ut = 0; ut < this.length; ut++) {
                var ot = this.words[ut], Ct = ((ot << Mt | At) & 16777215).toString(16);
                At = ot >>> 24 - Mt & 16777215, Mt += 2, Mt >= 26 && (Mt -= 26, ut--), At !== 0 || ut !== this.length - 1 ? ct = kt[6 - Ct.length] + Ct + ct : ct = Ct + ct;
              }
              for (At !== 0 && (ct = At.toString(16) + ct); ct.length % at !== 0; ) ct = "0" + ct;
              return this.negative !== 0 && (ct = "-" + ct), ct;
            }
            if (it === (it | 0) && it >= 2 && it <= 36) {
              var Rt = Tt[it], Nt = Pt[it];
              ct = "";
              var Wt = this.clone();
              for (Wt.negative = 0; !Wt.isZero(); ) {
                var Xt = Wt.modrn(Nt).toString(it);
                Wt = Wt.idivn(Nt), Wt.isZero() ? ct = Xt + ct : ct = kt[Rt - Xt.length] + Xt + ct;
              }
              for (this.isZero() && (ct = "0" + ct); ct.length % at !== 0; ) ct = "0" + ct;
              return this.negative !== 0 && (ct = "-" + ct), ct;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var it = this.words[0];
            return this.length === 2 ? it += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? it += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -it : it;
          }, et.prototype.toJSON = function() {
            return this.toString(16, 2);
          }, st && (et.prototype.toBuffer = function(it, at) {
            return this.toArrayLike(st, it, at);
          }), et.prototype.toArray = function(it, at) {
            return this.toArrayLike(Array, it, at);
          };
          var It = function(it, at) {
            return it.allocUnsafe ? it.allocUnsafe(at) : new it(at);
          };
          et.prototype.toArrayLike = function(it, at, ct) {
            this._strip();
            var Mt = this.byteLength(), At = ct || Math.max(1, Mt);
            j(Mt <= At, "byte array longer than desired length"), j(At > 0, "Requested array length <= 0");
            var ut = It(it, At), ot = at === "le" ? "LE" : "BE";
            return this["_toArrayLike" + ot](ut, Mt), ut;
          }, et.prototype._toArrayLikeLE = function(it, at) {
            for (var ct = 0, Mt = 0, At = 0, ut = 0; At < this.length; At++) {
              var ot = this.words[At] << ut | Mt;
              it[ct++] = ot & 255, ct < it.length && (it[ct++] = ot >> 8 & 255), ct < it.length && (it[ct++] = ot >> 16 & 255), ut === 6 ? (ct < it.length && (it[ct++] = ot >> 24 & 255), Mt = 0, ut = 0) : (Mt = ot >>> 24, ut += 2);
            }
            if (ct < it.length) for (it[ct++] = Mt; ct < it.length; ) it[ct++] = 0;
          }, et.prototype._toArrayLikeBE = function(it, at) {
            for (var ct = it.length - 1, Mt = 0, At = 0, ut = 0; At < this.length; At++) {
              var ot = this.words[At] << ut | Mt;
              it[ct--] = ot & 255, ct >= 0 && (it[ct--] = ot >> 8 & 255), ct >= 0 && (it[ct--] = ot >> 16 & 255), ut === 6 ? (ct >= 0 && (it[ct--] = ot >> 24 & 255), Mt = 0, ut = 0) : (Mt = ot >>> 24, ut += 2);
            }
            if (ct >= 0) for (it[ct--] = Mt; ct >= 0; ) it[ct--] = 0;
          }, Math.clz32 ? et.prototype._countBits = function(it) {
            return 32 - Math.clz32(it);
          } : et.prototype._countBits = function(it) {
            var at = it, ct = 0;
            return at >= 4096 && (ct += 13, at >>>= 13), at >= 64 && (ct += 7, at >>>= 7), at >= 8 && (ct += 4, at >>>= 4), at >= 2 && (ct += 2, at >>>= 2), ct + at;
          }, et.prototype._zeroBits = function(it) {
            if (it === 0) return 26;
            var at = it, ct = 0;
            return at & 8191 || (ct += 13, at >>>= 13), at & 127 || (ct += 7, at >>>= 7), at & 15 || (ct += 4, at >>>= 4), at & 3 || (ct += 2, at >>>= 2), at & 1 || ct++, ct;
          }, et.prototype.bitLength = function() {
            var it = this.words[this.length - 1], at = this._countBits(it);
            return (this.length - 1) * 26 + at;
          };
          function jt(nt) {
            for (var it = new Array(nt.bitLength()), at = 0; at < it.length; at++) {
              var ct = at / 26 | 0, Mt = at % 26;
              it[at] = nt.words[ct] >>> Mt & 1;
            }
            return it;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var it = 0, at = 0; at < this.length; at++) {
              var ct = this._zeroBits(this.words[at]);
              if (it += ct, ct !== 26) break;
            }
            return it;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(it) {
            return this.negative !== 0 ? this.abs().inotn(it).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(it) {
            return this.testn(it - 1) ? this.notn(it).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(it) {
            for (; this.length < it.length; ) this.words[this.length++] = 0;
            for (var at = 0; at < it.length; at++) this.words[at] = this.words[at] | it.words[at];
            return this._strip();
          }, et.prototype.ior = function(it) {
            return j((this.negative | it.negative) === 0), this.iuor(it);
          }, et.prototype.or = function(it) {
            return this.length > it.length ? this.clone().ior(it) : it.clone().ior(this);
          }, et.prototype.uor = function(it) {
            return this.length > it.length ? this.clone().iuor(it) : it.clone().iuor(this);
          }, et.prototype.iuand = function(it) {
            var at;
            this.length > it.length ? at = it : at = this;
            for (var ct = 0; ct < at.length; ct++) this.words[ct] = this.words[ct] & it.words[ct];
            return this.length = at.length, this._strip();
          }, et.prototype.iand = function(it) {
            return j((this.negative | it.negative) === 0), this.iuand(it);
          }, et.prototype.and = function(it) {
            return this.length > it.length ? this.clone().iand(it) : it.clone().iand(this);
          }, et.prototype.uand = function(it) {
            return this.length > it.length ? this.clone().iuand(it) : it.clone().iuand(this);
          }, et.prototype.iuxor = function(it) {
            var at, ct;
            this.length > it.length ? (at = this, ct = it) : (at = it, ct = this);
            for (var Mt = 0; Mt < ct.length; Mt++) this.words[Mt] = at.words[Mt] ^ ct.words[Mt];
            if (this !== at) for (; Mt < at.length; Mt++) this.words[Mt] = at.words[Mt];
            return this.length = at.length, this._strip();
          }, et.prototype.ixor = function(it) {
            return j((this.negative | it.negative) === 0), this.iuxor(it);
          }, et.prototype.xor = function(it) {
            return this.length > it.length ? this.clone().ixor(it) : it.clone().ixor(this);
          }, et.prototype.uxor = function(it) {
            return this.length > it.length ? this.clone().iuxor(it) : it.clone().iuxor(this);
          }, et.prototype.inotn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = Math.ceil(it / 26) | 0, ct = it % 26;
            this._expand(at), ct > 0 && at--;
            for (var Mt = 0; Mt < at; Mt++) this.words[Mt] = ~this.words[Mt] & 67108863;
            return ct > 0 && (this.words[Mt] = ~this.words[Mt] & 67108863 >> 26 - ct), this._strip();
          }, et.prototype.notn = function(it) {
            return this.clone().inotn(it);
          }, et.prototype.setn = function(it, at) {
            j(typeof it == "number" && it >= 0);
            var ct = it / 26 | 0, Mt = it % 26;
            return this._expand(ct + 1), at ? this.words[ct] = this.words[ct] | 1 << Mt : this.words[ct] = this.words[ct] & ~(1 << Mt), this._strip();
          }, et.prototype.iadd = function(it) {
            var at;
            if (this.negative !== 0 && it.negative === 0) return this.negative = 0, at = this.isub(it), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && it.negative !== 0) return it.negative = 0, at = this.isub(it), it.negative = 1, at._normSign();
            var ct, Mt;
            this.length > it.length ? (ct = this, Mt = it) : (ct = it, Mt = this);
            for (var At = 0, ut = 0; ut < Mt.length; ut++) at = (ct.words[ut] | 0) + (Mt.words[ut] | 0) + At, this.words[ut] = at & 67108863, At = at >>> 26;
            for (; At !== 0 && ut < ct.length; ut++) at = (ct.words[ut] | 0) + At, this.words[ut] = at & 67108863, At = at >>> 26;
            if (this.length = ct.length, At !== 0) this.words[this.length] = At, this.length++;
            else if (ct !== this) for (; ut < ct.length; ut++) this.words[ut] = ct.words[ut];
            return this;
          }, et.prototype.add = function(it) {
            var at;
            return it.negative !== 0 && this.negative === 0 ? (it.negative = 0, at = this.sub(it), it.negative ^= 1, at) : it.negative === 0 && this.negative !== 0 ? (this.negative = 0, at = it.sub(this), this.negative = 1, at) : this.length > it.length ? this.clone().iadd(it) : it.clone().iadd(this);
          }, et.prototype.isub = function(it) {
            if (it.negative !== 0) {
              it.negative = 0;
              var at = this.iadd(it);
              return it.negative = 1, at._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(it), this.negative = 1, this._normSign();
            var ct = this.cmp(it);
            if (ct === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var Mt, At;
            ct > 0 ? (Mt = this, At = it) : (Mt = it, At = this);
            for (var ut = 0, ot = 0; ot < At.length; ot++) at = (Mt.words[ot] | 0) - (At.words[ot] | 0) + ut, ut = at >> 26, this.words[ot] = at & 67108863;
            for (; ut !== 0 && ot < Mt.length; ot++) at = (Mt.words[ot] | 0) + ut, ut = at >> 26, this.words[ot] = at & 67108863;
            if (ut === 0 && ot < Mt.length && Mt !== this) for (; ot < Mt.length; ot++) this.words[ot] = Mt.words[ot];
            return this.length = Math.max(this.length, ot), Mt !== this && (this.negative = 1), this._strip();
          }, et.prototype.sub = function(it) {
            return this.clone().isub(it);
          };
          function Dt(nt, it, at) {
            at.negative = it.negative ^ nt.negative;
            var ct = nt.length + it.length | 0;
            at.length = ct, ct = ct - 1 | 0;
            var Mt = nt.words[0] | 0, At = it.words[0] | 0, ut = Mt * At, ot = ut & 67108863, Ct = ut / 67108864 | 0;
            at.words[0] = ot;
            for (var Rt = 1; Rt < ct; Rt++) {
              for (var Nt = Ct >>> 26, Wt = Ct & 67108863, Xt = Math.min(Rt, it.length - 1), rr = Math.max(0, Rt - nt.length + 1); rr <= Xt; rr++) {
                var Gt = Rt - rr | 0;
                Mt = nt.words[Gt] | 0, At = it.words[rr] | 0, ut = Mt * At + Wt, Nt += ut / 67108864 | 0, Wt = ut & 67108863;
              }
              at.words[Rt] = Wt | 0, Ct = Nt | 0;
            }
            return Ct !== 0 ? at.words[Rt] = Ct | 0 : at.length--, at._strip();
          }
          var Ot = function(it, at, ct) {
            var Mt = it.words, At = at.words, ut = ct.words, ot = 0, Ct, Rt, Nt, Wt = Mt[0] | 0, Xt = Wt & 8191, rr = Wt >>> 13, Gt = Mt[1] | 0, Yt = Gt & 8191, tr = Gt >>> 13, cr = Mt[2] | 0, ir = cr & 8191, Jt = cr >>> 13, vr = Mt[3] | 0, Br = vr & 8191, _r = vr >>> 13, $r = Mt[4] | 0, Ur = $r & 8191, Sr = $r >>> 13, Mr = Mt[5] | 0, Kr = Mr & 8191, kr = Mr >>> 13, Lr = Mt[6] | 0, Gr = Lr & 8191, Tr = Lr >>> 13, yr = Mt[7] | 0, fr = yr & 8191, dr = yr >>> 13, gr = Mt[8] | 0, Er = gr & 8191, zt = gr >>> 13, qt = Mt[9] | 0, Vt = qt & 8191, Qt = qt >>> 13, hr = At[0] | 0, br = hr & 8191, pr = hr >>> 13, Rr = At[1] | 0, qr = Rr & 8191, xr = Rr >>> 13, Fr = At[2] | 0, zr = Fr & 8191, Pr = Fr >>> 13, Wr = At[3] | 0, tn = Wr & 8191, Nr = Wr >>> 13, Hr = At[4] | 0, rn = Hr & 8191, jr = Hr >>> 13, Yr = At[5] | 0, nn = Yr & 8191, Or = Yr >>> 13, Xr = At[6] | 0, nr = Xr & 8191, or = Xr >>> 13, ur = At[7] | 0, Ht = ur & 8191, lr = ur >>> 13, wr = At[8] | 0, Ar = wr & 8191, Cr = wr >>> 13, Ir = At[9] | 0, Jr = Ir & 8191, Qr = Ir >>> 13;
            ct.negative = it.negative ^ at.negative, ct.length = 19, Ct = Math.imul(Xt, br), Rt = Math.imul(Xt, pr), Rt = Rt + Math.imul(rr, br) | 0, Nt = Math.imul(rr, pr);
            var Sn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, Ct = Math.imul(Yt, br), Rt = Math.imul(Yt, pr), Rt = Rt + Math.imul(tr, br) | 0, Nt = Math.imul(tr, pr), Ct = Ct + Math.imul(Xt, qr) | 0, Rt = Rt + Math.imul(Xt, xr) | 0, Rt = Rt + Math.imul(rr, qr) | 0, Nt = Nt + Math.imul(rr, xr) | 0;
            var dn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, Ct = Math.imul(ir, br), Rt = Math.imul(ir, pr), Rt = Rt + Math.imul(Jt, br) | 0, Nt = Math.imul(Jt, pr), Ct = Ct + Math.imul(Yt, qr) | 0, Rt = Rt + Math.imul(Yt, xr) | 0, Rt = Rt + Math.imul(tr, qr) | 0, Nt = Nt + Math.imul(tr, xr) | 0, Ct = Ct + Math.imul(Xt, zr) | 0, Rt = Rt + Math.imul(Xt, Pr) | 0, Rt = Rt + Math.imul(rr, zr) | 0, Nt = Nt + Math.imul(rr, Pr) | 0;
            var yn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, Ct = Math.imul(Br, br), Rt = Math.imul(Br, pr), Rt = Rt + Math.imul(_r, br) | 0, Nt = Math.imul(_r, pr), Ct = Ct + Math.imul(ir, qr) | 0, Rt = Rt + Math.imul(ir, xr) | 0, Rt = Rt + Math.imul(Jt, qr) | 0, Nt = Nt + Math.imul(Jt, xr) | 0, Ct = Ct + Math.imul(Yt, zr) | 0, Rt = Rt + Math.imul(Yt, Pr) | 0, Rt = Rt + Math.imul(tr, zr) | 0, Nt = Nt + Math.imul(tr, Pr) | 0, Ct = Ct + Math.imul(Xt, tn) | 0, Rt = Rt + Math.imul(Xt, Nr) | 0, Rt = Rt + Math.imul(rr, tn) | 0, Nt = Nt + Math.imul(rr, Nr) | 0;
            var wn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, Ct = Math.imul(Ur, br), Rt = Math.imul(Ur, pr), Rt = Rt + Math.imul(Sr, br) | 0, Nt = Math.imul(Sr, pr), Ct = Ct + Math.imul(Br, qr) | 0, Rt = Rt + Math.imul(Br, xr) | 0, Rt = Rt + Math.imul(_r, qr) | 0, Nt = Nt + Math.imul(_r, xr) | 0, Ct = Ct + Math.imul(ir, zr) | 0, Rt = Rt + Math.imul(ir, Pr) | 0, Rt = Rt + Math.imul(Jt, zr) | 0, Nt = Nt + Math.imul(Jt, Pr) | 0, Ct = Ct + Math.imul(Yt, tn) | 0, Rt = Rt + Math.imul(Yt, Nr) | 0, Rt = Rt + Math.imul(tr, tn) | 0, Nt = Nt + Math.imul(tr, Nr) | 0, Ct = Ct + Math.imul(Xt, rn) | 0, Rt = Rt + Math.imul(Xt, jr) | 0, Rt = Rt + Math.imul(rr, rn) | 0, Nt = Nt + Math.imul(rr, jr) | 0;
            var Mn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, Ct = Math.imul(Kr, br), Rt = Math.imul(Kr, pr), Rt = Rt + Math.imul(kr, br) | 0, Nt = Math.imul(kr, pr), Ct = Ct + Math.imul(Ur, qr) | 0, Rt = Rt + Math.imul(Ur, xr) | 0, Rt = Rt + Math.imul(Sr, qr) | 0, Nt = Nt + Math.imul(Sr, xr) | 0, Ct = Ct + Math.imul(Br, zr) | 0, Rt = Rt + Math.imul(Br, Pr) | 0, Rt = Rt + Math.imul(_r, zr) | 0, Nt = Nt + Math.imul(_r, Pr) | 0, Ct = Ct + Math.imul(ir, tn) | 0, Rt = Rt + Math.imul(ir, Nr) | 0, Rt = Rt + Math.imul(Jt, tn) | 0, Nt = Nt + Math.imul(Jt, Nr) | 0, Ct = Ct + Math.imul(Yt, rn) | 0, Rt = Rt + Math.imul(Yt, jr) | 0, Rt = Rt + Math.imul(tr, rn) | 0, Nt = Nt + Math.imul(tr, jr) | 0, Ct = Ct + Math.imul(Xt, nn) | 0, Rt = Rt + Math.imul(Xt, Or) | 0, Rt = Rt + Math.imul(rr, nn) | 0, Nt = Nt + Math.imul(rr, Or) | 0;
            var En = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, Ct = Math.imul(Gr, br), Rt = Math.imul(Gr, pr), Rt = Rt + Math.imul(Tr, br) | 0, Nt = Math.imul(Tr, pr), Ct = Ct + Math.imul(Kr, qr) | 0, Rt = Rt + Math.imul(Kr, xr) | 0, Rt = Rt + Math.imul(kr, qr) | 0, Nt = Nt + Math.imul(kr, xr) | 0, Ct = Ct + Math.imul(Ur, zr) | 0, Rt = Rt + Math.imul(Ur, Pr) | 0, Rt = Rt + Math.imul(Sr, zr) | 0, Nt = Nt + Math.imul(Sr, Pr) | 0, Ct = Ct + Math.imul(Br, tn) | 0, Rt = Rt + Math.imul(Br, Nr) | 0, Rt = Rt + Math.imul(_r, tn) | 0, Nt = Nt + Math.imul(_r, Nr) | 0, Ct = Ct + Math.imul(ir, rn) | 0, Rt = Rt + Math.imul(ir, jr) | 0, Rt = Rt + Math.imul(Jt, rn) | 0, Nt = Nt + Math.imul(Jt, jr) | 0, Ct = Ct + Math.imul(Yt, nn) | 0, Rt = Rt + Math.imul(Yt, Or) | 0, Rt = Rt + Math.imul(tr, nn) | 0, Nt = Nt + Math.imul(tr, Or) | 0, Ct = Ct + Math.imul(Xt, nr) | 0, Rt = Rt + Math.imul(Xt, or) | 0, Rt = Rt + Math.imul(rr, nr) | 0, Nt = Nt + Math.imul(rr, or) | 0;
            var xn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, Ct = Math.imul(fr, br), Rt = Math.imul(fr, pr), Rt = Rt + Math.imul(dr, br) | 0, Nt = Math.imul(dr, pr), Ct = Ct + Math.imul(Gr, qr) | 0, Rt = Rt + Math.imul(Gr, xr) | 0, Rt = Rt + Math.imul(Tr, qr) | 0, Nt = Nt + Math.imul(Tr, xr) | 0, Ct = Ct + Math.imul(Kr, zr) | 0, Rt = Rt + Math.imul(Kr, Pr) | 0, Rt = Rt + Math.imul(kr, zr) | 0, Nt = Nt + Math.imul(kr, Pr) | 0, Ct = Ct + Math.imul(Ur, tn) | 0, Rt = Rt + Math.imul(Ur, Nr) | 0, Rt = Rt + Math.imul(Sr, tn) | 0, Nt = Nt + Math.imul(Sr, Nr) | 0, Ct = Ct + Math.imul(Br, rn) | 0, Rt = Rt + Math.imul(Br, jr) | 0, Rt = Rt + Math.imul(_r, rn) | 0, Nt = Nt + Math.imul(_r, jr) | 0, Ct = Ct + Math.imul(ir, nn) | 0, Rt = Rt + Math.imul(ir, Or) | 0, Rt = Rt + Math.imul(Jt, nn) | 0, Nt = Nt + Math.imul(Jt, Or) | 0, Ct = Ct + Math.imul(Yt, nr) | 0, Rt = Rt + Math.imul(Yt, or) | 0, Rt = Rt + Math.imul(tr, nr) | 0, Nt = Nt + Math.imul(tr, or) | 0, Ct = Ct + Math.imul(Xt, Ht) | 0, Rt = Rt + Math.imul(Xt, lr) | 0, Rt = Rt + Math.imul(rr, Ht) | 0, Nt = Nt + Math.imul(rr, lr) | 0;
            var Cn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, Ct = Math.imul(Er, br), Rt = Math.imul(Er, pr), Rt = Rt + Math.imul(zt, br) | 0, Nt = Math.imul(zt, pr), Ct = Ct + Math.imul(fr, qr) | 0, Rt = Rt + Math.imul(fr, xr) | 0, Rt = Rt + Math.imul(dr, qr) | 0, Nt = Nt + Math.imul(dr, xr) | 0, Ct = Ct + Math.imul(Gr, zr) | 0, Rt = Rt + Math.imul(Gr, Pr) | 0, Rt = Rt + Math.imul(Tr, zr) | 0, Nt = Nt + Math.imul(Tr, Pr) | 0, Ct = Ct + Math.imul(Kr, tn) | 0, Rt = Rt + Math.imul(Kr, Nr) | 0, Rt = Rt + Math.imul(kr, tn) | 0, Nt = Nt + Math.imul(kr, Nr) | 0, Ct = Ct + Math.imul(Ur, rn) | 0, Rt = Rt + Math.imul(Ur, jr) | 0, Rt = Rt + Math.imul(Sr, rn) | 0, Nt = Nt + Math.imul(Sr, jr) | 0, Ct = Ct + Math.imul(Br, nn) | 0, Rt = Rt + Math.imul(Br, Or) | 0, Rt = Rt + Math.imul(_r, nn) | 0, Nt = Nt + Math.imul(_r, Or) | 0, Ct = Ct + Math.imul(ir, nr) | 0, Rt = Rt + Math.imul(ir, or) | 0, Rt = Rt + Math.imul(Jt, nr) | 0, Nt = Nt + Math.imul(Jt, or) | 0, Ct = Ct + Math.imul(Yt, Ht) | 0, Rt = Rt + Math.imul(Yt, lr) | 0, Rt = Rt + Math.imul(tr, Ht) | 0, Nt = Nt + Math.imul(tr, lr) | 0, Ct = Ct + Math.imul(Xt, Ar) | 0, Rt = Rt + Math.imul(Xt, Cr) | 0, Rt = Rt + Math.imul(rr, Ar) | 0, Nt = Nt + Math.imul(rr, Cr) | 0;
            var _n = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, Ct = Math.imul(Vt, br), Rt = Math.imul(Vt, pr), Rt = Rt + Math.imul(Qt, br) | 0, Nt = Math.imul(Qt, pr), Ct = Ct + Math.imul(Er, qr) | 0, Rt = Rt + Math.imul(Er, xr) | 0, Rt = Rt + Math.imul(zt, qr) | 0, Nt = Nt + Math.imul(zt, xr) | 0, Ct = Ct + Math.imul(fr, zr) | 0, Rt = Rt + Math.imul(fr, Pr) | 0, Rt = Rt + Math.imul(dr, zr) | 0, Nt = Nt + Math.imul(dr, Pr) | 0, Ct = Ct + Math.imul(Gr, tn) | 0, Rt = Rt + Math.imul(Gr, Nr) | 0, Rt = Rt + Math.imul(Tr, tn) | 0, Nt = Nt + Math.imul(Tr, Nr) | 0, Ct = Ct + Math.imul(Kr, rn) | 0, Rt = Rt + Math.imul(Kr, jr) | 0, Rt = Rt + Math.imul(kr, rn) | 0, Nt = Nt + Math.imul(kr, jr) | 0, Ct = Ct + Math.imul(Ur, nn) | 0, Rt = Rt + Math.imul(Ur, Or) | 0, Rt = Rt + Math.imul(Sr, nn) | 0, Nt = Nt + Math.imul(Sr, Or) | 0, Ct = Ct + Math.imul(Br, nr) | 0, Rt = Rt + Math.imul(Br, or) | 0, Rt = Rt + Math.imul(_r, nr) | 0, Nt = Nt + Math.imul(_r, or) | 0, Ct = Ct + Math.imul(ir, Ht) | 0, Rt = Rt + Math.imul(ir, lr) | 0, Rt = Rt + Math.imul(Jt, Ht) | 0, Nt = Nt + Math.imul(Jt, lr) | 0, Ct = Ct + Math.imul(Yt, Ar) | 0, Rt = Rt + Math.imul(Yt, Cr) | 0, Rt = Rt + Math.imul(tr, Ar) | 0, Nt = Nt + Math.imul(tr, Cr) | 0, Ct = Ct + Math.imul(Xt, Jr) | 0, Rt = Rt + Math.imul(Xt, Qr) | 0, Rt = Rt + Math.imul(rr, Jr) | 0, Nt = Nt + Math.imul(rr, Qr) | 0;
            var hn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, Ct = Math.imul(Vt, qr), Rt = Math.imul(Vt, xr), Rt = Rt + Math.imul(Qt, qr) | 0, Nt = Math.imul(Qt, xr), Ct = Ct + Math.imul(Er, zr) | 0, Rt = Rt + Math.imul(Er, Pr) | 0, Rt = Rt + Math.imul(zt, zr) | 0, Nt = Nt + Math.imul(zt, Pr) | 0, Ct = Ct + Math.imul(fr, tn) | 0, Rt = Rt + Math.imul(fr, Nr) | 0, Rt = Rt + Math.imul(dr, tn) | 0, Nt = Nt + Math.imul(dr, Nr) | 0, Ct = Ct + Math.imul(Gr, rn) | 0, Rt = Rt + Math.imul(Gr, jr) | 0, Rt = Rt + Math.imul(Tr, rn) | 0, Nt = Nt + Math.imul(Tr, jr) | 0, Ct = Ct + Math.imul(Kr, nn) | 0, Rt = Rt + Math.imul(Kr, Or) | 0, Rt = Rt + Math.imul(kr, nn) | 0, Nt = Nt + Math.imul(kr, Or) | 0, Ct = Ct + Math.imul(Ur, nr) | 0, Rt = Rt + Math.imul(Ur, or) | 0, Rt = Rt + Math.imul(Sr, nr) | 0, Nt = Nt + Math.imul(Sr, or) | 0, Ct = Ct + Math.imul(Br, Ht) | 0, Rt = Rt + Math.imul(Br, lr) | 0, Rt = Rt + Math.imul(_r, Ht) | 0, Nt = Nt + Math.imul(_r, lr) | 0, Ct = Ct + Math.imul(ir, Ar) | 0, Rt = Rt + Math.imul(ir, Cr) | 0, Rt = Rt + Math.imul(Jt, Ar) | 0, Nt = Nt + Math.imul(Jt, Cr) | 0, Ct = Ct + Math.imul(Yt, Jr) | 0, Rt = Rt + Math.imul(Yt, Qr) | 0, Rt = Rt + Math.imul(tr, Jr) | 0, Nt = Nt + Math.imul(tr, Qr) | 0;
            var gn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, Ct = Math.imul(Vt, zr), Rt = Math.imul(Vt, Pr), Rt = Rt + Math.imul(Qt, zr) | 0, Nt = Math.imul(Qt, Pr), Ct = Ct + Math.imul(Er, tn) | 0, Rt = Rt + Math.imul(Er, Nr) | 0, Rt = Rt + Math.imul(zt, tn) | 0, Nt = Nt + Math.imul(zt, Nr) | 0, Ct = Ct + Math.imul(fr, rn) | 0, Rt = Rt + Math.imul(fr, jr) | 0, Rt = Rt + Math.imul(dr, rn) | 0, Nt = Nt + Math.imul(dr, jr) | 0, Ct = Ct + Math.imul(Gr, nn) | 0, Rt = Rt + Math.imul(Gr, Or) | 0, Rt = Rt + Math.imul(Tr, nn) | 0, Nt = Nt + Math.imul(Tr, Or) | 0, Ct = Ct + Math.imul(Kr, nr) | 0, Rt = Rt + Math.imul(Kr, or) | 0, Rt = Rt + Math.imul(kr, nr) | 0, Nt = Nt + Math.imul(kr, or) | 0, Ct = Ct + Math.imul(Ur, Ht) | 0, Rt = Rt + Math.imul(Ur, lr) | 0, Rt = Rt + Math.imul(Sr, Ht) | 0, Nt = Nt + Math.imul(Sr, lr) | 0, Ct = Ct + Math.imul(Br, Ar) | 0, Rt = Rt + Math.imul(Br, Cr) | 0, Rt = Rt + Math.imul(_r, Ar) | 0, Nt = Nt + Math.imul(_r, Cr) | 0, Ct = Ct + Math.imul(ir, Jr) | 0, Rt = Rt + Math.imul(ir, Qr) | 0, Rt = Rt + Math.imul(Jt, Jr) | 0, Nt = Nt + Math.imul(Jt, Qr) | 0;
            var ln = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, Ct = Math.imul(Vt, tn), Rt = Math.imul(Vt, Nr), Rt = Rt + Math.imul(Qt, tn) | 0, Nt = Math.imul(Qt, Nr), Ct = Ct + Math.imul(Er, rn) | 0, Rt = Rt + Math.imul(Er, jr) | 0, Rt = Rt + Math.imul(zt, rn) | 0, Nt = Nt + Math.imul(zt, jr) | 0, Ct = Ct + Math.imul(fr, nn) | 0, Rt = Rt + Math.imul(fr, Or) | 0, Rt = Rt + Math.imul(dr, nn) | 0, Nt = Nt + Math.imul(dr, Or) | 0, Ct = Ct + Math.imul(Gr, nr) | 0, Rt = Rt + Math.imul(Gr, or) | 0, Rt = Rt + Math.imul(Tr, nr) | 0, Nt = Nt + Math.imul(Tr, or) | 0, Ct = Ct + Math.imul(Kr, Ht) | 0, Rt = Rt + Math.imul(Kr, lr) | 0, Rt = Rt + Math.imul(kr, Ht) | 0, Nt = Nt + Math.imul(kr, lr) | 0, Ct = Ct + Math.imul(Ur, Ar) | 0, Rt = Rt + Math.imul(Ur, Cr) | 0, Rt = Rt + Math.imul(Sr, Ar) | 0, Nt = Nt + Math.imul(Sr, Cr) | 0, Ct = Ct + Math.imul(Br, Jr) | 0, Rt = Rt + Math.imul(Br, Qr) | 0, Rt = Rt + Math.imul(_r, Jr) | 0, Nt = Nt + Math.imul(_r, Qr) | 0;
            var pn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, Ct = Math.imul(Vt, rn), Rt = Math.imul(Vt, jr), Rt = Rt + Math.imul(Qt, rn) | 0, Nt = Math.imul(Qt, jr), Ct = Ct + Math.imul(Er, nn) | 0, Rt = Rt + Math.imul(Er, Or) | 0, Rt = Rt + Math.imul(zt, nn) | 0, Nt = Nt + Math.imul(zt, Or) | 0, Ct = Ct + Math.imul(fr, nr) | 0, Rt = Rt + Math.imul(fr, or) | 0, Rt = Rt + Math.imul(dr, nr) | 0, Nt = Nt + Math.imul(dr, or) | 0, Ct = Ct + Math.imul(Gr, Ht) | 0, Rt = Rt + Math.imul(Gr, lr) | 0, Rt = Rt + Math.imul(Tr, Ht) | 0, Nt = Nt + Math.imul(Tr, lr) | 0, Ct = Ct + Math.imul(Kr, Ar) | 0, Rt = Rt + Math.imul(Kr, Cr) | 0, Rt = Rt + Math.imul(kr, Ar) | 0, Nt = Nt + Math.imul(kr, Cr) | 0, Ct = Ct + Math.imul(Ur, Jr) | 0, Rt = Rt + Math.imul(Ur, Qr) | 0, Rt = Rt + Math.imul(Sr, Jr) | 0, Nt = Nt + Math.imul(Sr, Qr) | 0;
            var mn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, Ct = Math.imul(Vt, nn), Rt = Math.imul(Vt, Or), Rt = Rt + Math.imul(Qt, nn) | 0, Nt = Math.imul(Qt, Or), Ct = Ct + Math.imul(Er, nr) | 0, Rt = Rt + Math.imul(Er, or) | 0, Rt = Rt + Math.imul(zt, nr) | 0, Nt = Nt + Math.imul(zt, or) | 0, Ct = Ct + Math.imul(fr, Ht) | 0, Rt = Rt + Math.imul(fr, lr) | 0, Rt = Rt + Math.imul(dr, Ht) | 0, Nt = Nt + Math.imul(dr, lr) | 0, Ct = Ct + Math.imul(Gr, Ar) | 0, Rt = Rt + Math.imul(Gr, Cr) | 0, Rt = Rt + Math.imul(Tr, Ar) | 0, Nt = Nt + Math.imul(Tr, Cr) | 0, Ct = Ct + Math.imul(Kr, Jr) | 0, Rt = Rt + Math.imul(Kr, Qr) | 0, Rt = Rt + Math.imul(kr, Jr) | 0, Nt = Nt + Math.imul(kr, Qr) | 0;
            var sn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, Ct = Math.imul(Vt, nr), Rt = Math.imul(Vt, or), Rt = Rt + Math.imul(Qt, nr) | 0, Nt = Math.imul(Qt, or), Ct = Ct + Math.imul(Er, Ht) | 0, Rt = Rt + Math.imul(Er, lr) | 0, Rt = Rt + Math.imul(zt, Ht) | 0, Nt = Nt + Math.imul(zt, lr) | 0, Ct = Ct + Math.imul(fr, Ar) | 0, Rt = Rt + Math.imul(fr, Cr) | 0, Rt = Rt + Math.imul(dr, Ar) | 0, Nt = Nt + Math.imul(dr, Cr) | 0, Ct = Ct + Math.imul(Gr, Jr) | 0, Rt = Rt + Math.imul(Gr, Qr) | 0, Rt = Rt + Math.imul(Tr, Jr) | 0, Nt = Nt + Math.imul(Tr, Qr) | 0;
            var Vr = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, Ct = Math.imul(Vt, Ht), Rt = Math.imul(Vt, lr), Rt = Rt + Math.imul(Qt, Ht) | 0, Nt = Math.imul(Qt, lr), Ct = Ct + Math.imul(Er, Ar) | 0, Rt = Rt + Math.imul(Er, Cr) | 0, Rt = Rt + Math.imul(zt, Ar) | 0, Nt = Nt + Math.imul(zt, Cr) | 0, Ct = Ct + Math.imul(fr, Jr) | 0, Rt = Rt + Math.imul(fr, Qr) | 0, Rt = Rt + Math.imul(dr, Jr) | 0, Nt = Nt + Math.imul(dr, Qr) | 0;
            var Zr = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Ct = Math.imul(Vt, Ar), Rt = Math.imul(Vt, Cr), Rt = Rt + Math.imul(Qt, Ar) | 0, Nt = Math.imul(Qt, Cr), Ct = Ct + Math.imul(Er, Jr) | 0, Rt = Rt + Math.imul(Er, Qr) | 0, Rt = Rt + Math.imul(zt, Jr) | 0, Nt = Nt + Math.imul(zt, Qr) | 0;
            var un = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (un >>> 26) | 0, un &= 67108863, Ct = Math.imul(Vt, Jr), Rt = Math.imul(Vt, Qr), Rt = Rt + Math.imul(Qt, Jr) | 0, Nt = Math.imul(Qt, Qr);
            var an = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            return ot = (Nt + (Rt >>> 13) | 0) + (an >>> 26) | 0, an &= 67108863, ut[0] = Sn, ut[1] = dn, ut[2] = yn, ut[3] = wn, ut[4] = Mn, ut[5] = En, ut[6] = xn, ut[7] = Cn, ut[8] = _n, ut[9] = hn, ut[10] = gn, ut[11] = ln, ut[12] = pn, ut[13] = mn, ut[14] = sn, ut[15] = Vr, ut[16] = Zr, ut[17] = un, ut[18] = an, ot !== 0 && (ut[19] = ot, ct.length++), ct;
          };
          Math.imul || (Ot = Dt);
          function Ft(nt, it, at) {
            at.negative = it.negative ^ nt.negative, at.length = nt.length + it.length;
            for (var ct = 0, Mt = 0, At = 0; At < at.length - 1; At++) {
              var ut = Mt;
              Mt = 0;
              for (var ot = ct & 67108863, Ct = Math.min(At, it.length - 1), Rt = Math.max(0, At - nt.length + 1); Rt <= Ct; Rt++) {
                var Nt = At - Rt, Wt = nt.words[Nt] | 0, Xt = it.words[Rt] | 0, rr = Wt * Xt, Gt = rr & 67108863;
                ut = ut + (rr / 67108864 | 0) | 0, Gt = Gt + ot | 0, ot = Gt & 67108863, ut = ut + (Gt >>> 26) | 0, Mt += ut >>> 26, ut &= 67108863;
              }
              at.words[At] = ot, ct = ut, ut = Mt;
            }
            return ct !== 0 ? at.words[At] = ct : at.length--, at._strip();
          }
          function Lt(nt, it, at) {
            return Ft(nt, it, at);
          }
          et.prototype.mulTo = function(it, at) {
            var ct, Mt = this.length + it.length;
            return this.length === 10 && it.length === 10 ? ct = Ot(this, it, at) : Mt < 63 ? ct = Dt(this, it, at) : Mt < 1024 ? ct = Ft(this, it, at) : ct = Lt(this, it, at), ct;
          }, et.prototype.mul = function(it) {
            var at = new et(null);
            return at.words = new Array(this.length + it.length), this.mulTo(it, at);
          }, et.prototype.mulf = function(it) {
            var at = new et(null);
            return at.words = new Array(this.length + it.length), Lt(this, it, at);
          }, et.prototype.imul = function(it) {
            return this.clone().mulTo(it, this);
          }, et.prototype.imuln = function(it) {
            var at = it < 0;
            at && (it = -it), j(typeof it == "number"), j(it < 67108864);
            for (var ct = 0, Mt = 0; Mt < this.length; Mt++) {
              var At = (this.words[Mt] | 0) * it, ut = (At & 67108863) + (ct & 67108863);
              ct >>= 26, ct += At / 67108864 | 0, ct += ut >>> 26, this.words[Mt] = ut & 67108863;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), at ? this.ineg() : this;
          }, et.prototype.muln = function(it) {
            return this.clone().imuln(it);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(it) {
            var at = jt(it);
            if (at.length === 0) return new et(1);
            for (var ct = this, Mt = 0; Mt < at.length && at[Mt] === 0; Mt++, ct = ct.sqr()) ;
            if (++Mt < at.length) for (var At = ct.sqr(); Mt < at.length; Mt++, At = At.sqr()) at[Mt] !== 0 && (ct = ct.mul(At));
            return ct;
          }, et.prototype.iushln = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26, Mt = 67108863 >>> 26 - at << 26 - at, At;
            if (at !== 0) {
              var ut = 0;
              for (At = 0; At < this.length; At++) {
                var ot = this.words[At] & Mt, Ct = (this.words[At] | 0) - ot << at;
                this.words[At] = Ct | ut, ut = ot >>> 26 - at;
              }
              ut && (this.words[At] = ut, this.length++);
            }
            if (ct !== 0) {
              for (At = this.length - 1; At >= 0; At--) this.words[At + ct] = this.words[At];
              for (At = 0; At < ct; At++) this.words[At] = 0;
              this.length += ct;
            }
            return this._strip();
          }, et.prototype.ishln = function(it) {
            return j(this.negative === 0), this.iushln(it);
          }, et.prototype.iushrn = function(it, at, ct) {
            j(typeof it == "number" && it >= 0);
            var Mt;
            at ? Mt = (at - at % 26) / 26 : Mt = 0;
            var At = it % 26, ut = Math.min((it - At) / 26, this.length), ot = 67108863 ^ 67108863 >>> At << At, Ct = ct;
            if (Mt -= ut, Mt = Math.max(0, Mt), Ct) {
              for (var Rt = 0; Rt < ut; Rt++) Ct.words[Rt] = this.words[Rt];
              Ct.length = ut;
            }
            if (ut !== 0) if (this.length > ut) for (this.length -= ut, Rt = 0; Rt < this.length; Rt++) this.words[Rt] = this.words[Rt + ut];
            else this.words[0] = 0, this.length = 1;
            var Nt = 0;
            for (Rt = this.length - 1; Rt >= 0 && (Nt !== 0 || Rt >= Mt); Rt--) {
              var Wt = this.words[Rt] | 0;
              this.words[Rt] = Nt << 26 - At | Wt >>> At, Nt = Wt & ot;
            }
            return Ct && Nt !== 0 && (Ct.words[Ct.length++] = Nt), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
          }, et.prototype.ishrn = function(it, at, ct) {
            return j(this.negative === 0), this.iushrn(it, at, ct);
          }, et.prototype.shln = function(it) {
            return this.clone().ishln(it);
          }, et.prototype.ushln = function(it) {
            return this.clone().iushln(it);
          }, et.prototype.shrn = function(it) {
            return this.clone().ishrn(it);
          }, et.prototype.ushrn = function(it) {
            return this.clone().iushrn(it);
          }, et.prototype.testn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26, Mt = 1 << at;
            if (this.length <= ct) return false;
            var At = this.words[ct];
            return !!(At & Mt);
          }, et.prototype.imaskn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= ct) return this;
            if (at !== 0 && ct++, this.length = Math.min(ct, this.length), at !== 0) {
              var Mt = 67108863 ^ 67108863 >>> at << at;
              this.words[this.length - 1] &= Mt;
            }
            return this._strip();
          }, et.prototype.maskn = function(it) {
            return this.clone().imaskn(it);
          }, et.prototype.iaddn = function(it) {
            return j(typeof it == "number"), j(it < 67108864), it < 0 ? this.isubn(-it) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= it ? (this.words[0] = it - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(it), this.negative = 1, this) : this._iaddn(it);
          }, et.prototype._iaddn = function(it) {
            this.words[0] += it;
            for (var at = 0; at < this.length && this.words[at] >= 67108864; at++) this.words[at] -= 67108864, at === this.length - 1 ? this.words[at + 1] = 1 : this.words[at + 1]++;
            return this.length = Math.max(this.length, at + 1), this;
          }, et.prototype.isubn = function(it) {
            if (j(typeof it == "number"), j(it < 67108864), it < 0) return this.iaddn(-it);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(it), this.negative = 1, this;
            if (this.words[0] -= it, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var at = 0; at < this.length && this.words[at] < 0; at++) this.words[at] += 67108864, this.words[at + 1] -= 1;
            return this._strip();
          }, et.prototype.addn = function(it) {
            return this.clone().iaddn(it);
          }, et.prototype.subn = function(it) {
            return this.clone().isubn(it);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(it, at, ct) {
            var Mt = it.length + ct, At;
            this._expand(Mt);
            var ut, ot = 0;
            for (At = 0; At < it.length; At++) {
              ut = (this.words[At + ct] | 0) + ot;
              var Ct = (it.words[At] | 0) * at;
              ut -= Ct & 67108863, ot = (ut >> 26) - (Ct / 67108864 | 0), this.words[At + ct] = ut & 67108863;
            }
            for (; At < this.length - ct; At++) ut = (this.words[At + ct] | 0) + ot, ot = ut >> 26, this.words[At + ct] = ut & 67108863;
            if (ot === 0) return this._strip();
            for (j(ot === -1), ot = 0, At = 0; At < this.length; At++) ut = -(this.words[At] | 0) + ot, ot = ut >> 26, this.words[At] = ut & 67108863;
            return this.negative = 1, this._strip();
          }, et.prototype._wordDiv = function(it, at) {
            var ct = this.length - it.length, Mt = this.clone(), At = it, ut = At.words[At.length - 1] | 0, ot = this._countBits(ut);
            ct = 26 - ot, ct !== 0 && (At = At.ushln(ct), Mt.iushln(ct), ut = At.words[At.length - 1] | 0);
            var Ct = Mt.length - At.length, Rt;
            if (at !== "mod") {
              Rt = new et(null), Rt.length = Ct + 1, Rt.words = new Array(Rt.length);
              for (var Nt = 0; Nt < Rt.length; Nt++) Rt.words[Nt] = 0;
            }
            var Wt = Mt.clone()._ishlnsubmul(At, 1, Ct);
            Wt.negative === 0 && (Mt = Wt, Rt && (Rt.words[Ct] = 1));
            for (var Xt = Ct - 1; Xt >= 0; Xt--) {
              var rr = (Mt.words[At.length + Xt] | 0) * 67108864 + (Mt.words[At.length + Xt - 1] | 0);
              for (rr = Math.min(rr / ut | 0, 67108863), Mt._ishlnsubmul(At, rr, Xt); Mt.negative !== 0; ) rr--, Mt.negative = 0, Mt._ishlnsubmul(At, 1, Xt), Mt.isZero() || (Mt.negative ^= 1);
              Rt && (Rt.words[Xt] = rr);
            }
            return Rt && Rt._strip(), Mt._strip(), at !== "div" && ct !== 0 && Mt.iushrn(ct), {
              div: Rt || null,
              mod: Mt
            };
          }, et.prototype.divmod = function(it, at, ct) {
            if (j(!it.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var Mt, At, ut;
            return this.negative !== 0 && it.negative === 0 ? (ut = this.neg().divmod(it, at), at !== "mod" && (Mt = ut.div.neg()), at !== "div" && (At = ut.mod.neg(), ct && At.negative !== 0 && At.iadd(it)), {
              div: Mt,
              mod: At
            }) : this.negative === 0 && it.negative !== 0 ? (ut = this.divmod(it.neg(), at), at !== "mod" && (Mt = ut.div.neg()), {
              div: Mt,
              mod: ut.mod
            }) : this.negative & it.negative ? (ut = this.neg().divmod(it.neg(), at), at !== "div" && (At = ut.mod.neg(), ct && At.negative !== 0 && At.isub(it)), {
              div: ut.div,
              mod: At
            }) : it.length > this.length || this.cmp(it) < 0 ? {
              div: new et(0),
              mod: this
            } : it.length === 1 ? at === "div" ? {
              div: this.divn(it.words[0]),
              mod: null
            } : at === "mod" ? {
              div: null,
              mod: new et(this.modrn(it.words[0]))
            } : {
              div: this.divn(it.words[0]),
              mod: new et(this.modrn(it.words[0]))
            } : this._wordDiv(it, at);
          }, et.prototype.div = function(it) {
            return this.divmod(it, "div", false).div;
          }, et.prototype.mod = function(it) {
            return this.divmod(it, "mod", false).mod;
          }, et.prototype.umod = function(it) {
            return this.divmod(it, "mod", true).mod;
          }, et.prototype.divRound = function(it) {
            var at = this.divmod(it);
            if (at.mod.isZero()) return at.div;
            var ct = at.div.negative !== 0 ? at.mod.isub(it) : at.mod, Mt = it.ushrn(1), At = it.andln(1), ut = ct.cmp(Mt);
            return ut < 0 || At === 1 && ut === 0 ? at.div : at.div.negative !== 0 ? at.div.isubn(1) : at.div.iaddn(1);
          }, et.prototype.modrn = function(it) {
            var at = it < 0;
            at && (it = -it), j(it <= 67108863);
            for (var ct = (1 << 26) % it, Mt = 0, At = this.length - 1; At >= 0; At--) Mt = (ct * Mt + (this.words[At] | 0)) % it;
            return at ? -Mt : Mt;
          }, et.prototype.modn = function(it) {
            return this.modrn(it);
          }, et.prototype.idivn = function(it) {
            var at = it < 0;
            at && (it = -it), j(it <= 67108863);
            for (var ct = 0, Mt = this.length - 1; Mt >= 0; Mt--) {
              var At = (this.words[Mt] | 0) + ct * 67108864;
              this.words[Mt] = At / it | 0, ct = At % it;
            }
            return this._strip(), at ? this.ineg() : this;
          }, et.prototype.divn = function(it) {
            return this.clone().idivn(it);
          }, et.prototype.egcd = function(it) {
            j(it.negative === 0), j(!it.isZero());
            var at = this, ct = it.clone();
            at.negative !== 0 ? at = at.umod(it) : at = at.clone();
            for (var Mt = new et(1), At = new et(0), ut = new et(0), ot = new et(1), Ct = 0; at.isEven() && ct.isEven(); ) at.iushrn(1), ct.iushrn(1), ++Ct;
            for (var Rt = ct.clone(), Nt = at.clone(); !at.isZero(); ) {
              for (var Wt = 0, Xt = 1; !(at.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (at.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(Rt), At.isub(Nt)), Mt.iushrn(1), At.iushrn(1);
              for (var rr = 0, Gt = 1; !(ct.words[0] & Gt) && rr < 26; ++rr, Gt <<= 1) ;
              if (rr > 0) for (ct.iushrn(rr); rr-- > 0; ) (ut.isOdd() || ot.isOdd()) && (ut.iadd(Rt), ot.isub(Nt)), ut.iushrn(1), ot.iushrn(1);
              at.cmp(ct) >= 0 ? (at.isub(ct), Mt.isub(ut), At.isub(ot)) : (ct.isub(at), ut.isub(Mt), ot.isub(At));
            }
            return {
              a: ut,
              b: ot,
              gcd: ct.iushln(Ct)
            };
          }, et.prototype._invmp = function(it) {
            j(it.negative === 0), j(!it.isZero());
            var at = this, ct = it.clone();
            at.negative !== 0 ? at = at.umod(it) : at = at.clone();
            for (var Mt = new et(1), At = new et(0), ut = ct.clone(); at.cmpn(1) > 0 && ct.cmpn(1) > 0; ) {
              for (var ot = 0, Ct = 1; !(at.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (at.iushrn(ot); ot-- > 0; ) Mt.isOdd() && Mt.iadd(ut), Mt.iushrn(1);
              for (var Rt = 0, Nt = 1; !(ct.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (ct.iushrn(Rt); Rt-- > 0; ) At.isOdd() && At.iadd(ut), At.iushrn(1);
              at.cmp(ct) >= 0 ? (at.isub(ct), Mt.isub(At)) : (ct.isub(at), At.isub(Mt));
            }
            var Wt;
            return at.cmpn(1) === 0 ? Wt = Mt : Wt = At, Wt.cmpn(0) < 0 && Wt.iadd(it), Wt;
          }, et.prototype.gcd = function(it) {
            if (this.isZero()) return it.abs();
            if (it.isZero()) return this.abs();
            var at = this.clone(), ct = it.clone();
            at.negative = 0, ct.negative = 0;
            for (var Mt = 0; at.isEven() && ct.isEven(); Mt++) at.iushrn(1), ct.iushrn(1);
            do {
              for (; at.isEven(); ) at.iushrn(1);
              for (; ct.isEven(); ) ct.iushrn(1);
              var At = at.cmp(ct);
              if (At < 0) {
                var ut = at;
                at = ct, ct = ut;
              } else if (At === 0 || ct.cmpn(1) === 0) break;
              at.isub(ct);
            } while (true);
            return ct.iushln(Mt);
          }, et.prototype.invm = function(it) {
            return this.egcd(it).a.umod(it);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(it) {
            return this.words[0] & it;
          }, et.prototype.bincn = function(it) {
            j(typeof it == "number");
            var at = it % 26, ct = (it - at) / 26, Mt = 1 << at;
            if (this.length <= ct) return this._expand(ct + 1), this.words[ct] |= Mt, this;
            for (var At = Mt, ut = ct; At !== 0 && ut < this.length; ut++) {
              var ot = this.words[ut] | 0;
              ot += At, At = ot >>> 26, ot &= 67108863, this.words[ut] = ot;
            }
            return At !== 0 && (this.words[ut] = At, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(it) {
            var at = it < 0;
            if (this.negative !== 0 && !at) return -1;
            if (this.negative === 0 && at) return 1;
            this._strip();
            var ct;
            if (this.length > 1) ct = 1;
            else {
              at && (it = -it), j(it <= 67108863, "Number is too big");
              var Mt = this.words[0] | 0;
              ct = Mt === it ? 0 : Mt < it ? -1 : 1;
            }
            return this.negative !== 0 ? -ct | 0 : ct;
          }, et.prototype.cmp = function(it) {
            if (this.negative !== 0 && it.negative === 0) return -1;
            if (this.negative === 0 && it.negative !== 0) return 1;
            var at = this.ucmp(it);
            return this.negative !== 0 ? -at | 0 : at;
          }, et.prototype.ucmp = function(it) {
            if (this.length > it.length) return 1;
            if (this.length < it.length) return -1;
            for (var at = 0, ct = this.length - 1; ct >= 0; ct--) {
              var Mt = this.words[ct] | 0, At = it.words[ct] | 0;
              if (Mt !== At) {
                Mt < At ? at = -1 : Mt > At && (at = 1);
                break;
              }
            }
            return at;
          }, et.prototype.gtn = function(it) {
            return this.cmpn(it) === 1;
          }, et.prototype.gt = function(it) {
            return this.cmp(it) === 1;
          }, et.prototype.gten = function(it) {
            return this.cmpn(it) >= 0;
          }, et.prototype.gte = function(it) {
            return this.cmp(it) >= 0;
          }, et.prototype.ltn = function(it) {
            return this.cmpn(it) === -1;
          }, et.prototype.lt = function(it) {
            return this.cmp(it) === -1;
          }, et.prototype.lten = function(it) {
            return this.cmpn(it) <= 0;
          }, et.prototype.lte = function(it) {
            return this.cmp(it) <= 0;
          }, et.prototype.eqn = function(it) {
            return this.cmpn(it) === 0;
          }, et.prototype.eq = function(it) {
            return this.cmp(it) === 0;
          }, et.red = function(it) {
            return new xt(it);
          }, et.prototype.toRed = function(it) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), it.convertTo(this)._forceRed(it);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(it) {
            return this.red = it, this;
          }, et.prototype.forceRed = function(it) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(it);
          }, et.prototype.redAdd = function(it) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, it);
          }, et.prototype.redIAdd = function(it) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, it);
          }, et.prototype.redSub = function(it) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, it);
          }, et.prototype.redISub = function(it) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, it);
          }, et.prototype.redShl = function(it) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, it);
          }, et.prototype.redMul = function(it) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, it), this.red.mul(this, it);
          }, et.prototype.redIMul = function(it) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, it), this.red.imul(this, it);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(it) {
            return j(this.red && !it.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, it);
          };
          var Zt = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Kt(nt, it) {
            this.name = nt, this.p = new et(it, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Kt.prototype._tmp = function() {
            var it = new et(null);
            return it.words = new Array(Math.ceil(this.n / 13)), it;
          }, Kt.prototype.ireduce = function(it) {
            var at = it, ct;
            do
              this.split(at, this.tmp), at = this.imulK(at), at = at.iadd(this.tmp), ct = at.bitLength();
            while (ct > this.n);
            var Mt = ct < this.n ? -1 : at.ucmp(this.p);
            return Mt === 0 ? (at.words[0] = 0, at.length = 1) : Mt > 0 ? at.isub(this.p) : at.strip !== void 0 ? at.strip() : at._strip(), at;
          }, Kt.prototype.split = function(it, at) {
            it.iushrn(this.n, 0, at);
          }, Kt.prototype.imulK = function(it) {
            return it.imul(this.k);
          };
          function ar() {
            Kt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(ar, Kt), ar.prototype.split = function(it, at) {
            for (var ct = 4194303, Mt = Math.min(it.length, 9), At = 0; At < Mt; At++) at.words[At] = it.words[At];
            if (at.length = Mt, it.length <= 9) {
              it.words[0] = 0, it.length = 1;
              return;
            }
            var ut = it.words[9];
            for (at.words[at.length++] = ut & ct, At = 10; At < it.length; At++) {
              var ot = it.words[At] | 0;
              it.words[At - 10] = (ot & ct) << 4 | ut >>> 22, ut = ot;
            }
            ut >>>= 22, it.words[At - 10] = ut, ut === 0 && it.length > 10 ? it.length -= 10 : it.length -= 9;
          }, ar.prototype.imulK = function(it) {
            it.words[it.length] = 0, it.words[it.length + 1] = 0, it.length += 2;
            for (var at = 0, ct = 0; ct < it.length; ct++) {
              var Mt = it.words[ct] | 0;
              at += Mt * 977, it.words[ct] = at & 67108863, at = Mt * 64 + (at / 67108864 | 0);
            }
            return it.words[it.length - 1] === 0 && (it.length--, it.words[it.length - 1] === 0 && it.length--), it;
          };
          function sr() {
            Kt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(sr, Kt);
          function er() {
            Kt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(er, Kt);
          function Ut() {
            Kt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(Ut, Kt), Ut.prototype.imulK = function(it) {
            for (var at = 0, ct = 0; ct < it.length; ct++) {
              var Mt = (it.words[ct] | 0) * 19 + at, At = Mt & 67108863;
              Mt >>>= 26, it.words[ct] = At, at = Mt;
            }
            return at !== 0 && (it.words[it.length++] = at), it;
          }, et._prime = function(it) {
            if (Zt[it]) return Zt[it];
            var at;
            if (it === "k256") at = new ar();
            else if (it === "p224") at = new sr();
            else if (it === "p192") at = new er();
            else if (it === "p25519") at = new Ut();
            else throw new Error("Unknown prime " + it);
            return Zt[it] = at, at;
          };
          function xt(nt) {
            if (typeof nt == "string") {
              var it = et._prime(nt);
              this.m = it.p, this.prime = it;
            } else j(nt.gtn(1), "modulus must be greater than 1"), this.m = nt, this.prime = null;
          }
          xt.prototype._verify1 = function(it) {
            j(it.negative === 0, "red works only with positives"), j(it.red, "red works only with red numbers");
          }, xt.prototype._verify2 = function(it, at) {
            j((it.negative | at.negative) === 0, "red works only with positives"), j(it.red && it.red === at.red, "red works only with red numbers");
          }, xt.prototype.imod = function(it) {
            return this.prime ? this.prime.ireduce(it)._forceRed(this) : (St(it, it.umod(this.m)._forceRed(this)), it);
          }, xt.prototype.neg = function(it) {
            return it.isZero() ? it.clone() : this.m.sub(it)._forceRed(this);
          }, xt.prototype.add = function(it, at) {
            this._verify2(it, at);
            var ct = it.add(at);
            return ct.cmp(this.m) >= 0 && ct.isub(this.m), ct._forceRed(this);
          }, xt.prototype.iadd = function(it, at) {
            this._verify2(it, at);
            var ct = it.iadd(at);
            return ct.cmp(this.m) >= 0 && ct.isub(this.m), ct;
          }, xt.prototype.sub = function(it, at) {
            this._verify2(it, at);
            var ct = it.sub(at);
            return ct.cmpn(0) < 0 && ct.iadd(this.m), ct._forceRed(this);
          }, xt.prototype.isub = function(it, at) {
            this._verify2(it, at);
            var ct = it.isub(at);
            return ct.cmpn(0) < 0 && ct.iadd(this.m), ct;
          }, xt.prototype.shl = function(it, at) {
            return this._verify1(it), this.imod(it.ushln(at));
          }, xt.prototype.imul = function(it, at) {
            return this._verify2(it, at), this.imod(it.imul(at));
          }, xt.prototype.mul = function(it, at) {
            return this._verify2(it, at), this.imod(it.mul(at));
          }, xt.prototype.isqr = function(it) {
            return this.imul(it, it.clone());
          }, xt.prototype.sqr = function(it) {
            return this.mul(it, it);
          }, xt.prototype.sqrt = function(it) {
            if (it.isZero()) return it.clone();
            var at = this.m.andln(3);
            if (j(at % 2 === 1), at === 3) {
              var ct = this.m.add(new et(1)).iushrn(2);
              return this.pow(it, ct);
            }
            for (var Mt = this.m.subn(1), At = 0; !Mt.isZero() && Mt.andln(1) === 0; ) At++, Mt.iushrn(1);
            j(!Mt.isZero());
            var ut = new et(1).toRed(this), ot = ut.redNeg(), Ct = this.m.subn(1).iushrn(1), Rt = this.m.bitLength();
            for (Rt = new et(2 * Rt * Rt).toRed(this); this.pow(Rt, Ct).cmp(ot) !== 0; ) Rt.redIAdd(ot);
            for (var Nt = this.pow(Rt, Mt), Wt = this.pow(it, Mt.addn(1).iushrn(1)), Xt = this.pow(it, Mt), rr = At; Xt.cmp(ut) !== 0; ) {
              for (var Gt = Xt, Yt = 0; Gt.cmp(ut) !== 0; Yt++) Gt = Gt.redSqr();
              j(Yt < rr);
              var tr = this.pow(Nt, new et(1).iushln(rr - Yt - 1));
              Wt = Wt.redMul(tr), Nt = tr.redSqr(), Xt = Xt.redMul(Nt), rr = Yt;
            }
            return Wt;
          }, xt.prototype.invm = function(it) {
            var at = it._invmp(this.m);
            return at.negative !== 0 ? (at.negative = 0, this.imod(at).redNeg()) : this.imod(at);
          }, xt.prototype.pow = function(it, at) {
            if (at.isZero()) return new et(1).toRed(this);
            if (at.cmpn(1) === 0) return it.clone();
            var ct = 4, Mt = new Array(1 << ct);
            Mt[0] = new et(1).toRed(this), Mt[1] = it;
            for (var At = 2; At < Mt.length; At++) Mt[At] = this.mul(Mt[At - 1], it);
            var ut = Mt[0], ot = 0, Ct = 0, Rt = at.bitLength() % 26;
            for (Rt === 0 && (Rt = 26), At = at.length - 1; At >= 0; At--) {
              for (var Nt = at.words[At], Wt = Rt - 1; Wt >= 0; Wt--) {
                var Xt = Nt >> Wt & 1;
                if (ut !== Mt[0] && (ut = this.sqr(ut)), Xt === 0 && ot === 0) {
                  Ct = 0;
                  continue;
                }
                ot <<= 1, ot |= Xt, Ct++, !(Ct !== ct && (At !== 0 || Wt !== 0)) && (ut = this.mul(ut, Mt[ot]), Ct = 0, ot = 0);
              }
              Rt = 26;
            }
            return ut;
          }, xt.prototype.convertTo = function(it) {
            var at = it.umod(this.m);
            return at === it ? at.clone() : at;
          }, xt.prototype.convertFrom = function(it) {
            var at = it.clone();
            return at.red = null, at;
          }, et.mont = function(it) {
            return new tt(it);
          };
          function tt(nt) {
            xt.call(this, nt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(tt, xt), tt.prototype.convertTo = function(it) {
            return this.imod(it.ushln(this.shift));
          }, tt.prototype.convertFrom = function(it) {
            var at = this.imod(it.mul(this.rinv));
            return at.red = null, at;
          }, tt.prototype.imul = function(it, at) {
            if (it.isZero() || at.isZero()) return it.words[0] = 0, it.length = 1, it;
            var ct = it.imul(at), Mt = ct.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), At = ct.isub(Mt).iushrn(this.shift), ut = At;
            return At.cmp(this.m) >= 0 ? ut = At.isub(this.m) : At.cmpn(0) < 0 && (ut = At.iadd(this.m)), ut._forceRed(this);
          }, tt.prototype.mul = function(it, at) {
            if (it.isZero() || at.isZero()) return new et(0)._forceRed(this);
            var ct = it.mul(at), Mt = ct.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), At = ct.isub(Mt).iushrn(this.shift), ut = At;
            return At.cmp(this.m) >= 0 ? ut = At.isub(this.m) : At.cmpn(0) < 0 && (ut = At.iadd(this.m)), ut._forceRed(this);
          }, tt.prototype.invm = function(it) {
            var at = this.imod(it._invmp(this.m).mul(this.r2));
            return at._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$8)), bn$8.exports;
    }
    var browserifyRsa, hasRequiredBrowserifyRsa;
    function requireBrowserifyRsa() {
      if (hasRequiredBrowserifyRsa) return browserifyRsa;
      hasRequiredBrowserifyRsa = 1;
      var d = requireBn$5(), _ = requireBrowser$b(), $ = requireSafeBuffer$1().Buffer;
      function j(st) {
        var pt = st.modulus.byteLength(), Et;
        do
          Et = new d(_(pt));
        while (Et.cmp(st.modulus) >= 0 || !Et.umod(st.prime1) || !Et.umod(st.prime2));
        return Et;
      }
      function rt(st) {
        var pt = j(st), Et = pt.toRed(d.mont(st.modulus)).redPow(new d(st.publicExponent)).fromRed();
        return {
          blinder: Et,
          unblinder: pt.invm(st.modulus)
        };
      }
      function et(st, pt) {
        var Et = rt(pt), Bt = pt.modulus.byteLength(), St = new d(st).mul(Et.blinder).umod(pt.modulus), $t = St.toRed(d.mont(pt.prime1)), kt = St.toRed(d.mont(pt.prime2)), Tt = pt.coefficient, Pt = pt.prime1, It = pt.prime2, jt = $t.redPow(pt.exponent1).fromRed(), Dt = kt.redPow(pt.exponent2).fromRed(), Ot = jt.isub(Dt).imul(Tt).umod(Pt).imul(It);
        return Dt.iadd(Ot).imul(Et.unblinder).umod(pt.modulus).toArrayLike($, "be", Bt);
      }
      return et.getr = j, browserifyRsa = et, browserifyRsa;
    }
    var elliptic = {};
    const version$4 = "6.6.1", require$$0$1 = {
      version: version$4
    };
    var utils$5 = {}, bn$7 = {
      exports: {}
    };
    bn$7.exports;
    var hasRequiredBn$4;
    function requireBn$4() {
      return hasRequiredBn$4 || (hasRequiredBn$4 = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$7)), bn$7.exports;
    }
    var utils$4 = {}, hasRequiredUtils$2;
    function requireUtils$2() {
      return hasRequiredUtils$2 || (hasRequiredUtils$2 = 1, function(d) {
        var _ = d;
        function $(et, st) {
          if (Array.isArray(et)) return et.slice();
          if (!et) return [];
          var pt = [];
          if (typeof et != "string") {
            for (var Et = 0; Et < et.length; Et++) pt[Et] = et[Et] | 0;
            return pt;
          }
          if (st === "hex") {
            et = et.replace(/[^a-z0-9]+/ig, ""), et.length % 2 !== 0 && (et = "0" + et);
            for (var Et = 0; Et < et.length; Et += 2) pt.push(parseInt(et[Et] + et[Et + 1], 16));
          } else for (var Et = 0; Et < et.length; Et++) {
            var Bt = et.charCodeAt(Et), St = Bt >> 8, $t = Bt & 255;
            St ? pt.push(St, $t) : pt.push($t);
          }
          return pt;
        }
        _.toArray = $;
        function j(et) {
          return et.length === 1 ? "0" + et : et;
        }
        _.zero2 = j;
        function rt(et) {
          for (var st = "", pt = 0; pt < et.length; pt++) st += j(et[pt].toString(16));
          return st;
        }
        _.toHex = rt, _.encode = function(st, pt) {
          return pt === "hex" ? rt(st) : st;
        };
      }(utils$4)), utils$4;
    }
    var hasRequiredUtils$1;
    function requireUtils$1() {
      return hasRequiredUtils$1 || (hasRequiredUtils$1 = 1, function(d) {
        var _ = d, $ = requireBn$4(), j = requireMinimalisticAssert(), rt = requireUtils$2();
        _.assert = j, _.toArray = rt.toArray, _.zero2 = rt.zero2, _.toHex = rt.toHex, _.encode = rt.encode;
        function et(St, $t, kt) {
          var Tt = new Array(Math.max(St.bitLength(), kt) + 1), Pt;
          for (Pt = 0; Pt < Tt.length; Pt += 1) Tt[Pt] = 0;
          var It = 1 << $t + 1, jt = St.clone();
          for (Pt = 0; Pt < Tt.length; Pt++) {
            var Dt, Ot = jt.andln(It - 1);
            jt.isOdd() ? (Ot > (It >> 1) - 1 ? Dt = (It >> 1) - Ot : Dt = Ot, jt.isubn(Dt)) : Dt = 0, Tt[Pt] = Dt, jt.iushrn(1);
          }
          return Tt;
        }
        _.getNAF = et;
        function st(St, $t) {
          var kt = [
            [],
            []
          ];
          St = St.clone(), $t = $t.clone();
          for (var Tt = 0, Pt = 0, It; St.cmpn(-Tt) > 0 || $t.cmpn(-Pt) > 0; ) {
            var jt = St.andln(3) + Tt & 3, Dt = $t.andln(3) + Pt & 3;
            jt === 3 && (jt = -1), Dt === 3 && (Dt = -1);
            var Ot;
            jt & 1 ? (It = St.andln(7) + Tt & 7, (It === 3 || It === 5) && Dt === 2 ? Ot = -jt : Ot = jt) : Ot = 0, kt[0].push(Ot);
            var Ft;
            Dt & 1 ? (It = $t.andln(7) + Pt & 7, (It === 3 || It === 5) && jt === 2 ? Ft = -Dt : Ft = Dt) : Ft = 0, kt[1].push(Ft), 2 * Tt === Ot + 1 && (Tt = 1 - Tt), 2 * Pt === Ft + 1 && (Pt = 1 - Pt), St.iushrn(1), $t.iushrn(1);
          }
          return kt;
        }
        _.getJSF = st;
        function pt(St, $t, kt) {
          var Tt = "_" + $t;
          St.prototype[$t] = function() {
            return this[Tt] !== void 0 ? this[Tt] : this[Tt] = kt.call(this);
          };
        }
        _.cachedProperty = pt;
        function Et(St) {
          return typeof St == "string" ? _.toArray(St, "hex") : St;
        }
        _.parseBytes = Et;
        function Bt(St) {
          return new $(St, "hex", "le");
        }
        _.intFromLE = Bt;
      }(utils$5)), utils$5;
    }
    var curve = {}, base$1, hasRequiredBase$1;
    function requireBase$1() {
      if (hasRequiredBase$1) return base$1;
      hasRequiredBase$1 = 1;
      var d = requireBn$4(), _ = requireUtils$1(), $ = _.getNAF, j = _.getJSF, rt = _.assert;
      function et(pt, Et) {
        this.type = pt, this.p = new d(Et.p, 16), this.red = Et.prime ? d.red(Et.prime) : d.mont(this.p), this.zero = new d(0).toRed(this.red), this.one = new d(1).toRed(this.red), this.two = new d(2).toRed(this.red), this.n = Et.n && new d(Et.n, 16), this.g = Et.g && this.pointFromJSON(Et.g, Et.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var Bt = this.n && this.p.div(this.n);
        !Bt || Bt.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      base$1 = et, et.prototype.point = function() {
        throw new Error("Not implemented");
      }, et.prototype.validate = function() {
        throw new Error("Not implemented");
      }, et.prototype._fixedNafMul = function(Et, Bt) {
        rt(Et.precomputed);
        var St = Et._getDoubles(), $t = $(Bt, 1, this._bitLength), kt = (1 << St.step + 1) - (St.step % 2 === 0 ? 2 : 1);
        kt /= 3;
        var Tt = [], Pt, It;
        for (Pt = 0; Pt < $t.length; Pt += St.step) {
          It = 0;
          for (var jt = Pt + St.step - 1; jt >= Pt; jt--) It = (It << 1) + $t[jt];
          Tt.push(It);
        }
        for (var Dt = this.jpoint(null, null, null), Ot = this.jpoint(null, null, null), Ft = kt; Ft > 0; Ft--) {
          for (Pt = 0; Pt < Tt.length; Pt++) It = Tt[Pt], It === Ft ? Ot = Ot.mixedAdd(St.points[Pt]) : It === -Ft && (Ot = Ot.mixedAdd(St.points[Pt].neg()));
          Dt = Dt.add(Ot);
        }
        return Dt.toP();
      }, et.prototype._wnafMul = function(Et, Bt) {
        var St = 4, $t = Et._getNAFPoints(St);
        St = $t.wnd;
        for (var kt = $t.points, Tt = $(Bt, St, this._bitLength), Pt = this.jpoint(null, null, null), It = Tt.length - 1; It >= 0; It--) {
          for (var jt = 0; It >= 0 && Tt[It] === 0; It--) jt++;
          if (It >= 0 && jt++, Pt = Pt.dblp(jt), It < 0) break;
          var Dt = Tt[It];
          rt(Dt !== 0), Et.type === "affine" ? Dt > 0 ? Pt = Pt.mixedAdd(kt[Dt - 1 >> 1]) : Pt = Pt.mixedAdd(kt[-Dt - 1 >> 1].neg()) : Dt > 0 ? Pt = Pt.add(kt[Dt - 1 >> 1]) : Pt = Pt.add(kt[-Dt - 1 >> 1].neg());
        }
        return Et.type === "affine" ? Pt.toP() : Pt;
      }, et.prototype._wnafMulAdd = function(Et, Bt, St, $t, kt) {
        var Tt = this._wnafT1, Pt = this._wnafT2, It = this._wnafT3, jt = 0, Dt, Ot, Ft;
        for (Dt = 0; Dt < $t; Dt++) {
          Ft = Bt[Dt];
          var Lt = Ft._getNAFPoints(Et);
          Tt[Dt] = Lt.wnd, Pt[Dt] = Lt.points;
        }
        for (Dt = $t - 1; Dt >= 1; Dt -= 2) {
          var Zt = Dt - 1, Kt = Dt;
          if (Tt[Zt] !== 1 || Tt[Kt] !== 1) {
            It[Zt] = $(St[Zt], Tt[Zt], this._bitLength), It[Kt] = $(St[Kt], Tt[Kt], this._bitLength), jt = Math.max(It[Zt].length, jt), jt = Math.max(It[Kt].length, jt);
            continue;
          }
          var ar = [
            Bt[Zt],
            null,
            null,
            Bt[Kt]
          ];
          Bt[Zt].y.cmp(Bt[Kt].y) === 0 ? (ar[1] = Bt[Zt].add(Bt[Kt]), ar[2] = Bt[Zt].toJ().mixedAdd(Bt[Kt].neg())) : Bt[Zt].y.cmp(Bt[Kt].y.redNeg()) === 0 ? (ar[1] = Bt[Zt].toJ().mixedAdd(Bt[Kt]), ar[2] = Bt[Zt].add(Bt[Kt].neg())) : (ar[1] = Bt[Zt].toJ().mixedAdd(Bt[Kt]), ar[2] = Bt[Zt].toJ().mixedAdd(Bt[Kt].neg()));
          var sr = [
            -3,
            -1,
            -5,
            -7,
            0,
            7,
            5,
            1,
            3
          ], er = j(St[Zt], St[Kt]);
          for (jt = Math.max(er[0].length, jt), It[Zt] = new Array(jt), It[Kt] = new Array(jt), Ot = 0; Ot < jt; Ot++) {
            var Ut = er[0][Ot] | 0, xt = er[1][Ot] | 0;
            It[Zt][Ot] = sr[(Ut + 1) * 3 + (xt + 1)], It[Kt][Ot] = 0, Pt[Zt] = ar;
          }
        }
        var tt = this.jpoint(null, null, null), nt = this._wnafT4;
        for (Dt = jt; Dt >= 0; Dt--) {
          for (var it = 0; Dt >= 0; ) {
            var at = true;
            for (Ot = 0; Ot < $t; Ot++) nt[Ot] = It[Ot][Dt] | 0, nt[Ot] !== 0 && (at = false);
            if (!at) break;
            it++, Dt--;
          }
          if (Dt >= 0 && it++, tt = tt.dblp(it), Dt < 0) break;
          for (Ot = 0; Ot < $t; Ot++) {
            var ct = nt[Ot];
            ct !== 0 && (ct > 0 ? Ft = Pt[Ot][ct - 1 >> 1] : ct < 0 && (Ft = Pt[Ot][-ct - 1 >> 1].neg()), Ft.type === "affine" ? tt = tt.mixedAdd(Ft) : tt = tt.add(Ft));
          }
        }
        for (Dt = 0; Dt < $t; Dt++) Pt[Dt] = null;
        return kt ? tt : tt.toP();
      };
      function st(pt, Et) {
        this.curve = pt, this.type = Et, this.precomputed = null;
      }
      return et.BasePoint = st, st.prototype.eq = function() {
        throw new Error("Not implemented");
      }, st.prototype.validate = function() {
        return this.curve.validate(this);
      }, et.prototype.decodePoint = function(Et, Bt) {
        Et = _.toArray(Et, Bt);
        var St = this.p.byteLength();
        if ((Et[0] === 4 || Et[0] === 6 || Et[0] === 7) && Et.length - 1 === 2 * St) {
          Et[0] === 6 ? rt(Et[Et.length - 1] % 2 === 0) : Et[0] === 7 && rt(Et[Et.length - 1] % 2 === 1);
          var $t = this.point(Et.slice(1, 1 + St), Et.slice(1 + St, 1 + 2 * St));
          return $t;
        } else if ((Et[0] === 2 || Et[0] === 3) && Et.length - 1 === St) return this.pointFromX(Et.slice(1, 1 + St), Et[0] === 3);
        throw new Error("Unknown point format");
      }, st.prototype.encodeCompressed = function(Et) {
        return this.encode(Et, true);
      }, st.prototype._encode = function(Et) {
        var Bt = this.curve.p.byteLength(), St = this.getX().toArray("be", Bt);
        return Et ? [
          this.getY().isEven() ? 2 : 3
        ].concat(St) : [
          4
        ].concat(St, this.getY().toArray("be", Bt));
      }, st.prototype.encode = function(Et, Bt) {
        return _.encode(this._encode(Bt), Et);
      }, st.prototype.precompute = function(Et) {
        if (this.precomputed) return this;
        var Bt = {
          doubles: null,
          naf: null,
          beta: null
        };
        return Bt.naf = this._getNAFPoints(8), Bt.doubles = this._getDoubles(4, Et), Bt.beta = this._getBeta(), this.precomputed = Bt, this;
      }, st.prototype._hasDoubles = function(Et) {
        if (!this.precomputed) return false;
        var Bt = this.precomputed.doubles;
        return Bt ? Bt.points.length >= Math.ceil((Et.bitLength() + 1) / Bt.step) : false;
      }, st.prototype._getDoubles = function(Et, Bt) {
        if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
        for (var St = [
          this
        ], $t = this, kt = 0; kt < Bt; kt += Et) {
          for (var Tt = 0; Tt < Et; Tt++) $t = $t.dbl();
          St.push($t);
        }
        return {
          step: Et,
          points: St
        };
      }, st.prototype._getNAFPoints = function(Et) {
        if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
        for (var Bt = [
          this
        ], St = (1 << Et) - 1, $t = St === 1 ? null : this.dbl(), kt = 1; kt < St; kt++) Bt[kt] = Bt[kt - 1].add($t);
        return {
          wnd: Et,
          points: Bt
        };
      }, st.prototype._getBeta = function() {
        return null;
      }, st.prototype.dblp = function(Et) {
        for (var Bt = this, St = 0; St < Et; St++) Bt = Bt.dbl();
        return Bt;
      }, base$1;
    }
    var short, hasRequiredShort;
    function requireShort() {
      if (hasRequiredShort) return short;
      hasRequiredShort = 1;
      var d = requireUtils$1(), _ = requireBn$4(), $ = requireInherits_browser(), j = requireBase$1(), rt = d.assert;
      function et(Et) {
        j.call(this, "short", Et), this.a = new _(Et.a, 16).toRed(this.red), this.b = new _(Et.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(Et), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      $(et, j), short = et, et.prototype._getEndomorphism = function(Bt) {
        if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
          var St, $t;
          if (Bt.beta) St = new _(Bt.beta, 16).toRed(this.red);
          else {
            var kt = this._getEndoRoots(this.p);
            St = kt[0].cmp(kt[1]) < 0 ? kt[0] : kt[1], St = St.toRed(this.red);
          }
          if (Bt.lambda) $t = new _(Bt.lambda, 16);
          else {
            var Tt = this._getEndoRoots(this.n);
            this.g.mul(Tt[0]).x.cmp(this.g.x.redMul(St)) === 0 ? $t = Tt[0] : ($t = Tt[1], rt(this.g.mul($t).x.cmp(this.g.x.redMul(St)) === 0));
          }
          var Pt;
          return Bt.basis ? Pt = Bt.basis.map(function(It) {
            return {
              a: new _(It.a, 16),
              b: new _(It.b, 16)
            };
          }) : Pt = this._getEndoBasis($t), {
            beta: St,
            lambda: $t,
            basis: Pt
          };
        }
      }, et.prototype._getEndoRoots = function(Bt) {
        var St = Bt === this.p ? this.red : _.mont(Bt), $t = new _(2).toRed(St).redInvm(), kt = $t.redNeg(), Tt = new _(3).toRed(St).redNeg().redSqrt().redMul($t), Pt = kt.redAdd(Tt).fromRed(), It = kt.redSub(Tt).fromRed();
        return [
          Pt,
          It
        ];
      }, et.prototype._getEndoBasis = function(Bt) {
        for (var St = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), $t = Bt, kt = this.n.clone(), Tt = new _(1), Pt = new _(0), It = new _(0), jt = new _(1), Dt, Ot, Ft, Lt, Zt, Kt, ar, sr = 0, er, Ut; $t.cmpn(0) !== 0; ) {
          var xt = kt.div($t);
          er = kt.sub(xt.mul($t)), Ut = It.sub(xt.mul(Tt));
          var tt = jt.sub(xt.mul(Pt));
          if (!Ft && er.cmp(St) < 0) Dt = ar.neg(), Ot = Tt, Ft = er.neg(), Lt = Ut;
          else if (Ft && ++sr === 2) break;
          ar = er, kt = $t, $t = er, It = Tt, Tt = Ut, jt = Pt, Pt = tt;
        }
        Zt = er.neg(), Kt = Ut;
        var nt = Ft.sqr().add(Lt.sqr()), it = Zt.sqr().add(Kt.sqr());
        return it.cmp(nt) >= 0 && (Zt = Dt, Kt = Ot), Ft.negative && (Ft = Ft.neg(), Lt = Lt.neg()), Zt.negative && (Zt = Zt.neg(), Kt = Kt.neg()), [
          {
            a: Ft,
            b: Lt
          },
          {
            a: Zt,
            b: Kt
          }
        ];
      }, et.prototype._endoSplit = function(Bt) {
        var St = this.endo.basis, $t = St[0], kt = St[1], Tt = kt.b.mul(Bt).divRound(this.n), Pt = $t.b.neg().mul(Bt).divRound(this.n), It = Tt.mul($t.a), jt = Pt.mul(kt.a), Dt = Tt.mul($t.b), Ot = Pt.mul(kt.b), Ft = Bt.sub(It).sub(jt), Lt = Dt.add(Ot).neg();
        return {
          k1: Ft,
          k2: Lt
        };
      }, et.prototype.pointFromX = function(Bt, St) {
        Bt = new _(Bt, 16), Bt.red || (Bt = Bt.toRed(this.red));
        var $t = Bt.redSqr().redMul(Bt).redIAdd(Bt.redMul(this.a)).redIAdd(this.b), kt = $t.redSqrt();
        if (kt.redSqr().redSub($t).cmp(this.zero) !== 0) throw new Error("invalid point");
        var Tt = kt.fromRed().isOdd();
        return (St && !Tt || !St && Tt) && (kt = kt.redNeg()), this.point(Bt, kt);
      }, et.prototype.validate = function(Bt) {
        if (Bt.inf) return true;
        var St = Bt.x, $t = Bt.y, kt = this.a.redMul(St), Tt = St.redSqr().redMul(St).redIAdd(kt).redIAdd(this.b);
        return $t.redSqr().redISub(Tt).cmpn(0) === 0;
      }, et.prototype._endoWnafMulAdd = function(Bt, St, $t) {
        for (var kt = this._endoWnafT1, Tt = this._endoWnafT2, Pt = 0; Pt < Bt.length; Pt++) {
          var It = this._endoSplit(St[Pt]), jt = Bt[Pt], Dt = jt._getBeta();
          It.k1.negative && (It.k1.ineg(), jt = jt.neg(true)), It.k2.negative && (It.k2.ineg(), Dt = Dt.neg(true)), kt[Pt * 2] = jt, kt[Pt * 2 + 1] = Dt, Tt[Pt * 2] = It.k1, Tt[Pt * 2 + 1] = It.k2;
        }
        for (var Ot = this._wnafMulAdd(1, kt, Tt, Pt * 2, $t), Ft = 0; Ft < Pt * 2; Ft++) kt[Ft] = null, Tt[Ft] = null;
        return Ot;
      };
      function st(Et, Bt, St, $t) {
        j.BasePoint.call(this, Et, "affine"), Bt === null && St === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new _(Bt, 16), this.y = new _(St, 16), $t && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      $(st, j.BasePoint), et.prototype.point = function(Bt, St, $t) {
        return new st(this, Bt, St, $t);
      }, et.prototype.pointFromJSON = function(Bt, St) {
        return st.fromJSON(this, Bt, St);
      }, st.prototype._getBeta = function() {
        if (this.curve.endo) {
          var Bt = this.precomputed;
          if (Bt && Bt.beta) return Bt.beta;
          var St = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (Bt) {
            var $t = this.curve, kt = function(Tt) {
              return $t.point(Tt.x.redMul($t.endo.beta), Tt.y);
            };
            Bt.beta = St, St.precomputed = {
              beta: null,
              naf: Bt.naf && {
                wnd: Bt.naf.wnd,
                points: Bt.naf.points.map(kt)
              },
              doubles: Bt.doubles && {
                step: Bt.doubles.step,
                points: Bt.doubles.points.map(kt)
              }
            };
          }
          return St;
        }
      }, st.prototype.toJSON = function() {
        return this.precomputed ? [
          this.x,
          this.y,
          this.precomputed && {
            doubles: this.precomputed.doubles && {
              step: this.precomputed.doubles.step,
              points: this.precomputed.doubles.points.slice(1)
            },
            naf: this.precomputed.naf && {
              wnd: this.precomputed.naf.wnd,
              points: this.precomputed.naf.points.slice(1)
            }
          }
        ] : [
          this.x,
          this.y
        ];
      }, st.fromJSON = function(Bt, St, $t) {
        typeof St == "string" && (St = JSON.parse(St));
        var kt = Bt.point(St[0], St[1], $t);
        if (!St[2]) return kt;
        function Tt(It) {
          return Bt.point(It[0], It[1], $t);
        }
        var Pt = St[2];
        return kt.precomputed = {
          beta: null,
          doubles: Pt.doubles && {
            step: Pt.doubles.step,
            points: [
              kt
            ].concat(Pt.doubles.points.map(Tt))
          },
          naf: Pt.naf && {
            wnd: Pt.naf.wnd,
            points: [
              kt
            ].concat(Pt.naf.points.map(Tt))
          }
        }, kt;
      }, st.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, st.prototype.isInfinity = function() {
        return this.inf;
      }, st.prototype.add = function(Bt) {
        if (this.inf) return Bt;
        if (Bt.inf) return this;
        if (this.eq(Bt)) return this.dbl();
        if (this.neg().eq(Bt)) return this.curve.point(null, null);
        if (this.x.cmp(Bt.x) === 0) return this.curve.point(null, null);
        var St = this.y.redSub(Bt.y);
        St.cmpn(0) !== 0 && (St = St.redMul(this.x.redSub(Bt.x).redInvm()));
        var $t = St.redSqr().redISub(this.x).redISub(Bt.x), kt = St.redMul(this.x.redSub($t)).redISub(this.y);
        return this.curve.point($t, kt);
      }, st.prototype.dbl = function() {
        if (this.inf) return this;
        var Bt = this.y.redAdd(this.y);
        if (Bt.cmpn(0) === 0) return this.curve.point(null, null);
        var St = this.curve.a, $t = this.x.redSqr(), kt = Bt.redInvm(), Tt = $t.redAdd($t).redIAdd($t).redIAdd(St).redMul(kt), Pt = Tt.redSqr().redISub(this.x.redAdd(this.x)), It = Tt.redMul(this.x.redSub(Pt)).redISub(this.y);
        return this.curve.point(Pt, It);
      }, st.prototype.getX = function() {
        return this.x.fromRed();
      }, st.prototype.getY = function() {
        return this.y.fromRed();
      }, st.prototype.mul = function(Bt) {
        return Bt = new _(Bt, 16), this.isInfinity() ? this : this._hasDoubles(Bt) ? this.curve._fixedNafMul(this, Bt) : this.curve.endo ? this.curve._endoWnafMulAdd([
          this
        ], [
          Bt
        ]) : this.curve._wnafMul(this, Bt);
      }, st.prototype.mulAdd = function(Bt, St, $t) {
        var kt = [
          this,
          St
        ], Tt = [
          Bt,
          $t
        ];
        return this.curve.endo ? this.curve._endoWnafMulAdd(kt, Tt) : this.curve._wnafMulAdd(1, kt, Tt, 2);
      }, st.prototype.jmulAdd = function(Bt, St, $t) {
        var kt = [
          this,
          St
        ], Tt = [
          Bt,
          $t
        ];
        return this.curve.endo ? this.curve._endoWnafMulAdd(kt, Tt, true) : this.curve._wnafMulAdd(1, kt, Tt, 2, true);
      }, st.prototype.eq = function(Bt) {
        return this === Bt || this.inf === Bt.inf && (this.inf || this.x.cmp(Bt.x) === 0 && this.y.cmp(Bt.y) === 0);
      }, st.prototype.neg = function(Bt) {
        if (this.inf) return this;
        var St = this.curve.point(this.x, this.y.redNeg());
        if (Bt && this.precomputed) {
          var $t = this.precomputed, kt = function(Tt) {
            return Tt.neg();
          };
          St.precomputed = {
            naf: $t.naf && {
              wnd: $t.naf.wnd,
              points: $t.naf.points.map(kt)
            },
            doubles: $t.doubles && {
              step: $t.doubles.step,
              points: $t.doubles.points.map(kt)
            }
          };
        }
        return St;
      }, st.prototype.toJ = function() {
        if (this.inf) return this.curve.jpoint(null, null, null);
        var Bt = this.curve.jpoint(this.x, this.y, this.curve.one);
        return Bt;
      };
      function pt(Et, Bt, St, $t) {
        j.BasePoint.call(this, Et, "jacobian"), Bt === null && St === null && $t === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new _(0)) : (this.x = new _(Bt, 16), this.y = new _(St, 16), this.z = new _($t, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      return $(pt, j.BasePoint), et.prototype.jpoint = function(Bt, St, $t) {
        return new pt(this, Bt, St, $t);
      }, pt.prototype.toP = function() {
        if (this.isInfinity()) return this.curve.point(null, null);
        var Bt = this.z.redInvm(), St = Bt.redSqr(), $t = this.x.redMul(St), kt = this.y.redMul(St).redMul(Bt);
        return this.curve.point($t, kt);
      }, pt.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, pt.prototype.add = function(Bt) {
        if (this.isInfinity()) return Bt;
        if (Bt.isInfinity()) return this;
        var St = Bt.z.redSqr(), $t = this.z.redSqr(), kt = this.x.redMul(St), Tt = Bt.x.redMul($t), Pt = this.y.redMul(St.redMul(Bt.z)), It = Bt.y.redMul($t.redMul(this.z)), jt = kt.redSub(Tt), Dt = Pt.redSub(It);
        if (jt.cmpn(0) === 0) return Dt.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var Ot = jt.redSqr(), Ft = Ot.redMul(jt), Lt = kt.redMul(Ot), Zt = Dt.redSqr().redIAdd(Ft).redISub(Lt).redISub(Lt), Kt = Dt.redMul(Lt.redISub(Zt)).redISub(Pt.redMul(Ft)), ar = this.z.redMul(Bt.z).redMul(jt);
        return this.curve.jpoint(Zt, Kt, ar);
      }, pt.prototype.mixedAdd = function(Bt) {
        if (this.isInfinity()) return Bt.toJ();
        if (Bt.isInfinity()) return this;
        var St = this.z.redSqr(), $t = this.x, kt = Bt.x.redMul(St), Tt = this.y, Pt = Bt.y.redMul(St).redMul(this.z), It = $t.redSub(kt), jt = Tt.redSub(Pt);
        if (It.cmpn(0) === 0) return jt.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var Dt = It.redSqr(), Ot = Dt.redMul(It), Ft = $t.redMul(Dt), Lt = jt.redSqr().redIAdd(Ot).redISub(Ft).redISub(Ft), Zt = jt.redMul(Ft.redISub(Lt)).redISub(Tt.redMul(Ot)), Kt = this.z.redMul(It);
        return this.curve.jpoint(Lt, Zt, Kt);
      }, pt.prototype.dblp = function(Bt) {
        if (Bt === 0) return this;
        if (this.isInfinity()) return this;
        if (!Bt) return this.dbl();
        var St;
        if (this.curve.zeroA || this.curve.threeA) {
          var $t = this;
          for (St = 0; St < Bt; St++) $t = $t.dbl();
          return $t;
        }
        var kt = this.curve.a, Tt = this.curve.tinv, Pt = this.x, It = this.y, jt = this.z, Dt = jt.redSqr().redSqr(), Ot = It.redAdd(It);
        for (St = 0; St < Bt; St++) {
          var Ft = Pt.redSqr(), Lt = Ot.redSqr(), Zt = Lt.redSqr(), Kt = Ft.redAdd(Ft).redIAdd(Ft).redIAdd(kt.redMul(Dt)), ar = Pt.redMul(Lt), sr = Kt.redSqr().redISub(ar.redAdd(ar)), er = ar.redISub(sr), Ut = Kt.redMul(er);
          Ut = Ut.redIAdd(Ut).redISub(Zt);
          var xt = Ot.redMul(jt);
          St + 1 < Bt && (Dt = Dt.redMul(Zt)), Pt = sr, jt = xt, Ot = Ut;
        }
        return this.curve.jpoint(Pt, Ot.redMul(Tt), jt);
      }, pt.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, pt.prototype._zeroDbl = function() {
        var Bt, St, $t;
        if (this.zOne) {
          var kt = this.x.redSqr(), Tt = this.y.redSqr(), Pt = Tt.redSqr(), It = this.x.redAdd(Tt).redSqr().redISub(kt).redISub(Pt);
          It = It.redIAdd(It);
          var jt = kt.redAdd(kt).redIAdd(kt), Dt = jt.redSqr().redISub(It).redISub(It), Ot = Pt.redIAdd(Pt);
          Ot = Ot.redIAdd(Ot), Ot = Ot.redIAdd(Ot), Bt = Dt, St = jt.redMul(It.redISub(Dt)).redISub(Ot), $t = this.y.redAdd(this.y);
        } else {
          var Ft = this.x.redSqr(), Lt = this.y.redSqr(), Zt = Lt.redSqr(), Kt = this.x.redAdd(Lt).redSqr().redISub(Ft).redISub(Zt);
          Kt = Kt.redIAdd(Kt);
          var ar = Ft.redAdd(Ft).redIAdd(Ft), sr = ar.redSqr(), er = Zt.redIAdd(Zt);
          er = er.redIAdd(er), er = er.redIAdd(er), Bt = sr.redISub(Kt).redISub(Kt), St = ar.redMul(Kt.redISub(Bt)).redISub(er), $t = this.y.redMul(this.z), $t = $t.redIAdd($t);
        }
        return this.curve.jpoint(Bt, St, $t);
      }, pt.prototype._threeDbl = function() {
        var Bt, St, $t;
        if (this.zOne) {
          var kt = this.x.redSqr(), Tt = this.y.redSqr(), Pt = Tt.redSqr(), It = this.x.redAdd(Tt).redSqr().redISub(kt).redISub(Pt);
          It = It.redIAdd(It);
          var jt = kt.redAdd(kt).redIAdd(kt).redIAdd(this.curve.a), Dt = jt.redSqr().redISub(It).redISub(It);
          Bt = Dt;
          var Ot = Pt.redIAdd(Pt);
          Ot = Ot.redIAdd(Ot), Ot = Ot.redIAdd(Ot), St = jt.redMul(It.redISub(Dt)).redISub(Ot), $t = this.y.redAdd(this.y);
        } else {
          var Ft = this.z.redSqr(), Lt = this.y.redSqr(), Zt = this.x.redMul(Lt), Kt = this.x.redSub(Ft).redMul(this.x.redAdd(Ft));
          Kt = Kt.redAdd(Kt).redIAdd(Kt);
          var ar = Zt.redIAdd(Zt);
          ar = ar.redIAdd(ar);
          var sr = ar.redAdd(ar);
          Bt = Kt.redSqr().redISub(sr), $t = this.y.redAdd(this.z).redSqr().redISub(Lt).redISub(Ft);
          var er = Lt.redSqr();
          er = er.redIAdd(er), er = er.redIAdd(er), er = er.redIAdd(er), St = Kt.redMul(ar.redISub(Bt)).redISub(er);
        }
        return this.curve.jpoint(Bt, St, $t);
      }, pt.prototype._dbl = function() {
        var Bt = this.curve.a, St = this.x, $t = this.y, kt = this.z, Tt = kt.redSqr().redSqr(), Pt = St.redSqr(), It = $t.redSqr(), jt = Pt.redAdd(Pt).redIAdd(Pt).redIAdd(Bt.redMul(Tt)), Dt = St.redAdd(St);
        Dt = Dt.redIAdd(Dt);
        var Ot = Dt.redMul(It), Ft = jt.redSqr().redISub(Ot.redAdd(Ot)), Lt = Ot.redISub(Ft), Zt = It.redSqr();
        Zt = Zt.redIAdd(Zt), Zt = Zt.redIAdd(Zt), Zt = Zt.redIAdd(Zt);
        var Kt = jt.redMul(Lt).redISub(Zt), ar = $t.redAdd($t).redMul(kt);
        return this.curve.jpoint(Ft, Kt, ar);
      }, pt.prototype.trpl = function() {
        if (!this.curve.zeroA) return this.dbl().add(this);
        var Bt = this.x.redSqr(), St = this.y.redSqr(), $t = this.z.redSqr(), kt = St.redSqr(), Tt = Bt.redAdd(Bt).redIAdd(Bt), Pt = Tt.redSqr(), It = this.x.redAdd(St).redSqr().redISub(Bt).redISub(kt);
        It = It.redIAdd(It), It = It.redAdd(It).redIAdd(It), It = It.redISub(Pt);
        var jt = It.redSqr(), Dt = kt.redIAdd(kt);
        Dt = Dt.redIAdd(Dt), Dt = Dt.redIAdd(Dt), Dt = Dt.redIAdd(Dt);
        var Ot = Tt.redIAdd(It).redSqr().redISub(Pt).redISub(jt).redISub(Dt), Ft = St.redMul(Ot);
        Ft = Ft.redIAdd(Ft), Ft = Ft.redIAdd(Ft);
        var Lt = this.x.redMul(jt).redISub(Ft);
        Lt = Lt.redIAdd(Lt), Lt = Lt.redIAdd(Lt);
        var Zt = this.y.redMul(Ot.redMul(Dt.redISub(Ot)).redISub(It.redMul(jt)));
        Zt = Zt.redIAdd(Zt), Zt = Zt.redIAdd(Zt), Zt = Zt.redIAdd(Zt);
        var Kt = this.z.redAdd(It).redSqr().redISub($t).redISub(jt);
        return this.curve.jpoint(Lt, Zt, Kt);
      }, pt.prototype.mul = function(Bt, St) {
        return Bt = new _(Bt, St), this.curve._wnafMul(this, Bt);
      }, pt.prototype.eq = function(Bt) {
        if (Bt.type === "affine") return this.eq(Bt.toJ());
        if (this === Bt) return true;
        var St = this.z.redSqr(), $t = Bt.z.redSqr();
        if (this.x.redMul($t).redISub(Bt.x.redMul(St)).cmpn(0) !== 0) return false;
        var kt = St.redMul(this.z), Tt = $t.redMul(Bt.z);
        return this.y.redMul(Tt).redISub(Bt.y.redMul(kt)).cmpn(0) === 0;
      }, pt.prototype.eqXToP = function(Bt) {
        var St = this.z.redSqr(), $t = Bt.toRed(this.curve.red).redMul(St);
        if (this.x.cmp($t) === 0) return true;
        for (var kt = Bt.clone(), Tt = this.curve.redN.redMul(St); ; ) {
          if (kt.iadd(this.curve.n), kt.cmp(this.curve.p) >= 0) return false;
          if ($t.redIAdd(Tt), this.x.cmp($t) === 0) return true;
        }
      }, pt.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, pt.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      }, short;
    }
    var mont, hasRequiredMont;
    function requireMont() {
      if (hasRequiredMont) return mont;
      hasRequiredMont = 1;
      var d = requireBn$4(), _ = requireInherits_browser(), $ = requireBase$1(), j = requireUtils$1();
      function rt(st) {
        $.call(this, "mont", st), this.a = new d(st.a, 16).toRed(this.red), this.b = new d(st.b, 16).toRed(this.red), this.i4 = new d(4).toRed(this.red).redInvm(), this.two = new d(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      _(rt, $), mont = rt, rt.prototype.validate = function(pt) {
        var Et = pt.normalize().x, Bt = Et.redSqr(), St = Bt.redMul(Et).redAdd(Bt.redMul(this.a)).redAdd(Et), $t = St.redSqrt();
        return $t.redSqr().cmp(St) === 0;
      };
      function et(st, pt, Et) {
        $.BasePoint.call(this, st, "projective"), pt === null && Et === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new d(pt, 16), this.z = new d(Et, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      return _(et, $.BasePoint), rt.prototype.decodePoint = function(pt, Et) {
        return this.point(j.toArray(pt, Et), 1);
      }, rt.prototype.point = function(pt, Et) {
        return new et(this, pt, Et);
      }, rt.prototype.pointFromJSON = function(pt) {
        return et.fromJSON(this, pt);
      }, et.prototype.precompute = function() {
      }, et.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }, et.fromJSON = function(pt, Et) {
        return new et(pt, Et[0], Et[1] || pt.one);
      }, et.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, et.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      }, et.prototype.dbl = function() {
        var pt = this.x.redAdd(this.z), Et = pt.redSqr(), Bt = this.x.redSub(this.z), St = Bt.redSqr(), $t = Et.redSub(St), kt = Et.redMul(St), Tt = $t.redMul(St.redAdd(this.curve.a24.redMul($t)));
        return this.curve.point(kt, Tt);
      }, et.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }, et.prototype.diffAdd = function(pt, Et) {
        var Bt = this.x.redAdd(this.z), St = this.x.redSub(this.z), $t = pt.x.redAdd(pt.z), kt = pt.x.redSub(pt.z), Tt = kt.redMul(Bt), Pt = $t.redMul(St), It = Et.z.redMul(Tt.redAdd(Pt).redSqr()), jt = Et.x.redMul(Tt.redISub(Pt).redSqr());
        return this.curve.point(It, jt);
      }, et.prototype.mul = function(pt) {
        for (var Et = pt.clone(), Bt = this, St = this.curve.point(null, null), $t = this, kt = []; Et.cmpn(0) !== 0; Et.iushrn(1)) kt.push(Et.andln(1));
        for (var Tt = kt.length - 1; Tt >= 0; Tt--) kt[Tt] === 0 ? (Bt = Bt.diffAdd(St, $t), St = St.dbl()) : (St = Bt.diffAdd(St, $t), Bt = Bt.dbl());
        return St;
      }, et.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, et.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, et.prototype.eq = function(pt) {
        return this.getX().cmp(pt.getX()) === 0;
      }, et.prototype.normalize = function() {
        return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
      }, et.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, mont;
    }
    var edwards, hasRequiredEdwards;
    function requireEdwards() {
      if (hasRequiredEdwards) return edwards;
      hasRequiredEdwards = 1;
      var d = requireUtils$1(), _ = requireBn$4(), $ = requireInherits_browser(), j = requireBase$1(), rt = d.assert;
      function et(pt) {
        this.twisted = (pt.a | 0) !== 1, this.mOneA = this.twisted && (pt.a | 0) === -1, this.extended = this.mOneA, j.call(this, "edwards", pt), this.a = new _(pt.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new _(pt.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new _(pt.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), rt(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (pt.c | 0) === 1;
      }
      $(et, j), edwards = et, et.prototype._mulA = function(Et) {
        return this.mOneA ? Et.redNeg() : this.a.redMul(Et);
      }, et.prototype._mulC = function(Et) {
        return this.oneC ? Et : this.c.redMul(Et);
      }, et.prototype.jpoint = function(Et, Bt, St, $t) {
        return this.point(Et, Bt, St, $t);
      }, et.prototype.pointFromX = function(Et, Bt) {
        Et = new _(Et, 16), Et.red || (Et = Et.toRed(this.red));
        var St = Et.redSqr(), $t = this.c2.redSub(this.a.redMul(St)), kt = this.one.redSub(this.c2.redMul(this.d).redMul(St)), Tt = $t.redMul(kt.redInvm()), Pt = Tt.redSqrt();
        if (Pt.redSqr().redSub(Tt).cmp(this.zero) !== 0) throw new Error("invalid point");
        var It = Pt.fromRed().isOdd();
        return (Bt && !It || !Bt && It) && (Pt = Pt.redNeg()), this.point(Et, Pt);
      }, et.prototype.pointFromY = function(Et, Bt) {
        Et = new _(Et, 16), Et.red || (Et = Et.toRed(this.red));
        var St = Et.redSqr(), $t = St.redSub(this.c2), kt = St.redMul(this.d).redMul(this.c2).redSub(this.a), Tt = $t.redMul(kt.redInvm());
        if (Tt.cmp(this.zero) === 0) {
          if (Bt) throw new Error("invalid point");
          return this.point(this.zero, Et);
        }
        var Pt = Tt.redSqrt();
        if (Pt.redSqr().redSub(Tt).cmp(this.zero) !== 0) throw new Error("invalid point");
        return Pt.fromRed().isOdd() !== Bt && (Pt = Pt.redNeg()), this.point(Pt, Et);
      }, et.prototype.validate = function(Et) {
        if (Et.isInfinity()) return true;
        Et.normalize();
        var Bt = Et.x.redSqr(), St = Et.y.redSqr(), $t = Bt.redMul(this.a).redAdd(St), kt = this.c2.redMul(this.one.redAdd(this.d.redMul(Bt).redMul(St)));
        return $t.cmp(kt) === 0;
      };
      function st(pt, Et, Bt, St, $t) {
        j.BasePoint.call(this, pt, "projective"), Et === null && Bt === null && St === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new _(Et, 16), this.y = new _(Bt, 16), this.z = St ? new _(St, 16) : this.curve.one, this.t = $t && new _($t, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      return $(st, j.BasePoint), et.prototype.pointFromJSON = function(Et) {
        return st.fromJSON(this, Et);
      }, et.prototype.point = function(Et, Bt, St, $t) {
        return new st(this, Et, Bt, St, $t);
      }, st.fromJSON = function(Et, Bt) {
        return new st(Et, Bt[0], Bt[1], Bt[2]);
      }, st.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, st.prototype.isInfinity = function() {
        return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
      }, st.prototype._extDbl = function() {
        var Et = this.x.redSqr(), Bt = this.y.redSqr(), St = this.z.redSqr();
        St = St.redIAdd(St);
        var $t = this.curve._mulA(Et), kt = this.x.redAdd(this.y).redSqr().redISub(Et).redISub(Bt), Tt = $t.redAdd(Bt), Pt = Tt.redSub(St), It = $t.redSub(Bt), jt = kt.redMul(Pt), Dt = Tt.redMul(It), Ot = kt.redMul(It), Ft = Pt.redMul(Tt);
        return this.curve.point(jt, Dt, Ft, Ot);
      }, st.prototype._projDbl = function() {
        var Et = this.x.redAdd(this.y).redSqr(), Bt = this.x.redSqr(), St = this.y.redSqr(), $t, kt, Tt, Pt, It, jt;
        if (this.curve.twisted) {
          Pt = this.curve._mulA(Bt);
          var Dt = Pt.redAdd(St);
          this.zOne ? ($t = Et.redSub(Bt).redSub(St).redMul(Dt.redSub(this.curve.two)), kt = Dt.redMul(Pt.redSub(St)), Tt = Dt.redSqr().redSub(Dt).redSub(Dt)) : (It = this.z.redSqr(), jt = Dt.redSub(It).redISub(It), $t = Et.redSub(Bt).redISub(St).redMul(jt), kt = Dt.redMul(Pt.redSub(St)), Tt = Dt.redMul(jt));
        } else Pt = Bt.redAdd(St), It = this.curve._mulC(this.z).redSqr(), jt = Pt.redSub(It).redSub(It), $t = this.curve._mulC(Et.redISub(Pt)).redMul(jt), kt = this.curve._mulC(Pt).redMul(Bt.redISub(St)), Tt = Pt.redMul(jt);
        return this.curve.point($t, kt, Tt);
      }, st.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
      }, st.prototype._extAdd = function(Et) {
        var Bt = this.y.redSub(this.x).redMul(Et.y.redSub(Et.x)), St = this.y.redAdd(this.x).redMul(Et.y.redAdd(Et.x)), $t = this.t.redMul(this.curve.dd).redMul(Et.t), kt = this.z.redMul(Et.z.redAdd(Et.z)), Tt = St.redSub(Bt), Pt = kt.redSub($t), It = kt.redAdd($t), jt = St.redAdd(Bt), Dt = Tt.redMul(Pt), Ot = It.redMul(jt), Ft = Tt.redMul(jt), Lt = Pt.redMul(It);
        return this.curve.point(Dt, Ot, Lt, Ft);
      }, st.prototype._projAdd = function(Et) {
        var Bt = this.z.redMul(Et.z), St = Bt.redSqr(), $t = this.x.redMul(Et.x), kt = this.y.redMul(Et.y), Tt = this.curve.d.redMul($t).redMul(kt), Pt = St.redSub(Tt), It = St.redAdd(Tt), jt = this.x.redAdd(this.y).redMul(Et.x.redAdd(Et.y)).redISub($t).redISub(kt), Dt = Bt.redMul(Pt).redMul(jt), Ot, Ft;
        return this.curve.twisted ? (Ot = Bt.redMul(It).redMul(kt.redSub(this.curve._mulA($t))), Ft = Pt.redMul(It)) : (Ot = Bt.redMul(It).redMul(kt.redSub($t)), Ft = this.curve._mulC(Pt).redMul(It)), this.curve.point(Dt, Ot, Ft);
      }, st.prototype.add = function(Et) {
        return this.isInfinity() ? Et : Et.isInfinity() ? this : this.curve.extended ? this._extAdd(Et) : this._projAdd(Et);
      }, st.prototype.mul = function(Et) {
        return this._hasDoubles(Et) ? this.curve._fixedNafMul(this, Et) : this.curve._wnafMul(this, Et);
      }, st.prototype.mulAdd = function(Et, Bt, St) {
        return this.curve._wnafMulAdd(1, [
          this,
          Bt
        ], [
          Et,
          St
        ], 2, false);
      }, st.prototype.jmulAdd = function(Et, Bt, St) {
        return this.curve._wnafMulAdd(1, [
          this,
          Bt
        ], [
          Et,
          St
        ], 2, true);
      }, st.prototype.normalize = function() {
        if (this.zOne) return this;
        var Et = this.z.redInvm();
        return this.x = this.x.redMul(Et), this.y = this.y.redMul(Et), this.t && (this.t = this.t.redMul(Et)), this.z = this.curve.one, this.zOne = true, this;
      }, st.prototype.neg = function() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      }, st.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, st.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }, st.prototype.eq = function(Et) {
        return this === Et || this.getX().cmp(Et.getX()) === 0 && this.getY().cmp(Et.getY()) === 0;
      }, st.prototype.eqXToP = function(Et) {
        var Bt = Et.toRed(this.curve.red).redMul(this.z);
        if (this.x.cmp(Bt) === 0) return true;
        for (var St = Et.clone(), $t = this.curve.redN.redMul(this.z); ; ) {
          if (St.iadd(this.curve.n), St.cmp(this.curve.p) >= 0) return false;
          if (Bt.redIAdd($t), this.x.cmp(Bt) === 0) return true;
        }
      }, st.prototype.toP = st.prototype.normalize, st.prototype.mixedAdd = st.prototype.add, edwards;
    }
    var hasRequiredCurve;
    function requireCurve() {
      return hasRequiredCurve || (hasRequiredCurve = 1, function(d) {
        var _ = d;
        _.base = requireBase$1(), _.short = requireShort(), _.mont = requireMont(), _.edwards = requireEdwards();
      }(curve)), curve;
    }
    var curves = {}, hash = {}, utils$3 = {}, hasRequiredUtils;
    function requireUtils() {
      if (hasRequiredUtils) return utils$3;
      hasRequiredUtils = 1;
      var d = requireMinimalisticAssert(), _ = requireInherits_browser();
      utils$3.inherits = _;
      function $(tt, nt) {
        return (tt.charCodeAt(nt) & 64512) !== 55296 || nt < 0 || nt + 1 >= tt.length ? false : (tt.charCodeAt(nt + 1) & 64512) === 56320;
      }
      function j(tt, nt) {
        if (Array.isArray(tt)) return tt.slice();
        if (!tt) return [];
        var it = [];
        if (typeof tt == "string") if (nt) {
          if (nt === "hex") for (tt = tt.replace(/[^a-z0-9]+/ig, ""), tt.length % 2 !== 0 && (tt = "0" + tt), ct = 0; ct < tt.length; ct += 2) it.push(parseInt(tt[ct] + tt[ct + 1], 16));
        } else for (var at = 0, ct = 0; ct < tt.length; ct++) {
          var Mt = tt.charCodeAt(ct);
          Mt < 128 ? it[at++] = Mt : Mt < 2048 ? (it[at++] = Mt >> 6 | 192, it[at++] = Mt & 63 | 128) : $(tt, ct) ? (Mt = 65536 + ((Mt & 1023) << 10) + (tt.charCodeAt(++ct) & 1023), it[at++] = Mt >> 18 | 240, it[at++] = Mt >> 12 & 63 | 128, it[at++] = Mt >> 6 & 63 | 128, it[at++] = Mt & 63 | 128) : (it[at++] = Mt >> 12 | 224, it[at++] = Mt >> 6 & 63 | 128, it[at++] = Mt & 63 | 128);
        }
        else for (ct = 0; ct < tt.length; ct++) it[ct] = tt[ct] | 0;
        return it;
      }
      utils$3.toArray = j;
      function rt(tt) {
        for (var nt = "", it = 0; it < tt.length; it++) nt += pt(tt[it].toString(16));
        return nt;
      }
      utils$3.toHex = rt;
      function et(tt) {
        var nt = tt >>> 24 | tt >>> 8 & 65280 | tt << 8 & 16711680 | (tt & 255) << 24;
        return nt >>> 0;
      }
      utils$3.htonl = et;
      function st(tt, nt) {
        for (var it = "", at = 0; at < tt.length; at++) {
          var ct = tt[at];
          nt === "little" && (ct = et(ct)), it += Et(ct.toString(16));
        }
        return it;
      }
      utils$3.toHex32 = st;
      function pt(tt) {
        return tt.length === 1 ? "0" + tt : tt;
      }
      utils$3.zero2 = pt;
      function Et(tt) {
        return tt.length === 7 ? "0" + tt : tt.length === 6 ? "00" + tt : tt.length === 5 ? "000" + tt : tt.length === 4 ? "0000" + tt : tt.length === 3 ? "00000" + tt : tt.length === 2 ? "000000" + tt : tt.length === 1 ? "0000000" + tt : tt;
      }
      utils$3.zero8 = Et;
      function Bt(tt, nt, it, at) {
        var ct = it - nt;
        d(ct % 4 === 0);
        for (var Mt = new Array(ct / 4), At = 0, ut = nt; At < Mt.length; At++, ut += 4) {
          var ot;
          at === "big" ? ot = tt[ut] << 24 | tt[ut + 1] << 16 | tt[ut + 2] << 8 | tt[ut + 3] : ot = tt[ut + 3] << 24 | tt[ut + 2] << 16 | tt[ut + 1] << 8 | tt[ut], Mt[At] = ot >>> 0;
        }
        return Mt;
      }
      utils$3.join32 = Bt;
      function St(tt, nt) {
        for (var it = new Array(tt.length * 4), at = 0, ct = 0; at < tt.length; at++, ct += 4) {
          var Mt = tt[at];
          nt === "big" ? (it[ct] = Mt >>> 24, it[ct + 1] = Mt >>> 16 & 255, it[ct + 2] = Mt >>> 8 & 255, it[ct + 3] = Mt & 255) : (it[ct + 3] = Mt >>> 24, it[ct + 2] = Mt >>> 16 & 255, it[ct + 1] = Mt >>> 8 & 255, it[ct] = Mt & 255);
        }
        return it;
      }
      utils$3.split32 = St;
      function $t(tt, nt) {
        return tt >>> nt | tt << 32 - nt;
      }
      utils$3.rotr32 = $t;
      function kt(tt, nt) {
        return tt << nt | tt >>> 32 - nt;
      }
      utils$3.rotl32 = kt;
      function Tt(tt, nt) {
        return tt + nt >>> 0;
      }
      utils$3.sum32 = Tt;
      function Pt(tt, nt, it) {
        return tt + nt + it >>> 0;
      }
      utils$3.sum32_3 = Pt;
      function It(tt, nt, it, at) {
        return tt + nt + it + at >>> 0;
      }
      utils$3.sum32_4 = It;
      function jt(tt, nt, it, at, ct) {
        return tt + nt + it + at + ct >>> 0;
      }
      utils$3.sum32_5 = jt;
      function Dt(tt, nt, it, at) {
        var ct = tt[nt], Mt = tt[nt + 1], At = at + Mt >>> 0, ut = (At < at ? 1 : 0) + it + ct;
        tt[nt] = ut >>> 0, tt[nt + 1] = At;
      }
      utils$3.sum64 = Dt;
      function Ot(tt, nt, it, at) {
        var ct = nt + at >>> 0, Mt = (ct < nt ? 1 : 0) + tt + it;
        return Mt >>> 0;
      }
      utils$3.sum64_hi = Ot;
      function Ft(tt, nt, it, at) {
        var ct = nt + at;
        return ct >>> 0;
      }
      utils$3.sum64_lo = Ft;
      function Lt(tt, nt, it, at, ct, Mt, At, ut) {
        var ot = 0, Ct = nt;
        Ct = Ct + at >>> 0, ot += Ct < nt ? 1 : 0, Ct = Ct + Mt >>> 0, ot += Ct < Mt ? 1 : 0, Ct = Ct + ut >>> 0, ot += Ct < ut ? 1 : 0;
        var Rt = tt + it + ct + At + ot;
        return Rt >>> 0;
      }
      utils$3.sum64_4_hi = Lt;
      function Zt(tt, nt, it, at, ct, Mt, At, ut) {
        var ot = nt + at + Mt + ut;
        return ot >>> 0;
      }
      utils$3.sum64_4_lo = Zt;
      function Kt(tt, nt, it, at, ct, Mt, At, ut, ot, Ct) {
        var Rt = 0, Nt = nt;
        Nt = Nt + at >>> 0, Rt += Nt < nt ? 1 : 0, Nt = Nt + Mt >>> 0, Rt += Nt < Mt ? 1 : 0, Nt = Nt + ut >>> 0, Rt += Nt < ut ? 1 : 0, Nt = Nt + Ct >>> 0, Rt += Nt < Ct ? 1 : 0;
        var Wt = tt + it + ct + At + ot + Rt;
        return Wt >>> 0;
      }
      utils$3.sum64_5_hi = Kt;
      function ar(tt, nt, it, at, ct, Mt, At, ut, ot, Ct) {
        var Rt = nt + at + Mt + ut + Ct;
        return Rt >>> 0;
      }
      utils$3.sum64_5_lo = ar;
      function sr(tt, nt, it) {
        var at = nt << 32 - it | tt >>> it;
        return at >>> 0;
      }
      utils$3.rotr64_hi = sr;
      function er(tt, nt, it) {
        var at = tt << 32 - it | nt >>> it;
        return at >>> 0;
      }
      utils$3.rotr64_lo = er;
      function Ut(tt, nt, it) {
        return tt >>> it;
      }
      utils$3.shr64_hi = Ut;
      function xt(tt, nt, it) {
        var at = tt << 32 - it | nt >>> it;
        return at >>> 0;
      }
      return utils$3.shr64_lo = xt, utils$3;
    }
    var common$3 = {}, hasRequiredCommon$1;
    function requireCommon$1() {
      if (hasRequiredCommon$1) return common$3;
      hasRequiredCommon$1 = 1;
      var d = requireUtils(), _ = requireMinimalisticAssert();
      function $() {
        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
      }
      return common$3.BlockHash = $, $.prototype.update = function(rt, et) {
        if (rt = d.toArray(rt, et), this.pending ? this.pending = this.pending.concat(rt) : this.pending = rt, this.pendingTotal += rt.length, this.pending.length >= this._delta8) {
          rt = this.pending;
          var st = rt.length % this._delta8;
          this.pending = rt.slice(rt.length - st, rt.length), this.pending.length === 0 && (this.pending = null), rt = d.join32(rt, 0, rt.length - st, this.endian);
          for (var pt = 0; pt < rt.length; pt += this._delta32) this._update(rt, pt, pt + this._delta32);
        }
        return this;
      }, $.prototype.digest = function(rt) {
        return this.update(this._pad()), _(this.pending === null), this._digest(rt);
      }, $.prototype._pad = function() {
        var rt = this.pendingTotal, et = this._delta8, st = et - (rt + this.padLength) % et, pt = new Array(st + this.padLength);
        pt[0] = 128;
        for (var Et = 1; Et < st; Et++) pt[Et] = 0;
        if (rt <<= 3, this.endian === "big") {
          for (var Bt = 8; Bt < this.padLength; Bt++) pt[Et++] = 0;
          pt[Et++] = 0, pt[Et++] = 0, pt[Et++] = 0, pt[Et++] = 0, pt[Et++] = rt >>> 24 & 255, pt[Et++] = rt >>> 16 & 255, pt[Et++] = rt >>> 8 & 255, pt[Et++] = rt & 255;
        } else for (pt[Et++] = rt & 255, pt[Et++] = rt >>> 8 & 255, pt[Et++] = rt >>> 16 & 255, pt[Et++] = rt >>> 24 & 255, pt[Et++] = 0, pt[Et++] = 0, pt[Et++] = 0, pt[Et++] = 0, Bt = 8; Bt < this.padLength; Bt++) pt[Et++] = 0;
        return pt;
      }, common$3;
    }
    var sha$1 = {}, common$2 = {}, hasRequiredCommon;
    function requireCommon() {
      if (hasRequiredCommon) return common$2;
      hasRequiredCommon = 1;
      var d = requireUtils(), _ = d.rotr32;
      function $(St, $t, kt, Tt) {
        if (St === 0) return j($t, kt, Tt);
        if (St === 1 || St === 3) return et($t, kt, Tt);
        if (St === 2) return rt($t, kt, Tt);
      }
      common$2.ft_1 = $;
      function j(St, $t, kt) {
        return St & $t ^ ~St & kt;
      }
      common$2.ch32 = j;
      function rt(St, $t, kt) {
        return St & $t ^ St & kt ^ $t & kt;
      }
      common$2.maj32 = rt;
      function et(St, $t, kt) {
        return St ^ $t ^ kt;
      }
      common$2.p32 = et;
      function st(St) {
        return _(St, 2) ^ _(St, 13) ^ _(St, 22);
      }
      common$2.s0_256 = st;
      function pt(St) {
        return _(St, 6) ^ _(St, 11) ^ _(St, 25);
      }
      common$2.s1_256 = pt;
      function Et(St) {
        return _(St, 7) ^ _(St, 18) ^ St >>> 3;
      }
      common$2.g0_256 = Et;
      function Bt(St) {
        return _(St, 17) ^ _(St, 19) ^ St >>> 10;
      }
      return common$2.g1_256 = Bt, common$2;
    }
    var _1, hasRequired_1;
    function require_1() {
      if (hasRequired_1) return _1;
      hasRequired_1 = 1;
      var d = requireUtils(), _ = requireCommon$1(), $ = requireCommon(), j = d.rotl32, rt = d.sum32, et = d.sum32_5, st = $.ft_1, pt = _.BlockHash, Et = [
        1518500249,
        1859775393,
        2400959708,
        3395469782
      ];
      function Bt() {
        if (!(this instanceof Bt)) return new Bt();
        pt.call(this), this.h = [
          1732584193,
          4023233417,
          2562383102,
          271733878,
          3285377520
        ], this.W = new Array(80);
      }
      return d.inherits(Bt, pt), _1 = Bt, Bt.blockSize = 512, Bt.outSize = 160, Bt.hmacStrength = 80, Bt.padLength = 64, Bt.prototype._update = function($t, kt) {
        for (var Tt = this.W, Pt = 0; Pt < 16; Pt++) Tt[Pt] = $t[kt + Pt];
        for (; Pt < Tt.length; Pt++) Tt[Pt] = j(Tt[Pt - 3] ^ Tt[Pt - 8] ^ Tt[Pt - 14] ^ Tt[Pt - 16], 1);
        var It = this.h[0], jt = this.h[1], Dt = this.h[2], Ot = this.h[3], Ft = this.h[4];
        for (Pt = 0; Pt < Tt.length; Pt++) {
          var Lt = ~~(Pt / 20), Zt = et(j(It, 5), st(Lt, jt, Dt, Ot), Ft, Tt[Pt], Et[Lt]);
          Ft = Ot, Ot = Dt, Dt = j(jt, 30), jt = It, It = Zt;
        }
        this.h[0] = rt(this.h[0], It), this.h[1] = rt(this.h[1], jt), this.h[2] = rt(this.h[2], Dt), this.h[3] = rt(this.h[3], Ot), this.h[4] = rt(this.h[4], Ft);
      }, Bt.prototype._digest = function($t) {
        return $t === "hex" ? d.toHex32(this.h, "big") : d.split32(this.h, "big");
      }, _1;
    }
    var _256, hasRequired_256;
    function require_256() {
      if (hasRequired_256) return _256;
      hasRequired_256 = 1;
      var d = requireUtils(), _ = requireCommon$1(), $ = requireCommon(), j = requireMinimalisticAssert(), rt = d.sum32, et = d.sum32_4, st = d.sum32_5, pt = $.ch32, Et = $.maj32, Bt = $.s0_256, St = $.s1_256, $t = $.g0_256, kt = $.g1_256, Tt = _.BlockHash, Pt = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
      function It() {
        if (!(this instanceof It)) return new It();
        Tt.call(this), this.h = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ], this.k = Pt, this.W = new Array(64);
      }
      return d.inherits(It, Tt), _256 = It, It.blockSize = 512, It.outSize = 256, It.hmacStrength = 192, It.padLength = 64, It.prototype._update = function(Dt, Ot) {
        for (var Ft = this.W, Lt = 0; Lt < 16; Lt++) Ft[Lt] = Dt[Ot + Lt];
        for (; Lt < Ft.length; Lt++) Ft[Lt] = et(kt(Ft[Lt - 2]), Ft[Lt - 7], $t(Ft[Lt - 15]), Ft[Lt - 16]);
        var Zt = this.h[0], Kt = this.h[1], ar = this.h[2], sr = this.h[3], er = this.h[4], Ut = this.h[5], xt = this.h[6], tt = this.h[7];
        for (j(this.k.length === Ft.length), Lt = 0; Lt < Ft.length; Lt++) {
          var nt = st(tt, St(er), pt(er, Ut, xt), this.k[Lt], Ft[Lt]), it = rt(Bt(Zt), Et(Zt, Kt, ar));
          tt = xt, xt = Ut, Ut = er, er = rt(sr, nt), sr = ar, ar = Kt, Kt = Zt, Zt = rt(nt, it);
        }
        this.h[0] = rt(this.h[0], Zt), this.h[1] = rt(this.h[1], Kt), this.h[2] = rt(this.h[2], ar), this.h[3] = rt(this.h[3], sr), this.h[4] = rt(this.h[4], er), this.h[5] = rt(this.h[5], Ut), this.h[6] = rt(this.h[6], xt), this.h[7] = rt(this.h[7], tt);
      }, It.prototype._digest = function(Dt) {
        return Dt === "hex" ? d.toHex32(this.h, "big") : d.split32(this.h, "big");
      }, _256;
    }
    var _224, hasRequired_224;
    function require_224() {
      if (hasRequired_224) return _224;
      hasRequired_224 = 1;
      var d = requireUtils(), _ = require_256();
      function $() {
        if (!(this instanceof $)) return new $();
        _.call(this), this.h = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ];
      }
      return d.inherits($, _), _224 = $, $.blockSize = 512, $.outSize = 224, $.hmacStrength = 192, $.padLength = 64, $.prototype._digest = function(rt) {
        return rt === "hex" ? d.toHex32(this.h.slice(0, 7), "big") : d.split32(this.h.slice(0, 7), "big");
      }, _224;
    }
    var _512, hasRequired_512;
    function require_512() {
      if (hasRequired_512) return _512;
      hasRequired_512 = 1;
      var d = requireUtils(), _ = requireCommon$1(), $ = requireMinimalisticAssert(), j = d.rotr64_hi, rt = d.rotr64_lo, et = d.shr64_hi, st = d.shr64_lo, pt = d.sum64, Et = d.sum64_hi, Bt = d.sum64_lo, St = d.sum64_4_hi, $t = d.sum64_4_lo, kt = d.sum64_5_hi, Tt = d.sum64_5_lo, Pt = _.BlockHash, It = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      function jt() {
        if (!(this instanceof jt)) return new jt();
        Pt.call(this), this.h = [
          1779033703,
          4089235720,
          3144134277,
          2227873595,
          1013904242,
          4271175723,
          2773480762,
          1595750129,
          1359893119,
          2917565137,
          2600822924,
          725511199,
          528734635,
          4215389547,
          1541459225,
          327033209
        ], this.k = It, this.W = new Array(160);
      }
      d.inherits(jt, Pt), _512 = jt, jt.blockSize = 1024, jt.outSize = 512, jt.hmacStrength = 192, jt.padLength = 128, jt.prototype._prepareBlock = function(it, at) {
        for (var ct = this.W, Mt = 0; Mt < 32; Mt++) ct[Mt] = it[at + Mt];
        for (; Mt < ct.length; Mt += 2) {
          var At = xt(ct[Mt - 4], ct[Mt - 3]), ut = tt(ct[Mt - 4], ct[Mt - 3]), ot = ct[Mt - 14], Ct = ct[Mt - 13], Rt = er(ct[Mt - 30], ct[Mt - 29]), Nt = Ut(ct[Mt - 30], ct[Mt - 29]), Wt = ct[Mt - 32], Xt = ct[Mt - 31];
          ct[Mt] = St(At, ut, ot, Ct, Rt, Nt, Wt, Xt), ct[Mt + 1] = $t(At, ut, ot, Ct, Rt, Nt, Wt, Xt);
        }
      }, jt.prototype._update = function(it, at) {
        this._prepareBlock(it, at);
        var ct = this.W, Mt = this.h[0], At = this.h[1], ut = this.h[2], ot = this.h[3], Ct = this.h[4], Rt = this.h[5], Nt = this.h[6], Wt = this.h[7], Xt = this.h[8], rr = this.h[9], Gt = this.h[10], Yt = this.h[11], tr = this.h[12], cr = this.h[13], ir = this.h[14], Jt = this.h[15];
        $(this.k.length === ct.length);
        for (var vr = 0; vr < ct.length; vr += 2) {
          var Br = ir, _r = Jt, $r = ar(Xt, rr), Ur = sr(Xt, rr), Sr = Dt(Xt, rr, Gt, Yt, tr), Mr = Ot(Xt, rr, Gt, Yt, tr, cr), Kr = this.k[vr], kr = this.k[vr + 1], Lr = ct[vr], Gr = ct[vr + 1], Tr = kt(Br, _r, $r, Ur, Sr, Mr, Kr, kr, Lr, Gr), yr = Tt(Br, _r, $r, Ur, Sr, Mr, Kr, kr, Lr, Gr);
          Br = Zt(Mt, At), _r = Kt(Mt, At), $r = Ft(Mt, At, ut, ot, Ct), Ur = Lt(Mt, At, ut, ot, Ct, Rt);
          var fr = Et(Br, _r, $r, Ur), dr = Bt(Br, _r, $r, Ur);
          ir = tr, Jt = cr, tr = Gt, cr = Yt, Gt = Xt, Yt = rr, Xt = Et(Nt, Wt, Tr, yr), rr = Bt(Wt, Wt, Tr, yr), Nt = Ct, Wt = Rt, Ct = ut, Rt = ot, ut = Mt, ot = At, Mt = Et(Tr, yr, fr, dr), At = Bt(Tr, yr, fr, dr);
        }
        pt(this.h, 0, Mt, At), pt(this.h, 2, ut, ot), pt(this.h, 4, Ct, Rt), pt(this.h, 6, Nt, Wt), pt(this.h, 8, Xt, rr), pt(this.h, 10, Gt, Yt), pt(this.h, 12, tr, cr), pt(this.h, 14, ir, Jt);
      }, jt.prototype._digest = function(it) {
        return it === "hex" ? d.toHex32(this.h, "big") : d.split32(this.h, "big");
      };
      function Dt(nt, it, at, ct, Mt) {
        var At = nt & at ^ ~nt & Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function Ot(nt, it, at, ct, Mt, At) {
        var ut = it & ct ^ ~it & At;
        return ut < 0 && (ut += 4294967296), ut;
      }
      function Ft(nt, it, at, ct, Mt) {
        var At = nt & at ^ nt & Mt ^ at & Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function Lt(nt, it, at, ct, Mt, At) {
        var ut = it & ct ^ it & At ^ ct & At;
        return ut < 0 && (ut += 4294967296), ut;
      }
      function Zt(nt, it) {
        var at = j(nt, it, 28), ct = j(it, nt, 2), Mt = j(it, nt, 7), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function Kt(nt, it) {
        var at = rt(nt, it, 28), ct = rt(it, nt, 2), Mt = rt(it, nt, 7), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function ar(nt, it) {
        var at = j(nt, it, 14), ct = j(nt, it, 18), Mt = j(it, nt, 9), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function sr(nt, it) {
        var at = rt(nt, it, 14), ct = rt(nt, it, 18), Mt = rt(it, nt, 9), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function er(nt, it) {
        var at = j(nt, it, 1), ct = j(nt, it, 8), Mt = et(nt, it, 7), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function Ut(nt, it) {
        var at = rt(nt, it, 1), ct = rt(nt, it, 8), Mt = st(nt, it, 7), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function xt(nt, it) {
        var at = j(nt, it, 19), ct = j(it, nt, 29), Mt = et(nt, it, 6), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      function tt(nt, it) {
        var at = rt(nt, it, 19), ct = rt(it, nt, 29), Mt = st(nt, it, 6), At = at ^ ct ^ Mt;
        return At < 0 && (At += 4294967296), At;
      }
      return _512;
    }
    var _384, hasRequired_384;
    function require_384() {
      if (hasRequired_384) return _384;
      hasRequired_384 = 1;
      var d = requireUtils(), _ = require_512();
      function $() {
        if (!(this instanceof $)) return new $();
        _.call(this), this.h = [
          3418070365,
          3238371032,
          1654270250,
          914150663,
          2438529370,
          812702999,
          355462360,
          4144912697,
          1731405415,
          4290775857,
          2394180231,
          1750603025,
          3675008525,
          1694076839,
          1203062813,
          3204075428
        ];
      }
      return d.inherits($, _), _384 = $, $.blockSize = 1024, $.outSize = 384, $.hmacStrength = 192, $.padLength = 128, $.prototype._digest = function(rt) {
        return rt === "hex" ? d.toHex32(this.h.slice(0, 12), "big") : d.split32(this.h.slice(0, 12), "big");
      }, _384;
    }
    var hasRequiredSha;
    function requireSha() {
      return hasRequiredSha || (hasRequiredSha = 1, sha$1.sha1 = require_1(), sha$1.sha224 = require_224(), sha$1.sha256 = require_256(), sha$1.sha384 = require_384(), sha$1.sha512 = require_512()), sha$1;
    }
    var ripemd = {}, hasRequiredRipemd;
    function requireRipemd() {
      if (hasRequiredRipemd) return ripemd;
      hasRequiredRipemd = 1;
      var d = requireUtils(), _ = requireCommon$1(), $ = d.rotl32, j = d.sum32, rt = d.sum32_3, et = d.sum32_4, st = _.BlockHash;
      function pt() {
        if (!(this instanceof pt)) return new pt();
        st.call(this), this.h = [
          1732584193,
          4023233417,
          2562383102,
          271733878,
          3285377520
        ], this.endian = "little";
      }
      d.inherits(pt, st), ripemd.ripemd160 = pt, pt.blockSize = 512, pt.outSize = 160, pt.hmacStrength = 192, pt.padLength = 64, pt.prototype._update = function(jt, Dt) {
        for (var Ot = this.h[0], Ft = this.h[1], Lt = this.h[2], Zt = this.h[3], Kt = this.h[4], ar = Ot, sr = Ft, er = Lt, Ut = Zt, xt = Kt, tt = 0; tt < 80; tt++) {
          var nt = j($(et(Ot, Et(tt, Ft, Lt, Zt), jt[$t[tt] + Dt], Bt(tt)), Tt[tt]), Kt);
          Ot = Kt, Kt = Zt, Zt = $(Lt, 10), Lt = Ft, Ft = nt, nt = j($(et(ar, Et(79 - tt, sr, er, Ut), jt[kt[tt] + Dt], St(tt)), Pt[tt]), xt), ar = xt, xt = Ut, Ut = $(er, 10), er = sr, sr = nt;
        }
        nt = rt(this.h[1], Lt, Ut), this.h[1] = rt(this.h[2], Zt, xt), this.h[2] = rt(this.h[3], Kt, ar), this.h[3] = rt(this.h[4], Ot, sr), this.h[4] = rt(this.h[0], Ft, er), this.h[0] = nt;
      }, pt.prototype._digest = function(jt) {
        return jt === "hex" ? d.toHex32(this.h, "little") : d.split32(this.h, "little");
      };
      function Et(It, jt, Dt, Ot) {
        return It <= 15 ? jt ^ Dt ^ Ot : It <= 31 ? jt & Dt | ~jt & Ot : It <= 47 ? (jt | ~Dt) ^ Ot : It <= 63 ? jt & Ot | Dt & ~Ot : jt ^ (Dt | ~Ot);
      }
      function Bt(It) {
        return It <= 15 ? 0 : It <= 31 ? 1518500249 : It <= 47 ? 1859775393 : It <= 63 ? 2400959708 : 2840853838;
      }
      function St(It) {
        return It <= 15 ? 1352829926 : It <= 31 ? 1548603684 : It <= 47 ? 1836072691 : It <= 63 ? 2053994217 : 0;
      }
      var $t = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ], kt = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ], Tt = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ], Pt = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
      return ripemd;
    }
    var hmac, hasRequiredHmac;
    function requireHmac() {
      if (hasRequiredHmac) return hmac;
      hasRequiredHmac = 1;
      var d = requireUtils(), _ = requireMinimalisticAssert();
      function $(j, rt, et) {
        if (!(this instanceof $)) return new $(j, rt, et);
        this.Hash = j, this.blockSize = j.blockSize / 8, this.outSize = j.outSize / 8, this.inner = null, this.outer = null, this._init(d.toArray(rt, et));
      }
      return hmac = $, $.prototype._init = function(rt) {
        rt.length > this.blockSize && (rt = new this.Hash().update(rt).digest()), _(rt.length <= this.blockSize);
        for (var et = rt.length; et < this.blockSize; et++) rt.push(0);
        for (et = 0; et < rt.length; et++) rt[et] ^= 54;
        for (this.inner = new this.Hash().update(rt), et = 0; et < rt.length; et++) rt[et] ^= 106;
        this.outer = new this.Hash().update(rt);
      }, $.prototype.update = function(rt, et) {
        return this.inner.update(rt, et), this;
      }, $.prototype.digest = function(rt) {
        return this.outer.update(this.inner.digest()), this.outer.digest(rt);
      }, hmac;
    }
    var hasRequiredHash;
    function requireHash() {
      return hasRequiredHash || (hasRequiredHash = 1, function(d) {
        var _ = d;
        _.utils = requireUtils(), _.common = requireCommon$1(), _.sha = requireSha(), _.ripemd = requireRipemd(), _.hmac = requireHmac(), _.sha1 = _.sha.sha1, _.sha256 = _.sha.sha256, _.sha224 = _.sha.sha224, _.sha384 = _.sha.sha384, _.sha512 = _.sha.sha512, _.ripemd160 = _.ripemd.ripemd160;
      }(hash)), hash;
    }
    var secp256k1, hasRequiredSecp256k1;
    function requireSecp256k1() {
      return hasRequiredSecp256k1 || (hasRequiredSecp256k1 = 1, secp256k1 = {
        doubles: {
          step: 4,
          points: [
            [
              "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
              "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
            ],
            [
              "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
              "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
            ],
            [
              "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
              "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
            ],
            [
              "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
              "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
            ],
            [
              "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
              "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
            ],
            [
              "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
              "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
            ],
            [
              "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
              "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
            ],
            [
              "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
              "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
            ],
            [
              "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
              "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
            ],
            [
              "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
              "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
            ],
            [
              "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
              "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
            ],
            [
              "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
              "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
            ],
            [
              "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
              "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
            ],
            [
              "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
              "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
            ],
            [
              "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
              "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
            ],
            [
              "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
              "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
            ],
            [
              "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
              "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
            ],
            [
              "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
              "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
            ],
            [
              "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
              "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
            ],
            [
              "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
              "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
            ],
            [
              "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
              "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
            ],
            [
              "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
              "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
            ],
            [
              "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
              "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
            ],
            [
              "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
              "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
            ],
            [
              "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
              "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
            ],
            [
              "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
              "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
            ],
            [
              "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
              "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
            ],
            [
              "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
              "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
            ],
            [
              "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
              "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
            ],
            [
              "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
              "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
            ],
            [
              "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
              "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
            ],
            [
              "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
              "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
            ],
            [
              "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
              "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
            ],
            [
              "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
              "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
            ],
            [
              "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
              "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
            ],
            [
              "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
              "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
            ],
            [
              "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
              "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
            ],
            [
              "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
              "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
            ],
            [
              "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
              "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
            ],
            [
              "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
              "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
            ],
            [
              "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
              "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
            ],
            [
              "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
              "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
            ],
            [
              "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
              "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
            ],
            [
              "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
              "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
            ],
            [
              "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
              "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
            ],
            [
              "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
              "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
            ],
            [
              "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
              "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
            ],
            [
              "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
              "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
            ],
            [
              "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
              "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
            ],
            [
              "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
              "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
            ],
            [
              "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
              "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
            ],
            [
              "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
              "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
            ],
            [
              "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
              "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
            ],
            [
              "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
              "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
            ],
            [
              "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
              "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
            ],
            [
              "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
              "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
            ],
            [
              "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
              "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
            ],
            [
              "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
              "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
            ],
            [
              "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
              "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
            ],
            [
              "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
              "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
            ],
            [
              "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
              "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
            ],
            [
              "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
              "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
            ],
            [
              "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
              "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
            ],
            [
              "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
              "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
            ],
            [
              "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
              "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
            ]
          ]
        },
        naf: {
          wnd: 7,
          points: [
            [
              "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
              "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
            ],
            [
              "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
              "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
            ],
            [
              "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
              "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
            ],
            [
              "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
              "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
            ],
            [
              "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
              "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
            ],
            [
              "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
              "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
            ],
            [
              "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
              "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
            ],
            [
              "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
              "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
            ],
            [
              "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
              "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
            ],
            [
              "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
              "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
            ],
            [
              "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
              "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
            ],
            [
              "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
              "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
            ],
            [
              "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
              "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
            ],
            [
              "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
              "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
            ],
            [
              "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
              "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
            ],
            [
              "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
              "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
            ],
            [
              "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
              "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
            ],
            [
              "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
              "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
            ],
            [
              "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
              "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
            ],
            [
              "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
              "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
            ],
            [
              "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
              "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
            ],
            [
              "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
              "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
            ],
            [
              "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
              "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
            ],
            [
              "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
              "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
            ],
            [
              "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
              "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
            ],
            [
              "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
              "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
            ],
            [
              "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
              "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
            ],
            [
              "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
              "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
            ],
            [
              "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
              "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
            ],
            [
              "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
              "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
            ],
            [
              "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
              "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
            ],
            [
              "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
              "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
            ],
            [
              "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
              "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
            ],
            [
              "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
              "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
            ],
            [
              "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
              "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
            ],
            [
              "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
              "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
            ],
            [
              "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
              "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
            ],
            [
              "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
              "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
            ],
            [
              "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
              "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
            ],
            [
              "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
              "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
            ],
            [
              "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
              "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
            ],
            [
              "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
              "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
            ],
            [
              "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
              "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
            ],
            [
              "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
              "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
            ],
            [
              "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
              "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
            ],
            [
              "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
              "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
            ],
            [
              "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
              "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
            ],
            [
              "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
              "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
            ],
            [
              "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
              "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
            ],
            [
              "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
              "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
            ],
            [
              "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
              "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
            ],
            [
              "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
              "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
            ],
            [
              "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
              "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
            ],
            [
              "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
              "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
            ],
            [
              "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
              "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
            ],
            [
              "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
              "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
            ],
            [
              "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
              "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
            ],
            [
              "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
              "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
            ],
            [
              "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
              "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
            ],
            [
              "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
              "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
            ],
            [
              "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
              "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
            ],
            [
              "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
              "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
            ],
            [
              "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
              "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
            ],
            [
              "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
              "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
            ],
            [
              "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
              "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
            ],
            [
              "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
              "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
            ],
            [
              "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
              "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
            ],
            [
              "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
              "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
            ],
            [
              "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
              "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
            ],
            [
              "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
              "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
            ],
            [
              "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
              "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
            ],
            [
              "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
              "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
            ],
            [
              "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
              "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
            ],
            [
              "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
              "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
            ],
            [
              "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
              "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
            ],
            [
              "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
              "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
            ],
            [
              "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
              "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
            ],
            [
              "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
              "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
            ],
            [
              "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
              "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
            ],
            [
              "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
              "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
            ],
            [
              "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
              "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
            ],
            [
              "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
              "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
            ],
            [
              "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
              "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
            ],
            [
              "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
              "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
            ],
            [
              "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
              "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
            ],
            [
              "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
              "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
            ],
            [
              "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
              "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
            ],
            [
              "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
              "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
            ],
            [
              "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
              "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
            ],
            [
              "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
              "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
            ],
            [
              "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
              "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
            ],
            [
              "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
              "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
            ],
            [
              "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
              "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
            ],
            [
              "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
              "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
            ],
            [
              "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
              "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
            ],
            [
              "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
              "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
            ],
            [
              "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
              "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
            ],
            [
              "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
              "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
            ],
            [
              "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
              "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
            ],
            [
              "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
              "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
            ],
            [
              "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
              "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
            ],
            [
              "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
              "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
            ],
            [
              "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
              "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
            ],
            [
              "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
              "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
            ],
            [
              "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
              "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
            ],
            [
              "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
              "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
            ],
            [
              "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
              "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
            ],
            [
              "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
              "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
            ],
            [
              "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
              "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
            ],
            [
              "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
              "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
            ],
            [
              "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
              "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
            ],
            [
              "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
              "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
            ],
            [
              "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
              "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
            ],
            [
              "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
              "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
            ],
            [
              "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
              "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
            ],
            [
              "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
              "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
            ],
            [
              "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
              "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
            ],
            [
              "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
              "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
            ],
            [
              "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
              "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
            ],
            [
              "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
              "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
            ],
            [
              "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
              "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
            ],
            [
              "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
              "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
            ],
            [
              "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
              "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
            ],
            [
              "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
              "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
            ],
            [
              "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
              "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
            ],
            [
              "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
              "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
            ],
            [
              "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
              "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
            ]
          ]
        }
      }), secp256k1;
    }
    var hasRequiredCurves;
    function requireCurves() {
      return hasRequiredCurves || (hasRequiredCurves = 1, function(d) {
        var _ = d, $ = requireHash(), j = requireCurve(), rt = requireUtils$1(), et = rt.assert;
        function st(Bt) {
          Bt.type === "short" ? this.curve = new j.short(Bt) : Bt.type === "edwards" ? this.curve = new j.edwards(Bt) : this.curve = new j.mont(Bt), this.g = this.curve.g, this.n = this.curve.n, this.hash = Bt.hash, et(this.g.validate(), "Invalid curve"), et(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
        }
        _.PresetCurve = st;
        function pt(Bt, St) {
          Object.defineProperty(_, Bt, {
            configurable: true,
            enumerable: true,
            get: function() {
              var $t = new st(St);
              return Object.defineProperty(_, Bt, {
                configurable: true,
                enumerable: true,
                value: $t
              }), $t;
            }
          });
        }
        pt("p192", {
          type: "short",
          prime: "p192",
          p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
          b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
          n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
          hash: $.sha256,
          gRed: false,
          g: [
            "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
            "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
          ]
        }), pt("p224", {
          type: "short",
          prime: "p224",
          p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
          b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
          n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
          hash: $.sha256,
          gRed: false,
          g: [
            "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
            "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
          ]
        }), pt("p256", {
          type: "short",
          prime: null,
          p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
          a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
          b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
          n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
          hash: $.sha256,
          gRed: false,
          g: [
            "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
            "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
          ]
        }), pt("p384", {
          type: "short",
          prime: null,
          p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
          a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
          b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
          n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
          hash: $.sha384,
          gRed: false,
          g: [
            "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
            "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
          ]
        }), pt("p521", {
          type: "short",
          prime: null,
          p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
          a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
          b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
          n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
          hash: $.sha512,
          gRed: false,
          g: [
            "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
            "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
          ]
        }), pt("curve25519", {
          type: "mont",
          prime: "p25519",
          p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "76d06",
          b: "1",
          n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: $.sha256,
          gRed: false,
          g: [
            "9"
          ]
        }), pt("ed25519", {
          type: "edwards",
          prime: "p25519",
          p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "-1",
          c: "1",
          d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
          n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: $.sha256,
          gRed: false,
          g: [
            "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
            "6666666666666666666666666666666666666666666666666666666666666658"
          ]
        });
        var Et;
        try {
          Et = requireSecp256k1();
        } catch {
          Et = void 0;
        }
        pt("secp256k1", {
          type: "short",
          prime: "k256",
          p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
          a: "0",
          b: "7",
          n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
          h: "1",
          hash: $.sha256,
          beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
          lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
          basis: [
            {
              a: "3086d221a7d46bcde86c90e49284eb15",
              b: "-e4437ed6010e88286f547fa90abfe4c3"
            },
            {
              a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
              b: "3086d221a7d46bcde86c90e49284eb15"
            }
          ],
          gRed: false,
          g: [
            "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
            "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
            Et
          ]
        });
      }(curves)), curves;
    }
    var hmacDrbg, hasRequiredHmacDrbg;
    function requireHmacDrbg() {
      if (hasRequiredHmacDrbg) return hmacDrbg;
      hasRequiredHmacDrbg = 1;
      var d = requireHash(), _ = requireUtils$2(), $ = requireMinimalisticAssert();
      function j(rt) {
        if (!(this instanceof j)) return new j(rt);
        this.hash = rt.hash, this.predResist = !!rt.predResist, this.outLen = this.hash.outSize, this.minEntropy = rt.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var et = _.toArray(rt.entropy, rt.entropyEnc || "hex"), st = _.toArray(rt.nonce, rt.nonceEnc || "hex"), pt = _.toArray(rt.pers, rt.persEnc || "hex");
        $(et.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(et, st, pt);
      }
      return hmacDrbg = j, j.prototype._init = function(et, st, pt) {
        var Et = et.concat(st).concat(pt);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var Bt = 0; Bt < this.V.length; Bt++) this.K[Bt] = 0, this.V[Bt] = 1;
        this._update(Et), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, j.prototype._hmac = function() {
        return new d.hmac(this.hash, this.K);
      }, j.prototype._update = function(et) {
        var st = this._hmac().update(this.V).update([
          0
        ]);
        et && (st = st.update(et)), this.K = st.digest(), this.V = this._hmac().update(this.V).digest(), et && (this.K = this._hmac().update(this.V).update([
          1
        ]).update(et).digest(), this.V = this._hmac().update(this.V).digest());
      }, j.prototype.reseed = function(et, st, pt, Et) {
        typeof st != "string" && (Et = pt, pt = st, st = null), et = _.toArray(et, st), pt = _.toArray(pt, Et), $(et.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(et.concat(pt || [])), this._reseed = 1;
      }, j.prototype.generate = function(et, st, pt, Et) {
        if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
        typeof st != "string" && (Et = pt, pt = st, st = null), pt && (pt = _.toArray(pt, Et || "hex"), this._update(pt));
        for (var Bt = []; Bt.length < et; ) this.V = this._hmac().update(this.V).digest(), Bt = Bt.concat(this.V);
        var St = Bt.slice(0, et);
        return this._update(pt), this._reseed++, _.encode(St, st);
      }, hmacDrbg;
    }
    var key$1, hasRequiredKey$1;
    function requireKey$1() {
      if (hasRequiredKey$1) return key$1;
      hasRequiredKey$1 = 1;
      var d = requireBn$4(), _ = requireUtils$1(), $ = _.assert;
      function j(rt, et) {
        this.ec = rt, this.priv = null, this.pub = null, et.priv && this._importPrivate(et.priv, et.privEnc), et.pub && this._importPublic(et.pub, et.pubEnc);
      }
      return key$1 = j, j.fromPublic = function(et, st, pt) {
        return st instanceof j ? st : new j(et, {
          pub: st,
          pubEnc: pt
        });
      }, j.fromPrivate = function(et, st, pt) {
        return st instanceof j ? st : new j(et, {
          priv: st,
          privEnc: pt
        });
      }, j.prototype.validate = function() {
        var et = this.getPublic();
        return et.isInfinity() ? {
          result: false,
          reason: "Invalid public key"
        } : et.validate() ? et.mul(this.ec.curve.n).isInfinity() ? {
          result: true,
          reason: null
        } : {
          result: false,
          reason: "Public key * N != O"
        } : {
          result: false,
          reason: "Public key is not a point"
        };
      }, j.prototype.getPublic = function(et, st) {
        return typeof et == "string" && (st = et, et = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), st ? this.pub.encode(st, et) : this.pub;
      }, j.prototype.getPrivate = function(et) {
        return et === "hex" ? this.priv.toString(16, 2) : this.priv;
      }, j.prototype._importPrivate = function(et, st) {
        this.priv = new d(et, st || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, j.prototype._importPublic = function(et, st) {
        if (et.x || et.y) {
          this.ec.curve.type === "mont" ? $(et.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && $(et.x && et.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(et.x, et.y);
          return;
        }
        this.pub = this.ec.curve.decodePoint(et, st);
      }, j.prototype.derive = function(et) {
        return et.validate() || $(et.validate(), "public point not validated"), et.mul(this.priv).getX();
      }, j.prototype.sign = function(et, st, pt) {
        return this.ec.sign(et, this, st, pt);
      }, j.prototype.verify = function(et, st, pt) {
        return this.ec.verify(et, st, this, void 0, pt);
      }, j.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      }, key$1;
    }
    var signature$1, hasRequiredSignature$1;
    function requireSignature$1() {
      if (hasRequiredSignature$1) return signature$1;
      hasRequiredSignature$1 = 1;
      var d = requireBn$4(), _ = requireUtils$1(), $ = _.assert;
      function j(Et, Bt) {
        if (Et instanceof j) return Et;
        this._importDER(Et, Bt) || ($(Et.r && Et.s, "Signature without r or s"), this.r = new d(Et.r, 16), this.s = new d(Et.s, 16), Et.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = Et.recoveryParam);
      }
      signature$1 = j;
      function rt() {
        this.place = 0;
      }
      function et(Et, Bt) {
        var St = Et[Bt.place++];
        if (!(St & 128)) return St;
        var $t = St & 15;
        if ($t === 0 || $t > 4 || Et[Bt.place] === 0) return false;
        for (var kt = 0, Tt = 0, Pt = Bt.place; Tt < $t; Tt++, Pt++) kt <<= 8, kt |= Et[Pt], kt >>>= 0;
        return kt <= 127 ? false : (Bt.place = Pt, kt);
      }
      function st(Et) {
        for (var Bt = 0, St = Et.length - 1; !Et[Bt] && !(Et[Bt + 1] & 128) && Bt < St; ) Bt++;
        return Bt === 0 ? Et : Et.slice(Bt);
      }
      j.prototype._importDER = function(Bt, St) {
        Bt = _.toArray(Bt, St);
        var $t = new rt();
        if (Bt[$t.place++] !== 48) return false;
        var kt = et(Bt, $t);
        if (kt === false || kt + $t.place !== Bt.length || Bt[$t.place++] !== 2) return false;
        var Tt = et(Bt, $t);
        if (Tt === false || Bt[$t.place] & 128) return false;
        var Pt = Bt.slice($t.place, Tt + $t.place);
        if ($t.place += Tt, Bt[$t.place++] !== 2) return false;
        var It = et(Bt, $t);
        if (It === false || Bt.length !== It + $t.place || Bt[$t.place] & 128) return false;
        var jt = Bt.slice($t.place, It + $t.place);
        if (Pt[0] === 0) if (Pt[1] & 128) Pt = Pt.slice(1);
        else return false;
        if (jt[0] === 0) if (jt[1] & 128) jt = jt.slice(1);
        else return false;
        return this.r = new d(Pt), this.s = new d(jt), this.recoveryParam = null, true;
      };
      function pt(Et, Bt) {
        if (Bt < 128) {
          Et.push(Bt);
          return;
        }
        var St = 1 + (Math.log(Bt) / Math.LN2 >>> 3);
        for (Et.push(St | 128); --St; ) Et.push(Bt >>> (St << 3) & 255);
        Et.push(Bt);
      }
      return j.prototype.toDER = function(Bt) {
        var St = this.r.toArray(), $t = this.s.toArray();
        for (St[0] & 128 && (St = [
          0
        ].concat(St)), $t[0] & 128 && ($t = [
          0
        ].concat($t)), St = st(St), $t = st($t); !$t[0] && !($t[1] & 128); ) $t = $t.slice(1);
        var kt = [
          2
        ];
        pt(kt, St.length), kt = kt.concat(St), kt.push(2), pt(kt, $t.length);
        var Tt = kt.concat($t), Pt = [
          48
        ];
        return pt(Pt, Tt.length), Pt = Pt.concat(Tt), _.encode(Pt, Bt);
      }, signature$1;
    }
    var ec, hasRequiredEc;
    function requireEc() {
      if (hasRequiredEc) return ec;
      hasRequiredEc = 1;
      var d = requireBn$4(), _ = requireHmacDrbg(), $ = requireUtils$1(), j = requireCurves(), rt = requireBrorand(), et = $.assert, st = requireKey$1(), pt = requireSignature$1();
      function Et(Bt) {
        if (!(this instanceof Et)) return new Et(Bt);
        typeof Bt == "string" && (et(Object.prototype.hasOwnProperty.call(j, Bt), "Unknown curve " + Bt), Bt = j[Bt]), Bt instanceof j.PresetCurve && (Bt = {
          curve: Bt
        }), this.curve = Bt.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = Bt.curve.g, this.g.precompute(Bt.curve.n.bitLength() + 1), this.hash = Bt.hash || Bt.curve.hash;
      }
      return ec = Et, Et.prototype.keyPair = function(St) {
        return new st(this, St);
      }, Et.prototype.keyFromPrivate = function(St, $t) {
        return st.fromPrivate(this, St, $t);
      }, Et.prototype.keyFromPublic = function(St, $t) {
        return st.fromPublic(this, St, $t);
      }, Et.prototype.genKeyPair = function(St) {
        St || (St = {});
        for (var $t = new _({
          hash: this.hash,
          pers: St.pers,
          persEnc: St.persEnc || "utf8",
          entropy: St.entropy || rt(this.hash.hmacStrength),
          entropyEnc: St.entropy && St.entropyEnc || "utf8",
          nonce: this.n.toArray()
        }), kt = this.n.byteLength(), Tt = this.n.sub(new d(2)); ; ) {
          var Pt = new d($t.generate(kt));
          if (!(Pt.cmp(Tt) > 0)) return Pt.iaddn(1), this.keyFromPrivate(Pt);
        }
      }, Et.prototype._truncateToN = function(St, $t, kt) {
        var Tt;
        if (d.isBN(St) || typeof St == "number") St = new d(St, 16), Tt = St.byteLength();
        else if (typeof St == "object") Tt = St.length, St = new d(St, 16);
        else {
          var Pt = St.toString();
          Tt = Pt.length + 1 >>> 1, St = new d(Pt, 16);
        }
        typeof kt != "number" && (kt = Tt * 8);
        var It = kt - this.n.bitLength();
        return It > 0 && (St = St.ushrn(It)), !$t && St.cmp(this.n) >= 0 ? St.sub(this.n) : St;
      }, Et.prototype.sign = function(St, $t, kt, Tt) {
        if (typeof kt == "object" && (Tt = kt, kt = null), Tt || (Tt = {}), typeof St != "string" && typeof St != "number" && !d.isBN(St)) {
          et(typeof St == "object" && St && typeof St.length == "number", "Expected message to be an array-like, a hex string, or a BN instance"), et(St.length >>> 0 === St.length);
          for (var Pt = 0; Pt < St.length; Pt++) et((St[Pt] & 255) === St[Pt]);
        }
        $t = this.keyFromPrivate($t, kt), St = this._truncateToN(St, false, Tt.msgBitLength), et(!St.isNeg(), "Can not sign a negative message");
        var It = this.n.byteLength(), jt = $t.getPrivate().toArray("be", It), Dt = St.toArray("be", It);
        et(new d(Dt).eq(St), "Can not sign message");
        for (var Ot = new _({
          hash: this.hash,
          entropy: jt,
          nonce: Dt,
          pers: Tt.pers,
          persEnc: Tt.persEnc || "utf8"
        }), Ft = this.n.sub(new d(1)), Lt = 0; ; Lt++) {
          var Zt = Tt.k ? Tt.k(Lt) : new d(Ot.generate(this.n.byteLength()));
          if (Zt = this._truncateToN(Zt, true), !(Zt.cmpn(1) <= 0 || Zt.cmp(Ft) >= 0)) {
            var Kt = this.g.mul(Zt);
            if (!Kt.isInfinity()) {
              var ar = Kt.getX(), sr = ar.umod(this.n);
              if (sr.cmpn(0) !== 0) {
                var er = Zt.invm(this.n).mul(sr.mul($t.getPrivate()).iadd(St));
                if (er = er.umod(this.n), er.cmpn(0) !== 0) {
                  var Ut = (Kt.getY().isOdd() ? 1 : 0) | (ar.cmp(sr) !== 0 ? 2 : 0);
                  return Tt.canonical && er.cmp(this.nh) > 0 && (er = this.n.sub(er), Ut ^= 1), new pt({
                    r: sr,
                    s: er,
                    recoveryParam: Ut
                  });
                }
              }
            }
          }
        }
      }, Et.prototype.verify = function(St, $t, kt, Tt, Pt) {
        Pt || (Pt = {}), St = this._truncateToN(St, false, Pt.msgBitLength), kt = this.keyFromPublic(kt, Tt), $t = new pt($t, "hex");
        var It = $t.r, jt = $t.s;
        if (It.cmpn(1) < 0 || It.cmp(this.n) >= 0 || jt.cmpn(1) < 0 || jt.cmp(this.n) >= 0) return false;
        var Dt = jt.invm(this.n), Ot = Dt.mul(St).umod(this.n), Ft = Dt.mul(It).umod(this.n), Lt;
        return this.curve._maxwellTrick ? (Lt = this.g.jmulAdd(Ot, kt.getPublic(), Ft), Lt.isInfinity() ? false : Lt.eqXToP(It)) : (Lt = this.g.mulAdd(Ot, kt.getPublic(), Ft), Lt.isInfinity() ? false : Lt.getX().umod(this.n).cmp(It) === 0);
      }, Et.prototype.recoverPubKey = function(Bt, St, $t, kt) {
        et((3 & $t) === $t, "The recovery param is more than two bits"), St = new pt(St, kt);
        var Tt = this.n, Pt = new d(Bt), It = St.r, jt = St.s, Dt = $t & 1, Ot = $t >> 1;
        if (It.cmp(this.curve.p.umod(this.curve.n)) >= 0 && Ot) throw new Error("Unable to find sencond key candinate");
        Ot ? It = this.curve.pointFromX(It.add(this.curve.n), Dt) : It = this.curve.pointFromX(It, Dt);
        var Ft = St.r.invm(Tt), Lt = Tt.sub(Pt).mul(Ft).umod(Tt), Zt = jt.mul(Ft).umod(Tt);
        return this.g.mulAdd(Lt, It, Zt);
      }, Et.prototype.getKeyRecoveryParam = function(Bt, St, $t, kt) {
        if (St = new pt(St, kt), St.recoveryParam !== null) return St.recoveryParam;
        for (var Tt = 0; Tt < 4; Tt++) {
          var Pt;
          try {
            Pt = this.recoverPubKey(Bt, St, Tt);
          } catch {
            continue;
          }
          if (Pt.eq($t)) return Tt;
        }
        throw new Error("Unable to find valid recovery factor");
      }, ec;
    }
    var key, hasRequiredKey;
    function requireKey() {
      if (hasRequiredKey) return key;
      hasRequiredKey = 1;
      var d = requireUtils$1(), _ = d.assert, $ = d.parseBytes, j = d.cachedProperty;
      function rt(et, st) {
        this.eddsa = et, this._secret = $(st.secret), et.isPoint(st.pub) ? this._pub = st.pub : this._pubBytes = $(st.pub);
      }
      return rt.fromPublic = function(st, pt) {
        return pt instanceof rt ? pt : new rt(st, {
          pub: pt
        });
      }, rt.fromSecret = function(st, pt) {
        return pt instanceof rt ? pt : new rt(st, {
          secret: pt
        });
      }, rt.prototype.secret = function() {
        return this._secret;
      }, j(rt, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }), j(rt, "pub", function() {
        return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
      }), j(rt, "privBytes", function() {
        var st = this.eddsa, pt = this.hash(), Et = st.encodingLength - 1, Bt = pt.slice(0, st.encodingLength);
        return Bt[0] &= 248, Bt[Et] &= 127, Bt[Et] |= 64, Bt;
      }), j(rt, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }), j(rt, "hash", function() {
        return this.eddsa.hash().update(this.secret()).digest();
      }), j(rt, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }), rt.prototype.sign = function(st) {
        return _(this._secret, "KeyPair can only verify"), this.eddsa.sign(st, this);
      }, rt.prototype.verify = function(st, pt) {
        return this.eddsa.verify(st, pt, this);
      }, rt.prototype.getSecret = function(st) {
        return _(this._secret, "KeyPair is public only"), d.encode(this.secret(), st);
      }, rt.prototype.getPublic = function(st) {
        return d.encode(this.pubBytes(), st);
      }, key = rt, key;
    }
    var signature, hasRequiredSignature;
    function requireSignature() {
      if (hasRequiredSignature) return signature;
      hasRequiredSignature = 1;
      var d = requireBn$4(), _ = requireUtils$1(), $ = _.assert, j = _.cachedProperty, rt = _.parseBytes;
      function et(st, pt) {
        this.eddsa = st, typeof pt != "object" && (pt = rt(pt)), Array.isArray(pt) && ($(pt.length === st.encodingLength * 2, "Signature has invalid size"), pt = {
          R: pt.slice(0, st.encodingLength),
          S: pt.slice(st.encodingLength)
        }), $(pt.R && pt.S, "Signature without R or S"), st.isPoint(pt.R) && (this._R = pt.R), pt.S instanceof d && (this._S = pt.S), this._Rencoded = Array.isArray(pt.R) ? pt.R : pt.Rencoded, this._Sencoded = Array.isArray(pt.S) ? pt.S : pt.Sencoded;
      }
      return j(et, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }), j(et, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }), j(et, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }), j(et, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }), et.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }, et.prototype.toHex = function() {
        return _.encode(this.toBytes(), "hex").toUpperCase();
      }, signature = et, signature;
    }
    var eddsa, hasRequiredEddsa;
    function requireEddsa() {
      if (hasRequiredEddsa) return eddsa;
      hasRequiredEddsa = 1;
      var d = requireHash(), _ = requireCurves(), $ = requireUtils$1(), j = $.assert, rt = $.parseBytes, et = requireKey(), st = requireSignature();
      function pt(Et) {
        if (j(Et === "ed25519", "only tested with ed25519 so far"), !(this instanceof pt)) return new pt(Et);
        Et = _[Et].curve, this.curve = Et, this.g = Et.g, this.g.precompute(Et.n.bitLength() + 1), this.pointClass = Et.point().constructor, this.encodingLength = Math.ceil(Et.n.bitLength() / 8), this.hash = d.sha512;
      }
      return eddsa = pt, pt.prototype.sign = function(Bt, St) {
        Bt = rt(Bt);
        var $t = this.keyFromSecret(St), kt = this.hashInt($t.messagePrefix(), Bt), Tt = this.g.mul(kt), Pt = this.encodePoint(Tt), It = this.hashInt(Pt, $t.pubBytes(), Bt).mul($t.priv()), jt = kt.add(It).umod(this.curve.n);
        return this.makeSignature({
          R: Tt,
          S: jt,
          Rencoded: Pt
        });
      }, pt.prototype.verify = function(Bt, St, $t) {
        if (Bt = rt(Bt), St = this.makeSignature(St), St.S().gte(St.eddsa.curve.n) || St.S().isNeg()) return false;
        var kt = this.keyFromPublic($t), Tt = this.hashInt(St.Rencoded(), kt.pubBytes(), Bt), Pt = this.g.mul(St.S()), It = St.R().add(kt.pub().mul(Tt));
        return It.eq(Pt);
      }, pt.prototype.hashInt = function() {
        for (var Bt = this.hash(), St = 0; St < arguments.length; St++) Bt.update(arguments[St]);
        return $.intFromLE(Bt.digest()).umod(this.curve.n);
      }, pt.prototype.keyFromPublic = function(Bt) {
        return et.fromPublic(this, Bt);
      }, pt.prototype.keyFromSecret = function(Bt) {
        return et.fromSecret(this, Bt);
      }, pt.prototype.makeSignature = function(Bt) {
        return Bt instanceof st ? Bt : new st(this, Bt);
      }, pt.prototype.encodePoint = function(Bt) {
        var St = Bt.getY().toArray("le", this.encodingLength);
        return St[this.encodingLength - 1] |= Bt.getX().isOdd() ? 128 : 0, St;
      }, pt.prototype.decodePoint = function(Bt) {
        Bt = $.parseBytes(Bt);
        var St = Bt.length - 1, $t = Bt.slice(0, St).concat(Bt[St] & -129), kt = (Bt[St] & 128) !== 0, Tt = $.intFromLE($t);
        return this.curve.pointFromY(Tt, kt);
      }, pt.prototype.encodeInt = function(Bt) {
        return Bt.toArray("le", this.encodingLength);
      }, pt.prototype.decodeInt = function(Bt) {
        return $.intFromLE(Bt);
      }, pt.prototype.isPoint = function(Bt) {
        return Bt instanceof this.pointClass;
      }, eddsa;
    }
    var hasRequiredElliptic;
    function requireElliptic() {
      return hasRequiredElliptic || (hasRequiredElliptic = 1, function(d) {
        var _ = d;
        _.version = require$$0$1.version, _.utils = requireUtils$1(), _.rand = requireBrorand(), _.curve = requireCurve(), _.curves = requireCurves(), _.ec = requireEc(), _.eddsa = requireEddsa();
      }(elliptic)), elliptic;
    }
    var bn$6 = {
      exports: {}
    };
    bn$6.exports;
    var hasRequiredBn$3;
    function requireBn$3() {
      return hasRequiredBn$3 || (hasRequiredBn$3 = 1, function(d) {
        (function(_, $) {
          function j(nt, it) {
            if (!nt) throw new Error(it || "Assertion failed");
          }
          function rt(nt, it) {
            nt.super_ = it;
            var at = function() {
            };
            at.prototype = it.prototype, nt.prototype = new at(), nt.prototype.constructor = nt;
          }
          function et(nt, it, at) {
            if (et.isBN(nt)) return nt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, nt !== null && ((it === "le" || it === "be") && (at = it, it = 10), this._init(nt || 0, it || 10, at || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(it) {
            return it instanceof et ? true : it !== null && typeof it == "object" && it.constructor.wordSize === et.wordSize && Array.isArray(it.words);
          }, et.max = function(it, at) {
            return it.cmp(at) > 0 ? it : at;
          }, et.min = function(it, at) {
            return it.cmp(at) < 0 ? it : at;
          }, et.prototype._init = function(it, at, ct) {
            if (typeof it == "number") return this._initNumber(it, at, ct);
            if (typeof it == "object") return this._initArray(it, at, ct);
            at === "hex" && (at = 16), j(at === (at | 0) && at >= 2 && at <= 36), it = it.toString().replace(/\s+/g, "");
            var Mt = 0;
            it[0] === "-" && (Mt++, this.negative = 1), Mt < it.length && (at === 16 ? this._parseHex(it, Mt, ct) : (this._parseBase(it, at, Mt), ct === "le" && this._initArray(this.toArray(), at, ct)));
          }, et.prototype._initNumber = function(it, at, ct) {
            it < 0 && (this.negative = 1, it = -it), it < 67108864 ? (this.words = [
              it & 67108863
            ], this.length = 1) : it < 4503599627370496 ? (this.words = [
              it & 67108863,
              it / 67108864 & 67108863
            ], this.length = 2) : (j(it < 9007199254740992), this.words = [
              it & 67108863,
              it / 67108864 & 67108863,
              1
            ], this.length = 3), ct === "le" && this._initArray(this.toArray(), at, ct);
          }, et.prototype._initArray = function(it, at, ct) {
            if (j(typeof it.length == "number"), it.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(it.length / 3), this.words = new Array(this.length);
            for (var Mt = 0; Mt < this.length; Mt++) this.words[Mt] = 0;
            var At, ut, ot = 0;
            if (ct === "be") for (Mt = it.length - 1, At = 0; Mt >= 0; Mt -= 3) ut = it[Mt] | it[Mt - 1] << 8 | it[Mt - 2] << 16, this.words[At] |= ut << ot & 67108863, this.words[At + 1] = ut >>> 26 - ot & 67108863, ot += 24, ot >= 26 && (ot -= 26, At++);
            else if (ct === "le") for (Mt = 0, At = 0; Mt < it.length; Mt += 3) ut = it[Mt] | it[Mt + 1] << 8 | it[Mt + 2] << 16, this.words[At] |= ut << ot & 67108863, this.words[At + 1] = ut >>> 26 - ot & 67108863, ot += 24, ot >= 26 && (ot -= 26, At++);
            return this._strip();
          };
          function pt(nt, it) {
            var at = nt.charCodeAt(it);
            if (at >= 48 && at <= 57) return at - 48;
            if (at >= 65 && at <= 70) return at - 55;
            if (at >= 97 && at <= 102) return at - 87;
            j(false, "Invalid character in " + nt);
          }
          function Et(nt, it, at) {
            var ct = pt(nt, at);
            return at - 1 >= it && (ct |= pt(nt, at - 1) << 4), ct;
          }
          et.prototype._parseHex = function(it, at, ct) {
            this.length = Math.ceil((it.length - at) / 6), this.words = new Array(this.length);
            for (var Mt = 0; Mt < this.length; Mt++) this.words[Mt] = 0;
            var At = 0, ut = 0, ot;
            if (ct === "be") for (Mt = it.length - 1; Mt >= at; Mt -= 2) ot = Et(it, at, Mt) << At, this.words[ut] |= ot & 67108863, At >= 18 ? (At -= 18, ut += 1, this.words[ut] |= ot >>> 26) : At += 8;
            else {
              var Ct = it.length - at;
              for (Mt = Ct % 2 === 0 ? at + 1 : at; Mt < it.length; Mt += 2) ot = Et(it, at, Mt) << At, this.words[ut] |= ot & 67108863, At >= 18 ? (At -= 18, ut += 1, this.words[ut] |= ot >>> 26) : At += 8;
            }
            this._strip();
          };
          function Bt(nt, it, at, ct) {
            for (var Mt = 0, At = 0, ut = Math.min(nt.length, at), ot = it; ot < ut; ot++) {
              var Ct = nt.charCodeAt(ot) - 48;
              Mt *= ct, Ct >= 49 ? At = Ct - 49 + 10 : Ct >= 17 ? At = Ct - 17 + 10 : At = Ct, j(Ct >= 0 && At < ct, "Invalid character"), Mt += At;
            }
            return Mt;
          }
          et.prototype._parseBase = function(it, at, ct) {
            this.words = [
              0
            ], this.length = 1;
            for (var Mt = 0, At = 1; At <= 67108863; At *= at) Mt++;
            Mt--, At = At / at | 0;
            for (var ut = it.length - ct, ot = ut % Mt, Ct = Math.min(ut, ut - ot) + ct, Rt = 0, Nt = ct; Nt < Ct; Nt += Mt) Rt = Bt(it, Nt, Nt + Mt, at), this.imuln(At), this.words[0] + Rt < 67108864 ? this.words[0] += Rt : this._iaddn(Rt);
            if (ot !== 0) {
              var Wt = 1;
              for (Rt = Bt(it, Nt, it.length, at), Nt = 0; Nt < ot; Nt++) Wt *= at;
              this.imuln(Wt), this.words[0] + Rt < 67108864 ? this.words[0] += Rt : this._iaddn(Rt);
            }
            this._strip();
          }, et.prototype.copy = function(it) {
            it.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) it.words[at] = this.words[at];
            it.length = this.length, it.negative = this.negative, it.red = this.red;
          };
          function St(nt, it) {
            nt.words = it.words, nt.length = it.length, nt.negative = it.negative, nt.red = it.red;
          }
          if (et.prototype._move = function(it) {
            St(it, this);
          }, et.prototype.clone = function() {
            var it = new et(null);
            return this.copy(it), it;
          }, et.prototype._expand = function(it) {
            for (; this.length < it; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype._strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
            et.prototype[Symbol.for("nodejs.util.inspect.custom")] = $t;
          } catch {
            et.prototype.inspect = $t;
          }
          else et.prototype.inspect = $t;
          function $t() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          }
          var kt = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], Tt = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], Pt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(it, at) {
            it = it || 10, at = at | 0 || 1;
            var ct;
            if (it === 16 || it === "hex") {
              ct = "";
              for (var Mt = 0, At = 0, ut = 0; ut < this.length; ut++) {
                var ot = this.words[ut], Ct = ((ot << Mt | At) & 16777215).toString(16);
                At = ot >>> 24 - Mt & 16777215, Mt += 2, Mt >= 26 && (Mt -= 26, ut--), At !== 0 || ut !== this.length - 1 ? ct = kt[6 - Ct.length] + Ct + ct : ct = Ct + ct;
              }
              for (At !== 0 && (ct = At.toString(16) + ct); ct.length % at !== 0; ) ct = "0" + ct;
              return this.negative !== 0 && (ct = "-" + ct), ct;
            }
            if (it === (it | 0) && it >= 2 && it <= 36) {
              var Rt = Tt[it], Nt = Pt[it];
              ct = "";
              var Wt = this.clone();
              for (Wt.negative = 0; !Wt.isZero(); ) {
                var Xt = Wt.modrn(Nt).toString(it);
                Wt = Wt.idivn(Nt), Wt.isZero() ? ct = Xt + ct : ct = kt[Rt - Xt.length] + Xt + ct;
              }
              for (this.isZero() && (ct = "0" + ct); ct.length % at !== 0; ) ct = "0" + ct;
              return this.negative !== 0 && (ct = "-" + ct), ct;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var it = this.words[0];
            return this.length === 2 ? it += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? it += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -it : it;
          }, et.prototype.toJSON = function() {
            return this.toString(16, 2);
          }, st && (et.prototype.toBuffer = function(it, at) {
            return this.toArrayLike(st, it, at);
          }), et.prototype.toArray = function(it, at) {
            return this.toArrayLike(Array, it, at);
          };
          var It = function(it, at) {
            return it.allocUnsafe ? it.allocUnsafe(at) : new it(at);
          };
          et.prototype.toArrayLike = function(it, at, ct) {
            this._strip();
            var Mt = this.byteLength(), At = ct || Math.max(1, Mt);
            j(Mt <= At, "byte array longer than desired length"), j(At > 0, "Requested array length <= 0");
            var ut = It(it, At), ot = at === "le" ? "LE" : "BE";
            return this["_toArrayLike" + ot](ut, Mt), ut;
          }, et.prototype._toArrayLikeLE = function(it, at) {
            for (var ct = 0, Mt = 0, At = 0, ut = 0; At < this.length; At++) {
              var ot = this.words[At] << ut | Mt;
              it[ct++] = ot & 255, ct < it.length && (it[ct++] = ot >> 8 & 255), ct < it.length && (it[ct++] = ot >> 16 & 255), ut === 6 ? (ct < it.length && (it[ct++] = ot >> 24 & 255), Mt = 0, ut = 0) : (Mt = ot >>> 24, ut += 2);
            }
            if (ct < it.length) for (it[ct++] = Mt; ct < it.length; ) it[ct++] = 0;
          }, et.prototype._toArrayLikeBE = function(it, at) {
            for (var ct = it.length - 1, Mt = 0, At = 0, ut = 0; At < this.length; At++) {
              var ot = this.words[At] << ut | Mt;
              it[ct--] = ot & 255, ct >= 0 && (it[ct--] = ot >> 8 & 255), ct >= 0 && (it[ct--] = ot >> 16 & 255), ut === 6 ? (ct >= 0 && (it[ct--] = ot >> 24 & 255), Mt = 0, ut = 0) : (Mt = ot >>> 24, ut += 2);
            }
            if (ct >= 0) for (it[ct--] = Mt; ct >= 0; ) it[ct--] = 0;
          }, Math.clz32 ? et.prototype._countBits = function(it) {
            return 32 - Math.clz32(it);
          } : et.prototype._countBits = function(it) {
            var at = it, ct = 0;
            return at >= 4096 && (ct += 13, at >>>= 13), at >= 64 && (ct += 7, at >>>= 7), at >= 8 && (ct += 4, at >>>= 4), at >= 2 && (ct += 2, at >>>= 2), ct + at;
          }, et.prototype._zeroBits = function(it) {
            if (it === 0) return 26;
            var at = it, ct = 0;
            return at & 8191 || (ct += 13, at >>>= 13), at & 127 || (ct += 7, at >>>= 7), at & 15 || (ct += 4, at >>>= 4), at & 3 || (ct += 2, at >>>= 2), at & 1 || ct++, ct;
          }, et.prototype.bitLength = function() {
            var it = this.words[this.length - 1], at = this._countBits(it);
            return (this.length - 1) * 26 + at;
          };
          function jt(nt) {
            for (var it = new Array(nt.bitLength()), at = 0; at < it.length; at++) {
              var ct = at / 26 | 0, Mt = at % 26;
              it[at] = nt.words[ct] >>> Mt & 1;
            }
            return it;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var it = 0, at = 0; at < this.length; at++) {
              var ct = this._zeroBits(this.words[at]);
              if (it += ct, ct !== 26) break;
            }
            return it;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(it) {
            return this.negative !== 0 ? this.abs().inotn(it).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(it) {
            return this.testn(it - 1) ? this.notn(it).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(it) {
            for (; this.length < it.length; ) this.words[this.length++] = 0;
            for (var at = 0; at < it.length; at++) this.words[at] = this.words[at] | it.words[at];
            return this._strip();
          }, et.prototype.ior = function(it) {
            return j((this.negative | it.negative) === 0), this.iuor(it);
          }, et.prototype.or = function(it) {
            return this.length > it.length ? this.clone().ior(it) : it.clone().ior(this);
          }, et.prototype.uor = function(it) {
            return this.length > it.length ? this.clone().iuor(it) : it.clone().iuor(this);
          }, et.prototype.iuand = function(it) {
            var at;
            this.length > it.length ? at = it : at = this;
            for (var ct = 0; ct < at.length; ct++) this.words[ct] = this.words[ct] & it.words[ct];
            return this.length = at.length, this._strip();
          }, et.prototype.iand = function(it) {
            return j((this.negative | it.negative) === 0), this.iuand(it);
          }, et.prototype.and = function(it) {
            return this.length > it.length ? this.clone().iand(it) : it.clone().iand(this);
          }, et.prototype.uand = function(it) {
            return this.length > it.length ? this.clone().iuand(it) : it.clone().iuand(this);
          }, et.prototype.iuxor = function(it) {
            var at, ct;
            this.length > it.length ? (at = this, ct = it) : (at = it, ct = this);
            for (var Mt = 0; Mt < ct.length; Mt++) this.words[Mt] = at.words[Mt] ^ ct.words[Mt];
            if (this !== at) for (; Mt < at.length; Mt++) this.words[Mt] = at.words[Mt];
            return this.length = at.length, this._strip();
          }, et.prototype.ixor = function(it) {
            return j((this.negative | it.negative) === 0), this.iuxor(it);
          }, et.prototype.xor = function(it) {
            return this.length > it.length ? this.clone().ixor(it) : it.clone().ixor(this);
          }, et.prototype.uxor = function(it) {
            return this.length > it.length ? this.clone().iuxor(it) : it.clone().iuxor(this);
          }, et.prototype.inotn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = Math.ceil(it / 26) | 0, ct = it % 26;
            this._expand(at), ct > 0 && at--;
            for (var Mt = 0; Mt < at; Mt++) this.words[Mt] = ~this.words[Mt] & 67108863;
            return ct > 0 && (this.words[Mt] = ~this.words[Mt] & 67108863 >> 26 - ct), this._strip();
          }, et.prototype.notn = function(it) {
            return this.clone().inotn(it);
          }, et.prototype.setn = function(it, at) {
            j(typeof it == "number" && it >= 0);
            var ct = it / 26 | 0, Mt = it % 26;
            return this._expand(ct + 1), at ? this.words[ct] = this.words[ct] | 1 << Mt : this.words[ct] = this.words[ct] & ~(1 << Mt), this._strip();
          }, et.prototype.iadd = function(it) {
            var at;
            if (this.negative !== 0 && it.negative === 0) return this.negative = 0, at = this.isub(it), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && it.negative !== 0) return it.negative = 0, at = this.isub(it), it.negative = 1, at._normSign();
            var ct, Mt;
            this.length > it.length ? (ct = this, Mt = it) : (ct = it, Mt = this);
            for (var At = 0, ut = 0; ut < Mt.length; ut++) at = (ct.words[ut] | 0) + (Mt.words[ut] | 0) + At, this.words[ut] = at & 67108863, At = at >>> 26;
            for (; At !== 0 && ut < ct.length; ut++) at = (ct.words[ut] | 0) + At, this.words[ut] = at & 67108863, At = at >>> 26;
            if (this.length = ct.length, At !== 0) this.words[this.length] = At, this.length++;
            else if (ct !== this) for (; ut < ct.length; ut++) this.words[ut] = ct.words[ut];
            return this;
          }, et.prototype.add = function(it) {
            var at;
            return it.negative !== 0 && this.negative === 0 ? (it.negative = 0, at = this.sub(it), it.negative ^= 1, at) : it.negative === 0 && this.negative !== 0 ? (this.negative = 0, at = it.sub(this), this.negative = 1, at) : this.length > it.length ? this.clone().iadd(it) : it.clone().iadd(this);
          }, et.prototype.isub = function(it) {
            if (it.negative !== 0) {
              it.negative = 0;
              var at = this.iadd(it);
              return it.negative = 1, at._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(it), this.negative = 1, this._normSign();
            var ct = this.cmp(it);
            if (ct === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var Mt, At;
            ct > 0 ? (Mt = this, At = it) : (Mt = it, At = this);
            for (var ut = 0, ot = 0; ot < At.length; ot++) at = (Mt.words[ot] | 0) - (At.words[ot] | 0) + ut, ut = at >> 26, this.words[ot] = at & 67108863;
            for (; ut !== 0 && ot < Mt.length; ot++) at = (Mt.words[ot] | 0) + ut, ut = at >> 26, this.words[ot] = at & 67108863;
            if (ut === 0 && ot < Mt.length && Mt !== this) for (; ot < Mt.length; ot++) this.words[ot] = Mt.words[ot];
            return this.length = Math.max(this.length, ot), Mt !== this && (this.negative = 1), this._strip();
          }, et.prototype.sub = function(it) {
            return this.clone().isub(it);
          };
          function Dt(nt, it, at) {
            at.negative = it.negative ^ nt.negative;
            var ct = nt.length + it.length | 0;
            at.length = ct, ct = ct - 1 | 0;
            var Mt = nt.words[0] | 0, At = it.words[0] | 0, ut = Mt * At, ot = ut & 67108863, Ct = ut / 67108864 | 0;
            at.words[0] = ot;
            for (var Rt = 1; Rt < ct; Rt++) {
              for (var Nt = Ct >>> 26, Wt = Ct & 67108863, Xt = Math.min(Rt, it.length - 1), rr = Math.max(0, Rt - nt.length + 1); rr <= Xt; rr++) {
                var Gt = Rt - rr | 0;
                Mt = nt.words[Gt] | 0, At = it.words[rr] | 0, ut = Mt * At + Wt, Nt += ut / 67108864 | 0, Wt = ut & 67108863;
              }
              at.words[Rt] = Wt | 0, Ct = Nt | 0;
            }
            return Ct !== 0 ? at.words[Rt] = Ct | 0 : at.length--, at._strip();
          }
          var Ot = function(it, at, ct) {
            var Mt = it.words, At = at.words, ut = ct.words, ot = 0, Ct, Rt, Nt, Wt = Mt[0] | 0, Xt = Wt & 8191, rr = Wt >>> 13, Gt = Mt[1] | 0, Yt = Gt & 8191, tr = Gt >>> 13, cr = Mt[2] | 0, ir = cr & 8191, Jt = cr >>> 13, vr = Mt[3] | 0, Br = vr & 8191, _r = vr >>> 13, $r = Mt[4] | 0, Ur = $r & 8191, Sr = $r >>> 13, Mr = Mt[5] | 0, Kr = Mr & 8191, kr = Mr >>> 13, Lr = Mt[6] | 0, Gr = Lr & 8191, Tr = Lr >>> 13, yr = Mt[7] | 0, fr = yr & 8191, dr = yr >>> 13, gr = Mt[8] | 0, Er = gr & 8191, zt = gr >>> 13, qt = Mt[9] | 0, Vt = qt & 8191, Qt = qt >>> 13, hr = At[0] | 0, br = hr & 8191, pr = hr >>> 13, Rr = At[1] | 0, qr = Rr & 8191, xr = Rr >>> 13, Fr = At[2] | 0, zr = Fr & 8191, Pr = Fr >>> 13, Wr = At[3] | 0, tn = Wr & 8191, Nr = Wr >>> 13, Hr = At[4] | 0, rn = Hr & 8191, jr = Hr >>> 13, Yr = At[5] | 0, nn = Yr & 8191, Or = Yr >>> 13, Xr = At[6] | 0, nr = Xr & 8191, or = Xr >>> 13, ur = At[7] | 0, Ht = ur & 8191, lr = ur >>> 13, wr = At[8] | 0, Ar = wr & 8191, Cr = wr >>> 13, Ir = At[9] | 0, Jr = Ir & 8191, Qr = Ir >>> 13;
            ct.negative = it.negative ^ at.negative, ct.length = 19, Ct = Math.imul(Xt, br), Rt = Math.imul(Xt, pr), Rt = Rt + Math.imul(rr, br) | 0, Nt = Math.imul(rr, pr);
            var Sn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, Ct = Math.imul(Yt, br), Rt = Math.imul(Yt, pr), Rt = Rt + Math.imul(tr, br) | 0, Nt = Math.imul(tr, pr), Ct = Ct + Math.imul(Xt, qr) | 0, Rt = Rt + Math.imul(Xt, xr) | 0, Rt = Rt + Math.imul(rr, qr) | 0, Nt = Nt + Math.imul(rr, xr) | 0;
            var dn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, Ct = Math.imul(ir, br), Rt = Math.imul(ir, pr), Rt = Rt + Math.imul(Jt, br) | 0, Nt = Math.imul(Jt, pr), Ct = Ct + Math.imul(Yt, qr) | 0, Rt = Rt + Math.imul(Yt, xr) | 0, Rt = Rt + Math.imul(tr, qr) | 0, Nt = Nt + Math.imul(tr, xr) | 0, Ct = Ct + Math.imul(Xt, zr) | 0, Rt = Rt + Math.imul(Xt, Pr) | 0, Rt = Rt + Math.imul(rr, zr) | 0, Nt = Nt + Math.imul(rr, Pr) | 0;
            var yn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, Ct = Math.imul(Br, br), Rt = Math.imul(Br, pr), Rt = Rt + Math.imul(_r, br) | 0, Nt = Math.imul(_r, pr), Ct = Ct + Math.imul(ir, qr) | 0, Rt = Rt + Math.imul(ir, xr) | 0, Rt = Rt + Math.imul(Jt, qr) | 0, Nt = Nt + Math.imul(Jt, xr) | 0, Ct = Ct + Math.imul(Yt, zr) | 0, Rt = Rt + Math.imul(Yt, Pr) | 0, Rt = Rt + Math.imul(tr, zr) | 0, Nt = Nt + Math.imul(tr, Pr) | 0, Ct = Ct + Math.imul(Xt, tn) | 0, Rt = Rt + Math.imul(Xt, Nr) | 0, Rt = Rt + Math.imul(rr, tn) | 0, Nt = Nt + Math.imul(rr, Nr) | 0;
            var wn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, Ct = Math.imul(Ur, br), Rt = Math.imul(Ur, pr), Rt = Rt + Math.imul(Sr, br) | 0, Nt = Math.imul(Sr, pr), Ct = Ct + Math.imul(Br, qr) | 0, Rt = Rt + Math.imul(Br, xr) | 0, Rt = Rt + Math.imul(_r, qr) | 0, Nt = Nt + Math.imul(_r, xr) | 0, Ct = Ct + Math.imul(ir, zr) | 0, Rt = Rt + Math.imul(ir, Pr) | 0, Rt = Rt + Math.imul(Jt, zr) | 0, Nt = Nt + Math.imul(Jt, Pr) | 0, Ct = Ct + Math.imul(Yt, tn) | 0, Rt = Rt + Math.imul(Yt, Nr) | 0, Rt = Rt + Math.imul(tr, tn) | 0, Nt = Nt + Math.imul(tr, Nr) | 0, Ct = Ct + Math.imul(Xt, rn) | 0, Rt = Rt + Math.imul(Xt, jr) | 0, Rt = Rt + Math.imul(rr, rn) | 0, Nt = Nt + Math.imul(rr, jr) | 0;
            var Mn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, Ct = Math.imul(Kr, br), Rt = Math.imul(Kr, pr), Rt = Rt + Math.imul(kr, br) | 0, Nt = Math.imul(kr, pr), Ct = Ct + Math.imul(Ur, qr) | 0, Rt = Rt + Math.imul(Ur, xr) | 0, Rt = Rt + Math.imul(Sr, qr) | 0, Nt = Nt + Math.imul(Sr, xr) | 0, Ct = Ct + Math.imul(Br, zr) | 0, Rt = Rt + Math.imul(Br, Pr) | 0, Rt = Rt + Math.imul(_r, zr) | 0, Nt = Nt + Math.imul(_r, Pr) | 0, Ct = Ct + Math.imul(ir, tn) | 0, Rt = Rt + Math.imul(ir, Nr) | 0, Rt = Rt + Math.imul(Jt, tn) | 0, Nt = Nt + Math.imul(Jt, Nr) | 0, Ct = Ct + Math.imul(Yt, rn) | 0, Rt = Rt + Math.imul(Yt, jr) | 0, Rt = Rt + Math.imul(tr, rn) | 0, Nt = Nt + Math.imul(tr, jr) | 0, Ct = Ct + Math.imul(Xt, nn) | 0, Rt = Rt + Math.imul(Xt, Or) | 0, Rt = Rt + Math.imul(rr, nn) | 0, Nt = Nt + Math.imul(rr, Or) | 0;
            var En = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, Ct = Math.imul(Gr, br), Rt = Math.imul(Gr, pr), Rt = Rt + Math.imul(Tr, br) | 0, Nt = Math.imul(Tr, pr), Ct = Ct + Math.imul(Kr, qr) | 0, Rt = Rt + Math.imul(Kr, xr) | 0, Rt = Rt + Math.imul(kr, qr) | 0, Nt = Nt + Math.imul(kr, xr) | 0, Ct = Ct + Math.imul(Ur, zr) | 0, Rt = Rt + Math.imul(Ur, Pr) | 0, Rt = Rt + Math.imul(Sr, zr) | 0, Nt = Nt + Math.imul(Sr, Pr) | 0, Ct = Ct + Math.imul(Br, tn) | 0, Rt = Rt + Math.imul(Br, Nr) | 0, Rt = Rt + Math.imul(_r, tn) | 0, Nt = Nt + Math.imul(_r, Nr) | 0, Ct = Ct + Math.imul(ir, rn) | 0, Rt = Rt + Math.imul(ir, jr) | 0, Rt = Rt + Math.imul(Jt, rn) | 0, Nt = Nt + Math.imul(Jt, jr) | 0, Ct = Ct + Math.imul(Yt, nn) | 0, Rt = Rt + Math.imul(Yt, Or) | 0, Rt = Rt + Math.imul(tr, nn) | 0, Nt = Nt + Math.imul(tr, Or) | 0, Ct = Ct + Math.imul(Xt, nr) | 0, Rt = Rt + Math.imul(Xt, or) | 0, Rt = Rt + Math.imul(rr, nr) | 0, Nt = Nt + Math.imul(rr, or) | 0;
            var xn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, Ct = Math.imul(fr, br), Rt = Math.imul(fr, pr), Rt = Rt + Math.imul(dr, br) | 0, Nt = Math.imul(dr, pr), Ct = Ct + Math.imul(Gr, qr) | 0, Rt = Rt + Math.imul(Gr, xr) | 0, Rt = Rt + Math.imul(Tr, qr) | 0, Nt = Nt + Math.imul(Tr, xr) | 0, Ct = Ct + Math.imul(Kr, zr) | 0, Rt = Rt + Math.imul(Kr, Pr) | 0, Rt = Rt + Math.imul(kr, zr) | 0, Nt = Nt + Math.imul(kr, Pr) | 0, Ct = Ct + Math.imul(Ur, tn) | 0, Rt = Rt + Math.imul(Ur, Nr) | 0, Rt = Rt + Math.imul(Sr, tn) | 0, Nt = Nt + Math.imul(Sr, Nr) | 0, Ct = Ct + Math.imul(Br, rn) | 0, Rt = Rt + Math.imul(Br, jr) | 0, Rt = Rt + Math.imul(_r, rn) | 0, Nt = Nt + Math.imul(_r, jr) | 0, Ct = Ct + Math.imul(ir, nn) | 0, Rt = Rt + Math.imul(ir, Or) | 0, Rt = Rt + Math.imul(Jt, nn) | 0, Nt = Nt + Math.imul(Jt, Or) | 0, Ct = Ct + Math.imul(Yt, nr) | 0, Rt = Rt + Math.imul(Yt, or) | 0, Rt = Rt + Math.imul(tr, nr) | 0, Nt = Nt + Math.imul(tr, or) | 0, Ct = Ct + Math.imul(Xt, Ht) | 0, Rt = Rt + Math.imul(Xt, lr) | 0, Rt = Rt + Math.imul(rr, Ht) | 0, Nt = Nt + Math.imul(rr, lr) | 0;
            var Cn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, Ct = Math.imul(Er, br), Rt = Math.imul(Er, pr), Rt = Rt + Math.imul(zt, br) | 0, Nt = Math.imul(zt, pr), Ct = Ct + Math.imul(fr, qr) | 0, Rt = Rt + Math.imul(fr, xr) | 0, Rt = Rt + Math.imul(dr, qr) | 0, Nt = Nt + Math.imul(dr, xr) | 0, Ct = Ct + Math.imul(Gr, zr) | 0, Rt = Rt + Math.imul(Gr, Pr) | 0, Rt = Rt + Math.imul(Tr, zr) | 0, Nt = Nt + Math.imul(Tr, Pr) | 0, Ct = Ct + Math.imul(Kr, tn) | 0, Rt = Rt + Math.imul(Kr, Nr) | 0, Rt = Rt + Math.imul(kr, tn) | 0, Nt = Nt + Math.imul(kr, Nr) | 0, Ct = Ct + Math.imul(Ur, rn) | 0, Rt = Rt + Math.imul(Ur, jr) | 0, Rt = Rt + Math.imul(Sr, rn) | 0, Nt = Nt + Math.imul(Sr, jr) | 0, Ct = Ct + Math.imul(Br, nn) | 0, Rt = Rt + Math.imul(Br, Or) | 0, Rt = Rt + Math.imul(_r, nn) | 0, Nt = Nt + Math.imul(_r, Or) | 0, Ct = Ct + Math.imul(ir, nr) | 0, Rt = Rt + Math.imul(ir, or) | 0, Rt = Rt + Math.imul(Jt, nr) | 0, Nt = Nt + Math.imul(Jt, or) | 0, Ct = Ct + Math.imul(Yt, Ht) | 0, Rt = Rt + Math.imul(Yt, lr) | 0, Rt = Rt + Math.imul(tr, Ht) | 0, Nt = Nt + Math.imul(tr, lr) | 0, Ct = Ct + Math.imul(Xt, Ar) | 0, Rt = Rt + Math.imul(Xt, Cr) | 0, Rt = Rt + Math.imul(rr, Ar) | 0, Nt = Nt + Math.imul(rr, Cr) | 0;
            var _n = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, Ct = Math.imul(Vt, br), Rt = Math.imul(Vt, pr), Rt = Rt + Math.imul(Qt, br) | 0, Nt = Math.imul(Qt, pr), Ct = Ct + Math.imul(Er, qr) | 0, Rt = Rt + Math.imul(Er, xr) | 0, Rt = Rt + Math.imul(zt, qr) | 0, Nt = Nt + Math.imul(zt, xr) | 0, Ct = Ct + Math.imul(fr, zr) | 0, Rt = Rt + Math.imul(fr, Pr) | 0, Rt = Rt + Math.imul(dr, zr) | 0, Nt = Nt + Math.imul(dr, Pr) | 0, Ct = Ct + Math.imul(Gr, tn) | 0, Rt = Rt + Math.imul(Gr, Nr) | 0, Rt = Rt + Math.imul(Tr, tn) | 0, Nt = Nt + Math.imul(Tr, Nr) | 0, Ct = Ct + Math.imul(Kr, rn) | 0, Rt = Rt + Math.imul(Kr, jr) | 0, Rt = Rt + Math.imul(kr, rn) | 0, Nt = Nt + Math.imul(kr, jr) | 0, Ct = Ct + Math.imul(Ur, nn) | 0, Rt = Rt + Math.imul(Ur, Or) | 0, Rt = Rt + Math.imul(Sr, nn) | 0, Nt = Nt + Math.imul(Sr, Or) | 0, Ct = Ct + Math.imul(Br, nr) | 0, Rt = Rt + Math.imul(Br, or) | 0, Rt = Rt + Math.imul(_r, nr) | 0, Nt = Nt + Math.imul(_r, or) | 0, Ct = Ct + Math.imul(ir, Ht) | 0, Rt = Rt + Math.imul(ir, lr) | 0, Rt = Rt + Math.imul(Jt, Ht) | 0, Nt = Nt + Math.imul(Jt, lr) | 0, Ct = Ct + Math.imul(Yt, Ar) | 0, Rt = Rt + Math.imul(Yt, Cr) | 0, Rt = Rt + Math.imul(tr, Ar) | 0, Nt = Nt + Math.imul(tr, Cr) | 0, Ct = Ct + Math.imul(Xt, Jr) | 0, Rt = Rt + Math.imul(Xt, Qr) | 0, Rt = Rt + Math.imul(rr, Jr) | 0, Nt = Nt + Math.imul(rr, Qr) | 0;
            var hn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, Ct = Math.imul(Vt, qr), Rt = Math.imul(Vt, xr), Rt = Rt + Math.imul(Qt, qr) | 0, Nt = Math.imul(Qt, xr), Ct = Ct + Math.imul(Er, zr) | 0, Rt = Rt + Math.imul(Er, Pr) | 0, Rt = Rt + Math.imul(zt, zr) | 0, Nt = Nt + Math.imul(zt, Pr) | 0, Ct = Ct + Math.imul(fr, tn) | 0, Rt = Rt + Math.imul(fr, Nr) | 0, Rt = Rt + Math.imul(dr, tn) | 0, Nt = Nt + Math.imul(dr, Nr) | 0, Ct = Ct + Math.imul(Gr, rn) | 0, Rt = Rt + Math.imul(Gr, jr) | 0, Rt = Rt + Math.imul(Tr, rn) | 0, Nt = Nt + Math.imul(Tr, jr) | 0, Ct = Ct + Math.imul(Kr, nn) | 0, Rt = Rt + Math.imul(Kr, Or) | 0, Rt = Rt + Math.imul(kr, nn) | 0, Nt = Nt + Math.imul(kr, Or) | 0, Ct = Ct + Math.imul(Ur, nr) | 0, Rt = Rt + Math.imul(Ur, or) | 0, Rt = Rt + Math.imul(Sr, nr) | 0, Nt = Nt + Math.imul(Sr, or) | 0, Ct = Ct + Math.imul(Br, Ht) | 0, Rt = Rt + Math.imul(Br, lr) | 0, Rt = Rt + Math.imul(_r, Ht) | 0, Nt = Nt + Math.imul(_r, lr) | 0, Ct = Ct + Math.imul(ir, Ar) | 0, Rt = Rt + Math.imul(ir, Cr) | 0, Rt = Rt + Math.imul(Jt, Ar) | 0, Nt = Nt + Math.imul(Jt, Cr) | 0, Ct = Ct + Math.imul(Yt, Jr) | 0, Rt = Rt + Math.imul(Yt, Qr) | 0, Rt = Rt + Math.imul(tr, Jr) | 0, Nt = Nt + Math.imul(tr, Qr) | 0;
            var gn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, Ct = Math.imul(Vt, zr), Rt = Math.imul(Vt, Pr), Rt = Rt + Math.imul(Qt, zr) | 0, Nt = Math.imul(Qt, Pr), Ct = Ct + Math.imul(Er, tn) | 0, Rt = Rt + Math.imul(Er, Nr) | 0, Rt = Rt + Math.imul(zt, tn) | 0, Nt = Nt + Math.imul(zt, Nr) | 0, Ct = Ct + Math.imul(fr, rn) | 0, Rt = Rt + Math.imul(fr, jr) | 0, Rt = Rt + Math.imul(dr, rn) | 0, Nt = Nt + Math.imul(dr, jr) | 0, Ct = Ct + Math.imul(Gr, nn) | 0, Rt = Rt + Math.imul(Gr, Or) | 0, Rt = Rt + Math.imul(Tr, nn) | 0, Nt = Nt + Math.imul(Tr, Or) | 0, Ct = Ct + Math.imul(Kr, nr) | 0, Rt = Rt + Math.imul(Kr, or) | 0, Rt = Rt + Math.imul(kr, nr) | 0, Nt = Nt + Math.imul(kr, or) | 0, Ct = Ct + Math.imul(Ur, Ht) | 0, Rt = Rt + Math.imul(Ur, lr) | 0, Rt = Rt + Math.imul(Sr, Ht) | 0, Nt = Nt + Math.imul(Sr, lr) | 0, Ct = Ct + Math.imul(Br, Ar) | 0, Rt = Rt + Math.imul(Br, Cr) | 0, Rt = Rt + Math.imul(_r, Ar) | 0, Nt = Nt + Math.imul(_r, Cr) | 0, Ct = Ct + Math.imul(ir, Jr) | 0, Rt = Rt + Math.imul(ir, Qr) | 0, Rt = Rt + Math.imul(Jt, Jr) | 0, Nt = Nt + Math.imul(Jt, Qr) | 0;
            var ln = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, Ct = Math.imul(Vt, tn), Rt = Math.imul(Vt, Nr), Rt = Rt + Math.imul(Qt, tn) | 0, Nt = Math.imul(Qt, Nr), Ct = Ct + Math.imul(Er, rn) | 0, Rt = Rt + Math.imul(Er, jr) | 0, Rt = Rt + Math.imul(zt, rn) | 0, Nt = Nt + Math.imul(zt, jr) | 0, Ct = Ct + Math.imul(fr, nn) | 0, Rt = Rt + Math.imul(fr, Or) | 0, Rt = Rt + Math.imul(dr, nn) | 0, Nt = Nt + Math.imul(dr, Or) | 0, Ct = Ct + Math.imul(Gr, nr) | 0, Rt = Rt + Math.imul(Gr, or) | 0, Rt = Rt + Math.imul(Tr, nr) | 0, Nt = Nt + Math.imul(Tr, or) | 0, Ct = Ct + Math.imul(Kr, Ht) | 0, Rt = Rt + Math.imul(Kr, lr) | 0, Rt = Rt + Math.imul(kr, Ht) | 0, Nt = Nt + Math.imul(kr, lr) | 0, Ct = Ct + Math.imul(Ur, Ar) | 0, Rt = Rt + Math.imul(Ur, Cr) | 0, Rt = Rt + Math.imul(Sr, Ar) | 0, Nt = Nt + Math.imul(Sr, Cr) | 0, Ct = Ct + Math.imul(Br, Jr) | 0, Rt = Rt + Math.imul(Br, Qr) | 0, Rt = Rt + Math.imul(_r, Jr) | 0, Nt = Nt + Math.imul(_r, Qr) | 0;
            var pn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, Ct = Math.imul(Vt, rn), Rt = Math.imul(Vt, jr), Rt = Rt + Math.imul(Qt, rn) | 0, Nt = Math.imul(Qt, jr), Ct = Ct + Math.imul(Er, nn) | 0, Rt = Rt + Math.imul(Er, Or) | 0, Rt = Rt + Math.imul(zt, nn) | 0, Nt = Nt + Math.imul(zt, Or) | 0, Ct = Ct + Math.imul(fr, nr) | 0, Rt = Rt + Math.imul(fr, or) | 0, Rt = Rt + Math.imul(dr, nr) | 0, Nt = Nt + Math.imul(dr, or) | 0, Ct = Ct + Math.imul(Gr, Ht) | 0, Rt = Rt + Math.imul(Gr, lr) | 0, Rt = Rt + Math.imul(Tr, Ht) | 0, Nt = Nt + Math.imul(Tr, lr) | 0, Ct = Ct + Math.imul(Kr, Ar) | 0, Rt = Rt + Math.imul(Kr, Cr) | 0, Rt = Rt + Math.imul(kr, Ar) | 0, Nt = Nt + Math.imul(kr, Cr) | 0, Ct = Ct + Math.imul(Ur, Jr) | 0, Rt = Rt + Math.imul(Ur, Qr) | 0, Rt = Rt + Math.imul(Sr, Jr) | 0, Nt = Nt + Math.imul(Sr, Qr) | 0;
            var mn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, Ct = Math.imul(Vt, nn), Rt = Math.imul(Vt, Or), Rt = Rt + Math.imul(Qt, nn) | 0, Nt = Math.imul(Qt, Or), Ct = Ct + Math.imul(Er, nr) | 0, Rt = Rt + Math.imul(Er, or) | 0, Rt = Rt + Math.imul(zt, nr) | 0, Nt = Nt + Math.imul(zt, or) | 0, Ct = Ct + Math.imul(fr, Ht) | 0, Rt = Rt + Math.imul(fr, lr) | 0, Rt = Rt + Math.imul(dr, Ht) | 0, Nt = Nt + Math.imul(dr, lr) | 0, Ct = Ct + Math.imul(Gr, Ar) | 0, Rt = Rt + Math.imul(Gr, Cr) | 0, Rt = Rt + Math.imul(Tr, Ar) | 0, Nt = Nt + Math.imul(Tr, Cr) | 0, Ct = Ct + Math.imul(Kr, Jr) | 0, Rt = Rt + Math.imul(Kr, Qr) | 0, Rt = Rt + Math.imul(kr, Jr) | 0, Nt = Nt + Math.imul(kr, Qr) | 0;
            var sn = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, Ct = Math.imul(Vt, nr), Rt = Math.imul(Vt, or), Rt = Rt + Math.imul(Qt, nr) | 0, Nt = Math.imul(Qt, or), Ct = Ct + Math.imul(Er, Ht) | 0, Rt = Rt + Math.imul(Er, lr) | 0, Rt = Rt + Math.imul(zt, Ht) | 0, Nt = Nt + Math.imul(zt, lr) | 0, Ct = Ct + Math.imul(fr, Ar) | 0, Rt = Rt + Math.imul(fr, Cr) | 0, Rt = Rt + Math.imul(dr, Ar) | 0, Nt = Nt + Math.imul(dr, Cr) | 0, Ct = Ct + Math.imul(Gr, Jr) | 0, Rt = Rt + Math.imul(Gr, Qr) | 0, Rt = Rt + Math.imul(Tr, Jr) | 0, Nt = Nt + Math.imul(Tr, Qr) | 0;
            var Vr = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, Ct = Math.imul(Vt, Ht), Rt = Math.imul(Vt, lr), Rt = Rt + Math.imul(Qt, Ht) | 0, Nt = Math.imul(Qt, lr), Ct = Ct + Math.imul(Er, Ar) | 0, Rt = Rt + Math.imul(Er, Cr) | 0, Rt = Rt + Math.imul(zt, Ar) | 0, Nt = Nt + Math.imul(zt, Cr) | 0, Ct = Ct + Math.imul(fr, Jr) | 0, Rt = Rt + Math.imul(fr, Qr) | 0, Rt = Rt + Math.imul(dr, Jr) | 0, Nt = Nt + Math.imul(dr, Qr) | 0;
            var Zr = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Ct = Math.imul(Vt, Ar), Rt = Math.imul(Vt, Cr), Rt = Rt + Math.imul(Qt, Ar) | 0, Nt = Math.imul(Qt, Cr), Ct = Ct + Math.imul(Er, Jr) | 0, Rt = Rt + Math.imul(Er, Qr) | 0, Rt = Rt + Math.imul(zt, Jr) | 0, Nt = Nt + Math.imul(zt, Qr) | 0;
            var un = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            ot = (Nt + (Rt >>> 13) | 0) + (un >>> 26) | 0, un &= 67108863, Ct = Math.imul(Vt, Jr), Rt = Math.imul(Vt, Qr), Rt = Rt + Math.imul(Qt, Jr) | 0, Nt = Math.imul(Qt, Qr);
            var an = (ot + Ct | 0) + ((Rt & 8191) << 13) | 0;
            return ot = (Nt + (Rt >>> 13) | 0) + (an >>> 26) | 0, an &= 67108863, ut[0] = Sn, ut[1] = dn, ut[2] = yn, ut[3] = wn, ut[4] = Mn, ut[5] = En, ut[6] = xn, ut[7] = Cn, ut[8] = _n, ut[9] = hn, ut[10] = gn, ut[11] = ln, ut[12] = pn, ut[13] = mn, ut[14] = sn, ut[15] = Vr, ut[16] = Zr, ut[17] = un, ut[18] = an, ot !== 0 && (ut[19] = ot, ct.length++), ct;
          };
          Math.imul || (Ot = Dt);
          function Ft(nt, it, at) {
            at.negative = it.negative ^ nt.negative, at.length = nt.length + it.length;
            for (var ct = 0, Mt = 0, At = 0; At < at.length - 1; At++) {
              var ut = Mt;
              Mt = 0;
              for (var ot = ct & 67108863, Ct = Math.min(At, it.length - 1), Rt = Math.max(0, At - nt.length + 1); Rt <= Ct; Rt++) {
                var Nt = At - Rt, Wt = nt.words[Nt] | 0, Xt = it.words[Rt] | 0, rr = Wt * Xt, Gt = rr & 67108863;
                ut = ut + (rr / 67108864 | 0) | 0, Gt = Gt + ot | 0, ot = Gt & 67108863, ut = ut + (Gt >>> 26) | 0, Mt += ut >>> 26, ut &= 67108863;
              }
              at.words[At] = ot, ct = ut, ut = Mt;
            }
            return ct !== 0 ? at.words[At] = ct : at.length--, at._strip();
          }
          function Lt(nt, it, at) {
            return Ft(nt, it, at);
          }
          et.prototype.mulTo = function(it, at) {
            var ct, Mt = this.length + it.length;
            return this.length === 10 && it.length === 10 ? ct = Ot(this, it, at) : Mt < 63 ? ct = Dt(this, it, at) : Mt < 1024 ? ct = Ft(this, it, at) : ct = Lt(this, it, at), ct;
          }, et.prototype.mul = function(it) {
            var at = new et(null);
            return at.words = new Array(this.length + it.length), this.mulTo(it, at);
          }, et.prototype.mulf = function(it) {
            var at = new et(null);
            return at.words = new Array(this.length + it.length), Lt(this, it, at);
          }, et.prototype.imul = function(it) {
            return this.clone().mulTo(it, this);
          }, et.prototype.imuln = function(it) {
            var at = it < 0;
            at && (it = -it), j(typeof it == "number"), j(it < 67108864);
            for (var ct = 0, Mt = 0; Mt < this.length; Mt++) {
              var At = (this.words[Mt] | 0) * it, ut = (At & 67108863) + (ct & 67108863);
              ct >>= 26, ct += At / 67108864 | 0, ct += ut >>> 26, this.words[Mt] = ut & 67108863;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), at ? this.ineg() : this;
          }, et.prototype.muln = function(it) {
            return this.clone().imuln(it);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(it) {
            var at = jt(it);
            if (at.length === 0) return new et(1);
            for (var ct = this, Mt = 0; Mt < at.length && at[Mt] === 0; Mt++, ct = ct.sqr()) ;
            if (++Mt < at.length) for (var At = ct.sqr(); Mt < at.length; Mt++, At = At.sqr()) at[Mt] !== 0 && (ct = ct.mul(At));
            return ct;
          }, et.prototype.iushln = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26, Mt = 67108863 >>> 26 - at << 26 - at, At;
            if (at !== 0) {
              var ut = 0;
              for (At = 0; At < this.length; At++) {
                var ot = this.words[At] & Mt, Ct = (this.words[At] | 0) - ot << at;
                this.words[At] = Ct | ut, ut = ot >>> 26 - at;
              }
              ut && (this.words[At] = ut, this.length++);
            }
            if (ct !== 0) {
              for (At = this.length - 1; At >= 0; At--) this.words[At + ct] = this.words[At];
              for (At = 0; At < ct; At++) this.words[At] = 0;
              this.length += ct;
            }
            return this._strip();
          }, et.prototype.ishln = function(it) {
            return j(this.negative === 0), this.iushln(it);
          }, et.prototype.iushrn = function(it, at, ct) {
            j(typeof it == "number" && it >= 0);
            var Mt;
            at ? Mt = (at - at % 26) / 26 : Mt = 0;
            var At = it % 26, ut = Math.min((it - At) / 26, this.length), ot = 67108863 ^ 67108863 >>> At << At, Ct = ct;
            if (Mt -= ut, Mt = Math.max(0, Mt), Ct) {
              for (var Rt = 0; Rt < ut; Rt++) Ct.words[Rt] = this.words[Rt];
              Ct.length = ut;
            }
            if (ut !== 0) if (this.length > ut) for (this.length -= ut, Rt = 0; Rt < this.length; Rt++) this.words[Rt] = this.words[Rt + ut];
            else this.words[0] = 0, this.length = 1;
            var Nt = 0;
            for (Rt = this.length - 1; Rt >= 0 && (Nt !== 0 || Rt >= Mt); Rt--) {
              var Wt = this.words[Rt] | 0;
              this.words[Rt] = Nt << 26 - At | Wt >>> At, Nt = Wt & ot;
            }
            return Ct && Nt !== 0 && (Ct.words[Ct.length++] = Nt), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
          }, et.prototype.ishrn = function(it, at, ct) {
            return j(this.negative === 0), this.iushrn(it, at, ct);
          }, et.prototype.shln = function(it) {
            return this.clone().ishln(it);
          }, et.prototype.ushln = function(it) {
            return this.clone().iushln(it);
          }, et.prototype.shrn = function(it) {
            return this.clone().ishrn(it);
          }, et.prototype.ushrn = function(it) {
            return this.clone().iushrn(it);
          }, et.prototype.testn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26, Mt = 1 << at;
            if (this.length <= ct) return false;
            var At = this.words[ct];
            return !!(At & Mt);
          }, et.prototype.imaskn = function(it) {
            j(typeof it == "number" && it >= 0);
            var at = it % 26, ct = (it - at) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= ct) return this;
            if (at !== 0 && ct++, this.length = Math.min(ct, this.length), at !== 0) {
              var Mt = 67108863 ^ 67108863 >>> at << at;
              this.words[this.length - 1] &= Mt;
            }
            return this._strip();
          }, et.prototype.maskn = function(it) {
            return this.clone().imaskn(it);
          }, et.prototype.iaddn = function(it) {
            return j(typeof it == "number"), j(it < 67108864), it < 0 ? this.isubn(-it) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= it ? (this.words[0] = it - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(it), this.negative = 1, this) : this._iaddn(it);
          }, et.prototype._iaddn = function(it) {
            this.words[0] += it;
            for (var at = 0; at < this.length && this.words[at] >= 67108864; at++) this.words[at] -= 67108864, at === this.length - 1 ? this.words[at + 1] = 1 : this.words[at + 1]++;
            return this.length = Math.max(this.length, at + 1), this;
          }, et.prototype.isubn = function(it) {
            if (j(typeof it == "number"), j(it < 67108864), it < 0) return this.iaddn(-it);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(it), this.negative = 1, this;
            if (this.words[0] -= it, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var at = 0; at < this.length && this.words[at] < 0; at++) this.words[at] += 67108864, this.words[at + 1] -= 1;
            return this._strip();
          }, et.prototype.addn = function(it) {
            return this.clone().iaddn(it);
          }, et.prototype.subn = function(it) {
            return this.clone().isubn(it);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(it, at, ct) {
            var Mt = it.length + ct, At;
            this._expand(Mt);
            var ut, ot = 0;
            for (At = 0; At < it.length; At++) {
              ut = (this.words[At + ct] | 0) + ot;
              var Ct = (it.words[At] | 0) * at;
              ut -= Ct & 67108863, ot = (ut >> 26) - (Ct / 67108864 | 0), this.words[At + ct] = ut & 67108863;
            }
            for (; At < this.length - ct; At++) ut = (this.words[At + ct] | 0) + ot, ot = ut >> 26, this.words[At + ct] = ut & 67108863;
            if (ot === 0) return this._strip();
            for (j(ot === -1), ot = 0, At = 0; At < this.length; At++) ut = -(this.words[At] | 0) + ot, ot = ut >> 26, this.words[At] = ut & 67108863;
            return this.negative = 1, this._strip();
          }, et.prototype._wordDiv = function(it, at) {
            var ct = this.length - it.length, Mt = this.clone(), At = it, ut = At.words[At.length - 1] | 0, ot = this._countBits(ut);
            ct = 26 - ot, ct !== 0 && (At = At.ushln(ct), Mt.iushln(ct), ut = At.words[At.length - 1] | 0);
            var Ct = Mt.length - At.length, Rt;
            if (at !== "mod") {
              Rt = new et(null), Rt.length = Ct + 1, Rt.words = new Array(Rt.length);
              for (var Nt = 0; Nt < Rt.length; Nt++) Rt.words[Nt] = 0;
            }
            var Wt = Mt.clone()._ishlnsubmul(At, 1, Ct);
            Wt.negative === 0 && (Mt = Wt, Rt && (Rt.words[Ct] = 1));
            for (var Xt = Ct - 1; Xt >= 0; Xt--) {
              var rr = (Mt.words[At.length + Xt] | 0) * 67108864 + (Mt.words[At.length + Xt - 1] | 0);
              for (rr = Math.min(rr / ut | 0, 67108863), Mt._ishlnsubmul(At, rr, Xt); Mt.negative !== 0; ) rr--, Mt.negative = 0, Mt._ishlnsubmul(At, 1, Xt), Mt.isZero() || (Mt.negative ^= 1);
              Rt && (Rt.words[Xt] = rr);
            }
            return Rt && Rt._strip(), Mt._strip(), at !== "div" && ct !== 0 && Mt.iushrn(ct), {
              div: Rt || null,
              mod: Mt
            };
          }, et.prototype.divmod = function(it, at, ct) {
            if (j(!it.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var Mt, At, ut;
            return this.negative !== 0 && it.negative === 0 ? (ut = this.neg().divmod(it, at), at !== "mod" && (Mt = ut.div.neg()), at !== "div" && (At = ut.mod.neg(), ct && At.negative !== 0 && At.iadd(it)), {
              div: Mt,
              mod: At
            }) : this.negative === 0 && it.negative !== 0 ? (ut = this.divmod(it.neg(), at), at !== "mod" && (Mt = ut.div.neg()), {
              div: Mt,
              mod: ut.mod
            }) : this.negative & it.negative ? (ut = this.neg().divmod(it.neg(), at), at !== "div" && (At = ut.mod.neg(), ct && At.negative !== 0 && At.isub(it)), {
              div: ut.div,
              mod: At
            }) : it.length > this.length || this.cmp(it) < 0 ? {
              div: new et(0),
              mod: this
            } : it.length === 1 ? at === "div" ? {
              div: this.divn(it.words[0]),
              mod: null
            } : at === "mod" ? {
              div: null,
              mod: new et(this.modrn(it.words[0]))
            } : {
              div: this.divn(it.words[0]),
              mod: new et(this.modrn(it.words[0]))
            } : this._wordDiv(it, at);
          }, et.prototype.div = function(it) {
            return this.divmod(it, "div", false).div;
          }, et.prototype.mod = function(it) {
            return this.divmod(it, "mod", false).mod;
          }, et.prototype.umod = function(it) {
            return this.divmod(it, "mod", true).mod;
          }, et.prototype.divRound = function(it) {
            var at = this.divmod(it);
            if (at.mod.isZero()) return at.div;
            var ct = at.div.negative !== 0 ? at.mod.isub(it) : at.mod, Mt = it.ushrn(1), At = it.andln(1), ut = ct.cmp(Mt);
            return ut < 0 || At === 1 && ut === 0 ? at.div : at.div.negative !== 0 ? at.div.isubn(1) : at.div.iaddn(1);
          }, et.prototype.modrn = function(it) {
            var at = it < 0;
            at && (it = -it), j(it <= 67108863);
            for (var ct = (1 << 26) % it, Mt = 0, At = this.length - 1; At >= 0; At--) Mt = (ct * Mt + (this.words[At] | 0)) % it;
            return at ? -Mt : Mt;
          }, et.prototype.modn = function(it) {
            return this.modrn(it);
          }, et.prototype.idivn = function(it) {
            var at = it < 0;
            at && (it = -it), j(it <= 67108863);
            for (var ct = 0, Mt = this.length - 1; Mt >= 0; Mt--) {
              var At = (this.words[Mt] | 0) + ct * 67108864;
              this.words[Mt] = At / it | 0, ct = At % it;
            }
            return this._strip(), at ? this.ineg() : this;
          }, et.prototype.divn = function(it) {
            return this.clone().idivn(it);
          }, et.prototype.egcd = function(it) {
            j(it.negative === 0), j(!it.isZero());
            var at = this, ct = it.clone();
            at.negative !== 0 ? at = at.umod(it) : at = at.clone();
            for (var Mt = new et(1), At = new et(0), ut = new et(0), ot = new et(1), Ct = 0; at.isEven() && ct.isEven(); ) at.iushrn(1), ct.iushrn(1), ++Ct;
            for (var Rt = ct.clone(), Nt = at.clone(); !at.isZero(); ) {
              for (var Wt = 0, Xt = 1; !(at.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (at.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(Rt), At.isub(Nt)), Mt.iushrn(1), At.iushrn(1);
              for (var rr = 0, Gt = 1; !(ct.words[0] & Gt) && rr < 26; ++rr, Gt <<= 1) ;
              if (rr > 0) for (ct.iushrn(rr); rr-- > 0; ) (ut.isOdd() || ot.isOdd()) && (ut.iadd(Rt), ot.isub(Nt)), ut.iushrn(1), ot.iushrn(1);
              at.cmp(ct) >= 0 ? (at.isub(ct), Mt.isub(ut), At.isub(ot)) : (ct.isub(at), ut.isub(Mt), ot.isub(At));
            }
            return {
              a: ut,
              b: ot,
              gcd: ct.iushln(Ct)
            };
          }, et.prototype._invmp = function(it) {
            j(it.negative === 0), j(!it.isZero());
            var at = this, ct = it.clone();
            at.negative !== 0 ? at = at.umod(it) : at = at.clone();
            for (var Mt = new et(1), At = new et(0), ut = ct.clone(); at.cmpn(1) > 0 && ct.cmpn(1) > 0; ) {
              for (var ot = 0, Ct = 1; !(at.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (at.iushrn(ot); ot-- > 0; ) Mt.isOdd() && Mt.iadd(ut), Mt.iushrn(1);
              for (var Rt = 0, Nt = 1; !(ct.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (ct.iushrn(Rt); Rt-- > 0; ) At.isOdd() && At.iadd(ut), At.iushrn(1);
              at.cmp(ct) >= 0 ? (at.isub(ct), Mt.isub(At)) : (ct.isub(at), At.isub(Mt));
            }
            var Wt;
            return at.cmpn(1) === 0 ? Wt = Mt : Wt = At, Wt.cmpn(0) < 0 && Wt.iadd(it), Wt;
          }, et.prototype.gcd = function(it) {
            if (this.isZero()) return it.abs();
            if (it.isZero()) return this.abs();
            var at = this.clone(), ct = it.clone();
            at.negative = 0, ct.negative = 0;
            for (var Mt = 0; at.isEven() && ct.isEven(); Mt++) at.iushrn(1), ct.iushrn(1);
            do {
              for (; at.isEven(); ) at.iushrn(1);
              for (; ct.isEven(); ) ct.iushrn(1);
              var At = at.cmp(ct);
              if (At < 0) {
                var ut = at;
                at = ct, ct = ut;
              } else if (At === 0 || ct.cmpn(1) === 0) break;
              at.isub(ct);
            } while (true);
            return ct.iushln(Mt);
          }, et.prototype.invm = function(it) {
            return this.egcd(it).a.umod(it);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(it) {
            return this.words[0] & it;
          }, et.prototype.bincn = function(it) {
            j(typeof it == "number");
            var at = it % 26, ct = (it - at) / 26, Mt = 1 << at;
            if (this.length <= ct) return this._expand(ct + 1), this.words[ct] |= Mt, this;
            for (var At = Mt, ut = ct; At !== 0 && ut < this.length; ut++) {
              var ot = this.words[ut] | 0;
              ot += At, At = ot >>> 26, ot &= 67108863, this.words[ut] = ot;
            }
            return At !== 0 && (this.words[ut] = At, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(it) {
            var at = it < 0;
            if (this.negative !== 0 && !at) return -1;
            if (this.negative === 0 && at) return 1;
            this._strip();
            var ct;
            if (this.length > 1) ct = 1;
            else {
              at && (it = -it), j(it <= 67108863, "Number is too big");
              var Mt = this.words[0] | 0;
              ct = Mt === it ? 0 : Mt < it ? -1 : 1;
            }
            return this.negative !== 0 ? -ct | 0 : ct;
          }, et.prototype.cmp = function(it) {
            if (this.negative !== 0 && it.negative === 0) return -1;
            if (this.negative === 0 && it.negative !== 0) return 1;
            var at = this.ucmp(it);
            return this.negative !== 0 ? -at | 0 : at;
          }, et.prototype.ucmp = function(it) {
            if (this.length > it.length) return 1;
            if (this.length < it.length) return -1;
            for (var at = 0, ct = this.length - 1; ct >= 0; ct--) {
              var Mt = this.words[ct] | 0, At = it.words[ct] | 0;
              if (Mt !== At) {
                Mt < At ? at = -1 : Mt > At && (at = 1);
                break;
              }
            }
            return at;
          }, et.prototype.gtn = function(it) {
            return this.cmpn(it) === 1;
          }, et.prototype.gt = function(it) {
            return this.cmp(it) === 1;
          }, et.prototype.gten = function(it) {
            return this.cmpn(it) >= 0;
          }, et.prototype.gte = function(it) {
            return this.cmp(it) >= 0;
          }, et.prototype.ltn = function(it) {
            return this.cmpn(it) === -1;
          }, et.prototype.lt = function(it) {
            return this.cmp(it) === -1;
          }, et.prototype.lten = function(it) {
            return this.cmpn(it) <= 0;
          }, et.prototype.lte = function(it) {
            return this.cmp(it) <= 0;
          }, et.prototype.eqn = function(it) {
            return this.cmpn(it) === 0;
          }, et.prototype.eq = function(it) {
            return this.cmp(it) === 0;
          }, et.red = function(it) {
            return new xt(it);
          }, et.prototype.toRed = function(it) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), it.convertTo(this)._forceRed(it);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(it) {
            return this.red = it, this;
          }, et.prototype.forceRed = function(it) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(it);
          }, et.prototype.redAdd = function(it) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, it);
          }, et.prototype.redIAdd = function(it) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, it);
          }, et.prototype.redSub = function(it) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, it);
          }, et.prototype.redISub = function(it) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, it);
          }, et.prototype.redShl = function(it) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, it);
          }, et.prototype.redMul = function(it) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, it), this.red.mul(this, it);
          }, et.prototype.redIMul = function(it) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, it), this.red.imul(this, it);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(it) {
            return j(this.red && !it.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, it);
          };
          var Zt = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Kt(nt, it) {
            this.name = nt, this.p = new et(it, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Kt.prototype._tmp = function() {
            var it = new et(null);
            return it.words = new Array(Math.ceil(this.n / 13)), it;
          }, Kt.prototype.ireduce = function(it) {
            var at = it, ct;
            do
              this.split(at, this.tmp), at = this.imulK(at), at = at.iadd(this.tmp), ct = at.bitLength();
            while (ct > this.n);
            var Mt = ct < this.n ? -1 : at.ucmp(this.p);
            return Mt === 0 ? (at.words[0] = 0, at.length = 1) : Mt > 0 ? at.isub(this.p) : at.strip !== void 0 ? at.strip() : at._strip(), at;
          }, Kt.prototype.split = function(it, at) {
            it.iushrn(this.n, 0, at);
          }, Kt.prototype.imulK = function(it) {
            return it.imul(this.k);
          };
          function ar() {
            Kt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(ar, Kt), ar.prototype.split = function(it, at) {
            for (var ct = 4194303, Mt = Math.min(it.length, 9), At = 0; At < Mt; At++) at.words[At] = it.words[At];
            if (at.length = Mt, it.length <= 9) {
              it.words[0] = 0, it.length = 1;
              return;
            }
            var ut = it.words[9];
            for (at.words[at.length++] = ut & ct, At = 10; At < it.length; At++) {
              var ot = it.words[At] | 0;
              it.words[At - 10] = (ot & ct) << 4 | ut >>> 22, ut = ot;
            }
            ut >>>= 22, it.words[At - 10] = ut, ut === 0 && it.length > 10 ? it.length -= 10 : it.length -= 9;
          }, ar.prototype.imulK = function(it) {
            it.words[it.length] = 0, it.words[it.length + 1] = 0, it.length += 2;
            for (var at = 0, ct = 0; ct < it.length; ct++) {
              var Mt = it.words[ct] | 0;
              at += Mt * 977, it.words[ct] = at & 67108863, at = Mt * 64 + (at / 67108864 | 0);
            }
            return it.words[it.length - 1] === 0 && (it.length--, it.words[it.length - 1] === 0 && it.length--), it;
          };
          function sr() {
            Kt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(sr, Kt);
          function er() {
            Kt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(er, Kt);
          function Ut() {
            Kt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(Ut, Kt), Ut.prototype.imulK = function(it) {
            for (var at = 0, ct = 0; ct < it.length; ct++) {
              var Mt = (it.words[ct] | 0) * 19 + at, At = Mt & 67108863;
              Mt >>>= 26, it.words[ct] = At, at = Mt;
            }
            return at !== 0 && (it.words[it.length++] = at), it;
          }, et._prime = function(it) {
            if (Zt[it]) return Zt[it];
            var at;
            if (it === "k256") at = new ar();
            else if (it === "p224") at = new sr();
            else if (it === "p192") at = new er();
            else if (it === "p25519") at = new Ut();
            else throw new Error("Unknown prime " + it);
            return Zt[it] = at, at;
          };
          function xt(nt) {
            if (typeof nt == "string") {
              var it = et._prime(nt);
              this.m = it.p, this.prime = it;
            } else j(nt.gtn(1), "modulus must be greater than 1"), this.m = nt, this.prime = null;
          }
          xt.prototype._verify1 = function(it) {
            j(it.negative === 0, "red works only with positives"), j(it.red, "red works only with red numbers");
          }, xt.prototype._verify2 = function(it, at) {
            j((it.negative | at.negative) === 0, "red works only with positives"), j(it.red && it.red === at.red, "red works only with red numbers");
          }, xt.prototype.imod = function(it) {
            return this.prime ? this.prime.ireduce(it)._forceRed(this) : (St(it, it.umod(this.m)._forceRed(this)), it);
          }, xt.prototype.neg = function(it) {
            return it.isZero() ? it.clone() : this.m.sub(it)._forceRed(this);
          }, xt.prototype.add = function(it, at) {
            this._verify2(it, at);
            var ct = it.add(at);
            return ct.cmp(this.m) >= 0 && ct.isub(this.m), ct._forceRed(this);
          }, xt.prototype.iadd = function(it, at) {
            this._verify2(it, at);
            var ct = it.iadd(at);
            return ct.cmp(this.m) >= 0 && ct.isub(this.m), ct;
          }, xt.prototype.sub = function(it, at) {
            this._verify2(it, at);
            var ct = it.sub(at);
            return ct.cmpn(0) < 0 && ct.iadd(this.m), ct._forceRed(this);
          }, xt.prototype.isub = function(it, at) {
            this._verify2(it, at);
            var ct = it.isub(at);
            return ct.cmpn(0) < 0 && ct.iadd(this.m), ct;
          }, xt.prototype.shl = function(it, at) {
            return this._verify1(it), this.imod(it.ushln(at));
          }, xt.prototype.imul = function(it, at) {
            return this._verify2(it, at), this.imod(it.imul(at));
          }, xt.prototype.mul = function(it, at) {
            return this._verify2(it, at), this.imod(it.mul(at));
          }, xt.prototype.isqr = function(it) {
            return this.imul(it, it.clone());
          }, xt.prototype.sqr = function(it) {
            return this.mul(it, it);
          }, xt.prototype.sqrt = function(it) {
            if (it.isZero()) return it.clone();
            var at = this.m.andln(3);
            if (j(at % 2 === 1), at === 3) {
              var ct = this.m.add(new et(1)).iushrn(2);
              return this.pow(it, ct);
            }
            for (var Mt = this.m.subn(1), At = 0; !Mt.isZero() && Mt.andln(1) === 0; ) At++, Mt.iushrn(1);
            j(!Mt.isZero());
            var ut = new et(1).toRed(this), ot = ut.redNeg(), Ct = this.m.subn(1).iushrn(1), Rt = this.m.bitLength();
            for (Rt = new et(2 * Rt * Rt).toRed(this); this.pow(Rt, Ct).cmp(ot) !== 0; ) Rt.redIAdd(ot);
            for (var Nt = this.pow(Rt, Mt), Wt = this.pow(it, Mt.addn(1).iushrn(1)), Xt = this.pow(it, Mt), rr = At; Xt.cmp(ut) !== 0; ) {
              for (var Gt = Xt, Yt = 0; Gt.cmp(ut) !== 0; Yt++) Gt = Gt.redSqr();
              j(Yt < rr);
              var tr = this.pow(Nt, new et(1).iushln(rr - Yt - 1));
              Wt = Wt.redMul(tr), Nt = tr.redSqr(), Xt = Xt.redMul(Nt), rr = Yt;
            }
            return Wt;
          }, xt.prototype.invm = function(it) {
            var at = it._invmp(this.m);
            return at.negative !== 0 ? (at.negative = 0, this.imod(at).redNeg()) : this.imod(at);
          }, xt.prototype.pow = function(it, at) {
            if (at.isZero()) return new et(1).toRed(this);
            if (at.cmpn(1) === 0) return it.clone();
            var ct = 4, Mt = new Array(1 << ct);
            Mt[0] = new et(1).toRed(this), Mt[1] = it;
            for (var At = 2; At < Mt.length; At++) Mt[At] = this.mul(Mt[At - 1], it);
            var ut = Mt[0], ot = 0, Ct = 0, Rt = at.bitLength() % 26;
            for (Rt === 0 && (Rt = 26), At = at.length - 1; At >= 0; At--) {
              for (var Nt = at.words[At], Wt = Rt - 1; Wt >= 0; Wt--) {
                var Xt = Nt >> Wt & 1;
                if (ut !== Mt[0] && (ut = this.sqr(ut)), Xt === 0 && ot === 0) {
                  Ct = 0;
                  continue;
                }
                ot <<= 1, ot |= Xt, Ct++, !(Ct !== ct && (At !== 0 || Wt !== 0)) && (ut = this.mul(ut, Mt[ot]), Ct = 0, ot = 0);
              }
              Rt = 26;
            }
            return ut;
          }, xt.prototype.convertTo = function(it) {
            var at = it.umod(this.m);
            return at === it ? at.clone() : at;
          }, xt.prototype.convertFrom = function(it) {
            var at = it.clone();
            return at.red = null, at;
          }, et.mont = function(it) {
            return new tt(it);
          };
          function tt(nt) {
            xt.call(this, nt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(tt, xt), tt.prototype.convertTo = function(it) {
            return this.imod(it.ushln(this.shift));
          }, tt.prototype.convertFrom = function(it) {
            var at = this.imod(it.mul(this.rinv));
            return at.red = null, at;
          }, tt.prototype.imul = function(it, at) {
            if (it.isZero() || at.isZero()) return it.words[0] = 0, it.length = 1, it;
            var ct = it.imul(at), Mt = ct.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), At = ct.isub(Mt).iushrn(this.shift), ut = At;
            return At.cmp(this.m) >= 0 ? ut = At.isub(this.m) : At.cmpn(0) < 0 && (ut = At.iadd(this.m)), ut._forceRed(this);
          }, tt.prototype.mul = function(it, at) {
            if (it.isZero() || at.isZero()) return new et(0)._forceRed(this);
            var ct = it.mul(at), Mt = ct.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), At = ct.isub(Mt).iushrn(this.shift), ut = At;
            return At.cmp(this.m) >= 0 ? ut = At.isub(this.m) : At.cmpn(0) < 0 && (ut = At.iadd(this.m)), ut._forceRed(this);
          }, tt.prototype.invm = function(it) {
            var at = this.imod(it._invmp(this.m).mul(this.r2));
            return at._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$6)), bn$6.exports;
    }
    var asn1$1 = {}, asn1 = {}, bn$5 = {
      exports: {}
    };
    bn$5.exports;
    var hasRequiredBn$2;
    function requireBn$2() {
      return hasRequiredBn$2 || (hasRequiredBn$2 = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$5)), bn$5.exports;
    }
    var api = {}, vmBrowserify = {}, hasRequiredVmBrowserify;
    function requireVmBrowserify() {
      return hasRequiredVmBrowserify || (hasRequiredVmBrowserify = 1, function(exports) {
        var indexOf = function(d, _) {
          if (d.indexOf) return d.indexOf(_);
          for (var $ = 0; $ < d.length; $++) if (d[$] === _) return $;
          return -1;
        }, Object_keys = function(d) {
          if (Object.keys) return Object.keys(d);
          var _ = [];
          for (var $ in d) _.push($);
          return _;
        }, forEach = function(d, _) {
          if (d.forEach) return d.forEach(_);
          for (var $ = 0; $ < d.length; $++) _(d[$], $, d);
        }, defineProp = function() {
          try {
            return Object.defineProperty({}, "_", {}), function(d, _, $) {
              Object.defineProperty(d, _, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: $
              });
            };
          } catch {
            return function(_, $, j) {
              _[$] = j;
            };
          }
        }(), globals = [
          "Array",
          "Boolean",
          "Date",
          "Error",
          "EvalError",
          "Function",
          "Infinity",
          "JSON",
          "Math",
          "NaN",
          "Number",
          "Object",
          "RangeError",
          "ReferenceError",
          "RegExp",
          "String",
          "SyntaxError",
          "TypeError",
          "URIError",
          "decodeURI",
          "decodeURIComponent",
          "encodeURI",
          "encodeURIComponent",
          "escape",
          "eval",
          "isFinite",
          "isNaN",
          "parseFloat",
          "parseInt",
          "undefined",
          "unescape"
        ];
        function Context() {
        }
        Context.prototype = {};
        var Script = exports.Script = function(_) {
          if (!(this instanceof Script)) return new Script(_);
          this.code = _;
        };
        Script.prototype.runInContext = function(d) {
          if (!(d instanceof Context)) throw new TypeError("needs a 'context' argument.");
          var _ = document.createElement("iframe");
          _.style || (_.style = {}), _.style.display = "none", document.body.appendChild(_);
          var $ = _.contentWindow, j = $.eval, rt = $.execScript;
          !j && rt && (rt.call($, "null"), j = $.eval), forEach(Object_keys(d), function(pt) {
            $[pt] = d[pt];
          }), forEach(globals, function(pt) {
            d[pt] && ($[pt] = d[pt]);
          });
          var et = Object_keys($), st = j.call($, this.code);
          return forEach(Object_keys($), function(pt) {
            (pt in d || indexOf(et, pt) === -1) && (d[pt] = $[pt]);
          }), forEach(globals, function(pt) {
            pt in d || defineProp(d, pt, $[pt]);
          }), document.body.removeChild(_), st;
        }, Script.prototype.runInThisContext = function() {
          return eval(this.code);
        }, Script.prototype.runInNewContext = function(d) {
          var _ = Script.createContext(d), $ = this.runInContext(_);
          return d && forEach(Object_keys(_), function(j) {
            d[j] = _[j];
          }), $;
        }, forEach(Object_keys(Script.prototype), function(d) {
          exports[d] = Script[d] = function(_) {
            var $ = Script(_);
            return $[d].apply($, [].slice.call(arguments, 1));
          };
        }), exports.isContext = function(d) {
          return d instanceof Context;
        }, exports.createScript = function(d) {
          return exports.Script(d);
        }, exports.createContext = Script.createContext = function(d) {
          var _ = new Context();
          return typeof d == "object" && forEach(Object_keys(d), function($) {
            _[$] = d[$];
          }), _;
        };
      }(vmBrowserify)), vmBrowserify;
    }
    var hasRequiredApi;
    function requireApi() {
      return hasRequiredApi || (hasRequiredApi = 1, function(d) {
        var _ = requireAsn1$1(), $ = requireInherits_browser(), j = d;
        j.define = function(st, pt) {
          return new rt(st, pt);
        };
        function rt(et, st) {
          this.name = et, this.body = st, this.decoders = {}, this.encoders = {};
        }
        rt.prototype._createNamed = function(st) {
          var pt;
          try {
            pt = requireVmBrowserify().runInThisContext("(function " + this.name + `(entity) {
  this._initNamed(entity);
})`);
          } catch {
            pt = function(Bt) {
              this._initNamed(Bt);
            };
          }
          return $(pt, st), pt.prototype._initNamed = function(Bt) {
            st.call(this, Bt);
          }, new pt(this);
        }, rt.prototype._getDecoder = function(st) {
          return st = st || "der", this.decoders.hasOwnProperty(st) || (this.decoders[st] = this._createNamed(_.decoders[st])), this.decoders[st];
        }, rt.prototype.decode = function(st, pt, Et) {
          return this._getDecoder(pt).decode(st, Et);
        }, rt.prototype._getEncoder = function(st) {
          return st = st || "der", this.encoders.hasOwnProperty(st) || (this.encoders[st] = this._createNamed(_.encoders[st])), this.encoders[st];
        }, rt.prototype.encode = function(st, pt, Et) {
          return this._getEncoder(pt).encode(st, Et);
        };
      }(api)), api;
    }
    var base = {}, reporter = {}, hasRequiredReporter;
    function requireReporter() {
      if (hasRequiredReporter) return reporter;
      hasRequiredReporter = 1;
      var d = requireInherits_browser();
      function _(j) {
        this._reporterState = {
          obj: null,
          path: [],
          options: j || {},
          errors: []
        };
      }
      reporter.Reporter = _, _.prototype.isError = function(rt) {
        return rt instanceof $;
      }, _.prototype.save = function() {
        var rt = this._reporterState;
        return {
          obj: rt.obj,
          pathLen: rt.path.length
        };
      }, _.prototype.restore = function(rt) {
        var et = this._reporterState;
        et.obj = rt.obj, et.path = et.path.slice(0, rt.pathLen);
      }, _.prototype.enterKey = function(rt) {
        return this._reporterState.path.push(rt);
      }, _.prototype.exitKey = function(rt) {
        var et = this._reporterState;
        et.path = et.path.slice(0, rt - 1);
      }, _.prototype.leaveKey = function(rt, et, st) {
        var pt = this._reporterState;
        this.exitKey(rt), pt.obj !== null && (pt.obj[et] = st);
      }, _.prototype.path = function() {
        return this._reporterState.path.join("/");
      }, _.prototype.enterObject = function() {
        var rt = this._reporterState, et = rt.obj;
        return rt.obj = {}, et;
      }, _.prototype.leaveObject = function(rt) {
        var et = this._reporterState, st = et.obj;
        return et.obj = rt, st;
      }, _.prototype.error = function(rt) {
        var et, st = this._reporterState, pt = rt instanceof $;
        if (pt ? et = rt : et = new $(st.path.map(function(Et) {
          return "[" + JSON.stringify(Et) + "]";
        }).join(""), rt.message || rt, rt.stack), !st.options.partial) throw et;
        return pt || st.errors.push(et), et;
      }, _.prototype.wrapResult = function(rt) {
        var et = this._reporterState;
        return et.options.partial ? {
          result: this.isError(rt) ? null : rt,
          errors: et.errors
        } : rt;
      };
      function $(j, rt) {
        this.path = j, this.rethrow(rt);
      }
      return d($, Error), $.prototype.rethrow = function(rt) {
        if (this.message = rt + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, $), !this.stack) try {
          throw new Error(this.message);
        } catch (et) {
          this.stack = et.stack;
        }
        return this;
      }, reporter;
    }
    var buffer = {}, hasRequiredBuffer;
    function requireBuffer() {
      if (hasRequiredBuffer) return buffer;
      hasRequiredBuffer = 1;
      var d = requireInherits_browser(), _ = requireBase().Reporter, $ = require$$0$2.Buffer;
      function j(et, st) {
        if (_.call(this, st), !$.isBuffer(et)) {
          this.error("Input not Buffer");
          return;
        }
        this.base = et, this.offset = 0, this.length = et.length;
      }
      d(j, _), buffer.DecoderBuffer = j, j.prototype.save = function() {
        return {
          offset: this.offset,
          reporter: _.prototype.save.call(this)
        };
      }, j.prototype.restore = function(st) {
        var pt = new j(this.base);
        return pt.offset = st.offset, pt.length = this.offset, this.offset = st.offset, _.prototype.restore.call(this, st.reporter), pt;
      }, j.prototype.isEmpty = function() {
        return this.offset === this.length;
      }, j.prototype.readUInt8 = function(st) {
        return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(st || "DecoderBuffer overrun");
      }, j.prototype.skip = function(st, pt) {
        if (!(this.offset + st <= this.length)) return this.error(pt || "DecoderBuffer overrun");
        var Et = new j(this.base);
        return Et._reporterState = this._reporterState, Et.offset = this.offset, Et.length = this.offset + st, this.offset += st, Et;
      }, j.prototype.raw = function(st) {
        return this.base.slice(st ? st.offset : this.offset, this.length);
      };
      function rt(et, st) {
        if (Array.isArray(et)) this.length = 0, this.value = et.map(function(pt) {
          return pt instanceof rt || (pt = new rt(pt, st)), this.length += pt.length, pt;
        }, this);
        else if (typeof et == "number") {
          if (!(0 <= et && et <= 255)) return st.error("non-byte EncoderBuffer value");
          this.value = et, this.length = 1;
        } else if (typeof et == "string") this.value = et, this.length = $.byteLength(et);
        else if ($.isBuffer(et)) this.value = et, this.length = et.length;
        else return st.error("Unsupported type: " + typeof et);
      }
      return buffer.EncoderBuffer = rt, rt.prototype.join = function(st, pt) {
        return st || (st = new $(this.length)), pt || (pt = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(Et) {
          Et.join(st, pt), pt += Et.length;
        }) : (typeof this.value == "number" ? st[pt] = this.value : typeof this.value == "string" ? st.write(this.value, pt) : $.isBuffer(this.value) && this.value.copy(st, pt), pt += this.length)), st;
      }, buffer;
    }
    var node, hasRequiredNode;
    function requireNode() {
      if (hasRequiredNode) return node;
      hasRequiredNode = 1;
      var d = requireBase().Reporter, _ = requireBase().EncoderBuffer, $ = requireBase().DecoderBuffer, j = requireMinimalisticAssert(), rt = [
        "seq",
        "seqof",
        "set",
        "setof",
        "objid",
        "bool",
        "gentime",
        "utctime",
        "null_",
        "enum",
        "int",
        "objDesc",
        "bitstr",
        "bmpstr",
        "charstr",
        "genstr",
        "graphstr",
        "ia5str",
        "iso646str",
        "numstr",
        "octstr",
        "printstr",
        "t61str",
        "unistr",
        "utf8str",
        "videostr"
      ], et = [
        "key",
        "obj",
        "use",
        "optional",
        "explicit",
        "implicit",
        "def",
        "choice",
        "any",
        "contains"
      ].concat(rt), st = [
        "_peekTag",
        "_decodeTag",
        "_use",
        "_decodeStr",
        "_decodeObjid",
        "_decodeTime",
        "_decodeNull",
        "_decodeInt",
        "_decodeBool",
        "_decodeList",
        "_encodeComposite",
        "_encodeStr",
        "_encodeObjid",
        "_encodeTime",
        "_encodeNull",
        "_encodeInt",
        "_encodeBool"
      ];
      function pt(Bt, St) {
        var $t = {};
        this._baseState = $t, $t.enc = Bt, $t.parent = St || null, $t.children = null, $t.tag = null, $t.args = null, $t.reverseArgs = null, $t.choice = null, $t.optional = false, $t.any = false, $t.obj = false, $t.use = null, $t.useDecoder = null, $t.key = null, $t.default = null, $t.explicit = null, $t.implicit = null, $t.contains = null, $t.parent || ($t.children = [], this._wrap());
      }
      node = pt;
      var Et = [
        "enc",
        "parent",
        "children",
        "tag",
        "args",
        "reverseArgs",
        "choice",
        "optional",
        "any",
        "obj",
        "use",
        "alteredUse",
        "key",
        "default",
        "explicit",
        "implicit",
        "contains"
      ];
      return pt.prototype.clone = function() {
        var St = this._baseState, $t = {};
        Et.forEach(function(Tt) {
          $t[Tt] = St[Tt];
        });
        var kt = new this.constructor($t.parent);
        return kt._baseState = $t, kt;
      }, pt.prototype._wrap = function() {
        var St = this._baseState;
        et.forEach(function($t) {
          this[$t] = function() {
            var Tt = new this.constructor(this);
            return St.children.push(Tt), Tt[$t].apply(Tt, arguments);
          };
        }, this);
      }, pt.prototype._init = function(St) {
        var $t = this._baseState;
        j($t.parent === null), St.call(this), $t.children = $t.children.filter(function(kt) {
          return kt._baseState.parent === this;
        }, this), j.equal($t.children.length, 1, "Root node can have only one child");
      }, pt.prototype._useArgs = function(St) {
        var $t = this._baseState, kt = St.filter(function(Tt) {
          return Tt instanceof this.constructor;
        }, this);
        St = St.filter(function(Tt) {
          return !(Tt instanceof this.constructor);
        }, this), kt.length !== 0 && (j($t.children === null), $t.children = kt, kt.forEach(function(Tt) {
          Tt._baseState.parent = this;
        }, this)), St.length !== 0 && (j($t.args === null), $t.args = St, $t.reverseArgs = St.map(function(Tt) {
          if (typeof Tt != "object" || Tt.constructor !== Object) return Tt;
          var Pt = {};
          return Object.keys(Tt).forEach(function(It) {
            It == (It | 0) && (It |= 0);
            var jt = Tt[It];
            Pt[jt] = It;
          }), Pt;
        }));
      }, st.forEach(function(Bt) {
        pt.prototype[Bt] = function() {
          var $t = this._baseState;
          throw new Error(Bt + " not implemented for encoding: " + $t.enc);
        };
      }), rt.forEach(function(Bt) {
        pt.prototype[Bt] = function() {
          var $t = this._baseState, kt = Array.prototype.slice.call(arguments);
          return j($t.tag === null), $t.tag = Bt, this._useArgs(kt), this;
        };
      }), pt.prototype.use = function(St) {
        j(St);
        var $t = this._baseState;
        return j($t.use === null), $t.use = St, this;
      }, pt.prototype.optional = function() {
        var St = this._baseState;
        return St.optional = true, this;
      }, pt.prototype.def = function(St) {
        var $t = this._baseState;
        return j($t.default === null), $t.default = St, $t.optional = true, this;
      }, pt.prototype.explicit = function(St) {
        var $t = this._baseState;
        return j($t.explicit === null && $t.implicit === null), $t.explicit = St, this;
      }, pt.prototype.implicit = function(St) {
        var $t = this._baseState;
        return j($t.explicit === null && $t.implicit === null), $t.implicit = St, this;
      }, pt.prototype.obj = function() {
        var St = this._baseState, $t = Array.prototype.slice.call(arguments);
        return St.obj = true, $t.length !== 0 && this._useArgs($t), this;
      }, pt.prototype.key = function(St) {
        var $t = this._baseState;
        return j($t.key === null), $t.key = St, this;
      }, pt.prototype.any = function() {
        var St = this._baseState;
        return St.any = true, this;
      }, pt.prototype.choice = function(St) {
        var $t = this._baseState;
        return j($t.choice === null), $t.choice = St, this._useArgs(Object.keys(St).map(function(kt) {
          return St[kt];
        })), this;
      }, pt.prototype.contains = function(St) {
        var $t = this._baseState;
        return j($t.use === null), $t.contains = St, this;
      }, pt.prototype._decode = function(St, $t) {
        var kt = this._baseState;
        if (kt.parent === null) return St.wrapResult(kt.children[0]._decode(St, $t));
        var Tt = kt.default, Pt = true, It = null;
        if (kt.key !== null && (It = St.enterKey(kt.key)), kt.optional) {
          var jt = null;
          if (kt.explicit !== null ? jt = kt.explicit : kt.implicit !== null ? jt = kt.implicit : kt.tag !== null && (jt = kt.tag), jt === null && !kt.any) {
            var Dt = St.save();
            try {
              kt.choice === null ? this._decodeGeneric(kt.tag, St, $t) : this._decodeChoice(St, $t), Pt = true;
            } catch {
              Pt = false;
            }
            St.restore(Dt);
          } else if (Pt = this._peekTag(St, jt, kt.any), St.isError(Pt)) return Pt;
        }
        var Ot;
        if (kt.obj && Pt && (Ot = St.enterObject()), Pt) {
          if (kt.explicit !== null) {
            var Ft = this._decodeTag(St, kt.explicit);
            if (St.isError(Ft)) return Ft;
            St = Ft;
          }
          var Lt = St.offset;
          if (kt.use === null && kt.choice === null) {
            if (kt.any) var Dt = St.save();
            var Zt = this._decodeTag(St, kt.implicit !== null ? kt.implicit : kt.tag, kt.any);
            if (St.isError(Zt)) return Zt;
            kt.any ? Tt = St.raw(Dt) : St = Zt;
          }
          if ($t && $t.track && kt.tag !== null && $t.track(St.path(), Lt, St.length, "tagged"), $t && $t.track && kt.tag !== null && $t.track(St.path(), St.offset, St.length, "content"), kt.any ? Tt = Tt : kt.choice === null ? Tt = this._decodeGeneric(kt.tag, St, $t) : Tt = this._decodeChoice(St, $t), St.isError(Tt)) return Tt;
          if (!kt.any && kt.choice === null && kt.children !== null && kt.children.forEach(function(sr) {
            sr._decode(St, $t);
          }), kt.contains && (kt.tag === "octstr" || kt.tag === "bitstr")) {
            var Kt = new $(Tt);
            Tt = this._getUse(kt.contains, St._reporterState.obj)._decode(Kt, $t);
          }
        }
        return kt.obj && Pt && (Tt = St.leaveObject(Ot)), kt.key !== null && (Tt !== null || Pt === true) ? St.leaveKey(It, kt.key, Tt) : It !== null && St.exitKey(It), Tt;
      }, pt.prototype._decodeGeneric = function(St, $t, kt) {
        var Tt = this._baseState;
        return St === "seq" || St === "set" ? null : St === "seqof" || St === "setof" ? this._decodeList($t, St, Tt.args[0], kt) : /str$/.test(St) ? this._decodeStr($t, St, kt) : St === "objid" && Tt.args ? this._decodeObjid($t, Tt.args[0], Tt.args[1], kt) : St === "objid" ? this._decodeObjid($t, null, null, kt) : St === "gentime" || St === "utctime" ? this._decodeTime($t, St, kt) : St === "null_" ? this._decodeNull($t, kt) : St === "bool" ? this._decodeBool($t, kt) : St === "objDesc" ? this._decodeStr($t, St, kt) : St === "int" || St === "enum" ? this._decodeInt($t, Tt.args && Tt.args[0], kt) : Tt.use !== null ? this._getUse(Tt.use, $t._reporterState.obj)._decode($t, kt) : $t.error("unknown tag: " + St);
      }, pt.prototype._getUse = function(St, $t) {
        var kt = this._baseState;
        return kt.useDecoder = this._use(St, $t), j(kt.useDecoder._baseState.parent === null), kt.useDecoder = kt.useDecoder._baseState.children[0], kt.implicit !== kt.useDecoder._baseState.implicit && (kt.useDecoder = kt.useDecoder.clone(), kt.useDecoder._baseState.implicit = kt.implicit), kt.useDecoder;
      }, pt.prototype._decodeChoice = function(St, $t) {
        var kt = this._baseState, Tt = null, Pt = false;
        return Object.keys(kt.choice).some(function(It) {
          var jt = St.save(), Dt = kt.choice[It];
          try {
            var Ot = Dt._decode(St, $t);
            if (St.isError(Ot)) return false;
            Tt = {
              type: It,
              value: Ot
            }, Pt = true;
          } catch {
            return St.restore(jt), false;
          }
          return true;
        }, this), Pt ? Tt : St.error("Choice not matched");
      }, pt.prototype._createEncoderBuffer = function(St) {
        return new _(St, this.reporter);
      }, pt.prototype._encode = function(St, $t, kt) {
        var Tt = this._baseState;
        if (!(Tt.default !== null && Tt.default === St)) {
          var Pt = this._encodeValue(St, $t, kt);
          if (Pt !== void 0 && !this._skipDefault(Pt, $t, kt)) return Pt;
        }
      }, pt.prototype._encodeValue = function(St, $t, kt) {
        var Tt = this._baseState;
        if (Tt.parent === null) return Tt.children[0]._encode(St, $t || new d());
        var Dt = null;
        if (this.reporter = $t, Tt.optional && St === void 0) if (Tt.default !== null) St = Tt.default;
        else return;
        var Pt = null, It = false;
        if (Tt.any) Dt = this._createEncoderBuffer(St);
        else if (Tt.choice) Dt = this._encodeChoice(St, $t);
        else if (Tt.contains) Pt = this._getUse(Tt.contains, kt)._encode(St, $t), It = true;
        else if (Tt.children) Pt = Tt.children.map(function(Lt) {
          if (Lt._baseState.tag === "null_") return Lt._encode(null, $t, St);
          if (Lt._baseState.key === null) return $t.error("Child should have a key");
          var Zt = $t.enterKey(Lt._baseState.key);
          if (typeof St != "object") return $t.error("Child expected, but input is not object");
          var Kt = Lt._encode(St[Lt._baseState.key], $t, St);
          return $t.leaveKey(Zt), Kt;
        }, this).filter(function(Lt) {
          return Lt;
        }), Pt = this._createEncoderBuffer(Pt);
        else if (Tt.tag === "seqof" || Tt.tag === "setof") {
          if (!(Tt.args && Tt.args.length === 1)) return $t.error("Too many args for : " + Tt.tag);
          if (!Array.isArray(St)) return $t.error("seqof/setof, but data is not Array");
          var jt = this.clone();
          jt._baseState.implicit = null, Pt = this._createEncoderBuffer(St.map(function(Lt) {
            var Zt = this._baseState;
            return this._getUse(Zt.args[0], St)._encode(Lt, $t);
          }, jt));
        } else Tt.use !== null ? Dt = this._getUse(Tt.use, kt)._encode(St, $t) : (Pt = this._encodePrimitive(Tt.tag, St), It = true);
        var Dt;
        if (!Tt.any && Tt.choice === null) {
          var Ot = Tt.implicit !== null ? Tt.implicit : Tt.tag, Ft = Tt.implicit === null ? "universal" : "context";
          Ot === null ? Tt.use === null && $t.error("Tag could be omitted only for .use()") : Tt.use === null && (Dt = this._encodeComposite(Ot, It, Ft, Pt));
        }
        return Tt.explicit !== null && (Dt = this._encodeComposite(Tt.explicit, false, "context", Dt)), Dt;
      }, pt.prototype._encodeChoice = function(St, $t) {
        var kt = this._baseState, Tt = kt.choice[St.type];
        return Tt || j(false, St.type + " not found in " + JSON.stringify(Object.keys(kt.choice))), Tt._encode(St.value, $t);
      }, pt.prototype._encodePrimitive = function(St, $t) {
        var kt = this._baseState;
        if (/str$/.test(St)) return this._encodeStr($t, St);
        if (St === "objid" && kt.args) return this._encodeObjid($t, kt.reverseArgs[0], kt.args[1]);
        if (St === "objid") return this._encodeObjid($t, null, null);
        if (St === "gentime" || St === "utctime") return this._encodeTime($t, St);
        if (St === "null_") return this._encodeNull();
        if (St === "int" || St === "enum") return this._encodeInt($t, kt.args && kt.reverseArgs[0]);
        if (St === "bool") return this._encodeBool($t);
        if (St === "objDesc") return this._encodeStr($t, St);
        throw new Error("Unsupported tag: " + St);
      }, pt.prototype._isNumstr = function(St) {
        return /^[0-9 ]*$/.test(St);
      }, pt.prototype._isPrintstr = function(St) {
        return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(St);
      }, node;
    }
    var hasRequiredBase;
    function requireBase() {
      return hasRequiredBase || (hasRequiredBase = 1, function(d) {
        var _ = d;
        _.Reporter = requireReporter().Reporter, _.DecoderBuffer = requireBuffer().DecoderBuffer, _.EncoderBuffer = requireBuffer().EncoderBuffer, _.Node = requireNode();
      }(base)), base;
    }
    var constants$2 = {}, der = {}, hasRequiredDer$2;
    function requireDer$2() {
      return hasRequiredDer$2 || (hasRequiredDer$2 = 1, function(d) {
        var _ = requireConstants();
        d.tagClass = {
          0: "universal",
          1: "application",
          2: "context",
          3: "private"
        }, d.tagClassByName = _._reverse(d.tagClass), d.tag = {
          0: "end",
          1: "bool",
          2: "int",
          3: "bitstr",
          4: "octstr",
          5: "null_",
          6: "objid",
          7: "objDesc",
          8: "external",
          9: "real",
          10: "enum",
          11: "embed",
          12: "utf8str",
          13: "relativeOid",
          16: "seq",
          17: "set",
          18: "numstr",
          19: "printstr",
          20: "t61str",
          21: "videostr",
          22: "ia5str",
          23: "utctime",
          24: "gentime",
          25: "graphstr",
          26: "iso646str",
          27: "genstr",
          28: "unistr",
          29: "charstr",
          30: "bmpstr"
        }, d.tagByName = _._reverse(d.tag);
      }(der)), der;
    }
    var hasRequiredConstants;
    function requireConstants() {
      return hasRequiredConstants || (hasRequiredConstants = 1, function(d) {
        var _ = d;
        _._reverse = function(j) {
          var rt = {};
          return Object.keys(j).forEach(function(et) {
            (et | 0) == et && (et = et | 0);
            var st = j[et];
            rt[st] = et;
          }), rt;
        }, _.der = requireDer$2();
      }(constants$2)), constants$2;
    }
    var decoders = {}, der_1$1, hasRequiredDer$1;
    function requireDer$1() {
      if (hasRequiredDer$1) return der_1$1;
      hasRequiredDer$1 = 1;
      var d = requireInherits_browser(), _ = requireAsn1$1(), $ = _.base, j = _.bignum, rt = _.constants.der;
      function et(Bt) {
        this.enc = "der", this.name = Bt.name, this.entity = Bt, this.tree = new st(), this.tree._init(Bt.body);
      }
      der_1$1 = et, et.prototype.decode = function(St, $t) {
        return St instanceof $.DecoderBuffer || (St = new $.DecoderBuffer(St, $t)), this.tree._decode(St, $t);
      };
      function st(Bt) {
        $.Node.call(this, "der", Bt);
      }
      d(st, $.Node), st.prototype._peekTag = function(St, $t, kt) {
        if (St.isEmpty()) return false;
        var Tt = St.save(), Pt = pt(St, 'Failed to peek tag: "' + $t + '"');
        return St.isError(Pt) ? Pt : (St.restore(Tt), Pt.tag === $t || Pt.tagStr === $t || Pt.tagStr + "of" === $t || kt);
      }, st.prototype._decodeTag = function(St, $t, kt) {
        var Tt = pt(St, 'Failed to decode tag of "' + $t + '"');
        if (St.isError(Tt)) return Tt;
        var Pt = Et(St, Tt.primitive, 'Failed to get length of "' + $t + '"');
        if (St.isError(Pt)) return Pt;
        if (!kt && Tt.tag !== $t && Tt.tagStr !== $t && Tt.tagStr + "of" !== $t) return St.error('Failed to match tag: "' + $t + '"');
        if (Tt.primitive || Pt !== null) return St.skip(Pt, 'Failed to match body of: "' + $t + '"');
        var It = St.save(), jt = this._skipUntilEnd(St, 'Failed to skip indefinite length body: "' + this.tag + '"');
        return St.isError(jt) ? jt : (Pt = St.offset - It.offset, St.restore(It), St.skip(Pt, 'Failed to match body of: "' + $t + '"'));
      }, st.prototype._skipUntilEnd = function(St, $t) {
        for (; ; ) {
          var kt = pt(St, $t);
          if (St.isError(kt)) return kt;
          var Tt = Et(St, kt.primitive, $t);
          if (St.isError(Tt)) return Tt;
          var Pt;
          if (kt.primitive || Tt !== null ? Pt = St.skip(Tt) : Pt = this._skipUntilEnd(St, $t), St.isError(Pt)) return Pt;
          if (kt.tagStr === "end") break;
        }
      }, st.prototype._decodeList = function(St, $t, kt, Tt) {
        for (var Pt = []; !St.isEmpty(); ) {
          var It = this._peekTag(St, "end");
          if (St.isError(It)) return It;
          var jt = kt.decode(St, "der", Tt);
          if (St.isError(jt) && It) break;
          Pt.push(jt);
        }
        return Pt;
      }, st.prototype._decodeStr = function(St, $t) {
        if ($t === "bitstr") {
          var kt = St.readUInt8();
          return St.isError(kt) ? kt : {
            unused: kt,
            data: St.raw()
          };
        } else if ($t === "bmpstr") {
          var Tt = St.raw();
          if (Tt.length % 2 === 1) return St.error("Decoding of string type: bmpstr length mismatch");
          for (var Pt = "", It = 0; It < Tt.length / 2; It++) Pt += String.fromCharCode(Tt.readUInt16BE(It * 2));
          return Pt;
        } else if ($t === "numstr") {
          var jt = St.raw().toString("ascii");
          return this._isNumstr(jt) ? jt : St.error("Decoding of string type: numstr unsupported characters");
        } else {
          if ($t === "octstr") return St.raw();
          if ($t === "objDesc") return St.raw();
          if ($t === "printstr") {
            var Dt = St.raw().toString("ascii");
            return this._isPrintstr(Dt) ? Dt : St.error("Decoding of string type: printstr unsupported characters");
          } else return /str$/.test($t) ? St.raw().toString() : St.error("Decoding of string type: " + $t + " unsupported");
        }
      }, st.prototype._decodeObjid = function(St, $t, kt) {
        for (var Tt, Pt = [], It = 0; !St.isEmpty(); ) {
          var jt = St.readUInt8();
          It <<= 7, It |= jt & 127, jt & 128 || (Pt.push(It), It = 0);
        }
        jt & 128 && Pt.push(It);
        var Dt = Pt[0] / 40 | 0, Ot = Pt[0] % 40;
        if (kt ? Tt = Pt : Tt = [
          Dt,
          Ot
        ].concat(Pt.slice(1)), $t) {
          var Ft = $t[Tt.join(" ")];
          Ft === void 0 && (Ft = $t[Tt.join(".")]), Ft !== void 0 && (Tt = Ft);
        }
        return Tt;
      }, st.prototype._decodeTime = function(St, $t) {
        var kt = St.raw().toString();
        if ($t === "gentime") var Tt = kt.slice(0, 4) | 0, Pt = kt.slice(4, 6) | 0, It = kt.slice(6, 8) | 0, jt = kt.slice(8, 10) | 0, Dt = kt.slice(10, 12) | 0, Ot = kt.slice(12, 14) | 0;
        else if ($t === "utctime") {
          var Tt = kt.slice(0, 2) | 0, Pt = kt.slice(2, 4) | 0, It = kt.slice(4, 6) | 0, jt = kt.slice(6, 8) | 0, Dt = kt.slice(8, 10) | 0, Ot = kt.slice(10, 12) | 0;
          Tt < 70 ? Tt = 2e3 + Tt : Tt = 1900 + Tt;
        } else return St.error("Decoding " + $t + " time is not supported yet");
        return Date.UTC(Tt, Pt - 1, It, jt, Dt, Ot, 0);
      }, st.prototype._decodeNull = function(St) {
        return null;
      }, st.prototype._decodeBool = function(St) {
        var $t = St.readUInt8();
        return St.isError($t) ? $t : $t !== 0;
      }, st.prototype._decodeInt = function(St, $t) {
        var kt = St.raw(), Tt = new j(kt);
        return $t && (Tt = $t[Tt.toString(10)] || Tt), Tt;
      }, st.prototype._use = function(St, $t) {
        return typeof St == "function" && (St = St($t)), St._getDecoder("der").tree;
      };
      function pt(Bt, St) {
        var $t = Bt.readUInt8(St);
        if (Bt.isError($t)) return $t;
        var kt = rt.tagClass[$t >> 6], Tt = ($t & 32) === 0;
        if (($t & 31) === 31) {
          var Pt = $t;
          for ($t = 0; (Pt & 128) === 128; ) {
            if (Pt = Bt.readUInt8(St), Bt.isError(Pt)) return Pt;
            $t <<= 7, $t |= Pt & 127;
          }
        } else $t &= 31;
        var It = rt.tag[$t];
        return {
          cls: kt,
          primitive: Tt,
          tag: $t,
          tagStr: It
        };
      }
      function Et(Bt, St, $t) {
        var kt = Bt.readUInt8($t);
        if (Bt.isError(kt)) return kt;
        if (!St && kt === 128) return null;
        if (!(kt & 128)) return kt;
        var Tt = kt & 127;
        if (Tt > 4) return Bt.error("length octect is too long");
        kt = 0;
        for (var Pt = 0; Pt < Tt; Pt++) {
          kt <<= 8;
          var It = Bt.readUInt8($t);
          if (Bt.isError(It)) return It;
          kt |= It;
        }
        return kt;
      }
      return der_1$1;
    }
    var pem$1, hasRequiredPem$1;
    function requirePem$1() {
      if (hasRequiredPem$1) return pem$1;
      hasRequiredPem$1 = 1;
      var d = requireInherits_browser(), _ = require$$0$2.Buffer, $ = requireDer$1();
      function j(rt) {
        $.call(this, rt), this.enc = "pem";
      }
      return d(j, $), pem$1 = j, j.prototype.decode = function(et, st) {
        for (var pt = et.toString().split(/[\r\n]+/g), Et = st.label.toUpperCase(), Bt = /^-----(BEGIN|END) ([^-]+)-----$/, St = -1, $t = -1, kt = 0; kt < pt.length; kt++) {
          var Tt = pt[kt].match(Bt);
          if (Tt !== null && Tt[2] === Et) if (St === -1) {
            if (Tt[1] !== "BEGIN") break;
            St = kt;
          } else {
            if (Tt[1] !== "END") break;
            $t = kt;
            break;
          }
        }
        if (St === -1 || $t === -1) throw new Error("PEM section not found for: " + Et);
        var Pt = pt.slice(St + 1, $t).join("");
        Pt.replace(/[^a-z0-9\+\/=]+/gi, "");
        var It = new _(Pt, "base64");
        return $.prototype.decode.call(this, It, st);
      }, pem$1;
    }
    var hasRequiredDecoders;
    function requireDecoders() {
      return hasRequiredDecoders || (hasRequiredDecoders = 1, function(d) {
        var _ = d;
        _.der = requireDer$1(), _.pem = requirePem$1();
      }(decoders)), decoders;
    }
    var encoders = {}, der_1, hasRequiredDer;
    function requireDer() {
      if (hasRequiredDer) return der_1;
      hasRequiredDer = 1;
      var d = requireInherits_browser(), _ = require$$0$2.Buffer, $ = requireAsn1$1(), j = $.base, rt = $.constants.der;
      function et(Bt) {
        this.enc = "der", this.name = Bt.name, this.entity = Bt, this.tree = new st(), this.tree._init(Bt.body);
      }
      der_1 = et, et.prototype.encode = function(St, $t) {
        return this.tree._encode(St, $t).join();
      };
      function st(Bt) {
        j.Node.call(this, "der", Bt);
      }
      d(st, j.Node), st.prototype._encodeComposite = function(St, $t, kt, Tt) {
        var Pt = Et(St, $t, kt, this.reporter);
        if (Tt.length < 128) {
          var Dt = new _(2);
          return Dt[0] = Pt, Dt[1] = Tt.length, this._createEncoderBuffer([
            Dt,
            Tt
          ]);
        }
        for (var It = 1, jt = Tt.length; jt >= 256; jt >>= 8) It++;
        var Dt = new _(2 + It);
        Dt[0] = Pt, Dt[1] = 128 | It;
        for (var jt = 1 + It, Ot = Tt.length; Ot > 0; jt--, Ot >>= 8) Dt[jt] = Ot & 255;
        return this._createEncoderBuffer([
          Dt,
          Tt
        ]);
      }, st.prototype._encodeStr = function(St, $t) {
        if ($t === "bitstr") return this._createEncoderBuffer([
          St.unused | 0,
          St.data
        ]);
        if ($t === "bmpstr") {
          for (var kt = new _(St.length * 2), Tt = 0; Tt < St.length; Tt++) kt.writeUInt16BE(St.charCodeAt(Tt), Tt * 2);
          return this._createEncoderBuffer(kt);
        } else return $t === "numstr" ? this._isNumstr(St) ? this._createEncoderBuffer(St) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : $t === "printstr" ? this._isPrintstr(St) ? this._createEncoderBuffer(St) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test($t) ? this._createEncoderBuffer(St) : $t === "objDesc" ? this._createEncoderBuffer(St) : this.reporter.error("Encoding of string type: " + $t + " unsupported");
      }, st.prototype._encodeObjid = function(St, $t, kt) {
        if (typeof St == "string") {
          if (!$t) return this.reporter.error("string objid given, but no values map found");
          if (!$t.hasOwnProperty(St)) return this.reporter.error("objid not found in values map");
          St = $t[St].split(/[\s\.]+/g);
          for (var Tt = 0; Tt < St.length; Tt++) St[Tt] |= 0;
        } else if (Array.isArray(St)) {
          St = St.slice();
          for (var Tt = 0; Tt < St.length; Tt++) St[Tt] |= 0;
        }
        if (!Array.isArray(St)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(St));
        if (!kt) {
          if (St[1] >= 40) return this.reporter.error("Second objid identifier OOB");
          St.splice(0, 2, St[0] * 40 + St[1]);
        }
        for (var Pt = 0, Tt = 0; Tt < St.length; Tt++) {
          var It = St[Tt];
          for (Pt++; It >= 128; It >>= 7) Pt++;
        }
        for (var jt = new _(Pt), Dt = jt.length - 1, Tt = St.length - 1; Tt >= 0; Tt--) {
          var It = St[Tt];
          for (jt[Dt--] = It & 127; (It >>= 7) > 0; ) jt[Dt--] = 128 | It & 127;
        }
        return this._createEncoderBuffer(jt);
      };
      function pt(Bt) {
        return Bt < 10 ? "0" + Bt : Bt;
      }
      st.prototype._encodeTime = function(St, $t) {
        var kt, Tt = new Date(St);
        return $t === "gentime" ? kt = [
          pt(Tt.getFullYear()),
          pt(Tt.getUTCMonth() + 1),
          pt(Tt.getUTCDate()),
          pt(Tt.getUTCHours()),
          pt(Tt.getUTCMinutes()),
          pt(Tt.getUTCSeconds()),
          "Z"
        ].join("") : $t === "utctime" ? kt = [
          pt(Tt.getFullYear() % 100),
          pt(Tt.getUTCMonth() + 1),
          pt(Tt.getUTCDate()),
          pt(Tt.getUTCHours()),
          pt(Tt.getUTCMinutes()),
          pt(Tt.getUTCSeconds()),
          "Z"
        ].join("") : this.reporter.error("Encoding " + $t + " time is not supported yet"), this._encodeStr(kt, "octstr");
      }, st.prototype._encodeNull = function() {
        return this._createEncoderBuffer("");
      }, st.prototype._encodeInt = function(St, $t) {
        if (typeof St == "string") {
          if (!$t) return this.reporter.error("String int or enum given, but no values map");
          if (!$t.hasOwnProperty(St)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(St));
          St = $t[St];
        }
        if (typeof St != "number" && !_.isBuffer(St)) {
          var kt = St.toArray();
          !St.sign && kt[0] & 128 && kt.unshift(0), St = new _(kt);
        }
        if (_.isBuffer(St)) {
          var Tt = St.length;
          St.length === 0 && Tt++;
          var It = new _(Tt);
          return St.copy(It), St.length === 0 && (It[0] = 0), this._createEncoderBuffer(It);
        }
        if (St < 128) return this._createEncoderBuffer(St);
        if (St < 256) return this._createEncoderBuffer([
          0,
          St
        ]);
        for (var Tt = 1, Pt = St; Pt >= 256; Pt >>= 8) Tt++;
        for (var It = new Array(Tt), Pt = It.length - 1; Pt >= 0; Pt--) It[Pt] = St & 255, St >>= 8;
        return It[0] & 128 && It.unshift(0), this._createEncoderBuffer(new _(It));
      }, st.prototype._encodeBool = function(St) {
        return this._createEncoderBuffer(St ? 255 : 0);
      }, st.prototype._use = function(St, $t) {
        return typeof St == "function" && (St = St($t)), St._getEncoder("der").tree;
      }, st.prototype._skipDefault = function(St, $t, kt) {
        var Tt = this._baseState, Pt;
        if (Tt.default === null) return false;
        var It = St.join();
        if (Tt.defaultBuffer === void 0 && (Tt.defaultBuffer = this._encodeValue(Tt.default, $t, kt).join()), It.length !== Tt.defaultBuffer.length) return false;
        for (Pt = 0; Pt < It.length; Pt++) if (It[Pt] !== Tt.defaultBuffer[Pt]) return false;
        return true;
      };
      function Et(Bt, St, $t, kt) {
        var Tt;
        if (Bt === "seqof" ? Bt = "seq" : Bt === "setof" && (Bt = "set"), rt.tagByName.hasOwnProperty(Bt)) Tt = rt.tagByName[Bt];
        else if (typeof Bt == "number" && (Bt | 0) === Bt) Tt = Bt;
        else return kt.error("Unknown tag: " + Bt);
        return Tt >= 31 ? kt.error("Multi-octet tag encoding unsupported") : (St || (Tt |= 32), Tt |= rt.tagClassByName[$t || "universal"] << 6, Tt);
      }
      return der_1;
    }
    var pem, hasRequiredPem;
    function requirePem() {
      if (hasRequiredPem) return pem;
      hasRequiredPem = 1;
      var d = requireInherits_browser(), _ = requireDer();
      function $(j) {
        _.call(this, j), this.enc = "pem";
      }
      return d($, _), pem = $, $.prototype.encode = function(rt, et) {
        for (var st = _.prototype.encode.call(this, rt), pt = st.toString("base64"), Et = [
          "-----BEGIN " + et.label + "-----"
        ], Bt = 0; Bt < pt.length; Bt += 64) Et.push(pt.slice(Bt, Bt + 64));
        return Et.push("-----END " + et.label + "-----"), Et.join(`
`);
      }, pem;
    }
    var hasRequiredEncoders;
    function requireEncoders() {
      return hasRequiredEncoders || (hasRequiredEncoders = 1, function(d) {
        var _ = d;
        _.der = requireDer(), _.pem = requirePem();
      }(encoders)), encoders;
    }
    var hasRequiredAsn1$1;
    function requireAsn1$1() {
      return hasRequiredAsn1$1 || (hasRequiredAsn1$1 = 1, function(d) {
        var _ = d;
        _.bignum = requireBn$2(), _.define = requireApi().define, _.base = requireBase(), _.constants = requireConstants(), _.decoders = requireDecoders(), _.encoders = requireEncoders();
      }(asn1)), asn1;
    }
    var certificate, hasRequiredCertificate;
    function requireCertificate() {
      if (hasRequiredCertificate) return certificate;
      hasRequiredCertificate = 1;
      var d = requireAsn1$1(), _ = d.define("Time", function() {
        this.choice({
          utcTime: this.utctime(),
          generalTime: this.gentime()
        });
      }), $ = d.define("AttributeTypeValue", function() {
        this.seq().obj(this.key("type").objid(), this.key("value").any());
      }), j = d.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
      }), rt = d.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(j), this.key("subjectPublicKey").bitstr());
      }), et = d.define("RelativeDistinguishedName", function() {
        this.setof($);
      }), st = d.define("RDNSequence", function() {
        this.seqof(et);
      }), pt = d.define("Name", function() {
        this.choice({
          rdnSequence: this.use(st)
        });
      }), Et = d.define("Validity", function() {
        this.seq().obj(this.key("notBefore").use(_), this.key("notAfter").use(_));
      }), Bt = d.define("Extension", function() {
        this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
      }), St = d.define("TBSCertificate", function() {
        this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(j), this.key("issuer").use(pt), this.key("validity").use(Et), this.key("subject").use(pt), this.key("subjectPublicKeyInfo").use(rt), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(Bt).optional());
      }), $t = d.define("X509Certificate", function() {
        this.seq().obj(this.key("tbsCertificate").use(St), this.key("signatureAlgorithm").use(j), this.key("signatureValue").bitstr());
      });
      return certificate = $t, certificate;
    }
    var hasRequiredAsn1;
    function requireAsn1() {
      if (hasRequiredAsn1) return asn1$1;
      hasRequiredAsn1 = 1;
      var d = requireAsn1$1();
      asn1$1.certificate = requireCertificate();
      var _ = d.define("RSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
      });
      asn1$1.RSAPrivateKey = _;
      var $ = d.define("RSAPublicKey", function() {
        this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
      });
      asn1$1.RSAPublicKey = $;
      var j = d.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
      }), rt = d.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(j), this.key("subjectPublicKey").bitstr());
      });
      asn1$1.PublicKey = rt;
      var et = d.define("PrivateKeyInfo", function() {
        this.seq().obj(this.key("version").int(), this.key("algorithm").use(j), this.key("subjectPrivateKey").octstr());
      });
      asn1$1.PrivateKey = et;
      var st = d.define("EncryptedPrivateKeyInfo", function() {
        this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
      });
      asn1$1.EncryptedPrivateKey = st;
      var pt = d.define("DSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
      });
      asn1$1.DSAPrivateKey = pt, asn1$1.DSAparam = d.define("DSAparam", function() {
        this.int();
      });
      var Et = d.define("ECParameters", function() {
        this.choice({
          namedCurve: this.objid()
        });
      }), Bt = d.define("ECPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(Et), this.key("publicKey").optional().explicit(1).bitstr());
      });
      return asn1$1.ECPrivateKey = Bt, asn1$1.signature = d.define("signature", function() {
        this.seq().obj(this.key("r").int(), this.key("s").int());
      }), asn1$1;
    }
    const require$$1$2 = {
      "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
      "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
      "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
      "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
      "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
      "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
      "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
      "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
      "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
      "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
      "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
      "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
    };
    var fixProc, hasRequiredFixProc;
    function requireFixProc() {
      if (hasRequiredFixProc) return fixProc;
      hasRequiredFixProc = 1;
      var d = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, _ = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, $ = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, j = requireEvp_bytestokey(), rt = requireBrowser$6(), et = requireSafeBuffer$1().Buffer;
      return fixProc = function(st, pt) {
        var Et = st.toString(), Bt = Et.match(d), St;
        if (Bt) {
          var kt = "aes" + Bt[1], Tt = et.from(Bt[2], "hex"), Pt = et.from(Bt[3].replace(/[\r\n]/g, ""), "base64"), It = j(pt, Tt.slice(0, 8), parseInt(Bt[1], 10)).key, jt = [], Dt = rt.createDecipheriv(kt, It, Tt);
          jt.push(Dt.update(Pt)), jt.push(Dt.final()), St = et.concat(jt);
        } else {
          var $t = Et.match($);
          St = et.from($t[2].replace(/[\r\n]/g, ""), "base64");
        }
        var Ot = Et.match(_)[1];
        return {
          tag: Ot,
          data: St
        };
      }, fixProc;
    }
    var parseAsn1, hasRequiredParseAsn1;
    function requireParseAsn1() {
      if (hasRequiredParseAsn1) return parseAsn1;
      hasRequiredParseAsn1 = 1;
      var d = requireAsn1(), _ = require$$1$2, $ = requireFixProc(), j = requireBrowser$6(), rt = requireBrowser$7(), et = requireSafeBuffer$1().Buffer;
      function st(Et, Bt) {
        var St = Et.algorithm.decrypt.kde.kdeparams.salt, $t = parseInt(Et.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), kt = _[Et.algorithm.decrypt.cipher.algo.join(".")], Tt = Et.algorithm.decrypt.cipher.iv, Pt = Et.subjectPrivateKey, It = parseInt(kt.split("-")[1], 10) / 8, jt = rt.pbkdf2Sync(Bt, St, $t, It, "sha1"), Dt = j.createDecipheriv(kt, jt, Tt), Ot = [];
        return Ot.push(Dt.update(Pt)), Ot.push(Dt.final()), et.concat(Ot);
      }
      function pt(Et) {
        var Bt;
        typeof Et == "object" && !et.isBuffer(Et) && (Bt = Et.passphrase, Et = Et.key), typeof Et == "string" && (Et = et.from(Et));
        var St = $(Et, Bt), $t = St.tag, kt = St.data, Tt, Pt;
        switch ($t) {
          case "CERTIFICATE":
            Pt = d.certificate.decode(kt, "der").tbsCertificate.subjectPublicKeyInfo;
          case "PUBLIC KEY":
            switch (Pt || (Pt = d.PublicKey.decode(kt, "der")), Tt = Pt.algorithm.algorithm.join("."), Tt) {
              case "1.2.840.113549.1.1.1":
                return d.RSAPublicKey.decode(Pt.subjectPublicKey.data, "der");
              case "1.2.840.10045.2.1":
                return Pt.subjectPrivateKey = Pt.subjectPublicKey, {
                  type: "ec",
                  data: Pt
                };
              case "1.2.840.10040.4.1":
                return Pt.algorithm.params.pub_key = d.DSAparam.decode(Pt.subjectPublicKey.data, "der"), {
                  type: "dsa",
                  data: Pt.algorithm.params
                };
              default:
                throw new Error("unknown key id " + Tt);
            }
          case "ENCRYPTED PRIVATE KEY":
            kt = d.EncryptedPrivateKey.decode(kt, "der"), kt = st(kt, Bt);
          case "PRIVATE KEY":
            switch (Pt = d.PrivateKey.decode(kt, "der"), Tt = Pt.algorithm.algorithm.join("."), Tt) {
              case "1.2.840.113549.1.1.1":
                return d.RSAPrivateKey.decode(Pt.subjectPrivateKey, "der");
              case "1.2.840.10045.2.1":
                return {
                  curve: Pt.algorithm.curve,
                  privateKey: d.ECPrivateKey.decode(Pt.subjectPrivateKey, "der").privateKey
                };
              case "1.2.840.10040.4.1":
                return Pt.algorithm.params.priv_key = d.DSAparam.decode(Pt.subjectPrivateKey, "der"), {
                  type: "dsa",
                  params: Pt.algorithm.params
                };
              default:
                throw new Error("unknown key id " + Tt);
            }
          case "RSA PUBLIC KEY":
            return d.RSAPublicKey.decode(kt, "der");
          case "RSA PRIVATE KEY":
            return d.RSAPrivateKey.decode(kt, "der");
          case "DSA PRIVATE KEY":
            return {
              type: "dsa",
              params: d.DSAPrivateKey.decode(kt, "der")
            };
          case "EC PRIVATE KEY":
            return kt = d.ECPrivateKey.decode(kt, "der"), {
              curve: kt.parameters.value,
              privateKey: kt.privateKey
            };
          default:
            throw new Error("unknown key type " + $t);
        }
      }
      return pt.signature = d.signature, parseAsn1 = pt, parseAsn1;
    }
    const require$$4$1 = {
      "1.3.132.0.10": "secp256k1",
      "1.3.132.0.33": "p224",
      "1.2.840.10045.3.1.1": "p192",
      "1.2.840.10045.3.1.7": "p256",
      "1.3.132.0.34": "p384",
      "1.3.132.0.35": "p521"
    };
    var hasRequiredSign;
    function requireSign() {
      if (hasRequiredSign) return sign$1.exports;
      hasRequiredSign = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireBrowser$8(), $ = requireBrowserifyRsa(), j = requireElliptic().ec, rt = requireBn$3(), et = requireParseAsn1(), st = require$$4$1, pt = 1;
      function Et(Dt, Ot, Ft, Lt, Zt) {
        var Kt = et(Ot);
        if (Kt.curve) {
          if (Lt !== "ecdsa" && Lt !== "ecdsa/rsa") throw new Error("wrong private key type");
          return Bt(Dt, Kt);
        } else if (Kt.type === "dsa") {
          if (Lt !== "dsa") throw new Error("wrong private key type");
          return St(Dt, Kt, Ft);
        }
        if (Lt !== "rsa" && Lt !== "ecdsa/rsa") throw new Error("wrong private key type");
        if (Ot.padding !== void 0 && Ot.padding !== pt) throw new Error("illegal or unsupported padding mode");
        Dt = d.concat([
          Zt,
          Dt
        ]);
        for (var ar = Kt.modulus.byteLength(), sr = [
          0,
          1
        ]; Dt.length + sr.length + 1 < ar; ) sr.push(255);
        sr.push(0);
        for (var er = -1; ++er < Dt.length; ) sr.push(Dt[er]);
        var Ut = $(sr, Kt);
        return Ut;
      }
      function Bt(Dt, Ot) {
        var Ft = st[Ot.curve.join(".")];
        if (!Ft) throw new Error("unknown curve " + Ot.curve.join("."));
        var Lt = new j(Ft), Zt = Lt.keyFromPrivate(Ot.privateKey), Kt = Zt.sign(Dt);
        return d.from(Kt.toDER());
      }
      function St(Dt, Ot, Ft) {
        for (var Lt = Ot.params.priv_key, Zt = Ot.params.p, Kt = Ot.params.q, ar = Ot.params.g, sr = new rt(0), er, Ut = Tt(Dt, Kt).mod(Kt), xt = false, tt = kt(Lt, Kt, Dt, Ft); xt === false; ) er = It(Kt, tt, Ft), sr = jt(ar, er, Zt, Kt), xt = er.invm(Kt).imul(Ut.add(Lt.mul(sr))).mod(Kt), xt.cmpn(0) === 0 && (xt = false, sr = new rt(0));
        return $t(sr, xt);
      }
      function $t(Dt, Ot) {
        Dt = Dt.toArray(), Ot = Ot.toArray(), Dt[0] & 128 && (Dt = [
          0
        ].concat(Dt)), Ot[0] & 128 && (Ot = [
          0
        ].concat(Ot));
        var Ft = Dt.length + Ot.length + 4, Lt = [
          48,
          Ft,
          2,
          Dt.length
        ];
        return Lt = Lt.concat(Dt, [
          2,
          Ot.length
        ], Ot), d.from(Lt);
      }
      function kt(Dt, Ot, Ft, Lt) {
        if (Dt = d.from(Dt.toArray()), Dt.length < Ot.byteLength()) {
          var Zt = d.alloc(Ot.byteLength() - Dt.length);
          Dt = d.concat([
            Zt,
            Dt
          ]);
        }
        var Kt = Ft.length, ar = Pt(Ft, Ot), sr = d.alloc(Kt);
        sr.fill(1);
        var er = d.alloc(Kt);
        return er = _(Lt, er).update(sr).update(d.from([
          0
        ])).update(Dt).update(ar).digest(), sr = _(Lt, er).update(sr).digest(), er = _(Lt, er).update(sr).update(d.from([
          1
        ])).update(Dt).update(ar).digest(), sr = _(Lt, er).update(sr).digest(), {
          k: er,
          v: sr
        };
      }
      function Tt(Dt, Ot) {
        var Ft = new rt(Dt), Lt = (Dt.length << 3) - Ot.bitLength();
        return Lt > 0 && Ft.ishrn(Lt), Ft;
      }
      function Pt(Dt, Ot) {
        Dt = Tt(Dt, Ot), Dt = Dt.mod(Ot);
        var Ft = d.from(Dt.toArray());
        if (Ft.length < Ot.byteLength()) {
          var Lt = d.alloc(Ot.byteLength() - Ft.length);
          Ft = d.concat([
            Lt,
            Ft
          ]);
        }
        return Ft;
      }
      function It(Dt, Ot, Ft) {
        var Lt, Zt;
        do {
          for (Lt = d.alloc(0); Lt.length * 8 < Dt.bitLength(); ) Ot.v = _(Ft, Ot.k).update(Ot.v).digest(), Lt = d.concat([
            Lt,
            Ot.v
          ]);
          Zt = Tt(Lt, Dt), Ot.k = _(Ft, Ot.k).update(Ot.v).update(d.from([
            0
          ])).digest(), Ot.v = _(Ft, Ot.k).update(Ot.v).digest();
        } while (Zt.cmp(Dt) !== -1);
        return Zt;
      }
      function jt(Dt, Ot, Ft, Lt) {
        return Dt.toRed(rt.mont(Ft)).redPow(Ot).fromRed().mod(Lt);
      }
      return sign$1.exports = Et, sign$1.exports.getKey = kt, sign$1.exports.makeKey = It, sign$1.exports;
    }
    var verify_1, hasRequiredVerify;
    function requireVerify() {
      if (hasRequiredVerify) return verify_1;
      hasRequiredVerify = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireBn$3(), $ = requireElliptic().ec, j = requireParseAsn1(), rt = require$$4$1;
      function et(Bt, St, $t, kt, Tt) {
        var Pt = j($t);
        if (Pt.type === "ec") {
          if (kt !== "ecdsa" && kt !== "ecdsa/rsa") throw new Error("wrong public key type");
          return st(Bt, St, Pt);
        } else if (Pt.type === "dsa") {
          if (kt !== "dsa") throw new Error("wrong public key type");
          return pt(Bt, St, Pt);
        }
        if (kt !== "rsa" && kt !== "ecdsa/rsa") throw new Error("wrong public key type");
        St = d.concat([
          Tt,
          St
        ]);
        for (var It = Pt.modulus.byteLength(), jt = [
          1
        ], Dt = 0; St.length + jt.length + 2 < It; ) jt.push(255), Dt += 1;
        jt.push(0);
        for (var Ot = -1; ++Ot < St.length; ) jt.push(St[Ot]);
        jt = d.from(jt);
        var Ft = _.mont(Pt.modulus);
        Bt = new _(Bt).toRed(Ft), Bt = Bt.redPow(new _(Pt.publicExponent)), Bt = d.from(Bt.fromRed().toArray());
        var Lt = Dt < 8 ? 1 : 0;
        for (It = Math.min(Bt.length, jt.length), Bt.length !== jt.length && (Lt = 1), Ot = -1; ++Ot < It; ) Lt |= Bt[Ot] ^ jt[Ot];
        return Lt === 0;
      }
      function st(Bt, St, $t) {
        var kt = rt[$t.data.algorithm.curve.join(".")];
        if (!kt) throw new Error("unknown curve " + $t.data.algorithm.curve.join("."));
        var Tt = new $(kt), Pt = $t.data.subjectPrivateKey.data;
        return Tt.verify(St, Bt, Pt);
      }
      function pt(Bt, St, $t) {
        var kt = $t.data.p, Tt = $t.data.q, Pt = $t.data.g, It = $t.data.pub_key, jt = j.signature.decode(Bt, "der"), Dt = jt.s, Ot = jt.r;
        Et(Dt, Tt), Et(Ot, Tt);
        var Ft = _.mont(kt), Lt = Dt.invm(Tt), Zt = Pt.toRed(Ft).redPow(new _(St).mul(Lt).mod(Tt)).fromRed().mul(It.toRed(Ft).redPow(Ot.mul(Lt).mod(Tt)).fromRed()).mod(kt).mod(Tt);
        return Zt.cmp(Ot) === 0;
      }
      function Et(Bt, St) {
        if (Bt.cmpn(0) <= 0) throw new Error("invalid sig");
        if (Bt.cmp(St) >= 0) throw new Error("invalid sig");
      }
      return verify_1 = et, verify_1;
    }
    var browser$6, hasRequiredBrowser$3;
    function requireBrowser$3() {
      if (hasRequiredBrowser$3) return browser$6;
      hasRequiredBrowser$3 = 1;
      var d = requireSafeBuffer$1().Buffer, _ = requireBrowser$9(), $ = requireReadableBrowser(), j = requireInherits_browser(), rt = requireSign(), et = requireVerify(), st = require$$6;
      Object.keys(st).forEach(function($t) {
        st[$t].id = d.from(st[$t].id, "hex"), st[$t.toLowerCase()] = st[$t];
      });
      function pt($t) {
        $.Writable.call(this);
        var kt = st[$t];
        if (!kt) throw new Error("Unknown message digest");
        this._hashType = kt.hash, this._hash = _(kt.hash), this._tag = kt.id, this._signType = kt.sign;
      }
      j(pt, $.Writable), pt.prototype._write = function(kt, Tt, Pt) {
        this._hash.update(kt), Pt();
      }, pt.prototype.update = function(kt, Tt) {
        return this._hash.update(typeof kt == "string" ? d.from(kt, Tt) : kt), this;
      }, pt.prototype.sign = function(kt, Tt) {
        this.end();
        var Pt = this._hash.digest(), It = rt(Pt, kt, this._hashType, this._signType, this._tag);
        return Tt ? It.toString(Tt) : It;
      };
      function Et($t) {
        $.Writable.call(this);
        var kt = st[$t];
        if (!kt) throw new Error("Unknown message digest");
        this._hash = _(kt.hash), this._tag = kt.id, this._signType = kt.sign;
      }
      j(Et, $.Writable), Et.prototype._write = function(kt, Tt, Pt) {
        this._hash.update(kt), Pt();
      }, Et.prototype.update = function(kt, Tt) {
        return this._hash.update(typeof kt == "string" ? d.from(kt, Tt) : kt), this;
      }, Et.prototype.verify = function(kt, Tt, Pt) {
        var It = typeof Tt == "string" ? d.from(Tt, Pt) : Tt;
        this.end();
        var jt = this._hash.digest();
        return et(It, jt, kt, this._signType, this._tag);
      };
      function Bt($t) {
        return new pt($t);
      }
      function St($t) {
        return new Et($t);
      }
      return browser$6 = {
        Sign: Bt,
        Verify: St,
        createSign: Bt,
        createVerify: St
      }, browser$6;
    }
    var bn$4 = {
      exports: {}
    };
    bn$4.exports;
    var hasRequiredBn$1;
    function requireBn$1() {
      return hasRequiredBn$1 || (hasRequiredBn$1 = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$4)), bn$4.exports;
    }
    var browser$5, hasRequiredBrowser$2;
    function requireBrowser$2() {
      if (hasRequiredBrowser$2) return browser$5;
      hasRequiredBrowser$2 = 1;
      var d = requireElliptic(), _ = requireBn$1();
      browser$5 = function(st) {
        return new j(st);
      };
      var $ = {
        secp256k1: {
          name: "secp256k1",
          byteLength: 32
        },
        secp224r1: {
          name: "p224",
          byteLength: 28
        },
        prime256v1: {
          name: "p256",
          byteLength: 32
        },
        prime192v1: {
          name: "p192",
          byteLength: 24
        },
        ed25519: {
          name: "ed25519",
          byteLength: 32
        },
        secp384r1: {
          name: "p384",
          byteLength: 48
        },
        secp521r1: {
          name: "p521",
          byteLength: 66
        }
      };
      $.p224 = $.secp224r1, $.p256 = $.secp256r1 = $.prime256v1, $.p192 = $.secp192r1 = $.prime192v1, $.p384 = $.secp384r1, $.p521 = $.secp521r1;
      function j(et) {
        this.curveType = $[et], this.curveType || (this.curveType = {
          name: et
        }), this.curve = new d.ec(this.curveType.name), this.keys = void 0;
      }
      j.prototype.generateKeys = function(et, st) {
        return this.keys = this.curve.genKeyPair(), this.getPublicKey(et, st);
      }, j.prototype.computeSecret = function(et, st, pt) {
        st = st || "utf8", Buffer.isBuffer(et) || (et = new Buffer(et, st));
        var Et = this.curve.keyFromPublic(et).getPublic(), Bt = Et.mul(this.keys.getPrivate()).getX();
        return rt(Bt, pt, this.curveType.byteLength);
      }, j.prototype.getPublicKey = function(et, st) {
        var pt = this.keys.getPublic(st === "compressed", true);
        return st === "hybrid" && (pt[pt.length - 1] % 2 ? pt[0] = 7 : pt[0] = 6), rt(pt, et);
      }, j.prototype.getPrivateKey = function(et) {
        return rt(this.keys.getPrivate(), et);
      }, j.prototype.setPublicKey = function(et, st) {
        return st = st || "utf8", Buffer.isBuffer(et) || (et = new Buffer(et, st)), this.keys._importPublic(et), this;
      }, j.prototype.setPrivateKey = function(et, st) {
        st = st || "utf8", Buffer.isBuffer(et) || (et = new Buffer(et, st));
        var pt = new _(et);
        return pt = pt.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(pt), this;
      };
      function rt(et, st, pt) {
        Array.isArray(et) || (et = et.toArray());
        var Et = new Buffer(et);
        if (pt && Et.length < pt) {
          var Bt = new Buffer(pt - Et.length);
          Bt.fill(0), Et = Buffer.concat([
            Bt,
            Et
          ]);
        }
        return st ? Et.toString(st) : Et;
      }
      return browser$5;
    }
    var browser$4 = {}, mgf, hasRequiredMgf;
    function requireMgf() {
      if (hasRequiredMgf) return mgf;
      hasRequiredMgf = 1;
      var d = requireBrowser$9(), _ = requireSafeBuffer$1().Buffer;
      mgf = function(j, rt) {
        for (var et = _.alloc(0), st = 0, pt; et.length < rt; ) pt = $(st++), et = _.concat([
          et,
          d("sha1").update(j).update(pt).digest()
        ]);
        return et.slice(0, rt);
      };
      function $(j) {
        var rt = _.allocUnsafe(4);
        return rt.writeUInt32BE(j, 0), rt;
      }
      return mgf;
    }
    var xor, hasRequiredXor;
    function requireXor() {
      return hasRequiredXor || (hasRequiredXor = 1, xor = function(_, $) {
        for (var j = _.length, rt = -1; ++rt < j; ) _[rt] ^= $[rt];
        return _;
      }), xor;
    }
    var bn$3 = {
      exports: {}
    };
    bn$3.exports;
    var hasRequiredBn;
    function requireBn() {
      return hasRequiredBn || (hasRequiredBn = 1, function(d) {
        (function(_, $) {
          function j(xt, tt) {
            if (!xt) throw new Error(tt || "Assertion failed");
          }
          function rt(xt, tt) {
            xt.super_ = tt;
            var nt = function() {
            };
            nt.prototype = tt.prototype, xt.prototype = new nt(), xt.prototype.constructor = xt;
          }
          function et(xt, tt, nt) {
            if (et.isBN(xt)) return xt;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, xt !== null && ((tt === "le" || tt === "be") && (nt = tt, tt = 10), this._init(xt || 0, tt || 10, nt || "be"));
          }
          typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
          var st;
          try {
            typeof window < "u" && typeof window.Buffer < "u" ? st = window.Buffer : st = require$$0$2.Buffer;
          } catch {
          }
          et.isBN = function(tt) {
            return tt instanceof et ? true : tt !== null && typeof tt == "object" && tt.constructor.wordSize === et.wordSize && Array.isArray(tt.words);
          }, et.max = function(tt, nt) {
            return tt.cmp(nt) > 0 ? tt : nt;
          }, et.min = function(tt, nt) {
            return tt.cmp(nt) < 0 ? tt : nt;
          }, et.prototype._init = function(tt, nt, it) {
            if (typeof tt == "number") return this._initNumber(tt, nt, it);
            if (typeof tt == "object") return this._initArray(tt, nt, it);
            nt === "hex" && (nt = 16), j(nt === (nt | 0) && nt >= 2 && nt <= 36), tt = tt.toString().replace(/\s+/g, "");
            var at = 0;
            tt[0] === "-" && (at++, this.negative = 1), at < tt.length && (nt === 16 ? this._parseHex(tt, at, it) : (this._parseBase(tt, nt, at), it === "le" && this._initArray(this.toArray(), nt, it)));
          }, et.prototype._initNumber = function(tt, nt, it) {
            tt < 0 && (this.negative = 1, tt = -tt), tt < 67108864 ? (this.words = [
              tt & 67108863
            ], this.length = 1) : tt < 4503599627370496 ? (this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863
            ], this.length = 2) : (j(tt < 9007199254740992), this.words = [
              tt & 67108863,
              tt / 67108864 & 67108863,
              1
            ], this.length = 3), it === "le" && this._initArray(this.toArray(), nt, it);
          }, et.prototype._initArray = function(tt, nt, it) {
            if (j(typeof tt.length == "number"), tt.length <= 0) return this.words = [
              0
            ], this.length = 1, this;
            this.length = Math.ceil(tt.length / 3), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct, Mt, At = 0;
            if (it === "be") for (at = tt.length - 1, ct = 0; at >= 0; at -= 3) Mt = tt[at] | tt[at - 1] << 8 | tt[at - 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            else if (it === "le") for (at = 0, ct = 0; at < tt.length; at += 3) Mt = tt[at] | tt[at + 1] << 8 | tt[at + 2] << 16, this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] = Mt >>> 26 - At & 67108863, At += 24, At >= 26 && (At -= 26, ct++);
            return this.strip();
          };
          function pt(xt, tt) {
            var nt = xt.charCodeAt(tt);
            return nt >= 65 && nt <= 70 ? nt - 55 : nt >= 97 && nt <= 102 ? nt - 87 : nt - 48 & 15;
          }
          function Et(xt, tt, nt) {
            var it = pt(xt, nt);
            return nt - 1 >= tt && (it |= pt(xt, nt - 1) << 4), it;
          }
          et.prototype._parseHex = function(tt, nt, it) {
            this.length = Math.ceil((tt.length - nt) / 6), this.words = new Array(this.length);
            for (var at = 0; at < this.length; at++) this.words[at] = 0;
            var ct = 0, Mt = 0, At;
            if (it === "be") for (at = tt.length - 1; at >= nt; at -= 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            else {
              var ut = tt.length - nt;
              for (at = ut % 2 === 0 ? nt + 1 : nt; at < tt.length; at += 2) At = Et(tt, nt, at) << ct, this.words[Mt] |= At & 67108863, ct >= 18 ? (ct -= 18, Mt += 1, this.words[Mt] |= At >>> 26) : ct += 8;
            }
            this.strip();
          };
          function Bt(xt, tt, nt, it) {
            for (var at = 0, ct = Math.min(xt.length, nt), Mt = tt; Mt < ct; Mt++) {
              var At = xt.charCodeAt(Mt) - 48;
              at *= it, At >= 49 ? at += At - 49 + 10 : At >= 17 ? at += At - 17 + 10 : at += At;
            }
            return at;
          }
          et.prototype._parseBase = function(tt, nt, it) {
            this.words = [
              0
            ], this.length = 1;
            for (var at = 0, ct = 1; ct <= 67108863; ct *= nt) at++;
            at--, ct = ct / nt | 0;
            for (var Mt = tt.length - it, At = Mt % at, ut = Math.min(Mt, Mt - At) + it, ot = 0, Ct = it; Ct < ut; Ct += at) ot = Bt(tt, Ct, Ct + at, nt), this.imuln(ct), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            if (At !== 0) {
              var Rt = 1;
              for (ot = Bt(tt, Ct, tt.length, nt), Ct = 0; Ct < At; Ct++) Rt *= nt;
              this.imuln(Rt), this.words[0] + ot < 67108864 ? this.words[0] += ot : this._iaddn(ot);
            }
            this.strip();
          }, et.prototype.copy = function(tt) {
            tt.words = new Array(this.length);
            for (var nt = 0; nt < this.length; nt++) tt.words[nt] = this.words[nt];
            tt.length = this.length, tt.negative = this.negative, tt.red = this.red;
          }, et.prototype.clone = function() {
            var tt = new et(null);
            return this.copy(tt), tt;
          }, et.prototype._expand = function(tt) {
            for (; this.length < tt; ) this.words[this.length++] = 0;
            return this;
          }, et.prototype.strip = function() {
            for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
            return this._normSign();
          }, et.prototype._normSign = function() {
            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
          }, et.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          };
          var St = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ], $t = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ], kt = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
          et.prototype.toString = function(tt, nt) {
            tt = tt || 10, nt = nt | 0 || 1;
            var it;
            if (tt === 16 || tt === "hex") {
              it = "";
              for (var at = 0, ct = 0, Mt = 0; Mt < this.length; Mt++) {
                var At = this.words[Mt], ut = ((At << at | ct) & 16777215).toString(16);
                ct = At >>> 24 - at & 16777215, at += 2, at >= 26 && (at -= 26, Mt--), ct !== 0 || Mt !== this.length - 1 ? it = St[6 - ut.length] + ut + it : it = ut + it;
              }
              for (ct !== 0 && (it = ct.toString(16) + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            if (tt === (tt | 0) && tt >= 2 && tt <= 36) {
              var ot = $t[tt], Ct = kt[tt];
              it = "";
              var Rt = this.clone();
              for (Rt.negative = 0; !Rt.isZero(); ) {
                var Nt = Rt.modn(Ct).toString(tt);
                Rt = Rt.idivn(Ct), Rt.isZero() ? it = Nt + it : it = St[ot - Nt.length] + Nt + it;
              }
              for (this.isZero() && (it = "0" + it); it.length % nt !== 0; ) it = "0" + it;
              return this.negative !== 0 && (it = "-" + it), it;
            }
            j(false, "Base should be between 2 and 36");
          }, et.prototype.toNumber = function() {
            var tt = this.words[0];
            return this.length === 2 ? tt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? tt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -tt : tt;
          }, et.prototype.toJSON = function() {
            return this.toString(16);
          }, et.prototype.toBuffer = function(tt, nt) {
            return j(typeof st < "u"), this.toArrayLike(st, tt, nt);
          }, et.prototype.toArray = function(tt, nt) {
            return this.toArrayLike(Array, tt, nt);
          }, et.prototype.toArrayLike = function(tt, nt, it) {
            var at = this.byteLength(), ct = it || Math.max(1, at);
            j(at <= ct, "byte array longer than desired length"), j(ct > 0, "Requested array length <= 0"), this.strip();
            var Mt = nt === "le", At = new tt(ct), ut, ot, Ct = this.clone();
            if (Mt) {
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ot] = ut;
              for (; ot < ct; ot++) At[ot] = 0;
            } else {
              for (ot = 0; ot < ct - at; ot++) At[ot] = 0;
              for (ot = 0; !Ct.isZero(); ot++) ut = Ct.andln(255), Ct.iushrn(8), At[ct - ot - 1] = ut;
            }
            return At;
          }, Math.clz32 ? et.prototype._countBits = function(tt) {
            return 32 - Math.clz32(tt);
          } : et.prototype._countBits = function(tt) {
            var nt = tt, it = 0;
            return nt >= 4096 && (it += 13, nt >>>= 13), nt >= 64 && (it += 7, nt >>>= 7), nt >= 8 && (it += 4, nt >>>= 4), nt >= 2 && (it += 2, nt >>>= 2), it + nt;
          }, et.prototype._zeroBits = function(tt) {
            if (tt === 0) return 26;
            var nt = tt, it = 0;
            return nt & 8191 || (it += 13, nt >>>= 13), nt & 127 || (it += 7, nt >>>= 7), nt & 15 || (it += 4, nt >>>= 4), nt & 3 || (it += 2, nt >>>= 2), nt & 1 || it++, it;
          }, et.prototype.bitLength = function() {
            var tt = this.words[this.length - 1], nt = this._countBits(tt);
            return (this.length - 1) * 26 + nt;
          };
          function Tt(xt) {
            for (var tt = new Array(xt.bitLength()), nt = 0; nt < tt.length; nt++) {
              var it = nt / 26 | 0, at = nt % 26;
              tt[nt] = (xt.words[it] & 1 << at) >>> at;
            }
            return tt;
          }
          et.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var tt = 0, nt = 0; nt < this.length; nt++) {
              var it = this._zeroBits(this.words[nt]);
              if (tt += it, it !== 26) break;
            }
            return tt;
          }, et.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, et.prototype.toTwos = function(tt) {
            return this.negative !== 0 ? this.abs().inotn(tt).iaddn(1) : this.clone();
          }, et.prototype.fromTwos = function(tt) {
            return this.testn(tt - 1) ? this.notn(tt).iaddn(1).ineg() : this.clone();
          }, et.prototype.isNeg = function() {
            return this.negative !== 0;
          }, et.prototype.neg = function() {
            return this.clone().ineg();
          }, et.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, et.prototype.iuor = function(tt) {
            for (; this.length < tt.length; ) this.words[this.length++] = 0;
            for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] | tt.words[nt];
            return this.strip();
          }, et.prototype.ior = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuor(tt);
          }, et.prototype.or = function(tt) {
            return this.length > tt.length ? this.clone().ior(tt) : tt.clone().ior(this);
          }, et.prototype.uor = function(tt) {
            return this.length > tt.length ? this.clone().iuor(tt) : tt.clone().iuor(this);
          }, et.prototype.iuand = function(tt) {
            var nt;
            this.length > tt.length ? nt = tt : nt = this;
            for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] & tt.words[it];
            return this.length = nt.length, this.strip();
          }, et.prototype.iand = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuand(tt);
          }, et.prototype.and = function(tt) {
            return this.length > tt.length ? this.clone().iand(tt) : tt.clone().iand(this);
          }, et.prototype.uand = function(tt) {
            return this.length > tt.length ? this.clone().iuand(tt) : tt.clone().iuand(this);
          }, et.prototype.iuxor = function(tt) {
            var nt, it;
            this.length > tt.length ? (nt = this, it = tt) : (nt = tt, it = this);
            for (var at = 0; at < it.length; at++) this.words[at] = nt.words[at] ^ it.words[at];
            if (this !== nt) for (; at < nt.length; at++) this.words[at] = nt.words[at];
            return this.length = nt.length, this.strip();
          }, et.prototype.ixor = function(tt) {
            return j((this.negative | tt.negative) === 0), this.iuxor(tt);
          }, et.prototype.xor = function(tt) {
            return this.length > tt.length ? this.clone().ixor(tt) : tt.clone().ixor(this);
          }, et.prototype.uxor = function(tt) {
            return this.length > tt.length ? this.clone().iuxor(tt) : tt.clone().iuxor(this);
          }, et.prototype.inotn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = Math.ceil(tt / 26) | 0, it = tt % 26;
            this._expand(nt), it > 0 && nt--;
            for (var at = 0; at < nt; at++) this.words[at] = ~this.words[at] & 67108863;
            return it > 0 && (this.words[at] = ~this.words[at] & 67108863 >> 26 - it), this.strip();
          }, et.prototype.notn = function(tt) {
            return this.clone().inotn(tt);
          }, et.prototype.setn = function(tt, nt) {
            j(typeof tt == "number" && tt >= 0);
            var it = tt / 26 | 0, at = tt % 26;
            return this._expand(it + 1), nt ? this.words[it] = this.words[it] | 1 << at : this.words[it] = this.words[it] & ~(1 << at), this.strip();
          }, et.prototype.iadd = function(tt) {
            var nt;
            if (this.negative !== 0 && tt.negative === 0) return this.negative = 0, nt = this.isub(tt), this.negative ^= 1, this._normSign();
            if (this.negative === 0 && tt.negative !== 0) return tt.negative = 0, nt = this.isub(tt), tt.negative = 1, nt._normSign();
            var it, at;
            this.length > tt.length ? (it = this, at = tt) : (it = tt, at = this);
            for (var ct = 0, Mt = 0; Mt < at.length; Mt++) nt = (it.words[Mt] | 0) + (at.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            for (; ct !== 0 && Mt < it.length; Mt++) nt = (it.words[Mt] | 0) + ct, this.words[Mt] = nt & 67108863, ct = nt >>> 26;
            if (this.length = it.length, ct !== 0) this.words[this.length] = ct, this.length++;
            else if (it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
            return this;
          }, et.prototype.add = function(tt) {
            var nt;
            return tt.negative !== 0 && this.negative === 0 ? (tt.negative = 0, nt = this.sub(tt), tt.negative ^= 1, nt) : tt.negative === 0 && this.negative !== 0 ? (this.negative = 0, nt = tt.sub(this), this.negative = 1, nt) : this.length > tt.length ? this.clone().iadd(tt) : tt.clone().iadd(this);
          }, et.prototype.isub = function(tt) {
            if (tt.negative !== 0) {
              tt.negative = 0;
              var nt = this.iadd(tt);
              return tt.negative = 1, nt._normSign();
            } else if (this.negative !== 0) return this.negative = 0, this.iadd(tt), this.negative = 1, this._normSign();
            var it = this.cmp(tt);
            if (it === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            var at, ct;
            it > 0 ? (at = this, ct = tt) : (at = tt, ct = this);
            for (var Mt = 0, At = 0; At < ct.length; At++) nt = (at.words[At] | 0) - (ct.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            for (; Mt !== 0 && At < at.length; At++) nt = (at.words[At] | 0) + Mt, Mt = nt >> 26, this.words[At] = nt & 67108863;
            if (Mt === 0 && At < at.length && at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
            return this.length = Math.max(this.length, At), at !== this && (this.negative = 1), this.strip();
          }, et.prototype.sub = function(tt) {
            return this.clone().isub(tt);
          };
          function Pt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative;
            var it = xt.length + tt.length | 0;
            nt.length = it, it = it - 1 | 0;
            var at = xt.words[0] | 0, ct = tt.words[0] | 0, Mt = at * ct, At = Mt & 67108863, ut = Mt / 67108864 | 0;
            nt.words[0] = At;
            for (var ot = 1; ot < it; ot++) {
              for (var Ct = ut >>> 26, Rt = ut & 67108863, Nt = Math.min(ot, tt.length - 1), Wt = Math.max(0, ot - xt.length + 1); Wt <= Nt; Wt++) {
                var Xt = ot - Wt | 0;
                at = xt.words[Xt] | 0, ct = tt.words[Wt] | 0, Mt = at * ct + Rt, Ct += Mt / 67108864 | 0, Rt = Mt & 67108863;
              }
              nt.words[ot] = Rt | 0, ut = Ct | 0;
            }
            return ut !== 0 ? nt.words[ot] = ut | 0 : nt.length--, nt.strip();
          }
          var It = function(tt, nt, it) {
            var at = tt.words, ct = nt.words, Mt = it.words, At = 0, ut, ot, Ct, Rt = at[0] | 0, Nt = Rt & 8191, Wt = Rt >>> 13, Xt = at[1] | 0, rr = Xt & 8191, Gt = Xt >>> 13, Yt = at[2] | 0, tr = Yt & 8191, cr = Yt >>> 13, ir = at[3] | 0, Jt = ir & 8191, vr = ir >>> 13, Br = at[4] | 0, _r = Br & 8191, $r = Br >>> 13, Ur = at[5] | 0, Sr = Ur & 8191, Mr = Ur >>> 13, Kr = at[6] | 0, kr = Kr & 8191, Lr = Kr >>> 13, Gr = at[7] | 0, Tr = Gr & 8191, yr = Gr >>> 13, fr = at[8] | 0, dr = fr & 8191, gr = fr >>> 13, Er = at[9] | 0, zt = Er & 8191, qt = Er >>> 13, Vt = ct[0] | 0, Qt = Vt & 8191, hr = Vt >>> 13, br = ct[1] | 0, pr = br & 8191, Rr = br >>> 13, qr = ct[2] | 0, xr = qr & 8191, Fr = qr >>> 13, zr = ct[3] | 0, Pr = zr & 8191, Wr = zr >>> 13, tn = ct[4] | 0, Nr = tn & 8191, Hr = tn >>> 13, rn = ct[5] | 0, jr = rn & 8191, Yr = rn >>> 13, nn = ct[6] | 0, Or = nn & 8191, Xr = nn >>> 13, nr = ct[7] | 0, or = nr & 8191, ur = nr >>> 13, Ht = ct[8] | 0, lr = Ht & 8191, wr = Ht >>> 13, Ar = ct[9] | 0, Cr = Ar & 8191, Ir = Ar >>> 13;
            it.negative = tt.negative ^ nt.negative, it.length = 19, ut = Math.imul(Nt, Qt), ot = Math.imul(Nt, hr), ot = ot + Math.imul(Wt, Qt) | 0, Ct = Math.imul(Wt, hr);
            var Jr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, ut = Math.imul(rr, Qt), ot = Math.imul(rr, hr), ot = ot + Math.imul(Gt, Qt) | 0, Ct = Math.imul(Gt, hr), ut = ut + Math.imul(Nt, pr) | 0, ot = ot + Math.imul(Nt, Rr) | 0, ot = ot + Math.imul(Wt, pr) | 0, Ct = Ct + Math.imul(Wt, Rr) | 0;
            var Qr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ut = Math.imul(tr, Qt), ot = Math.imul(tr, hr), ot = ot + Math.imul(cr, Qt) | 0, Ct = Math.imul(cr, hr), ut = ut + Math.imul(rr, pr) | 0, ot = ot + Math.imul(rr, Rr) | 0, ot = ot + Math.imul(Gt, pr) | 0, Ct = Ct + Math.imul(Gt, Rr) | 0, ut = ut + Math.imul(Nt, xr) | 0, ot = ot + Math.imul(Nt, Fr) | 0, ot = ot + Math.imul(Wt, xr) | 0, Ct = Ct + Math.imul(Wt, Fr) | 0;
            var Sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ut = Math.imul(Jt, Qt), ot = Math.imul(Jt, hr), ot = ot + Math.imul(vr, Qt) | 0, Ct = Math.imul(vr, hr), ut = ut + Math.imul(tr, pr) | 0, ot = ot + Math.imul(tr, Rr) | 0, ot = ot + Math.imul(cr, pr) | 0, Ct = Ct + Math.imul(cr, Rr) | 0, ut = ut + Math.imul(rr, xr) | 0, ot = ot + Math.imul(rr, Fr) | 0, ot = ot + Math.imul(Gt, xr) | 0, Ct = Ct + Math.imul(Gt, Fr) | 0, ut = ut + Math.imul(Nt, Pr) | 0, ot = ot + Math.imul(Nt, Wr) | 0, ot = ot + Math.imul(Wt, Pr) | 0, Ct = Ct + Math.imul(Wt, Wr) | 0;
            var dn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ut = Math.imul(_r, Qt), ot = Math.imul(_r, hr), ot = ot + Math.imul($r, Qt) | 0, Ct = Math.imul($r, hr), ut = ut + Math.imul(Jt, pr) | 0, ot = ot + Math.imul(Jt, Rr) | 0, ot = ot + Math.imul(vr, pr) | 0, Ct = Ct + Math.imul(vr, Rr) | 0, ut = ut + Math.imul(tr, xr) | 0, ot = ot + Math.imul(tr, Fr) | 0, ot = ot + Math.imul(cr, xr) | 0, Ct = Ct + Math.imul(cr, Fr) | 0, ut = ut + Math.imul(rr, Pr) | 0, ot = ot + Math.imul(rr, Wr) | 0, ot = ot + Math.imul(Gt, Pr) | 0, Ct = Ct + Math.imul(Gt, Wr) | 0, ut = ut + Math.imul(Nt, Nr) | 0, ot = ot + Math.imul(Nt, Hr) | 0, ot = ot + Math.imul(Wt, Nr) | 0, Ct = Ct + Math.imul(Wt, Hr) | 0;
            var yn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ut = Math.imul(Sr, Qt), ot = Math.imul(Sr, hr), ot = ot + Math.imul(Mr, Qt) | 0, Ct = Math.imul(Mr, hr), ut = ut + Math.imul(_r, pr) | 0, ot = ot + Math.imul(_r, Rr) | 0, ot = ot + Math.imul($r, pr) | 0, Ct = Ct + Math.imul($r, Rr) | 0, ut = ut + Math.imul(Jt, xr) | 0, ot = ot + Math.imul(Jt, Fr) | 0, ot = ot + Math.imul(vr, xr) | 0, Ct = Ct + Math.imul(vr, Fr) | 0, ut = ut + Math.imul(tr, Pr) | 0, ot = ot + Math.imul(tr, Wr) | 0, ot = ot + Math.imul(cr, Pr) | 0, Ct = Ct + Math.imul(cr, Wr) | 0, ut = ut + Math.imul(rr, Nr) | 0, ot = ot + Math.imul(rr, Hr) | 0, ot = ot + Math.imul(Gt, Nr) | 0, Ct = Ct + Math.imul(Gt, Hr) | 0, ut = ut + Math.imul(Nt, jr) | 0, ot = ot + Math.imul(Nt, Yr) | 0, ot = ot + Math.imul(Wt, jr) | 0, Ct = Ct + Math.imul(Wt, Yr) | 0;
            var wn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ut = Math.imul(kr, Qt), ot = Math.imul(kr, hr), ot = ot + Math.imul(Lr, Qt) | 0, Ct = Math.imul(Lr, hr), ut = ut + Math.imul(Sr, pr) | 0, ot = ot + Math.imul(Sr, Rr) | 0, ot = ot + Math.imul(Mr, pr) | 0, Ct = Ct + Math.imul(Mr, Rr) | 0, ut = ut + Math.imul(_r, xr) | 0, ot = ot + Math.imul(_r, Fr) | 0, ot = ot + Math.imul($r, xr) | 0, Ct = Ct + Math.imul($r, Fr) | 0, ut = ut + Math.imul(Jt, Pr) | 0, ot = ot + Math.imul(Jt, Wr) | 0, ot = ot + Math.imul(vr, Pr) | 0, Ct = Ct + Math.imul(vr, Wr) | 0, ut = ut + Math.imul(tr, Nr) | 0, ot = ot + Math.imul(tr, Hr) | 0, ot = ot + Math.imul(cr, Nr) | 0, Ct = Ct + Math.imul(cr, Hr) | 0, ut = ut + Math.imul(rr, jr) | 0, ot = ot + Math.imul(rr, Yr) | 0, ot = ot + Math.imul(Gt, jr) | 0, Ct = Ct + Math.imul(Gt, Yr) | 0, ut = ut + Math.imul(Nt, Or) | 0, ot = ot + Math.imul(Nt, Xr) | 0, ot = ot + Math.imul(Wt, Or) | 0, Ct = Ct + Math.imul(Wt, Xr) | 0;
            var Mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ut = Math.imul(Tr, Qt), ot = Math.imul(Tr, hr), ot = ot + Math.imul(yr, Qt) | 0, Ct = Math.imul(yr, hr), ut = ut + Math.imul(kr, pr) | 0, ot = ot + Math.imul(kr, Rr) | 0, ot = ot + Math.imul(Lr, pr) | 0, Ct = Ct + Math.imul(Lr, Rr) | 0, ut = ut + Math.imul(Sr, xr) | 0, ot = ot + Math.imul(Sr, Fr) | 0, ot = ot + Math.imul(Mr, xr) | 0, Ct = Ct + Math.imul(Mr, Fr) | 0, ut = ut + Math.imul(_r, Pr) | 0, ot = ot + Math.imul(_r, Wr) | 0, ot = ot + Math.imul($r, Pr) | 0, Ct = Ct + Math.imul($r, Wr) | 0, ut = ut + Math.imul(Jt, Nr) | 0, ot = ot + Math.imul(Jt, Hr) | 0, ot = ot + Math.imul(vr, Nr) | 0, Ct = Ct + Math.imul(vr, Hr) | 0, ut = ut + Math.imul(tr, jr) | 0, ot = ot + Math.imul(tr, Yr) | 0, ot = ot + Math.imul(cr, jr) | 0, Ct = Ct + Math.imul(cr, Yr) | 0, ut = ut + Math.imul(rr, Or) | 0, ot = ot + Math.imul(rr, Xr) | 0, ot = ot + Math.imul(Gt, Or) | 0, Ct = Ct + Math.imul(Gt, Xr) | 0, ut = ut + Math.imul(Nt, or) | 0, ot = ot + Math.imul(Nt, ur) | 0, ot = ot + Math.imul(Wt, or) | 0, Ct = Ct + Math.imul(Wt, ur) | 0;
            var En = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ut = Math.imul(dr, Qt), ot = Math.imul(dr, hr), ot = ot + Math.imul(gr, Qt) | 0, Ct = Math.imul(gr, hr), ut = ut + Math.imul(Tr, pr) | 0, ot = ot + Math.imul(Tr, Rr) | 0, ot = ot + Math.imul(yr, pr) | 0, Ct = Ct + Math.imul(yr, Rr) | 0, ut = ut + Math.imul(kr, xr) | 0, ot = ot + Math.imul(kr, Fr) | 0, ot = ot + Math.imul(Lr, xr) | 0, Ct = Ct + Math.imul(Lr, Fr) | 0, ut = ut + Math.imul(Sr, Pr) | 0, ot = ot + Math.imul(Sr, Wr) | 0, ot = ot + Math.imul(Mr, Pr) | 0, Ct = Ct + Math.imul(Mr, Wr) | 0, ut = ut + Math.imul(_r, Nr) | 0, ot = ot + Math.imul(_r, Hr) | 0, ot = ot + Math.imul($r, Nr) | 0, Ct = Ct + Math.imul($r, Hr) | 0, ut = ut + Math.imul(Jt, jr) | 0, ot = ot + Math.imul(Jt, Yr) | 0, ot = ot + Math.imul(vr, jr) | 0, Ct = Ct + Math.imul(vr, Yr) | 0, ut = ut + Math.imul(tr, Or) | 0, ot = ot + Math.imul(tr, Xr) | 0, ot = ot + Math.imul(cr, Or) | 0, Ct = Ct + Math.imul(cr, Xr) | 0, ut = ut + Math.imul(rr, or) | 0, ot = ot + Math.imul(rr, ur) | 0, ot = ot + Math.imul(Gt, or) | 0, Ct = Ct + Math.imul(Gt, ur) | 0, ut = ut + Math.imul(Nt, lr) | 0, ot = ot + Math.imul(Nt, wr) | 0, ot = ot + Math.imul(Wt, lr) | 0, Ct = Ct + Math.imul(Wt, wr) | 0;
            var xn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ut = Math.imul(zt, Qt), ot = Math.imul(zt, hr), ot = ot + Math.imul(qt, Qt) | 0, Ct = Math.imul(qt, hr), ut = ut + Math.imul(dr, pr) | 0, ot = ot + Math.imul(dr, Rr) | 0, ot = ot + Math.imul(gr, pr) | 0, Ct = Ct + Math.imul(gr, Rr) | 0, ut = ut + Math.imul(Tr, xr) | 0, ot = ot + Math.imul(Tr, Fr) | 0, ot = ot + Math.imul(yr, xr) | 0, Ct = Ct + Math.imul(yr, Fr) | 0, ut = ut + Math.imul(kr, Pr) | 0, ot = ot + Math.imul(kr, Wr) | 0, ot = ot + Math.imul(Lr, Pr) | 0, Ct = Ct + Math.imul(Lr, Wr) | 0, ut = ut + Math.imul(Sr, Nr) | 0, ot = ot + Math.imul(Sr, Hr) | 0, ot = ot + Math.imul(Mr, Nr) | 0, Ct = Ct + Math.imul(Mr, Hr) | 0, ut = ut + Math.imul(_r, jr) | 0, ot = ot + Math.imul(_r, Yr) | 0, ot = ot + Math.imul($r, jr) | 0, Ct = Ct + Math.imul($r, Yr) | 0, ut = ut + Math.imul(Jt, Or) | 0, ot = ot + Math.imul(Jt, Xr) | 0, ot = ot + Math.imul(vr, Or) | 0, Ct = Ct + Math.imul(vr, Xr) | 0, ut = ut + Math.imul(tr, or) | 0, ot = ot + Math.imul(tr, ur) | 0, ot = ot + Math.imul(cr, or) | 0, Ct = Ct + Math.imul(cr, ur) | 0, ut = ut + Math.imul(rr, lr) | 0, ot = ot + Math.imul(rr, wr) | 0, ot = ot + Math.imul(Gt, lr) | 0, Ct = Ct + Math.imul(Gt, wr) | 0, ut = ut + Math.imul(Nt, Cr) | 0, ot = ot + Math.imul(Nt, Ir) | 0, ot = ot + Math.imul(Wt, Cr) | 0, Ct = Ct + Math.imul(Wt, Ir) | 0;
            var Cn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ut = Math.imul(zt, pr), ot = Math.imul(zt, Rr), ot = ot + Math.imul(qt, pr) | 0, Ct = Math.imul(qt, Rr), ut = ut + Math.imul(dr, xr) | 0, ot = ot + Math.imul(dr, Fr) | 0, ot = ot + Math.imul(gr, xr) | 0, Ct = Ct + Math.imul(gr, Fr) | 0, ut = ut + Math.imul(Tr, Pr) | 0, ot = ot + Math.imul(Tr, Wr) | 0, ot = ot + Math.imul(yr, Pr) | 0, Ct = Ct + Math.imul(yr, Wr) | 0, ut = ut + Math.imul(kr, Nr) | 0, ot = ot + Math.imul(kr, Hr) | 0, ot = ot + Math.imul(Lr, Nr) | 0, Ct = Ct + Math.imul(Lr, Hr) | 0, ut = ut + Math.imul(Sr, jr) | 0, ot = ot + Math.imul(Sr, Yr) | 0, ot = ot + Math.imul(Mr, jr) | 0, Ct = Ct + Math.imul(Mr, Yr) | 0, ut = ut + Math.imul(_r, Or) | 0, ot = ot + Math.imul(_r, Xr) | 0, ot = ot + Math.imul($r, Or) | 0, Ct = Ct + Math.imul($r, Xr) | 0, ut = ut + Math.imul(Jt, or) | 0, ot = ot + Math.imul(Jt, ur) | 0, ot = ot + Math.imul(vr, or) | 0, Ct = Ct + Math.imul(vr, ur) | 0, ut = ut + Math.imul(tr, lr) | 0, ot = ot + Math.imul(tr, wr) | 0, ot = ot + Math.imul(cr, lr) | 0, Ct = Ct + Math.imul(cr, wr) | 0, ut = ut + Math.imul(rr, Cr) | 0, ot = ot + Math.imul(rr, Ir) | 0, ot = ot + Math.imul(Gt, Cr) | 0, Ct = Ct + Math.imul(Gt, Ir) | 0;
            var _n = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ut = Math.imul(zt, xr), ot = Math.imul(zt, Fr), ot = ot + Math.imul(qt, xr) | 0, Ct = Math.imul(qt, Fr), ut = ut + Math.imul(dr, Pr) | 0, ot = ot + Math.imul(dr, Wr) | 0, ot = ot + Math.imul(gr, Pr) | 0, Ct = Ct + Math.imul(gr, Wr) | 0, ut = ut + Math.imul(Tr, Nr) | 0, ot = ot + Math.imul(Tr, Hr) | 0, ot = ot + Math.imul(yr, Nr) | 0, Ct = Ct + Math.imul(yr, Hr) | 0, ut = ut + Math.imul(kr, jr) | 0, ot = ot + Math.imul(kr, Yr) | 0, ot = ot + Math.imul(Lr, jr) | 0, Ct = Ct + Math.imul(Lr, Yr) | 0, ut = ut + Math.imul(Sr, Or) | 0, ot = ot + Math.imul(Sr, Xr) | 0, ot = ot + Math.imul(Mr, Or) | 0, Ct = Ct + Math.imul(Mr, Xr) | 0, ut = ut + Math.imul(_r, or) | 0, ot = ot + Math.imul(_r, ur) | 0, ot = ot + Math.imul($r, or) | 0, Ct = Ct + Math.imul($r, ur) | 0, ut = ut + Math.imul(Jt, lr) | 0, ot = ot + Math.imul(Jt, wr) | 0, ot = ot + Math.imul(vr, lr) | 0, Ct = Ct + Math.imul(vr, wr) | 0, ut = ut + Math.imul(tr, Cr) | 0, ot = ot + Math.imul(tr, Ir) | 0, ot = ot + Math.imul(cr, Cr) | 0, Ct = Ct + Math.imul(cr, Ir) | 0;
            var hn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ut = Math.imul(zt, Pr), ot = Math.imul(zt, Wr), ot = ot + Math.imul(qt, Pr) | 0, Ct = Math.imul(qt, Wr), ut = ut + Math.imul(dr, Nr) | 0, ot = ot + Math.imul(dr, Hr) | 0, ot = ot + Math.imul(gr, Nr) | 0, Ct = Ct + Math.imul(gr, Hr) | 0, ut = ut + Math.imul(Tr, jr) | 0, ot = ot + Math.imul(Tr, Yr) | 0, ot = ot + Math.imul(yr, jr) | 0, Ct = Ct + Math.imul(yr, Yr) | 0, ut = ut + Math.imul(kr, Or) | 0, ot = ot + Math.imul(kr, Xr) | 0, ot = ot + Math.imul(Lr, Or) | 0, Ct = Ct + Math.imul(Lr, Xr) | 0, ut = ut + Math.imul(Sr, or) | 0, ot = ot + Math.imul(Sr, ur) | 0, ot = ot + Math.imul(Mr, or) | 0, Ct = Ct + Math.imul(Mr, ur) | 0, ut = ut + Math.imul(_r, lr) | 0, ot = ot + Math.imul(_r, wr) | 0, ot = ot + Math.imul($r, lr) | 0, Ct = Ct + Math.imul($r, wr) | 0, ut = ut + Math.imul(Jt, Cr) | 0, ot = ot + Math.imul(Jt, Ir) | 0, ot = ot + Math.imul(vr, Cr) | 0, Ct = Ct + Math.imul(vr, Ir) | 0;
            var gn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ut = Math.imul(zt, Nr), ot = Math.imul(zt, Hr), ot = ot + Math.imul(qt, Nr) | 0, Ct = Math.imul(qt, Hr), ut = ut + Math.imul(dr, jr) | 0, ot = ot + Math.imul(dr, Yr) | 0, ot = ot + Math.imul(gr, jr) | 0, Ct = Ct + Math.imul(gr, Yr) | 0, ut = ut + Math.imul(Tr, Or) | 0, ot = ot + Math.imul(Tr, Xr) | 0, ot = ot + Math.imul(yr, Or) | 0, Ct = Ct + Math.imul(yr, Xr) | 0, ut = ut + Math.imul(kr, or) | 0, ot = ot + Math.imul(kr, ur) | 0, ot = ot + Math.imul(Lr, or) | 0, Ct = Ct + Math.imul(Lr, ur) | 0, ut = ut + Math.imul(Sr, lr) | 0, ot = ot + Math.imul(Sr, wr) | 0, ot = ot + Math.imul(Mr, lr) | 0, Ct = Ct + Math.imul(Mr, wr) | 0, ut = ut + Math.imul(_r, Cr) | 0, ot = ot + Math.imul(_r, Ir) | 0, ot = ot + Math.imul($r, Cr) | 0, Ct = Ct + Math.imul($r, Ir) | 0;
            var ln = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ut = Math.imul(zt, jr), ot = Math.imul(zt, Yr), ot = ot + Math.imul(qt, jr) | 0, Ct = Math.imul(qt, Yr), ut = ut + Math.imul(dr, Or) | 0, ot = ot + Math.imul(dr, Xr) | 0, ot = ot + Math.imul(gr, Or) | 0, Ct = Ct + Math.imul(gr, Xr) | 0, ut = ut + Math.imul(Tr, or) | 0, ot = ot + Math.imul(Tr, ur) | 0, ot = ot + Math.imul(yr, or) | 0, Ct = Ct + Math.imul(yr, ur) | 0, ut = ut + Math.imul(kr, lr) | 0, ot = ot + Math.imul(kr, wr) | 0, ot = ot + Math.imul(Lr, lr) | 0, Ct = Ct + Math.imul(Lr, wr) | 0, ut = ut + Math.imul(Sr, Cr) | 0, ot = ot + Math.imul(Sr, Ir) | 0, ot = ot + Math.imul(Mr, Cr) | 0, Ct = Ct + Math.imul(Mr, Ir) | 0;
            var pn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ut = Math.imul(zt, Or), ot = Math.imul(zt, Xr), ot = ot + Math.imul(qt, Or) | 0, Ct = Math.imul(qt, Xr), ut = ut + Math.imul(dr, or) | 0, ot = ot + Math.imul(dr, ur) | 0, ot = ot + Math.imul(gr, or) | 0, Ct = Ct + Math.imul(gr, ur) | 0, ut = ut + Math.imul(Tr, lr) | 0, ot = ot + Math.imul(Tr, wr) | 0, ot = ot + Math.imul(yr, lr) | 0, Ct = Ct + Math.imul(yr, wr) | 0, ut = ut + Math.imul(kr, Cr) | 0, ot = ot + Math.imul(kr, Ir) | 0, ot = ot + Math.imul(Lr, Cr) | 0, Ct = Ct + Math.imul(Lr, Ir) | 0;
            var mn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ut = Math.imul(zt, or), ot = Math.imul(zt, ur), ot = ot + Math.imul(qt, or) | 0, Ct = Math.imul(qt, ur), ut = ut + Math.imul(dr, lr) | 0, ot = ot + Math.imul(dr, wr) | 0, ot = ot + Math.imul(gr, lr) | 0, Ct = Ct + Math.imul(gr, wr) | 0, ut = ut + Math.imul(Tr, Cr) | 0, ot = ot + Math.imul(Tr, Ir) | 0, ot = ot + Math.imul(yr, Cr) | 0, Ct = Ct + Math.imul(yr, Ir) | 0;
            var sn = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ut = Math.imul(zt, lr), ot = Math.imul(zt, wr), ot = ot + Math.imul(qt, lr) | 0, Ct = Math.imul(qt, wr), ut = ut + Math.imul(dr, Cr) | 0, ot = ot + Math.imul(dr, Ir) | 0, ot = ot + Math.imul(gr, Cr) | 0, Ct = Ct + Math.imul(gr, Ir) | 0;
            var Vr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            At = (Ct + (ot >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ut = Math.imul(zt, Cr), ot = Math.imul(zt, Ir), ot = ot + Math.imul(qt, Cr) | 0, Ct = Math.imul(qt, Ir);
            var Zr = (At + ut | 0) + ((ot & 8191) << 13) | 0;
            return At = (Ct + (ot >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, Mt[0] = Jr, Mt[1] = Qr, Mt[2] = Sn, Mt[3] = dn, Mt[4] = yn, Mt[5] = wn, Mt[6] = Mn, Mt[7] = En, Mt[8] = xn, Mt[9] = Cn, Mt[10] = _n, Mt[11] = hn, Mt[12] = gn, Mt[13] = ln, Mt[14] = pn, Mt[15] = mn, Mt[16] = sn, Mt[17] = Vr, Mt[18] = Zr, At !== 0 && (Mt[19] = At, it.length++), it;
          };
          Math.imul || (It = Pt);
          function jt(xt, tt, nt) {
            nt.negative = tt.negative ^ xt.negative, nt.length = xt.length + tt.length;
            for (var it = 0, at = 0, ct = 0; ct < nt.length - 1; ct++) {
              var Mt = at;
              at = 0;
              for (var At = it & 67108863, ut = Math.min(ct, tt.length - 1), ot = Math.max(0, ct - xt.length + 1); ot <= ut; ot++) {
                var Ct = ct - ot, Rt = xt.words[Ct] | 0, Nt = tt.words[ot] | 0, Wt = Rt * Nt, Xt = Wt & 67108863;
                Mt = Mt + (Wt / 67108864 | 0) | 0, Xt = Xt + At | 0, At = Xt & 67108863, Mt = Mt + (Xt >>> 26) | 0, at += Mt >>> 26, Mt &= 67108863;
              }
              nt.words[ct] = At, it = Mt, Mt = at;
            }
            return it !== 0 ? nt.words[ct] = it : nt.length--, nt.strip();
          }
          function Dt(xt, tt, nt) {
            var it = new Ot();
            return it.mulp(xt, tt, nt);
          }
          et.prototype.mulTo = function(tt, nt) {
            var it, at = this.length + tt.length;
            return this.length === 10 && tt.length === 10 ? it = It(this, tt, nt) : at < 63 ? it = Pt(this, tt, nt) : at < 1024 ? it = jt(this, tt, nt) : it = Dt(this, tt, nt), it;
          };
          function Ot(xt, tt) {
            this.x = xt, this.y = tt;
          }
          Ot.prototype.makeRBT = function(tt) {
            for (var nt = new Array(tt), it = et.prototype._countBits(tt) - 1, at = 0; at < tt; at++) nt[at] = this.revBin(at, it, tt);
            return nt;
          }, Ot.prototype.revBin = function(tt, nt, it) {
            if (tt === 0 || tt === it - 1) return tt;
            for (var at = 0, ct = 0; ct < nt; ct++) at |= (tt & 1) << nt - ct - 1, tt >>= 1;
            return at;
          }, Ot.prototype.permute = function(tt, nt, it, at, ct, Mt) {
            for (var At = 0; At < Mt; At++) at[At] = nt[tt[At]], ct[At] = it[tt[At]];
          }, Ot.prototype.transform = function(tt, nt, it, at, ct, Mt) {
            this.permute(Mt, tt, nt, it, at, ct);
            for (var At = 1; At < ct; At <<= 1) for (var ut = At << 1, ot = Math.cos(2 * Math.PI / ut), Ct = Math.sin(2 * Math.PI / ut), Rt = 0; Rt < ct; Rt += ut) for (var Nt = ot, Wt = Ct, Xt = 0; Xt < At; Xt++) {
              var rr = it[Rt + Xt], Gt = at[Rt + Xt], Yt = it[Rt + Xt + At], tr = at[Rt + Xt + At], cr = Nt * Yt - Wt * tr;
              tr = Nt * tr + Wt * Yt, Yt = cr, it[Rt + Xt] = rr + Yt, at[Rt + Xt] = Gt + tr, it[Rt + Xt + At] = rr - Yt, at[Rt + Xt + At] = Gt - tr, Xt !== ut && (cr = ot * Nt - Ct * Wt, Wt = ot * Wt + Ct * Nt, Nt = cr);
            }
          }, Ot.prototype.guessLen13b = function(tt, nt) {
            var it = Math.max(nt, tt) | 1, at = it & 1, ct = 0;
            for (it = it / 2 | 0; it; it = it >>> 1) ct++;
            return 1 << ct + 1 + at;
          }, Ot.prototype.conjugate = function(tt, nt, it) {
            if (!(it <= 1)) for (var at = 0; at < it / 2; at++) {
              var ct = tt[at];
              tt[at] = tt[it - at - 1], tt[it - at - 1] = ct, ct = nt[at], nt[at] = -nt[it - at - 1], nt[it - at - 1] = -ct;
            }
          }, Ot.prototype.normalize13b = function(tt, nt) {
            for (var it = 0, at = 0; at < nt / 2; at++) {
              var ct = Math.round(tt[2 * at + 1] / nt) * 8192 + Math.round(tt[2 * at] / nt) + it;
              tt[at] = ct & 67108863, ct < 67108864 ? it = 0 : it = ct / 67108864 | 0;
            }
            return tt;
          }, Ot.prototype.convert13b = function(tt, nt, it, at) {
            for (var ct = 0, Mt = 0; Mt < nt; Mt++) ct = ct + (tt[Mt] | 0), it[2 * Mt] = ct & 8191, ct = ct >>> 13, it[2 * Mt + 1] = ct & 8191, ct = ct >>> 13;
            for (Mt = 2 * nt; Mt < at; ++Mt) it[Mt] = 0;
            j(ct === 0), j((ct & -8192) === 0);
          }, Ot.prototype.stub = function(tt) {
            for (var nt = new Array(tt), it = 0; it < tt; it++) nt[it] = 0;
            return nt;
          }, Ot.prototype.mulp = function(tt, nt, it) {
            var at = 2 * this.guessLen13b(tt.length, nt.length), ct = this.makeRBT(at), Mt = this.stub(at), At = new Array(at), ut = new Array(at), ot = new Array(at), Ct = new Array(at), Rt = new Array(at), Nt = new Array(at), Wt = it.words;
            Wt.length = at, this.convert13b(tt.words, tt.length, At, at), this.convert13b(nt.words, nt.length, Ct, at), this.transform(At, Mt, ut, ot, at, ct), this.transform(Ct, Mt, Rt, Nt, at, ct);
            for (var Xt = 0; Xt < at; Xt++) {
              var rr = ut[Xt] * Rt[Xt] - ot[Xt] * Nt[Xt];
              ot[Xt] = ut[Xt] * Nt[Xt] + ot[Xt] * Rt[Xt], ut[Xt] = rr;
            }
            return this.conjugate(ut, ot, at), this.transform(ut, ot, Wt, Mt, at, ct), this.conjugate(Wt, Mt, at), this.normalize13b(Wt, at), it.negative = tt.negative ^ nt.negative, it.length = tt.length + nt.length, it.strip();
          }, et.prototype.mul = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), this.mulTo(tt, nt);
          }, et.prototype.mulf = function(tt) {
            var nt = new et(null);
            return nt.words = new Array(this.length + tt.length), Dt(this, tt, nt);
          }, et.prototype.imul = function(tt) {
            return this.clone().mulTo(tt, this);
          }, et.prototype.imuln = function(tt) {
            j(typeof tt == "number"), j(tt < 67108864);
            for (var nt = 0, it = 0; it < this.length; it++) {
              var at = (this.words[it] | 0) * tt, ct = (at & 67108863) + (nt & 67108863);
              nt >>= 26, nt += at / 67108864 | 0, nt += ct >>> 26, this.words[it] = ct & 67108863;
            }
            return nt !== 0 && (this.words[it] = nt, this.length++), this;
          }, et.prototype.muln = function(tt) {
            return this.clone().imuln(tt);
          }, et.prototype.sqr = function() {
            return this.mul(this);
          }, et.prototype.isqr = function() {
            return this.imul(this.clone());
          }, et.prototype.pow = function(tt) {
            var nt = Tt(tt);
            if (nt.length === 0) return new et(1);
            for (var it = this, at = 0; at < nt.length && nt[at] === 0; at++, it = it.sqr()) ;
            if (++at < nt.length) for (var ct = it.sqr(); at < nt.length; at++, ct = ct.sqr()) nt[at] !== 0 && (it = it.mul(ct));
            return it;
          }, et.prototype.iushln = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 67108863 >>> 26 - nt << 26 - nt, ct;
            if (nt !== 0) {
              var Mt = 0;
              for (ct = 0; ct < this.length; ct++) {
                var At = this.words[ct] & at, ut = (this.words[ct] | 0) - At << nt;
                this.words[ct] = ut | Mt, Mt = At >>> 26 - nt;
              }
              Mt && (this.words[ct] = Mt, this.length++);
            }
            if (it !== 0) {
              for (ct = this.length - 1; ct >= 0; ct--) this.words[ct + it] = this.words[ct];
              for (ct = 0; ct < it; ct++) this.words[ct] = 0;
              this.length += it;
            }
            return this.strip();
          }, et.prototype.ishln = function(tt) {
            return j(this.negative === 0), this.iushln(tt);
          }, et.prototype.iushrn = function(tt, nt, it) {
            j(typeof tt == "number" && tt >= 0);
            var at;
            nt ? at = (nt - nt % 26) / 26 : at = 0;
            var ct = tt % 26, Mt = Math.min((tt - ct) / 26, this.length), At = 67108863 ^ 67108863 >>> ct << ct, ut = it;
            if (at -= Mt, at = Math.max(0, at), ut) {
              for (var ot = 0; ot < Mt; ot++) ut.words[ot] = this.words[ot];
              ut.length = Mt;
            }
            if (Mt !== 0) if (this.length > Mt) for (this.length -= Mt, ot = 0; ot < this.length; ot++) this.words[ot] = this.words[ot + Mt];
            else this.words[0] = 0, this.length = 1;
            var Ct = 0;
            for (ot = this.length - 1; ot >= 0 && (Ct !== 0 || ot >= at); ot--) {
              var Rt = this.words[ot] | 0;
              this.words[ot] = Ct << 26 - ct | Rt >>> ct, Ct = Rt & At;
            }
            return ut && Ct !== 0 && (ut.words[ut.length++] = Ct), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
          }, et.prototype.ishrn = function(tt, nt, it) {
            return j(this.negative === 0), this.iushrn(tt, nt, it);
          }, et.prototype.shln = function(tt) {
            return this.clone().ishln(tt);
          }, et.prototype.ushln = function(tt) {
            return this.clone().iushln(tt);
          }, et.prototype.shrn = function(tt) {
            return this.clone().ishrn(tt);
          }, et.prototype.ushrn = function(tt) {
            return this.clone().iushrn(tt);
          }, et.prototype.testn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return false;
            var ct = this.words[it];
            return !!(ct & at);
          }, et.prototype.imaskn = function(tt) {
            j(typeof tt == "number" && tt >= 0);
            var nt = tt % 26, it = (tt - nt) / 26;
            if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= it) return this;
            if (nt !== 0 && it++, this.length = Math.min(it, this.length), nt !== 0) {
              var at = 67108863 ^ 67108863 >>> nt << nt;
              this.words[this.length - 1] &= at;
            }
            return this.strip();
          }, et.prototype.maskn = function(tt) {
            return this.clone().imaskn(tt);
          }, et.prototype.iaddn = function(tt) {
            return j(typeof tt == "number"), j(tt < 67108864), tt < 0 ? this.isubn(-tt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < tt ? (this.words[0] = tt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(tt), this.negative = 1, this) : this._iaddn(tt);
          }, et.prototype._iaddn = function(tt) {
            this.words[0] += tt;
            for (var nt = 0; nt < this.length && this.words[nt] >= 67108864; nt++) this.words[nt] -= 67108864, nt === this.length - 1 ? this.words[nt + 1] = 1 : this.words[nt + 1]++;
            return this.length = Math.max(this.length, nt + 1), this;
          }, et.prototype.isubn = function(tt) {
            if (j(typeof tt == "number"), j(tt < 67108864), tt < 0) return this.iaddn(-tt);
            if (this.negative !== 0) return this.negative = 0, this.iaddn(tt), this.negative = 1, this;
            if (this.words[0] -= tt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
            else for (var nt = 0; nt < this.length && this.words[nt] < 0; nt++) this.words[nt] += 67108864, this.words[nt + 1] -= 1;
            return this.strip();
          }, et.prototype.addn = function(tt) {
            return this.clone().iaddn(tt);
          }, et.prototype.subn = function(tt) {
            return this.clone().isubn(tt);
          }, et.prototype.iabs = function() {
            return this.negative = 0, this;
          }, et.prototype.abs = function() {
            return this.clone().iabs();
          }, et.prototype._ishlnsubmul = function(tt, nt, it) {
            var at = tt.length + it, ct;
            this._expand(at);
            var Mt, At = 0;
            for (ct = 0; ct < tt.length; ct++) {
              Mt = (this.words[ct + it] | 0) + At;
              var ut = (tt.words[ct] | 0) * nt;
              Mt -= ut & 67108863, At = (Mt >> 26) - (ut / 67108864 | 0), this.words[ct + it] = Mt & 67108863;
            }
            for (; ct < this.length - it; ct++) Mt = (this.words[ct + it] | 0) + At, At = Mt >> 26, this.words[ct + it] = Mt & 67108863;
            if (At === 0) return this.strip();
            for (j(At === -1), At = 0, ct = 0; ct < this.length; ct++) Mt = -(this.words[ct] | 0) + At, At = Mt >> 26, this.words[ct] = Mt & 67108863;
            return this.negative = 1, this.strip();
          }, et.prototype._wordDiv = function(tt, nt) {
            var it = this.length - tt.length, at = this.clone(), ct = tt, Mt = ct.words[ct.length - 1] | 0, At = this._countBits(Mt);
            it = 26 - At, it !== 0 && (ct = ct.ushln(it), at.iushln(it), Mt = ct.words[ct.length - 1] | 0);
            var ut = at.length - ct.length, ot;
            if (nt !== "mod") {
              ot = new et(null), ot.length = ut + 1, ot.words = new Array(ot.length);
              for (var Ct = 0; Ct < ot.length; Ct++) ot.words[Ct] = 0;
            }
            var Rt = at.clone()._ishlnsubmul(ct, 1, ut);
            Rt.negative === 0 && (at = Rt, ot && (ot.words[ut] = 1));
            for (var Nt = ut - 1; Nt >= 0; Nt--) {
              var Wt = (at.words[ct.length + Nt] | 0) * 67108864 + (at.words[ct.length + Nt - 1] | 0);
              for (Wt = Math.min(Wt / Mt | 0, 67108863), at._ishlnsubmul(ct, Wt, Nt); at.negative !== 0; ) Wt--, at.negative = 0, at._ishlnsubmul(ct, 1, Nt), at.isZero() || (at.negative ^= 1);
              ot && (ot.words[Nt] = Wt);
            }
            return ot && ot.strip(), at.strip(), nt !== "div" && it !== 0 && at.iushrn(it), {
              div: ot || null,
              mod: at
            };
          }, et.prototype.divmod = function(tt, nt, it) {
            if (j(!tt.isZero()), this.isZero()) return {
              div: new et(0),
              mod: new et(0)
            };
            var at, ct, Mt;
            return this.negative !== 0 && tt.negative === 0 ? (Mt = this.neg().divmod(tt, nt), nt !== "mod" && (at = Mt.div.neg()), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.iadd(tt)), {
              div: at,
              mod: ct
            }) : this.negative === 0 && tt.negative !== 0 ? (Mt = this.divmod(tt.neg(), nt), nt !== "mod" && (at = Mt.div.neg()), {
              div: at,
              mod: Mt.mod
            }) : this.negative & tt.negative ? (Mt = this.neg().divmod(tt.neg(), nt), nt !== "div" && (ct = Mt.mod.neg(), it && ct.negative !== 0 && ct.isub(tt)), {
              div: Mt.div,
              mod: ct
            }) : tt.length > this.length || this.cmp(tt) < 0 ? {
              div: new et(0),
              mod: this
            } : tt.length === 1 ? nt === "div" ? {
              div: this.divn(tt.words[0]),
              mod: null
            } : nt === "mod" ? {
              div: null,
              mod: new et(this.modn(tt.words[0]))
            } : {
              div: this.divn(tt.words[0]),
              mod: new et(this.modn(tt.words[0]))
            } : this._wordDiv(tt, nt);
          }, et.prototype.div = function(tt) {
            return this.divmod(tt, "div", false).div;
          }, et.prototype.mod = function(tt) {
            return this.divmod(tt, "mod", false).mod;
          }, et.prototype.umod = function(tt) {
            return this.divmod(tt, "mod", true).mod;
          }, et.prototype.divRound = function(tt) {
            var nt = this.divmod(tt);
            if (nt.mod.isZero()) return nt.div;
            var it = nt.div.negative !== 0 ? nt.mod.isub(tt) : nt.mod, at = tt.ushrn(1), ct = tt.andln(1), Mt = it.cmp(at);
            return Mt < 0 || ct === 1 && Mt === 0 ? nt.div : nt.div.negative !== 0 ? nt.div.isubn(1) : nt.div.iaddn(1);
          }, et.prototype.modn = function(tt) {
            j(tt <= 67108863);
            for (var nt = (1 << 26) % tt, it = 0, at = this.length - 1; at >= 0; at--) it = (nt * it + (this.words[at] | 0)) % tt;
            return it;
          }, et.prototype.idivn = function(tt) {
            j(tt <= 67108863);
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = (this.words[it] | 0) + nt * 67108864;
              this.words[it] = at / tt | 0, nt = at % tt;
            }
            return this.strip();
          }, et.prototype.divn = function(tt) {
            return this.clone().idivn(tt);
          }, et.prototype.egcd = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = new et(0), At = new et(1), ut = 0; nt.isEven() && it.isEven(); ) nt.iushrn(1), it.iushrn(1), ++ut;
            for (var ot = it.clone(), Ct = nt.clone(); !nt.isZero(); ) {
              for (var Rt = 0, Nt = 1; !(nt.words[0] & Nt) && Rt < 26; ++Rt, Nt <<= 1) ;
              if (Rt > 0) for (nt.iushrn(Rt); Rt-- > 0; ) (at.isOdd() || ct.isOdd()) && (at.iadd(ot), ct.isub(Ct)), at.iushrn(1), ct.iushrn(1);
              for (var Wt = 0, Xt = 1; !(it.words[0] & Xt) && Wt < 26; ++Wt, Xt <<= 1) ;
              if (Wt > 0) for (it.iushrn(Wt); Wt-- > 0; ) (Mt.isOdd() || At.isOdd()) && (Mt.iadd(ot), At.isub(Ct)), Mt.iushrn(1), At.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(Mt), ct.isub(At)) : (it.isub(nt), Mt.isub(at), At.isub(ct));
            }
            return {
              a: Mt,
              b: At,
              gcd: it.iushln(ut)
            };
          }, et.prototype._invmp = function(tt) {
            j(tt.negative === 0), j(!tt.isZero());
            var nt = this, it = tt.clone();
            nt.negative !== 0 ? nt = nt.umod(tt) : nt = nt.clone();
            for (var at = new et(1), ct = new et(0), Mt = it.clone(); nt.cmpn(1) > 0 && it.cmpn(1) > 0; ) {
              for (var At = 0, ut = 1; !(nt.words[0] & ut) && At < 26; ++At, ut <<= 1) ;
              if (At > 0) for (nt.iushrn(At); At-- > 0; ) at.isOdd() && at.iadd(Mt), at.iushrn(1);
              for (var ot = 0, Ct = 1; !(it.words[0] & Ct) && ot < 26; ++ot, Ct <<= 1) ;
              if (ot > 0) for (it.iushrn(ot); ot-- > 0; ) ct.isOdd() && ct.iadd(Mt), ct.iushrn(1);
              nt.cmp(it) >= 0 ? (nt.isub(it), at.isub(ct)) : (it.isub(nt), ct.isub(at));
            }
            var Rt;
            return nt.cmpn(1) === 0 ? Rt = at : Rt = ct, Rt.cmpn(0) < 0 && Rt.iadd(tt), Rt;
          }, et.prototype.gcd = function(tt) {
            if (this.isZero()) return tt.abs();
            if (tt.isZero()) return this.abs();
            var nt = this.clone(), it = tt.clone();
            nt.negative = 0, it.negative = 0;
            for (var at = 0; nt.isEven() && it.isEven(); at++) nt.iushrn(1), it.iushrn(1);
            do {
              for (; nt.isEven(); ) nt.iushrn(1);
              for (; it.isEven(); ) it.iushrn(1);
              var ct = nt.cmp(it);
              if (ct < 0) {
                var Mt = nt;
                nt = it, it = Mt;
              } else if (ct === 0 || it.cmpn(1) === 0) break;
              nt.isub(it);
            } while (true);
            return it.iushln(at);
          }, et.prototype.invm = function(tt) {
            return this.egcd(tt).a.umod(tt);
          }, et.prototype.isEven = function() {
            return (this.words[0] & 1) === 0;
          }, et.prototype.isOdd = function() {
            return (this.words[0] & 1) === 1;
          }, et.prototype.andln = function(tt) {
            return this.words[0] & tt;
          }, et.prototype.bincn = function(tt) {
            j(typeof tt == "number");
            var nt = tt % 26, it = (tt - nt) / 26, at = 1 << nt;
            if (this.length <= it) return this._expand(it + 1), this.words[it] |= at, this;
            for (var ct = at, Mt = it; ct !== 0 && Mt < this.length; Mt++) {
              var At = this.words[Mt] | 0;
              At += ct, ct = At >>> 26, At &= 67108863, this.words[Mt] = At;
            }
            return ct !== 0 && (this.words[Mt] = ct, this.length++), this;
          }, et.prototype.isZero = function() {
            return this.length === 1 && this.words[0] === 0;
          }, et.prototype.cmpn = function(tt) {
            var nt = tt < 0;
            if (this.negative !== 0 && !nt) return -1;
            if (this.negative === 0 && nt) return 1;
            this.strip();
            var it;
            if (this.length > 1) it = 1;
            else {
              nt && (tt = -tt), j(tt <= 67108863, "Number is too big");
              var at = this.words[0] | 0;
              it = at === tt ? 0 : at < tt ? -1 : 1;
            }
            return this.negative !== 0 ? -it | 0 : it;
          }, et.prototype.cmp = function(tt) {
            if (this.negative !== 0 && tt.negative === 0) return -1;
            if (this.negative === 0 && tt.negative !== 0) return 1;
            var nt = this.ucmp(tt);
            return this.negative !== 0 ? -nt | 0 : nt;
          }, et.prototype.ucmp = function(tt) {
            if (this.length > tt.length) return 1;
            if (this.length < tt.length) return -1;
            for (var nt = 0, it = this.length - 1; it >= 0; it--) {
              var at = this.words[it] | 0, ct = tt.words[it] | 0;
              if (at !== ct) {
                at < ct ? nt = -1 : at > ct && (nt = 1);
                break;
              }
            }
            return nt;
          }, et.prototype.gtn = function(tt) {
            return this.cmpn(tt) === 1;
          }, et.prototype.gt = function(tt) {
            return this.cmp(tt) === 1;
          }, et.prototype.gten = function(tt) {
            return this.cmpn(tt) >= 0;
          }, et.prototype.gte = function(tt) {
            return this.cmp(tt) >= 0;
          }, et.prototype.ltn = function(tt) {
            return this.cmpn(tt) === -1;
          }, et.prototype.lt = function(tt) {
            return this.cmp(tt) === -1;
          }, et.prototype.lten = function(tt) {
            return this.cmpn(tt) <= 0;
          }, et.prototype.lte = function(tt) {
            return this.cmp(tt) <= 0;
          }, et.prototype.eqn = function(tt) {
            return this.cmpn(tt) === 0;
          }, et.prototype.eq = function(tt) {
            return this.cmp(tt) === 0;
          }, et.red = function(tt) {
            return new er(tt);
          }, et.prototype.toRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), tt.convertTo(this)._forceRed(tt);
          }, et.prototype.fromRed = function() {
            return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, et.prototype._forceRed = function(tt) {
            return this.red = tt, this;
          }, et.prototype.forceRed = function(tt) {
            return j(!this.red, "Already a number in reduction context"), this._forceRed(tt);
          }, et.prototype.redAdd = function(tt) {
            return j(this.red, "redAdd works only with red numbers"), this.red.add(this, tt);
          }, et.prototype.redIAdd = function(tt) {
            return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, tt);
          }, et.prototype.redSub = function(tt) {
            return j(this.red, "redSub works only with red numbers"), this.red.sub(this, tt);
          }, et.prototype.redISub = function(tt) {
            return j(this.red, "redISub works only with red numbers"), this.red.isub(this, tt);
          }, et.prototype.redShl = function(tt) {
            return j(this.red, "redShl works only with red numbers"), this.red.shl(this, tt);
          }, et.prototype.redMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.mul(this, tt);
          }, et.prototype.redIMul = function(tt) {
            return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, tt), this.red.imul(this, tt);
          }, et.prototype.redSqr = function() {
            return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, et.prototype.redISqr = function() {
            return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, et.prototype.redSqrt = function() {
            return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, et.prototype.redInvm = function() {
            return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, et.prototype.redNeg = function() {
            return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, et.prototype.redPow = function(tt) {
            return j(this.red && !tt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, tt);
          };
          var Ft = {
            k256: null,
            p224: null,
            p192: null,
            p25519: null
          };
          function Lt(xt, tt) {
            this.name = xt, this.p = new et(tt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          Lt.prototype._tmp = function() {
            var tt = new et(null);
            return tt.words = new Array(Math.ceil(this.n / 13)), tt;
          }, Lt.prototype.ireduce = function(tt) {
            var nt = tt, it;
            do
              this.split(nt, this.tmp), nt = this.imulK(nt), nt = nt.iadd(this.tmp), it = nt.bitLength();
            while (it > this.n);
            var at = it < this.n ? -1 : nt.ucmp(this.p);
            return at === 0 ? (nt.words[0] = 0, nt.length = 1) : at > 0 ? nt.isub(this.p) : nt.strip !== void 0 ? nt.strip() : nt._strip(), nt;
          }, Lt.prototype.split = function(tt, nt) {
            tt.iushrn(this.n, 0, nt);
          }, Lt.prototype.imulK = function(tt) {
            return tt.imul(this.k);
          };
          function Zt() {
            Lt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          rt(Zt, Lt), Zt.prototype.split = function(tt, nt) {
            for (var it = 4194303, at = Math.min(tt.length, 9), ct = 0; ct < at; ct++) nt.words[ct] = tt.words[ct];
            if (nt.length = at, tt.length <= 9) {
              tt.words[0] = 0, tt.length = 1;
              return;
            }
            var Mt = tt.words[9];
            for (nt.words[nt.length++] = Mt & it, ct = 10; ct < tt.length; ct++) {
              var At = tt.words[ct] | 0;
              tt.words[ct - 10] = (At & it) << 4 | Mt >>> 22, Mt = At;
            }
            Mt >>>= 22, tt.words[ct - 10] = Mt, Mt === 0 && tt.length > 10 ? tt.length -= 10 : tt.length -= 9;
          }, Zt.prototype.imulK = function(tt) {
            tt.words[tt.length] = 0, tt.words[tt.length + 1] = 0, tt.length += 2;
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = tt.words[it] | 0;
              nt += at * 977, tt.words[it] = nt & 67108863, nt = at * 64 + (nt / 67108864 | 0);
            }
            return tt.words[tt.length - 1] === 0 && (tt.length--, tt.words[tt.length - 1] === 0 && tt.length--), tt;
          };
          function Kt() {
            Lt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          rt(Kt, Lt);
          function ar() {
            Lt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          rt(ar, Lt);
          function sr() {
            Lt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          rt(sr, Lt), sr.prototype.imulK = function(tt) {
            for (var nt = 0, it = 0; it < tt.length; it++) {
              var at = (tt.words[it] | 0) * 19 + nt, ct = at & 67108863;
              at >>>= 26, tt.words[it] = ct, nt = at;
            }
            return nt !== 0 && (tt.words[tt.length++] = nt), tt;
          }, et._prime = function(tt) {
            if (Ft[tt]) return Ft[tt];
            var nt;
            if (tt === "k256") nt = new Zt();
            else if (tt === "p224") nt = new Kt();
            else if (tt === "p192") nt = new ar();
            else if (tt === "p25519") nt = new sr();
            else throw new Error("Unknown prime " + tt);
            return Ft[tt] = nt, nt;
          };
          function er(xt) {
            if (typeof xt == "string") {
              var tt = et._prime(xt);
              this.m = tt.p, this.prime = tt;
            } else j(xt.gtn(1), "modulus must be greater than 1"), this.m = xt, this.prime = null;
          }
          er.prototype._verify1 = function(tt) {
            j(tt.negative === 0, "red works only with positives"), j(tt.red, "red works only with red numbers");
          }, er.prototype._verify2 = function(tt, nt) {
            j((tt.negative | nt.negative) === 0, "red works only with positives"), j(tt.red && tt.red === nt.red, "red works only with red numbers");
          }, er.prototype.imod = function(tt) {
            return this.prime ? this.prime.ireduce(tt)._forceRed(this) : tt.umod(this.m)._forceRed(this);
          }, er.prototype.neg = function(tt) {
            return tt.isZero() ? tt.clone() : this.m.sub(tt)._forceRed(this);
          }, er.prototype.add = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.add(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it._forceRed(this);
          }, er.prototype.iadd = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.iadd(nt);
            return it.cmp(this.m) >= 0 && it.isub(this.m), it;
          }, er.prototype.sub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.sub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it._forceRed(this);
          }, er.prototype.isub = function(tt, nt) {
            this._verify2(tt, nt);
            var it = tt.isub(nt);
            return it.cmpn(0) < 0 && it.iadd(this.m), it;
          }, er.prototype.shl = function(tt, nt) {
            return this._verify1(tt), this.imod(tt.ushln(nt));
          }, er.prototype.imul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.imul(nt));
          }, er.prototype.mul = function(tt, nt) {
            return this._verify2(tt, nt), this.imod(tt.mul(nt));
          }, er.prototype.isqr = function(tt) {
            return this.imul(tt, tt.clone());
          }, er.prototype.sqr = function(tt) {
            return this.mul(tt, tt);
          }, er.prototype.sqrt = function(tt) {
            if (tt.isZero()) return tt.clone();
            var nt = this.m.andln(3);
            if (j(nt % 2 === 1), nt === 3) {
              var it = this.m.add(new et(1)).iushrn(2);
              return this.pow(tt, it);
            }
            for (var at = this.m.subn(1), ct = 0; !at.isZero() && at.andln(1) === 0; ) ct++, at.iushrn(1);
            j(!at.isZero());
            var Mt = new et(1).toRed(this), At = Mt.redNeg(), ut = this.m.subn(1).iushrn(1), ot = this.m.bitLength();
            for (ot = new et(2 * ot * ot).toRed(this); this.pow(ot, ut).cmp(At) !== 0; ) ot.redIAdd(At);
            for (var Ct = this.pow(ot, at), Rt = this.pow(tt, at.addn(1).iushrn(1)), Nt = this.pow(tt, at), Wt = ct; Nt.cmp(Mt) !== 0; ) {
              for (var Xt = Nt, rr = 0; Xt.cmp(Mt) !== 0; rr++) Xt = Xt.redSqr();
              j(rr < Wt);
              var Gt = this.pow(Ct, new et(1).iushln(Wt - rr - 1));
              Rt = Rt.redMul(Gt), Ct = Gt.redSqr(), Nt = Nt.redMul(Ct), Wt = rr;
            }
            return Rt;
          }, er.prototype.invm = function(tt) {
            var nt = tt._invmp(this.m);
            return nt.negative !== 0 ? (nt.negative = 0, this.imod(nt).redNeg()) : this.imod(nt);
          }, er.prototype.pow = function(tt, nt) {
            if (nt.isZero()) return new et(1).toRed(this);
            if (nt.cmpn(1) === 0) return tt.clone();
            var it = 4, at = new Array(1 << it);
            at[0] = new et(1).toRed(this), at[1] = tt;
            for (var ct = 2; ct < at.length; ct++) at[ct] = this.mul(at[ct - 1], tt);
            var Mt = at[0], At = 0, ut = 0, ot = nt.bitLength() % 26;
            for (ot === 0 && (ot = 26), ct = nt.length - 1; ct >= 0; ct--) {
              for (var Ct = nt.words[ct], Rt = ot - 1; Rt >= 0; Rt--) {
                var Nt = Ct >> Rt & 1;
                if (Mt !== at[0] && (Mt = this.sqr(Mt)), Nt === 0 && At === 0) {
                  ut = 0;
                  continue;
                }
                At <<= 1, At |= Nt, ut++, !(ut !== it && (ct !== 0 || Rt !== 0)) && (Mt = this.mul(Mt, at[At]), ut = 0, At = 0);
              }
              ot = 26;
            }
            return Mt;
          }, er.prototype.convertTo = function(tt) {
            var nt = tt.umod(this.m);
            return nt === tt ? nt.clone() : nt;
          }, er.prototype.convertFrom = function(tt) {
            var nt = tt.clone();
            return nt.red = null, nt;
          }, et.mont = function(tt) {
            return new Ut(tt);
          };
          function Ut(xt) {
            er.call(this, xt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          rt(Ut, er), Ut.prototype.convertTo = function(tt) {
            return this.imod(tt.ushln(this.shift));
          }, Ut.prototype.convertFrom = function(tt) {
            var nt = this.imod(tt.mul(this.rinv));
            return nt.red = null, nt;
          }, Ut.prototype.imul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return tt.words[0] = 0, tt.length = 1, tt;
            var it = tt.imul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.mul = function(tt, nt) {
            if (tt.isZero() || nt.isZero()) return new et(0)._forceRed(this);
            var it = tt.mul(nt), at = it.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), ct = it.isub(at).iushrn(this.shift), Mt = ct;
            return ct.cmp(this.m) >= 0 ? Mt = ct.isub(this.m) : ct.cmpn(0) < 0 && (Mt = ct.iadd(this.m)), Mt._forceRed(this);
          }, Ut.prototype.invm = function(tt) {
            var nt = this.imod(tt._invmp(this.m).mul(this.r2));
            return nt._forceRed(this);
          };
        })(d, commonjsGlobal);
      }(bn$3)), bn$3.exports;
    }
    var withPublic_1, hasRequiredWithPublic;
    function requireWithPublic() {
      if (hasRequiredWithPublic) return withPublic_1;
      hasRequiredWithPublic = 1;
      var d = requireBn(), _ = requireSafeBuffer$1().Buffer;
      function $(j, rt) {
        return _.from(j.toRed(d.mont(rt.modulus)).redPow(new d(rt.publicExponent)).fromRed().toArray());
      }
      return withPublic_1 = $, withPublic_1;
    }
    var publicEncrypt, hasRequiredPublicEncrypt;
    function requirePublicEncrypt() {
      if (hasRequiredPublicEncrypt) return publicEncrypt;
      hasRequiredPublicEncrypt = 1;
      var d = requireParseAsn1(), _ = requireBrowser$b(), $ = requireBrowser$9(), j = requireMgf(), rt = requireXor(), et = requireBn(), st = requireWithPublic(), pt = requireBrowserifyRsa(), Et = requireSafeBuffer$1().Buffer;
      publicEncrypt = function(Tt, Pt, It) {
        var jt;
        Tt.padding ? jt = Tt.padding : It ? jt = 1 : jt = 4;
        var Dt = d(Tt), Ot;
        if (jt === 4) Ot = Bt(Dt, Pt);
        else if (jt === 1) Ot = St(Dt, Pt, It);
        else if (jt === 3) {
          if (Ot = new et(Pt), Ot.cmp(Dt.modulus) >= 0) throw new Error("data too long for modulus");
        } else throw new Error("unknown padding");
        return It ? pt(Ot, Dt) : st(Ot, Dt);
      };
      function Bt(kt, Tt) {
        var Pt = kt.modulus.byteLength(), It = Tt.length, jt = $("sha1").update(Et.alloc(0)).digest(), Dt = jt.length, Ot = 2 * Dt;
        if (It > Pt - Ot - 2) throw new Error("message too long");
        var Ft = Et.alloc(Pt - It - Ot - 2), Lt = Pt - Dt - 1, Zt = _(Dt), Kt = rt(Et.concat([
          jt,
          Ft,
          Et.alloc(1, 1),
          Tt
        ], Lt), j(Zt, Lt)), ar = rt(Zt, j(Kt, Dt));
        return new et(Et.concat([
          Et.alloc(1),
          ar,
          Kt
        ], Pt));
      }
      function St(kt, Tt, Pt) {
        var It = Tt.length, jt = kt.modulus.byteLength();
        if (It > jt - 11) throw new Error("message too long");
        var Dt;
        return Pt ? Dt = Et.alloc(jt - It - 3, 255) : Dt = $t(jt - It - 3), new et(Et.concat([
          Et.from([
            0,
            Pt ? 1 : 2
          ]),
          Dt,
          Et.alloc(1),
          Tt
        ], jt));
      }
      function $t(kt) {
        for (var Tt = Et.allocUnsafe(kt), Pt = 0, It = _(kt * 2), jt = 0, Dt; Pt < kt; ) jt === It.length && (It = _(kt * 2), jt = 0), Dt = It[jt++], Dt && (Tt[Pt++] = Dt);
        return Tt;
      }
      return publicEncrypt;
    }
    var privateDecrypt, hasRequiredPrivateDecrypt;
    function requirePrivateDecrypt() {
      if (hasRequiredPrivateDecrypt) return privateDecrypt;
      hasRequiredPrivateDecrypt = 1;
      var d = requireParseAsn1(), _ = requireMgf(), $ = requireXor(), j = requireBn(), rt = requireBrowserifyRsa(), et = requireBrowser$9(), st = requireWithPublic(), pt = requireSafeBuffer$1().Buffer;
      privateDecrypt = function(kt, Tt, Pt) {
        var It;
        kt.padding ? It = kt.padding : Pt ? It = 1 : It = 4;
        var jt = d(kt), Dt = jt.modulus.byteLength();
        if (Tt.length > Dt || new j(Tt).cmp(jt.modulus) >= 0) throw new Error("decryption error");
        var Ot;
        Pt ? Ot = st(new j(Tt), jt) : Ot = rt(Tt, jt);
        var Ft = pt.alloc(Dt - Ot.length);
        if (Ot = pt.concat([
          Ft,
          Ot
        ], Dt), It === 4) return Et(jt, Ot);
        if (It === 1) return Bt(jt, Ot, Pt);
        if (It === 3) return Ot;
        throw new Error("unknown padding");
      };
      function Et($t, kt) {
        var Tt = $t.modulus.byteLength(), Pt = et("sha1").update(pt.alloc(0)).digest(), It = Pt.length;
        if (kt[0] !== 0) throw new Error("decryption error");
        var jt = kt.slice(1, It + 1), Dt = kt.slice(It + 1), Ot = $(jt, _(Dt, It)), Ft = $(Dt, _(Ot, Tt - It - 1));
        if (St(Pt, Ft.slice(0, It))) throw new Error("decryption error");
        for (var Lt = It; Ft[Lt] === 0; ) Lt++;
        if (Ft[Lt++] !== 1) throw new Error("decryption error");
        return Ft.slice(Lt);
      }
      function Bt($t, kt, Tt) {
        for (var Pt = kt.slice(0, 2), It = 2, jt = 0; kt[It++] !== 0; ) if (It >= kt.length) {
          jt++;
          break;
        }
        var Dt = kt.slice(2, It - 1);
        if ((Pt.toString("hex") !== "0002" && !Tt || Pt.toString("hex") !== "0001" && Tt) && jt++, Dt.length < 8 && jt++, jt) throw new Error("decryption error");
        return kt.slice(It);
      }
      function St($t, kt) {
        $t = pt.from($t), kt = pt.from(kt);
        var Tt = 0, Pt = $t.length;
        $t.length !== kt.length && (Tt++, Pt = Math.min($t.length, kt.length));
        for (var It = -1; ++It < Pt; ) Tt += $t[It] ^ kt[It];
        return Tt;
      }
      return privateDecrypt;
    }
    var hasRequiredBrowser$1;
    function requireBrowser$1() {
      return hasRequiredBrowser$1 || (hasRequiredBrowser$1 = 1, function(d) {
        d.publicEncrypt = requirePublicEncrypt(), d.privateDecrypt = requirePrivateDecrypt(), d.privateEncrypt = function($, j) {
          return d.publicEncrypt($, j, true);
        }, d.publicDecrypt = function($, j) {
          return d.privateDecrypt($, j, true);
        };
      }(browser$4)), browser$4;
    }
    var browser$3 = {}, hasRequiredBrowser;
    function requireBrowser() {
      if (hasRequiredBrowser) return browser$3;
      hasRequiredBrowser = 1;
      function d() {
        throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
      }
      var _ = requireSafeBuffer$1(), $ = requireBrowser$b(), j = _.Buffer, rt = _.kMaxLength, et = commonjsGlobal.crypto || commonjsGlobal.msCrypto, st = Math.pow(2, 32) - 1;
      function pt(kt, Tt) {
        if (typeof kt != "number" || kt !== kt) throw new TypeError("offset must be a number");
        if (kt > st || kt < 0) throw new TypeError("offset must be a uint32");
        if (kt > rt || kt > Tt) throw new RangeError("offset out of range");
      }
      function Et(kt, Tt, Pt) {
        if (typeof kt != "number" || kt !== kt) throw new TypeError("size must be a number");
        if (kt > st || kt < 0) throw new TypeError("size must be a uint32");
        if (kt + Tt > Pt || kt > rt) throw new RangeError("buffer too small");
      }
      et && et.getRandomValues || !process$1.browser ? (browser$3.randomFill = Bt, browser$3.randomFillSync = $t) : (browser$3.randomFill = d, browser$3.randomFillSync = d);
      function Bt(kt, Tt, Pt, It) {
        if (!j.isBuffer(kt) && !(kt instanceof commonjsGlobal.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        if (typeof Tt == "function") It = Tt, Tt = 0, Pt = kt.length;
        else if (typeof Pt == "function") It = Pt, Pt = kt.length - Tt;
        else if (typeof It != "function") throw new TypeError('"cb" argument must be a function');
        return pt(Tt, kt.length), Et(Pt, Tt, kt.length), St(kt, Tt, Pt, It);
      }
      function St(kt, Tt, Pt, It) {
        if (process$1.browser) {
          var jt = kt.buffer, Dt = new Uint8Array(jt, Tt, Pt);
          if (et.getRandomValues(Dt), It) {
            process$1.nextTick(function() {
              It(null, kt);
            });
            return;
          }
          return kt;
        }
        if (It) {
          $(Pt, function(Ft, Lt) {
            if (Ft) return It(Ft);
            Lt.copy(kt, Tt), It(null, kt);
          });
          return;
        }
        var Ot = $(Pt);
        return Ot.copy(kt, Tt), kt;
      }
      function $t(kt, Tt, Pt) {
        if (typeof Tt > "u" && (Tt = 0), !j.isBuffer(kt) && !(kt instanceof commonjsGlobal.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        return pt(Tt, kt.length), Pt === void 0 && (Pt = kt.length - Tt), Et(Pt, Tt, kt.length), St(kt, Tt, Pt);
      }
      return browser$3;
    }
    var hasRequiredCryptoBrowserify;
    function requireCryptoBrowserify() {
      if (hasRequiredCryptoBrowserify) return cryptoBrowserify;
      hasRequiredCryptoBrowserify = 1, cryptoBrowserify.randomBytes = cryptoBrowserify.rng = cryptoBrowserify.pseudoRandomBytes = cryptoBrowserify.prng = requireBrowser$b(), cryptoBrowserify.createHash = cryptoBrowserify.Hash = requireBrowser$9(), cryptoBrowserify.createHmac = cryptoBrowserify.Hmac = requireBrowser$8();
      var d = requireAlgos(), _ = Object.keys(d), $ = [
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "md5",
        "rmd160"
      ].concat(_);
      cryptoBrowserify.getHashes = function() {
        return $;
      };
      var j = requireBrowser$7();
      cryptoBrowserify.pbkdf2 = j.pbkdf2, cryptoBrowserify.pbkdf2Sync = j.pbkdf2Sync;
      var rt = requireBrowser$5();
      cryptoBrowserify.Cipher = rt.Cipher, cryptoBrowserify.createCipher = rt.createCipher, cryptoBrowserify.Cipheriv = rt.Cipheriv, cryptoBrowserify.createCipheriv = rt.createCipheriv, cryptoBrowserify.Decipher = rt.Decipher, cryptoBrowserify.createDecipher = rt.createDecipher, cryptoBrowserify.Decipheriv = rt.Decipheriv, cryptoBrowserify.createDecipheriv = rt.createDecipheriv, cryptoBrowserify.getCiphers = rt.getCiphers, cryptoBrowserify.listCiphers = rt.listCiphers;
      var et = requireBrowser$4();
      cryptoBrowserify.DiffieHellmanGroup = et.DiffieHellmanGroup, cryptoBrowserify.createDiffieHellmanGroup = et.createDiffieHellmanGroup, cryptoBrowserify.getDiffieHellman = et.getDiffieHellman, cryptoBrowserify.createDiffieHellman = et.createDiffieHellman, cryptoBrowserify.DiffieHellman = et.DiffieHellman;
      var st = requireBrowser$3();
      cryptoBrowserify.createSign = st.createSign, cryptoBrowserify.Sign = st.Sign, cryptoBrowserify.createVerify = st.createVerify, cryptoBrowserify.Verify = st.Verify, cryptoBrowserify.createECDH = requireBrowser$2();
      var pt = requireBrowser$1();
      cryptoBrowserify.publicEncrypt = pt.publicEncrypt, cryptoBrowserify.privateEncrypt = pt.privateEncrypt, cryptoBrowserify.publicDecrypt = pt.publicDecrypt, cryptoBrowserify.privateDecrypt = pt.privateDecrypt;
      var Et = requireBrowser();
      return cryptoBrowserify.randomFill = Et.randomFill, cryptoBrowserify.randomFillSync = Et.randomFillSync, cryptoBrowserify.createCredentials = function() {
        throw new Error(`sorry, createCredentials is not implemented yet
we accept pull requests
https://github.com/browserify/crypto-browserify`);
      }, cryptoBrowserify.constants = {
        DH_CHECK_P_NOT_SAFE_PRIME: 2,
        DH_CHECK_P_NOT_PRIME: 1,
        DH_UNABLE_TO_CHECK_GENERATOR: 4,
        DH_NOT_SUITABLE_GENERATOR: 8,
        NPN_ENABLED: 1,
        ALPN_ENABLED: 1,
        RSA_PKCS1_PADDING: 1,
        RSA_SSLV23_PADDING: 2,
        RSA_NO_PADDING: 3,
        RSA_PKCS1_OAEP_PADDING: 4,
        RSA_X931_PADDING: 5,
        RSA_PKCS1_PSS_PADDING: 6,
        POINT_CONVERSION_COMPRESSED: 2,
        POINT_CONVERSION_UNCOMPRESSED: 4,
        POINT_CONVERSION_HYBRID: 6
      }, cryptoBrowserify;
    }
    (function(d) {
      (function(_) {
        var $ = function(nr) {
          var or, ur = new Float64Array(16);
          if (nr) for (or = 0; or < nr.length; or++) ur[or] = nr[or];
          return ur;
        }, j = function() {
          throw new Error("no PRNG");
        }, rt = new Uint8Array(16), et = new Uint8Array(32);
        et[0] = 9;
        var st = $(), pt = $([
          1
        ]), Et = $([
          56129,
          1
        ]), Bt = $([
          30883,
          4953,
          19914,
          30187,
          55467,
          16705,
          2637,
          112,
          59544,
          30585,
          16505,
          36039,
          65139,
          11119,
          27886,
          20995
        ]), St = $([
          61785,
          9906,
          39828,
          60374,
          45398,
          33411,
          5274,
          224,
          53552,
          61171,
          33010,
          6542,
          64743,
          22239,
          55772,
          9222
        ]), $t = $([
          54554,
          36645,
          11616,
          51542,
          42930,
          38181,
          51040,
          26924,
          56412,
          64982,
          57905,
          49316,
          21502,
          52590,
          14035,
          8553
        ]), kt = $([
          26200,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214,
          26214
        ]), Tt = $([
          41136,
          18958,
          6951,
          50414,
          58488,
          44335,
          6150,
          12099,
          55207,
          15867,
          153,
          11085,
          57099,
          20417,
          9344,
          11139
        ]);
        function Pt(nr, or, ur, Ht) {
          nr[or] = ur >> 24 & 255, nr[or + 1] = ur >> 16 & 255, nr[or + 2] = ur >> 8 & 255, nr[or + 3] = ur & 255, nr[or + 4] = Ht >> 24 & 255, nr[or + 5] = Ht >> 16 & 255, nr[or + 6] = Ht >> 8 & 255, nr[or + 7] = Ht & 255;
        }
        function It(nr, or, ur, Ht, lr) {
          var wr, Ar = 0;
          for (wr = 0; wr < lr; wr++) Ar |= nr[or + wr] ^ ur[Ht + wr];
          return (1 & Ar - 1 >>> 8) - 1;
        }
        function jt(nr, or, ur, Ht) {
          return It(nr, or, ur, Ht, 16);
        }
        function Dt(nr, or, ur, Ht) {
          return It(nr, or, ur, Ht, 32);
        }
        function Ot(nr, or, ur, Ht) {
          for (var lr = Ht[0] & 255 | (Ht[1] & 255) << 8 | (Ht[2] & 255) << 16 | (Ht[3] & 255) << 24, wr = ur[0] & 255 | (ur[1] & 255) << 8 | (ur[2] & 255) << 16 | (ur[3] & 255) << 24, Ar = ur[4] & 255 | (ur[5] & 255) << 8 | (ur[6] & 255) << 16 | (ur[7] & 255) << 24, Cr = ur[8] & 255 | (ur[9] & 255) << 8 | (ur[10] & 255) << 16 | (ur[11] & 255) << 24, Ir = ur[12] & 255 | (ur[13] & 255) << 8 | (ur[14] & 255) << 16 | (ur[15] & 255) << 24, Jr = Ht[4] & 255 | (Ht[5] & 255) << 8 | (Ht[6] & 255) << 16 | (Ht[7] & 255) << 24, Qr = or[0] & 255 | (or[1] & 255) << 8 | (or[2] & 255) << 16 | (or[3] & 255) << 24, Sn = or[4] & 255 | (or[5] & 255) << 8 | (or[6] & 255) << 16 | (or[7] & 255) << 24, dn = or[8] & 255 | (or[9] & 255) << 8 | (or[10] & 255) << 16 | (or[11] & 255) << 24, yn = or[12] & 255 | (or[13] & 255) << 8 | (or[14] & 255) << 16 | (or[15] & 255) << 24, wn = Ht[8] & 255 | (Ht[9] & 255) << 8 | (Ht[10] & 255) << 16 | (Ht[11] & 255) << 24, Mn = ur[16] & 255 | (ur[17] & 255) << 8 | (ur[18] & 255) << 16 | (ur[19] & 255) << 24, En = ur[20] & 255 | (ur[21] & 255) << 8 | (ur[22] & 255) << 16 | (ur[23] & 255) << 24, xn = ur[24] & 255 | (ur[25] & 255) << 8 | (ur[26] & 255) << 16 | (ur[27] & 255) << 24, Cn = ur[28] & 255 | (ur[29] & 255) << 8 | (ur[30] & 255) << 16 | (ur[31] & 255) << 24, _n = Ht[12] & 255 | (Ht[13] & 255) << 8 | (Ht[14] & 255) << 16 | (Ht[15] & 255) << 24, hn = lr, gn = wr, ln = Ar, pn = Cr, mn = Ir, sn = Jr, Vr = Qr, Zr = Sn, un = dn, an = yn, fn = wn, vn = Mn, An = En, Bn = xn, $n = Cn, Rn = _n, Dr, Tn = 0; Tn < 20; Tn += 2) Dr = hn + An | 0, mn ^= Dr << 7 | Dr >>> 25, Dr = mn + hn | 0, un ^= Dr << 9 | Dr >>> 23, Dr = un + mn | 0, An ^= Dr << 13 | Dr >>> 19, Dr = An + un | 0, hn ^= Dr << 18 | Dr >>> 14, Dr = sn + gn | 0, an ^= Dr << 7 | Dr >>> 25, Dr = an + sn | 0, Bn ^= Dr << 9 | Dr >>> 23, Dr = Bn + an | 0, gn ^= Dr << 13 | Dr >>> 19, Dr = gn + Bn | 0, sn ^= Dr << 18 | Dr >>> 14, Dr = fn + Vr | 0, $n ^= Dr << 7 | Dr >>> 25, Dr = $n + fn | 0, ln ^= Dr << 9 | Dr >>> 23, Dr = ln + $n | 0, Vr ^= Dr << 13 | Dr >>> 19, Dr = Vr + ln | 0, fn ^= Dr << 18 | Dr >>> 14, Dr = Rn + vn | 0, pn ^= Dr << 7 | Dr >>> 25, Dr = pn + Rn | 0, Zr ^= Dr << 9 | Dr >>> 23, Dr = Zr + pn | 0, vn ^= Dr << 13 | Dr >>> 19, Dr = vn + Zr | 0, Rn ^= Dr << 18 | Dr >>> 14, Dr = hn + pn | 0, gn ^= Dr << 7 | Dr >>> 25, Dr = gn + hn | 0, ln ^= Dr << 9 | Dr >>> 23, Dr = ln + gn | 0, pn ^= Dr << 13 | Dr >>> 19, Dr = pn + ln | 0, hn ^= Dr << 18 | Dr >>> 14, Dr = sn + mn | 0, Vr ^= Dr << 7 | Dr >>> 25, Dr = Vr + sn | 0, Zr ^= Dr << 9 | Dr >>> 23, Dr = Zr + Vr | 0, mn ^= Dr << 13 | Dr >>> 19, Dr = mn + Zr | 0, sn ^= Dr << 18 | Dr >>> 14, Dr = fn + an | 0, vn ^= Dr << 7 | Dr >>> 25, Dr = vn + fn | 0, un ^= Dr << 9 | Dr >>> 23, Dr = un + vn | 0, an ^= Dr << 13 | Dr >>> 19, Dr = an + un | 0, fn ^= Dr << 18 | Dr >>> 14, Dr = Rn + $n | 0, An ^= Dr << 7 | Dr >>> 25, Dr = An + Rn | 0, Bn ^= Dr << 9 | Dr >>> 23, Dr = Bn + An | 0, $n ^= Dr << 13 | Dr >>> 19, Dr = $n + Bn | 0, Rn ^= Dr << 18 | Dr >>> 14;
          hn = hn + lr | 0, gn = gn + wr | 0, ln = ln + Ar | 0, pn = pn + Cr | 0, mn = mn + Ir | 0, sn = sn + Jr | 0, Vr = Vr + Qr | 0, Zr = Zr + Sn | 0, un = un + dn | 0, an = an + yn | 0, fn = fn + wn | 0, vn = vn + Mn | 0, An = An + En | 0, Bn = Bn + xn | 0, $n = $n + Cn | 0, Rn = Rn + _n | 0, nr[0] = hn >>> 0 & 255, nr[1] = hn >>> 8 & 255, nr[2] = hn >>> 16 & 255, nr[3] = hn >>> 24 & 255, nr[4] = gn >>> 0 & 255, nr[5] = gn >>> 8 & 255, nr[6] = gn >>> 16 & 255, nr[7] = gn >>> 24 & 255, nr[8] = ln >>> 0 & 255, nr[9] = ln >>> 8 & 255, nr[10] = ln >>> 16 & 255, nr[11] = ln >>> 24 & 255, nr[12] = pn >>> 0 & 255, nr[13] = pn >>> 8 & 255, nr[14] = pn >>> 16 & 255, nr[15] = pn >>> 24 & 255, nr[16] = mn >>> 0 & 255, nr[17] = mn >>> 8 & 255, nr[18] = mn >>> 16 & 255, nr[19] = mn >>> 24 & 255, nr[20] = sn >>> 0 & 255, nr[21] = sn >>> 8 & 255, nr[22] = sn >>> 16 & 255, nr[23] = sn >>> 24 & 255, nr[24] = Vr >>> 0 & 255, nr[25] = Vr >>> 8 & 255, nr[26] = Vr >>> 16 & 255, nr[27] = Vr >>> 24 & 255, nr[28] = Zr >>> 0 & 255, nr[29] = Zr >>> 8 & 255, nr[30] = Zr >>> 16 & 255, nr[31] = Zr >>> 24 & 255, nr[32] = un >>> 0 & 255, nr[33] = un >>> 8 & 255, nr[34] = un >>> 16 & 255, nr[35] = un >>> 24 & 255, nr[36] = an >>> 0 & 255, nr[37] = an >>> 8 & 255, nr[38] = an >>> 16 & 255, nr[39] = an >>> 24 & 255, nr[40] = fn >>> 0 & 255, nr[41] = fn >>> 8 & 255, nr[42] = fn >>> 16 & 255, nr[43] = fn >>> 24 & 255, nr[44] = vn >>> 0 & 255, nr[45] = vn >>> 8 & 255, nr[46] = vn >>> 16 & 255, nr[47] = vn >>> 24 & 255, nr[48] = An >>> 0 & 255, nr[49] = An >>> 8 & 255, nr[50] = An >>> 16 & 255, nr[51] = An >>> 24 & 255, nr[52] = Bn >>> 0 & 255, nr[53] = Bn >>> 8 & 255, nr[54] = Bn >>> 16 & 255, nr[55] = Bn >>> 24 & 255, nr[56] = $n >>> 0 & 255, nr[57] = $n >>> 8 & 255, nr[58] = $n >>> 16 & 255, nr[59] = $n >>> 24 & 255, nr[60] = Rn >>> 0 & 255, nr[61] = Rn >>> 8 & 255, nr[62] = Rn >>> 16 & 255, nr[63] = Rn >>> 24 & 255;
        }
        function Ft(nr, or, ur, Ht) {
          for (var lr = Ht[0] & 255 | (Ht[1] & 255) << 8 | (Ht[2] & 255) << 16 | (Ht[3] & 255) << 24, wr = ur[0] & 255 | (ur[1] & 255) << 8 | (ur[2] & 255) << 16 | (ur[3] & 255) << 24, Ar = ur[4] & 255 | (ur[5] & 255) << 8 | (ur[6] & 255) << 16 | (ur[7] & 255) << 24, Cr = ur[8] & 255 | (ur[9] & 255) << 8 | (ur[10] & 255) << 16 | (ur[11] & 255) << 24, Ir = ur[12] & 255 | (ur[13] & 255) << 8 | (ur[14] & 255) << 16 | (ur[15] & 255) << 24, Jr = Ht[4] & 255 | (Ht[5] & 255) << 8 | (Ht[6] & 255) << 16 | (Ht[7] & 255) << 24, Qr = or[0] & 255 | (or[1] & 255) << 8 | (or[2] & 255) << 16 | (or[3] & 255) << 24, Sn = or[4] & 255 | (or[5] & 255) << 8 | (or[6] & 255) << 16 | (or[7] & 255) << 24, dn = or[8] & 255 | (or[9] & 255) << 8 | (or[10] & 255) << 16 | (or[11] & 255) << 24, yn = or[12] & 255 | (or[13] & 255) << 8 | (or[14] & 255) << 16 | (or[15] & 255) << 24, wn = Ht[8] & 255 | (Ht[9] & 255) << 8 | (Ht[10] & 255) << 16 | (Ht[11] & 255) << 24, Mn = ur[16] & 255 | (ur[17] & 255) << 8 | (ur[18] & 255) << 16 | (ur[19] & 255) << 24, En = ur[20] & 255 | (ur[21] & 255) << 8 | (ur[22] & 255) << 16 | (ur[23] & 255) << 24, xn = ur[24] & 255 | (ur[25] & 255) << 8 | (ur[26] & 255) << 16 | (ur[27] & 255) << 24, Cn = ur[28] & 255 | (ur[29] & 255) << 8 | (ur[30] & 255) << 16 | (ur[31] & 255) << 24, _n = Ht[12] & 255 | (Ht[13] & 255) << 8 | (Ht[14] & 255) << 16 | (Ht[15] & 255) << 24, hn = lr, gn = wr, ln = Ar, pn = Cr, mn = Ir, sn = Jr, Vr = Qr, Zr = Sn, un = dn, an = yn, fn = wn, vn = Mn, An = En, Bn = xn, $n = Cn, Rn = _n, Dr, Tn = 0; Tn < 20; Tn += 2) Dr = hn + An | 0, mn ^= Dr << 7 | Dr >>> 25, Dr = mn + hn | 0, un ^= Dr << 9 | Dr >>> 23, Dr = un + mn | 0, An ^= Dr << 13 | Dr >>> 19, Dr = An + un | 0, hn ^= Dr << 18 | Dr >>> 14, Dr = sn + gn | 0, an ^= Dr << 7 | Dr >>> 25, Dr = an + sn | 0, Bn ^= Dr << 9 | Dr >>> 23, Dr = Bn + an | 0, gn ^= Dr << 13 | Dr >>> 19, Dr = gn + Bn | 0, sn ^= Dr << 18 | Dr >>> 14, Dr = fn + Vr | 0, $n ^= Dr << 7 | Dr >>> 25, Dr = $n + fn | 0, ln ^= Dr << 9 | Dr >>> 23, Dr = ln + $n | 0, Vr ^= Dr << 13 | Dr >>> 19, Dr = Vr + ln | 0, fn ^= Dr << 18 | Dr >>> 14, Dr = Rn + vn | 0, pn ^= Dr << 7 | Dr >>> 25, Dr = pn + Rn | 0, Zr ^= Dr << 9 | Dr >>> 23, Dr = Zr + pn | 0, vn ^= Dr << 13 | Dr >>> 19, Dr = vn + Zr | 0, Rn ^= Dr << 18 | Dr >>> 14, Dr = hn + pn | 0, gn ^= Dr << 7 | Dr >>> 25, Dr = gn + hn | 0, ln ^= Dr << 9 | Dr >>> 23, Dr = ln + gn | 0, pn ^= Dr << 13 | Dr >>> 19, Dr = pn + ln | 0, hn ^= Dr << 18 | Dr >>> 14, Dr = sn + mn | 0, Vr ^= Dr << 7 | Dr >>> 25, Dr = Vr + sn | 0, Zr ^= Dr << 9 | Dr >>> 23, Dr = Zr + Vr | 0, mn ^= Dr << 13 | Dr >>> 19, Dr = mn + Zr | 0, sn ^= Dr << 18 | Dr >>> 14, Dr = fn + an | 0, vn ^= Dr << 7 | Dr >>> 25, Dr = vn + fn | 0, un ^= Dr << 9 | Dr >>> 23, Dr = un + vn | 0, an ^= Dr << 13 | Dr >>> 19, Dr = an + un | 0, fn ^= Dr << 18 | Dr >>> 14, Dr = Rn + $n | 0, An ^= Dr << 7 | Dr >>> 25, Dr = An + Rn | 0, Bn ^= Dr << 9 | Dr >>> 23, Dr = Bn + An | 0, $n ^= Dr << 13 | Dr >>> 19, Dr = $n + Bn | 0, Rn ^= Dr << 18 | Dr >>> 14;
          nr[0] = hn >>> 0 & 255, nr[1] = hn >>> 8 & 255, nr[2] = hn >>> 16 & 255, nr[3] = hn >>> 24 & 255, nr[4] = sn >>> 0 & 255, nr[5] = sn >>> 8 & 255, nr[6] = sn >>> 16 & 255, nr[7] = sn >>> 24 & 255, nr[8] = fn >>> 0 & 255, nr[9] = fn >>> 8 & 255, nr[10] = fn >>> 16 & 255, nr[11] = fn >>> 24 & 255, nr[12] = Rn >>> 0 & 255, nr[13] = Rn >>> 8 & 255, nr[14] = Rn >>> 16 & 255, nr[15] = Rn >>> 24 & 255, nr[16] = Vr >>> 0 & 255, nr[17] = Vr >>> 8 & 255, nr[18] = Vr >>> 16 & 255, nr[19] = Vr >>> 24 & 255, nr[20] = Zr >>> 0 & 255, nr[21] = Zr >>> 8 & 255, nr[22] = Zr >>> 16 & 255, nr[23] = Zr >>> 24 & 255, nr[24] = un >>> 0 & 255, nr[25] = un >>> 8 & 255, nr[26] = un >>> 16 & 255, nr[27] = un >>> 24 & 255, nr[28] = an >>> 0 & 255, nr[29] = an >>> 8 & 255, nr[30] = an >>> 16 & 255, nr[31] = an >>> 24 & 255;
        }
        function Lt(nr, or, ur, Ht) {
          Ot(nr, or, ur, Ht);
        }
        function Zt(nr, or, ur, Ht) {
          Ft(nr, or, ur, Ht);
        }
        var Kt = new Uint8Array([
          101,
          120,
          112,
          97,
          110,
          100,
          32,
          51,
          50,
          45,
          98,
          121,
          116,
          101,
          32,
          107
        ]);
        function ar(nr, or, ur, Ht, lr, wr, Ar) {
          var Cr = new Uint8Array(16), Ir = new Uint8Array(64), Jr, Qr;
          for (Qr = 0; Qr < 16; Qr++) Cr[Qr] = 0;
          for (Qr = 0; Qr < 8; Qr++) Cr[Qr] = wr[Qr];
          for (; lr >= 64; ) {
            for (Lt(Ir, Cr, Ar, Kt), Qr = 0; Qr < 64; Qr++) nr[or + Qr] = ur[Ht + Qr] ^ Ir[Qr];
            for (Jr = 1, Qr = 8; Qr < 16; Qr++) Jr = Jr + (Cr[Qr] & 255) | 0, Cr[Qr] = Jr & 255, Jr >>>= 8;
            lr -= 64, or += 64, Ht += 64;
          }
          if (lr > 0) for (Lt(Ir, Cr, Ar, Kt), Qr = 0; Qr < lr; Qr++) nr[or + Qr] = ur[Ht + Qr] ^ Ir[Qr];
          return 0;
        }
        function sr(nr, or, ur, Ht, lr) {
          var wr = new Uint8Array(16), Ar = new Uint8Array(64), Cr, Ir;
          for (Ir = 0; Ir < 16; Ir++) wr[Ir] = 0;
          for (Ir = 0; Ir < 8; Ir++) wr[Ir] = Ht[Ir];
          for (; ur >= 64; ) {
            for (Lt(Ar, wr, lr, Kt), Ir = 0; Ir < 64; Ir++) nr[or + Ir] = Ar[Ir];
            for (Cr = 1, Ir = 8; Ir < 16; Ir++) Cr = Cr + (wr[Ir] & 255) | 0, wr[Ir] = Cr & 255, Cr >>>= 8;
            ur -= 64, or += 64;
          }
          if (ur > 0) for (Lt(Ar, wr, lr, Kt), Ir = 0; Ir < ur; Ir++) nr[or + Ir] = Ar[Ir];
          return 0;
        }
        function er(nr, or, ur, Ht, lr) {
          var wr = new Uint8Array(32);
          Zt(wr, Ht, lr, Kt);
          for (var Ar = new Uint8Array(8), Cr = 0; Cr < 8; Cr++) Ar[Cr] = Ht[Cr + 16];
          return sr(nr, or, ur, Ar, wr);
        }
        function Ut(nr, or, ur, Ht, lr, wr, Ar) {
          var Cr = new Uint8Array(32);
          Zt(Cr, wr, Ar, Kt);
          for (var Ir = new Uint8Array(8), Jr = 0; Jr < 8; Jr++) Ir[Jr] = wr[Jr + 16];
          return ar(nr, or, ur, Ht, lr, Ir, Cr);
        }
        var xt = function(nr) {
          this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0;
          var or, ur, Ht, lr, wr, Ar, Cr, Ir;
          or = nr[0] & 255 | (nr[1] & 255) << 8, this.r[0] = or & 8191, ur = nr[2] & 255 | (nr[3] & 255) << 8, this.r[1] = (or >>> 13 | ur << 3) & 8191, Ht = nr[4] & 255 | (nr[5] & 255) << 8, this.r[2] = (ur >>> 10 | Ht << 6) & 7939, lr = nr[6] & 255 | (nr[7] & 255) << 8, this.r[3] = (Ht >>> 7 | lr << 9) & 8191, wr = nr[8] & 255 | (nr[9] & 255) << 8, this.r[4] = (lr >>> 4 | wr << 12) & 255, this.r[5] = wr >>> 1 & 8190, Ar = nr[10] & 255 | (nr[11] & 255) << 8, this.r[6] = (wr >>> 14 | Ar << 2) & 8191, Cr = nr[12] & 255 | (nr[13] & 255) << 8, this.r[7] = (Ar >>> 11 | Cr << 5) & 8065, Ir = nr[14] & 255 | (nr[15] & 255) << 8, this.r[8] = (Cr >>> 8 | Ir << 8) & 8191, this.r[9] = Ir >>> 5 & 127, this.pad[0] = nr[16] & 255 | (nr[17] & 255) << 8, this.pad[1] = nr[18] & 255 | (nr[19] & 255) << 8, this.pad[2] = nr[20] & 255 | (nr[21] & 255) << 8, this.pad[3] = nr[22] & 255 | (nr[23] & 255) << 8, this.pad[4] = nr[24] & 255 | (nr[25] & 255) << 8, this.pad[5] = nr[26] & 255 | (nr[27] & 255) << 8, this.pad[6] = nr[28] & 255 | (nr[29] & 255) << 8, this.pad[7] = nr[30] & 255 | (nr[31] & 255) << 8;
        };
        xt.prototype.blocks = function(nr, or, ur) {
          for (var Ht = this.fin ? 0 : 2048, lr, wr, Ar, Cr, Ir, Jr, Qr, Sn, dn, yn, wn, Mn, En, xn, Cn, _n, hn, gn, ln, pn = this.h[0], mn = this.h[1], sn = this.h[2], Vr = this.h[3], Zr = this.h[4], un = this.h[5], an = this.h[6], fn = this.h[7], vn = this.h[8], An = this.h[9], Bn = this.r[0], $n = this.r[1], Rn = this.r[2], Dr = this.r[3], Tn = this.r[4], Nn = this.r[5], Dn = this.r[6], kn = this.r[7], In = this.r[8], Pn = this.r[9]; ur >= 16; ) lr = nr[or + 0] & 255 | (nr[or + 1] & 255) << 8, pn += lr & 8191, wr = nr[or + 2] & 255 | (nr[or + 3] & 255) << 8, mn += (lr >>> 13 | wr << 3) & 8191, Ar = nr[or + 4] & 255 | (nr[or + 5] & 255) << 8, sn += (wr >>> 10 | Ar << 6) & 8191, Cr = nr[or + 6] & 255 | (nr[or + 7] & 255) << 8, Vr += (Ar >>> 7 | Cr << 9) & 8191, Ir = nr[or + 8] & 255 | (nr[or + 9] & 255) << 8, Zr += (Cr >>> 4 | Ir << 12) & 8191, un += Ir >>> 1 & 8191, Jr = nr[or + 10] & 255 | (nr[or + 11] & 255) << 8, an += (Ir >>> 14 | Jr << 2) & 8191, Qr = nr[or + 12] & 255 | (nr[or + 13] & 255) << 8, fn += (Jr >>> 11 | Qr << 5) & 8191, Sn = nr[or + 14] & 255 | (nr[or + 15] & 255) << 8, vn += (Qr >>> 8 | Sn << 8) & 8191, An += Sn >>> 5 | Ht, dn = 0, yn = dn, yn += pn * Bn, yn += mn * (5 * Pn), yn += sn * (5 * In), yn += Vr * (5 * kn), yn += Zr * (5 * Dn), dn = yn >>> 13, yn &= 8191, yn += un * (5 * Nn), yn += an * (5 * Tn), yn += fn * (5 * Dr), yn += vn * (5 * Rn), yn += An * (5 * $n), dn += yn >>> 13, yn &= 8191, wn = dn, wn += pn * $n, wn += mn * Bn, wn += sn * (5 * Pn), wn += Vr * (5 * In), wn += Zr * (5 * kn), dn = wn >>> 13, wn &= 8191, wn += un * (5 * Dn), wn += an * (5 * Nn), wn += fn * (5 * Tn), wn += vn * (5 * Dr), wn += An * (5 * Rn), dn += wn >>> 13, wn &= 8191, Mn = dn, Mn += pn * Rn, Mn += mn * $n, Mn += sn * Bn, Mn += Vr * (5 * Pn), Mn += Zr * (5 * In), dn = Mn >>> 13, Mn &= 8191, Mn += un * (5 * kn), Mn += an * (5 * Dn), Mn += fn * (5 * Nn), Mn += vn * (5 * Tn), Mn += An * (5 * Dr), dn += Mn >>> 13, Mn &= 8191, En = dn, En += pn * Dr, En += mn * Rn, En += sn * $n, En += Vr * Bn, En += Zr * (5 * Pn), dn = En >>> 13, En &= 8191, En += un * (5 * In), En += an * (5 * kn), En += fn * (5 * Dn), En += vn * (5 * Nn), En += An * (5 * Tn), dn += En >>> 13, En &= 8191, xn = dn, xn += pn * Tn, xn += mn * Dr, xn += sn * Rn, xn += Vr * $n, xn += Zr * Bn, dn = xn >>> 13, xn &= 8191, xn += un * (5 * Pn), xn += an * (5 * In), xn += fn * (5 * kn), xn += vn * (5 * Dn), xn += An * (5 * Nn), dn += xn >>> 13, xn &= 8191, Cn = dn, Cn += pn * Nn, Cn += mn * Tn, Cn += sn * Dr, Cn += Vr * Rn, Cn += Zr * $n, dn = Cn >>> 13, Cn &= 8191, Cn += un * Bn, Cn += an * (5 * Pn), Cn += fn * (5 * In), Cn += vn * (5 * kn), Cn += An * (5 * Dn), dn += Cn >>> 13, Cn &= 8191, _n = dn, _n += pn * Dn, _n += mn * Nn, _n += sn * Tn, _n += Vr * Dr, _n += Zr * Rn, dn = _n >>> 13, _n &= 8191, _n += un * $n, _n += an * Bn, _n += fn * (5 * Pn), _n += vn * (5 * In), _n += An * (5 * kn), dn += _n >>> 13, _n &= 8191, hn = dn, hn += pn * kn, hn += mn * Dn, hn += sn * Nn, hn += Vr * Tn, hn += Zr * Dr, dn = hn >>> 13, hn &= 8191, hn += un * Rn, hn += an * $n, hn += fn * Bn, hn += vn * (5 * Pn), hn += An * (5 * In), dn += hn >>> 13, hn &= 8191, gn = dn, gn += pn * In, gn += mn * kn, gn += sn * Dn, gn += Vr * Nn, gn += Zr * Tn, dn = gn >>> 13, gn &= 8191, gn += un * Dr, gn += an * Rn, gn += fn * $n, gn += vn * Bn, gn += An * (5 * Pn), dn += gn >>> 13, gn &= 8191, ln = dn, ln += pn * Pn, ln += mn * In, ln += sn * kn, ln += Vr * Dn, ln += Zr * Nn, dn = ln >>> 13, ln &= 8191, ln += un * Tn, ln += an * Dr, ln += fn * Rn, ln += vn * $n, ln += An * Bn, dn += ln >>> 13, ln &= 8191, dn = (dn << 2) + dn | 0, dn = dn + yn | 0, yn = dn & 8191, dn = dn >>> 13, wn += dn, pn = yn, mn = wn, sn = Mn, Vr = En, Zr = xn, un = Cn, an = _n, fn = hn, vn = gn, An = ln, or += 16, ur -= 16;
          this.h[0] = pn, this.h[1] = mn, this.h[2] = sn, this.h[3] = Vr, this.h[4] = Zr, this.h[5] = un, this.h[6] = an, this.h[7] = fn, this.h[8] = vn, this.h[9] = An;
        }, xt.prototype.finish = function(nr, or) {
          var ur = new Uint16Array(10), Ht, lr, wr, Ar;
          if (this.leftover) {
            for (Ar = this.leftover, this.buffer[Ar++] = 1; Ar < 16; Ar++) this.buffer[Ar] = 0;
            this.fin = 1, this.blocks(this.buffer, 0, 16);
          }
          for (Ht = this.h[1] >>> 13, this.h[1] &= 8191, Ar = 2; Ar < 10; Ar++) this.h[Ar] += Ht, Ht = this.h[Ar] >>> 13, this.h[Ar] &= 8191;
          for (this.h[0] += Ht * 5, Ht = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += Ht, Ht = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += Ht, ur[0] = this.h[0] + 5, Ht = ur[0] >>> 13, ur[0] &= 8191, Ar = 1; Ar < 10; Ar++) ur[Ar] = this.h[Ar] + Ht, Ht = ur[Ar] >>> 13, ur[Ar] &= 8191;
          for (ur[9] -= 8192, lr = (Ht ^ 1) - 1, Ar = 0; Ar < 10; Ar++) ur[Ar] &= lr;
          for (lr = ~lr, Ar = 0; Ar < 10; Ar++) this.h[Ar] = this.h[Ar] & lr | ur[Ar];
          for (this.h[0] = (this.h[0] | this.h[1] << 13) & 65535, this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535, this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535, this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535, this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535, this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535, this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535, this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535, wr = this.h[0] + this.pad[0], this.h[0] = wr & 65535, Ar = 1; Ar < 8; Ar++) wr = (this.h[Ar] + this.pad[Ar] | 0) + (wr >>> 16) | 0, this.h[Ar] = wr & 65535;
          nr[or + 0] = this.h[0] >>> 0 & 255, nr[or + 1] = this.h[0] >>> 8 & 255, nr[or + 2] = this.h[1] >>> 0 & 255, nr[or + 3] = this.h[1] >>> 8 & 255, nr[or + 4] = this.h[2] >>> 0 & 255, nr[or + 5] = this.h[2] >>> 8 & 255, nr[or + 6] = this.h[3] >>> 0 & 255, nr[or + 7] = this.h[3] >>> 8 & 255, nr[or + 8] = this.h[4] >>> 0 & 255, nr[or + 9] = this.h[4] >>> 8 & 255, nr[or + 10] = this.h[5] >>> 0 & 255, nr[or + 11] = this.h[5] >>> 8 & 255, nr[or + 12] = this.h[6] >>> 0 & 255, nr[or + 13] = this.h[6] >>> 8 & 255, nr[or + 14] = this.h[7] >>> 0 & 255, nr[or + 15] = this.h[7] >>> 8 & 255;
        }, xt.prototype.update = function(nr, or, ur) {
          var Ht, lr;
          if (this.leftover) {
            for (lr = 16 - this.leftover, lr > ur && (lr = ur), Ht = 0; Ht < lr; Ht++) this.buffer[this.leftover + Ht] = nr[or + Ht];
            if (ur -= lr, or += lr, this.leftover += lr, this.leftover < 16) return;
            this.blocks(this.buffer, 0, 16), this.leftover = 0;
          }
          if (ur >= 16 && (lr = ur - ur % 16, this.blocks(nr, or, lr), or += lr, ur -= lr), ur) {
            for (Ht = 0; Ht < ur; Ht++) this.buffer[this.leftover + Ht] = nr[or + Ht];
            this.leftover += ur;
          }
        };
        function tt(nr, or, ur, Ht, lr, wr) {
          var Ar = new xt(wr);
          return Ar.update(ur, Ht, lr), Ar.finish(nr, or), 0;
        }
        function nt(nr, or, ur, Ht, lr, wr) {
          var Ar = new Uint8Array(16);
          return tt(Ar, 0, ur, Ht, lr, wr), jt(nr, or, Ar, 0);
        }
        function it(nr, or, ur, Ht, lr) {
          var wr;
          if (ur < 32) return -1;
          for (Ut(nr, 0, or, 0, ur, Ht, lr), tt(nr, 16, nr, 32, ur - 32, nr), wr = 0; wr < 16; wr++) nr[wr] = 0;
          return 0;
        }
        function at(nr, or, ur, Ht, lr) {
          var wr, Ar = new Uint8Array(32);
          if (ur < 32 || (er(Ar, 0, 32, Ht, lr), nt(or, 16, or, 32, ur - 32, Ar) !== 0)) return -1;
          for (Ut(nr, 0, or, 0, ur, Ht, lr), wr = 0; wr < 32; wr++) nr[wr] = 0;
          return 0;
        }
        function ct(nr, or) {
          var ur;
          for (ur = 0; ur < 16; ur++) nr[ur] = or[ur] | 0;
        }
        function Mt(nr) {
          var or, ur, Ht = 1;
          for (or = 0; or < 16; or++) ur = nr[or] + Ht + 65535, Ht = Math.floor(ur / 65536), nr[or] = ur - Ht * 65536;
          nr[0] += Ht - 1 + 37 * (Ht - 1);
        }
        function At(nr, or, ur) {
          for (var Ht, lr = ~(ur - 1), wr = 0; wr < 16; wr++) Ht = lr & (nr[wr] ^ or[wr]), nr[wr] ^= Ht, or[wr] ^= Ht;
        }
        function ut(nr, or) {
          var ur, Ht, lr, wr = $(), Ar = $();
          for (ur = 0; ur < 16; ur++) Ar[ur] = or[ur];
          for (Mt(Ar), Mt(Ar), Mt(Ar), Ht = 0; Ht < 2; Ht++) {
            for (wr[0] = Ar[0] - 65517, ur = 1; ur < 15; ur++) wr[ur] = Ar[ur] - 65535 - (wr[ur - 1] >> 16 & 1), wr[ur - 1] &= 65535;
            wr[15] = Ar[15] - 32767 - (wr[14] >> 16 & 1), lr = wr[15] >> 16 & 1, wr[14] &= 65535, At(Ar, wr, 1 - lr);
          }
          for (ur = 0; ur < 16; ur++) nr[2 * ur] = Ar[ur] & 255, nr[2 * ur + 1] = Ar[ur] >> 8;
        }
        function ot(nr, or) {
          var ur = new Uint8Array(32), Ht = new Uint8Array(32);
          return ut(ur, nr), ut(Ht, or), Dt(ur, 0, Ht, 0);
        }
        function Ct(nr) {
          var or = new Uint8Array(32);
          return ut(or, nr), or[0] & 1;
        }
        function Rt(nr, or) {
          var ur;
          for (ur = 0; ur < 16; ur++) nr[ur] = or[2 * ur] + (or[2 * ur + 1] << 8);
          nr[15] &= 32767;
        }
        function Nt(nr, or, ur) {
          for (var Ht = 0; Ht < 16; Ht++) nr[Ht] = or[Ht] + ur[Ht];
        }
        function Wt(nr, or, ur) {
          for (var Ht = 0; Ht < 16; Ht++) nr[Ht] = or[Ht] - ur[Ht];
        }
        function Xt(nr, or, ur) {
          var Ht, lr, wr = 0, Ar = 0, Cr = 0, Ir = 0, Jr = 0, Qr = 0, Sn = 0, dn = 0, yn = 0, wn = 0, Mn = 0, En = 0, xn = 0, Cn = 0, _n = 0, hn = 0, gn = 0, ln = 0, pn = 0, mn = 0, sn = 0, Vr = 0, Zr = 0, un = 0, an = 0, fn = 0, vn = 0, An = 0, Bn = 0, $n = 0, Rn = 0, Dr = ur[0], Tn = ur[1], Nn = ur[2], Dn = ur[3], kn = ur[4], In = ur[5], Pn = ur[6], Ln = ur[7], On = ur[8], jn = ur[9], Fn = ur[10], Un = ur[11], qn = ur[12], zn = ur[13], Wn = ur[14], Vn = ur[15];
          Ht = or[0], wr += Ht * Dr, Ar += Ht * Tn, Cr += Ht * Nn, Ir += Ht * Dn, Jr += Ht * kn, Qr += Ht * In, Sn += Ht * Pn, dn += Ht * Ln, yn += Ht * On, wn += Ht * jn, Mn += Ht * Fn, En += Ht * Un, xn += Ht * qn, Cn += Ht * zn, _n += Ht * Wn, hn += Ht * Vn, Ht = or[1], Ar += Ht * Dr, Cr += Ht * Tn, Ir += Ht * Nn, Jr += Ht * Dn, Qr += Ht * kn, Sn += Ht * In, dn += Ht * Pn, yn += Ht * Ln, wn += Ht * On, Mn += Ht * jn, En += Ht * Fn, xn += Ht * Un, Cn += Ht * qn, _n += Ht * zn, hn += Ht * Wn, gn += Ht * Vn, Ht = or[2], Cr += Ht * Dr, Ir += Ht * Tn, Jr += Ht * Nn, Qr += Ht * Dn, Sn += Ht * kn, dn += Ht * In, yn += Ht * Pn, wn += Ht * Ln, Mn += Ht * On, En += Ht * jn, xn += Ht * Fn, Cn += Ht * Un, _n += Ht * qn, hn += Ht * zn, gn += Ht * Wn, ln += Ht * Vn, Ht = or[3], Ir += Ht * Dr, Jr += Ht * Tn, Qr += Ht * Nn, Sn += Ht * Dn, dn += Ht * kn, yn += Ht * In, wn += Ht * Pn, Mn += Ht * Ln, En += Ht * On, xn += Ht * jn, Cn += Ht * Fn, _n += Ht * Un, hn += Ht * qn, gn += Ht * zn, ln += Ht * Wn, pn += Ht * Vn, Ht = or[4], Jr += Ht * Dr, Qr += Ht * Tn, Sn += Ht * Nn, dn += Ht * Dn, yn += Ht * kn, wn += Ht * In, Mn += Ht * Pn, En += Ht * Ln, xn += Ht * On, Cn += Ht * jn, _n += Ht * Fn, hn += Ht * Un, gn += Ht * qn, ln += Ht * zn, pn += Ht * Wn, mn += Ht * Vn, Ht = or[5], Qr += Ht * Dr, Sn += Ht * Tn, dn += Ht * Nn, yn += Ht * Dn, wn += Ht * kn, Mn += Ht * In, En += Ht * Pn, xn += Ht * Ln, Cn += Ht * On, _n += Ht * jn, hn += Ht * Fn, gn += Ht * Un, ln += Ht * qn, pn += Ht * zn, mn += Ht * Wn, sn += Ht * Vn, Ht = or[6], Sn += Ht * Dr, dn += Ht * Tn, yn += Ht * Nn, wn += Ht * Dn, Mn += Ht * kn, En += Ht * In, xn += Ht * Pn, Cn += Ht * Ln, _n += Ht * On, hn += Ht * jn, gn += Ht * Fn, ln += Ht * Un, pn += Ht * qn, mn += Ht * zn, sn += Ht * Wn, Vr += Ht * Vn, Ht = or[7], dn += Ht * Dr, yn += Ht * Tn, wn += Ht * Nn, Mn += Ht * Dn, En += Ht * kn, xn += Ht * In, Cn += Ht * Pn, _n += Ht * Ln, hn += Ht * On, gn += Ht * jn, ln += Ht * Fn, pn += Ht * Un, mn += Ht * qn, sn += Ht * zn, Vr += Ht * Wn, Zr += Ht * Vn, Ht = or[8], yn += Ht * Dr, wn += Ht * Tn, Mn += Ht * Nn, En += Ht * Dn, xn += Ht * kn, Cn += Ht * In, _n += Ht * Pn, hn += Ht * Ln, gn += Ht * On, ln += Ht * jn, pn += Ht * Fn, mn += Ht * Un, sn += Ht * qn, Vr += Ht * zn, Zr += Ht * Wn, un += Ht * Vn, Ht = or[9], wn += Ht * Dr, Mn += Ht * Tn, En += Ht * Nn, xn += Ht * Dn, Cn += Ht * kn, _n += Ht * In, hn += Ht * Pn, gn += Ht * Ln, ln += Ht * On, pn += Ht * jn, mn += Ht * Fn, sn += Ht * Un, Vr += Ht * qn, Zr += Ht * zn, un += Ht * Wn, an += Ht * Vn, Ht = or[10], Mn += Ht * Dr, En += Ht * Tn, xn += Ht * Nn, Cn += Ht * Dn, _n += Ht * kn, hn += Ht * In, gn += Ht * Pn, ln += Ht * Ln, pn += Ht * On, mn += Ht * jn, sn += Ht * Fn, Vr += Ht * Un, Zr += Ht * qn, un += Ht * zn, an += Ht * Wn, fn += Ht * Vn, Ht = or[11], En += Ht * Dr, xn += Ht * Tn, Cn += Ht * Nn, _n += Ht * Dn, hn += Ht * kn, gn += Ht * In, ln += Ht * Pn, pn += Ht * Ln, mn += Ht * On, sn += Ht * jn, Vr += Ht * Fn, Zr += Ht * Un, un += Ht * qn, an += Ht * zn, fn += Ht * Wn, vn += Ht * Vn, Ht = or[12], xn += Ht * Dr, Cn += Ht * Tn, _n += Ht * Nn, hn += Ht * Dn, gn += Ht * kn, ln += Ht * In, pn += Ht * Pn, mn += Ht * Ln, sn += Ht * On, Vr += Ht * jn, Zr += Ht * Fn, un += Ht * Un, an += Ht * qn, fn += Ht * zn, vn += Ht * Wn, An += Ht * Vn, Ht = or[13], Cn += Ht * Dr, _n += Ht * Tn, hn += Ht * Nn, gn += Ht * Dn, ln += Ht * kn, pn += Ht * In, mn += Ht * Pn, sn += Ht * Ln, Vr += Ht * On, Zr += Ht * jn, un += Ht * Fn, an += Ht * Un, fn += Ht * qn, vn += Ht * zn, An += Ht * Wn, Bn += Ht * Vn, Ht = or[14], _n += Ht * Dr, hn += Ht * Tn, gn += Ht * Nn, ln += Ht * Dn, pn += Ht * kn, mn += Ht * In, sn += Ht * Pn, Vr += Ht * Ln, Zr += Ht * On, un += Ht * jn, an += Ht * Fn, fn += Ht * Un, vn += Ht * qn, An += Ht * zn, Bn += Ht * Wn, $n += Ht * Vn, Ht = or[15], hn += Ht * Dr, gn += Ht * Tn, ln += Ht * Nn, pn += Ht * Dn, mn += Ht * kn, sn += Ht * In, Vr += Ht * Pn, Zr += Ht * Ln, un += Ht * On, an += Ht * jn, fn += Ht * Fn, vn += Ht * Un, An += Ht * qn, Bn += Ht * zn, $n += Ht * Wn, Rn += Ht * Vn, wr += 38 * gn, Ar += 38 * ln, Cr += 38 * pn, Ir += 38 * mn, Jr += 38 * sn, Qr += 38 * Vr, Sn += 38 * Zr, dn += 38 * un, yn += 38 * an, wn += 38 * fn, Mn += 38 * vn, En += 38 * An, xn += 38 * Bn, Cn += 38 * $n, _n += 38 * Rn, lr = 1, Ht = wr + lr + 65535, lr = Math.floor(Ht / 65536), wr = Ht - lr * 65536, Ht = Ar + lr + 65535, lr = Math.floor(Ht / 65536), Ar = Ht - lr * 65536, Ht = Cr + lr + 65535, lr = Math.floor(Ht / 65536), Cr = Ht - lr * 65536, Ht = Ir + lr + 65535, lr = Math.floor(Ht / 65536), Ir = Ht - lr * 65536, Ht = Jr + lr + 65535, lr = Math.floor(Ht / 65536), Jr = Ht - lr * 65536, Ht = Qr + lr + 65535, lr = Math.floor(Ht / 65536), Qr = Ht - lr * 65536, Ht = Sn + lr + 65535, lr = Math.floor(Ht / 65536), Sn = Ht - lr * 65536, Ht = dn + lr + 65535, lr = Math.floor(Ht / 65536), dn = Ht - lr * 65536, Ht = yn + lr + 65535, lr = Math.floor(Ht / 65536), yn = Ht - lr * 65536, Ht = wn + lr + 65535, lr = Math.floor(Ht / 65536), wn = Ht - lr * 65536, Ht = Mn + lr + 65535, lr = Math.floor(Ht / 65536), Mn = Ht - lr * 65536, Ht = En + lr + 65535, lr = Math.floor(Ht / 65536), En = Ht - lr * 65536, Ht = xn + lr + 65535, lr = Math.floor(Ht / 65536), xn = Ht - lr * 65536, Ht = Cn + lr + 65535, lr = Math.floor(Ht / 65536), Cn = Ht - lr * 65536, Ht = _n + lr + 65535, lr = Math.floor(Ht / 65536), _n = Ht - lr * 65536, Ht = hn + lr + 65535, lr = Math.floor(Ht / 65536), hn = Ht - lr * 65536, wr += lr - 1 + 37 * (lr - 1), lr = 1, Ht = wr + lr + 65535, lr = Math.floor(Ht / 65536), wr = Ht - lr * 65536, Ht = Ar + lr + 65535, lr = Math.floor(Ht / 65536), Ar = Ht - lr * 65536, Ht = Cr + lr + 65535, lr = Math.floor(Ht / 65536), Cr = Ht - lr * 65536, Ht = Ir + lr + 65535, lr = Math.floor(Ht / 65536), Ir = Ht - lr * 65536, Ht = Jr + lr + 65535, lr = Math.floor(Ht / 65536), Jr = Ht - lr * 65536, Ht = Qr + lr + 65535, lr = Math.floor(Ht / 65536), Qr = Ht - lr * 65536, Ht = Sn + lr + 65535, lr = Math.floor(Ht / 65536), Sn = Ht - lr * 65536, Ht = dn + lr + 65535, lr = Math.floor(Ht / 65536), dn = Ht - lr * 65536, Ht = yn + lr + 65535, lr = Math.floor(Ht / 65536), yn = Ht - lr * 65536, Ht = wn + lr + 65535, lr = Math.floor(Ht / 65536), wn = Ht - lr * 65536, Ht = Mn + lr + 65535, lr = Math.floor(Ht / 65536), Mn = Ht - lr * 65536, Ht = En + lr + 65535, lr = Math.floor(Ht / 65536), En = Ht - lr * 65536, Ht = xn + lr + 65535, lr = Math.floor(Ht / 65536), xn = Ht - lr * 65536, Ht = Cn + lr + 65535, lr = Math.floor(Ht / 65536), Cn = Ht - lr * 65536, Ht = _n + lr + 65535, lr = Math.floor(Ht / 65536), _n = Ht - lr * 65536, Ht = hn + lr + 65535, lr = Math.floor(Ht / 65536), hn = Ht - lr * 65536, wr += lr - 1 + 37 * (lr - 1), nr[0] = wr, nr[1] = Ar, nr[2] = Cr, nr[3] = Ir, nr[4] = Jr, nr[5] = Qr, nr[6] = Sn, nr[7] = dn, nr[8] = yn, nr[9] = wn, nr[10] = Mn, nr[11] = En, nr[12] = xn, nr[13] = Cn, nr[14] = _n, nr[15] = hn;
        }
        function rr(nr, or) {
          Xt(nr, or, or);
        }
        function Gt(nr, or) {
          var ur = $(), Ht;
          for (Ht = 0; Ht < 16; Ht++) ur[Ht] = or[Ht];
          for (Ht = 253; Ht >= 0; Ht--) rr(ur, ur), Ht !== 2 && Ht !== 4 && Xt(ur, ur, or);
          for (Ht = 0; Ht < 16; Ht++) nr[Ht] = ur[Ht];
        }
        function Yt(nr, or) {
          var ur = $(), Ht;
          for (Ht = 0; Ht < 16; Ht++) ur[Ht] = or[Ht];
          for (Ht = 250; Ht >= 0; Ht--) rr(ur, ur), Ht !== 1 && Xt(ur, ur, or);
          for (Ht = 0; Ht < 16; Ht++) nr[Ht] = ur[Ht];
        }
        function tr(nr, or, ur) {
          var Ht = new Uint8Array(32), lr = new Float64Array(80), wr, Ar, Cr = $(), Ir = $(), Jr = $(), Qr = $(), Sn = $(), dn = $();
          for (Ar = 0; Ar < 31; Ar++) Ht[Ar] = or[Ar];
          for (Ht[31] = or[31] & 127 | 64, Ht[0] &= 248, Rt(lr, ur), Ar = 0; Ar < 16; Ar++) Ir[Ar] = lr[Ar], Qr[Ar] = Cr[Ar] = Jr[Ar] = 0;
          for (Cr[0] = Qr[0] = 1, Ar = 254; Ar >= 0; --Ar) wr = Ht[Ar >>> 3] >>> (Ar & 7) & 1, At(Cr, Ir, wr), At(Jr, Qr, wr), Nt(Sn, Cr, Jr), Wt(Cr, Cr, Jr), Nt(Jr, Ir, Qr), Wt(Ir, Ir, Qr), rr(Qr, Sn), rr(dn, Cr), Xt(Cr, Jr, Cr), Xt(Jr, Ir, Sn), Nt(Sn, Cr, Jr), Wt(Cr, Cr, Jr), rr(Ir, Cr), Wt(Jr, Qr, dn), Xt(Cr, Jr, Et), Nt(Cr, Cr, Qr), Xt(Jr, Jr, Cr), Xt(Cr, Qr, dn), Xt(Qr, Ir, lr), rr(Ir, Sn), At(Cr, Ir, wr), At(Jr, Qr, wr);
          for (Ar = 0; Ar < 16; Ar++) lr[Ar + 16] = Cr[Ar], lr[Ar + 32] = Jr[Ar], lr[Ar + 48] = Ir[Ar], lr[Ar + 64] = Qr[Ar];
          var yn = lr.subarray(32), wn = lr.subarray(16);
          return Gt(yn, yn), Xt(wn, wn, yn), ut(nr, wn), 0;
        }
        function cr(nr, or) {
          return tr(nr, or, et);
        }
        function ir(nr, or) {
          return j(or, 32), cr(nr, or);
        }
        function Jt(nr, or, ur) {
          var Ht = new Uint8Array(32);
          return tr(Ht, ur, or), Zt(nr, rt, Ht, Kt);
        }
        var vr = it, Br = at;
        function _r(nr, or, ur, Ht, lr, wr) {
          var Ar = new Uint8Array(32);
          return Jt(Ar, lr, wr), vr(nr, or, ur, Ht, Ar);
        }
        function $r(nr, or, ur, Ht, lr, wr) {
          var Ar = new Uint8Array(32);
          return Jt(Ar, lr, wr), Br(nr, or, ur, Ht, Ar);
        }
        var Ur = [
          1116352408,
          3609767458,
          1899447441,
          602891725,
          3049323471,
          3964484399,
          3921009573,
          2173295548,
          961987163,
          4081628472,
          1508970993,
          3053834265,
          2453635748,
          2937671579,
          2870763221,
          3664609560,
          3624381080,
          2734883394,
          310598401,
          1164996542,
          607225278,
          1323610764,
          1426881987,
          3590304994,
          1925078388,
          4068182383,
          2162078206,
          991336113,
          2614888103,
          633803317,
          3248222580,
          3479774868,
          3835390401,
          2666613458,
          4022224774,
          944711139,
          264347078,
          2341262773,
          604807628,
          2007800933,
          770255983,
          1495990901,
          1249150122,
          1856431235,
          1555081692,
          3175218132,
          1996064986,
          2198950837,
          2554220882,
          3999719339,
          2821834349,
          766784016,
          2952996808,
          2566594879,
          3210313671,
          3203337956,
          3336571891,
          1034457026,
          3584528711,
          2466948901,
          113926993,
          3758326383,
          338241895,
          168717936,
          666307205,
          1188179964,
          773529912,
          1546045734,
          1294757372,
          1522805485,
          1396182291,
          2643833823,
          1695183700,
          2343527390,
          1986661051,
          1014477480,
          2177026350,
          1206759142,
          2456956037,
          344077627,
          2730485921,
          1290863460,
          2820302411,
          3158454273,
          3259730800,
          3505952657,
          3345764771,
          106217008,
          3516065817,
          3606008344,
          3600352804,
          1432725776,
          4094571909,
          1467031594,
          275423344,
          851169720,
          430227734,
          3100823752,
          506948616,
          1363258195,
          659060556,
          3750685593,
          883997877,
          3785050280,
          958139571,
          3318307427,
          1322822218,
          3812723403,
          1537002063,
          2003034995,
          1747873779,
          3602036899,
          1955562222,
          1575990012,
          2024104815,
          1125592928,
          2227730452,
          2716904306,
          2361852424,
          442776044,
          2428436474,
          593698344,
          2756734187,
          3733110249,
          3204031479,
          2999351573,
          3329325298,
          3815920427,
          3391569614,
          3928383900,
          3515267271,
          566280711,
          3940187606,
          3454069534,
          4118630271,
          4000239992,
          116418474,
          1914138554,
          174292421,
          2731055270,
          289380356,
          3203993006,
          460393269,
          320620315,
          685471733,
          587496836,
          852142971,
          1086792851,
          1017036298,
          365543100,
          1126000580,
          2618297676,
          1288033470,
          3409855158,
          1501505948,
          4234509866,
          1607167915,
          987167468,
          1816402316,
          1246189591
        ];
        function Sr(nr, or, ur, Ht) {
          for (var lr = new Int32Array(16), wr = new Int32Array(16), Ar, Cr, Ir, Jr, Qr, Sn, dn, yn, wn, Mn, En, xn, Cn, _n, hn, gn, ln, pn, mn, sn, Vr, Zr, un, an, fn, vn, An = nr[0], Bn = nr[1], $n = nr[2], Rn = nr[3], Dr = nr[4], Tn = nr[5], Nn = nr[6], Dn = nr[7], kn = or[0], In = or[1], Pn = or[2], Ln = or[3], On = or[4], jn = or[5], Fn = or[6], Un = or[7], qn = 0; Ht >= 128; ) {
            for (mn = 0; mn < 16; mn++) sn = 8 * mn + qn, lr[mn] = ur[sn + 0] << 24 | ur[sn + 1] << 16 | ur[sn + 2] << 8 | ur[sn + 3], wr[mn] = ur[sn + 4] << 24 | ur[sn + 5] << 16 | ur[sn + 6] << 8 | ur[sn + 7];
            for (mn = 0; mn < 80; mn++) if (Ar = An, Cr = Bn, Ir = $n, Jr = Rn, Qr = Dr, Sn = Tn, dn = Nn, yn = Dn, wn = kn, Mn = In, En = Pn, xn = Ln, Cn = On, _n = jn, hn = Fn, gn = Un, Vr = Dn, Zr = Un, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = (Dr >>> 14 | On << 18) ^ (Dr >>> 18 | On << 14) ^ (On >>> 9 | Dr << 23), Zr = (On >>> 14 | Dr << 18) ^ (On >>> 18 | Dr << 14) ^ (Dr >>> 9 | On << 23), un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, Vr = Dr & Tn ^ ~Dr & Nn, Zr = On & jn ^ ~On & Fn, un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, Vr = Ur[mn * 2], Zr = Ur[mn * 2 + 1], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, Vr = lr[mn % 16], Zr = wr[mn % 16], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, ln = fn & 65535 | vn << 16, pn = un & 65535 | an << 16, Vr = ln, Zr = pn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = (An >>> 28 | kn << 4) ^ (kn >>> 2 | An << 30) ^ (kn >>> 7 | An << 25), Zr = (kn >>> 28 | An << 4) ^ (An >>> 2 | kn << 30) ^ (An >>> 7 | kn << 25), un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, Vr = An & Bn ^ An & $n ^ Bn & $n, Zr = kn & In ^ kn & Pn ^ In & Pn, un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, yn = fn & 65535 | vn << 16, gn = un & 65535 | an << 16, Vr = Jr, Zr = xn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = ln, Zr = pn, un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, Jr = fn & 65535 | vn << 16, xn = un & 65535 | an << 16, Bn = Ar, $n = Cr, Rn = Ir, Dr = Jr, Tn = Qr, Nn = Sn, Dn = dn, An = yn, In = wn, Pn = Mn, Ln = En, On = xn, jn = Cn, Fn = _n, Un = hn, kn = gn, mn % 16 === 15) for (sn = 0; sn < 16; sn++) Vr = lr[sn], Zr = wr[sn], un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = lr[(sn + 9) % 16], Zr = wr[(sn + 9) % 16], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, ln = lr[(sn + 1) % 16], pn = wr[(sn + 1) % 16], Vr = (ln >>> 1 | pn << 31) ^ (ln >>> 8 | pn << 24) ^ ln >>> 7, Zr = (pn >>> 1 | ln << 31) ^ (pn >>> 8 | ln << 24) ^ (pn >>> 7 | ln << 25), un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, ln = lr[(sn + 14) % 16], pn = wr[(sn + 14) % 16], Vr = (ln >>> 19 | pn << 13) ^ (pn >>> 29 | ln << 3) ^ ln >>> 6, Zr = (pn >>> 19 | ln << 13) ^ (ln >>> 29 | pn << 3) ^ (pn >>> 6 | ln << 26), un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, lr[sn] = fn & 65535 | vn << 16, wr[sn] = un & 65535 | an << 16;
            Vr = An, Zr = kn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[0], Zr = or[0], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[0] = An = fn & 65535 | vn << 16, or[0] = kn = un & 65535 | an << 16, Vr = Bn, Zr = In, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[1], Zr = or[1], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[1] = Bn = fn & 65535 | vn << 16, or[1] = In = un & 65535 | an << 16, Vr = $n, Zr = Pn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[2], Zr = or[2], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[2] = $n = fn & 65535 | vn << 16, or[2] = Pn = un & 65535 | an << 16, Vr = Rn, Zr = Ln, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[3], Zr = or[3], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[3] = Rn = fn & 65535 | vn << 16, or[3] = Ln = un & 65535 | an << 16, Vr = Dr, Zr = On, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[4], Zr = or[4], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[4] = Dr = fn & 65535 | vn << 16, or[4] = On = un & 65535 | an << 16, Vr = Tn, Zr = jn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[5], Zr = or[5], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[5] = Tn = fn & 65535 | vn << 16, or[5] = jn = un & 65535 | an << 16, Vr = Nn, Zr = Fn, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[6], Zr = or[6], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[6] = Nn = fn & 65535 | vn << 16, or[6] = Fn = un & 65535 | an << 16, Vr = Dn, Zr = Un, un = Zr & 65535, an = Zr >>> 16, fn = Vr & 65535, vn = Vr >>> 16, Vr = nr[7], Zr = or[7], un += Zr & 65535, an += Zr >>> 16, fn += Vr & 65535, vn += Vr >>> 16, an += un >>> 16, fn += an >>> 16, vn += fn >>> 16, nr[7] = Dn = fn & 65535 | vn << 16, or[7] = Un = un & 65535 | an << 16, qn += 128, Ht -= 128;
          }
          return Ht;
        }
        function Mr(nr, or, ur) {
          var Ht = new Int32Array(8), lr = new Int32Array(8), wr = new Uint8Array(256), Ar, Cr = ur;
          for (Ht[0] = 1779033703, Ht[1] = 3144134277, Ht[2] = 1013904242, Ht[3] = 2773480762, Ht[4] = 1359893119, Ht[5] = 2600822924, Ht[6] = 528734635, Ht[7] = 1541459225, lr[0] = 4089235720, lr[1] = 2227873595, lr[2] = 4271175723, lr[3] = 1595750129, lr[4] = 2917565137, lr[5] = 725511199, lr[6] = 4215389547, lr[7] = 327033209, Sr(Ht, lr, or, ur), ur %= 128, Ar = 0; Ar < ur; Ar++) wr[Ar] = or[Cr - ur + Ar];
          for (wr[ur] = 128, ur = 256 - 128 * (ur < 112 ? 1 : 0), wr[ur - 9] = 0, Pt(wr, ur - 8, Cr / 536870912 | 0, Cr << 3), Sr(Ht, lr, wr, ur), Ar = 0; Ar < 8; Ar++) Pt(nr, 8 * Ar, Ht[Ar], lr[Ar]);
          return 0;
        }
        function Kr(nr, or) {
          var ur = $(), Ht = $(), lr = $(), wr = $(), Ar = $(), Cr = $(), Ir = $(), Jr = $(), Qr = $();
          Wt(ur, nr[1], nr[0]), Wt(Qr, or[1], or[0]), Xt(ur, ur, Qr), Nt(Ht, nr[0], nr[1]), Nt(Qr, or[0], or[1]), Xt(Ht, Ht, Qr), Xt(lr, nr[3], or[3]), Xt(lr, lr, St), Xt(wr, nr[2], or[2]), Nt(wr, wr, wr), Wt(Ar, Ht, ur), Wt(Cr, wr, lr), Nt(Ir, wr, lr), Nt(Jr, Ht, ur), Xt(nr[0], Ar, Cr), Xt(nr[1], Jr, Ir), Xt(nr[2], Ir, Cr), Xt(nr[3], Ar, Jr);
        }
        function kr(nr, or, ur) {
          var Ht;
          for (Ht = 0; Ht < 4; Ht++) At(nr[Ht], or[Ht], ur);
        }
        function Lr(nr, or) {
          var ur = $(), Ht = $(), lr = $();
          Gt(lr, or[2]), Xt(ur, or[0], lr), Xt(Ht, or[1], lr), ut(nr, Ht), nr[31] ^= Ct(ur) << 7;
        }
        function Gr(nr, or, ur) {
          var Ht, lr;
          for (ct(nr[0], st), ct(nr[1], pt), ct(nr[2], pt), ct(nr[3], st), lr = 255; lr >= 0; --lr) Ht = ur[lr / 8 | 0] >> (lr & 7) & 1, kr(nr, or, Ht), Kr(or, nr), Kr(nr, nr), kr(nr, or, Ht);
        }
        function Tr(nr, or) {
          var ur = [
            $(),
            $(),
            $(),
            $()
          ];
          ct(ur[0], $t), ct(ur[1], kt), ct(ur[2], pt), Xt(ur[3], $t, kt), Gr(nr, ur, or);
        }
        function yr(nr, or, ur) {
          var Ht = new Uint8Array(64), lr = [
            $(),
            $(),
            $(),
            $()
          ], wr;
          for (ur || j(or, 32), Mr(Ht, or, 32), Ht[0] &= 248, Ht[31] &= 127, Ht[31] |= 64, Tr(lr, Ht), Lr(nr, lr), wr = 0; wr < 32; wr++) or[wr + 32] = nr[wr];
          return 0;
        }
        var fr = new Float64Array([
          237,
          211,
          245,
          92,
          26,
          99,
          18,
          88,
          214,
          156,
          247,
          162,
          222,
          249,
          222,
          20,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          16
        ]);
        function dr(nr, or) {
          var ur, Ht, lr, wr;
          for (Ht = 63; Ht >= 32; --Ht) {
            for (ur = 0, lr = Ht - 32, wr = Ht - 12; lr < wr; ++lr) or[lr] += ur - 16 * or[Ht] * fr[lr - (Ht - 32)], ur = Math.floor((or[lr] + 128) / 256), or[lr] -= ur * 256;
            or[lr] += ur, or[Ht] = 0;
          }
          for (ur = 0, lr = 0; lr < 32; lr++) or[lr] += ur - (or[31] >> 4) * fr[lr], ur = or[lr] >> 8, or[lr] &= 255;
          for (lr = 0; lr < 32; lr++) or[lr] -= ur * fr[lr];
          for (Ht = 0; Ht < 32; Ht++) or[Ht + 1] += or[Ht] >> 8, nr[Ht] = or[Ht] & 255;
        }
        function gr(nr) {
          var or = new Float64Array(64), ur;
          for (ur = 0; ur < 64; ur++) or[ur] = nr[ur];
          for (ur = 0; ur < 64; ur++) nr[ur] = 0;
          dr(nr, or);
        }
        function Er(nr, or, ur, Ht) {
          var lr = new Uint8Array(64), wr = new Uint8Array(64), Ar = new Uint8Array(64), Cr, Ir, Jr = new Float64Array(64), Qr = [
            $(),
            $(),
            $(),
            $()
          ];
          Mr(lr, Ht, 32), lr[0] &= 248, lr[31] &= 127, lr[31] |= 64;
          var Sn = ur + 64;
          for (Cr = 0; Cr < ur; Cr++) nr[64 + Cr] = or[Cr];
          for (Cr = 0; Cr < 32; Cr++) nr[32 + Cr] = lr[32 + Cr];
          for (Mr(Ar, nr.subarray(32), ur + 32), gr(Ar), Tr(Qr, Ar), Lr(nr, Qr), Cr = 32; Cr < 64; Cr++) nr[Cr] = Ht[Cr];
          for (Mr(wr, nr, ur + 64), gr(wr), Cr = 0; Cr < 64; Cr++) Jr[Cr] = 0;
          for (Cr = 0; Cr < 32; Cr++) Jr[Cr] = Ar[Cr];
          for (Cr = 0; Cr < 32; Cr++) for (Ir = 0; Ir < 32; Ir++) Jr[Cr + Ir] += wr[Cr] * lr[Ir];
          return dr(nr.subarray(32), Jr), Sn;
        }
        function zt(nr, or) {
          var ur = $(), Ht = $(), lr = $(), wr = $(), Ar = $(), Cr = $(), Ir = $();
          return ct(nr[2], pt), Rt(nr[1], or), rr(lr, nr[1]), Xt(wr, lr, Bt), Wt(lr, lr, nr[2]), Nt(wr, nr[2], wr), rr(Ar, wr), rr(Cr, Ar), Xt(Ir, Cr, Ar), Xt(ur, Ir, lr), Xt(ur, ur, wr), Yt(ur, ur), Xt(ur, ur, lr), Xt(ur, ur, wr), Xt(ur, ur, wr), Xt(nr[0], ur, wr), rr(Ht, nr[0]), Xt(Ht, Ht, wr), ot(Ht, lr) && Xt(nr[0], nr[0], Tt), rr(Ht, nr[0]), Xt(Ht, Ht, wr), ot(Ht, lr) ? -1 : (Ct(nr[0]) === or[31] >> 7 && Wt(nr[0], st, nr[0]), Xt(nr[3], nr[0], nr[1]), 0);
        }
        function qt(nr, or, ur, Ht) {
          var lr, wr = new Uint8Array(32), Ar = new Uint8Array(64), Cr = [
            $(),
            $(),
            $(),
            $()
          ], Ir = [
            $(),
            $(),
            $(),
            $()
          ];
          if (ur < 64 || zt(Ir, Ht)) return -1;
          for (lr = 0; lr < ur; lr++) nr[lr] = or[lr];
          for (lr = 0; lr < 32; lr++) nr[lr + 32] = Ht[lr];
          if (Mr(Ar, nr, ur), gr(Ar), Gr(Cr, Ir, Ar), Tr(Ir, or.subarray(32)), Kr(Cr, Ir), Lr(wr, Cr), ur -= 64, Dt(or, 0, wr, 0)) {
            for (lr = 0; lr < ur; lr++) nr[lr] = 0;
            return -1;
          }
          for (lr = 0; lr < ur; lr++) nr[lr] = or[lr + 64];
          return ur;
        }
        var Vt = 32, Qt = 24, hr = 32, br = 16, pr = 32, Rr = 32, qr = 32, xr = 32, Fr = 32, zr = Qt, Pr = hr, Wr = br, tn = 64, Nr = 32, Hr = 64, rn = 32, jr = 64;
        _.lowlevel = {
          crypto_core_hsalsa20: Zt,
          crypto_stream_xor: Ut,
          crypto_stream: er,
          crypto_stream_salsa20_xor: ar,
          crypto_stream_salsa20: sr,
          crypto_onetimeauth: tt,
          crypto_onetimeauth_verify: nt,
          crypto_verify_16: jt,
          crypto_verify_32: Dt,
          crypto_secretbox: it,
          crypto_secretbox_open: at,
          crypto_scalarmult: tr,
          crypto_scalarmult_base: cr,
          crypto_box_beforenm: Jt,
          crypto_box_afternm: vr,
          crypto_box: _r,
          crypto_box_open: $r,
          crypto_box_keypair: ir,
          crypto_hash: Mr,
          crypto_sign: Er,
          crypto_sign_keypair: yr,
          crypto_sign_open: qt,
          crypto_secretbox_KEYBYTES: Vt,
          crypto_secretbox_NONCEBYTES: Qt,
          crypto_secretbox_ZEROBYTES: hr,
          crypto_secretbox_BOXZEROBYTES: br,
          crypto_scalarmult_BYTES: pr,
          crypto_scalarmult_SCALARBYTES: Rr,
          crypto_box_PUBLICKEYBYTES: qr,
          crypto_box_SECRETKEYBYTES: xr,
          crypto_box_BEFORENMBYTES: Fr,
          crypto_box_NONCEBYTES: zr,
          crypto_box_ZEROBYTES: Pr,
          crypto_box_BOXZEROBYTES: Wr,
          crypto_sign_BYTES: tn,
          crypto_sign_PUBLICKEYBYTES: Nr,
          crypto_sign_SECRETKEYBYTES: Hr,
          crypto_sign_SEEDBYTES: rn,
          crypto_hash_BYTES: jr,
          gf: $,
          D: Bt,
          L: fr,
          pack25519: ut,
          unpack25519: Rt,
          M: Xt,
          A: Nt,
          S: rr,
          Z: Wt,
          pow2523: Yt,
          add: Kr,
          set25519: ct,
          modL: dr,
          scalarmult: Gr,
          scalarbase: Tr
        };
        function Yr(nr, or) {
          if (nr.length !== Vt) throw new Error("bad key size");
          if (or.length !== Qt) throw new Error("bad nonce size");
        }
        function nn(nr, or) {
          if (nr.length !== qr) throw new Error("bad public key size");
          if (or.length !== xr) throw new Error("bad secret key size");
        }
        function Or() {
          for (var nr = 0; nr < arguments.length; nr++) if (!(arguments[nr] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array");
        }
        function Xr(nr) {
          for (var or = 0; or < nr.length; or++) nr[or] = 0;
        }
        _.randomBytes = function(nr) {
          var or = new Uint8Array(nr);
          return j(or, nr), or;
        }, _.secretbox = function(nr, or, ur) {
          Or(nr, or, ur), Yr(ur, or);
          for (var Ht = new Uint8Array(hr + nr.length), lr = new Uint8Array(Ht.length), wr = 0; wr < nr.length; wr++) Ht[wr + hr] = nr[wr];
          return it(lr, Ht, Ht.length, or, ur), lr.subarray(br);
        }, _.secretbox.open = function(nr, or, ur) {
          Or(nr, or, ur), Yr(ur, or);
          for (var Ht = new Uint8Array(br + nr.length), lr = new Uint8Array(Ht.length), wr = 0; wr < nr.length; wr++) Ht[wr + br] = nr[wr];
          return Ht.length < 32 || at(lr, Ht, Ht.length, or, ur) !== 0 ? null : lr.subarray(hr);
        }, _.secretbox.keyLength = Vt, _.secretbox.nonceLength = Qt, _.secretbox.overheadLength = br, _.scalarMult = function(nr, or) {
          if (Or(nr, or), nr.length !== Rr) throw new Error("bad n size");
          if (or.length !== pr) throw new Error("bad p size");
          var ur = new Uint8Array(pr);
          return tr(ur, nr, or), ur;
        }, _.scalarMult.base = function(nr) {
          if (Or(nr), nr.length !== Rr) throw new Error("bad n size");
          var or = new Uint8Array(pr);
          return cr(or, nr), or;
        }, _.scalarMult.scalarLength = Rr, _.scalarMult.groupElementLength = pr, _.box = function(nr, or, ur, Ht) {
          var lr = _.box.before(ur, Ht);
          return _.secretbox(nr, or, lr);
        }, _.box.before = function(nr, or) {
          Or(nr, or), nn(nr, or);
          var ur = new Uint8Array(Fr);
          return Jt(ur, nr, or), ur;
        }, _.box.after = _.secretbox, _.box.open = function(nr, or, ur, Ht) {
          var lr = _.box.before(ur, Ht);
          return _.secretbox.open(nr, or, lr);
        }, _.box.open.after = _.secretbox.open, _.box.keyPair = function() {
          var nr = new Uint8Array(qr), or = new Uint8Array(xr);
          return ir(nr, or), {
            publicKey: nr,
            secretKey: or
          };
        }, _.box.keyPair.fromSecretKey = function(nr) {
          if (Or(nr), nr.length !== xr) throw new Error("bad secret key size");
          var or = new Uint8Array(qr);
          return cr(or, nr), {
            publicKey: or,
            secretKey: new Uint8Array(nr)
          };
        }, _.box.publicKeyLength = qr, _.box.secretKeyLength = xr, _.box.sharedKeyLength = Fr, _.box.nonceLength = zr, _.box.overheadLength = _.secretbox.overheadLength, _.sign = function(nr, or) {
          if (Or(nr, or), or.length !== Hr) throw new Error("bad secret key size");
          var ur = new Uint8Array(tn + nr.length);
          return Er(ur, nr, nr.length, or), ur;
        }, _.sign.open = function(nr, or) {
          if (Or(nr, or), or.length !== Nr) throw new Error("bad public key size");
          var ur = new Uint8Array(nr.length), Ht = qt(ur, nr, nr.length, or);
          if (Ht < 0) return null;
          for (var lr = new Uint8Array(Ht), wr = 0; wr < lr.length; wr++) lr[wr] = ur[wr];
          return lr;
        }, _.sign.detached = function(nr, or) {
          for (var ur = _.sign(nr, or), Ht = new Uint8Array(tn), lr = 0; lr < Ht.length; lr++) Ht[lr] = ur[lr];
          return Ht;
        }, _.sign.detached.verify = function(nr, or, ur) {
          if (Or(nr, or, ur), or.length !== tn) throw new Error("bad signature size");
          if (ur.length !== Nr) throw new Error("bad public key size");
          var Ht = new Uint8Array(tn + nr.length), lr = new Uint8Array(tn + nr.length), wr;
          for (wr = 0; wr < tn; wr++) Ht[wr] = or[wr];
          for (wr = 0; wr < nr.length; wr++) Ht[wr + tn] = nr[wr];
          return qt(lr, Ht, Ht.length, ur) >= 0;
        }, _.sign.keyPair = function() {
          var nr = new Uint8Array(Nr), or = new Uint8Array(Hr);
          return yr(nr, or), {
            publicKey: nr,
            secretKey: or
          };
        }, _.sign.keyPair.fromSecretKey = function(nr) {
          if (Or(nr), nr.length !== Hr) throw new Error("bad secret key size");
          for (var or = new Uint8Array(Nr), ur = 0; ur < or.length; ur++) or[ur] = nr[32 + ur];
          return {
            publicKey: or,
            secretKey: new Uint8Array(nr)
          };
        }, _.sign.keyPair.fromSeed = function(nr) {
          if (Or(nr), nr.length !== rn) throw new Error("bad seed size");
          for (var or = new Uint8Array(Nr), ur = new Uint8Array(Hr), Ht = 0; Ht < 32; Ht++) ur[Ht] = nr[Ht];
          return yr(or, ur, true), {
            publicKey: or,
            secretKey: ur
          };
        }, _.sign.publicKeyLength = Nr, _.sign.secretKeyLength = Hr, _.sign.seedLength = rn, _.sign.signatureLength = tn, _.hash = function(nr) {
          Or(nr);
          var or = new Uint8Array(jr);
          return Mr(or, nr, nr.length), or;
        }, _.hash.hashLength = jr, _.verify = function(nr, or) {
          return Or(nr, or), nr.length === 0 || or.length === 0 || nr.length !== or.length ? false : It(nr, 0, or, 0, nr.length) === 0;
        }, _.setPRNG = function(nr) {
          j = nr;
        }, function() {
          var nr = typeof self < "u" ? self.crypto || self.msCrypto : null;
          if (nr && nr.getRandomValues) {
            var or = 65536;
            _.setPRNG(function(ur, Ht) {
              var lr, wr = new Uint8Array(Ht);
              for (lr = 0; lr < Ht; lr += or) nr.getRandomValues(wr.subarray(lr, lr + Math.min(Ht - lr, or)));
              for (lr = 0; lr < Ht; lr++) ur[lr] = wr[lr];
              Xr(wr);
            });
          } else typeof commonjsRequire < "u" && (nr = requireCryptoBrowserify(), nr && nr.randomBytes && _.setPRNG(function(ur, Ht) {
            var lr, wr = nr.randomBytes(Ht);
            for (lr = 0; lr < Ht; lr++) ur[lr] = wr[lr];
            Xr(wr);
          }));
        }();
      })(d.exports ? d.exports : self.nacl = self.nacl || {});
    })(naclFast);
    var naclFastExports = naclFast.exports;
    const nacl$1$1 = getDefaultExportFromCjs$1(naclFastExports);
    var CONNECT_EVENT_ERROR_CODES;
    (function(d) {
      d[d.UNKNOWN_ERROR = 0] = "UNKNOWN_ERROR", d[d.BAD_REQUEST_ERROR = 1] = "BAD_REQUEST_ERROR", d[d.MANIFEST_NOT_FOUND_ERROR = 2] = "MANIFEST_NOT_FOUND_ERROR", d[d.MANIFEST_CONTENT_ERROR = 3] = "MANIFEST_CONTENT_ERROR", d[d.UNKNOWN_APP_ERROR = 100] = "UNKNOWN_APP_ERROR", d[d.USER_REJECTS_ERROR = 300] = "USER_REJECTS_ERROR", d[d.METHOD_NOT_SUPPORTED = 400] = "METHOD_NOT_SUPPORTED";
    })(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));
    var CONNECT_ITEM_ERROR_CODES;
    (function(d) {
      d[d.UNKNOWN_ERROR = 0] = "UNKNOWN_ERROR", d[d.METHOD_NOT_SUPPORTED = 400] = "METHOD_NOT_SUPPORTED";
    })(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));
    var SEND_TRANSACTION_ERROR_CODES;
    (function(d) {
      d[d.UNKNOWN_ERROR = 0] = "UNKNOWN_ERROR", d[d.BAD_REQUEST_ERROR = 1] = "BAD_REQUEST_ERROR", d[d.UNKNOWN_APP_ERROR = 100] = "UNKNOWN_APP_ERROR", d[d.USER_REJECTS_ERROR = 300] = "USER_REJECTS_ERROR", d[d.METHOD_NOT_SUPPORTED = 400] = "METHOD_NOT_SUPPORTED";
    })(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));
    var SIGN_DATA_ERROR_CODES;
    (function(d) {
      d[d.UNKNOWN_ERROR = 0] = "UNKNOWN_ERROR", d[d.BAD_REQUEST_ERROR = 1] = "BAD_REQUEST_ERROR", d[d.UNKNOWN_APP_ERROR = 100] = "UNKNOWN_APP_ERROR", d[d.USER_REJECTS_ERROR = 300] = "USER_REJECTS_ERROR", d[d.METHOD_NOT_SUPPORTED = 400] = "METHOD_NOT_SUPPORTED";
    })(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));
    var DISCONNECT_ERROR_CODES;
    (function(d) {
      d[d.UNKNOWN_ERROR = 0] = "UNKNOWN_ERROR", d[d.BAD_REQUEST_ERROR = 1] = "BAD_REQUEST_ERROR", d[d.UNKNOWN_APP_ERROR = 100] = "UNKNOWN_APP_ERROR", d[d.METHOD_NOT_SUPPORTED = 400] = "METHOD_NOT_SUPPORTED";
    })(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));
    var CHAIN;
    (function(d) {
      d.MAINNET = "-239", d.TESTNET = "-3";
    })(CHAIN || (CHAIN = {}));
    function encodeUint8Array(d, _) {
      const $ = nacl$8.encodeBase64(d);
      return _ ? encodeURIComponent($) : $;
    }
    function decodeToUint8Array(d, _) {
      return _ && (d = decodeURIComponent(d)), nacl$8.decodeBase64(d);
    }
    function encode$2(d, _ = false) {
      let $;
      return d instanceof Uint8Array ? $ = d : (typeof d != "string" && (d = JSON.stringify(d)), $ = nacl$8.decodeUTF8(d)), encodeUint8Array($, _);
    }
    function decode$1(d, _ = false) {
      const $ = decodeToUint8Array(d, _);
      return {
        toString() {
          return nacl$8.encodeUTF8($);
        },
        toObject() {
          try {
            return JSON.parse(nacl$8.encodeUTF8($));
          } catch {
            return null;
          }
        },
        toUint8Array() {
          return $;
        }
      };
    }
    const Base64 = {
      encode: encode$2,
      decode: decode$1
    };
    function concatUint8Arrays(d, _) {
      const $ = new Uint8Array(d.length + _.length);
      return $.set(d), $.set(_, d.length), $;
    }
    function splitToUint8Arrays(d, _) {
      if (_ >= d.length) throw new Error("Index is out of buffer");
      const $ = d.slice(0, _), j = d.slice(_);
      return [
        $,
        j
      ];
    }
    function toHexString(d) {
      let _ = "";
      return d.forEach(($) => {
        _ += ("0" + ($ & 255).toString(16)).slice(-2);
      }), _;
    }
    function hexToByteArray(d) {
      if (d.length % 2 !== 0) throw new Error(`Cannot convert ${d} to bytesArray`);
      const _ = new Uint8Array(d.length / 2);
      for (let $ = 0; $ < d.length; $ += 2) _[$ / 2] = parseInt(d.slice($, $ + 2), 16);
      return _;
    }
    class SessionCrypto {
      constructor(_) {
        this.nonceLength = 24, this.keyPair = _ ? this.createKeypairFromString(_) : this.createKeypair(), this.sessionId = toHexString(this.keyPair.publicKey);
      }
      createKeypair() {
        return nacl$1$1.box.keyPair();
      }
      createKeypairFromString(_) {
        return {
          publicKey: hexToByteArray(_.publicKey),
          secretKey: hexToByteArray(_.secretKey)
        };
      }
      createNonce() {
        return nacl$1$1.randomBytes(this.nonceLength);
      }
      encrypt(_, $) {
        const j = new TextEncoder().encode(_), rt = this.createNonce(), et = nacl$1$1.box(j, rt, $, this.keyPair.secretKey);
        return concatUint8Arrays(rt, et);
      }
      decrypt(_, $) {
        const [j, rt] = splitToUint8Arrays(_, this.nonceLength), et = nacl$1$1.box.open(rt, j, $, this.keyPair.secretKey);
        if (!et) throw new Error(`Decryption error: 
 message: ${_.toString()} 
 sender pubkey: ${$.toString()} 
 keypair pubkey: ${this.keyPair.publicKey.toString()} 
 keypair secretkey: ${this.keyPair.secretKey.toString()}`);
        return new TextDecoder().decode(et);
      }
      stringifyKeypair() {
        return {
          publicKey: toHexString(this.keyPair.publicKey),
          secretKey: toHexString(this.keyPair.secretKey)
        };
      }
    }
    function __rest(d, _) {
      var $ = {};
      for (var j in d) Object.prototype.hasOwnProperty.call(d, j) && _.indexOf(j) < 0 && ($[j] = d[j]);
      if (d != null && typeof Object.getOwnPropertySymbols == "function") for (var rt = 0, j = Object.getOwnPropertySymbols(d); rt < j.length; rt++) _.indexOf(j[rt]) < 0 && Object.prototype.propertyIsEnumerable.call(d, j[rt]) && ($[j[rt]] = d[j[rt]]);
      return $;
    }
    function __awaiter$2(d, _, $, j) {
      function rt(et) {
        return et instanceof $ ? et : new $(function(st) {
          st(et);
        });
      }
      return new ($ || ($ = Promise))(function(et, st) {
        function pt(St) {
          try {
            Bt(j.next(St));
          } catch ($t) {
            st($t);
          }
        }
        function Et(St) {
          try {
            Bt(j.throw(St));
          } catch ($t) {
            st($t);
          }
        }
        function Bt(St) {
          St.done ? et(St.value) : rt(St.value).then(pt, Et);
        }
        Bt((j = j.apply(d, [])).next());
      });
    }
    class TonConnectError extends Error {
      constructor(_, $) {
        super(_, $), this.message = `${TonConnectError.prefix} ${this.constructor.name}${this.info ? ": " + this.info : ""}${_ ? `
` + _ : ""}`, Object.setPrototypeOf(this, TonConnectError.prototype);
      }
      get info() {
        return "";
      }
    }
    TonConnectError.prefix = "[TON_CONNECT_SDK_ERROR]";
    class DappMetadataError extends TonConnectError {
      get info() {
        return "Passed DappMetadata is in incorrect format.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, DappMetadataError.prototype);
      }
    }
    class ManifestContentErrorError extends TonConnectError {
      get info() {
        return "Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, ManifestContentErrorError.prototype);
      }
    }
    class ManifestNotFoundError extends TonConnectError {
      get info() {
        return "Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, ManifestNotFoundError.prototype);
      }
    }
    class WalletAlreadyConnectedError extends TonConnectError {
      get info() {
        return "Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, WalletAlreadyConnectedError.prototype);
      }
    }
    class WalletNotConnectedError extends TonConnectError {
      get info() {
        return "Send transaction or other protocol methods called while wallet is not connected.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, WalletNotConnectedError.prototype);
      }
    }
    function isWalletConnectionSourceJS(d) {
      return "jsBridgeKey" in d;
    }
    class UserRejectsError extends TonConnectError {
      get info() {
        return "User rejects the action in the wallet.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, UserRejectsError.prototype);
      }
    }
    class BadRequestError extends TonConnectError {
      get info() {
        return "Request to the wallet contains errors.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, BadRequestError.prototype);
      }
    }
    class UnknownAppError extends TonConnectError {
      get info() {
        return "App tries to send rpc request to the injected wallet while not connected.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, UnknownAppError.prototype);
      }
    }
    class WalletNotInjectedError extends TonConnectError {
      get info() {
        return "There is an attempt to connect to the injected wallet while it is not exists in the webpage.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, WalletNotInjectedError.prototype);
      }
    }
    class FetchWalletsError extends TonConnectError {
      get info() {
        return "An error occurred while fetching the wallets list.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, FetchWalletsError.prototype);
      }
    }
    class WrongAddressError extends TonConnectError {
      get info() {
        return "Passed address is in incorrect format.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, WrongAddressError.prototype);
      }
    }
    class ParseHexError extends TonConnectError {
      get info() {
        return "Passed hex is in incorrect format.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, ParseHexError.prototype);
      }
    }
    class UnknownError extends TonConnectError {
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, UnknownError.prototype);
      }
    }
    const connectEventErrorsCodes = {
      [CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,
      [CONNECT_EVENT_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,
      [CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,
      [CONNECT_EVENT_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError,
      [CONNECT_EVENT_ERROR_CODES.MANIFEST_NOT_FOUND_ERROR]: ManifestNotFoundError,
      [CONNECT_EVENT_ERROR_CODES.MANIFEST_CONTENT_ERROR]: ManifestContentErrorError
    };
    class ConnectErrorsParser {
      parseError(_) {
        let $ = UnknownError;
        return _.code in connectEventErrorsCodes && ($ = connectEventErrorsCodes[_.code] || UnknownError), new $(_.message);
      }
    }
    const connectErrorsParser = new ConnectErrorsParser();
    class RpcParser {
      isError(_) {
        return "error" in _;
      }
    }
    const sendTransactionErrors = {
      [SEND_TRANSACTION_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,
      [SEND_TRANSACTION_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,
      [SEND_TRANSACTION_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,
      [SEND_TRANSACTION_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError
    };
    class SendTransactionParser extends RpcParser {
      convertToRpcRequest(_) {
        return {
          method: "sendTransaction",
          params: [
            JSON.stringify(_)
          ]
        };
      }
      parseAndThrowError(_) {
        let $ = UnknownError;
        throw _.error.code in sendTransactionErrors && ($ = sendTransactionErrors[_.error.code] || UnknownError), new $(_.error.message);
      }
      convertFromRpcResponse(_) {
        return {
          boc: _.result
        };
      }
    }
    const sendTransactionParser = new SendTransactionParser();
    class HttpBridgeGatewayStorage {
      constructor(_, $) {
        this.storage = _, this.storeKey = "ton-connect-storage_http-bridge-gateway::" + $;
      }
      storeLastEventId(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          return this.storage.setItem(this.storeKey, _);
        });
      }
      removeLastEventId() {
        return __awaiter$2(this, void 0, void 0, function* () {
          return this.storage.removeItem(this.storeKey);
        });
      }
      getLastEventId() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.storage.getItem(this.storeKey);
          return _ || null;
        });
      }
    }
    function removeUrlLastSlash(d) {
      return d.slice(-1) === "/" ? d.slice(0, -1) : d;
    }
    function addPathToUrl(d, _) {
      return removeUrlLastSlash(d) + "/" + _;
    }
    function isTelegramUrl(d) {
      if (!d) return false;
      const _ = new URL(d);
      return _.protocol === "tg:" || _.hostname === "t.me";
    }
    function encodeTelegramUrlParameters(d) {
      return d.replaceAll(".", "%2E").replaceAll("-", "%2D").replaceAll("_", "%5F").replaceAll("&", "-").replaceAll("=", "__").replaceAll("%", "--");
    }
    function delay(d, _) {
      return __awaiter$2(this, void 0, void 0, function* () {
        return new Promise(($, j) => {
          var rt, et;
          if (!((rt = void 0) === null || rt === void 0) && rt.aborted) {
            j(new TonConnectError("Delay aborted"));
            return;
          }
          const st = setTimeout(() => $(), d);
          (et = void 0) === null || et === void 0 || et.addEventListener("abort", () => {
            clearTimeout(st), j(new TonConnectError("Delay aborted"));
          });
        });
      });
    }
    function createAbortController(d) {
      const _ = new AbortController();
      return (d == null ? void 0 : d.aborted) ? _.abort() : d == null ? void 0 : d.addEventListener("abort", () => _.abort(), {
        once: true
      }), _;
    }
    function callForSuccess(d, _) {
      var $, j;
      return __awaiter$2(this, void 0, void 0, function* () {
        const rt = ($ = _ == null ? void 0 : _.attempts) !== null && $ !== void 0 ? $ : 10, et = (j = _ == null ? void 0 : _.delayMs) !== null && j !== void 0 ? j : 200, st = createAbortController(_ == null ? void 0 : _.signal);
        if (typeof d != "function") throw new TonConnectError(`Expected a function, got ${typeof d}`);
        let pt = 0, Et;
        for (; pt < rt; ) {
          if (st.signal.aborted) throw new TonConnectError(`Aborted after attempts ${pt}`);
          try {
            return yield d({
              signal: st.signal
            });
          } catch (Bt) {
            Et = Bt, pt++, pt < rt && (yield delay(et));
          }
        }
        throw Et;
      });
    }
    function logDebug$1(...d) {
      try {
        console.debug("[TON_CONNECT_SDK]", ...d);
      } catch {
      }
    }
    function logError$1(...d) {
      try {
        console.error("[TON_CONNECT_SDK]", ...d);
      } catch {
      }
    }
    function logWarning$1(...d) {
      try {
        console.warn("[TON_CONNECT_SDK]", ...d);
      } catch {
      }
    }
    function createResource$1(d, _) {
      let $ = null, j = null, rt = null, et = null, st = null;
      const pt = ($t, ...kt) => __awaiter$2(this, void 0, void 0, function* () {
        if (et = $t ?? null, st == null ? void 0 : st.abort(), st = createAbortController($t), st.signal.aborted) throw new TonConnectError("Resource creation was aborted");
        j = kt ?? null;
        const Tt = d(st.signal, ...kt);
        rt = Tt;
        const Pt = yield Tt;
        if (rt !== Tt && Pt !== $) throw yield _(Pt), new TonConnectError("Resource creation was aborted by a new resource creation");
        return $ = Pt, $;
      });
      return {
        create: pt,
        current: () => $ ?? null,
        dispose: () => __awaiter$2(this, void 0, void 0, function* () {
          try {
            const $t = $;
            $ = null;
            const kt = rt;
            rt = null;
            try {
              st == null ? void 0 : st.abort();
            } catch {
            }
            yield Promise.allSettled([
              $t ? _($t) : Promise.resolve(),
              kt ? _(yield kt) : Promise.resolve()
            ]);
          } catch {
          }
        }),
        recreate: ($t) => __awaiter$2(this, void 0, void 0, function* () {
          const kt = $, Tt = rt, Pt = j, It = et;
          if (yield delay($t), kt === $ && Tt === rt && Pt === j && It === et) return yield pt(et, ...Pt ?? []);
          throw new TonConnectError("Resource recreation was aborted by a new resource creation");
        })
      };
    }
    function timeout(d, _) {
      const $ = _ == null ? void 0 : _.timeout, j = _ == null ? void 0 : _.signal, rt = createAbortController(j);
      return new Promise((et, st) => __awaiter$2(this, void 0, void 0, function* () {
        if (rt.signal.aborted) {
          st(new TonConnectError("Operation aborted"));
          return;
        }
        let pt;
        typeof $ < "u" && (pt = setTimeout(() => {
          rt.abort(), st(new TonConnectError(`Timeout after ${$}ms`));
        }, $)), rt.signal.addEventListener("abort", () => {
          clearTimeout(pt), st(new TonConnectError("Operation aborted"));
        }, {
          once: true
        });
        const Et = {
          timeout: $,
          abort: rt.signal
        };
        yield d((...Bt) => {
          clearTimeout(pt), et(...Bt);
        }, () => {
          clearTimeout(pt), st();
        }, Et);
      }));
    }
    class BridgeGateway {
      constructor(_, $, j, rt, et) {
        this.bridgeUrl = $, this.sessionId = j, this.listener = rt, this.errorsListener = et, this.ssePath = "events", this.postPath = "message", this.heartbeatMessage = "heartbeat", this.defaultTtl = 300, this.defaultReconnectDelay = 2e3, this.defaultResendDelay = 5e3, this.eventSource = createResource$1((st, pt) => __awaiter$2(this, void 0, void 0, function* () {
          const Et = {
            bridgeUrl: this.bridgeUrl,
            ssePath: this.ssePath,
            sessionId: this.sessionId,
            bridgeGatewayStorage: this.bridgeGatewayStorage,
            errorHandler: this.errorsHandler.bind(this),
            messageHandler: this.messagesHandler.bind(this),
            signal: st,
            openingDeadlineMS: pt
          };
          return yield createEventSource(Et);
        }), (st) => __awaiter$2(this, void 0, void 0, function* () {
          st.close();
        })), this.bridgeGatewayStorage = new HttpBridgeGatewayStorage(_, $);
      }
      get isReady() {
        const _ = this.eventSource.current();
        return (_ == null ? void 0 : _.readyState) === EventSource.OPEN;
      }
      get isClosed() {
        const _ = this.eventSource.current();
        return (_ == null ? void 0 : _.readyState) !== EventSource.OPEN;
      }
      get isConnecting() {
        const _ = this.eventSource.current();
        return (_ == null ? void 0 : _.readyState) === EventSource.CONNECTING;
      }
      registerSession(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          yield this.eventSource.create(_ == null ? void 0 : _.signal, _ == null ? void 0 : _.openingDeadlineMS);
        });
      }
      send(_, $, j, rt) {
        var et;
        return __awaiter$2(this, void 0, void 0, function* () {
          const st = {};
          typeof rt == "number" ? st.ttl = rt : (st.ttl = rt == null ? void 0 : rt.ttl, st.signal = rt == null ? void 0 : rt.signal, st.attempts = rt == null ? void 0 : rt.attempts);
          const pt = new URL(addPathToUrl(this.bridgeUrl, this.postPath));
          pt.searchParams.append("client_id", this.sessionId), pt.searchParams.append("to", $), pt.searchParams.append("ttl", ((st == null ? void 0 : st.ttl) || this.defaultTtl).toString()), pt.searchParams.append("topic", j);
          const Et = Base64.encode(_);
          yield callForSuccess((Bt) => __awaiter$2(this, void 0, void 0, function* () {
            const St = yield this.post(pt, Et, Bt.signal);
            if (!St.ok) throw new TonConnectError(`Bridge send failed, status ${St.status}`);
          }), {
            attempts: (et = st == null ? void 0 : st.attempts) !== null && et !== void 0 ? et : Number.MAX_SAFE_INTEGER,
            delayMs: this.defaultResendDelay,
            signal: st == null ? void 0 : st.signal
          });
        });
      }
      pause() {
        this.eventSource.dispose().catch((_) => logError$1(`Bridge pause failed, ${_}`));
      }
      unPause() {
        return __awaiter$2(this, void 0, void 0, function* () {
          yield this.eventSource.recreate(0);
        });
      }
      close() {
        return __awaiter$2(this, void 0, void 0, function* () {
          yield this.eventSource.dispose().catch((_) => logError$1(`Bridge close failed, ${_}`));
        });
      }
      setListener(_) {
        this.listener = _;
      }
      setErrorsListener(_) {
        this.errorsListener = _;
      }
      post(_, $, j) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const rt = yield fetch(_, {
            method: "post",
            body: $,
            signal: j
          });
          if (!rt.ok) throw new TonConnectError(`Bridge send failed, status ${rt.status}`);
          return rt;
        });
      }
      errorsHandler(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          if (this.isConnecting) throw _.close(), new TonConnectError("Bridge error, failed to connect");
          if (this.isReady) {
            try {
              this.errorsListener($);
            } catch {
            }
            return;
          }
          if (this.isClosed) return _.close(), logDebug$1(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`), yield this.eventSource.recreate(this.defaultReconnectDelay);
          throw new TonConnectError("Bridge error, unknown state");
        });
      }
      messagesHandler(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          if (_.data === this.heartbeatMessage || (yield this.bridgeGatewayStorage.storeLastEventId(_.lastEventId), this.isClosed)) return;
          let $;
          try {
            $ = JSON.parse(_.data);
          } catch (j) {
            throw new TonConnectError(`Bridge message parse failed, message ${j.data}`);
          }
          this.listener($);
        });
      }
    }
    function createEventSource(d) {
      return __awaiter$2(this, void 0, void 0, function* () {
        return yield timeout((_, $, j) => __awaiter$2(this, void 0, void 0, function* () {
          var rt;
          const st = createAbortController(j.signal).signal;
          if (st.aborted) {
            $(new TonConnectError("Bridge connection aborted"));
            return;
          }
          const pt = new URL(addPathToUrl(d.bridgeUrl, d.ssePath));
          pt.searchParams.append("client_id", d.sessionId);
          const Et = yield d.bridgeGatewayStorage.getLastEventId();
          if (Et && pt.searchParams.append("last_event_id", Et), st.aborted) {
            $(new TonConnectError("Bridge connection aborted"));
            return;
          }
          const Bt = new EventSource(pt.toString());
          Bt.onerror = (St) => __awaiter$2(this, void 0, void 0, function* () {
            if (st.aborted) {
              Bt.close(), $(new TonConnectError("Bridge connection aborted"));
              return;
            }
            try {
              const $t = yield d.errorHandler(Bt, St);
              $t !== Bt && Bt.close(), $t && $t !== Bt && _($t);
            } catch ($t) {
              Bt.close(), $($t);
            }
          }), Bt.onopen = () => {
            if (st.aborted) {
              Bt.close(), $(new TonConnectError("Bridge connection aborted"));
              return;
            }
            _(Bt);
          }, Bt.onmessage = (St) => {
            if (st.aborted) {
              Bt.close(), $(new TonConnectError("Bridge connection aborted"));
              return;
            }
            d.messageHandler(St);
          }, (rt = d.signal) === null || rt === void 0 || rt.addEventListener("abort", () => {
            Bt.close(), $(new TonConnectError("Bridge connection aborted"));
          });
        }), {
          timeout: d.openingDeadlineMS,
          signal: d.signal
        });
      });
    }
    function isPendingConnectionHttp(d) {
      return !("connectEvent" in d);
    }
    class BridgeConnectionStorage {
      constructor(_) {
        this.storage = _, this.storeKey = "ton-connect-storage_bridge-connection";
      }
      storeConnection(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          if (_.type === "injected") return this.storage.setItem(this.storeKey, JSON.stringify(_));
          if (!isPendingConnectionHttp(_)) {
            const j = {
              sessionKeyPair: _.session.sessionCrypto.stringifyKeypair(),
              walletPublicKey: _.session.walletPublicKey,
              bridgeUrl: _.session.bridgeUrl
            }, rt = {
              type: "http",
              connectEvent: _.connectEvent,
              session: j,
              lastWalletEventId: _.lastWalletEventId,
              nextRpcRequestId: _.nextRpcRequestId
            };
            return this.storage.setItem(this.storeKey, JSON.stringify(rt));
          }
          const $ = {
            type: "http",
            connectionSource: _.connectionSource,
            sessionCrypto: _.sessionCrypto.stringifyKeypair()
          };
          return this.storage.setItem(this.storeKey, JSON.stringify($));
        });
      }
      removeConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          return this.storage.removeItem(this.storeKey);
        });
      }
      getConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.storage.getItem(this.storeKey);
          if (!_) return null;
          const $ = JSON.parse(_);
          if ($.type === "injected") return $;
          if ("connectEvent" in $) {
            const j = new SessionCrypto($.session.sessionKeyPair);
            return {
              type: "http",
              connectEvent: $.connectEvent,
              lastWalletEventId: $.lastWalletEventId,
              nextRpcRequestId: $.nextRpcRequestId,
              session: {
                sessionCrypto: j,
                bridgeUrl: $.session.bridgeUrl,
                walletPublicKey: $.session.walletPublicKey
              }
            };
          }
          return {
            type: "http",
            sessionCrypto: new SessionCrypto($.sessionCrypto),
            connectionSource: $.connectionSource
          };
        });
      }
      getHttpConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          if (!_) throw new TonConnectError("Trying to read HTTP connection source while nothing is stored");
          if (_.type === "injected") throw new TonConnectError("Trying to read HTTP connection source while injected connection is stored");
          return _;
        });
      }
      getHttpPendingConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          if (!_) throw new TonConnectError("Trying to read HTTP connection source while nothing is stored");
          if (_.type === "injected") throw new TonConnectError("Trying to read HTTP connection source while injected connection is stored");
          if (!isPendingConnectionHttp(_)) throw new TonConnectError("Trying to read HTTP-pending connection while http connection is stored");
          return _;
        });
      }
      getInjectedConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          if (!_) throw new TonConnectError("Trying to read Injected bridge connection source while nothing is stored");
          if ((_ == null ? void 0 : _.type) === "http") throw new TonConnectError("Trying to read Injected bridge connection source while HTTP connection is stored");
          return _;
        });
      }
      storedConnectionType() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.storage.getItem(this.storeKey);
          return _ ? JSON.parse(_).type : null;
        });
      }
      storeLastWalletEventId(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const $ = yield this.getConnection();
          if ($ && $.type === "http" && !isPendingConnectionHttp($)) return $.lastWalletEventId = _, this.storeConnection($);
        });
      }
      getLastWalletEventId() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          if (_ && "lastWalletEventId" in _) return _.lastWalletEventId;
        });
      }
      increaseNextRpcRequestId() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          if (_ && "nextRpcRequestId" in _) {
            const $ = _.nextRpcRequestId || 0;
            return _.nextRpcRequestId = $ + 1, this.storeConnection(_);
          }
        });
      }
      getNextRpcRequestId() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = yield this.getConnection();
          return _ && "nextRpcRequestId" in _ && _.nextRpcRequestId || 0;
        });
      }
    }
    const PROTOCOL_VERSION = 2;
    class BridgeProvider {
      constructor(_, $) {
        this.storage = _, this.walletConnectionSource = $, this.type = "http", this.standardUniversalLink = "tc://", this.pendingRequests = /* @__PURE__ */ new Map(), this.session = null, this.gateway = null, this.pendingGateways = [], this.listeners = [], this.defaultOpeningDeadlineMS = 12e3, this.defaultRetryTimeoutMS = 2e3, this.connectionStorage = new BridgeConnectionStorage(_);
      }
      static fromStorage(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const j = yield new BridgeConnectionStorage(_).getHttpConnection();
          return isPendingConnectionHttp(j) ? new BridgeProvider(_, j.connectionSource) : new BridgeProvider(_, {
            bridgeUrl: j.session.bridgeUrl
          });
        });
      }
      connect(_, $) {
        var j;
        const rt = createAbortController($ == null ? void 0 : $.signal);
        (j = this.abortController) === null || j === void 0 || j.abort(), this.abortController = rt, this.closeGateways();
        const et = new SessionCrypto();
        this.session = {
          sessionCrypto: et,
          bridgeUrl: "bridgeUrl" in this.walletConnectionSource ? this.walletConnectionSource.bridgeUrl : ""
        }, this.connectionStorage.storeConnection({
          type: "http",
          connectionSource: this.walletConnectionSource,
          sessionCrypto: et
        }).then(() => __awaiter$2(this, void 0, void 0, function* () {
          rt.signal.aborted || (yield callForSuccess((pt) => {
            var Et;
            return this.openGateways(et, {
              openingDeadlineMS: (Et = $ == null ? void 0 : $.openingDeadlineMS) !== null && Et !== void 0 ? Et : this.defaultOpeningDeadlineMS,
              signal: pt == null ? void 0 : pt.signal
            });
          }, {
            attempts: Number.MAX_SAFE_INTEGER,
            delayMs: this.defaultRetryTimeoutMS,
            signal: rt.signal
          }));
        }));
        const st = "universalLink" in this.walletConnectionSource && this.walletConnectionSource.universalLink ? this.walletConnectionSource.universalLink : this.standardUniversalLink;
        return this.generateUniversalLink(st, _);
      }
      restoreConnection(_) {
        var $, j;
        return __awaiter$2(this, void 0, void 0, function* () {
          const rt = createAbortController(_ == null ? void 0 : _.signal);
          if (($ = this.abortController) === null || $ === void 0 || $.abort(), this.abortController = rt, rt.signal.aborted) return;
          this.closeGateways();
          const et = yield this.connectionStorage.getHttpConnection();
          if (!et || rt.signal.aborted) return;
          const st = (j = _ == null ? void 0 : _.openingDeadlineMS) !== null && j !== void 0 ? j : this.defaultOpeningDeadlineMS;
          if (isPendingConnectionHttp(et)) return this.session = {
            sessionCrypto: et.sessionCrypto,
            bridgeUrl: "bridgeUrl" in this.walletConnectionSource ? this.walletConnectionSource.bridgeUrl : ""
          }, yield this.openGateways(et.sessionCrypto, {
            openingDeadlineMS: st,
            signal: rt == null ? void 0 : rt.signal
          });
          if (Array.isArray(this.walletConnectionSource)) throw new TonConnectError("Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.");
          if (this.session = et.session, this.gateway && (logDebug$1("Gateway is already opened, closing previous gateway"), yield this.gateway.close()), this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, et.session.sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this)), !rt.signal.aborted) {
            this.listeners.forEach((pt) => pt(et.connectEvent));
            try {
              yield callForSuccess((pt) => this.gateway.registerSession({
                openingDeadlineMS: st,
                signal: pt.signal
              }), {
                attempts: Number.MAX_SAFE_INTEGER,
                delayMs: this.defaultRetryTimeoutMS,
                signal: rt.signal
              });
            } catch {
              yield this.disconnect({
                signal: rt.signal
              });
              return;
            }
          }
        });
      }
      sendRequest(_, $) {
        const j = {};
        return typeof $ == "function" ? j.onRequestSent = $ : (j.onRequestSent = $ == null ? void 0 : $.onRequestSent, j.signal = $ == null ? void 0 : $.signal, j.attempts = $ == null ? void 0 : $.attempts), new Promise((rt, et) => __awaiter$2(this, void 0, void 0, function* () {
          var st;
          if (!this.gateway || !this.session || !("walletPublicKey" in this.session)) throw new TonConnectError("Trying to send bridge request without session");
          const pt = (yield this.connectionStorage.getNextRpcRequestId()).toString();
          yield this.connectionStorage.increaseNextRpcRequestId(), logDebug$1("Send http-bridge request:", Object.assign(Object.assign({}, _), {
            id: pt
          }));
          const Et = this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({}, _), {
            id: pt
          })), hexToByteArray(this.session.walletPublicKey));
          try {
            yield this.gateway.send(Et, this.session.walletPublicKey, _.method, {
              attempts: j == null ? void 0 : j.attempts,
              signal: j == null ? void 0 : j.signal
            }), (st = j == null ? void 0 : j.onRequestSent) === null || st === void 0 || st.call(j), this.pendingRequests.set(pt.toString(), rt);
          } catch (Bt) {
            et(Bt);
          }
        }));
      }
      closeConnection() {
        this.closeGateways(), this.listeners = [], this.session = null, this.gateway = null;
      }
      disconnect(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          return new Promise(($) => __awaiter$2(this, void 0, void 0, function* () {
            let j = false, rt = null;
            const et = () => {
              j || (j = true, this.removeBridgeAndSession().then($));
            };
            try {
              this.closeGateways();
              const st = createAbortController(_ == null ? void 0 : _.signal);
              rt = setTimeout(() => {
                st.abort();
              }, this.defaultOpeningDeadlineMS), yield this.sendRequest({
                method: "disconnect",
                params: []
              }, {
                onRequestSent: et,
                signal: st.signal,
                attempts: 1
              });
            } catch (st) {
              logDebug$1("Disconnect error:", st), j || this.removeBridgeAndSession().then($);
            } finally {
              rt && clearTimeout(rt), et();
            }
          }));
        });
      }
      listen(_) {
        return this.listeners.push(_), () => this.listeners = this.listeners.filter(($) => $ !== _);
      }
      pause() {
        var _;
        (_ = this.gateway) === null || _ === void 0 || _.pause(), this.pendingGateways.forEach(($) => $.pause());
      }
      unPause() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const _ = this.pendingGateways.map(($) => $.unPause());
          this.gateway && _.push(this.gateway.unPause()), yield Promise.all(_);
        });
      }
      pendingGatewaysListener(_, $, j) {
        return __awaiter$2(this, void 0, void 0, function* () {
          if (!this.pendingGateways.includes(_)) {
            yield _.close();
            return;
          }
          return this.closeGateways({
            except: _
          }), this.gateway && (logDebug$1("Gateway is already opened, closing previous gateway"), yield this.gateway.close()), this.session.bridgeUrl = $, this.gateway = _, this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this)), this.gateway.setListener(this.gatewayListener.bind(this)), this.gatewayListener(j);
        });
      }
      gatewayListener(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const $ = JSON.parse(this.session.sessionCrypto.decrypt(Base64.decode(_.message).toUint8Array(), hexToByteArray(_.from)));
          if (logDebug$1("Wallet message received:", $), !("event" in $)) {
            const rt = $.id.toString(), et = this.pendingRequests.get(rt);
            if (!et) {
              logDebug$1(`Response id ${rt} doesn't match any request's id`);
              return;
            }
            et($), this.pendingRequests.delete(rt);
            return;
          }
          if ($.id !== void 0) {
            const rt = yield this.connectionStorage.getLastWalletEventId();
            if (rt !== void 0 && $.id <= rt) {
              logError$1(`Received event id (=${$.id}) must be greater than stored last wallet event id (=${rt}) `);
              return;
            }
            $.event !== "connect" && (yield this.connectionStorage.storeLastWalletEventId($.id));
          }
          const j = this.listeners;
          $.event === "connect" && (yield this.updateSession($, _.from)), $.event === "disconnect" && (logDebug$1("Removing bridge and session: received disconnect event"), yield this.removeBridgeAndSession()), j.forEach((rt) => rt($));
        });
      }
      gatewayErrorsListener(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          throw new TonConnectError(`Bridge error ${JSON.stringify(_)}`);
        });
      }
      updateSession(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          this.session = Object.assign(Object.assign({}, this.session), {
            walletPublicKey: $
          });
          const j = _.payload.items.find((et) => et.name === "ton_addr"), rt = Object.assign(Object.assign({}, _), {
            payload: Object.assign(Object.assign({}, _.payload), {
              items: [
                j
              ]
            })
          });
          yield this.connectionStorage.storeConnection({
            type: "http",
            session: this.session,
            lastWalletEventId: _.id,
            connectEvent: rt,
            nextRpcRequestId: 0
          });
        });
      }
      removeBridgeAndSession() {
        return __awaiter$2(this, void 0, void 0, function* () {
          this.closeConnection(), yield this.connectionStorage.removeConnection();
        });
      }
      generateUniversalLink(_, $) {
        return isTelegramUrl(_) ? this.generateTGUniversalLink(_, $) : this.generateRegularUniversalLink(_, $);
      }
      generateRegularUniversalLink(_, $) {
        const j = new URL(_);
        return j.searchParams.append("v", PROTOCOL_VERSION.toString()), j.searchParams.append("id", this.session.sessionCrypto.sessionId), j.searchParams.append("r", JSON.stringify($)), j.toString();
      }
      generateTGUniversalLink(_, $) {
        const rt = this.generateRegularUniversalLink("about:blank", $).split("?")[1], et = "tonconnect-" + encodeTelegramUrlParameters(rt), st = this.convertToDirectLink(_), pt = new URL(st);
        return pt.searchParams.append("startapp", et), pt.toString();
      }
      convertToDirectLink(_) {
        const $ = new URL(_);
        return $.searchParams.has("attach") && ($.searchParams.delete("attach"), $.pathname += "/start"), $.toString();
      }
      openGateways(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          if (Array.isArray(this.walletConnectionSource)) {
            this.pendingGateways.map((j) => j.close().catch()), this.pendingGateways = this.walletConnectionSource.map((j) => {
              const rt = new BridgeGateway(this.storage, j.bridgeUrl, _.sessionId, () => {
              }, () => {
              });
              return rt.setListener((et) => this.pendingGatewaysListener(rt, j.bridgeUrl, et)), rt;
            }), yield Promise.allSettled(this.pendingGateways.map((j) => callForSuccess((rt) => {
              var et;
              return this.pendingGateways.some((st) => st === j) ? j.registerSession({
                openingDeadlineMS: (et = $ == null ? void 0 : $.openingDeadlineMS) !== null && et !== void 0 ? et : this.defaultOpeningDeadlineMS,
                signal: rt.signal
              }) : j.close();
            }, {
              attempts: Number.MAX_SAFE_INTEGER,
              delayMs: this.defaultRetryTimeoutMS,
              signal: $ == null ? void 0 : $.signal
            })));
            return;
          } else return this.gateway && (logDebug$1("Gateway is already opened, closing previous gateway"), yield this.gateway.close()), this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, _.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this)), yield this.gateway.registerSession({
            openingDeadlineMS: $ == null ? void 0 : $.openingDeadlineMS,
            signal: $ == null ? void 0 : $.signal
          });
        });
      }
      closeGateways(_) {
        var $;
        ($ = this.gateway) === null || $ === void 0 || $.close(), this.pendingGateways.filter((j) => j !== (_ == null ? void 0 : _.except)).forEach((j) => j.close()), this.pendingGateways = [];
      }
    }
    function hasProperty(d, _) {
      return hasProperties(d, [
        _
      ]);
    }
    function hasProperties(d, _) {
      return !d || typeof d != "object" ? false : _.every(($) => $ in d);
    }
    function isJSBridgeWithMetadata(d) {
      try {
        return !hasProperty(d, "tonconnect") || !hasProperty(d.tonconnect, "walletInfo") ? false : hasProperties(d.tonconnect.walletInfo, [
          "name",
          "app_name",
          "image",
          "about_url",
          "platforms"
        ]);
      } catch {
        return false;
      }
    }
    let InMemoryStorage$1 = class Yn {
      constructor() {
        this.storage = {};
      }
      static getInstance() {
        return Yn.instance || (Yn.instance = new Yn()), Yn.instance;
      }
      get length() {
        return Object.keys(this.storage).length;
      }
      clear() {
        this.storage = {};
      }
      getItem(_) {
        var $;
        return ($ = this.storage[_]) !== null && $ !== void 0 ? $ : null;
      }
      key(_) {
        var $;
        const j = Object.keys(this.storage);
        return _ < 0 || _ >= j.length ? null : ($ = j[_]) !== null && $ !== void 0 ? $ : null;
      }
      removeItem(_) {
        delete this.storage[_];
      }
      setItem(_, $) {
        this.storage[_] = $;
      }
    };
    function getWindow$2() {
      if (!(typeof window > "u")) return window;
    }
    function tryGetWindowKeys() {
      const d = getWindow$2();
      if (!d) return [];
      try {
        return Object.keys(d);
      } catch {
        return [];
      }
    }
    function getDocument() {
      if (!(typeof document > "u")) return document;
    }
    function getWebPageManifest() {
      var d;
      const _ = (d = getWindow$2()) === null || d === void 0 ? void 0 : d.location.origin;
      return _ ? _ + "/tonconnect-manifest.json" : "";
    }
    function tryGetLocalStorage$1() {
      if (isLocalStorageAvailable$1()) return localStorage;
      if (isNodeJs$1()) throw new TonConnectError("`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector");
      return InMemoryStorage$1.getInstance();
    }
    function isLocalStorageAvailable$1() {
      try {
        return typeof localStorage < "u";
      } catch {
        return false;
      }
    }
    function isNodeJs$1() {
      return typeof process$1 < "u" && process$1.versions != null && process$1.versions.node != null;
    }
    class InjectedProvider {
      constructor(_, $) {
        this.injectedWalletKey = $, this.type = "injected", this.unsubscribeCallback = null, this.listenSubscriptions = false, this.listeners = [];
        const j = InjectedProvider.window;
        if (!InjectedProvider.isWindowContainsWallet(j, $)) throw new WalletNotInjectedError();
        this.connectionStorage = new BridgeConnectionStorage(_), this.injectedWallet = j[$].tonconnect;
      }
      static fromStorage(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const j = yield new BridgeConnectionStorage(_).getInjectedConnection();
          return new InjectedProvider(_, j.jsBridgeKey);
        });
      }
      static isWalletInjected(_) {
        return InjectedProvider.isWindowContainsWallet(this.window, _);
      }
      static isInsideWalletBrowser(_) {
        return InjectedProvider.isWindowContainsWallet(this.window, _) ? this.window[_].tonconnect.isWalletBrowser : false;
      }
      static getCurrentlyInjectedWallets() {
        return this.window ? tryGetWindowKeys().filter(([j, rt]) => isJSBridgeWithMetadata(rt)).map(([j, rt]) => ({
          name: rt.tonconnect.walletInfo.name,
          appName: rt.tonconnect.walletInfo.app_name,
          aboutUrl: rt.tonconnect.walletInfo.about_url,
          imageUrl: rt.tonconnect.walletInfo.image,
          tondns: rt.tonconnect.walletInfo.tondns,
          jsBridgeKey: j,
          injected: true,
          embedded: rt.tonconnect.isWalletBrowser,
          platforms: rt.tonconnect.walletInfo.platforms
        })) : [];
      }
      static isWindowContainsWallet(_, $) {
        return !!_ && $ in _ && typeof _[$] == "object" && "tonconnect" in _[$];
      }
      connect(_) {
        this._connect(PROTOCOL_VERSION, _);
      }
      restoreConnection() {
        return __awaiter$2(this, void 0, void 0, function* () {
          try {
            logDebug$1("Injected Provider restoring connection...");
            const _ = yield this.injectedWallet.restoreConnection();
            logDebug$1("Injected Provider restoring connection response", _), _.event === "connect" ? (this.makeSubscriptions(), this.listeners.forEach(($) => $(_))) : yield this.connectionStorage.removeConnection();
          } catch (_) {
            yield this.connectionStorage.removeConnection(), console.error(_);
          }
        });
      }
      closeConnection() {
        this.listenSubscriptions && this.injectedWallet.disconnect(), this.closeAllListeners();
      }
      disconnect() {
        return __awaiter$2(this, void 0, void 0, function* () {
          return new Promise((_) => {
            const $ = () => {
              this.closeAllListeners(), this.connectionStorage.removeConnection().then(_);
            };
            try {
              this.injectedWallet.disconnect(), $();
            } catch (j) {
              logDebug$1(j), this.sendRequest({
                method: "disconnect",
                params: []
              }, $);
            }
          });
        });
      }
      closeAllListeners() {
        var _;
        this.listenSubscriptions = false, this.listeners = [], (_ = this.unsubscribeCallback) === null || _ === void 0 || _.call(this);
      }
      listen(_) {
        return this.listeners.push(_), () => this.listeners = this.listeners.filter(($) => $ !== _);
      }
      sendRequest(_, $) {
        var j;
        return __awaiter$2(this, void 0, void 0, function* () {
          const rt = {};
          typeof $ == "function" ? rt.onRequestSent = $ : (rt.onRequestSent = $ == null ? void 0 : $.onRequestSent, rt.signal = $ == null ? void 0 : $.signal);
          const et = (yield this.connectionStorage.getNextRpcRequestId()).toString();
          yield this.connectionStorage.increaseNextRpcRequestId(), logDebug$1("Send injected-bridge request:", Object.assign(Object.assign({}, _), {
            id: et
          }));
          const st = this.injectedWallet.send(Object.assign(Object.assign({}, _), {
            id: et
          }));
          return st.then((pt) => logDebug$1("Wallet message received:", pt)), (j = rt == null ? void 0 : rt.onRequestSent) === null || j === void 0 || j.call(rt), st;
        });
      }
      _connect(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          try {
            logDebug$1(`Injected Provider connect request: protocolVersion: ${_}, message:`, $);
            const j = yield this.injectedWallet.connect(_, $);
            logDebug$1("Injected Provider connect response:", j), j.event === "connect" && (yield this.updateSession(), this.makeSubscriptions()), this.listeners.forEach((rt) => rt(j));
          } catch (j) {
            logDebug$1("Injected Provider connect error:", j);
            const rt = {
              event: "connect_error",
              payload: {
                code: 0,
                message: j == null ? void 0 : j.toString()
              }
            };
            this.listeners.forEach((et) => et(rt));
          }
        });
      }
      makeSubscriptions() {
        this.listenSubscriptions = true, this.unsubscribeCallback = this.injectedWallet.listen((_) => {
          logDebug$1("Wallet message received:", _), this.listenSubscriptions && this.listeners.forEach(($) => $(_)), _.event === "disconnect" && this.disconnect();
        });
      }
      updateSession() {
        return this.connectionStorage.storeConnection({
          type: "injected",
          jsBridgeKey: this.injectedWalletKey,
          nextRpcRequestId: 0
        });
      }
    }
    InjectedProvider.window = getWindow$2();
    class DefaultStorage {
      constructor() {
        this.localStorage = tryGetLocalStorage$1();
      }
      getItem(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          return this.localStorage.getItem(_);
        });
      }
      removeItem(_) {
        return __awaiter$2(this, void 0, void 0, function* () {
          this.localStorage.removeItem(_);
        });
      }
      setItem(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          this.localStorage.setItem(_, $);
        });
      }
    }
    function isWalletInfoCurrentlyInjected(d) {
      return isWalletInfoInjectable(d) && d.injected;
    }
    function isWalletInfoCurrentlyEmbedded(d) {
      return isWalletInfoCurrentlyInjected(d) && d.embedded;
    }
    function isWalletInfoInjectable(d) {
      return "jsBridgeKey" in d;
    }
    function isWalletInfoRemote(d) {
      return "bridgeUrl" in d;
    }
    const FALLBACK_WALLETS_LIST = [
      {
        app_name: "telegram-wallet",
        name: "Wallet",
        image: "https://wallet.tg/images/logo-288.png",
        about_url: "https://wallet.tg/",
        universal_url: "https://t.me/wallet?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://walletbot.me/tonconnect-bridge/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "tonkeeper",
        name: "Tonkeeper",
        image: "https://tonkeeper.com/assets/tonconnect-icon.png",
        tondns: "tonkeeper.ton",
        about_url: "https://tonkeeper.com",
        universal_url: "https://app.tonkeeper.com/ton-connect",
        deepLink: "tonkeeper-tc://",
        bridge: [
          {
            type: "sse",
            url: "https://bridge.tonapi.io/bridge"
          },
          {
            type: "js",
            key: "tonkeeper"
          }
        ],
        platforms: [
          "ios",
          "android",
          "chrome",
          "firefox",
          "macos"
        ]
      },
      {
        app_name: "mytonwallet",
        name: "MyTonWallet",
        image: "https://static.mytonwallet.io/icon-256.png",
        about_url: "https://mytonwallet.io",
        universal_url: "https://connect.mytonwallet.org",
        bridge: [
          {
            type: "js",
            key: "mytonwallet"
          },
          {
            type: "sse",
            url: "https://tonconnectbridge.mytonwallet.org/bridge/"
          }
        ],
        platforms: [
          "chrome",
          "windows",
          "macos",
          "linux",
          "ios",
          "android",
          "firefox"
        ]
      },
      {
        app_name: "tonhub",
        name: "Tonhub",
        image: "https://tonhub.com/tonconnect_logo.png",
        about_url: "https://tonhub.com",
        universal_url: "https://tonhub.com/ton-connect",
        bridge: [
          {
            type: "js",
            key: "tonhub"
          },
          {
            type: "sse",
            url: "https://connect.tonhubapi.com/tonconnect"
          }
        ],
        platforms: [
          "ios",
          "android"
        ]
      },
      {
        app_name: "bitgetTonWallet",
        name: "Bitget Wallet",
        image: "https://raw.githubusercontent.com/bitgetwallet/download/refs/heads/main/logo/png/bitget_wallet_logo_288_mini.png",
        about_url: "https://web3.bitget.com",
        deepLink: "bitkeep://",
        bridge: [
          {
            type: "js",
            key: "bitgetTonWallet"
          },
          {
            type: "sse",
            url: "https://ton-connect-bridge.bgwapi.io/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "chrome"
        ],
        universal_url: "https://bkcode.vip/ton-connect"
      },
      {
        app_name: "okxMiniWallet",
        name: "OKX Mini Wallet",
        image: "https://static.okx.com/cdn/assets/imgs/2411/8BE1A4A434D8F58A.png",
        about_url: "https://www.okx.com/web3",
        universal_url: "https://t.me/OKX_WALLET_BOT?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://www.okx.com/tonbridge/discover/rpc/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "binanceWeb3TonWallet",
        name: "Binance Web3 Wallet",
        image: "https://public.bnbstatic.com/static/binance-w3w/ton-provider/binancew3w.png",
        about_url: "https://www.binance.com/en/web3wallet",
        deepLink: "bnc://app.binance.com/cedefi/ton-connect",
        bridge: [
          {
            type: "js",
            key: "binancew3w"
          },
          {
            type: "sse",
            url: "https://wallet.binance.com/tonbridge/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ],
        universal_url: "https://app.binance.com/cedefi/ton-connect"
      },
      {
        app_name: "fintopio-tg",
        name: "Fintopio",
        image: "https://fintopio.com/tonconnect-icon.png",
        about_url: "https://fintopio.com",
        universal_url: "https://t.me/fintopio?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://wallet-bridge.fintopio.com/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "okxTonWallet",
        name: "OKX Wallet",
        image: "https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png",
        about_url: "https://www.okx.com/web3",
        universal_url: "https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect",
        bridge: [
          {
            type: "js",
            key: "okxTonWallet"
          },
          {
            type: "sse",
            url: "https://www.okx.com/tonbridge/discover/rpc/bridge"
          }
        ],
        platforms: [
          "chrome",
          "safari",
          "firefox",
          "ios",
          "android"
        ]
      },
      {
        app_name: "hot",
        name: "HOT",
        image: "https://raw.githubusercontent.com/hot-dao/media/main/logo.png",
        about_url: "https://hot-labs.org/",
        universal_url: "https://t.me/herewalletbot?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://sse-bridge.hot-labs.org"
          },
          {
            type: "js",
            key: "hotWallet"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "bybitTonWallet",
        name: "Bybit Wallet",
        image: "https://raw.githubusercontent.com/bybit-web3/bybit-web3.github.io/main/docs/images/bybit-logo.png",
        about_url: "https://www.bybit.com/web3",
        universal_url: "https://app.bybit.com/ton-connect",
        deepLink: "bybitapp://",
        bridge: [
          {
            type: "js",
            key: "bybitTonWallet"
          },
          {
            type: "sse",
            url: "https://api-node.bybit.com/spot/api/web3/bridge/ton/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "chrome"
        ]
      },
      {
        app_name: "dewallet",
        name: "DeWallet",
        image: "https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png",
        about_url: "https://delabwallet.com",
        universal_url: "https://t.me/dewallet?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://bridge.dewallet.pro/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "safepalwallet",
        name: "SafePal",
        image: "https://s.pvcliping.com/web/public_image/SafePal_x288.png",
        tondns: "",
        about_url: "https://www.safepal.com",
        universal_url: "https://link.safepal.io/ton-connect",
        deepLink: "safepal-tc://",
        bridge: [
          {
            type: "sse",
            url: "https://ton-bridge.safepal.com/tonbridge/v1/bridge"
          },
          {
            type: "js",
            key: "safepalwallet"
          }
        ],
        platforms: [
          "ios",
          "android",
          "chrome",
          "firefox"
        ]
      },
      {
        app_name: "GateWallet",
        name: "GateWallet",
        image: "https://img.gatedataimg.com/prd-ordinal-imgs/036f07bb8730716e/gateio-0925.png",
        about_url: "https://www.gate.io/",
        bridge: [
          {
            type: "js",
            key: "gatetonwallet"
          },
          {
            type: "sse",
            url: "https://dapp.gateio.services/tonbridge_api/bridge/v1"
          }
        ],
        platforms: [
          "ios",
          "android"
        ],
        universal_url: "https://gateio.go.link/gateio/web3?adj_t=1ff8khdw_1fu4ccc7"
      },
      {
        app_name: "openmask",
        name: "OpenMask",
        image: "https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png",
        about_url: "https://www.openmask.app/",
        bridge: [
          {
            type: "js",
            key: "openmask"
          }
        ],
        platforms: [
          "chrome"
        ]
      },
      {
        app_name: "BitgetWeb3",
        name: "BitgetWeb3",
        image: "https://img.bitgetimg.com/image/third/1731638059795.png",
        about_url: "\u200Bhttps://www.bitget.com",
        universal_url: "https://t.me/BitgetOfficialBot?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://ton-connect-bridge.bgwapi.io/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "windows",
          "macos",
          "linux"
        ]
      },
      {
        app_name: "tobi",
        name: "Tobi",
        image: "https://app.tobiwallet.app/icons/logo-288.png",
        about_url: "https://tobi.fun",
        universal_url: "https://t.me/TobiCopilotBot?attach=wallet",
        bridge: [
          {
            type: "sse",
            url: "https://ton-bridge.tobiwallet.app/bridge"
          }
        ],
        platforms: [
          "ios",
          "android",
          "macos",
          "windows",
          "linux"
        ]
      },
      {
        app_name: "xtonwallet",
        name: "XTONWallet",
        image: "https://xtonwallet.com/assets/img/icon-256-back.png",
        about_url: "https://xtonwallet.com",
        bridge: [
          {
            type: "js",
            key: "xtonwallet"
          }
        ],
        platforms: [
          "chrome",
          "firefox"
        ]
      },
      {
        app_name: "tonwallet",
        name: "TON Wallet",
        image: "https://wallet.ton.org/assets/ui/qr-logo.png",
        about_url: "https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd",
        bridge: [
          {
            type: "js",
            key: "tonwallet"
          }
        ],
        platforms: [
          "chrome"
        ]
      }
    ];
    class WalletsListManager {
      constructor(_) {
        this.walletsListCache = null, this.walletsListCacheCreationTimestamp = null, this.walletsListSource = "https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json", (_ == null ? void 0 : _.walletsListSource) && (this.walletsListSource = _.walletsListSource), (_ == null ? void 0 : _.cacheTTLMs) && (this.cacheTTLMs = _.cacheTTLMs);
      }
      getWallets() {
        return __awaiter$2(this, void 0, void 0, function* () {
          return this.cacheTTLMs && this.walletsListCacheCreationTimestamp && Date.now() > this.walletsListCacheCreationTimestamp + this.cacheTTLMs && (this.walletsListCache = null), this.walletsListCache || (this.walletsListCache = this.fetchWalletsList(), this.walletsListCache.then(() => {
            this.walletsListCacheCreationTimestamp = Date.now();
          }).catch(() => {
            this.walletsListCache = null, this.walletsListCacheCreationTimestamp = null;
          })), this.walletsListCache;
        });
      }
      getEmbeddedWallet() {
        return __awaiter$2(this, void 0, void 0, function* () {
          const $ = (yield this.getWallets()).filter(isWalletInfoCurrentlyEmbedded);
          return $.length !== 1 ? null : $[0];
        });
      }
      fetchWalletsList() {
        return __awaiter$2(this, void 0, void 0, function* () {
          let _ = [];
          try {
            if (_ = yield (yield fetch(this.walletsListSource)).json(), !Array.isArray(_)) throw new FetchWalletsError("Wrong wallets list format, wallets list must be an array.");
            const rt = _.filter((et) => !this.isCorrectWalletConfigDTO(et));
            rt.length && (logError$1(`Wallet(s) ${rt.map((et) => et.name).join(", ")} config format is wrong. They were removed from the wallets list.`), _ = _.filter((et) => this.isCorrectWalletConfigDTO(et)));
          } catch (j) {
            logError$1(j), _ = FALLBACK_WALLETS_LIST;
          }
          let $ = [];
          try {
            $ = InjectedProvider.getCurrentlyInjectedWallets();
          } catch (j) {
            logError$1(j);
          }
          return this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(_), $);
        });
      }
      walletConfigDTOListToWalletConfigList(_) {
        return _.map(($) => {
          const rt = {
            name: $.name,
            appName: $.app_name,
            imageUrl: $.image,
            aboutUrl: $.about_url,
            tondns: $.tondns,
            platforms: $.platforms
          };
          return $.bridge.forEach((et) => {
            if (et.type === "sse" && (rt.bridgeUrl = et.url, rt.universalLink = $.universal_url, rt.deepLink = $.deepLink), et.type === "js") {
              const st = et.key;
              rt.jsBridgeKey = st, rt.injected = InjectedProvider.isWalletInjected(st), rt.embedded = InjectedProvider.isInsideWalletBrowser(st);
            }
          }), rt;
        });
      }
      mergeWalletsLists(_, $) {
        return [
          ...new Set(_.concat($).map((rt) => rt.name)).values()
        ].map((rt) => {
          const et = _.find((pt) => pt.name === rt), st = $.find((pt) => pt.name === rt);
          return Object.assign(Object.assign({}, et && Object.assign({}, et)), st && Object.assign({}, st));
        });
      }
      isCorrectWalletConfigDTO(_) {
        if (!_ || typeof _ != "object") return false;
        const $ = "name" in _, j = "app_name" in _, rt = "image" in _, et = "about_url" in _, st = "platforms" in _;
        if (!$ || !rt || !et || !st || !j || !_.platforms || !Array.isArray(_.platforms) || !_.platforms.length || !("bridge" in _) || !Array.isArray(_.bridge) || !_.bridge.length) return false;
        const pt = _.bridge;
        if (pt.some((St) => !St || typeof St != "object" || !("type" in St))) return false;
        const Et = pt.find((St) => St.type === "sse");
        if (Et && (!("url" in Et) || !Et.url || !_.universal_url)) return false;
        const Bt = pt.find((St) => St.type === "js");
        return !(Bt && (!("key" in Bt) || !Bt.key));
      }
    }
    class WalletNotSupportFeatureError extends TonConnectError {
      get info() {
        return "Wallet doesn't support requested feature method.";
      }
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, WalletNotSupportFeatureError.prototype);
      }
    }
    function checkSendTransactionSupport(d, _) {
      const $ = d.includes("SendTransaction"), j = d.find((rt) => rt && typeof rt == "object" && rt.name === "SendTransaction");
      if (!$ && !j) throw new WalletNotSupportFeatureError("Wallet doesn't support SendTransaction feature.");
      if (j && j.maxMessages !== void 0) {
        if (j.maxMessages < _.requiredMessagesNumber) throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Max support messages number is ${j.maxMessages}, but ${_.requiredMessagesNumber} is required.`);
        return;
      }
      logWarning$1("Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.");
    }
    function createRequestVersionEvent() {
      return {
        type: "request-version"
      };
    }
    function createResponseVersionEvent(d) {
      return {
        type: "response-version",
        version: d
      };
    }
    function createVersionInfo(d) {
      return {
        ton_connect_sdk_lib: d.ton_connect_sdk_lib,
        ton_connect_ui_lib: d.ton_connect_ui_lib
      };
    }
    function createConnectionInfo(d, _) {
      var $, j, rt, et, st, pt, Et, Bt;
      const $t = (($ = _ == null ? void 0 : _.connectItems) === null || $ === void 0 ? void 0 : $.tonProof) && "proof" in _.connectItems.tonProof ? "ton_proof" : "ton_addr";
      return {
        wallet_address: (rt = (j = _ == null ? void 0 : _.account) === null || j === void 0 ? void 0 : j.address) !== null && rt !== void 0 ? rt : null,
        wallet_type: (et = _ == null ? void 0 : _.device.appName) !== null && et !== void 0 ? et : null,
        wallet_version: (st = _ == null ? void 0 : _.device.appVersion) !== null && st !== void 0 ? st : null,
        auth_type: $t,
        custom_data: Object.assign({
          chain_id: (Et = (pt = _ == null ? void 0 : _.account) === null || pt === void 0 ? void 0 : pt.chain) !== null && Et !== void 0 ? Et : null,
          provider: (Bt = _ == null ? void 0 : _.provider) !== null && Bt !== void 0 ? Bt : null
        }, createVersionInfo(d))
      };
    }
    function createConnectionStartedEvent(d) {
      return {
        type: "connection-started",
        custom_data: createVersionInfo(d)
      };
    }
    function createConnectionCompletedEvent(d, _) {
      return Object.assign({
        type: "connection-completed",
        is_success: true
      }, createConnectionInfo(d, _));
    }
    function createConnectionErrorEvent(d, _, $) {
      return {
        type: "connection-error",
        is_success: false,
        error_message: _,
        error_code: $ ?? null,
        custom_data: createVersionInfo(d)
      };
    }
    function createConnectionRestoringStartedEvent(d) {
      return {
        type: "connection-restoring-started",
        custom_data: createVersionInfo(d)
      };
    }
    function createConnectionRestoringCompletedEvent(d, _) {
      return Object.assign({
        type: "connection-restoring-completed",
        is_success: true
      }, createConnectionInfo(d, _));
    }
    function createConnectionRestoringErrorEvent(d, _) {
      return {
        type: "connection-restoring-error",
        is_success: false,
        error_message: _,
        custom_data: createVersionInfo(d)
      };
    }
    function createTransactionInfo(d, _) {
      var $, j, rt, et;
      return {
        valid_until: ($ = String(_.validUntil)) !== null && $ !== void 0 ? $ : null,
        from: (et = (j = _.from) !== null && j !== void 0 ? j : (rt = d == null ? void 0 : d.account) === null || rt === void 0 ? void 0 : rt.address) !== null && et !== void 0 ? et : null,
        messages: _.messages.map((st) => {
          var pt, Et;
          return {
            address: (pt = st.address) !== null && pt !== void 0 ? pt : null,
            amount: (Et = st.amount) !== null && Et !== void 0 ? Et : null
          };
        })
      };
    }
    function createTransactionSentForSignatureEvent(d, _, $) {
      return Object.assign(Object.assign({
        type: "transaction-sent-for-signature"
      }, createConnectionInfo(d, _)), createTransactionInfo(_, $));
    }
    function createTransactionSignedEvent(d, _, $, j) {
      return Object.assign(Object.assign({
        type: "transaction-signed",
        is_success: true,
        signed_transaction: j.boc
      }, createConnectionInfo(d, _)), createTransactionInfo(_, $));
    }
    function createTransactionSigningFailedEvent(d, _, $, j, rt) {
      return Object.assign(Object.assign({
        type: "transaction-signing-failed",
        is_success: false,
        error_message: j,
        error_code: rt ?? null
      }, createConnectionInfo(d, _)), createTransactionInfo(_, $));
    }
    function createDisconnectionEvent(d, _, $) {
      return Object.assign({
        type: "disconnection",
        scope: $
      }, createConnectionInfo(d, _));
    }
    class BrowserEventDispatcher {
      constructor() {
        this.window = getWindow$2();
      }
      dispatchEvent(_, $) {
        var j;
        return __awaiter$2(this, void 0, void 0, function* () {
          const rt = new CustomEvent(_, {
            detail: $
          });
          (j = this.window) === null || j === void 0 || j.dispatchEvent(rt);
        });
      }
      addEventListener(_, $, j) {
        var rt;
        return __awaiter$2(this, void 0, void 0, function* () {
          return (rt = this.window) === null || rt === void 0 || rt.addEventListener(_, $, j), () => {
            var et;
            return (et = this.window) === null || et === void 0 ? void 0 : et.removeEventListener(_, $);
          };
        });
      }
    }
    class TonConnectTracker {
      constructor(_) {
        var $;
        this.eventPrefix = "ton-connect-", this.tonConnectUiVersion = null, this.eventDispatcher = ($ = _ == null ? void 0 : _.eventDispatcher) !== null && $ !== void 0 ? $ : new BrowserEventDispatcher(), this.tonConnectSdkVersion = _.tonConnectSdkVersion, this.init().catch();
      }
      get version() {
        return createVersionInfo({
          ton_connect_sdk_lib: this.tonConnectSdkVersion,
          ton_connect_ui_lib: this.tonConnectUiVersion
        });
      }
      init() {
        return __awaiter$2(this, void 0, void 0, function* () {
          try {
            yield this.setRequestVersionHandler(), this.tonConnectUiVersion = yield this.requestTonConnectUiVersion();
          } catch {
          }
        });
      }
      setRequestVersionHandler() {
        return __awaiter$2(this, void 0, void 0, function* () {
          yield this.eventDispatcher.addEventListener("ton-connect-request-version", () => __awaiter$2(this, void 0, void 0, function* () {
            yield this.eventDispatcher.dispatchEvent("ton-connect-response-version", createResponseVersionEvent(this.tonConnectSdkVersion));
          }));
        });
      }
      requestTonConnectUiVersion() {
        return __awaiter$2(this, void 0, void 0, function* () {
          return new Promise((_, $) => __awaiter$2(this, void 0, void 0, function* () {
            try {
              yield this.eventDispatcher.addEventListener("ton-connect-ui-response-version", (j) => {
                _(j.detail.version);
              }, {
                once: true
              }), yield this.eventDispatcher.dispatchEvent("ton-connect-ui-request-version", createRequestVersionEvent());
            } catch (j) {
              $(j);
            }
          }));
        });
      }
      dispatchUserActionEvent(_) {
        try {
          this.eventDispatcher.dispatchEvent(`${this.eventPrefix}${_.type}`, _).catch();
        } catch {
        }
      }
      trackConnectionStarted(..._) {
        try {
          const $ = createConnectionStartedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionCompleted(..._) {
        try {
          const $ = createConnectionCompletedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionError(..._) {
        try {
          const $ = createConnectionErrorEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringStarted(..._) {
        try {
          const $ = createConnectionRestoringStartedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringCompleted(..._) {
        try {
          const $ = createConnectionRestoringCompletedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringError(..._) {
        try {
          const $ = createConnectionRestoringErrorEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackDisconnection(..._) {
        try {
          const $ = createDisconnectionEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSentForSignature(..._) {
        try {
          const $ = createTransactionSentForSignatureEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSigned(..._) {
        try {
          const $ = createTransactionSignedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSigningFailed(..._) {
        try {
          const $ = createTransactionSigningFailedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
    }
    const tonConnectSdkVersion = "3.0.6";
    class TonConnect {
      constructor(_) {
        if (this.walletsList = new WalletsListManager(), this._wallet = null, this.provider = null, this.statusChangeSubscriptions = [], this.statusChangeErrorSubscriptions = [], this.dappSettings = {
          manifestUrl: (_ == null ? void 0 : _.manifestUrl) || getWebPageManifest(),
          storage: (_ == null ? void 0 : _.storage) || new DefaultStorage()
        }, this.walletsList = new WalletsListManager({
          walletsListSource: _ == null ? void 0 : _.walletsListSource,
          cacheTTLMs: _ == null ? void 0 : _.walletsListCacheTTLMs
        }), this.tracker = new TonConnectTracker({
          eventDispatcher: _ == null ? void 0 : _.eventDispatcher,
          tonConnectSdkVersion
        }), !this.dappSettings.manifestUrl) throw new DappMetadataError("Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest");
        this.bridgeConnectionStorage = new BridgeConnectionStorage(this.dappSettings.storage), (_ == null ? void 0 : _.disableAutoPauseConnection) || this.addWindowFocusAndBlurSubscriptions();
      }
      static getWallets() {
        return this.walletsList.getWallets();
      }
      get connected() {
        return this._wallet !== null;
      }
      get account() {
        var _;
        return ((_ = this._wallet) === null || _ === void 0 ? void 0 : _.account) || null;
      }
      get wallet() {
        return this._wallet;
      }
      set wallet(_) {
        this._wallet = _, this.statusChangeSubscriptions.forEach(($) => $(this._wallet));
      }
      getWallets() {
        return this.walletsList.getWallets();
      }
      onStatusChange(_, $) {
        return this.statusChangeSubscriptions.push(_), $ && this.statusChangeErrorSubscriptions.push($), () => {
          this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter((j) => j !== _), $ && (this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter((j) => j !== $));
        };
      }
      connect(_, $) {
        var j, rt;
        const et = {};
        if (typeof $ == "object" && "tonProof" in $ && (et.request = $), typeof $ == "object" && ("openingDeadlineMS" in $ || "signal" in $ || "request" in $) && (et.request = $ == null ? void 0 : $.request, et.openingDeadlineMS = $ == null ? void 0 : $.openingDeadlineMS, et.signal = $ == null ? void 0 : $.signal), this.connected) throw new WalletAlreadyConnectedError();
        const st = createAbortController(et == null ? void 0 : et.signal);
        if ((j = this.abortController) === null || j === void 0 || j.abort(), this.abortController = st, st.signal.aborted) throw new TonConnectError("Connection was aborted");
        return (rt = this.provider) === null || rt === void 0 || rt.closeConnection(), this.provider = this.createProvider(_), st.signal.addEventListener("abort", () => {
          var pt;
          (pt = this.provider) === null || pt === void 0 || pt.closeConnection(), this.provider = null;
        }), this.tracker.trackConnectionStarted(), this.provider.connect(this.createConnectRequest(et == null ? void 0 : et.request), {
          openingDeadlineMS: et == null ? void 0 : et.openingDeadlineMS,
          signal: st.signal
        });
      }
      restoreConnection(_) {
        var $, j;
        return __awaiter$2(this, void 0, void 0, function* () {
          this.tracker.trackConnectionRestoringStarted();
          const rt = createAbortController(_ == null ? void 0 : _.signal);
          if (($ = this.abortController) === null || $ === void 0 || $.abort(), this.abortController = rt, rt.signal.aborted) {
            this.tracker.trackConnectionRestoringError("Connection restoring was aborted");
            return;
          }
          const [et, st] = yield Promise.all([
            this.bridgeConnectionStorage.storedConnectionType(),
            this.walletsList.getEmbeddedWallet()
          ]);
          if (rt.signal.aborted) {
            this.tracker.trackConnectionRestoringError("Connection restoring was aborted");
            return;
          }
          let pt = null;
          try {
            switch (et) {
              case "http":
                pt = yield BridgeProvider.fromStorage(this.dappSettings.storage);
                break;
              case "injected":
                pt = yield InjectedProvider.fromStorage(this.dappSettings.storage);
                break;
              default:
                if (st) pt = this.createProvider(st);
                else return;
            }
          } catch {
            this.tracker.trackConnectionRestoringError("Provider is not restored"), yield this.bridgeConnectionStorage.removeConnection(), pt == null ? void 0 : pt.closeConnection(), pt = null;
            return;
          }
          if (rt.signal.aborted) {
            pt == null ? void 0 : pt.closeConnection(), this.tracker.trackConnectionRestoringError("Connection restoring was aborted");
            return;
          }
          if (!pt) {
            logError$1("Provider is not restored"), this.tracker.trackConnectionRestoringError("Provider is not restored");
            return;
          }
          (j = this.provider) === null || j === void 0 || j.closeConnection(), this.provider = pt, pt.listen(this.walletEventsListener.bind(this));
          const Et = () => {
            this.tracker.trackConnectionRestoringError("Connection restoring was aborted"), pt == null ? void 0 : pt.closeConnection(), pt = null;
          };
          rt.signal.addEventListener("abort", Et);
          const Bt = callForSuccess(($t) => __awaiter$2(this, void 0, void 0, function* () {
            yield pt == null ? void 0 : pt.restoreConnection({
              openingDeadlineMS: _ == null ? void 0 : _.openingDeadlineMS,
              signal: $t.signal
            }), rt.signal.removeEventListener("abort", Et), this.connected ? this.tracker.trackConnectionRestoringCompleted(this.wallet) : this.tracker.trackConnectionRestoringError("Connection restoring failed");
          }), {
            attempts: Number.MAX_SAFE_INTEGER,
            delayMs: 2e3,
            signal: _ == null ? void 0 : _.signal
          }), St = new Promise(($t) => setTimeout(() => $t(), 12e3));
          return Promise.race([
            Bt,
            St
          ]);
        });
      }
      sendTransaction(_, $) {
        return __awaiter$2(this, void 0, void 0, function* () {
          const j = {};
          typeof $ == "function" ? j.onRequestSent = $ : (j.onRequestSent = $ == null ? void 0 : $.onRequestSent, j.signal = $ == null ? void 0 : $.signal);
          const rt = createAbortController(j == null ? void 0 : j.signal);
          if (rt.signal.aborted) throw new TonConnectError("Transaction sending was aborted");
          this.checkConnection(), checkSendTransactionSupport(this.wallet.device.features, {
            requiredMessagesNumber: _.messages.length
          }), this.tracker.trackTransactionSentForSignature(this.wallet, _);
          const { validUntil: et } = _, st = __rest(_, [
            "validUntil"
          ]), pt = _.from || this.account.address, Et = _.network || this.account.chain, Bt = yield this.provider.sendRequest(sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, st), {
            valid_until: et,
            from: pt,
            network: Et
          })), {
            onRequestSent: j.onRequestSent,
            signal: rt.signal
          });
          if (sendTransactionParser.isError(Bt)) return this.tracker.trackTransactionSigningFailed(this.wallet, _, Bt.error.message, Bt.error.code), sendTransactionParser.parseAndThrowError(Bt);
          const St = sendTransactionParser.convertFromRpcResponse(Bt);
          return this.tracker.trackTransactionSigned(this.wallet, _, St), St;
        });
      }
      disconnect(_) {
        var $;
        return __awaiter$2(this, void 0, void 0, function* () {
          if (!this.connected) throw new WalletNotConnectedError();
          const j = createAbortController(_ == null ? void 0 : _.signal), rt = this.abortController;
          if (this.abortController = j, j.signal.aborted) throw new TonConnectError("Disconnect was aborted");
          this.onWalletDisconnected("dapp"), yield ($ = this.provider) === null || $ === void 0 ? void 0 : $.disconnect({
            signal: j.signal
          }), rt == null ? void 0 : rt.abort();
        });
      }
      pauseConnection() {
        var _;
        ((_ = this.provider) === null || _ === void 0 ? void 0 : _.type) === "http" && this.provider.pause();
      }
      unPauseConnection() {
        var _;
        return ((_ = this.provider) === null || _ === void 0 ? void 0 : _.type) !== "http" ? Promise.resolve() : this.provider.unPause();
      }
      addWindowFocusAndBlurSubscriptions() {
        const _ = getDocument();
        if (_) try {
          _.addEventListener("visibilitychange", () => {
            _.hidden ? this.pauseConnection() : this.unPauseConnection().catch();
          });
        } catch ($) {
          logError$1("Cannot subscribe to the document.visibilitychange: ", $);
        }
      }
      createProvider(_) {
        let $;
        return !Array.isArray(_) && isWalletConnectionSourceJS(_) ? $ = new InjectedProvider(this.dappSettings.storage, _.jsBridgeKey) : $ = new BridgeProvider(this.dappSettings.storage, _), $.listen(this.walletEventsListener.bind(this)), $;
      }
      walletEventsListener(_) {
        switch (_.event) {
          case "connect":
            this.onWalletConnected(_.payload);
            break;
          case "connect_error":
            this.onWalletConnectError(_.payload);
            break;
          case "disconnect":
            this.onWalletDisconnected("wallet");
        }
      }
      onWalletConnected(_) {
        const $ = _.items.find((et) => et.name === "ton_addr"), j = _.items.find((et) => et.name === "ton_proof");
        if (!$) throw new TonConnectError("ton_addr connection item was not found");
        const rt = {
          device: _.device,
          provider: this.provider.type,
          account: {
            address: $.address,
            chain: $.network,
            walletStateInit: $.walletStateInit,
            publicKey: $.publicKey
          }
        };
        j && (rt.connectItems = {
          tonProof: j
        }), this.wallet = rt, this.tracker.trackConnectionCompleted(rt);
      }
      onWalletConnectError(_) {
        const $ = connectErrorsParser.parseError(_);
        if (this.statusChangeErrorSubscriptions.forEach((j) => j($)), logDebug$1($), this.tracker.trackConnectionError(_.message, _.code), $ instanceof ManifestNotFoundError || $ instanceof ManifestContentErrorError) throw logError$1($), $;
      }
      onWalletDisconnected(_) {
        this.tracker.trackDisconnection(this.wallet, _), this.wallet = null;
      }
      checkConnection() {
        if (!this.connected) throw new WalletNotConnectedError();
      }
      createConnectRequest(_) {
        const $ = [
          {
            name: "ton_addr"
          }
        ];
        return (_ == null ? void 0 : _.tonProof) && $.push({
          name: "ton_proof",
          payload: _.tonProof
        }), {
          manifestUrl: this.dappSettings.manifestUrl,
          items: $
        };
      }
    }
    TonConnect.walletsList = new WalletsListManager();
    TonConnect.isWalletInjected = (d) => InjectedProvider.isWalletInjected(d);
    TonConnect.isInsideWalletBrowser = (d) => InjectedProvider.isInsideWalletBrowser(d);
    const noBounceableTag = 81, testOnlyTag = 128;
    function toUserFriendlyAddress(d, _ = false) {
      const { wc: $, hex: j } = parseHexAddress(d);
      let rt = noBounceableTag;
      _ && (rt |= testOnlyTag);
      const et = new Int8Array(34);
      et[0] = rt, et[1] = $, et.set(j, 2);
      const st = new Uint8Array(36);
      return st.set(et), st.set(crc16$6(et), 34), Base64.encode(st).replace(/\+/g, "-").replace(/\//g, "_");
    }
    function parseHexAddress(d) {
      if (!d.includes(":")) throw new WrongAddressError(`Wrong address ${d}. Address must include ":".`);
      const _ = d.split(":");
      if (_.length !== 2) throw new WrongAddressError(`Wrong address ${d}. Address must include ":" only once.`);
      const $ = parseInt(_[0]);
      if ($ !== 0 && $ !== -1) throw new WrongAddressError(`Wrong address ${d}. WC must be eq 0 or -1, but ${$} received.`);
      const j = _[1];
      if ((j == null ? void 0 : j.length) !== 64) throw new WrongAddressError(`Wrong address ${d}. Hex part must be 64bytes length, but ${j == null ? void 0 : j.length} received.`);
      return {
        wc: $,
        hex: hexToBytes$9(j)
      };
    }
    function crc16$6(d) {
      let $ = 0;
      const j = new Uint8Array(d.length + 2);
      j.set(d);
      for (let rt of j) {
        let et = 128;
        for (; et > 0; ) $ <<= 1, rt & et && ($ += 1), et >>= 1, $ > 65535 && ($ &= 65535, $ ^= 4129);
      }
      return new Uint8Array([
        Math.floor($ / 256),
        $ % 256
      ]);
    }
    const toByteMap = {};
    for (let d = 0; d <= 255; d++) {
      let _ = d.toString(16);
      _.length < 2 && (_ = "0" + _), toByteMap[_] = d;
    }
    function hexToBytes$9(d) {
      d = d.toLowerCase();
      const _ = d.length;
      if (_ % 2 !== 0) throw new ParseHexError("Hex string must have length a multiple of 2: " + d);
      const $ = _ / 2, j = new Uint8Array($);
      for (let rt = 0; rt < $; rt++) {
        const et = rt * 2, st = d.substring(et, et + 2);
        if (!toByteMap.hasOwnProperty(st)) throw new ParseHexError("Invalid hex character: " + st);
        j[rt] = toByteMap[st];
      }
      return j;
    }
    var uaParser = {
      exports: {}
    };
    (function(d, _) {
      (function($, j) {
        var rt = "1.0.40", et = "", st = "?", pt = "function", Et = "undefined", Bt = "object", St = "string", $t = "major", kt = "model", Tt = "name", Pt = "type", It = "vendor", jt = "version", Dt = "architecture", Ot = "console", Ft = "mobile", Lt = "tablet", Zt = "smarttv", Kt = "wearable", ar = "embedded", sr = 500, er = "Amazon", Ut = "Apple", xt = "ASUS", tt = "BlackBerry", nt = "Browser", it = "Chrome", at = "Edge", ct = "Firefox", Mt = "Google", At = "Huawei", ut = "LG", ot = "Microsoft", Ct = "Motorola", Rt = "Opera", Nt = "Samsung", Wt = "Sharp", Xt = "Sony", rr = "Xiaomi", Gt = "Zebra", Yt = "Facebook", tr = "Chromium OS", cr = "Mac OS", ir = " Browser", Jt = function(fr, dr) {
          var gr = {};
          for (var Er in fr) dr[Er] && dr[Er].length % 2 === 0 ? gr[Er] = dr[Er].concat(fr[Er]) : gr[Er] = fr[Er];
          return gr;
        }, vr = function(fr) {
          for (var dr = {}, gr = 0; gr < fr.length; gr++) dr[fr[gr].toUpperCase()] = fr[gr];
          return dr;
        }, Br = function(fr, dr) {
          return typeof fr === St ? _r(dr).indexOf(_r(fr)) !== -1 : false;
        }, _r = function(fr) {
          return fr.toLowerCase();
        }, $r = function(fr) {
          return typeof fr === St ? fr.replace(/[^\d\.]/g, et).split(".")[0] : j;
        }, Ur = function(fr, dr) {
          if (typeof fr === St) return fr = fr.replace(/^\s\s*/, et), typeof dr === Et ? fr : fr.substring(0, sr);
        }, Sr = function(fr, dr) {
          for (var gr = 0, Er, zt, qt, Vt, Qt, hr; gr < dr.length && !Qt; ) {
            var br = dr[gr], pr = dr[gr + 1];
            for (Er = zt = 0; Er < br.length && !Qt && br[Er]; ) if (Qt = br[Er++].exec(fr), Qt) for (qt = 0; qt < pr.length; qt++) hr = Qt[++zt], Vt = pr[qt], typeof Vt === Bt && Vt.length > 0 ? Vt.length === 2 ? typeof Vt[1] == pt ? this[Vt[0]] = Vt[1].call(this, hr) : this[Vt[0]] = Vt[1] : Vt.length === 3 ? typeof Vt[1] === pt && !(Vt[1].exec && Vt[1].test) ? this[Vt[0]] = hr ? Vt[1].call(this, hr, Vt[2]) : j : this[Vt[0]] = hr ? hr.replace(Vt[1], Vt[2]) : j : Vt.length === 4 && (this[Vt[0]] = hr ? Vt[3].call(this, hr.replace(Vt[1], Vt[2])) : j) : this[Vt] = hr || j;
            gr += 2;
          }
        }, Mr = function(fr, dr) {
          for (var gr in dr) if (typeof dr[gr] === Bt && dr[gr].length > 0) {
            for (var Er = 0; Er < dr[gr].length; Er++) if (Br(dr[gr][Er], fr)) return gr === st ? j : gr;
          } else if (Br(dr[gr], fr)) return gr === st ? j : gr;
          return dr.hasOwnProperty("*") ? dr["*"] : fr;
        }, Kr = {
          "1.0": "/8",
          "1.2": "/1",
          "1.3": "/3",
          "2.0": "/412",
          "2.0.2": "/416",
          "2.0.3": "/417",
          "2.0.4": "/419",
          "?": "/"
        }, kr = {
          ME: "4.90",
          "NT 3.11": "NT3.51",
          "NT 4.0": "NT4.0",
          2e3: "NT 5.0",
          XP: [
            "NT 5.1",
            "NT 5.2"
          ],
          Vista: "NT 6.0",
          7: "NT 6.1",
          8: "NT 6.2",
          "8.1": "NT 6.3",
          10: [
            "NT 6.4",
            "NT 10.0"
          ],
          RT: "ARM"
        }, Lr = {
          browser: [
            [
              /\b(?:crmo|crios)\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Chrome"
              ]
            ],
            [
              /edg(?:e|ios|a)?\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Edge"
              ]
            ],
            [
              /(opera mini)\/([-\w\.]+)/i,
              /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
              /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /opios[\/ ]+([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Rt + " Mini"
              ]
            ],
            [
              /\bop(?:rg)?x\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Rt + " GX"
              ]
            ],
            [
              /\bopr\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Rt
              ]
            ],
            [
              /\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Baidu"
              ]
            ],
            [
              /\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i
            ],
            [
              jt,
              [
                Tt,
                "Maxthon"
              ]
            ],
            [
              /(kindle)\/([\w\.]+)/i,
              /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
              /(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,
              /(?:ms|\()(ie) ([\w\.]+)/i,
              /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\/([-\w\.]+)/i,
              /(heytap|ovi|115)browser\/([\d\.]+)/i,
              /(weibo)__([\d\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /quark(?:pc)?\/([-\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Quark"
              ]
            ],
            [
              /\bddg\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "DuckDuckGo"
              ]
            ],
            [
              /(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "UC" + nt
              ]
            ],
            [
              /microm.+\bqbcore\/([\w\.]+)/i,
              /\bqbcore\/([\w\.]+).+microm/i,
              /micromessenger\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "WeChat"
              ]
            ],
            [
              /konqueror\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Konqueror"
              ]
            ],
            [
              /trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i
            ],
            [
              jt,
              [
                Tt,
                "IE"
              ]
            ],
            [
              /ya(?:search)?browser\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Yandex"
              ]
            ],
            [
              /slbrowser\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Smart Lenovo " + nt
              ]
            ],
            [
              /(avast|avg)\/([\w\.]+)/i
            ],
            [
              [
                Tt,
                /(.+)/,
                "$1 Secure " + nt
              ],
              jt
            ],
            [
              /\bfocus\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                ct + " Focus"
              ]
            ],
            [
              /\bopt\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Rt + " Touch"
              ]
            ],
            [
              /coc_coc\w+\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Coc Coc"
              ]
            ],
            [
              /dolfin\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Dolphin"
              ]
            ],
            [
              /coast\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Rt + " Coast"
              ]
            ],
            [
              /miuibrowser\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "MIUI" + ir
              ]
            ],
            [
              /fxios\/([\w\.-]+)/i
            ],
            [
              jt,
              [
                Tt,
                ct
              ]
            ],
            [
              /\bqihoobrowser\/?([\w\.]*)/i
            ],
            [
              jt,
              [
                Tt,
                "360"
              ]
            ],
            [
              /\b(qq)\/([\w\.]+)/i
            ],
            [
              [
                Tt,
                /(.+)/,
                "$1Browser"
              ],
              jt
            ],
            [
              /(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i
            ],
            [
              [
                Tt,
                /(.+)/,
                "$1" + ir
              ],
              jt
            ],
            [
              /samsungbrowser\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                Nt + " Internet"
              ]
            ],
            [
              /metasr[\/ ]?([\d\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Sogou Explorer"
              ]
            ],
            [
              /(sogou)mo\w+\/([\d\.]+)/i
            ],
            [
              [
                Tt,
                "Sogou Mobile"
              ],
              jt
            ],
            [
              /(electron)\/([\w\.]+) safari/i,
              /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
              /m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /(lbbrowser|rekonq)/i,
              /\[(linkedin)app\]/i
            ],
            [
              Tt
            ],
            [
              /ome\/([\w\.]+) \w* ?(iron) saf/i,
              /ome\/([\w\.]+).+qihu (360)[es]e/i
            ],
            [
              jt,
              Tt
            ],
            [
              /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i
            ],
            [
              [
                Tt,
                Yt
              ],
              jt
            ],
            [
              /(Klarna)\/([\w\.]+)/i,
              /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
              /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
              /safari (line)\/([\w\.]+)/i,
              /\b(line)\/([\w\.]+)\/iab/i,
              /(alipay)client\/([\w\.]+)/i,
              /(twitter)(?:and| f.+e\/([\w\.]+))/i,
              /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /\bgsa\/([\w\.]+) .*safari\//i
            ],
            [
              jt,
              [
                Tt,
                "GSA"
              ]
            ],
            [
              /musical_ly(?:.+app_?version\/|_)([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "TikTok"
              ]
            ],
            [
              /headlesschrome(?:\/([\w\.]+)| )/i
            ],
            [
              jt,
              [
                Tt,
                it + " Headless"
              ]
            ],
            [
              / wv\).+(chrome)\/([\w\.]+)/i
            ],
            [
              [
                Tt,
                it + " WebView"
              ],
              jt
            ],
            [
              /droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i
            ],
            [
              jt,
              [
                Tt,
                "Android " + nt
              ]
            ],
            [
              /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i
            ],
            [
              jt,
              [
                Tt,
                "Mobile Safari"
              ]
            ],
            [
              /version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i
            ],
            [
              jt,
              Tt
            ],
            [
              /webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i
            ],
            [
              Tt,
              [
                jt,
                Mr,
                Kr
              ]
            ],
            [
              /(webkit|khtml)\/([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /(navigator|netscape\d?)\/([-\w\.]+)/i
            ],
            [
              [
                Tt,
                "Netscape"
              ],
              jt
            ],
            [
              /(wolvic|librewolf)\/([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /mobile vr; rv:([\w\.]+)\).+firefox/i
            ],
            [
              jt,
              [
                Tt,
                ct + " Reality"
              ]
            ],
            [
              /ekiohf.+(flow)\/([\w\.]+)/i,
              /(swiftfox)/i,
              /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
              /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
              /(firefox)\/([\w\.]+)/i,
              /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
              /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
              /(links) \(([\w\.]+)/i
            ],
            [
              Tt,
              [
                jt,
                /_/g,
                "."
              ]
            ],
            [
              /(cobalt)\/([\w\.]+)/i
            ],
            [
              Tt,
              [
                jt,
                /master.|lts./,
                ""
              ]
            ]
          ],
          cpu: [
            [
              /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i
            ],
            [
              [
                Dt,
                "amd64"
              ]
            ],
            [
              /(ia32(?=;))/i
            ],
            [
              [
                Dt,
                _r
              ]
            ],
            [
              /((?:i[346]|x)86)[;\)]/i
            ],
            [
              [
                Dt,
                "ia32"
              ]
            ],
            [
              /\b(aarch64|arm(v?8e?l?|_?64))\b/i
            ],
            [
              [
                Dt,
                "arm64"
              ]
            ],
            [
              /\b(arm(?:v[67])?ht?n?[fl]p?)\b/i
            ],
            [
              [
                Dt,
                "armhf"
              ]
            ],
            [
              /windows (ce|mobile); ppc;/i
            ],
            [
              [
                Dt,
                "arm"
              ]
            ],
            [
              /((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i
            ],
            [
              [
                Dt,
                /ower/,
                et,
                _r
              ]
            ],
            [
              /(sun4\w)[;\)]/i
            ],
            [
              [
                Dt,
                "sparc"
              ]
            ],
            [
              /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
            ],
            [
              [
                Dt,
                _r
              ]
            ]
          ],
          device: [
            [
              /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i
            ],
            [
              kt,
              [
                It,
                Nt
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
              /samsung[- ]((?!sm-[lr])[-\w]+)/i,
              /sec-(sgh\w+)/i
            ],
            [
              kt,
              [
                It,
                Nt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i
            ],
            [
              kt,
              [
                It,
                Ut
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\((ipad);[-\w\),; ]+apple/i,
              /applecoremedia\/[\w\.]+ \((ipad)/i,
              /\b(ipad)\d\d?,\d\d?[;\]].+ios/i
            ],
            [
              kt,
              [
                It,
                Ut
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(macintosh);/i
            ],
            [
              kt,
              [
                It,
                Ut
              ]
            ],
            [
              /\b(sh-?[altvz]?\d\d[a-ekm]?)/i
            ],
            [
              kt,
              [
                It,
                Wt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(?:honor)([-\w ]+)[;\)]/i
            ],
            [
              kt,
              [
                It,
                "Honor"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i
            ],
            [
              kt,
              [
                It,
                At
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(?:huawei)([-\w ]+)[;\)]/i,
              /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i
            ],
            [
              kt,
              [
                It,
                At
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
              /\b; (\w+) build\/hm\1/i,
              /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
              /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
              /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
              /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i
            ],
            [
              [
                kt,
                /_/g,
                " "
              ],
              [
                It,
                rr
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
              /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i
            ],
            [
              [
                kt,
                /_/g,
                " "
              ],
              [
                It,
                rr
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /; (\w+) bui.+ oppo/i,
              /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i
            ],
            [
              kt,
              [
                It,
                "OPPO"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(opd2\d{3}a?) bui/i
            ],
            [
              kt,
              [
                It,
                "OPPO"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /vivo (\w+)(?: bui|\))/i,
              /\b(v[12]\d{3}\w?[at])(?: bui|;)/i
            ],
            [
              kt,
              [
                It,
                "Vivo"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(rmx[1-3]\d{3})(?: bui|;|\))/i
            ],
            [
              kt,
              [
                It,
                "Realme"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
              /\bmot(?:orola)?[- ](\w*)/i,
              /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i
            ],
            [
              kt,
              [
                It,
                Ct
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(mz60\d|xoom[2 ]{0,2}) build\//i
            ],
            [
              kt,
              [
                It,
                Ct
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i
            ],
            [
              kt,
              [
                It,
                ut
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
              /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
              /\blg-?([\d\w]+) bui/i
            ],
            [
              kt,
              [
                It,
                ut
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(ideatab[-\w ]+)/i,
              /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i
            ],
            [
              kt,
              [
                It,
                "Lenovo"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(?:maemo|nokia).*(n900|lumia \d+)/i,
              /nokia[-_ ]?([-\w\.]*)/i
            ],
            [
              [
                kt,
                /_/g,
                " "
              ],
              [
                It,
                "Nokia"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(pixel c)\b/i
            ],
            [
              kt,
              [
                It,
                Mt
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i
            ],
            [
              kt,
              [
                It,
                Mt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i
            ],
            [
              kt,
              [
                It,
                Xt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /sony tablet [ps]/i,
              /\b(?:sony)?sgp\w+(?: bui|\))/i
            ],
            [
              [
                kt,
                "Xperia Tablet"
              ],
              [
                It,
                Xt
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              / (kb2005|in20[12]5|be20[12][59])\b/i,
              /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i
            ],
            [
              kt,
              [
                It,
                "OnePlus"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(alexa)webm/i,
              /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
              /(kf[a-z]+)( bui|\)).+silk\//i
            ],
            [
              kt,
              [
                It,
                er
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i
            ],
            [
              [
                kt,
                /(.+)/g,
                "Fire Phone $1"
              ],
              [
                It,
                er
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(playbook);[-\w\),; ]+(rim)/i
            ],
            [
              kt,
              It,
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b((?:bb[a-f]|st[hv])100-\d)/i,
              /\(bb10; (\w+)/i
            ],
            [
              kt,
              [
                It,
                tt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i
            ],
            [
              kt,
              [
                It,
                xt
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              / (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i
            ],
            [
              kt,
              [
                It,
                xt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(nexus 9)/i
            ],
            [
              kt,
              [
                It,
                "HTC"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
              /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
              /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
            ],
            [
              It,
              [
                kt,
                /_/g,
                " "
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i
            ],
            [
              kt,
              [
                It,
                "TCL"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(itel) ((\w+))/i
            ],
            [
              [
                It,
                _r
              ],
              kt,
              [
                Pt,
                Mr,
                {
                  tablet: [
                    "p10001l",
                    "w7001"
                  ],
                  "*": "mobile"
                }
              ]
            ],
            [
              /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i
            ],
            [
              kt,
              [
                It,
                "Acer"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /droid.+; (m[1-5] note) bui/i,
              /\bmz-([-\w]{2,})/i
            ],
            [
              kt,
              [
                It,
                "Meizu"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i
            ],
            [
              kt,
              [
                It,
                "Ulefone"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /; (energy ?\w+)(?: bui|\))/i,
              /; energizer ([\w ]+)(?: bui|\))/i
            ],
            [
              kt,
              [
                It,
                "Energizer"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /; cat (b35);/i,
              /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i
            ],
            [
              kt,
              [
                It,
                "Cat"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /((?:new )?andromax[\w- ]+)(?: bui|\))/i
            ],
            [
              kt,
              [
                It,
                "Smartfren"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /droid.+; (a(?:015|06[35]|142p?))/i
            ],
            [
              kt,
              [
                It,
                "Nothing"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,
              /; (imo) ((?!tab)[\w ]+?)(?: bui|\))/i,
              /(hp) ([\w ]+\w)/i,
              /(asus)-?(\w+)/i,
              /(microsoft); (lumia[\w ]+)/i,
              /(lenovo)[-_ ]?([-\w]+)/i,
              /(jolla)/i,
              /(oppo) ?([\w ]+) bui/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Ft
              ]
            ],
            [
              /(imo) (tab \w+)/i,
              /(kobo)\s(ereader|touch)/i,
              /(archos) (gamepad2?)/i,
              /(hp).+(touchpad(?!.+tablet)|tablet)/i,
              /(kindle)\/([\w\.]+)/i,
              /(nook)[\w ]+build\/(\w+)/i,
              /(dell) (strea[kpr\d ]*[\dko])/i,
              /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
              /(trinity)[- ]*(t\d{3}) bui/i,
              /(gigaset)[- ]+(q\w{1,9}) bui/i,
              /(vodafone) ([\w ]+)(?:\)| bui)/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Lt
              ]
            ],
            [
              /(surface duo)/i
            ],
            [
              kt,
              [
                It,
                ot
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /droid [\d\.]+; (fp\du?)(?: b|\))/i
            ],
            [
              kt,
              [
                It,
                "Fairphone"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /(u304aa)/i
            ],
            [
              kt,
              [
                It,
                "AT&T"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\bsie-(\w*)/i
            ],
            [
              kt,
              [
                It,
                "Siemens"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(rct\w+) b/i
            ],
            [
              kt,
              [
                It,
                "RCA"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(venue[\d ]{2,7}) b/i
            ],
            [
              kt,
              [
                It,
                "Dell"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(q(?:mv|ta)\w+) b/i
            ],
            [
              kt,
              [
                It,
                "Verizon"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i
            ],
            [
              kt,
              [
                It,
                "Barnes & Noble"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(tm\d{3}\w+) b/i
            ],
            [
              kt,
              [
                It,
                "NuVision"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(k88) b/i
            ],
            [
              kt,
              [
                It,
                "ZTE"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(nx\d{3}j) b/i
            ],
            [
              kt,
              [
                It,
                "ZTE"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(gen\d{3}) b.+49h/i
            ],
            [
              kt,
              [
                It,
                "Swiss"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(zur\d{3}) b/i
            ],
            [
              kt,
              [
                It,
                "Swiss"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b((zeki)?tb.*\b) b/i
            ],
            [
              kt,
              [
                It,
                "Zeki"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b([yr]\d{2}) b/i,
              /\b(dragon[- ]+touch |dt)(\w{5}) b/i
            ],
            [
              [
                It,
                "Dragon Touch"
              ],
              kt,
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(ns-?\w{0,9}) b/i
            ],
            [
              kt,
              [
                It,
                "Insignia"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b((nxa|next)-?\w{0,9}) b/i
            ],
            [
              kt,
              [
                It,
                "NextBook"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i
            ],
            [
              [
                It,
                "Voice"
              ],
              kt,
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(lvtel\-)?(v1[12]) b/i
            ],
            [
              [
                It,
                "LvTel"
              ],
              kt,
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(ph-1) /i
            ],
            [
              kt,
              [
                It,
                "Essential"
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /\b(v(100md|700na|7011|917g).*\b) b/i
            ],
            [
              kt,
              [
                It,
                "Envizen"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b(trio[-\w\. ]+) b/i
            ],
            [
              kt,
              [
                It,
                "MachSpeed"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /\btu_(1491) b/i
            ],
            [
              kt,
              [
                It,
                "Rotor"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(shield[\w ]+) b/i
            ],
            [
              kt,
              [
                It,
                "Nvidia"
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /(sprint) (\w+)/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Ft
              ]
            ],
            [
              /(kin\.[onetw]{3})/i
            ],
            [
              [
                kt,
                /\./g,
                " "
              ],
              [
                It,
                ot
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i
            ],
            [
              kt,
              [
                It,
                Gt
              ],
              [
                Pt,
                Lt
              ]
            ],
            [
              /droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i
            ],
            [
              kt,
              [
                It,
                Gt
              ],
              [
                Pt,
                Ft
              ]
            ],
            [
              /smart-tv.+(samsung)/i
            ],
            [
              It,
              [
                Pt,
                Zt
              ]
            ],
            [
              /hbbtv.+maple;(\d+)/i
            ],
            [
              [
                kt,
                /^/,
                "SmartTV"
              ],
              [
                It,
                Nt
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i
            ],
            [
              [
                It,
                ut
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /(apple) ?tv/i
            ],
            [
              It,
              [
                kt,
                Ut + " TV"
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /crkey/i
            ],
            [
              [
                kt,
                it + "cast"
              ],
              [
                It,
                Mt
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /droid.+aft(\w+)( bui|\))/i
            ],
            [
              kt,
              [
                It,
                er
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /\(dtv[\);].+(aquos)/i,
              /(aquos-tv[\w ]+)\)/i
            ],
            [
              kt,
              [
                It,
                Wt
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /(bravia[\w ]+)( bui|\))/i
            ],
            [
              kt,
              [
                It,
                Xt
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /(mitv-\w{5}) bui/i
            ],
            [
              kt,
              [
                It,
                rr
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /Hbbtv.*(technisat) (.*);/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Zt
              ]
            ],
            [
              /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
              /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i
            ],
            [
              [
                It,
                Ur
              ],
              [
                kt,
                Ur
              ],
              [
                Pt,
                Zt
              ]
            ],
            [
              /\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i
            ],
            [
              [
                Pt,
                Zt
              ]
            ],
            [
              /(ouya)/i,
              /(nintendo) ([wids3utch]+)/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Ot
              ]
            ],
            [
              /droid.+; (shield) bui/i
            ],
            [
              kt,
              [
                It,
                "Nvidia"
              ],
              [
                Pt,
                Ot
              ]
            ],
            [
              /(playstation [345portablevi]+)/i
            ],
            [
              kt,
              [
                It,
                Xt
              ],
              [
                Pt,
                Ot
              ]
            ],
            [
              /\b(xbox(?: one)?(?!; xbox))[\); ]/i
            ],
            [
              kt,
              [
                It,
                ot
              ],
              [
                Pt,
                Ot
              ]
            ],
            [
              /\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i
            ],
            [
              kt,
              [
                It,
                Nt
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /((pebble))app/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Kt
              ]
            ],
            [
              /(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i
            ],
            [
              kt,
              [
                It,
                Ut
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /droid.+; (glass) \d/i
            ],
            [
              kt,
              [
                It,
                Mt
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /droid.+; (wt63?0{2,3})\)/i
            ],
            [
              kt,
              [
                It,
                Gt
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /droid.+; (glass) \d/i
            ],
            [
              kt,
              [
                It,
                Mt
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /(pico) (4|neo3(?: link|pro)?)/i
            ],
            [
              It,
              kt,
              [
                Pt,
                Kt
              ]
            ],
            [
              /; (quest( \d| pro)?)/i
            ],
            [
              kt,
              [
                It,
                Yt
              ],
              [
                Pt,
                Kt
              ]
            ],
            [
              /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i
            ],
            [
              It,
              [
                Pt,
                ar
              ]
            ],
            [
              /(aeobc)\b/i
            ],
            [
              kt,
              [
                It,
                er
              ],
              [
                Pt,
                ar
              ]
            ],
            [
              /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i
            ],
            [
              kt,
              [
                Pt,
                Ft
              ]
            ],
            [
              /droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i
            ],
            [
              kt,
              [
                Pt,
                Lt
              ]
            ],
            [
              /\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i
            ],
            [
              [
                Pt,
                Lt
              ]
            ],
            [
              /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i
            ],
            [
              [
                Pt,
                Ft
              ]
            ],
            [
              /(android[-\w\. ]{0,9});.+buil/i
            ],
            [
              kt,
              [
                It,
                "Generic"
              ]
            ]
          ],
          engine: [
            [
              /windows.+ edge\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                at + "HTML"
              ]
            ],
            [
              /(arkweb)\/([\w\.]+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "Blink"
              ]
            ],
            [
              /(presto)\/([\w\.]+)/i,
              /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,
              /ekioh(flow)\/([\w\.]+)/i,
              /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
              /(icab)[\/ ]([23]\.[\d\.]+)/i,
              /\b(libweb)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /rv\:([\w\.]{1,9})\b.+(gecko)/i
            ],
            [
              jt,
              Tt
            ]
          ],
          os: [
            [
              /microsoft (windows) (vista|xp)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i
            ],
            [
              Tt,
              [
                jt,
                Mr,
                kr
              ]
            ],
            [
              /windows nt 6\.2; (arm)/i,
              /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
              /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i
            ],
            [
              [
                jt,
                Mr,
                kr
              ],
              [
                Tt,
                "Windows"
              ]
            ],
            [
              /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
              /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
              /cfnetwork\/.+darwin/i
            ],
            [
              [
                jt,
                /_/g,
                "."
              ],
              [
                Tt,
                "iOS"
              ]
            ],
            [
              /(mac os x) ?([\w\. ]*)/i,
              /(macintosh|mac_powerpc\b)(?!.+haiku)/i
            ],
            [
              [
                Tt,
                cr
              ],
              [
                jt,
                /_/g,
                "."
              ]
            ],
            [
              /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i
            ],
            [
              jt,
              Tt
            ],
            [
              /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\/ ]?([\w\.]*)/i,
              /(blackberry)\w*\/([\w\.]*)/i,
              /(tizen|kaios)[\/ ]([\w\.]+)/i,
              /\((series40);/i
            ],
            [
              Tt,
              jt
            ],
            [
              /\(bb(10);/i
            ],
            [
              jt,
              [
                Tt,
                tt
              ]
            ],
            [
              /(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i
            ],
            [
              jt,
              [
                Tt,
                "Symbian"
              ]
            ],
            [
              /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                ct + " OS"
              ]
            ],
            [
              /web0s;.+rt(tv)/i,
              /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "webOS"
              ]
            ],
            [
              /watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                "watchOS"
              ]
            ],
            [
              /crkey\/([\d\.]+)/i
            ],
            [
              jt,
              [
                Tt,
                it + "cast"
              ]
            ],
            [
              /(cros) [\w]+(?:\)| ([\w\.]+)\b)/i
            ],
            [
              [
                Tt,
                tr
              ],
              jt
            ],
            [
              /panasonic;(viera)/i,
              /(netrange)mmh/i,
              /(nettv)\/(\d+\.[\w\.]+)/i,
              /(nintendo|playstation) ([wids345portablevuch]+)/i,
              /(xbox); +xbox ([^\);]+)/i,
              /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
              /(mint)[\/\(\) ]?(\w*)/i,
              /(mageia|vectorlinux)[; ]/i,
              /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
              /(hurd|linux) ?([\w\.]*)/i,
              /(gnu) ?([\w\.]*)/i,
              /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
              /(haiku) (\w+)/i
            ],
            [
              Tt,
              jt
            ],
            [
              /(sunos) ?([\w\.\d]*)/i
            ],
            [
              [
                Tt,
                "Solaris"
              ],
              jt
            ],
            [
              /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
              /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
              /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
              /(unix) ?([\w\.]*)/i
            ],
            [
              Tt,
              jt
            ]
          ]
        }, Gr = function(fr, dr) {
          if (typeof fr === Bt && (dr = fr, fr = j), !(this instanceof Gr)) return new Gr(fr, dr).getResult();
          var gr = typeof $ !== Et && $.navigator ? $.navigator : j, Er = fr || (gr && gr.userAgent ? gr.userAgent : et), zt = gr && gr.userAgentData ? gr.userAgentData : j, qt = dr ? Jt(Lr, dr) : Lr, Vt = gr && gr.userAgent == Er;
          return this.getBrowser = function() {
            var Qt = {};
            return Qt[Tt] = j, Qt[jt] = j, Sr.call(Qt, Er, qt.browser), Qt[$t] = $r(Qt[jt]), Vt && gr && gr.brave && typeof gr.brave.isBrave == pt && (Qt[Tt] = "Brave"), Qt;
          }, this.getCPU = function() {
            var Qt = {};
            return Qt[Dt] = j, Sr.call(Qt, Er, qt.cpu), Qt;
          }, this.getDevice = function() {
            var Qt = {};
            return Qt[It] = j, Qt[kt] = j, Qt[Pt] = j, Sr.call(Qt, Er, qt.device), Vt && !Qt[Pt] && zt && zt.mobile && (Qt[Pt] = Ft), Vt && Qt[kt] == "Macintosh" && gr && typeof gr.standalone !== Et && gr.maxTouchPoints && gr.maxTouchPoints > 2 && (Qt[kt] = "iPad", Qt[Pt] = Lt), Qt;
          }, this.getEngine = function() {
            var Qt = {};
            return Qt[Tt] = j, Qt[jt] = j, Sr.call(Qt, Er, qt.engine), Qt;
          }, this.getOS = function() {
            var Qt = {};
            return Qt[Tt] = j, Qt[jt] = j, Sr.call(Qt, Er, qt.os), Vt && !Qt[Tt] && zt && zt.platform && zt.platform != "Unknown" && (Qt[Tt] = zt.platform.replace(/chrome os/i, tr).replace(/macos/i, cr)), Qt;
          }, this.getResult = function() {
            return {
              ua: this.getUA(),
              browser: this.getBrowser(),
              engine: this.getEngine(),
              os: this.getOS(),
              device: this.getDevice(),
              cpu: this.getCPU()
            };
          }, this.getUA = function() {
            return Er;
          }, this.setUA = function(Qt) {
            return Er = typeof Qt === St && Qt.length > sr ? Ur(Qt, sr) : Qt, this;
          }, this.setUA(Er), this;
        };
        Gr.VERSION = rt, Gr.BROWSER = vr([
          Tt,
          jt,
          $t
        ]), Gr.CPU = vr([
          Dt
        ]), Gr.DEVICE = vr([
          kt,
          It,
          Pt,
          Ot,
          Ft,
          Zt,
          Lt,
          Kt,
          ar
        ]), Gr.ENGINE = Gr.OS = vr([
          Tt,
          jt
        ]), d.exports && (_ = d.exports = Gr), _.UAParser = Gr;
        var Tr = typeof $ !== Et && ($.jQuery || $.Zepto);
        if (Tr && !Tr.ua) {
          var yr = new Gr();
          Tr.ua = yr.getResult(), Tr.ua.get = function() {
            return yr.getUA();
          }, Tr.ua.set = function(fr) {
            yr.setUA(fr);
            var dr = yr.getResult();
            for (var gr in dr) Tr.ua[gr] = dr[gr];
          };
        }
      })(typeof window == "object" ? window : commonjsGlobal);
    })(uaParser, uaParser.exports);
    var uaParserExports = uaParser.exports;
    const UAParser = getDefaultExportFromCjs$1(uaParserExports);
    var isMergeableObject = function d(_) {
      return isNonNullObject(_) && !isSpecial(_);
    };
    function isNonNullObject(d) {
      return !!d && typeof d == "object";
    }
    function isSpecial(d) {
      var _ = Object.prototype.toString.call(d);
      return _ === "[object RegExp]" || _ === "[object Date]" || isReactElement(d);
    }
    var canUseSymbol = typeof Symbol == "function" && Symbol.for, REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(d) {
      return d.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(d) {
      return Array.isArray(d) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(d, _) {
      return _.clone !== false && _.isMergeableObject(d) ? deepmerge(emptyTarget(d), d, _) : d;
    }
    function defaultArrayMerge(d, _, $) {
      return d.concat(_).map(function(j) {
        return cloneUnlessOtherwiseSpecified(j, $);
      });
    }
    function getMergeFunction(d, _) {
      if (!_.customMerge) return deepmerge;
      var $ = _.customMerge(d);
      return typeof $ == "function" ? $ : deepmerge;
    }
    function getEnumerableOwnPropertySymbols(d) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(d).filter(function(_) {
        return Object.propertyIsEnumerable.call(d, _);
      }) : [];
    }
    function getKeys(d) {
      return Object.keys(d).concat(getEnumerableOwnPropertySymbols(d));
    }
    function propertyIsOnObject(d, _) {
      try {
        return _ in d;
      } catch {
        return false;
      }
    }
    function propertyIsUnsafe(d, _) {
      return propertyIsOnObject(d, _) && !(Object.hasOwnProperty.call(d, _) && Object.propertyIsEnumerable.call(d, _));
    }
    function mergeObject(d, _, $) {
      var j = {};
      return $.isMergeableObject(d) && getKeys(d).forEach(function(rt) {
        j[rt] = cloneUnlessOtherwiseSpecified(d[rt], $);
      }), getKeys(_).forEach(function(rt) {
        propertyIsUnsafe(d, rt) || (propertyIsOnObject(d, rt) && $.isMergeableObject(_[rt]) ? j[rt] = getMergeFunction(rt, $)(d[rt], _[rt], $) : j[rt] = cloneUnlessOtherwiseSpecified(_[rt], $));
      }), j;
    }
    function deepmerge(d, _, $) {
      $ = $ || {}, $.arrayMerge = $.arrayMerge || defaultArrayMerge, $.isMergeableObject = $.isMergeableObject || isMergeableObject, $.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var j = Array.isArray(_), rt = Array.isArray(d), et = j === rt;
      return et ? j ? $.arrayMerge(d, _, $) : mergeObject(d, _, $) : cloneUnlessOtherwiseSpecified(_, $);
    }
    deepmerge.all = function d(_, $) {
      if (!Array.isArray(_)) throw new Error("first argument should be an array");
      return _.reduce(function(j, rt) {
        return deepmerge(j, rt, $);
      }, {});
    };
    var deepmerge_1 = deepmerge, cjs = deepmerge_1;
    const deepmerge$1 = getDefaultExportFromCjs$1(cjs);
    var classnames = {
      exports: {}
    };
    (function(d) {
      (function() {
        var _ = {}.hasOwnProperty;
        function $() {
          for (var et = "", st = 0; st < arguments.length; st++) {
            var pt = arguments[st];
            pt && (et = rt(et, j(pt)));
          }
          return et;
        }
        function j(et) {
          if (typeof et == "string" || typeof et == "number") return et;
          if (typeof et != "object") return "";
          if (Array.isArray(et)) return $.apply(null, et);
          if (et.toString !== Object.prototype.toString && !et.toString.toString().includes("[native code]")) return et.toString();
          var st = "";
          for (var pt in et) _.call(et, pt) && et[pt] && (st = rt(st, pt));
          return st;
        }
        function rt(et, st) {
          return st ? et ? et + " " + st : et + st : et;
        }
        d.exports ? ($.default = $, d.exports = $) : window.classNames = $;
      })();
    })(classnames);
    var classnamesExports = classnames.exports;
    const cn = getDefaultExportFromCjs$1(classnamesExports);
    var __defProp$1 = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (d, _, $) => _ in d ? __defProp$1(d, _, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: $
    }) : d[_] = $, __spreadValues$1 = (d, _) => {
      for (var $ in _ || (_ = {})) __hasOwnProp$1.call(_, $) && __defNormalProp$1(d, $, _[$]);
      if (__getOwnPropSymbols$1) for (var $ of __getOwnPropSymbols$1(_)) __propIsEnum$1.call(_, $) && __defNormalProp$1(d, $, _[$]);
      return d;
    }, __spreadProps = (d, _) => __defProps(d, __getOwnPropDescs(_)), __publicField = (d, _, $) => (__defNormalProp$1(d, typeof _ != "symbol" ? _ + "" : _, $), $), __async = (d, _, $) => new Promise((j, rt) => {
      var et = (Et) => {
        try {
          pt($.next(Et));
        } catch (Bt) {
          rt(Bt);
        }
      }, st = (Et) => {
        try {
          pt($.throw(Et));
        } catch (Bt) {
          rt(Bt);
        }
      }, pt = (Et) => Et.done ? j(Et.value) : Promise.resolve(Et.value).then(et, st);
      pt(($ = $.apply(d, _)).next());
    }), _a$3, _b, _c, _d, _e, _f, _g, _h;
    const sharedConfig = {};
    function setHydrateContext(d) {
      sharedConfig.context = d;
    }
    const equalFn = (d, _) => d === _, $PROXY = Symbol("solid-proxy"), $TRACK = Symbol("solid-track"), signalOptions = {
      equals: equalFn
    };
    let runEffects = runQueue;
    const STALE = 1, PENDING = 2, UNOWNED = {
      owned: null,
      cleanups: null,
      context: null,
      owner: null
    }, NO_INIT = {};
    var Owner = null;
    let Transition$1 = null, Listener = null, Updates = null, Effects = null, ExecCount = 0;
    function createRoot(d, _) {
      const $ = Listener, j = Owner, rt = d.length === 0, et = rt ? UNOWNED : {
        owned: null,
        cleanups: null,
        context: null,
        owner: _ === void 0 ? j : _
      }, st = rt ? d : () => d(() => untrack(() => cleanNode(et)));
      Owner = et, Listener = null;
      try {
        return runUpdates(st, true);
      } finally {
        Listener = $, Owner = j;
      }
    }
    function createSignal(d, _) {
      _ = _ ? Object.assign({}, signalOptions, _) : signalOptions;
      const $ = {
        value: d,
        observers: null,
        observerSlots: null,
        comparator: _.equals || void 0
      }, j = (rt) => (typeof rt == "function" && (rt = rt($.value)), writeSignal($, rt));
      return [
        readSignal.bind($),
        j
      ];
    }
    function createComputed(d, _, $) {
      const j = createComputation(d, _, true, STALE);
      updateComputation(j);
    }
    function createRenderEffect(d, _, $) {
      const j = createComputation(d, _, false, STALE);
      updateComputation(j);
    }
    function createEffect(d, _, $) {
      runEffects = runUserEffects;
      const j = createComputation(d, _, false, STALE);
      j.user = true, Effects ? Effects.push(j) : updateComputation(j);
    }
    function createMemo(d, _, $) {
      $ = $ ? Object.assign({}, signalOptions, $) : signalOptions;
      const j = createComputation(d, _, true, 0);
      return j.observers = null, j.observerSlots = null, j.comparator = $.equals || void 0, updateComputation(j), readSignal.bind(j);
    }
    function createResource(d, _, $) {
      let j, rt, et;
      arguments.length === 1 ? (j = true, rt = d, et = {}) : (j = d, rt = _, et = {});
      let st = null, pt = NO_INIT, Et = null, Bt = false, St = "initialValue" in et, $t = typeof j == "function" && createMemo(j);
      const kt = /* @__PURE__ */ new Set(), [Tt, Pt] = (et.storage || createSignal)(et.initialValue), [It, jt] = createSignal(void 0), [Dt, Ot] = createSignal(void 0, {
        equals: false
      }), [Ft, Lt] = createSignal(St ? "ready" : "unresolved");
      if (sharedConfig.context) {
        Et = `${sharedConfig.context.id}${sharedConfig.context.count++}`;
        let er;
        et.ssrLoadFrom === "initial" ? pt = et.initialValue : sharedConfig.load && (er = sharedConfig.load(Et)) && (pt = er[0]);
      }
      function Zt(er, Ut, xt, tt) {
        return st === er && (st = null, St = true, (er === pt || Ut === pt) && et.onHydrated && queueMicrotask(() => et.onHydrated(tt, {
          value: Ut
        })), pt = NO_INIT, Kt(Ut, xt)), Ut;
      }
      function Kt(er, Ut) {
        runUpdates(() => {
          Ut === void 0 && Pt(() => er), Lt(Ut !== void 0 ? "errored" : "ready"), jt(Ut);
          for (const xt of kt.keys()) xt.decrement();
          kt.clear();
        }, false);
      }
      function ar() {
        const er = SuspenseContext, Ut = Tt(), xt = It();
        if (xt !== void 0 && !st) throw xt;
        return Listener && Listener.user, Ut;
      }
      function sr(er = true) {
        if (er !== false && Bt) return;
        Bt = false;
        const Ut = $t ? $t() : j;
        if (Ut == null || Ut === false) {
          Zt(st, untrack(Tt));
          return;
        }
        const xt = pt !== NO_INIT ? pt : untrack(() => rt(Ut, {
          value: Tt(),
          refetching: er
        }));
        return typeof xt != "object" || !(xt && "then" in xt) ? (Zt(st, xt, void 0, Ut), xt) : (st = xt, Bt = true, queueMicrotask(() => Bt = false), runUpdates(() => {
          Lt(St ? "refreshing" : "pending"), Ot();
        }, false), xt.then((tt) => Zt(xt, tt, void 0, Ut), (tt) => Zt(xt, void 0, castError(tt), Ut)));
      }
      return Object.defineProperties(ar, {
        state: {
          get: () => Ft()
        },
        error: {
          get: () => It()
        },
        loading: {
          get() {
            const er = Ft();
            return er === "pending" || er === "refreshing";
          }
        },
        latest: {
          get() {
            if (!St) return ar();
            const er = It();
            if (er && !st) throw er;
            return Tt();
          }
        }
      }), $t ? createComputed(() => sr(false)) : sr(false), [
        ar,
        {
          refetch: sr,
          mutate: Pt
        }
      ];
    }
    function batch(d) {
      return runUpdates(d, false);
    }
    function untrack(d) {
      if (Listener === null) return d();
      const _ = Listener;
      Listener = null;
      try {
        return d();
      } finally {
        Listener = _;
      }
    }
    function on(d, _, $) {
      const j = Array.isArray(d);
      let rt;
      return (et) => {
        let st;
        if (j) {
          st = Array(d.length);
          for (let Et = 0; Et < d.length; Et++) st[Et] = d[Et]();
        } else st = d();
        const pt = untrack(() => _(st, rt, et));
        return rt = st, pt;
      };
    }
    function onMount(d) {
      createEffect(() => untrack(d));
    }
    function onCleanup(d) {
      return Owner === null || (Owner.cleanups === null ? Owner.cleanups = [
        d
      ] : Owner.cleanups.push(d)), d;
    }
    function getListener() {
      return Listener;
    }
    function getOwner() {
      return Owner;
    }
    function createContext(d, _) {
      const $ = Symbol("context");
      return {
        id: $,
        Provider: createProvider$2($),
        defaultValue: d
      };
    }
    function useContext(d) {
      let _;
      return (_ = lookup(Owner, d.id)) !== void 0 ? _ : d.defaultValue;
    }
    function children(d) {
      const _ = createMemo(d), $ = createMemo(() => resolveChildren(_()));
      return $.toArray = () => {
        const j = $();
        return Array.isArray(j) ? j : j != null ? [
          j
        ] : [];
      }, $;
    }
    let SuspenseContext;
    function readSignal() {
      const d = Transition$1;
      if (this.sources && (this.state || d)) if (this.state === STALE || d) updateComputation(this);
      else {
        const _ = Updates;
        Updates = null, runUpdates(() => lookUpstream(this), false), Updates = _;
      }
      if (Listener) {
        const _ = this.observers ? this.observers.length : 0;
        Listener.sources ? (Listener.sources.push(this), Listener.sourceSlots.push(_)) : (Listener.sources = [
          this
        ], Listener.sourceSlots = [
          _
        ]), this.observers ? (this.observers.push(Listener), this.observerSlots.push(Listener.sources.length - 1)) : (this.observers = [
          Listener
        ], this.observerSlots = [
          Listener.sources.length - 1
        ]);
      }
      return this.value;
    }
    function writeSignal(d, _, $) {
      let j = d.value;
      return (!d.comparator || !d.comparator(j, _)) && (d.value = _, d.observers && d.observers.length && runUpdates(() => {
        for (let rt = 0; rt < d.observers.length; rt += 1) {
          const et = d.observers[rt], st = Transition$1 && Transition$1.running;
          st && Transition$1.disposed.has(et), (st && !et.tState || !st && !et.state) && (et.pure ? Updates.push(et) : Effects.push(et), et.observers && markDownstream(et)), st || (et.state = STALE);
        }
        if (Updates.length > 1e6) throw Updates = [], new Error();
      }, false)), _;
    }
    function updateComputation(d) {
      if (!d.fn) return;
      cleanNode(d);
      const _ = Owner, $ = Listener, j = ExecCount;
      Listener = Owner = d, runComputation(d, d.value, j), Listener = $, Owner = _;
    }
    function runComputation(d, _, $) {
      let j;
      try {
        j = d.fn(_);
      } catch (rt) {
        d.pure && (d.state = STALE, d.owned && d.owned.forEach(cleanNode), d.owned = null), handleError(rt);
      }
      (!d.updatedAt || d.updatedAt <= $) && (d.updatedAt != null && "observers" in d ? writeSignal(d, j) : d.value = j, d.updatedAt = $);
    }
    function createComputation(d, _, $, j = STALE, rt) {
      const et = {
        fn: d,
        state: j,
        updatedAt: null,
        owned: null,
        sources: null,
        sourceSlots: null,
        cleanups: null,
        value: _,
        owner: Owner,
        context: null,
        pure: $
      };
      return Owner === null || Owner !== UNOWNED && (Owner.owned ? Owner.owned.push(et) : Owner.owned = [
        et
      ]), et;
    }
    function runTop(d) {
      const _ = Transition$1;
      if (d.state === 0 || _) return;
      if (d.state === PENDING || _) return lookUpstream(d);
      if (d.suspense && untrack(d.suspense.inFallback)) return d.suspense.effects.push(d);
      const $ = [
        d
      ];
      for (; (d = d.owner) && (!d.updatedAt || d.updatedAt < ExecCount); ) (d.state || _) && $.push(d);
      for (let j = $.length - 1; j >= 0; j--) if (d = $[j], d.state === STALE || _) updateComputation(d);
      else if (d.state === PENDING || _) {
        const rt = Updates;
        Updates = null, runUpdates(() => lookUpstream(d, $[0]), false), Updates = rt;
      }
    }
    function runUpdates(d, _) {
      if (Updates) return d();
      let $ = false;
      _ || (Updates = []), Effects ? $ = true : Effects = [], ExecCount++;
      try {
        const j = d();
        return completeUpdates($), j;
      } catch (j) {
        $ || (Effects = null), Updates = null, handleError(j);
      }
    }
    function completeUpdates(d) {
      if (Updates && (runQueue(Updates), Updates = null), d) return;
      const _ = Effects;
      Effects = null, _.length && runUpdates(() => runEffects(_), false);
    }
    function runQueue(d) {
      for (let _ = 0; _ < d.length; _++) runTop(d[_]);
    }
    function runUserEffects(d) {
      let _, $ = 0;
      for (_ = 0; _ < d.length; _++) {
        const j = d[_];
        j.user ? d[$++] = j : runTop(j);
      }
      for (sharedConfig.context && setHydrateContext(), _ = 0; _ < $; _++) runTop(d[_]);
    }
    function lookUpstream(d, _) {
      const $ = Transition$1;
      d.state = 0;
      for (let j = 0; j < d.sources.length; j += 1) {
        const rt = d.sources[j];
        rt.sources && (rt.state === STALE || $ ? rt !== _ && runTop(rt) : (rt.state === PENDING || $) && lookUpstream(rt, _));
      }
    }
    function markDownstream(d) {
      const _ = Transition$1;
      for (let $ = 0; $ < d.observers.length; $ += 1) {
        const j = d.observers[$];
        (!j.state || _) && (j.state = PENDING, j.pure ? Updates.push(j) : Effects.push(j), j.observers && markDownstream(j));
      }
    }
    function cleanNode(d) {
      let _;
      if (d.sources) for (; d.sources.length; ) {
        const $ = d.sources.pop(), j = d.sourceSlots.pop(), rt = $.observers;
        if (rt && rt.length) {
          const et = rt.pop(), st = $.observerSlots.pop();
          j < rt.length && (et.sourceSlots[st] = j, rt[j] = et, $.observerSlots[j] = st);
        }
      }
      if (d.owned) {
        for (_ = 0; _ < d.owned.length; _++) cleanNode(d.owned[_]);
        d.owned = null;
      }
      if (d.cleanups) {
        for (_ = 0; _ < d.cleanups.length; _++) d.cleanups[_]();
        d.cleanups = null;
      }
      d.state = 0, d.context = null;
    }
    function castError(d) {
      return d instanceof Error || typeof d == "string" ? d : new Error("Unknown error");
    }
    function handleError(d) {
      throw d = castError(d), d;
    }
    function lookup(d, _) {
      return d ? d.context && d.context[_] !== void 0 ? d.context[_] : lookup(d.owner, _) : void 0;
    }
    function resolveChildren(d) {
      if (typeof d == "function" && !d.length) return resolveChildren(d());
      if (Array.isArray(d)) {
        const _ = [];
        for (let $ = 0; $ < d.length; $++) {
          const j = resolveChildren(d[$]);
          Array.isArray(j) ? _.push.apply(_, j) : _.push(j);
        }
        return _;
      }
      return d;
    }
    function createProvider$2(d, _) {
      return function(j) {
        let rt;
        return createRenderEffect(() => rt = untrack(() => (Owner.context = {
          [d]: j.value
        }, children(() => j.children))), void 0), rt;
      };
    }
    const FALLBACK = Symbol("fallback");
    function dispose(d) {
      for (let _ = 0; _ < d.length; _++) d[_]();
    }
    function mapArray(d, _, $ = {}) {
      let j = [], rt = [], et = [], st = 0, pt = _.length > 1 ? [] : null;
      return onCleanup(() => dispose(et)), () => {
        let Et = d() || [], Bt, St;
        return Et[$TRACK], untrack(() => {
          let kt = Et.length, Tt, Pt, It, jt, Dt, Ot, Ft, Lt, Zt;
          if (kt === 0) st !== 0 && (dispose(et), et = [], j = [], rt = [], st = 0, pt && (pt = [])), $.fallback && (j = [
            FALLBACK
          ], rt[0] = createRoot((Kt) => (et[0] = Kt, $.fallback())), st = 1);
          else if (st === 0) {
            for (rt = new Array(kt), St = 0; St < kt; St++) j[St] = Et[St], rt[St] = createRoot($t);
            st = kt;
          } else {
            for (It = new Array(kt), jt = new Array(kt), pt && (Dt = new Array(kt)), Ot = 0, Ft = Math.min(st, kt); Ot < Ft && j[Ot] === Et[Ot]; Ot++) ;
            for (Ft = st - 1, Lt = kt - 1; Ft >= Ot && Lt >= Ot && j[Ft] === Et[Lt]; Ft--, Lt--) It[Lt] = rt[Ft], jt[Lt] = et[Ft], pt && (Dt[Lt] = pt[Ft]);
            for (Tt = /* @__PURE__ */ new Map(), Pt = new Array(Lt + 1), St = Lt; St >= Ot; St--) Zt = Et[St], Bt = Tt.get(Zt), Pt[St] = Bt === void 0 ? -1 : Bt, Tt.set(Zt, St);
            for (Bt = Ot; Bt <= Ft; Bt++) Zt = j[Bt], St = Tt.get(Zt), St !== void 0 && St !== -1 ? (It[St] = rt[Bt], jt[St] = et[Bt], pt && (Dt[St] = pt[Bt]), St = Pt[St], Tt.set(Zt, St)) : et[Bt]();
            for (St = Ot; St < kt; St++) St in It ? (rt[St] = It[St], et[St] = jt[St], pt && (pt[St] = Dt[St], pt[St](St))) : rt[St] = createRoot($t);
            rt = rt.slice(0, st = kt), j = Et.slice(0);
          }
          return rt;
        });
        function $t(kt) {
          if (et[St] = kt, pt) {
            const [Tt, Pt] = createSignal(St);
            return pt[St] = Pt, _(Et[St], Tt);
          }
          return _(Et[St]);
        }
      };
    }
    function createComponent(d, _) {
      return untrack(() => d(_ || {}));
    }
    function trueFn() {
      return true;
    }
    const propTraps = {
      get(d, _, $) {
        return _ === $PROXY ? $ : d.get(_);
      },
      has(d, _) {
        return _ === $PROXY ? true : d.has(_);
      },
      set: trueFn,
      deleteProperty: trueFn,
      getOwnPropertyDescriptor(d, _) {
        return {
          configurable: true,
          enumerable: true,
          get() {
            return d.get(_);
          },
          set: trueFn,
          deleteProperty: trueFn
        };
      },
      ownKeys(d) {
        return d.keys();
      }
    };
    function resolveSource(d) {
      return (d = typeof d == "function" ? d() : d) ? d : {};
    }
    function mergeProps(...d) {
      let _ = false;
      for (let j = 0; j < d.length; j++) {
        const rt = d[j];
        _ = _ || !!rt && $PROXY in rt, d[j] = typeof rt == "function" ? (_ = true, createMemo(rt)) : rt;
      }
      if (_) return new Proxy({
        get(j) {
          for (let rt = d.length - 1; rt >= 0; rt--) {
            const et = resolveSource(d[rt])[j];
            if (et !== void 0) return et;
          }
        },
        has(j) {
          for (let rt = d.length - 1; rt >= 0; rt--) if (j in resolveSource(d[rt])) return true;
          return false;
        },
        keys() {
          const j = [];
          for (let rt = 0; rt < d.length; rt++) j.push(...Object.keys(resolveSource(d[rt])));
          return [
            ...new Set(j)
          ];
        }
      }, propTraps);
      const $ = {};
      for (let j = d.length - 1; j >= 0; j--) if (d[j]) {
        const rt = Object.getOwnPropertyDescriptors(d[j]);
        for (const et in rt) et in $ || Object.defineProperty($, et, {
          enumerable: true,
          get() {
            for (let st = d.length - 1; st >= 0; st--) {
              const pt = (d[st] || {})[et];
              if (pt !== void 0) return pt;
            }
          }
        });
      }
      return $;
    }
    function splitProps(d, ..._) {
      const $ = new Set(_.flat());
      if ($PROXY in d) {
        const rt = _.map((et) => new Proxy({
          get(st) {
            return et.includes(st) ? d[st] : void 0;
          },
          has(st) {
            return et.includes(st) && st in d;
          },
          keys() {
            return et.filter((st) => st in d);
          }
        }, propTraps));
        return rt.push(new Proxy({
          get(et) {
            return $.has(et) ? void 0 : d[et];
          },
          has(et) {
            return $.has(et) ? false : et in d;
          },
          keys() {
            return Object.keys(d).filter((et) => !$.has(et));
          }
        }, propTraps)), rt;
      }
      const j = Object.getOwnPropertyDescriptors(d);
      return _.push(Object.keys(j).filter((rt) => !$.has(rt))), _.map((rt) => {
        const et = {};
        for (let st = 0; st < rt.length; st++) {
          const pt = rt[st];
          pt in d && Object.defineProperty(et, pt, j[pt] ? j[pt] : {
            get() {
              return d[pt];
            },
            set() {
              return true;
            },
            enumerable: true
          });
        }
        return et;
      });
    }
    function For(d) {
      const _ = "fallback" in d && {
        fallback: () => d.fallback
      };
      return createMemo(mapArray(() => d.each, d.children, _ || void 0));
    }
    function Show(d) {
      let _ = false;
      const $ = d.keyed, j = createMemo(() => d.when, void 0, {
        equals: (rt, et) => _ ? rt === et : !rt == !et
      });
      return createMemo(() => {
        const rt = j();
        if (rt) {
          const et = d.children, st = typeof et == "function" && et.length > 0;
          return _ = $ || st, st ? untrack(() => et(rt)) : et;
        }
        return d.fallback;
      }, void 0, void 0);
    }
    function Switch(d) {
      let _ = false, $ = false;
      const j = (st, pt) => st[0] === pt[0] && (_ ? st[1] === pt[1] : !st[1] == !pt[1]) && st[2] === pt[2], rt = children(() => d.children), et = createMemo(() => {
        let st = rt();
        Array.isArray(st) || (st = [
          st
        ]);
        for (let pt = 0; pt < st.length; pt++) {
          const Et = st[pt].when;
          if (Et) return $ = !!st[pt].keyed, [
            pt,
            Et,
            st[pt]
          ];
        }
        return [
          -1
        ];
      }, void 0, {
        equals: j
      });
      return createMemo(() => {
        const [st, pt, Et] = et();
        if (st < 0) return d.fallback;
        const Bt = Et.children, St = typeof Bt == "function" && Bt.length > 0;
        return _ = $ || St, St ? untrack(() => Bt(pt)) : Bt;
      }, void 0, void 0);
    }
    function Match(d) {
      return d;
    }
    const booleans = [
      "allowfullscreen",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "disabled",
      "formnovalidate",
      "hidden",
      "indeterminate",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "seamless",
      "selected"
    ], Properties = /* @__PURE__ */ new Set([
      "className",
      "value",
      "readOnly",
      "formNoValidate",
      "isMap",
      "noModule",
      "playsInline",
      ...booleans
    ]), ChildProperties = /* @__PURE__ */ new Set([
      "innerHTML",
      "textContent",
      "innerText",
      "children"
    ]), Aliases = Object.assign(/* @__PURE__ */ Object.create(null), {
      className: "class",
      htmlFor: "for"
    }), PropAliases = Object.assign(/* @__PURE__ */ Object.create(null), {
      class: "className",
      formnovalidate: "formNoValidate",
      ismap: "isMap",
      nomodule: "noModule",
      playsinline: "playsInline",
      readonly: "readOnly"
    }), DelegatedEvents = /* @__PURE__ */ new Set([
      "beforeinput",
      "click",
      "dblclick",
      "contextmenu",
      "focusin",
      "focusout",
      "input",
      "keydown",
      "keyup",
      "mousedown",
      "mousemove",
      "mouseout",
      "mouseover",
      "mouseup",
      "pointerdown",
      "pointermove",
      "pointerout",
      "pointerover",
      "pointerup",
      "touchend",
      "touchmove",
      "touchstart"
    ]), SVGElements = /* @__PURE__ */ new Set([
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animate",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "circle",
      "clipPath",
      "color-profile",
      "cursor",
      "defs",
      "desc",
      "ellipse",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "filter",
      "font",
      "font-face",
      "font-face-format",
      "font-face-name",
      "font-face-src",
      "font-face-uri",
      "foreignObject",
      "g",
      "glyph",
      "glyphRef",
      "hkern",
      "image",
      "line",
      "linearGradient",
      "marker",
      "mask",
      "metadata",
      "missing-glyph",
      "mpath",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "radialGradient",
      "rect",
      "set",
      "stop",
      "svg",
      "switch",
      "symbol",
      "text",
      "textPath",
      "tref",
      "tspan",
      "use",
      "view",
      "vkern"
    ]), SVGNamespace = {
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace"
    };
    function reconcileArrays(d, _, $) {
      let j = $.length, rt = _.length, et = j, st = 0, pt = 0, Et = _[rt - 1].nextSibling, Bt = null;
      for (; st < rt || pt < et; ) {
        if (_[st] === $[pt]) {
          st++, pt++;
          continue;
        }
        for (; _[rt - 1] === $[et - 1]; ) rt--, et--;
        if (rt === st) {
          const St = et < j ? pt ? $[pt - 1].nextSibling : $[et - pt] : Et;
          for (; pt < et; ) d.insertBefore($[pt++], St);
        } else if (et === pt) for (; st < rt; ) (!Bt || !Bt.has(_[st])) && _[st].remove(), st++;
        else if (_[st] === $[et - 1] && $[pt] === _[rt - 1]) {
          const St = _[--rt].nextSibling;
          d.insertBefore($[pt++], _[st++].nextSibling), d.insertBefore($[--et], St), _[rt] = $[et];
        } else {
          if (!Bt) {
            Bt = /* @__PURE__ */ new Map();
            let $t = pt;
            for (; $t < et; ) Bt.set($[$t], $t++);
          }
          const St = Bt.get(_[st]);
          if (St != null) if (pt < St && St < et) {
            let $t = st, kt = 1, Tt;
            for (; ++$t < rt && $t < et && !((Tt = Bt.get(_[$t])) == null || Tt !== St + kt); ) kt++;
            if (kt > St - pt) {
              const Pt = _[st];
              for (; pt < St; ) d.insertBefore($[pt++], Pt);
            } else d.replaceChild($[pt++], _[st++]);
          } else st++;
          else _[st++].remove();
        }
      }
    }
    const $$EVENTS = "_$DX_DELEGATE";
    function render(d, _, $, j = {}) {
      let rt;
      return createRoot((et) => {
        rt = et, _ === document ? d() : insert(_, d(), _.firstChild ? null : void 0, $);
      }, j.owner), () => {
        rt(), _.textContent = "";
      };
    }
    function template$1(d, _, $) {
      if (typeof window > "u") return null;
      const j = document.createElement("template");
      j.innerHTML = d;
      let rt = j.content.firstChild;
      return $ && (rt = rt.firstChild), rt;
    }
    function delegateEvents(d, _ = window.document) {
      const $ = _[$$EVENTS] || (_[$$EVENTS] = /* @__PURE__ */ new Set());
      for (let j = 0, rt = d.length; j < rt; j++) {
        const et = d[j];
        $.has(et) || ($.add(et), _.addEventListener(et, eventHandler));
      }
    }
    function setAttribute(d, _, $) {
      $ == null ? d.removeAttribute(_) : d.setAttribute(_, $);
    }
    function setAttributeNS(d, _, $, j) {
      j == null ? d.removeAttributeNS(_, $) : d.setAttributeNS(_, $, j);
    }
    function className(d, _) {
      _ == null ? d.removeAttribute("class") : d.className = _;
    }
    function addEventListener(d, _, $, j) {
      if (j) Array.isArray($) ? (d[`$$${_}`] = $[0], d[`$$${_}Data`] = $[1]) : d[`$$${_}`] = $;
      else if (Array.isArray($)) {
        const rt = $[0];
        d.addEventListener(_, $[0] = (et) => rt.call(d, $[1], et));
      } else d.addEventListener(_, $);
    }
    function classList(d, _, $ = {}) {
      const j = Object.keys(_ || {}), rt = Object.keys($);
      let et, st;
      for (et = 0, st = rt.length; et < st; et++) {
        const pt = rt[et];
        !pt || pt === "undefined" || _[pt] || (toggleClassKey(d, pt, false), delete $[pt]);
      }
      for (et = 0, st = j.length; et < st; et++) {
        const pt = j[et], Et = !!_[pt];
        !pt || pt === "undefined" || $[pt] === Et || !Et || (toggleClassKey(d, pt, true), $[pt] = Et);
      }
      return $;
    }
    function style(d, _, $) {
      if (!_) return $ ? setAttribute(d, "style") : _;
      const j = d.style;
      if (typeof _ == "string") return j.cssText = _;
      typeof $ == "string" && (j.cssText = $ = void 0), $ || ($ = {}), _ || (_ = {});
      let rt, et;
      for (et in $) _[et] == null && j.removeProperty(et), delete $[et];
      for (et in _) rt = _[et], rt !== $[et] && (j.setProperty(et, rt), $[et] = rt);
      return $;
    }
    function spread$1(d, _ = {}, $, j) {
      const rt = {};
      return createRenderEffect(() => rt.children = insertExpression(d, _.children, rt.children)), createRenderEffect(() => _.ref && _.ref(d)), createRenderEffect(() => assign(d, _, $, true, rt, true)), rt;
    }
    function use(d, _, $) {
      return untrack(() => d(_, $));
    }
    function insert(d, _, $, j) {
      if ($ !== void 0 && !j && (j = []), typeof _ != "function") return insertExpression(d, _, j, $);
      createRenderEffect((rt) => insertExpression(d, _(), rt, $), j);
    }
    function assign(d, _, $, j, rt = {}, et = false) {
      _ || (_ = {});
      for (const st in rt) if (!(st in _)) {
        if (st === "children") continue;
        rt[st] = assignProp(d, st, null, rt[st], $, et);
      }
      for (const st in _) {
        if (st === "children") continue;
        const pt = _[st];
        rt[st] = assignProp(d, st, pt, rt[st], $, et);
      }
    }
    function getNextElement(d) {
      let _, $;
      return !sharedConfig.context || !(_ = sharedConfig.registry.get($ = getHydrationKey())) ? d.cloneNode(true) : (sharedConfig.completed && sharedConfig.completed.add(_), sharedConfig.registry.delete($), _);
    }
    function toPropertyName(d) {
      return d.toLowerCase().replace(/-([a-z])/g, (_, $) => $.toUpperCase());
    }
    function toggleClassKey(d, _, $) {
      const j = _.trim().split(/\s+/);
      for (let rt = 0, et = j.length; rt < et; rt++) d.classList.toggle(j[rt], $);
    }
    function assignProp(d, _, $, j, rt, et) {
      let st, pt, Et;
      if (_ === "style") return style(d, $, j);
      if (_ === "classList") return classList(d, $, j);
      if ($ === j) return j;
      if (_ === "ref") et || $(d);
      else if (_.slice(0, 3) === "on:") {
        const Bt = _.slice(3);
        j && d.removeEventListener(Bt, j), $ && d.addEventListener(Bt, $);
      } else if (_.slice(0, 10) === "oncapture:") {
        const Bt = _.slice(10);
        j && d.removeEventListener(Bt, j, true), $ && d.addEventListener(Bt, $, true);
      } else if (_.slice(0, 2) === "on") {
        const Bt = _.slice(2).toLowerCase(), St = DelegatedEvents.has(Bt);
        if (!St && j) {
          const $t = Array.isArray(j) ? j[0] : j;
          d.removeEventListener(Bt, $t);
        }
        (St || $) && (addEventListener(d, Bt, $, St), St && delegateEvents([
          Bt
        ]));
      } else if ((Et = ChildProperties.has(_)) || !rt && (PropAliases[_] || (pt = Properties.has(_))) || (st = d.nodeName.includes("-"))) _ === "class" || _ === "className" ? className(d, $) : st && !pt && !Et ? d[toPropertyName(_)] = $ : d[PropAliases[_] || _] = $;
      else {
        const Bt = rt && _.indexOf(":") > -1 && SVGNamespace[_.split(":")[0]];
        Bt ? setAttributeNS(d, Bt, _, $) : setAttribute(d, Aliases[_] || _, $);
      }
      return $;
    }
    function eventHandler(d) {
      const _ = `$$${d.type}`;
      let $ = d.composedPath && d.composedPath()[0] || d.target;
      for (d.target !== $ && Object.defineProperty(d, "target", {
        configurable: true,
        value: $
      }), Object.defineProperty(d, "currentTarget", {
        configurable: true,
        get() {
          return $ || document;
        }
      }), sharedConfig.registry && !sharedConfig.done && (sharedConfig.done = true, document.querySelectorAll("[id^=pl-]").forEach((j) => {
        for (; j && j.nodeType !== 8 && j.nodeValue !== "pl-" + d; ) {
          let rt = j.nextSibling;
          j.remove(), j = rt;
        }
        j && j.remove();
      })); $; ) {
        const j = $[_];
        if (j && !$.disabled) {
          const rt = $[`${_}Data`];
          if (rt !== void 0 ? j.call($, rt, d) : j.call($, d), d.cancelBubble) return;
        }
        $ = $._$host || $.parentNode || $.host;
      }
    }
    function insertExpression(d, _, $, j, rt) {
      for (sharedConfig.context && !$ && ($ = [
        ...d.childNodes
      ]); typeof $ == "function"; ) $ = $();
      if (_ === $) return $;
      const et = typeof _, st = j !== void 0;
      if (d = st && $[0] && $[0].parentNode || d, et === "string" || et === "number") {
        if (sharedConfig.context) return $;
        if (et === "number" && (_ = _.toString()), st) {
          let pt = $[0];
          pt && pt.nodeType === 3 ? pt.data = _ : pt = document.createTextNode(_), $ = cleanChildren(d, $, j, pt);
        } else $ !== "" && typeof $ == "string" ? $ = d.firstChild.data = _ : $ = d.textContent = _;
      } else if (_ == null || et === "boolean") {
        if (sharedConfig.context) return $;
        $ = cleanChildren(d, $, j);
      } else {
        if (et === "function") return createRenderEffect(() => {
          let pt = _();
          for (; typeof pt == "function"; ) pt = pt();
          $ = insertExpression(d, pt, $, j);
        }), () => $;
        if (Array.isArray(_)) {
          const pt = [], Et = $ && Array.isArray($);
          if (normalizeIncomingArray(pt, _, $, rt)) return createRenderEffect(() => $ = insertExpression(d, pt, $, j, true)), () => $;
          if (sharedConfig.context) {
            if (!pt.length) return $;
            for (let Bt = 0; Bt < pt.length; Bt++) if (pt[Bt].parentNode) return $ = pt;
          }
          if (pt.length === 0) {
            if ($ = cleanChildren(d, $, j), st) return $;
          } else Et ? $.length === 0 ? appendNodes(d, pt, j) : reconcileArrays(d, $, pt) : ($ && cleanChildren(d), appendNodes(d, pt));
          $ = pt;
        } else if (_ instanceof Node) {
          if (sharedConfig.context && _.parentNode) return $ = st ? [
            _
          ] : _;
          if (Array.isArray($)) {
            if (st) return $ = cleanChildren(d, $, j, _);
            cleanChildren(d, $, null, _);
          } else $ == null || $ === "" || !d.firstChild ? d.appendChild(_) : d.replaceChild(_, d.firstChild);
          $ = _;
        }
      }
      return $;
    }
    function normalizeIncomingArray(d, _, $, j) {
      let rt = false;
      for (let et = 0, st = _.length; et < st; et++) {
        let pt = _[et], Et = $ && $[et];
        if (pt instanceof Node) d.push(pt);
        else if (!(pt == null || pt === true || pt === false)) if (Array.isArray(pt)) rt = normalizeIncomingArray(d, pt, Et) || rt;
        else if (typeof pt == "function") if (j) {
          for (; typeof pt == "function"; ) pt = pt();
          rt = normalizeIncomingArray(d, Array.isArray(pt) ? pt : [
            pt
          ], Array.isArray(Et) ? Et : [
            Et
          ]) || rt;
        } else d.push(pt), rt = true;
        else {
          const Bt = String(pt);
          Et && Et.nodeType === 3 && Et.data === Bt ? d.push(Et) : d.push(document.createTextNode(Bt));
        }
      }
      return rt;
    }
    function appendNodes(d, _, $ = null) {
      for (let j = 0, rt = _.length; j < rt; j++) d.insertBefore(_[j], $);
    }
    function cleanChildren(d, _, $, j) {
      if ($ === void 0) return d.textContent = "";
      const rt = j || document.createTextNode("");
      if (_.length) {
        let et = false;
        for (let st = _.length - 1; st >= 0; st--) {
          const pt = _[st];
          if (rt !== pt) {
            const Et = pt.parentNode === d;
            !et && !st ? Et ? d.replaceChild(rt, pt) : d.insertBefore(rt, $) : Et && pt.remove();
          } else et = true;
        }
      } else d.insertBefore(rt, $);
      return [
        rt
      ];
    }
    function getHydrationKey() {
      const d = sharedConfig.context;
      return `${d.id}${d.count++}`;
    }
    const SVG_NAMESPACE = "http://www.w3.org/2000/svg";
    function createElement(d, _ = false) {
      return _ ? document.createElementNS(SVG_NAMESPACE, d) : document.createElement(d);
    }
    function Portal(d) {
      const { useShadow: _ } = d, $ = document.createTextNode(""), j = d.mount || document.body;
      function rt() {
        if (sharedConfig.context) {
          const [et, st] = createSignal(false);
          return queueMicrotask(() => st(true)), () => et() && d.children;
        } else return () => d.children;
      }
      if (j instanceof HTMLHeadElement) {
        const [et, st] = createSignal(false), pt = () => st(true);
        createRoot((Et) => insert(j, () => et() ? Et() : rt()(), null)), onCleanup(() => {
          sharedConfig.context ? queueMicrotask(pt) : pt();
        });
      } else {
        const et = createElement(d.isSVG ? "g" : "div", d.isSVG), st = _ && et.attachShadow ? et.attachShadow({
          mode: "open"
        }) : et;
        Object.defineProperty(et, "_$host", {
          get() {
            return $.parentNode;
          },
          configurable: true
        }), insert(st, rt()), j.appendChild(et), d.ref && d.ref(et), onCleanup(() => j.removeChild(et));
      }
      return $;
    }
    function Dynamic(d) {
      const [_, $] = splitProps(d, [
        "component"
      ]), j = createMemo(() => _.component);
      return createMemo(() => {
        const rt = j();
        switch (typeof rt) {
          case "function":
            return untrack(() => rt($));
          case "string":
            const et = SVGElements.has(rt), st = sharedConfig.context ? getNextElement() : createElement(rt, et);
            return spread$1(st, $, et), st;
        }
      });
    }
    var THEME = ((d) => (d.DARK = "DARK", d.LIGHT = "LIGHT", d))(THEME || {});
    let e = {
      data: ""
    }, t$2 = (d) => typeof window == "object" ? ((d ? d.querySelector("#_goober") : window._goober) || Object.assign((d || document.head).appendChild(document.createElement("style")), {
      innerHTML: " ",
      id: "_goober"
    })).firstChild : d || e, l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g, a = /\/\*[^]*?\*\/|  +/g, n = /\n+/g, o = (d, _) => {
      let $ = "", j = "", rt = "";
      for (let et in d) {
        let st = d[et];
        et[0] == "@" ? et[1] == "i" ? $ = et + " " + st + ";" : j += et[1] == "f" ? o(st, et) : et + "{" + o(st, et[1] == "k" ? "" : _) + "}" : typeof st == "object" ? j += o(st, _ ? _.replace(/([^,])+/g, (pt) => et.replace(/(^:.*)|([^,])+/g, (Et) => /&/.test(Et) ? Et.replace(/&/g, pt) : pt ? pt + " " + Et : Et)) : et) : st != null && (et = /^--/.test(et) ? et : et.replace(/[A-Z]/g, "-$&").toLowerCase(), rt += o.p ? o.p(et, st) : et + ":" + st + ";");
      }
      return $ + (_ && rt ? _ + "{" + rt + "}" : rt) + j;
    }, c = {}, s = (d) => {
      if (typeof d == "object") {
        let _ = "";
        for (let $ in d) _ += $ + s(d[$]);
        return _;
      }
      return d;
    }, i = (d, _, $, j, rt) => {
      let et = s(d), st = c[et] || (c[et] = ((Et) => {
        let Bt = 0, St = 11;
        for (; Bt < Et.length; ) St = 101 * St + Et.charCodeAt(Bt++) >>> 0;
        return "go" + St;
      })(et));
      if (!c[st]) {
        let Et = et !== d ? d : ((Bt) => {
          let St, $t, kt = [
            {}
          ];
          for (; St = l.exec(Bt.replace(a, "")); ) St[4] ? kt.shift() : St[3] ? ($t = St[3].replace(n, " ").trim(), kt.unshift(kt[0][$t] = kt[0][$t] || {})) : kt[0][St[1]] = St[2].replace(n, " ").trim();
          return kt[0];
        })(d);
        c[st] = o(rt ? {
          ["@keyframes " + st]: Et
        } : Et, $ ? "" : "." + st);
      }
      let pt = $ && c.g ? c.g : null;
      return $ && (c.g = c[st]), ((Et, Bt, St, $t) => {
        $t ? Bt.data = Bt.data.replace($t, Et) : Bt.data.indexOf(Et) === -1 && (Bt.data = St ? Et + Bt.data : Bt.data + Et);
      })(c[st], _, j, pt), st;
    }, p = (d, _, $) => d.reduce((j, rt, et) => {
      let st = _[et];
      if (st && st.call) {
        let pt = st($), Et = pt && pt.props && pt.props.className || /^go/.test(pt) && pt;
        st = Et ? "." + Et : pt && typeof pt == "object" ? pt.props ? "" : o(pt, "") : pt === false ? "" : pt;
      }
      return j + rt + (st ?? "");
    }, "");
    function u(d) {
      let _ = this || {}, $ = d.call ? d(_.p) : d;
      return i($.unshift ? $.raw ? p($, [].slice.call(arguments, 1), _.p) : $.reduce((j, rt) => Object.assign(j, rt && rt.call ? rt(_.p) : rt), {}) : $, t$2(_.target), _.g, _.o, _.k);
    }
    u.bind({
      g: 1
    });
    let h$1 = u.bind({
      k: 1
    });
    const ThemeContext = createContext();
    function ThemeProvider(d) {
      return createComponent(ThemeContext.Provider, {
        value: d.theme,
        get children() {
          return d.children;
        }
      });
    }
    function useTheme() {
      return useContext(ThemeContext);
    }
    function makeStyled(d) {
      let _ = this || {};
      return (...$) => {
        const j = (rt) => {
          const et = useContext(ThemeContext), st = mergeProps(rt, {
            theme: et
          }), pt = mergeProps(st, {
            get class() {
              const Tt = st.class, Pt = "class" in st && /^go[0-9]+/.test(Tt);
              let It = u.apply({
                target: _.target,
                o: Pt,
                p: st,
                g: _.g
              }, $);
              return [
                Tt,
                It
              ].filter(Boolean).join(" ");
            }
          }), [Et, Bt] = splitProps(pt, [
            "as",
            "theme"
          ]), St = Bt, $t = Et.as || d;
          let kt;
          return typeof $t == "function" ? kt = $t(St) : _.g == 1 ? (kt = document.createElement($t), spread$1(kt, St)) : kt = Dynamic(mergeProps({
            component: $t
          }, St)), kt;
        };
        return j.class = (rt) => untrack(() => u.apply({
          target: _.target,
          p: rt,
          g: _.g
        }, $)), j;
      };
    }
    const styled = new Proxy(makeStyled, {
      get(d, _) {
        return d(_);
      }
    });
    function createGlobalStyles() {
      const d = makeStyled.call({
        g: 1
      }, "div").apply(null, arguments);
      return function($) {
        return d($), null;
      };
    }
    const globalStylesTag = "tc-root", disableScrollClass = "tc-disable-scroll", usingMouseClass = "tc-using-mouse", GlobalStyles = () => {
      document.body.addEventListener("mousedown", () => document.body.classList.add(usingMouseClass)), document.body.addEventListener("keydown", (_) => {
        _.key === "Tab" && document.body.classList.remove(usingMouseClass);
      });
      const d = createGlobalStyles`
    ${globalStylesTag} * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        
        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;        
        -webkit-tap-highlight-color: transparent;
    }
    
    ${globalStylesTag} img {
      -webkit-user-select: none;
      -webkit-touch-callout: none;
    }   
 
    ${globalStylesTag} *:focus {
        outline: #08f auto 2px;
    }
    
    ${globalStylesTag} li {
        list-style: none;
    }
    
    ${globalStylesTag} button {
        outline: none;
    }
    
    body.${disableScrollClass} {
        position: fixed; 
        overflow-y: scroll;
        right: 0;
        left: 0;
    }
    
    body.${usingMouseClass} ${globalStylesTag} *:focus {
        outline: none;
    }
`;
      return createComponent(d, {});
    };
    function hexToRgb(d) {
      d[0] === "#" && (d = d.slice(1));
      const _ = parseInt(d, 16), $ = _ >> 16 & 255, j = _ >> 8 & 255, rt = _ & 255;
      return [
        $,
        j,
        rt
      ].join(",");
    }
    function rgba(d, _) {
      return d[0] === "#" && (d = hexToRgb(d)), `rgba(${d}, ${_})`;
    }
    function toPx(d) {
      return d.toString() + "px";
    }
    const _InMemoryStorage = class {
      constructor() {
        __publicField(this, "storage", {});
      }
      static getInstance() {
        return _InMemoryStorage.instance || (_InMemoryStorage.instance = new _InMemoryStorage()), _InMemoryStorage.instance;
      }
      get length() {
        return Object.keys(this.storage).length;
      }
      clear() {
        this.storage = {};
      }
      getItem(d) {
        var _;
        return (_ = this.storage[d]) != null ? _ : null;
      }
      key(d) {
        var _;
        const $ = Object.keys(this.storage);
        return d < 0 || d >= $.length ? null : (_ = $[d]) != null ? _ : null;
      }
      removeItem(d) {
        delete this.storage[d];
      }
      setItem(d, _) {
        this.storage[d] = _;
      }
    };
    let InMemoryStorage = _InMemoryStorage;
    __publicField(InMemoryStorage, "instance");
    class TonConnectUIError extends TonConnectError {
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, TonConnectUIError.prototype);
      }
    }
    function logDebug(...d) {
      try {
        console.debug("[TON_CONNECT_UI]", ...d);
      } catch {
      }
    }
    function logError(...d) {
      try {
        console.error("[TON_CONNECT_UI]", ...d);
      } catch {
      }
    }
    function logWarning(...d) {
      try {
        console.warn("[TON_CONNECT_UI]", ...d);
      } catch {
      }
    }
    function openLink(d, _ = "_self") {
      logDebug("openLink", d, _), window.open(d, _, "noopener noreferrer");
    }
    function openLinkBlank(d) {
      openLink(d, "_blank");
    }
    function openDeeplinkWithFallback(d, _) {
      const $ = () => {
        isBrowser("safari") || isOS("android") && isBrowser("firefox") || _();
      }, j = setTimeout(() => $(), 200);
      window.addEventListener("blur", () => clearTimeout(j), {
        once: true
      }), openLink(d, "_self");
    }
    function getSystemTheme() {
      return window.matchMedia && window.matchMedia("(prefers-color-scheme: light)").matches ? THEME.LIGHT : THEME.DARK;
    }
    function subscribeToThemeChange(d) {
      const _ = ($) => d($.matches ? THEME.DARK : THEME.LIGHT);
      return window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", _), () => window.matchMedia("(prefers-color-scheme: dark)").removeEventListener("change", _);
    }
    function disableScroll() {
      document.documentElement.scrollHeight !== document.documentElement.clientHeight && (document.body.style.top = toPx(-document.documentElement.scrollTop), document.body.classList.add(disableScrollClass));
    }
    function enableScroll() {
      document.body.classList.remove(disableScrollClass), document.documentElement.scrollTo({
        top: -parseFloat(getComputedStyle(document.body).top)
      }), document.body.style.top = "auto";
    }
    function fixMobileSafariActiveTransition() {
      document.body.hasAttribute("ontouchstart") || document.body.setAttribute("ontouchstart", "");
    }
    function defineStylesRoot() {
      customElements.define(globalStylesTag, class extends HTMLElement {
      });
    }
    function createMacrotask(d) {
      return __async(this, null, function* () {
        yield new Promise((_) => requestAnimationFrame(_)), d();
      });
    }
    function createMacrotaskAsync(d) {
      return __async(this, null, function* () {
        return yield new Promise((_) => requestAnimationFrame(_)), d();
      });
    }
    function preloadImages(d) {
      document.readyState !== "complete" ? window.addEventListener("load", () => createMacrotask(() => preloadImages(d)), {
        once: true
      }) : d.forEach((_) => {
        const $ = new window.Image();
        $.src = _;
      });
    }
    function getWindow$1() {
      if (typeof window < "u") return window;
    }
    function tryGetLocalStorage() {
      if (isLocalStorageAvailable()) return localStorage;
      if (isNodeJs()) throw new TonConnectUIError("`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector");
      return InMemoryStorage.getInstance();
    }
    function isLocalStorageAvailable() {
      try {
        return typeof localStorage < "u";
      } catch {
        return false;
      }
    }
    function isNodeJs() {
      return typeof process$1 < "u" && process$1.versions != null && process$1.versions.node != null;
    }
    function getUserAgent() {
      var d, _, $;
      const j = new UAParser().getResult(), rt = (d = j.os.name) == null ? void 0 : d.toLowerCase(), et = (_ = j.device.model) == null ? void 0 : _.toLowerCase();
      let st;
      switch (true) {
        case et === "ipad":
          st = "ipad";
          break;
        case rt === "ios":
          st = "ios";
          break;
        case rt === "android":
          st = "android";
          break;
        case rt === "mac os":
          st = "macos";
          break;
        case rt === "linux":
          st = "linux";
          break;
        case (rt == null ? void 0 : rt.includes("windows")):
          st = "windows";
          break;
      }
      const pt = ($ = j.browser.name) == null ? void 0 : $.toLowerCase();
      let Et;
      switch (true) {
        case pt === "chrome":
          Et = "chrome";
          break;
        case pt === "firefox":
          Et = "firefox";
          break;
        case (pt == null ? void 0 : pt.includes("safari")):
          Et = "safari";
          break;
        case (pt == null ? void 0 : pt.includes("opera")):
          Et = "opera";
          break;
      }
      return {
        os: st,
        browser: Et
      };
    }
    function isOS(...d) {
      return d.includes(getUserAgent().os);
    }
    function isBrowser(...d) {
      return d.includes(getUserAgent().browser);
    }
    function toDeeplink(d, _) {
      const $ = new URL(d);
      return _ + $.search;
    }
    class WalletInfoStorage {
      constructor() {
        __publicField(this, "localStorage"), __publicField(this, "storageKey", "ton-connect-ui_wallet-info"), this.localStorage = tryGetLocalStorage();
      }
      setWalletInfo(_) {
        this.localStorage.setItem(this.storageKey, JSON.stringify(_));
      }
      getWalletInfo() {
        const _ = this.localStorage.getItem(this.storageKey);
        return _ ? JSON.parse(_) : null;
      }
      removeWalletInfo() {
        this.localStorage.removeItem(this.storageKey);
      }
    }
    class PreferredWalletStorage {
      constructor() {
        __publicField(this, "localStorage"), __publicField(this, "storageKey", "ton-connect-ui_preferred-wallet"), this.localStorage = tryGetLocalStorage();
      }
      setPreferredWalletAppName(_) {
        this.localStorage.setItem(this.storageKey, _);
      }
      getPreferredWalletAppName() {
        return this.localStorage.getItem(this.storageKey) || void 0;
      }
    }
    class LastSelectedWalletInfoStorage {
      constructor() {
        __publicField(this, "localStorage"), __publicField(this, "storageKey", "ton-connect-ui_last-selected-wallet-info"), this.localStorage = tryGetLocalStorage();
      }
      setLastSelectedWalletInfo(_) {
        this.localStorage.setItem(this.storageKey, JSON.stringify(_));
      }
      getLastSelectedWalletInfo() {
        const _ = this.localStorage.getItem(this.storageKey);
        return _ ? JSON.parse(_) : null;
      }
      removeLastSelectedWalletInfo() {
        this.localStorage.removeItem(this.storageKey);
      }
    }
    const [walletsModalState, setWalletsModalState] = createSignal({
      status: "closed",
      closeReason: null
    }), getWalletsModalIsOpened = createMemo(() => walletsModalState().status === "opened"), [singleWalletModalState, setSingleWalletModalState] = createSignal({
      status: "closed",
      closeReason: null
    }), getSingleWalletModalIsOpened = createMemo(() => singleWalletModalState().status === "opened"), getSingleWalletModalWalletInfo = createMemo(() => {
      const d = singleWalletModalState();
      return d.status === "opened" ? d.walletInfo : null;
    });
    let lastSelectedWalletInfoStorage = typeof window < "u" ? new LastSelectedWalletInfoStorage() : void 0;
    const [lastSelectedWalletInfo, _setLastSelectedWalletInfo] = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null), setLastSelectedWalletInfo = (d) => {
      lastSelectedWalletInfoStorage || (lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage()), d ? lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(d) : lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo(), _setLastSelectedWalletInfo(d);
    }, [action, setAction] = createSignal(null), common$1 = {
      close: "Close",
      openWallet: "Open wallet",
      copyLink: "Copy Link",
      linkCopied: "Link Copied",
      copied: "Copied",
      yourWallet: "Your Wallet",
      retry: "Retry",
      get: "GET",
      mobile: "Mobile",
      browserExtension: "Browser Extension",
      desktop: "Desktop"
    }, button$1 = {
      connectWallet: "Connect Wallet",
      dropdown: {
        copy: "Copy address",
        copied: "Address copied!",
        disconnect: "Disconnect"
      }
    }, notifications$1 = {
      confirm: {
        header: "Open {{ name }} to\xA0confirm the\xA0transaction."
      },
      transactionSent: {
        header: "Transaction sent",
        text: "Your transaction\xA0will be\xA0processed in\xA0a\xA0few seconds."
      },
      transactionCanceled: {
        header: "Transaction canceled",
        text: "There will be no changes to\xA0your account."
      }
    }, walletItem$1 = {
      walletOn: "Wallet in",
      recent: "Recent",
      installed: "Installed",
      popular: "Popular"
    }, walletModal$1 = {
      loading: "Loading wallets",
      wallets: "Wallets",
      mobileUniversalModal: {
        connectYourWallet: "Connect your TON\xA0wallet",
        openWalletOnTelegramOrSelect: "Use Wallet in Telegram or choose other application",
        openWalletOnTelegram: "Connect Wallet in Telegram",
        chooseOtherApplication: "Choose other application",
        openLink: "Open Link",
        scan: "Scan with your mobile\xA0wallet"
      },
      desktopUniversalModal: {
        connectYourWallet: "Connect your TON wallet",
        scan: "Scan with your mobile wallet",
        availableWallets: "Available wallets"
      },
      mobileConnectionModal: {
        showQR: "Show QR Code",
        scanQR: "Scan the\xA0QR code below with your phone\u2019s\xA0or\xA0{{ name }}\u2019s camera",
        continueIn: "Continue in {{ name }}\u2026",
        connectionDeclined: "Connection declined"
      },
      desktopConnectionModal: {
        scanQR: "Scan the\xA0QR code below with your phone\u2019s\xA0or\xA0{{ name }}\u2019s camera",
        continueInExtension: "Continue in\xA0{{ name }} browser extension\u2026",
        dontHaveExtension: "Seems you don't have installed {{ name }}\xA0browser\xA0extension",
        getWallet: "Get {{ name }}",
        continueOnDesktop: "Continue in\xA0{{ name }} on desktop\u2026",
        openWalletOnTelegram: "Connect Wallet in Telegram on desktop",
        connectionDeclined: "Connection declined"
      },
      infoModal: {
        whatIsAWallet: "What is a wallet",
        secureDigitalAssets: "Secure digital assets storage",
        walletProtects: "A wallet protects and manages your digital assets\xA0including TON, tokens and collectables.",
        controlIdentity: "Control your Web3 identity",
        manageIdentity: "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\xA0the\xA0blockchain ecosystem.",
        effortlessCryptoTransactions: "Effortless crypto transactions",
        easilySend: "Easily send, receive, monitor your cryptocurrencies.\xA0Streamline your operations with\xA0decentralized applications.",
        getAWallet: "Get a Wallet"
      }
    }, actionModal$1 = {
      confirmTransaction: {
        header: "Confirm the\xA0transaction in\xA0{{ name }}",
        text: "It will only take a\xA0moment."
      },
      transactionSent: "$notifications.transactionSent",
      transactionCanceled: "$notifications.transactionCanceled"
    }, en$1 = {
      common: common$1,
      button: button$1,
      notifications: notifications$1,
      walletItem: walletItem$1,
      walletModal: walletModal$1,
      actionModal: actionModal$1
    }, common = {
      close: "\u0417\u0430\u043A\u0440\u044B\u0442\u044C",
      openWallet: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
      copyLink: "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C",
      linkCopied: "\u0421\u0441\u044B\u043B\u043A\u0430 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0430",
      copied: "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u043E",
      yourWallet: "\u0412\u0430\u0448 \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
      retry: "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C",
      get: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C",
      mobile: "\u041C\u043E\u0431\u0438\u043B\u044C\u043D\u044B\u0439",
      browserExtension: "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435",
      desktop: "\u0414\u0435\u0441\u043A\u0442\u043E\u043F"
    }, button = {
      connectWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
      dropdown: {
        copy: "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0430\u0434\u0440\u0435\u0441",
        copied: "\u0410\u0434\u0440\u0435\u0441 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D!",
        disconnect: "\u041E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A"
      }
    }, notifications = {
      confirm: {
        header: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 {{ name }}, \u0447\u0442\u043E\u0431\u044B\xA0\u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044E."
      },
      transactionSent: {
        header: "\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0430",
        text: "\u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F\xA0\u0431\u0443\u0434\u0435\u0442 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u0430 \u0447\u0435\u0440\u0435\u0437\xA0\u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0441\u0435\u043A\u0443\u043D\u0434."
      },
      transactionCanceled: {
        header: "\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043E\u0442\u043C\u0435\u043D\u0435\u043D\u0430",
        text: "\u0421\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043E \u0441\u0447\u0451\u0442\u0430 \u043D\u0435\xA0\u0438\u0437\u043C\u0435\u043D\u0438\u0442\u0441\u044F."
      }
    }, walletItem = {
      walletOn: "Wallet \u0432",
      recent: "\u041D\u0435\u0434\u0430\u0432\u043D\u0438\u0439",
      installed: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D",
      popular: "\u041F\u043E\u043F\u0443\u043B\u044F\u0440\u0435\u043D"
    }, walletModal = {
      loading: "\u041A\u043E\u0448\u0435\u043B\u044C\u043A\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044E\u0442\u0441\u044F",
      wallets: "\u041A\u043E\u0448\u0435\u043B\u044C\u043A\u0438",
      mobileUniversalModal: {
        connectYourWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 TON\xA0\u043A\u043E\u0448\u0435\u043B\u0451\u043A",
        openWalletOnTelegramOrSelect: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 Wallet \u0432\xA0Telegram \u0438\u043B\u0438\xA0\u0432\u044B\u0431\u0435\u0440\u0435\u0442\u0435 \u0434\u0440\u0443\u0433\u043E\u0435 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0435",
        openWalletOnTelegram: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C Wallet \u0432 Telegram",
        chooseOtherApplication: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u043E\u0435 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0435",
        openLink: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C",
        scan: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\u0430\u0448\u0435\u0433\u043E\xA0\u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430"
      },
      desktopUniversalModal: {
        connectYourWallet: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0435 TON \u043A\u043E\u0448\u0435\u043B\u0451\u043A",
        scan: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\u0430\u0448\u0435\u0433\u043E\xA0\u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
        availableWallets: "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0438"
      },
      mobileConnectionModal: {
        showQR: "\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C QR-\u043A\u043E\u0434",
        scanQR: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043D\u0438\u0436\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\xA0\u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0438 {{ name }}, \u0438\u043B\u0438\xA0\u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
        continueIn: "\u041F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u0435 \u0432 {{ name }}\u2026",
        connectionDeclined: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u043E"
      },
      desktopConnectionModal: {
        scanQR: "\u041E\u0442\u0441\u043A\u0430\u043D\u0438\u0440\u0443\u0439\u0442\u0435 QR-\u043A\u043E\u0434 \u043D\u0438\u0436\u0435 \u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0432\xA0\u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0438 {{ name }}, \u0438\u043B\u0438\xA0\u043A\u0430\u043C\u0435\u0440\u043E\u0439 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430",
        continueInExtension: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043D\u043E\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435 {{ name }}",
        dontHaveExtension: "\u041F\u043E\u0445\u043E\u0436\u0435, \u0443 \u0432\u0430\u0441 \u043D\u0435\xA0\u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043D\u043E\u0435\xA0\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435\xA0{{ name }}",
        getWallet: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C {{ name }}",
        continueOnDesktop: "\u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 {{ name }} \u043D\u0430\xA0\u043A\u043E\u043C\u043F\u044C\u044E\u0442\u0435\u0440\u0435\u2026",
        openWalletOnTelegram: "\u041E\u0442\u043A\u0440\u044B\u0442\u044C Wallet \u0432\xA0Telegram",
        connectionDeclined: "\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u043E"
      },
      infoModal: {
        whatIsAWallet: "\u0427\u0442\u043E \u0442\u0430\u043A\u043E\u0435 \u043A\u043E\u0448\u0435\u043B\u0451\u043A?",
        secureDigitalAssets: "\u041D\u0430\u0434\u0435\u0436\u043D\u043E\u0435 \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 \u0446\u0438\u0444\u0440\u043E\u0432\u044B\u0445 \u0430\u043A\u0442\u0438\u0432\u043E\u0432",
        walletProtects: "\u041A\u043E\u0448\u0435\u043B\u0451\u043A \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0432\u0430\u0448\u0438 \u0446\u0438\u0444\u0440\u043E\u0432\u044B\u0435 \u0430\u043A\u0442\u0438\u0432\u044B, \u0432\u043A\u043B\u044E\u0447\u0430\u044F TON, \u0442\u043E\u043A\u0435\u043D\u044B \u0438\xA0\u043F\u0440\u0435\u0434\u043C\u0435\u0442\u044B \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F, \u0438\xA0\u0443\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u0442 \u0438\u043C\u0438.",
        controlIdentity: "\u041A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u0441\u0432\u043E\u0435\u0439 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 Web3",
        manageIdentity: "\u0423\u043F\u0440\u0430\u0432\u043B\u044F\u0439\u0442\u0435 \u0441\u0432\u043E\u0435\u0439 \u0446\u0438\u0444\u0440\u043E\u0432\u043E\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439 \u0438\xA0\u0441\xA0\u043B\u0435\u0433\u043A\u043E\u0441\u0442\u044C\u044E \u043F\u043E\u043B\u0443\u0447\u0430\u0439\u0442\u0435 \u0434\u043E\u0441\u0442\u0443\u043F \u043A\xA0\u0434\u0435\u0446\u0435\u043D\u0442\u0440\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u043C \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u044F\u043C. \u0421\u043E\u0445\u0440\u0430\u043D\u044F\u0439\u0442\u0435 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u043D\u0430\u0434\xA0\u0441\u0432\u043E\u0438\u043C\u0438 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0438\xA0\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u0439\u0442\u0435 \u0432\xA0\u044D\u043A\u043E\u0441\u0438\u0441\u0442\u0435\u043C\u0435\xA0\u0431\u043B\u043E\u043A\u0447\u0435\u0439\u043D\u0430.",
        effortlessCryptoTransactions: "\u041F\u0440\u043E\u0441\u0442\u044B\u0435 \u043A\u0440\u0438\u043F\u0442\u043E\u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438",
        easilySend: "\u041B\u0435\u0433\u043A\u043E \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0439\u0442\u0435, \u043F\u043E\u043B\u0443\u0447\u0430\u0439\u0442\u0435 \u0438\xA0\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0439\u0442\u0435 \u0441\u0432\u043E\u0438 \u043A\u0440\u0438\u043F\u0442\u043E\u0432\u0430\u043B\u044E\u0442\u044B. \u041E\u043F\u0442\u0438\u043C\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0438 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\xA0\u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0434\u0435\u0446\u0435\u043D\u0442\u0440\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0439.",
        getAWallet: "\u0421\u043A\u0430\u0447\u0430\u0442\u044C \u043A\u043E\u0448\u0435\u043B\u0451\u043A"
      }
    }, actionModal = {
      confirmTransaction: {
        header: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0432\xA0{{ name }}",
        text: "\u042D\u0442\u043E \u0437\u0430\u0439\u043C\u0435\u0442 \u043F\u0430\u0440\u0443 \u0441\u0435\u043A\u0443\u043D\u0434."
      },
      transactionSent: "$notifications.transactionSent",
      transactionCanceled: "$notifications.transactionCanceled"
    }, ru = {
      common,
      button,
      notifications,
      walletItem,
      walletModal,
      actionModal
    }, i18nDictionary = {
      en: parseDictionary(en$1),
      ru: parseDictionary(ru)
    };
    function parseDictionary(d) {
      const _ = "$", $ = (j) => {
        Object.entries(j).forEach(([rt, et]) => {
          if (typeof et == "object" && et) return $(et);
          if (typeof et == "string") {
            if (et[0] === _) {
              const st = et.slice(1).split(".");
              let pt = d;
              st.forEach((Et) => {
                if (Et in pt) pt = pt[Et];
                else throw new Error(`Cannot parse translations: there is no property ${Et} in translation`);
              }), j[rt] = pt;
            }
            et.slice(0, 2) === `\\${_}` && (j[rt] = et.slice(1));
          }
        });
      };
      return $(d), d;
    }
    const ConnectorContext = createContext(), $RAW = Symbol("store-raw"), $NODE = Symbol("store-node"), $NAME = Symbol("store-name");
    function wrap$1(d, _) {
      let $ = d[$PROXY];
      if (!$ && (Object.defineProperty(d, $PROXY, {
        value: $ = new Proxy(d, proxyTraps$1)
      }), !Array.isArray(d))) {
        const j = Object.keys(d), rt = Object.getOwnPropertyDescriptors(d);
        for (let et = 0, st = j.length; et < st; et++) {
          const pt = j[et];
          rt[pt].get && Object.defineProperty(d, pt, {
            enumerable: rt[pt].enumerable,
            get: rt[pt].get.bind($)
          });
        }
      }
      return $;
    }
    function isWrappable(d) {
      let _;
      return d != null && typeof d == "object" && (d[$PROXY] || !(_ = Object.getPrototypeOf(d)) || _ === Object.prototype || Array.isArray(d));
    }
    function unwrap(d, _ = /* @__PURE__ */ new Set()) {
      let $, j, rt, et;
      if ($ = d != null && d[$RAW]) return $;
      if (!isWrappable(d) || _.has(d)) return d;
      if (Array.isArray(d)) {
        Object.isFrozen(d) ? d = d.slice(0) : _.add(d);
        for (let st = 0, pt = d.length; st < pt; st++) rt = d[st], (j = unwrap(rt, _)) !== rt && (d[st] = j);
      } else {
        Object.isFrozen(d) ? d = Object.assign({}, d) : _.add(d);
        const st = Object.keys(d), pt = Object.getOwnPropertyDescriptors(d);
        for (let Et = 0, Bt = st.length; Et < Bt; Et++) et = st[Et], !pt[et].get && (rt = d[et], (j = unwrap(rt, _)) !== rt && (d[et] = j));
      }
      return d;
    }
    function getDataNodes(d) {
      let _ = d[$NODE];
      return _ || Object.defineProperty(d, $NODE, {
        value: _ = {}
      }), _;
    }
    function getDataNode(d, _, $) {
      return d[_] || (d[_] = createDataNode($));
    }
    function proxyDescriptor$1(d, _) {
      const $ = Reflect.getOwnPropertyDescriptor(d, _);
      return !$ || $.get || !$.configurable || _ === $PROXY || _ === $NODE || _ === $NAME || (delete $.value, delete $.writable, $.get = () => d[$PROXY][_]), $;
    }
    function trackSelf(d) {
      if (getListener()) {
        const _ = getDataNodes(d);
        (_._ || (_._ = createDataNode()))();
      }
    }
    function ownKeys(d) {
      return trackSelf(d), Reflect.ownKeys(d);
    }
    function createDataNode(d) {
      const [_, $] = createSignal(d, {
        equals: false,
        internal: true
      });
      return _.$ = $, _;
    }
    const proxyTraps$1 = {
      get(d, _, $) {
        if (_ === $RAW) return d;
        if (_ === $PROXY) return $;
        if (_ === $TRACK) return trackSelf(d), $;
        const j = getDataNodes(d), rt = j.hasOwnProperty(_);
        let et = rt ? j[_]() : d[_];
        if (_ === $NODE || _ === "__proto__") return et;
        if (!rt) {
          const st = Object.getOwnPropertyDescriptor(d, _);
          getListener() && (typeof et != "function" || d.hasOwnProperty(_)) && !(st && st.get) && (et = getDataNode(j, _, et)());
        }
        return isWrappable(et) ? wrap$1(et) : et;
      },
      has(d, _) {
        return _ === $RAW || _ === $PROXY || _ === $TRACK || _ === $NODE || _ === "__proto__" ? true : (this.get(d, _, d), _ in d);
      },
      set() {
        return true;
      },
      deleteProperty() {
        return true;
      },
      ownKeys,
      getOwnPropertyDescriptor: proxyDescriptor$1
    };
    function setProperty(d, _, $, j = false) {
      if (!j && d[_] === $) return;
      const rt = d[_], et = d.length;
      $ === void 0 ? delete d[_] : d[_] = $;
      let st = getDataNodes(d), pt;
      (pt = getDataNode(st, _, rt)) && pt.$(() => $), Array.isArray(d) && d.length !== et && (pt = getDataNode(st, "length", et)) && pt.$(d.length), (pt = st._) && pt.$();
    }
    function mergeStoreNode(d, _) {
      const $ = Object.keys(_);
      for (let j = 0; j < $.length; j += 1) {
        const rt = $[j];
        setProperty(d, rt, _[rt]);
      }
    }
    function updateArray(d, _) {
      if (typeof _ == "function" && (_ = _(d)), _ = unwrap(_), Array.isArray(_)) {
        if (d === _) return;
        let $ = 0, j = _.length;
        for (; $ < j; $++) {
          const rt = _[$];
          d[$] !== rt && setProperty(d, $, rt);
        }
        setProperty(d, "length", j);
      } else mergeStoreNode(d, _);
    }
    function updatePath(d, _, $ = []) {
      let j, rt = d;
      if (_.length > 1) {
        j = _.shift();
        const st = typeof j, pt = Array.isArray(d);
        if (Array.isArray(j)) {
          for (let Et = 0; Et < j.length; Et++) updatePath(d, [
            j[Et]
          ].concat(_), $);
          return;
        } else if (pt && st === "function") {
          for (let Et = 0; Et < d.length; Et++) j(d[Et], Et) && updatePath(d, [
            Et
          ].concat(_), $);
          return;
        } else if (pt && st === "object") {
          const { from: Et = 0, to: Bt = d.length - 1, by: St = 1 } = j;
          for (let $t = Et; $t <= Bt; $t += St) updatePath(d, [
            $t
          ].concat(_), $);
          return;
        } else if (_.length > 1) {
          updatePath(d[j], _, [
            j
          ].concat($));
          return;
        }
        rt = d[j], $ = [
          j
        ].concat($);
      }
      let et = _[0];
      typeof et == "function" && (et = et(rt, $), et === rt) || j === void 0 && et == null || (et = unwrap(et), j === void 0 || isWrappable(rt) && isWrappable(et) && !Array.isArray(et) ? mergeStoreNode(rt, et) : setProperty(d, j, et));
    }
    function createStore(...[d, _]) {
      const $ = unwrap(d || {}), j = Array.isArray($), rt = wrap$1($);
      function et(...st) {
        batch(() => {
          j && st.length === 1 ? updateArray($, st[0]) : updatePath($, st);
        });
      }
      return [
        rt,
        et
      ];
    }
    const defaultLightColorsSet = {
      constant: {
        black: "#000000",
        white: "#FFFFFF"
      },
      connectButton: {
        background: "#0098EA",
        foreground: "#FFFFFF"
      },
      accent: "#0098EA",
      telegramButton: "#0098EA",
      icon: {
        primary: "#0F0F0F",
        secondary: "#7A8999",
        tertiary: "#C1CAD2",
        success: "#29CC6A",
        error: "#F5A73B"
      },
      background: {
        primary: "#FFFFFF",
        secondary: "#F1F3F5",
        segment: "#FFFFFF",
        tint: "#F1F3F5",
        qr: "#F1F3F5"
      },
      text: {
        primary: "#0F0F0F",
        secondary: "#6A7785"
      }
    }, defaultDarkColorsSet = {
      constant: {
        black: "#000000",
        white: "#FFFFFF"
      },
      connectButton: {
        background: "#0098EA",
        foreground: "#FFFFFF"
      },
      accent: "#E5E5EA",
      telegramButton: "#31A6F5",
      icon: {
        primary: "#E5E5EA",
        secondary: "#909099",
        tertiary: "#434347",
        success: "#29CC6A",
        error: "#F5A73B"
      },
      background: {
        primary: "#121214",
        secondary: "#18181A",
        segment: "#262629",
        tint: "#222224",
        qr: "#FFFFFF"
      },
      text: {
        primary: "#E5E5EA",
        secondary: "#7D7D85"
      }
    };
    function isObject$2(d) {
      return Object.prototype.toString.call(d) === "[object Object]";
    }
    function isPlainObject$1(d) {
      var _, $;
      return isObject$2(d) === false ? false : (_ = d.constructor, _ === void 0 ? true : ($ = _.prototype, !(isObject$2($) === false || $.hasOwnProperty("isPrototypeOf") === false)));
    }
    function mergeOptions(d, _) {
      return d ? deepmerge$1(_, d, {
        arrayMerge: (j, rt, et) => rt,
        isMergeableObject: isPlainObject$1
      }) : _;
    }
    const [themeState, setThemeState] = createStore({
      theme: THEME.LIGHT,
      colors: defaultLightColorsSet,
      borderRadius: "m"
    }), themeColorsMappingDefault = {
      [THEME.LIGHT]: defaultLightColorsSet,
      [THEME.DARK]: defaultDarkColorsSet
    }, themeCustomColors = {
      [THEME.LIGHT]: void 0,
      [THEME.DARK]: void 0
    };
    function setTheme(d, _) {
      _ && (themeCustomColors[THEME.DARK] = mergeOptions(_[THEME.DARK], themeCustomColors[THEME.DARK]), themeCustomColors[THEME.LIGHT] = mergeOptions(_[THEME.LIGHT], themeCustomColors[THEME.LIGHT])), setThemeState({
        theme: d,
        colors: mergeOptions(themeCustomColors[d], themeColorsMappingDefault[d])
      });
    }
    function setBorderRadius(d) {
      setThemeState({
        borderRadius: d
      });
    }
    function setColors(d) {
      themeCustomColors[THEME.DARK] = mergeOptions(d[THEME.DARK], themeCustomColors[THEME.DARK]), themeCustomColors[THEME.LIGHT] = mergeOptions(d[THEME.LIGHT], themeCustomColors[THEME.LIGHT]), setThemeState((_) => ({
        colors: mergeOptions(themeCustomColors[_.theme], themeColorsMappingDefault[_.theme])
      }));
    }
    const ImagePlaceholder = styled.div`
    background-color: ${(d) => d.theme.colors.background.secondary};
`, Image$1 = (d) => {
      let _;
      const [$, j] = createSignal(null);
      return createEffect(() => {
        const rt = new window.Image();
        return rt.src = d.src, rt.alt = d.alt || "", rt.setAttribute("draggable", "false"), d.class && rt.classList.add(d.class), rt.complete ? j(rt) : (rt.addEventListener("load", () => j(rt)), () => rt.removeEventListener("load", () => j(rt)));
      }), [
        createComponent(Show, {
          get when() {
            return $();
          },
          get children() {
            return $();
          }
        }),
        createComponent(Show, {
          get when() {
            return !$();
          },
          get children() {
            return createComponent(ImagePlaceholder, {
              get class() {
                return d.class;
              },
              ref(rt) {
                const et = _;
                typeof et == "function" ? et(rt) : _ = rt;
              }
            });
          }
        })
      ];
    };
    let initParams = {};
    try {
      let d = location.hash.toString();
      initParams = urlParseHashParams(d);
    } catch (d) {
    }
    let tmaPlatform = "unknown";
    (initParams == null ? void 0 : initParams.tgWebAppPlatform) && (tmaPlatform = (_a$3 = initParams.tgWebAppPlatform) != null ? _a$3 : "unknown");
    if (tmaPlatform === "unknown") {
      const d = getWindow$1();
      tmaPlatform = (_d = (_c = (_b = d == null ? void 0 : d.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : "unknown";
    }
    let webAppVersion = "6.0";
    (initParams == null ? void 0 : initParams.tgWebAppVersion) && (webAppVersion = initParams.tgWebAppVersion);
    if (!webAppVersion) {
      const d = getWindow$1();
      webAppVersion = (_g = (_f = (_e = d == null ? void 0 : d.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : "6.0";
    }
    function isTmaPlatform(...d) {
      return d.includes(tmaPlatform);
    }
    function isInTMA() {
      var d;
      return tmaPlatform !== "unknown" || !!((d = getWindow$1()) != null && d.TelegramWebviewProxy);
    }
    function isInTelegramBrowser() {
      var d;
      const _ = !!((d = getWindow$1()) != null && d.TelegramWebview);
      return (isInTMA() || _) && tmaPlatform === "unknown";
    }
    function sendExpand() {
      postEvent("web_app_expand", {});
    }
    function sendOpenTelegramLink(d, _) {
      const $ = new URL(d);
      if ($.protocol !== "http:" && $.protocol !== "https:") {
        if (_) return _();
        throw new TonConnectUIError(`Url protocol is not supported: ${$}`);
      }
      if ($.hostname !== "t.me") {
        if (_) return _();
        throw new TonConnectUIError(`Url host is not supported: ${$}`);
      }
      const j = $.pathname + $.search;
      isIframe() || versionAtLeast("6.1") ? postEvent("web_app_open_tg_link", {
        path_full: j
      }) : openLinkBlank("https://t.me" + j);
    }
    function isIframe() {
      try {
        const d = getWindow$1();
        return d ? d.parent != null && d !== d.parent : false;
      } catch {
        return false;
      }
    }
    function postEvent(d, _) {
      try {
        const $ = getWindow$1();
        if (!$) throw new TonConnectUIError("Can't post event to parent window: window is not defined");
        if ($.TelegramWebviewProxy !== void 0) logDebug("postEvent", d, _), $.TelegramWebviewProxy.postEvent(d, JSON.stringify(_));
        else if ($.external && "notify" in $.external) logDebug("postEvent", d, _), $.external.notify(JSON.stringify({
          eventType: d,
          eventData: _
        }));
        else if (isIframe()) {
          const j = "*", rt = JSON.stringify({
            eventType: d,
            eventData: _
          });
          logDebug("postEvent", d, _), $.parent.postMessage(rt, j);
        } else throw new TonConnectUIError("Can't post event to TMA");
      } catch ($) {
        logError(`Can't post event to parent window: ${$}`);
      }
    }
    function urlParseHashParams(d) {
      d = d.replace(/^#/, "");
      let _ = {};
      if (!d.length) return _;
      if (d.indexOf("=") < 0 && d.indexOf("?") < 0) return _._path = urlSafeDecode(d), _;
      let $ = d.indexOf("?");
      if ($ >= 0) {
        let rt = d.substr(0, $);
        _._path = urlSafeDecode(rt), d = d.substr($ + 1);
      }
      let j = urlParseQueryString(d);
      for (let rt in j) _[rt] = j[rt];
      return _;
    }
    function urlSafeDecode(d) {
      try {
        return d = d.replace(/\+/g, "%20"), decodeURIComponent(d);
      } catch {
        return d;
      }
    }
    function urlParseQueryString(d) {
      let _ = {};
      if (!d.length) return _;
      let $ = d.split("&"), j, rt, et, st;
      for (j = 0; j < $.length; j++) rt = $[j].split("="), et = urlSafeDecode(rt[0]), st = rt[1] == null ? null : urlSafeDecode(rt[1]), _[et] = st;
      return _;
    }
    function versionCompare(d, _) {
      typeof d != "string" && (d = "");
      let $ = d.replace(/^\s+|\s+$/g, "").split("."), j = _.replace(/^\s+|\s+$/g, "").split("."), rt, et, st, pt;
      for (rt = Math.max($.length, j.length), et = 0; et < rt; et++) if (st = parseInt($[et]) || 0, pt = parseInt(j[et]) || 0, st !== pt) return st > pt ? 1 : -1;
      return 0;
    }
    function versionAtLeast(d) {
      return versionCompare(webAppVersion, d) >= 0;
    }
    const maxWidth = {
      mobile: 440,
      tablet: 1020
    };
    function isDevice(d) {
      const _ = getWindow$1();
      if (!_) return d === "desktop";
      if (isTmaPlatform("weba")) return true;
      const $ = _.innerWidth;
      switch (d) {
        case "desktop":
          return $ > maxWidth.tablet;
        case "tablet":
          return $ > maxWidth.mobile;
        default:
        case "mobile":
          return $ <= maxWidth.mobile || isOS("ios", "android", "ipad");
      }
    }
    function media(d) {
      switch (d) {
        case "mobile":
          return `@media (max-width: ${maxWidth.mobile}px)`;
        case "tablet":
          return `@media (max-width: ${maxWidth.tablet}px) (min-width: ${maxWidth.mobile}px)`;
        default:
        case "desktop":
          return `@media (min-width: ${maxWidth.tablet}px)`;
      }
    }
    const mediaTouch = "@media (hover: none)", mediaNotTouch = "@media not all and (hover: none)", borders$5 = {
      m: "100vh",
      s: "8px",
      none: "0"
    }, scaleValues = {
      s: 0.02,
      m: 0.04
    }, ButtonStyled$1 = styled.button`
    display: ${(d) => d.leftIcon || d.rightIcon ? "flex" : "inline-block"};
    gap: ${(d) => d.leftIcon || d.rightIcon ? "6px" : "unset"};
    align-items: ${(d) => d.leftIcon || d.rightIcon ? "center" : "unset"};
    justify-content: ${(d) => d.leftIcon || d.rightIcon ? "space-between" : "unset"};
    background-color: ${(d) => d.appearance === "flat" ? "transparent" : d.appearance === "secondary" ? d.theme.colors.background.tint : rgba(d.theme.colors.accent, 0.12)};
    color: ${(d) => d.appearance === "secondary" ? d.theme.colors.text.primary : d.theme.colors.accent};

    padding: ${(d) => d.appearance === "flat" ? "0" : "9px 16px"};
    padding-left: ${(d) => d.leftIcon && d.appearance !== "flat" ? "12px" : "16px"};
    padding-right: ${(d) => d.rightIcon && d.appearance !== "flat" ? "12px" : "16px"};
    border: none;
    border-radius: ${(d) => borders$5[d.theme.borderRadius]};
    cursor: ${(d) => d.disabled ? "not-allowed" : "pointer"};

    font-size: 14px;
    font-weight: 510;
    line-height: 18px;

    transition: transform 0.125s ease-in-out;

    ${mediaNotTouch} {
        &:hover {
            transform: ${(d) => d.disabled ? "unset" : `scale(${1 + scaleValues[d.scale]})`};
        }
    }

    &:active {
        transform: ${(d) => d.disabled ? "unset" : `scale(${1 - scaleValues[d.scale]})`};
    }

    ${mediaTouch} {
        &:active {
            transform: ${(d) => d.disabled ? "unset" : `scale(${1 - scaleValues[d.scale] * 2})`};
        }
    }
`;
    function useDataAttributes(d) {
      const _ = untrack(() => Object.keys(d).filter((j) => j.startsWith("data-"))), [$] = splitProps(d, _);
      return $;
    }
    const Button = (d) => {
      const _ = useDataAttributes(d);
      return createComponent(ButtonStyled$1, mergeProps({
        get appearance() {
          return d.appearance || "primary";
        },
        get class() {
          return d.class;
        },
        onClick: ($) => {
          var j;
          return (j = d.onClick) == null ? void 0 : j.call(d, $);
        },
        onMouseEnter: ($) => {
          var j;
          return (j = d.onMouseEnter) == null ? void 0 : j.call(d, $);
        },
        onMouseLeave: ($) => {
          var j;
          return (j = d.onMouseLeave) == null ? void 0 : j.call(d, $);
        },
        ref($) {
          const j = d.ref;
          typeof j == "function" ? j($) : d.ref = $;
        },
        get disabled() {
          return d.disabled;
        },
        get scale() {
          return d.scale || "m";
        },
        get leftIcon() {
          return !!d.leftIcon;
        },
        get rightIcon() {
          return !!d.rightIcon;
        },
        "data-tc-button": "true"
      }, _, {
        get children() {
          return [
            createMemo(() => d.leftIcon),
            createMemo(() => d.children),
            createMemo(() => d.rightIcon)
          ];
        }
      }));
    };
    function nextFrame(d) {
      requestAnimationFrame(() => {
        requestAnimationFrame(d);
      });
    }
    const Transition = (d) => {
      let _, $ = true;
      const [j, rt] = createSignal(), [et, st] = createSignal(), pt = children(() => d.children), { onBeforeEnter: Et, onEnter: Bt, onAfterEnter: St, onBeforeExit: $t, onExit: kt, onAfterExit: Tt } = d, Pt = createMemo(() => {
        const Dt = d.name || "s";
        return {
          enterActiveClass: d.enterActiveClass || Dt + "-enter-active",
          enterClass: d.enterClass || Dt + "-enter",
          enterToClass: d.enterToClass || Dt + "-enter-to",
          exitActiveClass: d.exitActiveClass || Dt + "-exit-active",
          exitClass: d.exitClass || Dt + "-exit",
          exitToClass: d.exitToClass || Dt + "-exit-to"
        };
      });
      function It(Dt, Ot) {
        if (!$ || d.appear) {
          let Ft = function(ar) {
            Dt && (!ar || ar.target === Dt) && (Dt.removeEventListener("transitionend", Ft), Dt.removeEventListener("animationend", Ft), Dt.classList.remove(...Zt), Dt.classList.remove(...Kt), batch(() => {
              j() !== Dt && rt(Dt), et() === Dt && st(void 0);
            }), St && St(Dt), d.mode === "inout" && jt(Dt, Ot));
          };
          const Lt = Pt().enterClass.split(" "), Zt = Pt().enterActiveClass.split(" "), Kt = Pt().enterToClass.split(" ");
          Et && Et(Dt), Dt.classList.add(...Lt), Dt.classList.add(...Zt), nextFrame(() => {
            Dt.classList.remove(...Lt), Dt.classList.add(...Kt), Bt && Bt(Dt, () => Ft()), (!Bt || Bt.length < 2) && (Dt.addEventListener("transitionend", Ft), Dt.addEventListener("animationend", Ft));
          });
        }
        Ot && !d.mode ? st(Dt) : rt(Dt);
      }
      function jt(Dt, Ot) {
        const Ft = Pt().exitClass.split(" "), Lt = Pt().exitActiveClass.split(" "), Zt = Pt().exitToClass.split(" ");
        if (!Ot.parentNode) return Kt();
        $t && $t(Ot), Ot.classList.add(...Ft), Ot.classList.add(...Lt), nextFrame(() => {
          Ot.classList.remove(...Ft), Ot.classList.add(...Zt);
        }), kt && kt(Ot, () => Kt()), (!kt || kt.length < 2) && (Ot.addEventListener("transitionend", Kt), Ot.addEventListener("animationend", Kt));
        function Kt(ar) {
          (!ar || ar.target === Ot) && (Ot.removeEventListener("transitionend", Kt), Ot.removeEventListener("animationend", Kt), Ot.classList.remove(...Lt), Ot.classList.remove(...Zt), j() === Ot && rt(void 0), Tt && Tt(Ot), d.mode === "outin" && It(Dt, Ot));
        }
      }
      return createComputed((Dt) => {
        for (_ = pt(); typeof _ == "function"; ) _ = _();
        return untrack(() => (_ && _ !== Dt && (d.mode !== "outin" ? It(_, Dt) : $ && rt(_)), Dt && Dt !== _ && d.mode !== "inout" && jt(_, Dt), $ = false, _));
      }), [
        j,
        et
      ];
    };
    function getRect(d) {
      const { top: _, bottom: $, left: j, right: rt, width: et, height: st } = d.getBoundingClientRect(), pt = d.parentNode.getBoundingClientRect();
      return {
        top: _ - pt.top,
        bottom: $,
        left: j - pt.left,
        right: rt,
        width: et,
        height: st
      };
    }
    const TransitionGroup = (d) => {
      const _ = children(() => d.children), $ = createMemo(() => {
        const Tt = d.name || "s";
        return {
          enterActiveClass: d.enterActiveClass || Tt + "-enter-active",
          enterClass: d.enterClass || Tt + "-enter",
          enterToClass: d.enterToClass || Tt + "-enter-to",
          exitActiveClass: d.exitActiveClass || Tt + "-exit-active",
          exitClass: d.exitClass || Tt + "-exit",
          exitToClass: d.exitToClass || Tt + "-exit-to",
          moveClass: d.moveClass || Tt + "-move"
        };
      }), { onBeforeEnter: j, onEnter: rt, onAfterEnter: et, onBeforeExit: st, onExit: pt, onAfterExit: Et } = d, [Bt, St] = createSignal();
      let $t = [], kt = true;
      return createComputed(() => {
        const Tt = _(), Pt = [
          ...Tt
        ], It = new Set(Tt), jt = new Set($t), Dt = $().enterClass.split(" "), Ot = $().enterActiveClass.split(" "), Ft = $().enterToClass.split(" "), Lt = $().exitClass.split(" "), Zt = $().exitActiveClass.split(" "), Kt = $().exitToClass.split(" ");
        for (let ar = 0; ar < Tt.length; ar++) {
          const sr = Tt[ar];
          if (!kt && !jt.has(sr)) {
            let er = function(Ut) {
              sr && (!Ut || Ut.target === sr) && (sr.removeEventListener("transitionend", er), sr.removeEventListener("animationend", er), sr.classList.remove(...Ot), sr.classList.remove(...Ft), et && et(sr));
            };
            j && j(sr), sr.classList.add(...Dt), sr.classList.add(...Ot), nextFrame(() => {
              sr.classList.remove(...Dt), sr.classList.add(...Ft), rt && rt(sr, () => er()), (!rt || rt.length < 2) && (sr.addEventListener("transitionend", er), sr.addEventListener("animationend", er));
            });
          }
        }
        for (let ar = 0; ar < $t.length; ar++) {
          const sr = $t[ar];
          if (!It.has(sr) && sr.parentNode) {
            let er = function(Ut) {
              (!Ut || Ut.target === sr) && (sr.removeEventListener("transitionend", er), sr.removeEventListener("animationend", er), sr.classList.remove(...Zt), sr.classList.remove(...Kt), Et && Et(sr), $t = $t.filter((xt) => xt !== sr), St($t));
            };
            Pt.splice(ar, 0, sr), st && st(sr), sr.classList.add(...Lt), sr.classList.add(...Zt), nextFrame(() => {
              sr.classList.remove(...Lt), sr.classList.add(...Kt);
            }), pt && pt(sr, () => er()), (!pt || pt.length < 2) && (sr.addEventListener("transitionend", er), sr.addEventListener("animationend", er));
          }
        }
        $t = Pt, St(Pt);
      }), createEffect((Tt) => {
        const Pt = Bt();
        return Pt.forEach((It) => {
          let jt;
          (jt = Tt.get(It)) ? jt.new && (jt.new = false, jt.newPos = getRect(It)) : Tt.set(It, jt = {
            pos: getRect(It),
            new: !kt
          }), jt.new && It.addEventListener("transitionend", () => {
            jt.new = false, It.parentNode && (jt.newPos = getRect(It));
          }, {
            once: true
          }), jt.newPos && (jt.pos = jt.newPos), jt.newPos = getRect(It);
        }), kt ? (kt = false, Tt) : (Pt.forEach((It) => {
          const jt = Tt.get(It), Dt = jt.pos, Ot = jt.newPos, Ft = Dt.left - Ot.left, Lt = Dt.top - Ot.top;
          if (Ft || Lt) {
            jt.moved = true;
            const Zt = It.style;
            Zt.transform = `translate(${Ft}px,${Lt}px)`, Zt.transitionDuration = "0s";
          }
        }), document.body.offsetHeight, Pt.forEach((It) => {
          const jt = Tt.get(It);
          if (jt.moved) {
            let Dt = function(Lt) {
              Lt && Lt.target !== It || !It.parentNode || (!Lt || /transform$/.test(Lt.propertyName)) && (It.removeEventListener("transitionend", Dt), It.classList.remove(...Ft));
            };
            jt.moved = false;
            const Ot = It.style, Ft = $().moveClass.split(" ");
            It.classList.add(...Ft), Ot.transform = Ot.transitionDuration = "", It.addEventListener("transitionend", Dt);
          }
        }), Tt);
      }, /* @__PURE__ */ new Map()), Bt;
    };
    function clickOutside$1(d, _) {
      const $ = (j) => {
        var rt;
        return !d.contains(j.target) && ((rt = _()) == null ? void 0 : rt());
      };
      document.body.addEventListener("click", $), onCleanup(() => document.body.removeEventListener("click", $));
    }
    function escPressed(d, _) {
      const $ = (j) => {
        var rt, et;
        j.key === "Escape" && ((rt = document.activeElement) == null || rt.blur(), (et = _()) == null || et());
      };
      document.body.addEventListener("keydown", $), onCleanup(() => document.body.removeEventListener("keydown", $));
    }
    function androidBackHandler$1(d, _) {
      const { isEnabled: $, onClose: j } = _();
      if (!$ || !(getUserAgent().os === "android")) return;
      window.history.pushState(ROUTE_STATE, "");
      const et = (st) => {
        st.preventDefault(), j();
      };
      window.addEventListener("popstate", et, {
        once: true
      }), onCleanup(() => {
        window.removeEventListener("popstate", et), createMacrotask(() => {
          var st;
          ((st = window.history.state) == null ? void 0 : st[ROUTE_STATE_KEY]) === true && window.history.back();
        });
      });
    }
    const ROUTE_STATE_KEY = "androidBackHandler", ROUTE_STATE = {
      [ROUTE_STATE_KEY]: true
    }, _tmpl$$u = template$1('<svg><path fill-rule="evenodd" clip-rule="evenodd" d="M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z"></path></svg>', 4, true), rotationDegrees = {
      left: 0,
      top: 90,
      right: 180,
      bottom: 270
    }, ArrowIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary, j = () => d.direction || "left", rt = styled("svg")`
        transform: rotate(${(et) => rotationDegrees[et.svgDirection]}deg);
        transition: transform 0.1s ease-in-out;
    `;
      return createComponent(rt, {
        xmlns: "http://www.w3.org/2000/svg",
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: "none",
        get svgDirection() {
          return j();
        },
        get children() {
          const et = _tmpl$$u.cloneNode(true);
          return createRenderEffect(() => setAttribute(et, "fill", $())), et;
        }
      });
    }, _tmpl$$t = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z"></path></svg>'), CloseIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$t.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, IconButtonStyled = styled.button`
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: ${(d) => d.theme.colors.background.tint};
    border: none;
    cursor: pointer;

    transition: transform 0.125s ease-in-out;

    ${mediaNotTouch} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${mediaTouch} {
        &:active {
            transform: scale(0.92);
        }
    }
`, IconButton = (d) => {
      const _ = useDataAttributes(d), $ = () => d.icon || "close";
      return createComponent(IconButtonStyled, mergeProps({
        get class() {
          return d.class;
        },
        onClick: () => d.onClick(),
        "data-tc-icon-button": "true"
      }, _, {
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return !!d.children;
              },
              get children() {
                return d.children;
              }
            }),
            createComponent(Show, {
              get when() {
                return !d.children;
              },
              get children() {
                return createComponent(Switch, {
                  get children() {
                    return [
                      createComponent(Match, {
                        get when() {
                          return $() === "close";
                        },
                        get children() {
                          return createComponent(CloseIcon, {
                            get fill() {
                              return d.fill;
                            }
                          });
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return $() === "arrow";
                        },
                        get children() {
                          return createComponent(ArrowIcon, {
                            get fill() {
                              return d.fill;
                            }
                          });
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return $() === "question";
                        },
                        get children() {
                          return createComponent(QuestionIcon, {
                            get fill() {
                              return d.fill;
                            }
                          });
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return typeof $() != "string";
                        },
                        get children() {
                          return $();
                        }
                      })
                    ];
                  }
                });
              }
            })
          ];
        }
      }));
    }, borders$4 = {
      m: "24px",
      s: "16px",
      none: "0"
    }, ModalBackgroundStyled = styled.div`
    display: flex;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    padding: 20px 0;
    overflow-y: auto;

    ${media("mobile")} {
        padding-bottom: 0;
    }
`, ModalWrapperClass = u`
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);
    width: fit-content;
    margin: auto;

    ${media("mobile")} {
        width: 100%;
        height: fit-content;
        margin: auto 0 0 0;
    }
`, ModalBodyStyled = styled.div`
    position: relative;
    min-height: 100px;
    width: 416px;
    padding: 44px 56px 24px;

    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);

    background-color: ${(d) => d.theme.colors.background.primary};
    border-radius: ${(d) => borders$4[d.theme.borderRadius]};

    ${media("mobile")} {
        width: 100%;
    }
`, CloseButtonStyled = styled(IconButton)`
    position: absolute;
    right: 16px;
    top: 16px;
`, ModalFooterStyled = styled.div`
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 16px 16px 18px;
    border-radius: 0 0 ${(d) => borders$4[d.theme.borderRadius]}
        ${(d) => borders$4[d.theme.borderRadius]};
`, QuestionButtonStyled = styled(IconButton)`
    background-color: ${(d) => rgba(d.theme.colors.icon.secondary, 0.12)};
`;
    class AnimationTimelineNoop {
      constructor() {
        __publicField(this, "currentTime", 0);
      }
    }
    const _AnimationNoop = class {
      constructor() {
        __publicField(this, "currentTime", 0), __publicField(this, "playbackRate", 1), __publicField(this, "startTime", null), __publicField(this, "timeline", new AnimationTimelineNoop()), __publicField(this, "finished", Promise.resolve(this)), __publicField(this, "effect", null), __publicField(this, "id", ""), __publicField(this, "pending", false), __publicField(this, "playState", "finished"), __publicField(this, "replaceState", "active"), __publicField(this, "ready", Promise.resolve(this)), __publicField(this, "oncancel", null), __publicField(this, "onfinish", null), __publicField(this, "onremove", null);
      }
      static create() {
        return _AnimationNoop._instance || (logWarning("Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API."), _AnimationNoop._instance = new _AnimationNoop()), _AnimationNoop._instance;
      }
      cancel() {
      }
      finish() {
      }
      pause() {
      }
      play() {
      }
      reverse() {
      }
      addEventListener(d, _, $) {
      }
      dispatchEvent(d) {
        return false;
      }
      removeEventListener(d, _, $) {
      }
      updatePlaybackRate(d) {
      }
      commitStyles() {
      }
      persist() {
      }
    };
    let AnimationNoop = _AnimationNoop;
    __publicField(AnimationNoop, "_instance", null);
    function animate(d, _, $) {
      return "animate" in d ? d.animate(_, $) : AnimationNoop.create();
    }
    const _tmpl$$s = template$1("<div></div>"), clickOutside = clickOutside$1, keyPressed = escPressed, androidBackHandler = androidBackHandler$1, Modal = (d) => {
      const _ = useTheme(), $ = useDataAttributes(d);
      return createEffect(() => {
        d.opened ? disableScroll() : enableScroll();
      }), createComponent(Transition, {
        onBeforeEnter: (j) => {
          const rt = isDevice("mobile") ? 200 : 100;
          animate(j, [
            {
              opacity: 0
            },
            {
              opacity: 1
            }
          ], {
            duration: rt
          }), isDevice("mobile") && animate(j.firstElementChild, [
            {
              transform: "translateY(390px)"
            },
            {
              transform: "translateY(0)"
            }
          ], {
            duration: rt
          });
        },
        onExit: (j, rt) => {
          const et = isDevice("mobile") ? 200 : 100, st = animate(j, [
            {
              opacity: 1
            },
            {
              opacity: 0
            }
          ], {
            duration: et
          });
          if (isDevice("mobile")) {
            const pt = animate(j.firstElementChild, [
              {
                transform: "translateY(0)"
              },
              {
                transform: "translateY(390px)"
              }
            ], {
              duration: et
            });
            Promise.all([
              st.finished,
              pt.finished
            ]).then(rt);
          } else st.finished.then(rt);
        },
        get children() {
          return createComponent(Show, {
            get when() {
              return d.opened;
            },
            get children() {
              return createComponent(ModalBackgroundStyled, mergeProps({
                "data-tc-modal": "true"
              }, $, {
                get children() {
                  const j = _tmpl$$s.cloneNode(true);
                  return use(androidBackHandler, j, () => ({
                    isEnabled: d.enableAndroidBackHandler,
                    onClose: () => d.onClose()
                  })), use(keyPressed, j, () => () => d.onClose()), use(clickOutside, j, () => () => d.onClose()), insert(j, createComponent(ModalBodyStyled, {
                    get class() {
                      return d.class;
                    },
                    get children() {
                      return [
                        createComponent(CloseButtonStyled, {
                          icon: "close",
                          onClick: () => d.onClose()
                        }),
                        createMemo(() => d.children)
                      ];
                    }
                  }), null), insert(j, createComponent(Show, {
                    get when() {
                      return d.onClickQuestion;
                    },
                    get children() {
                      return createComponent(ModalFooterStyled, {
                        get children() {
                          return [
                            createComponent(TonConnectBrand, {}),
                            createComponent(QuestionButtonStyled, {
                              get onClick() {
                                return d.onClickQuestion;
                              },
                              icon: "question"
                            })
                          ];
                        }
                      });
                    }
                  }), null), createRenderEffect(() => className(j, cn(ModalWrapperClass, u`
                                border-radius: ${borders$4[_.borderRadius]};
                                background-color: ${_.colors.background.tint};

                                ${media("mobile")} {
                                    border-radius: ${borders$4[_.borderRadius]}
                                        ${borders$4[_.borderRadius]} 0 0;
                                }
                            `))), j;
                }
              }));
            }
          });
        }
      });
    }, wrapperBorderRadius = {
      m: "22px",
      s: "12px",
      none: "0"
    }, sliderBorderRadius = {
      m: "18px",
      s: "8px",
      none: "0"
    }, TabBarStyled = styled.div`
    display: grid;
    grid-template: 1fr / 1fr 1fr;
    width: fit-content;
    justify-items: center;
    gap: 4px;

    position: relative;
    padding: 4px;
    border-radius: ${(d) => wrapperBorderRadius[d.theme.borderRadius]};

    background-color: ${(d) => d.theme.colors.background.secondary};
`, SliderStyled = styled.div`
    position: absolute;
    top: 4px;
    left: 4px;

    height: calc(100% - 8px);
    width: calc(50% - 4px);

    border-radius: ${(d) => sliderBorderRadius[d.theme.borderRadius]};
    background-color: ${(d) => d.theme.colors.background.segment};

    transform: ${(d) => d.right ? "translateX(100%)" : "translateX(0)"};

    transition: transform 0.13s ease-in-out;
`, InputStyled = styled.input`
    display: none;
`, LabelStyled = styled.label`
    padding: 9px 12px;
    z-index: 1;

    cursor: ${(d) => d.isActive ? "default" : "pointer"};

    transition: transform 0.13s ease-in-out;

    &:hover {
        transform: ${(d) => d.isActive ? "none" : "scale(1.025)"};
    }

    > * {
        ${(d) => d.isActive ? "" : `color: ${d.theme.colors.text.secondary};`}
    }
`, TabBar = (d) => {
      const _ = "tabBar" + Math.floor(Math.random() * 1e4);
      return createComponent(TabBarStyled, {
        get class() {
          return d.class;
        },
        "data-tc-tab-bar": "true",
        get children() {
          return [
            createComponent(SliderStyled, {
              get right() {
                return d.selectedTabIndex === 1;
              }
            }),
            createComponent(LabelStyled, {
              get isActive() {
                return d.selectedTabIndex === 0;
              },
              get children() {
                return [
                  createComponent(InputStyled, {
                    type: "radio",
                    name: _,
                    get checked() {
                      return d.selectedTabIndex === 0;
                    },
                    onInput: () => {
                      var $;
                      return ($ = d.onSelectedTabIndexChange) == null ? void 0 : $.call(d, 0);
                    }
                  }),
                  createMemo(() => d.tab1)
                ];
              }
            }),
            createComponent(LabelStyled, {
              get isActive() {
                return d.selectedTabIndex === 1;
              },
              get children() {
                return [
                  createComponent(InputStyled, {
                    type: "radio",
                    get checked() {
                      return d.selectedTabIndex === 1;
                    },
                    name: _,
                    onInput: () => {
                      var $;
                      return ($ = d.onSelectedTabIndexChange) == null ? void 0 : $.call(d, 1);
                    }
                  }),
                  createMemo(() => d.tab2)
                ];
              }
            })
          ];
        }
      });
    }, backgroundBorders = {
      m: "16px",
      s: "12px",
      none: "0"
    }, imageBorders = {
      m: "12px",
      s: "8px",
      none: "0"
    }, qrNormalSize = 256, imgSizeDefault = 60, picSizeDefault = 48, qrPaddingTop = 24, CopyIconButton = styled.div`
    width: 52px;
    height: 52px;
    background: transparent;
    position: absolute;
    right: 0;
    bottom: 0;

    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.125s ease-in-out;
`, QrCodeBackground = styled.button`
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    background-color: ${(d) => d.theme.colors.background.qr};
    border-radius: ${(d) => backgroundBorders[d.theme.borderRadius]};
    padding: ${toPx(qrPaddingTop)} 0;
    height: ${toPx(qrNormalSize + qrPaddingTop * 2)};
    width: 100%;

    overflow: hidden;
    cursor: pointer;
    border: none;

    ${mediaNotTouch} {
        &:hover {
            ${CopyIconButton.class} {
                transform: scale(1.04);
            }
        }
    }

    &:active {
        ${CopyIconButton.class} {
            transform: scale(0.96);
        }
    }

    ${mediaTouch} {
        &:active {
            ${CopyIconButton.class} {
                transform: scale(0.92);
            }
        }
    }
`, QrCodeWrapper$2 = styled.div`
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 auto;

    > div:first-child {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    rect {
        fill: transparent;
    }

    path {
        fill: ${(d) => d.theme.colors.constant.black};
    }
`, ImageBackground = styled.div`
    position: absolute;
    width: ${toPx(imgSizeDefault)};
    height: ${toPx(imgSizeDefault)};
    background: ${(d) => d.theme.colors.background.qr};

    display: flex;
    align-items: center;
    justify-content: center;
`, ImageStyled$3 = styled(Image$1)`
    width: ${(d) => toPx(d.size)};
    height: ${(d) => toPx(d.size)};
    border-radius: ${(d) => imageBorders[d.theme.borderRadius]};
    background-color: ${(d) => d.theme.colors.background.qr};
`, CopiedBoxStyled = styled.div`
    position: absolute;
    bottom: 14px;
    left: 50%;
    transform: translate(-50%, 0);

    display: flex;
    gap: 6px;
    align-items: center;
    border-radius: 18px;
    min-width: 126px;
    padding: 9px 16px 9px 10px;

    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));
    background-color: ${(d) => d.theme.colors.background.segment};
`;
    var qrcode$1 = {
      exports: {}
    };
    (function(d, _) {
      var $ = function() {
        var j = function(Zt, Kt) {
          var ar = 236, sr = 17, er = Zt, Ut = et[Kt], xt = null, tt = 0, nt = null, it = [], at = {}, ct = function(Yt, tr) {
            tt = er * 4 + 17, xt = function(cr) {
              for (var ir = new Array(cr), Jt = 0; Jt < cr; Jt += 1) {
                ir[Jt] = new Array(cr);
                for (var vr = 0; vr < cr; vr += 1) ir[Jt][vr] = null;
              }
              return ir;
            }(tt), Mt(0, 0), Mt(tt - 7, 0), Mt(0, tt - 7), ot(), ut(), Rt(Yt, tr), er >= 7 && Ct(Yt), nt == null && (nt = Xt(er, Ut, it)), Nt(nt, tr);
          }, Mt = function(Yt, tr) {
            for (var cr = -1; cr <= 7; cr += 1) if (!(Yt + cr <= -1 || tt <= Yt + cr)) for (var ir = -1; ir <= 7; ir += 1) tr + ir <= -1 || tt <= tr + ir || (0 <= cr && cr <= 6 && (ir == 0 || ir == 6) || 0 <= ir && ir <= 6 && (cr == 0 || cr == 6) || 2 <= cr && cr <= 4 && 2 <= ir && ir <= 4 ? xt[Yt + cr][tr + ir] = true : xt[Yt + cr][tr + ir] = false);
          }, At = function() {
            for (var Yt = 0, tr = 0, cr = 0; cr < 8; cr += 1) {
              ct(true, cr);
              var ir = pt.getLostPoint(at);
              (cr == 0 || Yt > ir) && (Yt = ir, tr = cr);
            }
            return tr;
          }, ut = function() {
            for (var Yt = 8; Yt < tt - 8; Yt += 1) xt[Yt][6] == null && (xt[Yt][6] = Yt % 2 == 0);
            for (var tr = 8; tr < tt - 8; tr += 1) xt[6][tr] == null && (xt[6][tr] = tr % 2 == 0);
          }, ot = function() {
            for (var Yt = pt.getPatternPosition(er), tr = 0; tr < Yt.length; tr += 1) for (var cr = 0; cr < Yt.length; cr += 1) {
              var ir = Yt[tr], Jt = Yt[cr];
              if (xt[ir][Jt] == null) for (var vr = -2; vr <= 2; vr += 1) for (var Br = -2; Br <= 2; Br += 1) vr == -2 || vr == 2 || Br == -2 || Br == 2 || vr == 0 && Br == 0 ? xt[ir + vr][Jt + Br] = true : xt[ir + vr][Jt + Br] = false;
            }
          }, Ct = function(Yt) {
            for (var tr = pt.getBCHTypeNumber(er), cr = 0; cr < 18; cr += 1) {
              var ir = !Yt && (tr >> cr & 1) == 1;
              xt[Math.floor(cr / 3)][cr % 3 + tt - 8 - 3] = ir;
            }
            for (var cr = 0; cr < 18; cr += 1) {
              var ir = !Yt && (tr >> cr & 1) == 1;
              xt[cr % 3 + tt - 8 - 3][Math.floor(cr / 3)] = ir;
            }
          }, Rt = function(Yt, tr) {
            for (var cr = Ut << 3 | tr, ir = pt.getBCHTypeInfo(cr), Jt = 0; Jt < 15; Jt += 1) {
              var vr = !Yt && (ir >> Jt & 1) == 1;
              Jt < 6 ? xt[Jt][8] = vr : Jt < 8 ? xt[Jt + 1][8] = vr : xt[tt - 15 + Jt][8] = vr;
            }
            for (var Jt = 0; Jt < 15; Jt += 1) {
              var vr = !Yt && (ir >> Jt & 1) == 1;
              Jt < 8 ? xt[8][tt - Jt - 1] = vr : Jt < 9 ? xt[8][15 - Jt - 1 + 1] = vr : xt[8][15 - Jt - 1] = vr;
            }
            xt[tt - 8][8] = !Yt;
          }, Nt = function(Yt, tr) {
            for (var cr = -1, ir = tt - 1, Jt = 7, vr = 0, Br = pt.getMaskFunction(tr), _r = tt - 1; _r > 0; _r -= 2) for (_r == 6 && (_r -= 1); ; ) {
              for (var $r = 0; $r < 2; $r += 1) if (xt[ir][_r - $r] == null) {
                var Ur = false;
                vr < Yt.length && (Ur = (Yt[vr] >>> Jt & 1) == 1);
                var Sr = Br(ir, _r - $r);
                Sr && (Ur = !Ur), xt[ir][_r - $r] = Ur, Jt -= 1, Jt == -1 && (vr += 1, Jt = 7);
              }
              if (ir += cr, ir < 0 || tt <= ir) {
                ir -= cr, cr = -cr;
                break;
              }
            }
          }, Wt = function(Yt, tr) {
            for (var cr = 0, ir = 0, Jt = 0, vr = new Array(tr.length), Br = new Array(tr.length), _r = 0; _r < tr.length; _r += 1) {
              var $r = tr[_r].dataCount, Ur = tr[_r].totalCount - $r;
              ir = Math.max(ir, $r), Jt = Math.max(Jt, Ur), vr[_r] = new Array($r);
              for (var Sr = 0; Sr < vr[_r].length; Sr += 1) vr[_r][Sr] = 255 & Yt.getBuffer()[Sr + cr];
              cr += $r;
              var Mr = pt.getErrorCorrectPolynomial(Ur), Kr = Bt(vr[_r], Mr.getLength() - 1), kr = Kr.mod(Mr);
              Br[_r] = new Array(Mr.getLength() - 1);
              for (var Sr = 0; Sr < Br[_r].length; Sr += 1) {
                var Lr = Sr + kr.getLength() - Br[_r].length;
                Br[_r][Sr] = Lr >= 0 ? kr.getAt(Lr) : 0;
              }
            }
            for (var Gr = 0, Sr = 0; Sr < tr.length; Sr += 1) Gr += tr[Sr].totalCount;
            for (var Tr = new Array(Gr), yr = 0, Sr = 0; Sr < ir; Sr += 1) for (var _r = 0; _r < tr.length; _r += 1) Sr < vr[_r].length && (Tr[yr] = vr[_r][Sr], yr += 1);
            for (var Sr = 0; Sr < Jt; Sr += 1) for (var _r = 0; _r < tr.length; _r += 1) Sr < Br[_r].length && (Tr[yr] = Br[_r][Sr], yr += 1);
            return Tr;
          }, Xt = function(Yt, tr, cr) {
            for (var ir = St.getRSBlocks(Yt, tr), Jt = $t(), vr = 0; vr < cr.length; vr += 1) {
              var Br = cr[vr];
              Jt.put(Br.getMode(), 4), Jt.put(Br.getLength(), pt.getLengthInBits(Br.getMode(), Yt)), Br.write(Jt);
            }
            for (var _r = 0, vr = 0; vr < ir.length; vr += 1) _r += ir[vr].dataCount;
            if (Jt.getLengthInBits() > _r * 8) throw "code length overflow. (" + Jt.getLengthInBits() + ">" + _r * 8 + ")";
            for (Jt.getLengthInBits() + 4 <= _r * 8 && Jt.put(0, 4); Jt.getLengthInBits() % 8 != 0; ) Jt.putBit(false);
            for (; !(Jt.getLengthInBits() >= _r * 8 || (Jt.put(ar, 8), Jt.getLengthInBits() >= _r * 8)); ) Jt.put(sr, 8);
            return Wt(Jt, ir);
          };
          at.addData = function(Yt, tr) {
            tr = tr || "Byte";
            var cr = null;
            switch (tr) {
              case "Numeric":
                cr = kt(Yt);
                break;
              case "Alphanumeric":
                cr = Tt(Yt);
                break;
              case "Byte":
                cr = Pt(Yt);
                break;
              case "Kanji":
                cr = It(Yt);
                break;
              default:
                throw "mode:" + tr;
            }
            it.push(cr), nt = null;
          }, at.isDark = function(Yt, tr) {
            if (Yt < 0 || tt <= Yt || tr < 0 || tt <= tr) throw Yt + "," + tr;
            return xt[Yt][tr];
          }, at.getModuleCount = function() {
            return tt;
          }, at.make = function() {
            if (er < 1) {
              for (var Yt = 1; Yt < 40; Yt++) {
                for (var tr = St.getRSBlocks(Yt, Ut), cr = $t(), ir = 0; ir < it.length; ir++) {
                  var Jt = it[ir];
                  cr.put(Jt.getMode(), 4), cr.put(Jt.getLength(), pt.getLengthInBits(Jt.getMode(), Yt)), Jt.write(cr);
                }
                for (var vr = 0, ir = 0; ir < tr.length; ir++) vr += tr[ir].dataCount;
                if (cr.getLengthInBits() <= vr * 8) break;
              }
              er = Yt;
            }
            ct(false, At());
          }, at.createTableTag = function(Yt, tr) {
            Yt = Yt || 2, tr = typeof tr > "u" ? Yt * 4 : tr;
            var cr = "";
            cr += '<table style="', cr += " border-width: 0px; border-style: none;", cr += " border-collapse: collapse;", cr += " padding: 0px; margin: " + tr + "px;", cr += '">', cr += "<tbody>";
            for (var ir = 0; ir < at.getModuleCount(); ir += 1) {
              cr += "<tr>";
              for (var Jt = 0; Jt < at.getModuleCount(); Jt += 1) cr += '<td style="', cr += " border-width: 0px; border-style: none;", cr += " border-collapse: collapse;", cr += " padding: 0px; margin: 0px;", cr += " width: " + Yt + "px;", cr += " height: " + Yt + "px;", cr += " background-color: ", cr += at.isDark(ir, Jt) ? "#000000" : "#ffffff", cr += ";", cr += '"/>';
              cr += "</tr>";
            }
            return cr += "</tbody>", cr += "</table>", cr;
          }, at.createSvgTag = function(Yt, tr, cr, ir) {
            var Jt = {};
            typeof arguments[0] == "object" && (Jt = arguments[0], Yt = Jt.cellSize, tr = Jt.margin, cr = Jt.alt, ir = Jt.title), Yt = Yt || 2, tr = typeof tr > "u" ? Yt * 4 : tr, cr = typeof cr == "string" ? {
              text: cr
            } : cr || {}, cr.text = cr.text || null, cr.id = cr.text ? cr.id || "qrcode-description" : null, ir = typeof ir == "string" ? {
              text: ir
            } : ir || {}, ir.text = ir.text || null, ir.id = ir.text ? ir.id || "qrcode-title" : null;
            var vr = at.getModuleCount() * Yt + tr * 2, Br, _r, $r, Ur, Sr = "", Mr;
            for (Mr = "l" + Yt + ",0 0," + Yt + " -" + Yt + ",0 0,-" + Yt + "z ", Sr += '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"', Sr += Jt.scalable ? "" : ' width="' + vr + 'px" height="' + vr + 'px"', Sr += ' viewBox="0 0 ' + vr + " " + vr + '" ', Sr += ' preserveAspectRatio="xMinYMin meet"', Sr += ir.text || cr.text ? ' role="img" aria-labelledby="' + rr([
              ir.id,
              cr.id
            ].join(" ").trim()) + '"' : "", Sr += ">", Sr += ir.text ? '<title id="' + rr(ir.id) + '">' + rr(ir.text) + "</title>" : "", Sr += cr.text ? '<description id="' + rr(cr.id) + '">' + rr(cr.text) + "</description>" : "", Sr += '<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>', Sr += '<path d="', $r = 0; $r < at.getModuleCount(); $r += 1) for (Ur = $r * Yt + tr, Br = 0; Br < at.getModuleCount(); Br += 1) at.isDark($r, Br) && (_r = Br * Yt + tr, Sr += "M" + _r + "," + Ur + Mr);
            return Sr += '" stroke="transparent" fill="black"/>', Sr += "</svg>", Sr;
          }, at.createDataURL = function(Yt, tr) {
            Yt = Yt || 2, tr = typeof tr > "u" ? Yt * 4 : tr;
            var cr = at.getModuleCount() * Yt + tr * 2, ir = tr, Jt = cr - tr;
            return Lt(cr, cr, function(vr, Br) {
              if (ir <= vr && vr < Jt && ir <= Br && Br < Jt) {
                var _r = Math.floor((vr - ir) / Yt), $r = Math.floor((Br - ir) / Yt);
                return at.isDark($r, _r) ? 0 : 1;
              } else return 1;
            });
          }, at.createImgTag = function(Yt, tr, cr) {
            Yt = Yt || 2, tr = typeof tr > "u" ? Yt * 4 : tr;
            var ir = at.getModuleCount() * Yt + tr * 2, Jt = "";
            return Jt += "<img", Jt += ' src="', Jt += at.createDataURL(Yt, tr), Jt += '"', Jt += ' width="', Jt += ir, Jt += '"', Jt += ' height="', Jt += ir, Jt += '"', cr && (Jt += ' alt="', Jt += rr(cr), Jt += '"'), Jt += "/>", Jt;
          };
          var rr = function(Yt) {
            for (var tr = "", cr = 0; cr < Yt.length; cr += 1) {
              var ir = Yt.charAt(cr);
              switch (ir) {
                case "<":
                  tr += "&lt;";
                  break;
                case ">":
                  tr += "&gt;";
                  break;
                case "&":
                  tr += "&amp;";
                  break;
                case '"':
                  tr += "&quot;";
                  break;
                default:
                  tr += ir;
                  break;
              }
            }
            return tr;
          }, Gt = function(Yt) {
            var tr = 1;
            Yt = typeof Yt > "u" ? tr * 2 : Yt;
            var cr = at.getModuleCount() * tr + Yt * 2, ir = Yt, Jt = cr - Yt, vr, Br, _r, $r, Ur, Sr = {
              "\u2588\u2588": "\u2588",
              "\u2588 ": "\u2580",
              " \u2588": "\u2584",
              "  ": " "
            }, Mr = {
              "\u2588\u2588": "\u2580",
              "\u2588 ": "\u2580",
              " \u2588": " ",
              "  ": " "
            }, Kr = "";
            for (vr = 0; vr < cr; vr += 2) {
              for (_r = Math.floor((vr - ir) / tr), $r = Math.floor((vr + 1 - ir) / tr), Br = 0; Br < cr; Br += 1) Ur = "\u2588", ir <= Br && Br < Jt && ir <= vr && vr < Jt && at.isDark(_r, Math.floor((Br - ir) / tr)) && (Ur = " "), ir <= Br && Br < Jt && ir <= vr + 1 && vr + 1 < Jt && at.isDark($r, Math.floor((Br - ir) / tr)) ? Ur += " " : Ur += "\u2588", Kr += Yt < 1 && vr + 1 >= Jt ? Mr[Ur] : Sr[Ur];
              Kr += `
`;
            }
            return cr % 2 && Yt > 0 ? Kr.substring(0, Kr.length - cr - 1) + Array(cr + 1).join("\u2580") : Kr.substring(0, Kr.length - 1);
          };
          return at.createASCII = function(Yt, tr) {
            if (Yt = Yt || 1, Yt < 2) return Gt(tr);
            Yt -= 1, tr = typeof tr > "u" ? Yt * 2 : tr;
            var cr = at.getModuleCount() * Yt + tr * 2, ir = tr, Jt = cr - tr, vr, Br, _r, $r, Ur = Array(Yt + 1).join("\u2588\u2588"), Sr = Array(Yt + 1).join("  "), Mr = "", Kr = "";
            for (vr = 0; vr < cr; vr += 1) {
              for (_r = Math.floor((vr - ir) / Yt), Kr = "", Br = 0; Br < cr; Br += 1) $r = 1, ir <= Br && Br < Jt && ir <= vr && vr < Jt && at.isDark(_r, Math.floor((Br - ir) / Yt)) && ($r = 0), Kr += $r ? Ur : Sr;
              for (_r = 0; _r < Yt; _r += 1) Mr += Kr + `
`;
            }
            return Mr.substring(0, Mr.length - 1);
          }, at.renderTo2dContext = function(Yt, tr) {
            tr = tr || 2;
            for (var cr = at.getModuleCount(), ir = 0; ir < cr; ir++) for (var Jt = 0; Jt < cr; Jt++) Yt.fillStyle = at.isDark(ir, Jt) ? "black" : "white", Yt.fillRect(ir * tr, Jt * tr, tr, tr);
          }, at;
        };
        j.stringToBytesFuncs = {
          default: function(Zt) {
            for (var Kt = [], ar = 0; ar < Zt.length; ar += 1) {
              var sr = Zt.charCodeAt(ar);
              Kt.push(sr & 255);
            }
            return Kt;
          }
        }, j.stringToBytes = j.stringToBytesFuncs.default, j.createStringToBytes = function(Zt, Kt) {
          var ar = function() {
            for (var er = Ot(Zt), Ut = function() {
              var ut = er.read();
              if (ut == -1) throw "eof";
              return ut;
            }, xt = 0, tt = {}; ; ) {
              var nt = er.read();
              if (nt == -1) break;
              var it = Ut(), at = Ut(), ct = Ut(), Mt = String.fromCharCode(nt << 8 | it), At = at << 8 | ct;
              tt[Mt] = At, xt += 1;
            }
            if (xt != Kt) throw xt + " != " + Kt;
            return tt;
          }(), sr = 63;
          return function(er) {
            for (var Ut = [], xt = 0; xt < er.length; xt += 1) {
              var tt = er.charCodeAt(xt);
              if (tt < 128) Ut.push(tt);
              else {
                var nt = ar[er.charAt(xt)];
                typeof nt == "number" ? (nt & 255) == nt ? Ut.push(nt) : (Ut.push(nt >>> 8), Ut.push(nt & 255)) : Ut.push(sr);
              }
            }
            return Ut;
          };
        };
        var rt = {
          MODE_NUMBER: 1,
          MODE_ALPHA_NUM: 2,
          MODE_8BIT_BYTE: 4,
          MODE_KANJI: 8
        }, et = {
          L: 1,
          M: 0,
          Q: 3,
          H: 2
        }, st = {
          PATTERN000: 0,
          PATTERN001: 1,
          PATTERN010: 2,
          PATTERN011: 3,
          PATTERN100: 4,
          PATTERN101: 5,
          PATTERN110: 6,
          PATTERN111: 7
        }, pt = function() {
          var Zt = [
            [],
            [
              6,
              18
            ],
            [
              6,
              22
            ],
            [
              6,
              26
            ],
            [
              6,
              30
            ],
            [
              6,
              34
            ],
            [
              6,
              22,
              38
            ],
            [
              6,
              24,
              42
            ],
            [
              6,
              26,
              46
            ],
            [
              6,
              28,
              50
            ],
            [
              6,
              30,
              54
            ],
            [
              6,
              32,
              58
            ],
            [
              6,
              34,
              62
            ],
            [
              6,
              26,
              46,
              66
            ],
            [
              6,
              26,
              48,
              70
            ],
            [
              6,
              26,
              50,
              74
            ],
            [
              6,
              30,
              54,
              78
            ],
            [
              6,
              30,
              56,
              82
            ],
            [
              6,
              30,
              58,
              86
            ],
            [
              6,
              34,
              62,
              90
            ],
            [
              6,
              28,
              50,
              72,
              94
            ],
            [
              6,
              26,
              50,
              74,
              98
            ],
            [
              6,
              30,
              54,
              78,
              102
            ],
            [
              6,
              28,
              54,
              80,
              106
            ],
            [
              6,
              32,
              58,
              84,
              110
            ],
            [
              6,
              30,
              58,
              86,
              114
            ],
            [
              6,
              34,
              62,
              90,
              118
            ],
            [
              6,
              26,
              50,
              74,
              98,
              122
            ],
            [
              6,
              30,
              54,
              78,
              102,
              126
            ],
            [
              6,
              26,
              52,
              78,
              104,
              130
            ],
            [
              6,
              30,
              56,
              82,
              108,
              134
            ],
            [
              6,
              34,
              60,
              86,
              112,
              138
            ],
            [
              6,
              30,
              58,
              86,
              114,
              142
            ],
            [
              6,
              34,
              62,
              90,
              118,
              146
            ],
            [
              6,
              30,
              54,
              78,
              102,
              126,
              150
            ],
            [
              6,
              24,
              50,
              76,
              102,
              128,
              154
            ],
            [
              6,
              28,
              54,
              80,
              106,
              132,
              158
            ],
            [
              6,
              32,
              58,
              84,
              110,
              136,
              162
            ],
            [
              6,
              26,
              54,
              82,
              110,
              138,
              166
            ],
            [
              6,
              30,
              58,
              86,
              114,
              142,
              170
            ]
          ], Kt = 1335, ar = 7973, sr = 21522, er = {}, Ut = function(xt) {
            for (var tt = 0; xt != 0; ) tt += 1, xt >>>= 1;
            return tt;
          };
          return er.getBCHTypeInfo = function(xt) {
            for (var tt = xt << 10; Ut(tt) - Ut(Kt) >= 0; ) tt ^= Kt << Ut(tt) - Ut(Kt);
            return (xt << 10 | tt) ^ sr;
          }, er.getBCHTypeNumber = function(xt) {
            for (var tt = xt << 12; Ut(tt) - Ut(ar) >= 0; ) tt ^= ar << Ut(tt) - Ut(ar);
            return xt << 12 | tt;
          }, er.getPatternPosition = function(xt) {
            return Zt[xt - 1];
          }, er.getMaskFunction = function(xt) {
            switch (xt) {
              case st.PATTERN000:
                return function(tt, nt) {
                  return (tt + nt) % 2 == 0;
                };
              case st.PATTERN001:
                return function(tt, nt) {
                  return tt % 2 == 0;
                };
              case st.PATTERN010:
                return function(tt, nt) {
                  return nt % 3 == 0;
                };
              case st.PATTERN011:
                return function(tt, nt) {
                  return (tt + nt) % 3 == 0;
                };
              case st.PATTERN100:
                return function(tt, nt) {
                  return (Math.floor(tt / 2) + Math.floor(nt / 3)) % 2 == 0;
                };
              case st.PATTERN101:
                return function(tt, nt) {
                  return tt * nt % 2 + tt * nt % 3 == 0;
                };
              case st.PATTERN110:
                return function(tt, nt) {
                  return (tt * nt % 2 + tt * nt % 3) % 2 == 0;
                };
              case st.PATTERN111:
                return function(tt, nt) {
                  return (tt * nt % 3 + (tt + nt) % 2) % 2 == 0;
                };
              default:
                throw "bad maskPattern:" + xt;
            }
          }, er.getErrorCorrectPolynomial = function(xt) {
            for (var tt = Bt([
              1
            ], 0), nt = 0; nt < xt; nt += 1) tt = tt.multiply(Bt([
              1,
              Et.gexp(nt)
            ], 0));
            return tt;
          }, er.getLengthInBits = function(xt, tt) {
            if (1 <= tt && tt < 10) switch (xt) {
              case rt.MODE_NUMBER:
                return 10;
              case rt.MODE_ALPHA_NUM:
                return 9;
              case rt.MODE_8BIT_BYTE:
                return 8;
              case rt.MODE_KANJI:
                return 8;
              default:
                throw "mode:" + xt;
            }
            else if (tt < 27) switch (xt) {
              case rt.MODE_NUMBER:
                return 12;
              case rt.MODE_ALPHA_NUM:
                return 11;
              case rt.MODE_8BIT_BYTE:
                return 16;
              case rt.MODE_KANJI:
                return 10;
              default:
                throw "mode:" + xt;
            }
            else if (tt < 41) switch (xt) {
              case rt.MODE_NUMBER:
                return 14;
              case rt.MODE_ALPHA_NUM:
                return 13;
              case rt.MODE_8BIT_BYTE:
                return 16;
              case rt.MODE_KANJI:
                return 12;
              default:
                throw "mode:" + xt;
            }
            else throw "type:" + tt;
          }, er.getLostPoint = function(xt) {
            for (var tt = xt.getModuleCount(), nt = 0, it = 0; it < tt; it += 1) for (var at = 0; at < tt; at += 1) {
              for (var ct = 0, Mt = xt.isDark(it, at), At = -1; At <= 1; At += 1) if (!(it + At < 0 || tt <= it + At)) for (var ut = -1; ut <= 1; ut += 1) at + ut < 0 || tt <= at + ut || At == 0 && ut == 0 || Mt == xt.isDark(it + At, at + ut) && (ct += 1);
              ct > 5 && (nt += 3 + ct - 5);
            }
            for (var it = 0; it < tt - 1; it += 1) for (var at = 0; at < tt - 1; at += 1) {
              var ot = 0;
              xt.isDark(it, at) && (ot += 1), xt.isDark(it + 1, at) && (ot += 1), xt.isDark(it, at + 1) && (ot += 1), xt.isDark(it + 1, at + 1) && (ot += 1), (ot == 0 || ot == 4) && (nt += 3);
            }
            for (var it = 0; it < tt; it += 1) for (var at = 0; at < tt - 6; at += 1) xt.isDark(it, at) && !xt.isDark(it, at + 1) && xt.isDark(it, at + 2) && xt.isDark(it, at + 3) && xt.isDark(it, at + 4) && !xt.isDark(it, at + 5) && xt.isDark(it, at + 6) && (nt += 40);
            for (var at = 0; at < tt; at += 1) for (var it = 0; it < tt - 6; it += 1) xt.isDark(it, at) && !xt.isDark(it + 1, at) && xt.isDark(it + 2, at) && xt.isDark(it + 3, at) && xt.isDark(it + 4, at) && !xt.isDark(it + 5, at) && xt.isDark(it + 6, at) && (nt += 40);
            for (var Ct = 0, at = 0; at < tt; at += 1) for (var it = 0; it < tt; it += 1) xt.isDark(it, at) && (Ct += 1);
            var Rt = Math.abs(100 * Ct / tt / tt - 50) / 5;
            return nt += Rt * 10, nt;
          }, er;
        }(), Et = function() {
          for (var Zt = new Array(256), Kt = new Array(256), ar = 0; ar < 8; ar += 1) Zt[ar] = 1 << ar;
          for (var ar = 8; ar < 256; ar += 1) Zt[ar] = Zt[ar - 4] ^ Zt[ar - 5] ^ Zt[ar - 6] ^ Zt[ar - 8];
          for (var ar = 0; ar < 255; ar += 1) Kt[Zt[ar]] = ar;
          var sr = {};
          return sr.glog = function(er) {
            if (er < 1) throw "glog(" + er + ")";
            return Kt[er];
          }, sr.gexp = function(er) {
            for (; er < 0; ) er += 255;
            for (; er >= 256; ) er -= 255;
            return Zt[er];
          }, sr;
        }();
        function Bt(Zt, Kt) {
          if (typeof Zt.length > "u") throw Zt.length + "/" + Kt;
          var ar = function() {
            for (var er = 0; er < Zt.length && Zt[er] == 0; ) er += 1;
            for (var Ut = new Array(Zt.length - er + Kt), xt = 0; xt < Zt.length - er; xt += 1) Ut[xt] = Zt[xt + er];
            return Ut;
          }(), sr = {};
          return sr.getAt = function(er) {
            return ar[er];
          }, sr.getLength = function() {
            return ar.length;
          }, sr.multiply = function(er) {
            for (var Ut = new Array(sr.getLength() + er.getLength() - 1), xt = 0; xt < sr.getLength(); xt += 1) for (var tt = 0; tt < er.getLength(); tt += 1) Ut[xt + tt] ^= Et.gexp(Et.glog(sr.getAt(xt)) + Et.glog(er.getAt(tt)));
            return Bt(Ut, 0);
          }, sr.mod = function(er) {
            if (sr.getLength() - er.getLength() < 0) return sr;
            for (var Ut = Et.glog(sr.getAt(0)) - Et.glog(er.getAt(0)), xt = new Array(sr.getLength()), tt = 0; tt < sr.getLength(); tt += 1) xt[tt] = sr.getAt(tt);
            for (var tt = 0; tt < er.getLength(); tt += 1) xt[tt] ^= Et.gexp(Et.glog(er.getAt(tt)) + Ut);
            return Bt(xt, 0).mod(er);
          }, sr;
        }
        var St = function() {
          var Zt = [
            [
              1,
              26,
              19
            ],
            [
              1,
              26,
              16
            ],
            [
              1,
              26,
              13
            ],
            [
              1,
              26,
              9
            ],
            [
              1,
              44,
              34
            ],
            [
              1,
              44,
              28
            ],
            [
              1,
              44,
              22
            ],
            [
              1,
              44,
              16
            ],
            [
              1,
              70,
              55
            ],
            [
              1,
              70,
              44
            ],
            [
              2,
              35,
              17
            ],
            [
              2,
              35,
              13
            ],
            [
              1,
              100,
              80
            ],
            [
              2,
              50,
              32
            ],
            [
              2,
              50,
              24
            ],
            [
              4,
              25,
              9
            ],
            [
              1,
              134,
              108
            ],
            [
              2,
              67,
              43
            ],
            [
              2,
              33,
              15,
              2,
              34,
              16
            ],
            [
              2,
              33,
              11,
              2,
              34,
              12
            ],
            [
              2,
              86,
              68
            ],
            [
              4,
              43,
              27
            ],
            [
              4,
              43,
              19
            ],
            [
              4,
              43,
              15
            ],
            [
              2,
              98,
              78
            ],
            [
              4,
              49,
              31
            ],
            [
              2,
              32,
              14,
              4,
              33,
              15
            ],
            [
              4,
              39,
              13,
              1,
              40,
              14
            ],
            [
              2,
              121,
              97
            ],
            [
              2,
              60,
              38,
              2,
              61,
              39
            ],
            [
              4,
              40,
              18,
              2,
              41,
              19
            ],
            [
              4,
              40,
              14,
              2,
              41,
              15
            ],
            [
              2,
              146,
              116
            ],
            [
              3,
              58,
              36,
              2,
              59,
              37
            ],
            [
              4,
              36,
              16,
              4,
              37,
              17
            ],
            [
              4,
              36,
              12,
              4,
              37,
              13
            ],
            [
              2,
              86,
              68,
              2,
              87,
              69
            ],
            [
              4,
              69,
              43,
              1,
              70,
              44
            ],
            [
              6,
              43,
              19,
              2,
              44,
              20
            ],
            [
              6,
              43,
              15,
              2,
              44,
              16
            ],
            [
              4,
              101,
              81
            ],
            [
              1,
              80,
              50,
              4,
              81,
              51
            ],
            [
              4,
              50,
              22,
              4,
              51,
              23
            ],
            [
              3,
              36,
              12,
              8,
              37,
              13
            ],
            [
              2,
              116,
              92,
              2,
              117,
              93
            ],
            [
              6,
              58,
              36,
              2,
              59,
              37
            ],
            [
              4,
              46,
              20,
              6,
              47,
              21
            ],
            [
              7,
              42,
              14,
              4,
              43,
              15
            ],
            [
              4,
              133,
              107
            ],
            [
              8,
              59,
              37,
              1,
              60,
              38
            ],
            [
              8,
              44,
              20,
              4,
              45,
              21
            ],
            [
              12,
              33,
              11,
              4,
              34,
              12
            ],
            [
              3,
              145,
              115,
              1,
              146,
              116
            ],
            [
              4,
              64,
              40,
              5,
              65,
              41
            ],
            [
              11,
              36,
              16,
              5,
              37,
              17
            ],
            [
              11,
              36,
              12,
              5,
              37,
              13
            ],
            [
              5,
              109,
              87,
              1,
              110,
              88
            ],
            [
              5,
              65,
              41,
              5,
              66,
              42
            ],
            [
              5,
              54,
              24,
              7,
              55,
              25
            ],
            [
              11,
              36,
              12,
              7,
              37,
              13
            ],
            [
              5,
              122,
              98,
              1,
              123,
              99
            ],
            [
              7,
              73,
              45,
              3,
              74,
              46
            ],
            [
              15,
              43,
              19,
              2,
              44,
              20
            ],
            [
              3,
              45,
              15,
              13,
              46,
              16
            ],
            [
              1,
              135,
              107,
              5,
              136,
              108
            ],
            [
              10,
              74,
              46,
              1,
              75,
              47
            ],
            [
              1,
              50,
              22,
              15,
              51,
              23
            ],
            [
              2,
              42,
              14,
              17,
              43,
              15
            ],
            [
              5,
              150,
              120,
              1,
              151,
              121
            ],
            [
              9,
              69,
              43,
              4,
              70,
              44
            ],
            [
              17,
              50,
              22,
              1,
              51,
              23
            ],
            [
              2,
              42,
              14,
              19,
              43,
              15
            ],
            [
              3,
              141,
              113,
              4,
              142,
              114
            ],
            [
              3,
              70,
              44,
              11,
              71,
              45
            ],
            [
              17,
              47,
              21,
              4,
              48,
              22
            ],
            [
              9,
              39,
              13,
              16,
              40,
              14
            ],
            [
              3,
              135,
              107,
              5,
              136,
              108
            ],
            [
              3,
              67,
              41,
              13,
              68,
              42
            ],
            [
              15,
              54,
              24,
              5,
              55,
              25
            ],
            [
              15,
              43,
              15,
              10,
              44,
              16
            ],
            [
              4,
              144,
              116,
              4,
              145,
              117
            ],
            [
              17,
              68,
              42
            ],
            [
              17,
              50,
              22,
              6,
              51,
              23
            ],
            [
              19,
              46,
              16,
              6,
              47,
              17
            ],
            [
              2,
              139,
              111,
              7,
              140,
              112
            ],
            [
              17,
              74,
              46
            ],
            [
              7,
              54,
              24,
              16,
              55,
              25
            ],
            [
              34,
              37,
              13
            ],
            [
              4,
              151,
              121,
              5,
              152,
              122
            ],
            [
              4,
              75,
              47,
              14,
              76,
              48
            ],
            [
              11,
              54,
              24,
              14,
              55,
              25
            ],
            [
              16,
              45,
              15,
              14,
              46,
              16
            ],
            [
              6,
              147,
              117,
              4,
              148,
              118
            ],
            [
              6,
              73,
              45,
              14,
              74,
              46
            ],
            [
              11,
              54,
              24,
              16,
              55,
              25
            ],
            [
              30,
              46,
              16,
              2,
              47,
              17
            ],
            [
              8,
              132,
              106,
              4,
              133,
              107
            ],
            [
              8,
              75,
              47,
              13,
              76,
              48
            ],
            [
              7,
              54,
              24,
              22,
              55,
              25
            ],
            [
              22,
              45,
              15,
              13,
              46,
              16
            ],
            [
              10,
              142,
              114,
              2,
              143,
              115
            ],
            [
              19,
              74,
              46,
              4,
              75,
              47
            ],
            [
              28,
              50,
              22,
              6,
              51,
              23
            ],
            [
              33,
              46,
              16,
              4,
              47,
              17
            ],
            [
              8,
              152,
              122,
              4,
              153,
              123
            ],
            [
              22,
              73,
              45,
              3,
              74,
              46
            ],
            [
              8,
              53,
              23,
              26,
              54,
              24
            ],
            [
              12,
              45,
              15,
              28,
              46,
              16
            ],
            [
              3,
              147,
              117,
              10,
              148,
              118
            ],
            [
              3,
              73,
              45,
              23,
              74,
              46
            ],
            [
              4,
              54,
              24,
              31,
              55,
              25
            ],
            [
              11,
              45,
              15,
              31,
              46,
              16
            ],
            [
              7,
              146,
              116,
              7,
              147,
              117
            ],
            [
              21,
              73,
              45,
              7,
              74,
              46
            ],
            [
              1,
              53,
              23,
              37,
              54,
              24
            ],
            [
              19,
              45,
              15,
              26,
              46,
              16
            ],
            [
              5,
              145,
              115,
              10,
              146,
              116
            ],
            [
              19,
              75,
              47,
              10,
              76,
              48
            ],
            [
              15,
              54,
              24,
              25,
              55,
              25
            ],
            [
              23,
              45,
              15,
              25,
              46,
              16
            ],
            [
              13,
              145,
              115,
              3,
              146,
              116
            ],
            [
              2,
              74,
              46,
              29,
              75,
              47
            ],
            [
              42,
              54,
              24,
              1,
              55,
              25
            ],
            [
              23,
              45,
              15,
              28,
              46,
              16
            ],
            [
              17,
              145,
              115
            ],
            [
              10,
              74,
              46,
              23,
              75,
              47
            ],
            [
              10,
              54,
              24,
              35,
              55,
              25
            ],
            [
              19,
              45,
              15,
              35,
              46,
              16
            ],
            [
              17,
              145,
              115,
              1,
              146,
              116
            ],
            [
              14,
              74,
              46,
              21,
              75,
              47
            ],
            [
              29,
              54,
              24,
              19,
              55,
              25
            ],
            [
              11,
              45,
              15,
              46,
              46,
              16
            ],
            [
              13,
              145,
              115,
              6,
              146,
              116
            ],
            [
              14,
              74,
              46,
              23,
              75,
              47
            ],
            [
              44,
              54,
              24,
              7,
              55,
              25
            ],
            [
              59,
              46,
              16,
              1,
              47,
              17
            ],
            [
              12,
              151,
              121,
              7,
              152,
              122
            ],
            [
              12,
              75,
              47,
              26,
              76,
              48
            ],
            [
              39,
              54,
              24,
              14,
              55,
              25
            ],
            [
              22,
              45,
              15,
              41,
              46,
              16
            ],
            [
              6,
              151,
              121,
              14,
              152,
              122
            ],
            [
              6,
              75,
              47,
              34,
              76,
              48
            ],
            [
              46,
              54,
              24,
              10,
              55,
              25
            ],
            [
              2,
              45,
              15,
              64,
              46,
              16
            ],
            [
              17,
              152,
              122,
              4,
              153,
              123
            ],
            [
              29,
              74,
              46,
              14,
              75,
              47
            ],
            [
              49,
              54,
              24,
              10,
              55,
              25
            ],
            [
              24,
              45,
              15,
              46,
              46,
              16
            ],
            [
              4,
              152,
              122,
              18,
              153,
              123
            ],
            [
              13,
              74,
              46,
              32,
              75,
              47
            ],
            [
              48,
              54,
              24,
              14,
              55,
              25
            ],
            [
              42,
              45,
              15,
              32,
              46,
              16
            ],
            [
              20,
              147,
              117,
              4,
              148,
              118
            ],
            [
              40,
              75,
              47,
              7,
              76,
              48
            ],
            [
              43,
              54,
              24,
              22,
              55,
              25
            ],
            [
              10,
              45,
              15,
              67,
              46,
              16
            ],
            [
              19,
              148,
              118,
              6,
              149,
              119
            ],
            [
              18,
              75,
              47,
              31,
              76,
              48
            ],
            [
              34,
              54,
              24,
              34,
              55,
              25
            ],
            [
              20,
              45,
              15,
              61,
              46,
              16
            ]
          ], Kt = function(er, Ut) {
            var xt = {};
            return xt.totalCount = er, xt.dataCount = Ut, xt;
          }, ar = {}, sr = function(er, Ut) {
            switch (Ut) {
              case et.L:
                return Zt[(er - 1) * 4 + 0];
              case et.M:
                return Zt[(er - 1) * 4 + 1];
              case et.Q:
                return Zt[(er - 1) * 4 + 2];
              case et.H:
                return Zt[(er - 1) * 4 + 3];
              default:
                return;
            }
          };
          return ar.getRSBlocks = function(er, Ut) {
            var xt = sr(er, Ut);
            if (typeof xt > "u") throw "bad rs block @ typeNumber:" + er + "/errorCorrectionLevel:" + Ut;
            for (var tt = xt.length / 3, nt = [], it = 0; it < tt; it += 1) for (var at = xt[it * 3 + 0], ct = xt[it * 3 + 1], Mt = xt[it * 3 + 2], At = 0; At < at; At += 1) nt.push(Kt(ct, Mt));
            return nt;
          }, ar;
        }(), $t = function() {
          var Zt = [], Kt = 0, ar = {};
          return ar.getBuffer = function() {
            return Zt;
          }, ar.getAt = function(sr) {
            var er = Math.floor(sr / 8);
            return (Zt[er] >>> 7 - sr % 8 & 1) == 1;
          }, ar.put = function(sr, er) {
            for (var Ut = 0; Ut < er; Ut += 1) ar.putBit((sr >>> er - Ut - 1 & 1) == 1);
          }, ar.getLengthInBits = function() {
            return Kt;
          }, ar.putBit = function(sr) {
            var er = Math.floor(Kt / 8);
            Zt.length <= er && Zt.push(0), sr && (Zt[er] |= 128 >>> Kt % 8), Kt += 1;
          }, ar;
        }, kt = function(Zt) {
          var Kt = rt.MODE_NUMBER, ar = Zt, sr = {};
          sr.getMode = function() {
            return Kt;
          }, sr.getLength = function(xt) {
            return ar.length;
          }, sr.write = function(xt) {
            for (var tt = ar, nt = 0; nt + 2 < tt.length; ) xt.put(er(tt.substring(nt, nt + 3)), 10), nt += 3;
            nt < tt.length && (tt.length - nt == 1 ? xt.put(er(tt.substring(nt, nt + 1)), 4) : tt.length - nt == 2 && xt.put(er(tt.substring(nt, nt + 2)), 7));
          };
          var er = function(xt) {
            for (var tt = 0, nt = 0; nt < xt.length; nt += 1) tt = tt * 10 + Ut(xt.charAt(nt));
            return tt;
          }, Ut = function(xt) {
            if ("0" <= xt && xt <= "9") return xt.charCodeAt(0) - 48;
            throw "illegal char :" + xt;
          };
          return sr;
        }, Tt = function(Zt) {
          var Kt = rt.MODE_ALPHA_NUM, ar = Zt, sr = {};
          sr.getMode = function() {
            return Kt;
          }, sr.getLength = function(Ut) {
            return ar.length;
          }, sr.write = function(Ut) {
            for (var xt = ar, tt = 0; tt + 1 < xt.length; ) Ut.put(er(xt.charAt(tt)) * 45 + er(xt.charAt(tt + 1)), 11), tt += 2;
            tt < xt.length && Ut.put(er(xt.charAt(tt)), 6);
          };
          var er = function(Ut) {
            if ("0" <= Ut && Ut <= "9") return Ut.charCodeAt(0) - 48;
            if ("A" <= Ut && Ut <= "Z") return Ut.charCodeAt(0) - 65 + 10;
            switch (Ut) {
              case " ":
                return 36;
              case "$":
                return 37;
              case "%":
                return 38;
              case "*":
                return 39;
              case "+":
                return 40;
              case "-":
                return 41;
              case ".":
                return 42;
              case "/":
                return 43;
              case ":":
                return 44;
              default:
                throw "illegal char :" + Ut;
            }
          };
          return sr;
        }, Pt = function(Zt) {
          var Kt = rt.MODE_8BIT_BYTE, ar = j.stringToBytes(Zt), sr = {};
          return sr.getMode = function() {
            return Kt;
          }, sr.getLength = function(er) {
            return ar.length;
          }, sr.write = function(er) {
            for (var Ut = 0; Ut < ar.length; Ut += 1) er.put(ar[Ut], 8);
          }, sr;
        }, It = function(Zt) {
          var Kt = rt.MODE_KANJI, ar = j.stringToBytesFuncs.SJIS;
          if (!ar) throw "sjis not supported.";
          (function(Ut, xt) {
            var tt = ar(Ut);
            if (tt.length != 2 || (tt[0] << 8 | tt[1]) != xt) throw "sjis not supported.";
          })("\u53CB", 38726);
          var sr = ar(Zt), er = {};
          return er.getMode = function() {
            return Kt;
          }, er.getLength = function(Ut) {
            return ~~(sr.length / 2);
          }, er.write = function(Ut) {
            for (var xt = sr, tt = 0; tt + 1 < xt.length; ) {
              var nt = (255 & xt[tt]) << 8 | 255 & xt[tt + 1];
              if (33088 <= nt && nt <= 40956) nt -= 33088;
              else if (57408 <= nt && nt <= 60351) nt -= 49472;
              else throw "illegal char at " + (tt + 1) + "/" + nt;
              nt = (nt >>> 8 & 255) * 192 + (nt & 255), Ut.put(nt, 13), tt += 2;
            }
            if (tt < xt.length) throw "illegal char at " + (tt + 1);
          }, er;
        }, jt = function() {
          var Zt = [], Kt = {};
          return Kt.writeByte = function(ar) {
            Zt.push(ar & 255);
          }, Kt.writeShort = function(ar) {
            Kt.writeByte(ar), Kt.writeByte(ar >>> 8);
          }, Kt.writeBytes = function(ar, sr, er) {
            sr = sr || 0, er = er || ar.length;
            for (var Ut = 0; Ut < er; Ut += 1) Kt.writeByte(ar[Ut + sr]);
          }, Kt.writeString = function(ar) {
            for (var sr = 0; sr < ar.length; sr += 1) Kt.writeByte(ar.charCodeAt(sr));
          }, Kt.toByteArray = function() {
            return Zt;
          }, Kt.toString = function() {
            var ar = "";
            ar += "[";
            for (var sr = 0; sr < Zt.length; sr += 1) sr > 0 && (ar += ","), ar += Zt[sr];
            return ar += "]", ar;
          }, Kt;
        }, Dt = function() {
          var Zt = 0, Kt = 0, ar = 0, sr = "", er = {}, Ut = function(tt) {
            sr += String.fromCharCode(xt(tt & 63));
          }, xt = function(tt) {
            if (!(tt < 0)) {
              if (tt < 26) return 65 + tt;
              if (tt < 52) return 97 + (tt - 26);
              if (tt < 62) return 48 + (tt - 52);
              if (tt == 62) return 43;
              if (tt == 63) return 47;
            }
            throw "n:" + tt;
          };
          return er.writeByte = function(tt) {
            for (Zt = Zt << 8 | tt & 255, Kt += 8, ar += 1; Kt >= 6; ) Ut(Zt >>> Kt - 6), Kt -= 6;
          }, er.flush = function() {
            if (Kt > 0 && (Ut(Zt << 6 - Kt), Zt = 0, Kt = 0), ar % 3 != 0) for (var tt = 3 - ar % 3, nt = 0; nt < tt; nt += 1) sr += "=";
          }, er.toString = function() {
            return sr;
          }, er;
        }, Ot = function(Zt) {
          var Kt = Zt, ar = 0, sr = 0, er = 0, Ut = {};
          Ut.read = function() {
            for (; er < 8; ) {
              if (ar >= Kt.length) {
                if (er == 0) return -1;
                throw "unexpected end of file./" + er;
              }
              var tt = Kt.charAt(ar);
              if (ar += 1, tt == "=") return er = 0, -1;
              if (tt.match(/^\s$/)) continue;
              sr = sr << 6 | xt(tt.charCodeAt(0)), er += 6;
            }
            var nt = sr >>> er - 8 & 255;
            return er -= 8, nt;
          };
          var xt = function(tt) {
            if (65 <= tt && tt <= 90) return tt - 65;
            if (97 <= tt && tt <= 122) return tt - 97 + 26;
            if (48 <= tt && tt <= 57) return tt - 48 + 52;
            if (tt == 43) return 62;
            if (tt == 47) return 63;
            throw "c:" + tt;
          };
          return Ut;
        }, Ft = function(Zt, Kt) {
          var ar = Zt, sr = Kt, er = new Array(Zt * Kt), Ut = {};
          Ut.setPixel = function(it, at, ct) {
            er[at * ar + it] = ct;
          }, Ut.write = function(it) {
            it.writeString("GIF87a"), it.writeShort(ar), it.writeShort(sr), it.writeByte(128), it.writeByte(0), it.writeByte(0), it.writeByte(0), it.writeByte(0), it.writeByte(0), it.writeByte(255), it.writeByte(255), it.writeByte(255), it.writeString(","), it.writeShort(0), it.writeShort(0), it.writeShort(ar), it.writeShort(sr), it.writeByte(0);
            var at = 2, ct = tt(at);
            it.writeByte(at);
            for (var Mt = 0; ct.length - Mt > 255; ) it.writeByte(255), it.writeBytes(ct, Mt, 255), Mt += 255;
            it.writeByte(ct.length - Mt), it.writeBytes(ct, Mt, ct.length - Mt), it.writeByte(0), it.writeString(";");
          };
          var xt = function(it) {
            var at = it, ct = 0, Mt = 0, At = {};
            return At.write = function(ut, ot) {
              if (ut >>> ot) throw "length over";
              for (; ct + ot >= 8; ) at.writeByte(255 & (ut << ct | Mt)), ot -= 8 - ct, ut >>>= 8 - ct, Mt = 0, ct = 0;
              Mt = ut << ct | Mt, ct = ct + ot;
            }, At.flush = function() {
              ct > 0 && at.writeByte(Mt);
            }, At;
          }, tt = function(it) {
            for (var at = 1 << it, ct = (1 << it) + 1, Mt = it + 1, At = nt(), ut = 0; ut < at; ut += 1) At.add(String.fromCharCode(ut));
            At.add(String.fromCharCode(at)), At.add(String.fromCharCode(ct));
            var ot = jt(), Ct = xt(ot);
            Ct.write(at, Mt);
            var Rt = 0, Nt = String.fromCharCode(er[Rt]);
            for (Rt += 1; Rt < er.length; ) {
              var Wt = String.fromCharCode(er[Rt]);
              Rt += 1, At.contains(Nt + Wt) ? Nt = Nt + Wt : (Ct.write(At.indexOf(Nt), Mt), At.size() < 4095 && (At.size() == 1 << Mt && (Mt += 1), At.add(Nt + Wt)), Nt = Wt);
            }
            return Ct.write(At.indexOf(Nt), Mt), Ct.write(ct, Mt), Ct.flush(), ot.toByteArray();
          }, nt = function() {
            var it = {}, at = 0, ct = {};
            return ct.add = function(Mt) {
              if (ct.contains(Mt)) throw "dup key:" + Mt;
              it[Mt] = at, at += 1;
            }, ct.size = function() {
              return at;
            }, ct.indexOf = function(Mt) {
              return it[Mt];
            }, ct.contains = function(Mt) {
              return typeof it[Mt] < "u";
            }, ct;
          };
          return Ut;
        }, Lt = function(Zt, Kt, ar) {
          for (var sr = Ft(Zt, Kt), er = 0; er < Kt; er += 1) for (var Ut = 0; Ut < Zt; Ut += 1) sr.setPixel(Ut, er, ar(Ut, er));
          var xt = jt();
          sr.write(xt);
          for (var tt = Dt(), nt = xt.toByteArray(), it = 0; it < nt.length; it += 1) tt.writeByte(nt[it]);
          return tt.flush(), "data:image/gif;base64," + tt;
        };
        return j;
      }();
      (function() {
        $.stringToBytesFuncs["UTF-8"] = function(j) {
          function rt(et) {
            for (var st = [], pt = 0; pt < et.length; pt++) {
              var Et = et.charCodeAt(pt);
              Et < 128 ? st.push(Et) : Et < 2048 ? st.push(192 | Et >> 6, 128 | Et & 63) : Et < 55296 || Et >= 57344 ? st.push(224 | Et >> 12, 128 | Et >> 6 & 63, 128 | Et & 63) : (pt++, Et = 65536 + ((Et & 1023) << 10 | et.charCodeAt(pt) & 1023), st.push(240 | Et >> 18, 128 | Et >> 12 & 63, 128 | Et >> 6 & 63, 128 | Et & 63));
            }
            return st;
          }
          return rt(j);
        };
      })(), function(j) {
        d.exports = j();
      }(function() {
        return $;
      });
    })(qrcode$1);
    const qrcode = qrcode$1.exports;
    function copyToClipboard(d) {
      return __async(this, null, function* () {
        try {
          if (!(navigator == null ? void 0 : navigator.clipboard)) throw new TonConnectUIError("Clipboard API not available");
          return yield navigator.clipboard.writeText(d);
        } catch {
        }
        fallbackCopyTextToClipboard(d);
      });
    }
    function fallbackCopyTextToClipboard(d) {
      const _ = document.createElement("textarea");
      _.value = d, _.style.top = "0", _.style.left = "0", _.style.position = "fixed", document.body.appendChild(_), _.focus(), _.select();
      try {
        document.execCommand("copy");
      } finally {
        document.body.removeChild(_);
      }
    }
    const _tmpl$$r = template$1("<div></div>"), QRCode = (d) => {
      let _, $, j;
      const [rt, et] = createSignal(false), [st, pt] = createSignal(picSizeDefault);
      createEffect(() => {
        const kt = qrcode(0, "L");
        kt.addData(d.sourceUrl), kt.make(), _.innerHTML = kt.createSvgTag(4, 0);
        const Tt = _.firstElementChild.clientWidth, Pt = Math.round(qrNormalSize / Tt * 1e5) / 1e5;
        if (j) {
          const It = Math.ceil(imgSizeDefault / (Pt * 4)) * 4, jt = toPx(Math.ceil((Tt - It) / (2 * 4)) * 4);
          j.style.top = jt, j.style.left = jt, j.style.height = toPx(It), j.style.width = toPx(It), pt(Math.round(picSizeDefault / Pt));
        }
        $.style.transform = `scale(${Pt})`;
      });
      let Et = null;
      return createComponent(QrCodeBackground, {
        get class() {
          return d.class;
        },
        onClick: () => {
          et(true), copyToClipboard(d.sourceUrl), Et != null && clearTimeout(Et), Et = setTimeout(() => et(false), 1500);
        },
        get children() {
          return [
            createComponent(QrCodeWrapper$2, {
              ref(St) {
                const $t = $;
                typeof $t == "function" ? $t(St) : $ = St;
              },
              get children() {
                return [
                  (() => {
                    const St = _tmpl$$r.cloneNode(true), $t = _;
                    return typeof $t == "function" ? use($t, St) : _ = St, St;
                  })(),
                  createComponent(Show, {
                    get when() {
                      return d.imageUrl;
                    },
                    get children() {
                      return createComponent(ImageBackground, {
                        ref(St) {
                          const $t = j;
                          typeof $t == "function" ? $t(St) : j = St;
                        },
                        get children() {
                          return createComponent(ImageStyled$3, {
                            get src() {
                              return d.imageUrl;
                            },
                            alt: "",
                            get size() {
                              return st();
                            }
                          });
                        }
                      });
                    }
                  })
                ];
              }
            }),
            createComponent(Transition, {
              onBeforeEnter: (St) => {
                animate(St, [
                  {
                    opacity: 0,
                    transform: "translate(-50%, 44px)"
                  },
                  {
                    opacity: 1,
                    transform: "translate(-50%, 0)"
                  }
                ], {
                  duration: 150,
                  easing: "ease-out"
                });
              },
              onExit: (St, $t) => {
                animate(St, [
                  {
                    opacity: 1,
                    transform: "translate(-50%, 0)"
                  },
                  {
                    opacity: 0,
                    transform: "translate(-50%, 44px)"
                  }
                ], {
                  duration: 150,
                  easing: "ease-out"
                }).finished.then(() => {
                  $t();
                });
              },
              get children() {
                return createComponent(Show, {
                  get when() {
                    return rt() && !d.disableCopy;
                  },
                  get children() {
                    return createComponent(CopiedBoxStyled, {
                      get children() {
                        return [
                          createComponent(SuccessIcon, {
                            size: "xs"
                          }),
                          createComponent(Text, {
                            translationKey: "common.linkCopied",
                            children: "Link Copied"
                          })
                        ];
                      }
                    });
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return !d.disableCopy;
              },
              get children() {
                return createComponent(CopyIconButton, {
                  get children() {
                    return createComponent(CopyLightIcon, {});
                  }
                });
              }
            })
          ];
        }
      });
    };
    var deepReadObject = (d, _, $) => {
      const j = _.trim().split(".").reduce((rt, et) => rt ? rt[et] : void 0, d);
      return j !== void 0 ? j : $;
    }, template = (d, _, $ = /{{(.*?)}}/g) => d.replace($, (j, rt) => deepReadObject(_, rt, "")), createI18nContext = (d = {}, _ = navigator.language in d ? navigator.language : Object.keys(d)[0]) => {
      const [$, j] = createSignal(_), [rt, et] = createStore(d);
      return [
        (Et, Bt, St) => {
          const $t = deepReadObject(rt[$()], Et, St || "");
          return typeof $t == "function" ? $t(Bt) : typeof $t == "string" ? template($t, Bt || {}) : $t;
        },
        {
          add(Et, Bt) {
            et(Et, (St) => Object.assign(St || {}, Bt));
          },
          locale: (Et) => Et ? j(Et) : $(),
          dict: (Et) => deepReadObject(rt, Et)
        }
      ];
    }, I18nContext = createContext({}), useI18n = () => useContext(I18nContext);
    const TextStyled$3 = styled.div`
    font-style: normal;
    font-weight: ${(d) => d.fontWeight};
    font-size: ${(d) => d.fontSize};
    line-height: ${(d) => d.lineHeight};

    color: ${(d) => d.color};
`, Text = (d) => {
      const _ = useTheme(), [$] = useI18n();
      let j;
      const rt = () => d.color || _.colors.text.primary, et = mergeProps({
        fontSize: "14px",
        fontWeight: "510",
        lineHeight: "130%"
      }, d);
      return createEffect(() => {
        j && et.cursor !== "unset" && getComputedStyle(j).cursor !== "pointer" && (j.style.cursor = "default");
      }), createComponent(TextStyled$3, {
        get fontSize() {
          return et.fontSize;
        },
        get fontWeight() {
          return et.fontWeight;
        },
        get lineHeight() {
          return et.lineHeight;
        },
        get color() {
          return rt();
        },
        get class() {
          return et.class;
        },
        ref(st) {
          const pt = j;
          typeof pt == "function" ? pt(st) : j = st;
        },
        "data-tc-text": "true",
        get children() {
          var st;
          return createMemo(() => !!et.translationKey)() ? $(et.translationKey, et.translationValues, (st = et.children) == null ? void 0 : st.toString()) : et.children;
        }
      });
    }, ImageContainer = styled.div`
    position: relative;

    &::after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        border: 0.5px solid rgba(0, 0, 0, 0.08);
        border-radius: inherit;
    }
`, ImageStyled$2 = styled(Image$1)`
    width: 100%;
    height: 100%;
    border-radius: inherit;
`, WalletImage = (d) => createComponent(ImageContainer, {
      get class() {
        return d.class;
      },
      get children() {
        return [
          createComponent(ImageStyled$2, {
            get src() {
              return d.src;
            }
          }),
          createMemo(() => d.badge)
        ];
      }
    }), borders$3 = {
      m: "16px",
      s: "12px",
      none: "0"
    }, badgeBorders = {
      m: "6px",
      s: "6px",
      none: "0"
    }, WalletUlContainer = styled.ul`
    display: flex;
    gap: 0;
    width: 100%;
    overflow-x: auto;
    padding: 8px 12px 16px 12px;
    margin: 0;
    list-style: none;
    flex-wrap: nowrap;

    &&::-webkit-scrollbar {
        display: none;
    }
    -ms-overflow-style: none;
    scrollbar-width: none;

    > li {
        display: flex;
        flex: 1;
        min-width: 78px;
        height: fit-content;
    }

    > li > button {
        width: 100%;
    }
`, WalletItemStyled = styled.button`
    position: relative;
    cursor: pointer;
    border: none;
    background-color: unset;
    padding: 8px 4px;
    width: 100%;
    min-width: 78px;
    display: flex;
    flex-direction: column;
    align-items: center;

    transition: transform 0.125s ease-in-out;

    ${mediaNotTouch} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${mediaTouch} {
        &:active {
            transform: scale(0.92);
        }
    }
`, ImageStyled$1 = styled(WalletImage)`
    width: 60px;
    height: 60px;
    border-radius: ${(d) => borders$3[d.theme.borderRadius]};
    margin-bottom: 8px;
    position: relative;
`, BadgeStyled = styled(Image$1)`
    position: absolute;
    right: -6px;
    bottom: -6px;
    width: 24px;
    height: 24px;
    border-radius: ${(d) => badgeBorders[d.theme.borderRadius]};
    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);
`, StyledText = styled(Text)`
    max-width: 90px;
    font-weight: 510;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    ${media("mobile")} {
        max-width: 80px;
    }
`, StyledSecondLine = styled(Text)`
    font-weight: ${(d) => d.colorPrimary ? "510" : "400"};
    max-width: 90px;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    color: ${(d) => d.colorPrimary ? d.theme.colors.text.primary : d.theme.colors.text.secondary};

    ${media("mobile")} {
        max-width: 80px;
    }
`, _tmpl$$q = template$1("<div></div>"), WalletItem = (d) => {
      let _ = null;
      const $ = () => {
        const j = _ == null ? void 0 : _.querySelector("div");
        if (j && j.scrollWidth > j.clientWidth) {
          let rt = 0;
          const et = -0.4, st = 0.05;
          for (; j.scrollWidth > j.clientWidth && rt >= et; ) rt -= st, j.style.letterSpacing = `${rt}px`;
          rt !== 0 && (rt -= st, j.style.letterSpacing = `${rt}px`);
        }
      };
      return onMount(() => $()), createEffect(() => {
        $();
      }), createComponent(WalletItemStyled, {
        get class() {
          return d.class;
        },
        onClick: () => d.onClick(),
        "data-tc-wallet-item": "true",
        get children() {
          return [
            createMemo(() => createMemo(() => typeof d.icon == "string")() ? createComponent(ImageStyled$1, {
              get src() {
                return d.icon;
              },
              get badge() {
                return createMemo(() => !!d.badgeUrl)() && createComponent(BadgeStyled, {
                  get src() {
                    return d.badgeUrl;
                  }
                });
              }
            }) : d.icon),
            (() => {
              const j = _tmpl$$q.cloneNode(true);
              return use((rt) => _ = rt, j), insert(j, createComponent(StyledText, {
                get children() {
                  return d.name;
                }
              })), j;
            })(),
            createMemo(() => createMemo(() => !!d.secondLine)() && createComponent(StyledSecondLine, {
              get colorPrimary() {
                var j;
                return (j = d.secondLineColorPrimary) != null ? j : true;
              },
              get children() {
                return d.secondLine;
              }
            }))
          ];
        }
      });
    }, H1Styled$9 = styled.h1`
    font-style: normal;
    font-weight: 590;
    font-size: 20px;
    line-height: 28px;

    text-align: center;

    color: ${(d) => d.theme.colors.text.primary};

    margin-top: 0;
    margin-bottom: 0;

    cursor: default;
`, H1 = (d) => {
      const [_] = useI18n();
      return createComponent(H1Styled$9, {
        get class() {
          return d.class;
        },
        "data-tc-h1": "true",
        get children() {
          var $;
          return createMemo(() => !!d.translationKey)() ? _(d.translationKey, d.translationValues, ($ = d.children) == null ? void 0 : $.toString()) : d.children;
        }
      });
    }, H2Styled$5 = styled.h2`
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 22px;

    text-align: center;

    color: ${(d) => d.theme.colors.text.secondary};

    margin-top: 0;
    margin-bottom: 32px;

    cursor: default;
`, H2 = (d) => {
      const [_] = useI18n();
      return createComponent(H2Styled$5, {
        get class() {
          return d.class;
        },
        "data-tc-h2": "true",
        get children() {
          var $;
          return createMemo(() => !!d.translationKey)() ? _(d.translationKey, d.translationValues, ($ = d.children) == null ? void 0 : $.toString()) : d.children;
        }
      });
    }, H3Styled$1 = styled.h3`
    font-style: normal;
    font-weight: 510;
    font-size: 16px;
    line-height: 20px;

    color: ${(d) => d.theme.colors.text.primary};

    margin-top: 0;
    margin-bottom: 0;

    cursor: default;
`, H3 = (d) => {
      const [_] = useI18n();
      return createComponent(H3Styled$1, {
        "data-tc-h3": "true",
        get class() {
          return d.class;
        },
        get children() {
          var $;
          return createMemo(() => !!d.translationKey)() ? _(d.translationKey, d.translationValues, ($ = d.children) == null ? void 0 : $.toString()) : d.children;
        }
      });
    }, _tmpl$$p = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z"></path></svg>'), TonIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$p.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$o = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><g clip-path="url(#clip0_3783_2045)"><circle cx="8" cy="8.00098" r="8"></circle><path d="M4.75 8.50098L7 10.751L11.75 6.00098" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_3783_2045"><rect width="16" height="16" fill="white" transform="translate(0 0.000976562)"></rect></clipPath></defs></svg>'), _tmpl$2$3 = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="11"></circle><path d="M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z"></path></svg>'), _tmpl$3$2 = template$1('<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="36" cy="36" r="33"></circle><path d="M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z"></path></svg>'), SuccessIcon = (d) => {
      const _ = useTheme(), $ = () => d.size || "s", j = () => d.fill || _.colors.icon.success;
      return createMemo((() => {
        const rt = createMemo(() => $() === "xs");
        return () => rt() ? (() => {
          const et = _tmpl$$o.cloneNode(true), st = et.firstChild, pt = st.firstChild, Et = pt.nextSibling;
          return createRenderEffect((Bt) => {
            const St = d.class, $t = j(), kt = _.colors.constant.white;
            return St !== Bt._v$ && setAttribute(et, "class", Bt._v$ = St), $t !== Bt._v$2 && setAttribute(pt, "fill", Bt._v$2 = $t), kt !== Bt._v$3 && setAttribute(Et, "stroke", Bt._v$3 = kt), Bt;
          }, {
            _v$: void 0,
            _v$2: void 0,
            _v$3: void 0
          }), et;
        })() : (() => {
          const et = createMemo(() => $() === "s");
          return () => et() ? (() => {
            const st = _tmpl$2$3.cloneNode(true), pt = st.firstChild, Et = pt.nextSibling;
            return createRenderEffect((Bt) => {
              const St = d.class, $t = j(), kt = _.colors.constant.white;
              return St !== Bt._v$4 && setAttribute(st, "class", Bt._v$4 = St), $t !== Bt._v$5 && setAttribute(pt, "fill", Bt._v$5 = $t), kt !== Bt._v$6 && setAttribute(Et, "fill", Bt._v$6 = kt), Bt;
            }, {
              _v$4: void 0,
              _v$5: void 0,
              _v$6: void 0
            }), st;
          })() : (() => {
            const st = _tmpl$3$2.cloneNode(true), pt = st.firstChild, Et = pt.nextSibling;
            return createRenderEffect((Bt) => {
              const St = d.class, $t = j(), kt = _.colors.constant.white;
              return St !== Bt._v$7 && setAttribute(st, "class", Bt._v$7 = St), $t !== Bt._v$8 && setAttribute(pt, "fill", Bt._v$8 = $t), kt !== Bt._v$9 && setAttribute(Et, "fill", Bt._v$9 = kt), Bt;
            }, {
              _v$7: void 0,
              _v$8: void 0,
              _v$9: void 0
            }), st;
          })();
        })();
      })());
    }, _tmpl$$n = template$1('<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="36" cy="36" r="33"></circle><path d="M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z"></path></svg>'), _tmpl$2$2 = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><circle cx="24" cy="24.001" r="22"></circle><path d="M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path></svg>'), _tmpl$3$1 = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="11"></circle><path d="M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z"></path></svg>'), ErrorIcon = (d) => {
      const _ = useTheme(), $ = () => d.size || "m", j = () => d.fill || _.colors.icon.error;
      return createMemo((() => {
        const rt = createMemo(() => $() === "m");
        return () => rt() ? (() => {
          const et = _tmpl$$n.cloneNode(true), st = et.firstChild, pt = st.nextSibling;
          return createRenderEffect((Et) => {
            const Bt = d.class, St = j(), $t = _.colors.constant.white;
            return Bt !== Et._v$ && setAttribute(et, "class", Et._v$ = Bt), St !== Et._v$2 && setAttribute(st, "fill", Et._v$2 = St), $t !== Et._v$3 && setAttribute(pt, "fill", Et._v$3 = $t), Et;
          }, {
            _v$: void 0,
            _v$2: void 0,
            _v$3: void 0
          }), et;
        })() : (() => {
          const et = createMemo(() => $() === "s");
          return () => et() ? (() => {
            const st = _tmpl$2$2.cloneNode(true), pt = st.firstChild, Et = pt.nextSibling;
            return createRenderEffect((Bt) => {
              const St = d.class, $t = j(), kt = _.colors.constant.white;
              return St !== Bt._v$4 && setAttribute(st, "class", Bt._v$4 = St), $t !== Bt._v$5 && setAttribute(pt, "fill", Bt._v$5 = $t), kt !== Bt._v$6 && setAttribute(Et, "stroke", Bt._v$6 = kt), Bt;
            }, {
              _v$4: void 0,
              _v$5: void 0,
              _v$6: void 0
            }), st;
          })() : (() => {
            const st = _tmpl$3$1.cloneNode(true), pt = st.firstChild, Et = pt.nextSibling;
            return createRenderEffect((Bt) => {
              const St = d.class, $t = j(), kt = _.colors.constant.white;
              return St !== Bt._v$7 && setAttribute(st, "class", Bt._v$7 = St), $t !== Bt._v$8 && setAttribute(pt, "fill", Bt._v$8 = $t), kt !== Bt._v$9 && setAttribute(Et, "fill", Bt._v$9 = kt), Bt;
            }, {
              _v$7: void 0,
              _v$8: void 0,
              _v$9: void 0
            }), st;
          })();
        })();
      })());
    }, _tmpl$$m = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z"></path></svg>'), _tmpl$2$1 = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="44" height="44" viewBox="0 0 44 44" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z"></path></svg>'), _tmpl$3 = template$1('<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"></path></svg>'), LoaderIcon = (d) => {
      const _ = useTheme(), $ = () => d.size || "xs", j = () => d.fill || _.colors.icon.tertiary, rt = h$1`
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
    `, et = u`
        animation: ${rt} 1s linear infinite;
    `;
      return createMemo((() => {
        const st = createMemo(() => $() === "xs");
        return () => st() ? (() => {
          const pt = _tmpl$$m.cloneNode(true), Et = pt.firstChild;
          return createRenderEffect((Bt) => {
            const St = cn(et, d.class), $t = j();
            return St !== Bt._v$ && setAttribute(pt, "class", Bt._v$ = St), $t !== Bt._v$2 && setAttribute(Et, "fill", Bt._v$2 = $t), Bt;
          }, {
            _v$: void 0,
            _v$2: void 0
          }), pt;
        })() : (() => {
          const pt = createMemo(() => $() === "s");
          return () => pt() ? (() => {
            const Et = _tmpl$2$1.cloneNode(true), Bt = Et.firstChild;
            return createRenderEffect((St) => {
              const $t = cn(et, d.class), kt = j();
              return $t !== St._v$3 && setAttribute(Et, "class", St._v$3 = $t), kt !== St._v$4 && setAttribute(Bt, "fill", St._v$4 = kt), St;
            }, {
              _v$3: void 0,
              _v$4: void 0
            }), Et;
          })() : (() => {
            const Et = _tmpl$3.cloneNode(true), Bt = Et.firstChild;
            return createRenderEffect((St) => {
              const $t = cn(et, d.class), kt = j();
              return $t !== St._v$5 && setAttribute(Et, "class", St._v$5 = $t), kt !== St._v$6 && setAttribute(Bt, "stroke", St._v$6 = kt), St;
            }, {
              _v$5: void 0,
              _v$6: void 0
            }), Et;
          })();
        })();
      })());
    }, _tmpl$$l = template$1('<svg width="158" height="28" viewBox="0 0 158 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z" fill="#0098EA"></path><path d="M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z" fill="white"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z"></path></svg>'), TonConnectBrand = () => {
      const d = useTheme(), _ = () => d.theme === THEME.DARK ? d.colors.constant.white : d.colors.constant.black;
      return (() => {
        const $ = _tmpl$$l.cloneNode(true), j = $.firstChild, rt = j.nextSibling, et = rt.nextSibling;
        return createRenderEffect(() => setAttribute(et, "fill", _())), $;
      })();
    }, _tmpl$$k = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z"></path></svg>'), QuestionIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$k.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$j = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z"></path></svg>'), BrowserIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$j.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$i = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z"></path></svg>'), MobileIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$i.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$h = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z"></path></svg>'), DesktopIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$h.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$g = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none"><g clip-path="url(#clip0_3676_1603)"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z"></path></g><defs><clipPath id="clip0_3676_1603"><rect width="16" height="16" fill="white" transform="translate(0.5 0.000488281)"></rect></clipPath></defs></svg>'), RetryIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.accent;
      return (() => {
        const j = _tmpl$$g.cloneNode(true), rt = j.firstChild, et = rt.firstChild;
        return createRenderEffect(() => setAttribute(et, "fill", $())), j;
      })();
    }, _tmpl$$f = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z"></path></svg>'), LinkIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.accent;
      return (() => {
        const j = _tmpl$$f.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, _tmpl$$e = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none"><g clip-path="url(#clip0_3676_1274)"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z"></path></g><defs><clipPath id="clip0_3676_1274"><rect width="16" height="16" fill="white" transform="translate(0.5 0.000976562)"></rect></clipPath></defs></svg>'), WalletIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.accent;
      return (() => {
        const j = _tmpl$$e.cloneNode(true), rt = j.firstChild, et = rt.firstChild;
        return createRenderEffect(() => setAttribute(et, "fill", $())), j;
      })();
    }, _tmpl$$d = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z"></path></svg>'), SecurityIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$d.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = d.class, pt = $();
          return st !== et._v$ && setAttribute(j, "class", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$c = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z"></path></svg>'), PersonalityIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$c.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = d.class, pt = $();
          return st !== et._v$ && setAttribute(j, "class", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$b = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z"></path></svg>'), SwapIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$b.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = d.class, pt = $();
          return st !== et._v$ && setAttribute(j, "class", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$a = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z"></path></svg>'), AtWalletIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.constant.white;
      return (() => {
        const j = _tmpl$$a.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = d.class, pt = $();
          return st !== et._v$ && setAttribute(j, "class", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$9 = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z"></path></svg>'), CopyLightIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$9.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = $(), pt = $();
          return st !== et._v$ && setAttribute(j, "fill", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$8 = template$1('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z"></path></svg>'), QRIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.secondary;
      return (() => {
        const j = _tmpl$$8.cloneNode(true), rt = j.firstChild;
        return createRenderEffect(() => setAttribute(rt, "fill", $())), j;
      })();
    }, containerBorders = {
      m: "16px",
      s: "12px",
      none: "0"
    }, walletBorders = {
      m: "6px",
      s: "6px",
      none: "0"
    }, FourWalletsCard = styled.div`
    width: 60px;
    height: 60px;
    padding: 8px;
    margin-bottom: 8px;
    border-radius: ${(d) => containerBorders[d.theme.borderRadius]};
    background-color: ${(d) => d.theme.colors.background.tint};
    display: grid;
    grid-template: 1fr 1fr / 1fr 1fr;
    gap: 4px;
`, FourWalletsImage = styled(WalletImage)`
    width: 20px;
    height: 20px;
    border-radius: ${(d) => walletBorders[d.theme.borderRadius]};
`, FourWalletsItem = (d) => createComponent(WalletItem, {
      get name() {
        return d.labelLine1;
      },
      get secondLine() {
        return d.labelLine2;
      },
      get icon() {
        return createComponent(FourWalletsCard, {
          get children() {
            return createComponent(For, {
              each: [
                0,
                1,
                2,
                3
              ],
              children: (_) => createComponent(FourWalletsImage, {
                get src() {
                  return d.images[_];
                }
              })
            });
          }
        });
      },
      onClick: () => d.onClick()
    }), AT_WALLET_APP_NAME = "telegram-wallet", IMG = {
      TON: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png",
      TG: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png"
    }, WalletLabeledItem = (d) => {
      const [_] = useI18n(), $ = () => {
        if (d.wallet.appName !== AT_WALLET_APP_NAME) {
          if ("isPreferred" in d.wallet && d.wallet.isPreferred) return _("walletItem.recent", {}, "Recent");
          if (isWalletInfoCurrentlyInjected(d.wallet)) return _("walletItem.installed", {}, "Installed");
          if (d.wallet.name === "Tonkeeper") return _("walletItem.popular", {}, "Popular");
        }
      };
      return createMemo((() => {
        const j = createMemo(() => d.wallet.appName === AT_WALLET_APP_NAME);
        return () => j() ? createComponent(WalletItem, {
          get icon() {
            return d.wallet.imageUrl;
          },
          get name() {
            return _("walletItem.walletOn", {}, "Wallet in");
          },
          secondLine: "Telegram",
          get badgeUrl() {
            return IMG.TG;
          },
          onClick: () => d.onClick()
        }) : createComponent(WalletItem, {
          get icon() {
            return d.wallet.imageUrl;
          },
          get name() {
            return d.wallet.name;
          },
          get secondLine() {
            return $();
          },
          secondLineColorPrimary: false,
          onClick: () => d.onClick()
        });
      })());
    }, ScrollContainerStyled = styled.div`
    width: 100%;
    overflow-y: auto;
    max-height: ${(d) => d.maxHeight};

    scrollbar-width: none;
    &&::-webkit-scrollbar {
        display: none;
    }

    &&::-webkit-scrollbar-track {
        background: transparent;
    }

    &&::-webkit-scrollbar-thumb {
        display: none;
    }
`, ScrollDivider = styled.div`
    height: 1px;
    margin: 0 -24px;
    width: calc(100% + 48px);
    opacity: 0.08;
    background: ${(d) => d.isShown ? d.theme.colors.icon.secondary : "transparent"};
    transition: background 0.15s ease-in-out;

    ${media("mobile")} {
        width: 100%;
        margin: 0;
    }
`, [windowHeight, setWindowHeight] = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0);
    getWindow$1() && window.addEventListener("resize", () => setWindowHeight(window.innerHeight));
    const [isMobile, setIsMobile] = createSignal(isDevice("mobile")), updateIsMobile = () => setIsMobile(isDevice("mobile"));
    getWindow$1() && (window.addEventListener("resize", () => updateIsMobile()), window.addEventListener("load", () => updateIsMobile(), {
      once: true
    }));
    const ScrollContainer = (d) => {
      const [_, $] = createSignal(false), j = (st) => {
        $(st.target.scrollTop > 0);
      }, rt = () => isMobile() ? 150 : 200, et = () => d.maxHeight !== void 0 ? `${d.maxHeight}px` : `${windowHeight() - rt()}px`;
      return [
        createComponent(ScrollDivider, {
          get isShown() {
            return _();
          }
        }),
        createComponent(ScrollContainerStyled, {
          get maxHeight() {
            return et();
          },
          onScroll: j,
          get class() {
            return d.class;
          },
          get children() {
            return d.children;
          }
        })
      ];
    }, AStyled = styled.a`
    display: block;
    text-decoration: unset;
`, Link = (d) => createComponent(AStyled, mergeProps({
      get href() {
        return d.href;
      },
      get target() {
        return d.blank ? "_blank" : "_self";
      },
      get class() {
        return d.class;
      }
    }, () => d.blank ? {
      rel: "noreferrer noopener"
    } : {}, {
      get children() {
        return d.children;
      }
    })), TonConnectUiContext = createContext(), _tmpl$$7 = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z"></path></svg>'), CopyIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$7.cloneNode(true), rt = j.firstChild;
        return createRenderEffect((et) => {
          const st = d.class, pt = $();
          return st !== et._v$ && setAttribute(j, "class", et._v$ = st), pt !== et._v$2 && setAttribute(rt, "fill", et._v$2 = pt), et;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, _tmpl$$6 = template$1('<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z"></path><path d="M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z"></path></svg>'), DisconnectIcon = (d) => {
      const _ = useTheme(), $ = () => d.fill || _.colors.icon.primary;
      return (() => {
        const j = _tmpl$$6.cloneNode(true), rt = j.firstChild, et = rt.nextSibling;
        return createRenderEffect((st) => {
          const pt = $(), Et = $();
          return pt !== st._v$ && setAttribute(rt, "fill", st._v$ = pt), Et !== st._v$2 && setAttribute(et, "fill", st._v$2 = Et), st;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), j;
      })();
    }, hoverBorders$1 = {
      m: "8px",
      s: "4px",
      none: "0"
    }, dropdownBorders = {
      m: "16px",
      s: "8px",
      none: "0"
    }, AccountButtonDropdownStyled = styled.div`
    width: 256px;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
    border-radius: ${(d) => dropdownBorders[d.theme.borderRadius]};

    background-color: ${(d) => d.theme.colors.background.primary}
           
    color: ${(d) => d.theme.colors.text.primary}
`, UlStyled = styled.ul`
    background-color: ${(d) => d.theme.colors.background.primary};
    padding: 8px;
`, MenuButtonStyled = styled.button`
    display: flex;
    align-items: center;
    gap: 8px;
    height: 40px;
    padding-left: 8px;
    width: 100%;

    background-color: ${(d) => d.theme.colors.background.primary};
    border: none;
    border-radius: ${(d) => hoverBorders$1[d.theme.borderRadius]};
    cursor: pointer;

    transition: background-color, transform 0.1s ease-in-out;

    &:hover {
        background-color: ${(d) => d.theme.colors.background.secondary};
    }

    &:active {
        transform: scale(0.96);
    }
`, _tmpl$$5 = template$1("<li></li>"), MenuItemText = (d) => createComponent(Text, {
      get translationKey() {
        return d.translationKey;
      },
      fontSize: "15px",
      fontWeight: "590",
      get children() {
        return d.children;
      }
    }), AccountButtonDropdown = (d) => {
      const _ = useContext(TonConnectUiContext), [$, j] = createSignal(false), rt = () => __async(void 0, null, function* () {
        const st = toUserFriendlyAddress(_.account.address, _.account.chain === CHAIN.TESTNET);
        yield copyToClipboard(st), j(true), setTimeout(() => j(false), 1e3);
      }), et = () => {
        _.disconnect(), d.onClose();
      };
      return createComponent(AccountButtonDropdownStyled, {
        ref(st) {
          const pt = d.ref;
          typeof pt == "function" ? pt(st) : d.ref = st;
        },
        get class() {
          return d.class;
        },
        "data-tc-dropdown": "true",
        get children() {
          return createComponent(UlStyled, {
            get children() {
              return [
                (() => {
                  const st = _tmpl$$5.cloneNode(true);
                  return insert(st, createComponent(MenuButtonStyled, {
                    onClick: () => rt(),
                    get children() {
                      return [
                        createComponent(CopyIcon, {}),
                        createComponent(Show, {
                          get when() {
                            return !$();
                          },
                          get children() {
                            return createComponent(MenuItemText, {
                              translationKey: "button.dropdown.copy",
                              children: "Copy address"
                            });
                          }
                        }),
                        createComponent(Show, {
                          get when() {
                            return $();
                          },
                          get children() {
                            return createComponent(MenuItemText, {
                              translationKey: "button.dropdown.copied",
                              children: "Address copied!"
                            });
                          }
                        })
                      ];
                    }
                  })), st;
                })(),
                (() => {
                  const st = _tmpl$$5.cloneNode(true);
                  return insert(st, createComponent(MenuButtonStyled, {
                    onClick: () => et(),
                    get children() {
                      return [
                        createComponent(DisconnectIcon, {}),
                        createComponent(MenuItemText, {
                          translationKey: "button.dropdown.disconnect",
                          children: "Disconnect"
                        })
                      ];
                    }
                  })), st;
                })()
              ];
            }
          });
        }
      });
    }, borders$2 = {
      m: "16px",
      s: "8px",
      none: "0"
    }, NotificationStyled = styled.div`
    width: 256px;
    padding: 12px 16px;
    display: flex;
    gap: 9px;

    background-color: ${(d) => d.theme.colors.background.primary};
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
    border-radius: ${(d) => borders$2[d.theme.borderRadius]};
`, NotificationContentStyled = styled.div`
    width: 192px;

    > h3 {
        font-size: 15px;
    }
`, TextStyled$2 = styled(Text)`
    margin-top: 4px;
    color: ${(d) => d.theme.colors.text.secondary};
`, Notification$1 = (d) => {
      const _ = useDataAttributes(d);
      return createComponent(NotificationStyled, mergeProps({
        get class() {
          return d.class;
        },
        "data-tc-notification": "true"
      }, _, {
        get children() {
          return [
            createComponent(NotificationContentStyled, {
              get children() {
                return [
                  createComponent(H3, {
                    get translationKey() {
                      return d.header.translationKey;
                    },
                    get translationValues() {
                      return d.header.translationValues;
                    },
                    get children() {
                      return d.children;
                    }
                  }),
                  createComponent(Show, {
                    get when() {
                      return d.text;
                    },
                    get children() {
                      return createComponent(TextStyled$2, {
                        get translationKey() {
                          return d.text.translationKey;
                        },
                        get translationValues() {
                          return d.text.translationValues;
                        }
                      });
                    }
                  })
                ];
              }
            }),
            createMemo(() => d.icon)
          ];
        }
      }));
    }, LoaderIconStyled$2 = styled(LoaderIcon)`
    align-self: center;
`, ConfirmOperationNotification = (d) => {
      const _ = useContext(TonConnectUiContext), [$] = useI18n(), j = () => _.wallet && "name" in _.wallet ? _.wallet.name : $("common.yourWallet", {}, "Your wallet");
      return createComponent(Notification$1, {
        get header() {
          return {
            translationKey: "notifications.confirm.header",
            translationValues: {
              name: j()
            }
          };
        },
        get class() {
          return d.class;
        },
        get icon() {
          return createComponent(LoaderIconStyled$2, {});
        },
        "data-tc-notification-confirm": "true",
        children: "Confirm operation in your wallet"
      });
    }, ErrorIconStyled$2 = styled(ErrorIcon)`
    margin-top: 2px;
`, ErrorTransactionNotification = (d) => createComponent(Notification$1, {
      header: {
        translationKey: "notifications.transactionCanceled.header"
      },
      text: {
        translationKey: "notifications.transactionCanceled.text"
      },
      get icon() {
        return createComponent(ErrorIconStyled$2, {
          size: "xs"
        });
      },
      get class() {
        return d.class;
      },
      "data-tc-notification-tx-cancelled": "true",
      children: "Transaction cancelled"
    }), SuccessIconStyled = styled(SuccessIcon)`
    margin-top: 2px;
`, SuccessTransactionNotification = (d) => createComponent(Notification$1, {
      header: {
        translationKey: "notifications.transactionSent.header"
      },
      text: {
        translationKey: "notifications.transactionSent.text"
      },
      get icon() {
        return createComponent(SuccessIconStyled, {});
      },
      get class() {
        return d.class;
      },
      "data-tc-notification-tx-sent": "true",
      children: "Transaction sent"
    }), NotificationClass = u`
    transform: translateY(-8px);
    margin-bottom: 12px;
`, defaultConfig = {
      timeout: 4500
    }, [latestAction, setLatestAction] = createSignal(null);
    function useOpenedNotifications(d) {
      const { timeout: _ } = __spreadValues$1(__spreadValues$1({}, defaultConfig), d), [$, j] = createSignal([]), [rt, et] = createSignal([]);
      return createEffect(on(action, (st) => {
        var pt;
        if (!st || !st.showNotification || latestAction() === st || ((pt = latestAction()) == null ? void 0 : pt.name) === "confirm-transaction" && st.name === "confirm-transaction") return;
        setLatestAction(st), j((St) => St.filter(($t) => $t.action !== "confirm-transaction"));
        const Et = {
          action: st.name
        };
        j((St) => [
          ...St,
          Et
        ]);
        const Bt = setTimeout(() => {
          j((St) => St.filter(($t) => $t !== Et)), et((St) => St.filter(($t) => $t !== Bt));
        }, _);
        et((St) => [
          ...St,
          Bt
        ]);
      })), onCleanup(() => {
        rt().forEach((st) => clearTimeout(st));
      }), $;
    }
    const _tmpl$$4 = template$1('<div data-tc-list-notifications="true"></div>'), Notifications = (d) => {
      const _ = useOpenedNotifications();
      return (() => {
        const $ = _tmpl$$4.cloneNode(true);
        return insert($, createComponent(TransitionGroup, {
          onBeforeEnter: (j) => {
            animate(j, [
              {
                opacity: 0,
                transform: "translateY(0)"
              },
              {
                opacity: 1,
                transform: "translateY(-8px)"
              }
            ], {
              duration: 200
            });
          },
          onExit: (j, rt) => {
            animate(j, [
              {
                opacity: 1,
                transform: "translateY(-8px)"
              },
              {
                opacity: 0,
                transform: "translateY(-30px)"
              }
            ], {
              duration: 200
            }).finished.then(rt);
          },
          get children() {
            return createComponent(For, {
              get each() {
                return _();
              },
              children: (j) => createComponent(Switch, {
                get children() {
                  return [
                    createComponent(Match, {
                      get when() {
                        return j.action === "transaction-sent";
                      },
                      get children() {
                        return createComponent(SuccessTransactionNotification, {
                          class: NotificationClass
                        });
                      }
                    }),
                    createComponent(Match, {
                      get when() {
                        return j.action === "transaction-canceled";
                      },
                      get children() {
                        return createComponent(ErrorTransactionNotification, {
                          class: NotificationClass
                        });
                      }
                    }),
                    createComponent(Match, {
                      get when() {
                        return j.action === "confirm-transaction";
                      },
                      get children() {
                        return createComponent(ConfirmOperationNotification, {
                          class: NotificationClass
                        });
                      }
                    })
                  ];
                }
              })
            });
          }
        })), createRenderEffect(() => className($, d.class)), $;
      })();
    }, AccountButtonStyled = styled(Button)`
    background-color: ${(d) => d.theme.colors.connectButton.background};
    color: ${(d) => d.theme.colors.connectButton.foreground};
    box-shadow: ${(d) => `0 4px 24px ${rgba(d.theme.colors.constant.black, 0.16)}`};
    padding: 8px 16px 8px 12px;

    display: flex;
    align-items: center;
    gap: 4px;
    height: 40px;
`, DropdownButtonStyled = styled(AccountButtonStyled)`
    padding: 12px 16px;
    min-width: 148px;
    justify-content: center;
    background-color: ${(d) => d.theme.colors.background.primary};
`, LoaderButtonStyled$1 = styled(Button)`
    min-width: 148px;
    height: 40px;

    background-color: ${(d) => d.theme.colors.background.primary};
    color: ${(d) => d.theme.colors.connectButton.foreground};
    box-shadow: ${(d) => `0 4px 24px ${rgba(d.theme.colors.constant.black, 0.16)}`};

    display: flex;
    align-items: center;
    justify-content: center;
`, LoaderIconStyled$1 = styled(LoaderIcon)`
    height: 18px;
    width: 18px;
`, DropdownContainerStyled = styled.div`
    width: fit-content;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
`, DropdownStyled = styled(AccountButtonDropdown)`
    box-sizing: border-box;
    overflow: hidden;
    margin-top: 12px;
`, NotificationsStyled = styled(Notifications)`
    > div:first-child {
        margin-top: 20px;
    }
`;
    function getSide(d) {
      return d.split("-")[0];
    }
    function getAlignment(d) {
      return d.split("-")[1];
    }
    function getMainAxisFromPlacement(d) {
      return [
        "top",
        "bottom"
      ].includes(getSide(d)) ? "x" : "y";
    }
    function getLengthFromAxis(d) {
      return d === "y" ? "height" : "width";
    }
    function computeCoordsFromPlacement(d, _, $) {
      let { reference: j, floating: rt } = d;
      const et = j.x + j.width / 2 - rt.width / 2, st = j.y + j.height / 2 - rt.height / 2, pt = getMainAxisFromPlacement(_), Et = getLengthFromAxis(pt), Bt = j[Et] / 2 - rt[Et] / 2, St = getSide(_), $t = pt === "x";
      let kt;
      switch (St) {
        case "top":
          kt = {
            x: et,
            y: j.y - rt.height
          };
          break;
        case "bottom":
          kt = {
            x: et,
            y: j.y + j.height
          };
          break;
        case "right":
          kt = {
            x: j.x + j.width,
            y: st
          };
          break;
        case "left":
          kt = {
            x: j.x - rt.width,
            y: st
          };
          break;
        default:
          kt = {
            x: j.x,
            y: j.y
          };
      }
      switch (getAlignment(_)) {
        case "start":
          kt[pt] -= Bt * ($ && $t ? -1 : 1);
          break;
        case "end":
          kt[pt] += Bt * ($ && $t ? -1 : 1);
          break;
      }
      return kt;
    }
    const computePosition$1 = (d, _, $) => __async(void 0, null, function* () {
      const { placement: j = "bottom", strategy: rt = "absolute", middleware: et = [], platform: st } = $, pt = et.filter(Boolean), Et = yield st.isRTL == null ? void 0 : st.isRTL(_);
      if ({}.NODE_ENV !== "production") {
        if (st == null && console.error([
          "Floating UI: `platform` property was not passed to config. If you",
          "want to use Floating UI on the web, install @floating-ui/dom",
          "instead of the /core package. Otherwise, you can create your own",
          "`platform`: https://floating-ui.com/docs/platform"
        ].join(" ")), pt.filter((It) => {
          let { name: jt } = It;
          return jt === "autoPlacement" || jt === "flip";
        }).length > 1) throw new Error([
          "Floating UI: duplicate `flip` and/or `autoPlacement` middleware",
          "detected. This will lead to an infinite loop. Ensure only one of",
          "either has been passed to the `middleware` array."
        ].join(" "));
        (!d || !_) && console.error([
          "Floating UI: The reference and/or floating element was not defined",
          "when `computePosition()` was called. Ensure that both elements have",
          "been created and can be measured."
        ].join(" "));
      }
      let Bt = yield st.getElementRects({
        reference: d,
        floating: _,
        strategy: rt
      }), { x: St, y: $t } = computeCoordsFromPlacement(Bt, j, Et), kt = j, Tt = {}, Pt = 0;
      for (let It = 0; It < pt.length; It++) {
        const { name: jt, fn: Dt } = pt[It], { x: Ot, y: Ft, data: Lt, reset: Zt } = yield Dt({
          x: St,
          y: $t,
          initialPlacement: j,
          placement: kt,
          strategy: rt,
          middlewareData: Tt,
          rects: Bt,
          platform: st,
          elements: {
            reference: d,
            floating: _
          }
        });
        if (St = Ot ?? St, $t = Ft ?? $t, Tt = __spreadProps(__spreadValues$1({}, Tt), {
          [jt]: __spreadValues$1(__spreadValues$1({}, Tt[jt]), Lt)
        }), {}.NODE_ENV !== "production" && Pt > 50 && console.warn([
          "Floating UI: The middleware lifecycle appears to be running in an",
          "infinite loop. This is usually caused by a `reset` continually",
          "being returned without a break condition."
        ].join(" ")), Zt && Pt <= 50) {
          Pt++, typeof Zt == "object" && (Zt.placement && (kt = Zt.placement), Zt.rects && (Bt = Zt.rects === true ? yield st.getElementRects({
            reference: d,
            floating: _,
            strategy: rt
          }) : Zt.rects), { x: St, y: $t } = computeCoordsFromPlacement(Bt, kt, Et)), It = -1;
          continue;
        }
      }
      return {
        x: St,
        y: $t,
        placement: kt,
        strategy: rt,
        middlewareData: Tt
      };
    });
    function rectToClientRect(d) {
      return __spreadProps(__spreadValues$1({}, d), {
        top: d.y,
        left: d.x,
        right: d.x + d.width,
        bottom: d.y + d.height
      });
    }
    function getWindow(d) {
      var _;
      return ((_ = d.ownerDocument) == null ? void 0 : _.defaultView) || window;
    }
    function getComputedStyle$1(d) {
      return getWindow(d).getComputedStyle(d);
    }
    function getNodeName(d) {
      return isNode(d) ? (d.nodeName || "").toLowerCase() : "";
    }
    let uaString;
    function getUAString() {
      if (uaString) return uaString;
      const d = navigator.userAgentData;
      return d && Array.isArray(d.brands) ? (uaString = d.brands.map((_) => _.brand + "/" + _.version).join(" "), uaString) : navigator.userAgent;
    }
    function isHTMLElement(d) {
      return d instanceof getWindow(d).HTMLElement;
    }
    function isElement(d) {
      return d instanceof getWindow(d).Element;
    }
    function isNode(d) {
      return d instanceof getWindow(d).Node;
    }
    function isShadowRoot(d) {
      if (typeof ShadowRoot > "u") return false;
      const _ = getWindow(d).ShadowRoot;
      return d instanceof _ || d instanceof ShadowRoot;
    }
    function isOverflowElement(d) {
      const { overflow: _, overflowX: $, overflowY: j, display: rt } = getComputedStyle$1(d);
      return /auto|scroll|overlay|hidden/.test(_ + j + $) && ![
        "inline",
        "contents"
      ].includes(rt);
    }
    function isTableElement(d) {
      return [
        "table",
        "td",
        "th"
      ].includes(getNodeName(d));
    }
    function isContainingBlock(d) {
      const _ = /firefox/i.test(getUAString()), $ = getComputedStyle$1(d), j = $.backdropFilter || $.WebkitBackdropFilter;
      return $.transform !== "none" || $.perspective !== "none" || (j ? j !== "none" : false) || _ && $.willChange === "filter" || _ && ($.filter ? $.filter !== "none" : false) || [
        "transform",
        "perspective"
      ].some((rt) => $.willChange.includes(rt)) || [
        "paint",
        "layout",
        "strict",
        "content"
      ].some((rt) => {
        const et = $.contain;
        return et != null ? et.includes(rt) : false;
      });
    }
    function isLayoutViewport() {
      return !/^((?!chrome|android).)*safari/i.test(getUAString());
    }
    function isLastTraversableNode(d) {
      return [
        "html",
        "body",
        "#document"
      ].includes(getNodeName(d));
    }
    const min = Math.min, max = Math.max, round = Math.round, FALLBACK_SCALE = {
      x: 1,
      y: 1
    };
    function getScale(d) {
      const _ = !isElement(d) && d.contextElement ? d.contextElement : isElement(d) ? d : null;
      if (!_) return FALLBACK_SCALE;
      const $ = _.getBoundingClientRect(), j = getComputedStyle$1(_);
      if (j.boxSizing !== "border-box") return isHTMLElement(_) ? {
        x: _.offsetWidth > 0 && round($.width) / _.offsetWidth || 1,
        y: _.offsetHeight > 0 && round($.height) / _.offsetHeight || 1
      } : FALLBACK_SCALE;
      let rt = $.width / parseFloat(j.width), et = $.height / parseFloat(j.height);
      return (!rt || !Number.isFinite(rt)) && (rt = 1), (!et || !Number.isFinite(et)) && (et = 1), {
        x: rt,
        y: et
      };
    }
    function getBoundingClientRect(d, _, $, j) {
      var rt, et, st, pt;
      _ === void 0 && (_ = false), $ === void 0 && ($ = false);
      const Et = d.getBoundingClientRect();
      let Bt = FALLBACK_SCALE;
      _ && (j ? isElement(j) && (Bt = getScale(j)) : Bt = getScale(d));
      const St = isElement(d) ? getWindow(d) : window, $t = !isLayoutViewport() && $, kt = (Et.left + ($t && (rt = (et = St.visualViewport) == null ? void 0 : et.offsetLeft) != null ? rt : 0)) / Bt.x, Tt = (Et.top + ($t && (st = (pt = St.visualViewport) == null ? void 0 : pt.offsetTop) != null ? st : 0)) / Bt.y, Pt = Et.width / Bt.x, It = Et.height / Bt.y;
      return {
        width: Pt,
        height: It,
        top: Tt,
        right: kt + Pt,
        bottom: Tt + It,
        left: kt,
        x: kt,
        y: Tt
      };
    }
    function getDocumentElement(d) {
      return ((isNode(d) ? d.ownerDocument : d.document) || window.document).documentElement;
    }
    function getNodeScroll(d) {
      return isElement(d) ? {
        scrollLeft: d.scrollLeft,
        scrollTop: d.scrollTop
      } : {
        scrollLeft: d.pageXOffset,
        scrollTop: d.pageYOffset
      };
    }
    function getWindowScrollBarX(d) {
      return getBoundingClientRect(getDocumentElement(d)).left + getNodeScroll(d).scrollLeft;
    }
    function getRectRelativeToOffsetParent(d, _, $) {
      const j = isHTMLElement(_), rt = getDocumentElement(_), et = getBoundingClientRect(d, true, $ === "fixed", _);
      let st = {
        scrollLeft: 0,
        scrollTop: 0
      };
      const pt = {
        x: 0,
        y: 0
      };
      if (j || !j && $ !== "fixed") if ((getNodeName(_) !== "body" || isOverflowElement(rt)) && (st = getNodeScroll(_)), isHTMLElement(_)) {
        const Et = getBoundingClientRect(_, true);
        pt.x = Et.x + _.clientLeft, pt.y = Et.y + _.clientTop;
      } else rt && (pt.x = getWindowScrollBarX(rt));
      return {
        x: et.left + st.scrollLeft - pt.x,
        y: et.top + st.scrollTop - pt.y,
        width: et.width,
        height: et.height
      };
    }
    function getParentNode(d) {
      if (getNodeName(d) === "html") return d;
      const _ = d.assignedSlot || d.parentNode || (isShadowRoot(d) ? d.host : null) || getDocumentElement(d);
      return isShadowRoot(_) ? _.host : _;
    }
    function getTrueOffsetParent(d) {
      return !isHTMLElement(d) || getComputedStyle$1(d).position === "fixed" ? null : d.offsetParent;
    }
    function getContainingBlock(d) {
      let _ = getParentNode(d);
      for (; isHTMLElement(_) && !isLastTraversableNode(_); ) {
        if (isContainingBlock(_)) return _;
        _ = getParentNode(_);
      }
      return null;
    }
    function getOffsetParent(d) {
      const _ = getWindow(d);
      let $ = getTrueOffsetParent(d);
      for (; $ && isTableElement($) && getComputedStyle$1($).position === "static"; ) $ = getTrueOffsetParent($);
      return $ && (getNodeName($) === "html" || getNodeName($) === "body" && getComputedStyle$1($).position === "static" && !isContainingBlock($)) ? _ : $ || getContainingBlock(d) || _;
    }
    function getDimensions(d) {
      if (isHTMLElement(d)) return {
        width: d.offsetWidth,
        height: d.offsetHeight
      };
      const _ = getBoundingClientRect(d);
      return {
        width: _.width,
        height: _.height
      };
    }
    function convertOffsetParentRelativeRectToViewportRelativeRect(d) {
      let { rect: _, offsetParent: $, strategy: j } = d;
      const rt = isHTMLElement($), et = getDocumentElement($);
      if ($ === et) return _;
      let st = {
        scrollLeft: 0,
        scrollTop: 0
      }, pt = {
        x: 1,
        y: 1
      };
      const Et = {
        x: 0,
        y: 0
      };
      if ((rt || !rt && j !== "fixed") && ((getNodeName($) !== "body" || isOverflowElement(et)) && (st = getNodeScroll($)), isHTMLElement($))) {
        const Bt = getBoundingClientRect($);
        pt = getScale($), Et.x = Bt.x + $.clientLeft, Et.y = Bt.y + $.clientTop;
      }
      return {
        width: _.width * pt.x,
        height: _.height * pt.y,
        x: _.x * pt.x - st.scrollLeft * pt.x + Et.x,
        y: _.y * pt.y - st.scrollTop * pt.y + Et.y
      };
    }
    function getViewportRect(d, _) {
      const $ = getWindow(d), j = getDocumentElement(d), rt = $.visualViewport;
      let et = j.clientWidth, st = j.clientHeight, pt = 0, Et = 0;
      if (rt) {
        et = rt.width, st = rt.height;
        const Bt = isLayoutViewport();
        (Bt || !Bt && _ === "fixed") && (pt = rt.offsetLeft, Et = rt.offsetTop);
      }
      return {
        width: et,
        height: st,
        x: pt,
        y: Et
      };
    }
    function getDocumentRect(d) {
      var _;
      const $ = getDocumentElement(d), j = getNodeScroll(d), rt = (_ = d.ownerDocument) == null ? void 0 : _.body, et = max($.scrollWidth, $.clientWidth, rt ? rt.scrollWidth : 0, rt ? rt.clientWidth : 0), st = max($.scrollHeight, $.clientHeight, rt ? rt.scrollHeight : 0, rt ? rt.clientHeight : 0);
      let pt = -j.scrollLeft + getWindowScrollBarX(d);
      const Et = -j.scrollTop;
      return getComputedStyle$1(rt || $).direction === "rtl" && (pt += max($.clientWidth, rt ? rt.clientWidth : 0) - et), {
        width: et,
        height: st,
        x: pt,
        y: Et
      };
    }
    function getNearestOverflowAncestor(d) {
      const _ = getParentNode(d);
      return isLastTraversableNode(_) ? d.ownerDocument.body : isHTMLElement(_) && isOverflowElement(_) ? _ : getNearestOverflowAncestor(_);
    }
    function getOverflowAncestors(d, _) {
      var $;
      _ === void 0 && (_ = []);
      const j = getNearestOverflowAncestor(d), rt = j === (($ = d.ownerDocument) == null ? void 0 : $.body), et = getWindow(j);
      return rt ? _.concat(et, et.visualViewport || [], isOverflowElement(j) ? j : []) : _.concat(j, getOverflowAncestors(j));
    }
    function getInnerBoundingClientRect(d, _) {
      const $ = getBoundingClientRect(d, true, _ === "fixed"), j = $.top + d.clientTop, rt = $.left + d.clientLeft, et = isHTMLElement(d) ? getScale(d) : {
        x: 1,
        y: 1
      }, st = d.clientWidth * et.x, pt = d.clientHeight * et.y, Et = rt * et.x, Bt = j * et.y;
      return {
        top: Bt,
        left: Et,
        right: Et + st,
        bottom: Bt + pt,
        x: Et,
        y: Bt,
        width: st,
        height: pt
      };
    }
    function getClientRectFromClippingAncestor(d, _, $) {
      return _ === "viewport" ? rectToClientRect(getViewportRect(d, $)) : isElement(_) ? getInnerBoundingClientRect(_, $) : rectToClientRect(getDocumentRect(getDocumentElement(d)));
    }
    function getClippingElementAncestors(d, _) {
      const $ = _.get(d);
      if ($) return $;
      let j = getOverflowAncestors(d).filter((pt) => isElement(pt) && getNodeName(pt) !== "body"), rt = null;
      const et = getComputedStyle$1(d).position === "fixed";
      let st = et ? getParentNode(d) : d;
      for (; isElement(st) && !isLastTraversableNode(st); ) {
        const pt = getComputedStyle$1(st), Et = isContainingBlock(st);
        (et ? !Et && !rt : !Et && pt.position === "static" && !!rt && [
          "absolute",
          "fixed"
        ].includes(rt.position)) ? j = j.filter((St) => St !== st) : rt = pt, st = getParentNode(st);
      }
      return _.set(d, j), j;
    }
    function getClippingRect(d) {
      let { element: _, boundary: $, rootBoundary: j, strategy: rt } = d;
      const st = [
        ...$ === "clippingAncestors" ? getClippingElementAncestors(_, this._c) : [].concat($),
        j
      ], pt = st[0], Et = st.reduce((Bt, St) => {
        const $t = getClientRectFromClippingAncestor(_, St, rt);
        return Bt.top = max($t.top, Bt.top), Bt.right = min($t.right, Bt.right), Bt.bottom = min($t.bottom, Bt.bottom), Bt.left = max($t.left, Bt.left), Bt;
      }, getClientRectFromClippingAncestor(_, pt, rt));
      return {
        width: Et.right - Et.left,
        height: Et.bottom - Et.top,
        x: Et.left,
        y: Et.top
      };
    }
    const platform$2 = {
      getClippingRect,
      convertOffsetParentRelativeRectToViewportRelativeRect,
      isElement,
      getDimensions,
      getOffsetParent,
      getDocumentElement,
      getScale,
      getElementRects(d) {
        return __async(this, null, function* () {
          let { reference: _, floating: $, strategy: j } = d;
          const rt = this.getOffsetParent || getOffsetParent, et = this.getDimensions;
          return {
            reference: getRectRelativeToOffsetParent(_, yield rt($), j),
            floating: __spreadValues$1({
              x: 0,
              y: 0
            }, yield et($))
          };
        });
      },
      getClientRects: (d) => Array.from(d.getClientRects()),
      isRTL: (d) => getComputedStyle$1(d).direction === "rtl"
    };
    function autoUpdate(d, _, $, j) {
      j === void 0 && (j = {});
      const { ancestorScroll: rt = true, ancestorResize: et = true, elementResize: st = true, animationFrame: pt = false } = j, Et = rt && !pt, Bt = Et || et ? [
        ...isElement(d) ? getOverflowAncestors(d) : d.contextElement ? getOverflowAncestors(d.contextElement) : [],
        ...getOverflowAncestors(_)
      ] : [];
      Bt.forEach((Pt) => {
        Et && Pt.addEventListener("scroll", $, {
          passive: true
        }), et && Pt.addEventListener("resize", $);
      });
      let St = null;
      if (st) {
        let Pt = true;
        St = new ResizeObserver(() => {
          Pt || $(), Pt = false;
        }), isElement(d) && !pt && St.observe(d), !isElement(d) && d.contextElement && !pt && St.observe(d.contextElement), St.observe(_);
      }
      let $t, kt = pt ? getBoundingClientRect(d) : null;
      pt && Tt();
      function Tt() {
        const Pt = getBoundingClientRect(d);
        kt && (Pt.x !== kt.x || Pt.y !== kt.y || Pt.width !== kt.width || Pt.height !== kt.height) && $(), kt = Pt, $t = requestAnimationFrame(Tt);
      }
      return $(), () => {
        var Pt;
        Bt.forEach((It) => {
          Et && It.removeEventListener("scroll", $), et && It.removeEventListener("resize", $);
        }), (Pt = St) == null || Pt.disconnect(), St = null, pt && cancelAnimationFrame($t);
      };
    }
    const computePosition = (d, _, $) => {
      const j = /* @__PURE__ */ new Map(), rt = __spreadValues$1({
        platform: platform$2
      }, $), et = __spreadProps(__spreadValues$1({}, rt.platform), {
        _c: j
      });
      return computePosition$1(d, _, __spreadProps(__spreadValues$1({}, rt), {
        platform: et
      }));
    };
    function P(d, _, $) {
      let j = () => {
        var $t;
        return ($t = $ == null ? void 0 : $.placement) != null ? $t : "bottom";
      }, rt = () => {
        var $t;
        return ($t = $ == null ? void 0 : $.strategy) != null ? $t : "absolute";
      }, [et, st] = createSignal({
        x: null,
        y: null,
        placement: j(),
        strategy: rt(),
        middlewareData: {}
      }), [pt, Et] = createSignal();
      createEffect(() => {
        let $t = pt();
        if ($t) throw $t.value;
      });
      let Bt = createMemo(() => (d(), _(), {}));
      function St() {
        let $t = d(), kt = _();
        if ($t && kt) {
          let Tt = Bt();
          computePosition($t, kt, {
            middleware: $ == null ? void 0 : $.middleware,
            placement: j(),
            strategy: rt()
          }).then((Pt) => {
            Tt === Bt() && st(Pt);
          }, (Pt) => {
            Et(Pt);
          });
        }
      }
      return createEffect(() => {
        let $t = d(), kt = _();
        if (j(), rt(), $t && kt) if ($ != null && $.whileElementsMounted) {
          let Tt = $.whileElementsMounted($t, kt, St);
          Tt && onCleanup(Tt);
        } else St();
      }), {
        get x() {
          return et().x;
        },
        get y() {
          return et().y;
        },
        get placement() {
          return et().placement;
        },
        get strategy() {
          return et().strategy;
        },
        get middlewareData() {
          return et().middlewareData;
        },
        update: St
      };
    }
    const _tmpl$$3 = template$1('<tc-root data-tc-dropdown-container="true"></tc-root>'), AccountButton = () => {
      const d = useTheme(), _ = useContext(ConnectorContext), $ = useContext(TonConnectUiContext), [j, rt] = createSignal(false), [et, st] = createSignal(_.account), [pt, Et] = createSignal(!_.account);
      let Bt;
      const [St, $t] = createSignal(), [kt, Tt] = createSignal(), Pt = P(kt, St, {
        whileElementsMounted: autoUpdate,
        placement: "bottom-end"
      }), It = () => {
        const Ot = et();
        if (Ot) {
          const Ft = toUserFriendlyAddress(Ot.address, Ot.chain === CHAIN.TESTNET);
          return Ft.slice(0, 4) + "\u2026" + Ft.slice(-4);
        }
        return "";
      };
      $.connectionRestored.then(() => Et(false));
      const jt = _.onStatusChange((Ot) => {
        if (!Ot) {
          rt(false), st(null), Et(false);
          return;
        }
        st(Ot.account), Et(false);
      }), Dt = (Ot) => {
        if (!et() || !j()) return;
        const Ft = kt().contains(Ot.target), Lt = Bt.contains(Ot.target);
        !Ft && !Lt && rt(false);
      };
      return onMount(() => {
        document.body.addEventListener("click", Dt);
      }), onCleanup(() => {
        document.body.removeEventListener("click", Dt), jt();
      }), createComponent(Dynamic, {
        component: globalStylesTag,
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return pt();
              },
              get children() {
                return createComponent(LoaderButtonStyled$1, {
                  disabled: true,
                  "data-tc-connect-button-loading": "true",
                  get children() {
                    return createComponent(LoaderIconStyled$1, {});
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return !pt();
              },
              get children() {
                return [
                  createComponent(Show, {
                    get when() {
                      return !et();
                    },
                    get children() {
                      return createComponent(AccountButtonStyled, {
                        onClick: () => $.openModal(),
                        "data-tc-connect-button": "true",
                        scale: "s",
                        get children() {
                          return [
                            createComponent(TonIcon, {
                              get fill() {
                                return d.colors.connectButton.foreground;
                              }
                            }),
                            createComponent(Text, {
                              translationKey: "button.connectWallet",
                              fontSize: "15px",
                              lineHeight: "18px",
                              fontWeight: "590",
                              get color() {
                                return d.colors.connectButton.foreground;
                              },
                              children: "Connect wallet"
                            })
                          ];
                        }
                      });
                    }
                  }),
                  createComponent(Show, {
                    get when() {
                      return et();
                    },
                    get children() {
                      return createComponent(DropdownContainerStyled, {
                        get children() {
                          return [
                            createComponent(DropdownButtonStyled, {
                              onClick: () => rt((Ot) => !Ot),
                              ref: Tt,
                              "data-tc-dropdown-button": "true",
                              scale: "s",
                              get children() {
                                return [
                                  createComponent(Text, {
                                    fontSize: "15px",
                                    fontWeight: "590",
                                    lineHeight: "18px",
                                    get children() {
                                      return It();
                                    }
                                  }),
                                  createComponent(ArrowIcon, {
                                    direction: "bottom"
                                  })
                                ];
                              }
                            }),
                            createComponent(Portal, {
                              get children() {
                                const Ot = untrack(() => document.importNode(_tmpl$$3, true));
                                return use($t, Ot), Ot.style.setProperty("z-index", "999"), Ot._$owner = getOwner(), insert(Ot, createComponent(Transition, {
                                  onBeforeEnter: (Ft) => {
                                    animate(Ft, [
                                      {
                                        opacity: 0,
                                        transform: "translateY(-8px)"
                                      },
                                      {
                                        opacity: 1,
                                        transform: "translateY(0)"
                                      }
                                    ], {
                                      duration: 150
                                    });
                                  },
                                  onExit: (Ft, Lt) => {
                                    animate(Ft, [
                                      {
                                        opacity: 1,
                                        transform: "translateY(0)"
                                      },
                                      {
                                        opacity: 0,
                                        transform: "translateY(-8px)"
                                      }
                                    ], {
                                      duration: 150
                                    }).finished.then(Lt);
                                  },
                                  get children() {
                                    return createComponent(Show, {
                                      get when() {
                                        return j();
                                      },
                                      get children() {
                                        return createComponent(DropdownStyled, {
                                          get hidden() {
                                            return !j();
                                          },
                                          onClose: () => rt(false),
                                          ref(Ft) {
                                            const Lt = Bt;
                                            typeof Lt == "function" ? Lt(Ft) : Bt = Ft;
                                          }
                                        });
                                      }
                                    });
                                  }
                                }), null), insert(Ot, createComponent(NotificationsStyled, {}), null), createRenderEffect((Ft) => {
                                  var Lt, Zt;
                                  const Kt = Pt.strategy, ar = `${(Lt = Pt.y) != null ? Lt : 0}px`, sr = `${(Zt = Pt.x) != null ? Zt : 0}px`;
                                  return Kt !== Ft._v$ && Ot.style.setProperty("position", Ft._v$ = Kt), ar !== Ft._v$2 && Ot.style.setProperty("top", Ft._v$2 = ar), sr !== Ft._v$3 && Ot.style.setProperty("left", Ft._v$3 = sr), Ft;
                                }, {
                                  _v$: void 0,
                                  _v$2: void 0,
                                  _v$3: void 0
                                }), Ot;
                              }
                            })
                          ];
                        }
                      });
                    }
                  })
                ];
              }
            })
          ];
        }
      });
    }, StyledModal = styled(Modal)`
    padding-left: 24px;
    padding-right: 24px;
    padding-top: 18px;
    padding-bottom: 0;

    ${media("mobile")} {
        padding-left: 0;
        padding-right: 0;

        min-height: 364px;
    }
`, H1Styled$8 = styled(H1)`
    margin-top: 12px;

    ${media("mobile")} {
        padding: 0 10px;
    }
`, LoaderContainerStyled = styled.div`
    margin: 30px 0;
    width: 100%;
    display: flex;
    justify-content: center;

    ${media("mobile")} {
        height: 160px;
        align-items: center;
    }
`;
    styled(Text)`
    min-width: 84px;
    text-align: center;
    font-weight: 590;
`;
    styled(TabBar)`
    margin: 0 auto 22px;
`;
    const [appState, setAppState] = createStore({
      buttonRootId: null,
      language: "en",
      returnStrategy: "back",
      twaReturnUrl: void 0,
      walletsListConfiguration: {},
      enableAndroidBackHandler: true
    });
    function uniq(d) {
      return [
        ...new Set(d)
      ];
    }
    function mergeConcat(d, _, $) {
      return _.map((j) => {
        const rt = $.find((et) => et[d] === j[d]);
        return $ = $.filter((et) => et[d] !== j[d]), rt === void 0 ? j : rt;
      }).concat($);
    }
    function uiWalletToWalletInfo(d) {
      return "jsBridgeKey" in d ? __spreadProps(__spreadValues$1({}, d), {
        injected: TonConnect.isWalletInjected(d.jsBridgeKey),
        embedded: TonConnect.isInsideWalletBrowser(d.jsBridgeKey)
      }) : d;
    }
    function applyWalletsListConfiguration(d, _) {
      var $;
      return _ && ($ = _.includeWallets) != null && $.length && (d = mergeConcat("name", d, _.includeWallets.map(uiWalletToWalletInfo))), d;
    }
    function supportsDesktop(d) {
      return d.platforms.some((_) => [
        "macos",
        "linux",
        "windows"
      ].includes(_));
    }
    function supportsMobile(d) {
      return d.platforms.some((_) => [
        "ios",
        "android"
      ].includes(_));
    }
    function supportsExtension(d) {
      return d.platforms.some((_) => [
        "chrome",
        "firefox",
        "safari"
      ].includes(_));
    }
    function eqWalletName(d, _) {
      return _ ? d.name.toLowerCase() === _.toLowerCase() || d.appName.toLowerCase() === _.toLowerCase() : false;
    }
    const DesktopSelectWalletModalStyled = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
`, H1Styled$7 = styled(H1)`
    margin-bottom: 18px;
`;
    styled.div`
    height: 1px;
    margin: 0 -24px;
    width: calc(100% + 48px);
    opacity: 0.12;
    background: ${(d) => d.isShown ? d.theme.colors.icon.secondary : "transparent"};
    transition: background 0.15s ease-in-out;

    ${media("mobile")} {
        width: 100%;
    }
`;
    const WalletsUl = styled.ul`
    display: grid;
    grid-template-columns: repeat(auto-fit, 92px);
    grid-template-rows: auto;
    align-content: flex-start;
    justify-content: center;
    row-gap: 8px;
    width: 100%;
    padding: 0 0 16px;
    align-self: flex-start;
    max-width: 400px;
    margin: 0 auto;
    list-style: none;

    > li {
        display: block;
        height: fit-content;
    }

    ${media("mobile")} {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 0;
        padding: 8px 12px 16px;
        max-width: none;

        > li {
            min-width: 78px;
            display: flex;
        }

        > li > * {
            width: 100%;
        }
    }
`;
    styled(Button)`
    display: block;
    margin: 0 auto 1px;
    font-size: 15px;
`;
    const StyledIconButton$3 = styled(IconButton)`
    position: absolute;
    top: 16px;
    left: 16px;
`, WalletLabeledItemStyled = styled(WalletLabeledItem)`
    height: 100%;
`, _tmpl$$2 = template$1("<li></li>"), AllWalletsListModal = (d) => {
      const _ = () => isMobile() ? void 0 : 510, $ = () => isMobile() ? d.walletsList.filter(supportsMobile) : d.walletsList;
      return createComponent(DesktopSelectWalletModalStyled, {
        "data-tc-wallets-modal-list": "true",
        get children() {
          return [
            createComponent(StyledIconButton$3, {
              icon: "arrow",
              onClick: () => d.onBack()
            }),
            createComponent(H1Styled$7, {
              translationKey: "walletModal.wallets",
              children: "Wallets"
            }),
            createComponent(ScrollContainer, {
              get maxHeight() {
                return _();
              },
              get children() {
                return createComponent(WalletsUl, {
                  get children() {
                    return createComponent(For, {
                      get each() {
                        return $();
                      },
                      children: (j) => (() => {
                        const rt = _tmpl$$2.cloneNode(true);
                        return insert(rt, createComponent(WalletLabeledItemStyled, {
                          wallet: j,
                          onClick: () => d.onSelect(j)
                        })), rt;
                      })()
                    });
                  }
                });
              }
            })
          ];
        }
      });
    }, tgButtonBorders = {
      m: "16px",
      s: "12px",
      none: "0"
    }, tgIconBorders = {
      m: "6px",
      s: "6px",
      none: "0"
    }, DesktopConnectionModalStyled = styled.div`
    display: flex;
    flex-direction: column;
`, BodyStyled$1 = styled.div`
    flex: 1;
    margin-top: ${(d) => d.qr ? "0" : "18px"};
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 232px;
`, QRCodeStyled$1 = styled(QRCode)`
    margin-bottom: 24px;
`, H1Styled$6 = styled(H1)`
    max-width: 288px;
    margin: 0 auto 2px;
`, H2Styled$4 = styled(H2)`
    max-width: 288px;
    text-align: center;
    margin: 0 auto 20px;
`, StyledIconButton$2 = styled(IconButton)`
    position: absolute;
    top: 16px;
    left: 16px;
`, ButtonsContainerStyled$1 = styled.div`
    display: flex;
    justify-content: center;
    gap: 8px;
    padding-bottom: 16px;
`, BottomButtonsContainerStyled = styled(ButtonsContainerStyled$1)`
    padding-bottom: 0;
`, FooterButton$1 = styled(Button)`
    margin-bottom: 24px;
`, LoaderStyled$1 = styled(LoaderIcon)`
    margin-bottom: 18px;
    margin-top: 2px;
`, ErrorIconStyled$1 = styled(ErrorIcon)`
    margin-bottom: 16px;
`, BodyTextStyled$1 = styled(H2)`
    color: ${(d) => d.theme.colors.text.secondary};
    text-align: center;
    margin-bottom: 20px;
`, TgButtonStyled = styled(Button)`
    margin-top: -8px;
    margin-bottom: 24px;
    width: 100%;
    padding: 12px 12px 12px 20px;
    border-radius: ${(d) => tgButtonBorders[d.theme.borderRadius]};
    font-size: 16px;
    line-height: 20px;
`, TgImageStyled = styled(Image$1)`
    width: 32px;
    height: 32px;
    border-radius: ${(d) => tgIconBorders[d.theme.borderRadius]};
`, Translation = (d) => {
      const [_] = useI18n();
      return createMemo(() => {
        var $;
        return _(d.translationKey, d.translationValues, ($ = d.children) == null ? void 0 : $.toString());
      });
    };
    function addReturnStrategy(d, _) {
      let $;
      typeof _ == "string" ? $ = _ : $ = isInTMA() ? _.twaReturnUrl || _.returnStrategy : "none";
      const j = addQueryParameter(d, "ret", $);
      if (!isTelegramUrl(d)) return j;
      const rt = j.slice(j.lastIndexOf("&") + 1);
      return j.slice(0, j.lastIndexOf("&")) + "-" + encodeTelegramUrlParameters(rt);
    }
    function redirectToTelegram(d, _) {
      _ = __spreadValues$1({}, _);
      const $ = convertToTGDirectLink(d), j = new URL($);
      if (j.searchParams.has("startapp") || j.searchParams.append("startapp", "tonconnect"), isInTelegramBrowser()) {
        _.returnStrategy = "back";
        const rt = addReturnStrategy(j.toString(), _.returnStrategy);
        openLinkBlank(rt);
      } else if (isInTMA()) if (isTmaPlatform("ios", "android", "macos", "tdesktop", "web")) {
        _.returnStrategy = "back";
        const rt = addReturnStrategy(j.toString(), _.returnStrategy);
        sendOpenTelegramLink(rt);
      } else isTmaPlatform("weba") ? sendOpenTelegramLink(addReturnStrategy(j.toString(), _)) : openLinkBlank(addReturnStrategy(j.toString(), _));
      else if (isOS("ios")) {
        _.returnStrategy === "back" && (isBrowser("safari") ? _.returnStrategy = "back" : isBrowser("chrome") ? _.returnStrategy = "googlechrome://" : isBrowser("firefox") ? _.returnStrategy = "firefox://" : isBrowser("opera") ? _.returnStrategy = "opera-http://" : _.returnStrategy = location.href);
        const rt = isBrowser("chrome"), et = isBrowser("firefox");
        if ((rt || et) && !_.forceRedirect) {
          const pt = addReturnStrategy(j.toString(), _.returnStrategy), Et = convertToTGDeepLink(pt);
          openDeeplinkWithFallback(Et, () => openLinkBlank(pt));
        } else {
          const pt = addReturnStrategy(j.toString(), _.returnStrategy);
          openLinkBlank(pt);
        }
      } else if (isOS("android")) {
        _.returnStrategy = "back";
        const rt = isBrowser("chrome"), et = isBrowser("firefox");
        if ((rt || et) && !_.forceRedirect) {
          const pt = addReturnStrategy(j.toString(), _.returnStrategy), Et = convertToTGDeepLink(pt);
          openDeeplinkWithFallback(Et, () => openLinkBlank(pt));
        } else {
          const pt = addReturnStrategy(j.toString(), _.returnStrategy);
          openLinkBlank(pt);
        }
      } else if (isOS("ipad")) {
        _.returnStrategy === "back" && (isBrowser("safari") ? _.returnStrategy = "back" : isBrowser("chrome") ? _.returnStrategy = "googlechrome://" : isBrowser("firefox") ? _.returnStrategy = "firefox://" : isBrowser("opera") ? _.returnStrategy = "opera-http://" : _.returnStrategy = location.href);
        const rt = isBrowser("chrome"), et = isBrowser("firefox"), st = (rt || et) && !_.forceRedirect, pt = addReturnStrategy(j.toString(), _.returnStrategy);
        if (st) {
          const Et = convertToTGDeepLink(pt);
          openDeeplinkWithFallback(Et, () => openLinkBlank(pt));
        } else openLinkBlank(pt);
      } else if (isOS("macos", "windows", "linux")) {
        _.returnStrategy = "back", _.twaReturnUrl = void 0;
        const rt = addReturnStrategy(j.toString(), _.returnStrategy);
        if (_.forceRedirect) openLinkBlank(rt);
        else {
          const et = convertToTGDeepLink(rt);
          openDeeplinkWithFallback(et, () => openLinkBlank(rt));
        }
      } else openLinkBlank(addReturnStrategy(j.toString(), _));
    }
    function redirectToWallet(d, _, $, j) {
      if ($ = __spreadValues$1({}, $), isInTelegramBrowser()) if (isOS("ios", "android")) $.returnStrategy === "back" && ($.returnStrategy = "tg://resolve"), j("universal-link"), openLink(addReturnStrategy(d, $.returnStrategy), "_self");
      else {
        j("universal-link");
        const rt = addReturnStrategy(d, $.returnStrategy);
        openLinkBlank(rt);
      }
      else if (isInTMA()) if (isTmaPlatform("ios", "android")) {
        $.returnStrategy === "back" && ($.returnStrategy = "tg://resolve"), j("universal-link");
        const rt = addReturnStrategy(d, $.returnStrategy);
        sendOpenTelegramLink(rt, () => {
          j("universal-link"), openLinkBlank(rt);
        });
      } else if (isTmaPlatform("macos", "tdesktop")) {
        $.returnStrategy === "back" && ($.returnStrategy = "tg://resolve");
        const rt = addReturnStrategy(d, $.returnStrategy);
        !!_ && !$.forceRedirect ? (j("custom-deeplink"), openDeeplinkWithFallback(toDeeplink(rt, _), () => {
          j("universal-link"), openLinkBlank(rt);
        })) : (j("universal-link"), openLinkBlank(rt));
      } else if (isTmaPlatform("weba")) {
        $.returnStrategy === "back" && (isBrowser("safari") ? $.returnStrategy = location.href : isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = location.href);
        const rt = addReturnStrategy(d, $.returnStrategy);
        !!_ && !$.forceRedirect ? (j("custom-deeplink"), openDeeplinkWithFallback(toDeeplink(rt, _), () => {
          j("universal-link"), openLinkBlank(rt);
        })) : (j("universal-link"), openLinkBlank(rt));
      } else if (isTmaPlatform("web")) {
        $.returnStrategy === "back" && (isBrowser("safari") ? $.returnStrategy = location.href : isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = location.href);
        const rt = addReturnStrategy(d, $.returnStrategy);
        !!_ && !$.forceRedirect ? (j("custom-deeplink"), openDeeplinkWithFallback(toDeeplink(rt, _), () => {
          j("universal-link"), openLinkBlank(rt);
        })) : (j("universal-link"), openLinkBlank(rt));
      } else {
        j("universal-link");
        const rt = addReturnStrategy(d, $.returnStrategy);
        openLinkBlank(rt);
      }
      else if (isOS("ios")) $.returnStrategy === "back" && (isBrowser("safari") ? $.returnStrategy = "none" : isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = location.href), isBrowser("chrome") ? (j("universal-link"), openLink(addReturnStrategy(d, $.returnStrategy), "_self")) : (j("universal-link"), openLinkBlank(addReturnStrategy(d, $.returnStrategy)));
      else if (isOS("android")) $.returnStrategy === "back" && (isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = location.href), j("universal-link"), openLinkBlank(addReturnStrategy(d, $.returnStrategy));
      else if (isOS("ipad")) $.returnStrategy === "back" && (isBrowser("safari") ? $.returnStrategy = "none" : isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = location.href), isBrowser("chrome") ? (j("universal-link"), openLink(addReturnStrategy(d, $.returnStrategy), "_self")) : (j("universal-link"), openLinkBlank(addReturnStrategy(d, $.returnStrategy)));
      else if (isOS("macos", "windows", "linux")) {
        $.returnStrategy === "back" && (isBrowser("safari") ? $.returnStrategy = "none" : isBrowser("chrome") ? $.returnStrategy = "googlechrome://" : isBrowser("firefox") ? $.returnStrategy = "firefox://" : isBrowser("opera") ? $.returnStrategy = "opera-http://" : $.returnStrategy = "none");
        const rt = addReturnStrategy(d, $.returnStrategy);
        !!_ && !$.forceRedirect ? (j("custom-deeplink"), openDeeplinkWithFallback(toDeeplink(rt, _), () => {
          j("universal-link"), openLinkBlank(rt);
        })) : (j("universal-link"), openLinkBlank(rt));
      } else j("universal-link"), openLinkBlank(addReturnStrategy(d, $.returnStrategy));
    }
    function addQueryParameter(d, _, $) {
      const j = new URL(d);
      return j.searchParams.append(_, $), j.toString();
    }
    function convertToTGDirectLink(d) {
      const _ = new URL(d);
      return _.searchParams.has("attach") && (_.searchParams.delete("attach"), _.pathname += "/start"), _.toString();
    }
    function convertToTGDeepLink(d) {
      const _ = new URL(d), [, $, j] = _.pathname.split("/"), rt = _.searchParams.get("startapp");
      return `tg://resolve?domain=${$}&appname=${j}&startapp=${rt}`;
    }
    const DesktopConnectionModal = (d) => {
      const [_, $] = createSignal("mobile"), [j, rt] = createSignal(false), [et, st] = createSignal(), [pt, Et] = createSignal(true), Bt = useContext(ConnectorContext), St = Bt.onStatusChange(() => {
      }, () => {
        d.wallet.appName !== AT_WALLET_APP_NAME && rt(true);
      });
      onCleanup(St);
      const $t = () => {
        try {
          const jt = Bt.connect({
            universalLink: d.wallet.universalLink,
            bridgeUrl: d.wallet.bridgeUrl
          }, d.additionalRequest);
          st(jt);
        } catch {
        }
      };
      createEffect(() => {
        untrack(_) !== "extension" && (supportsMobile(d.wallet) || supportsDesktop(d.wallet)) && $t();
      });
      const kt = () => {
        rt(false), _() === "extension" && $t(), $("mobile"), setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
          openMethod: "qrcode"
        }));
      }, Tt = () => {
        if (rt(false), _() === "extension" && $t(), $("desktop"), isTelegramUrl(et())) Pt();
        else {
          const jt = !pt();
          Et(false), redirectToWallet(et(), d.wallet.deepLink, {
            returnStrategy: appState.returnStrategy,
            forceRedirect: jt
          }, (Dt) => {
            setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
              openMethod: Dt
            }));
          });
        }
      }, Pt = () => {
        const jt = !pt();
        Et(false), setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
          openMethod: "universal-link"
        })), redirectToTelegram(et(), {
          returnStrategy: appState.returnStrategy,
          twaReturnUrl: appState.twaReturnUrl,
          forceRedirect: jt
        });
      }, It = () => {
        rt(false), $("extension"), isWalletInfoCurrentlyInjected(d.wallet) && (setLastSelectedWalletInfo(d.wallet), Bt.connect({
          jsBridgeKey: d.wallet.jsBridgeKey
        }, d.additionalRequest));
      };
      return supportsMobile(d.wallet) ? kt() : supportsExtension(d.wallet) ? It() : Tt(), createComponent(DesktopConnectionModalStyled, {
        "data-tc-wallets-modal-connection-desktop": "true",
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return !d.backDisabled;
              },
              get children() {
                return createComponent(StyledIconButton$2, {
                  icon: "arrow",
                  onClick: () => d.onBackClick()
                });
              }
            }),
            createComponent(H1Styled$6, {
              get children() {
                return d.wallet.name;
              }
            }),
            createComponent(Show, {
              get when() {
                return _() === "mobile";
              },
              get children() {
                return createComponent(H2Styled$4, {
                  translationKey: "walletModal.desktopConnectionModal.scanQR",
                  get translationValues() {
                    return {
                      name: d.wallet.name
                    };
                  },
                  get children() {
                    return [
                      "Scan the QR code below with your phone\u2019s or ",
                      createMemo(() => d.wallet.name),
                      "\u2019s camera"
                    ];
                  }
                });
              }
            }),
            createComponent(BodyStyled$1, {
              get qr() {
                return _() === "mobile";
              },
              get children() {
                return createComponent(Switch, {
                  get children() {
                    return [
                      createComponent(Match, {
                        get when() {
                          return _() === "mobile";
                        },
                        get children() {
                          return createComponent(QRCodeStyled$1, {
                            disableCopy: false,
                            get sourceUrl() {
                              return addReturnStrategy(et(), "none");
                            },
                            get imageUrl() {
                              return d.wallet.imageUrl;
                            }
                          });
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return j();
                        },
                        get children() {
                          return [
                            createComponent(ErrorIconStyled$1, {
                              size: "s"
                            }),
                            createComponent(BodyTextStyled$1, {
                              translationKey: "walletModal.desktopConnectionModal.connectionDeclined",
                              children: "Connection declined"
                            }),
                            createComponent(ButtonsContainerStyled$1, {
                              get children() {
                                return createComponent(Button, {
                                  get leftIcon() {
                                    return createComponent(RetryIcon, {});
                                  },
                                  get onClick() {
                                    return _() === "extension" ? It : Tt;
                                  },
                                  get children() {
                                    return createComponent(Translation, {
                                      translationKey: "common.retry",
                                      children: "Retry"
                                    });
                                  }
                                });
                              }
                            })
                          ];
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return _() === "extension";
                        },
                        get children() {
                          return [
                            createComponent(Show, {
                              get when() {
                                return isWalletInfoCurrentlyInjected(d.wallet);
                              },
                              get children() {
                                return [
                                  createComponent(LoaderStyled$1, {
                                    size: "s"
                                  }),
                                  createComponent(BodyTextStyled$1, {
                                    translationKey: "walletModal.desktopConnectionModal.continueInExtension",
                                    get translationValues() {
                                      return {
                                        name: d.wallet.name
                                      };
                                    },
                                    get children() {
                                      return [
                                        "Continue in ",
                                        createMemo(() => d.wallet.name),
                                        " browser extension\u2026"
                                      ];
                                    }
                                  }),
                                  createComponent(ButtonsContainerStyled$1, {
                                    get children() {
                                      return createComponent(Button, {
                                        get leftIcon() {
                                          return createComponent(RetryIcon, {});
                                        },
                                        onClick: It,
                                        get children() {
                                          return createComponent(Translation, {
                                            translationKey: "common.retry",
                                            children: "Retry"
                                          });
                                        }
                                      });
                                    }
                                  })
                                ];
                              }
                            }),
                            createComponent(Show, {
                              get when() {
                                return !isWalletInfoCurrentlyInjected(d.wallet);
                              },
                              get children() {
                                return [
                                  createComponent(BodyTextStyled$1, {
                                    translationKey: "walletModal.desktopConnectionModal.dontHaveExtension",
                                    get translationValues() {
                                      return {
                                        name: d.wallet.name
                                      };
                                    },
                                    get children() {
                                      return [
                                        "Seems you don't have installed ",
                                        createMemo(() => d.wallet.name),
                                        " browser extension"
                                      ];
                                    }
                                  }),
                                  createComponent(ButtonsContainerStyled$1, {
                                    get children() {
                                      return createComponent(Link, {
                                        get href() {
                                          return d.wallet.aboutUrl;
                                        },
                                        blank: true,
                                        get children() {
                                          return createComponent(Button, {
                                            get rightIcon() {
                                              return createComponent(LinkIcon, {});
                                            },
                                            onClick: It,
                                            get children() {
                                              return createComponent(Translation, {
                                                translationKey: "walletModal.desktopConnectionModal.getWallet",
                                                get translationValues() {
                                                  return {
                                                    name: d.wallet.name
                                                  };
                                                },
                                                get children() {
                                                  return [
                                                    "Get ",
                                                    createMemo(() => d.wallet.name)
                                                  ];
                                                }
                                              });
                                            }
                                          });
                                        }
                                      });
                                    }
                                  })
                                ];
                              }
                            })
                          ];
                        }
                      }),
                      createComponent(Match, {
                        get when() {
                          return _() === "desktop";
                        },
                        get children() {
                          return [
                            createComponent(LoaderIcon, {
                              size: "m"
                            }),
                            createComponent(BodyTextStyled$1, {
                              translationKey: "walletModal.desktopConnectionModal.continueOnDesktop",
                              get translationValues() {
                                return {
                                  name: d.wallet.name
                                };
                              },
                              get children() {
                                return [
                                  "Continue in ",
                                  createMemo(() => d.wallet.name),
                                  " on desktop\u2026"
                                ];
                              }
                            }),
                            createComponent(ButtonsContainerStyled$1, {
                              get children() {
                                return [
                                  createComponent(Button, {
                                    get leftIcon() {
                                      return createComponent(RetryIcon, {});
                                    },
                                    onClick: Tt,
                                    get children() {
                                      return createComponent(Translation, {
                                        translationKey: "common.retry",
                                        children: "Retry"
                                      });
                                    }
                                  }),
                                  createComponent(Link, {
                                    get href() {
                                      return d.wallet.aboutUrl;
                                    },
                                    blank: true,
                                    get children() {
                                      return createComponent(Button, {
                                        get rightIcon() {
                                          return createComponent(LinkIcon, {});
                                        },
                                        get children() {
                                          return createComponent(Translation, {
                                            translationKey: "walletModal.desktopConnectionModal.getWallet",
                                            get translationValues() {
                                              return {
                                                name: d.wallet.name
                                              };
                                            },
                                            get children() {
                                              return [
                                                "Get ",
                                                createMemo(() => d.wallet.name)
                                              ];
                                            }
                                          });
                                        }
                                      });
                                    }
                                  })
                                ];
                              }
                            })
                          ];
                        }
                      })
                    ];
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return d.wallet.appName === AT_WALLET_APP_NAME;
              },
              get children() {
                return createComponent(TgButtonStyled, {
                  get rightIcon() {
                    return createComponent(TgImageStyled, {
                      get src() {
                        return IMG.TG;
                      }
                    });
                  },
                  scale: "s",
                  onClick: Pt,
                  get children() {
                    return createComponent(Translation, {
                      translationKey: "walletModal.desktopConnectionModal.openWalletOnTelegram",
                      children: "Open Wallet in Telegram on desktop"
                    });
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return d.wallet.appName !== AT_WALLET_APP_NAME;
              },
              get children() {
                return createComponent(BottomButtonsContainerStyled, {
                  get children() {
                    return [
                      createComponent(Show, {
                        get when() {
                          return createMemo(() => _() !== "mobile")() && supportsMobile(d.wallet);
                        },
                        get children() {
                          return createComponent(FooterButton$1, {
                            appearance: "secondary",
                            get leftIcon() {
                              return createComponent(MobileIcon, {});
                            },
                            onClick: kt,
                            get children() {
                              return createComponent(Translation, {
                                translationKey: "common.mobile",
                                children: "Mobile"
                              });
                            }
                          });
                        }
                      }),
                      createComponent(Show, {
                        get when() {
                          return createMemo(() => _() !== "extension")() && supportsExtension(d.wallet);
                        },
                        get children() {
                          return createComponent(FooterButton$1, {
                            appearance: "secondary",
                            get leftIcon() {
                              return createComponent(BrowserIcon, {});
                            },
                            onClick: It,
                            get children() {
                              return createComponent(Translation, {
                                translationKey: "common.browserExtension",
                                children: "Browser Extension"
                              });
                            }
                          });
                        }
                      }),
                      createComponent(Show, {
                        get when() {
                          return createMemo(() => _() !== "desktop")() && supportsDesktop(d.wallet);
                        },
                        get children() {
                          return createComponent(FooterButton$1, {
                            appearance: "secondary",
                            get leftIcon() {
                              return createComponent(DesktopIcon, {});
                            },
                            onClick: Tt,
                            get children() {
                              return createComponent(Translation, {
                                translationKey: "common.desktop",
                                children: "Desktop"
                              });
                            }
                          });
                        }
                      })
                    ];
                  }
                });
              }
            })
          ];
        }
      });
    }, InfoModalStyled = styled.div``, StyledIconButton$1 = styled(IconButton)`
    position: absolute;
    top: 16px;
    left: 16px;
`, H1Styled$5 = styled(H1)`
    margin-bottom: 18px;
`, InfoBlock = styled.div`
    padding: 16px 0;
    display: flex;
    flex-direction: column;
    align-items: center;
`, InfoBlockIconClass = u`
    margin-bottom: 12px;
`, H3Styled = styled(H3)`
    text-align: center;
    margin-bottom: 4px;
`, TextStyled$1 = styled(Text)`
    text-align: center;
    max-width: 352px;
    color: ${(d) => d.theme.colors.text.secondary};
`, ButtonsBlock = styled.div`
    padding: 16px 24px 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
`, LINKS = {
      GET_A_WALLET: "https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1"
    }, InfoModal = (d) => createComponent(InfoModalStyled, {
      "data-tc-wallets-modal-info": "true",
      get children() {
        return [
          createComponent(StyledIconButton$1, {
            icon: "arrow",
            onClick: () => d.onBackClick()
          }),
          createComponent(H1Styled$5, {
            translationKey: "walletModal.infoModal.whatIsAWallet",
            children: "What is a wallet"
          }),
          createComponent(ScrollContainer, {
            get children() {
              return [
                createComponent(InfoBlock, {
                  get children() {
                    return [
                      createComponent(SecurityIcon, {
                        class: InfoBlockIconClass
                      }),
                      createComponent(H3Styled, {
                        translationKey: "walletModal.infoModal.secureDigitalAssets",
                        children: "Secure digital assets storage"
                      }),
                      createComponent(TextStyled$1, {
                        translationKey: "walletModal.infoModal.walletProtects",
                        children: "A wallet protects and manages your digital assets including TON, tokens and collectables."
                      })
                    ];
                  }
                }),
                createComponent(InfoBlock, {
                  get children() {
                    return [
                      createComponent(PersonalityIcon, {
                        class: InfoBlockIconClass
                      }),
                      createComponent(H3Styled, {
                        translationKey: "walletModal.infoModal.controlIdentity",
                        children: "Control your Web3 identity"
                      }),
                      createComponent(TextStyled$1, {
                        translationKey: "walletModal.infoModal.manageIdentity",
                        children: "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem."
                      })
                    ];
                  }
                }),
                createComponent(InfoBlock, {
                  get children() {
                    return [
                      createComponent(SwapIcon, {
                        class: InfoBlockIconClass
                      }),
                      createComponent(H3Styled, {
                        translationKey: "walletModal.infoModal.effortlessCryptoTransactions",
                        children: "Effortless crypto transactions"
                      }),
                      createComponent(TextStyled$1, {
                        translationKey: "walletModal.infoModal.easilySend",
                        children: "Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications."
                      })
                    ];
                  }
                }),
                createComponent(ButtonsBlock, {
                  get children() {
                    return createComponent(Link, {
                      get href() {
                        return LINKS.GET_A_WALLET;
                      },
                      blank: true,
                      get children() {
                        return createComponent(Button, {
                          get rightIcon() {
                            return createComponent(WalletIcon, {});
                          },
                          get children() {
                            return createComponent(Translation, {
                              translationKey: "walletModal.infoModal.getAWallet",
                              children: "Get a Wallet"
                            });
                          }
                        });
                      }
                    });
                  }
                })
              ];
            }
          })
        ];
      }
    }), MobileConnectionModalStyled = styled.div``, BodyStyled = styled.div`
    flex: 1;
    margin-top: 18px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 232px;
`, H1Styled$4 = styled(H1)`
    max-width: 262px;
    margin: 0 auto 8px;
`, StyledIconButton = styled(IconButton)`
    position: absolute;
    top: 16px;
    left: 16px;
`, FooterStyled = styled.div`
    padding: 16px;
    display: flex;
    align-items: center;
    gap: 12px;
    border-top: 0.5px solid ${(d) => rgba(d.theme.colors.icon.secondary, 0.2)};
`, ImageStyled = styled(Image$1)`
    width: 36px;
    height: 36px;
    border-radius: 10px;
`, FooterButton = styled(Link)`
    margin-left: auto;
`, LoaderStyled = styled(LoaderIcon)`
    margin-bottom: 18px;
    margin-top: 2px;
`, ErrorIconStyled = styled(ErrorIcon)`
    margin-bottom: 16px;
`, BodyTextStyled = styled(H2)`
    color: ${(d) => d.theme.colors.text.secondary};
    text-align: center;
    margin-bottom: 20px;
`, ButtonsContainerStyled = styled.div`
    display: flex;
    justify-content: center;
    gap: 8px;
    padding-bottom: 16px;
`, actionButtonBorderRadius$1 = {
      m: "16px",
      s: "8px",
      none: "0"
    }, H1Styled$3 = styled(H1)`
    margin-bottom: 2px;
    padding: 0 52px;
`, H2Styled$3 = styled(H2)`
    margin-bottom: 20px;
    padding: 0 64px;
`, QrCodeWrapper$1 = styled.div`
    padding: 0 24px 16px;
`, ButtonsWrapper$1 = styled.div`
    display: flex;
    flex-direction: row;
    gap: 16px;
    padding: 0 24px 24px;
    margin-top: 0;
`, ActionButton$1 = styled(Button)`
    width: 100%;
    height: 56px;
    border-radius: ${(d) => actionButtonBorderRadius$1[d.theme.borderRadius]};
    background-color: ${(d) => rgba(d.theme.colors.accent, 0.12)};
    color: ${(d) => d.theme.colors.accent};
    font-size: 16px;
    line-height: 20px;
    font-weight: 500;
    padding: 17px 20px 19px 20px;
`, MobileConnectionQR = (d) => [
      createComponent(H1Styled$3, {
        get children() {
          return d.walletInfo.name;
        }
      }),
      createComponent(H2Styled$3, {
        translationKey: "walletModal.mobileConnectionModal.scanQR",
        get translationValues() {
          return {
            name: d.walletInfo.name
          };
        },
        get children() {
          return [
            "Scan the QR code below with your phone\u2019s or ",
            createMemo(() => d.walletInfo.name),
            "\u2019s camera"
          ];
        }
      }),
      createComponent(QrCodeWrapper$1, {
        get children() {
          return createComponent(QRCode, {
            get imageUrl() {
              return d.walletInfo.imageUrl;
            },
            get sourceUrl() {
              return addReturnStrategy(d.universalLink, "none");
            },
            disableCopy: true
          });
        }
      }),
      createComponent(ButtonsWrapper$1, {
        get children() {
          return [
            createComponent(ActionButton$1, {
              appearance: "secondary",
              onClick: () => {
                var _;
                return (_ = d.onOpenLink) == null ? void 0 : _.call(d);
              },
              get children() {
                return createComponent(Translation, {
                  translationKey: "walletModal.mobileUniversalModal.openLink",
                  children: "Open Link"
                });
              }
            }),
            createComponent(ActionButton$1, {
              appearance: "secondary",
              onClick: () => {
                var _;
                return (_ = d.onCopy) == null ? void 0 : _.call(d);
              },
              get children() {
                return createComponent(Translation, {
                  get translationKey() {
                    return d.isCopiedShown !== void 0 ? "common.copied" : "common.copyLink";
                  },
                  get children() {
                    return d.isCopiedShown !== void 0 ? "Copied" : "Copy Link";
                  }
                });
              }
            })
          ];
        }
      })
    ], MobileConnectionModal = (d) => {
      const _ = useTheme(), [$, j] = createSignal(true), [rt, et] = createSignal(false), [st, pt] = createSignal(false), Et = useContext(ConnectorContext), Bt = Et.onStatusChange(() => {
      }, () => {
        pt(true);
      }), St = createMemo(() => Et.connect({
        universalLink: d.wallet.universalLink,
        bridgeUrl: d.wallet.bridgeUrl
      }, d.additionalRequest)), $t = () => {
        setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
          openMethod: "universal-link"
        })), redirectToTelegram(St(), {
          returnStrategy: appState.returnStrategy,
          twaReturnUrl: appState.twaReturnUrl,
          forceRedirect: true
        });
      }, kt = () => {
        const Ft = St();
        if (isTelegramUrl(Ft)) return $t();
        pt(false);
        const Lt = !$();
        j(false), redirectToWallet(St(), d.wallet.deepLink, {
          returnStrategy: appState.returnStrategy,
          forceRedirect: Lt
        }, (Zt) => {
          setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
            openMethod: Zt
          }));
        });
      }, [Tt, Pt] = createSignal(void 0), It = () => __async(void 0, null, function* () {
        Tt() !== void 0 && clearTimeout(Tt()), yield copyToClipboard(St());
        const Ft = setTimeout(() => Pt(void 0), 1500);
        Pt(Ft);
      }), jt = () => {
        pt(false), et(true), setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
          openMethod: "qrcode"
        }));
      }, Dt = () => {
        et(false), setLastSelectedWalletInfo(__spreadProps(__spreadValues$1({}, d.wallet), {
          openMethod: "universal-link"
        }));
      }, Ot = () => {
        rt() ? Dt() : d.onBackClick();
      };
      return onCleanup(Bt), kt(), createComponent(MobileConnectionModalStyled, {
        "data-tc-wallets-modal-connection-mobile": "true",
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return !d.backDisabled || rt();
              },
              get children() {
                return createComponent(StyledIconButton, {
                  icon: "arrow",
                  onClick: Ot
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return rt();
              },
              get children() {
                return createComponent(MobileConnectionQR, {
                  get universalLink() {
                    return St();
                  },
                  get walletInfo() {
                    return d.wallet;
                  },
                  onOpenLink: kt,
                  onCopy: It,
                  get isCopiedShown() {
                    return Tt();
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return !rt();
              },
              get children() {
                return [
                  createComponent(H1Styled$4, {
                    get children() {
                      return d.wallet.name;
                    }
                  }),
                  createComponent(BodyStyled, {
                    get children() {
                      return [
                        createComponent(Show, {
                          get when() {
                            return st();
                          },
                          get children() {
                            return [
                              createComponent(ErrorIconStyled, {
                                size: "s"
                              }),
                              createComponent(BodyTextStyled, {
                                translationKey: "walletModal.mobileConnectionModal.connectionDeclined",
                                children: "Connection declined"
                              }),
                              createComponent(ButtonsContainerStyled, {
                                get children() {
                                  return [
                                    createComponent(Button, {
                                      get leftIcon() {
                                        return createComponent(RetryIcon, {});
                                      },
                                      onClick: kt,
                                      get children() {
                                        return createComponent(Translation, {
                                          translationKey: "common.retry",
                                          children: "Retry"
                                        });
                                      }
                                    }),
                                    createComponent(Button, {
                                      get leftIcon() {
                                        return createComponent(QRIcon, {
                                          get fill() {
                                            return _.colors.accent;
                                          }
                                        });
                                      },
                                      onClick: jt,
                                      get children() {
                                        return createComponent(Translation, {
                                          translationKey: "walletModal.mobileConnectionModal.showQR",
                                          children: "Show QR Code"
                                        });
                                      }
                                    })
                                  ];
                                }
                              })
                            ];
                          }
                        }),
                        createComponent(Show, {
                          get when() {
                            return !st();
                          },
                          get children() {
                            return [
                              createComponent(LoaderStyled, {
                                size: "s"
                              }),
                              createComponent(BodyTextStyled, {
                                translationKey: "walletModal.mobileConnectionModal.continueIn",
                                get translationValues() {
                                  return {
                                    name: d.wallet.name
                                  };
                                },
                                get children() {
                                  return [
                                    "Continue in ",
                                    createMemo(() => d.wallet.name),
                                    "\u2026"
                                  ];
                                }
                              }),
                              createComponent(ButtonsContainerStyled, {
                                get children() {
                                  return [
                                    createComponent(Button, {
                                      get leftIcon() {
                                        return createComponent(RetryIcon, {});
                                      },
                                      onClick: kt,
                                      get children() {
                                        return createComponent(Translation, {
                                          translationKey: "common.retry",
                                          children: "Retry"
                                        });
                                      }
                                    }),
                                    createComponent(Button, {
                                      get leftIcon() {
                                        return createComponent(QRIcon, {
                                          get fill() {
                                            return _.colors.accent;
                                          }
                                        });
                                      },
                                      onClick: jt,
                                      get children() {
                                        return createComponent(Translation, {
                                          translationKey: "walletModal.mobileConnectionModal.showQR",
                                          children: "Show QR Code"
                                        });
                                      }
                                    })
                                  ];
                                }
                              })
                            ];
                          }
                        })
                      ];
                    }
                  }),
                  createComponent(FooterStyled, {
                    get children() {
                      return [
                        createComponent(ImageStyled, {
                          get src() {
                            return d.wallet.imageUrl;
                          }
                        }),
                        createComponent(H3, {
                          get children() {
                            return d.wallet.name;
                          }
                        }),
                        createComponent(FooterButton, {
                          get href() {
                            return d.wallet.aboutUrl;
                          },
                          blank: true,
                          get children() {
                            return createComponent(Button, {
                              get children() {
                                return createComponent(Translation, {
                                  translationKey: "common.get",
                                  children: "GET"
                                });
                              }
                            });
                          }
                        })
                      ];
                    }
                  })
                ];
              }
            })
          ];
        }
      });
    }, borders$1 = {
      m: "16px",
      s: "12px",
      none: "0"
    }, tgBorders = {
      m: "6px",
      s: "6px",
      none: "0"
    };
    styled.li`
    width: 82px;
    min-width: 82px;
    height: 124px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 8px 4px;

    text-align: center;
    cursor: pointer;

    transition: transform 0.1s ease-in-out;

    ${mediaNotTouch} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${mediaTouch} {
        &:active {
            transform: scale(0.92);
        }
    }
`;
    const H1Styled$2 = styled(H1)`
    margin-top: 38px;
    margin-bottom: 4px;
    padding: 0 24px;
`, H2Styled$2 = styled(H2)`
    margin: ${(d) => {
      var _;
      return (_ = d.margin) != null ? _ : "0 0 28px 0";
    }};
    padding: ${(d) => {
      var _;
      return (_ = d.padding) != null ? _ : "0 24px";
    }};
    min-height: ${(d) => {
      var _;
      return (_ = d.padding) != null ? _ : "44px";
    }};
    max-width: ${(d) => d.maxWidth}px;
    margin-left: ${(d) => d.maxWidth ? "auto" : "0px"};
    margin-right: ${(d) => d.maxWidth ? "auto" : "0px"};
`;
    styled(Button)`
    display: block;
    margin: 0 auto;
`;
    const TelegramButtonStyled = styled(Button)`
    margin: 0 28px 24px;
    width: calc(100% - 56px);
    border-radius: ${(d) => borders$1[d.theme.borderRadius]};
    padding: 14px 16px 14px 14px;
    background-color: ${(d) => d.theme.colors.telegramButton};

    color: ${(d) => d.theme.colors.constant.white};
    font-weight: 500;
    font-size: 16px;
    line-height: 20px;

    @media (max-width: 375px) {
        margin: 0 16px 24px;
        width: calc(100% - 32px);
    }
`, TGImageStyled = styled(Image$1)`
    background-color: transparent;
    border-radius: ${(d) => tgBorders[d.theme.borderRadius]};
    width: 24px;
    height: 24px;
`, StyledLeftActionButton = styled(IconButton)`
    position: absolute;
    top: 16px;
    left: 16px;
`, actionButtonBorderRadius = {
      m: "16px",
      s: "8px",
      none: "0"
    }, H1Styled$1 = styled(H1)`
    margin-bottom: 2px;
    padding: 0 52px;
`, H2Styled$1 = styled(H2)`
    margin-bottom: 20px;
    padding: 0 64px;
`, QrCodeWrapper = styled.div`
    padding: 0 24px 16px;
`, ButtonsWrapper = styled.div`
    display: flex;
    flex-direction: row;
    gap: 16px;
    padding: 0 24px 24px;
    margin-top: 0;
`, ActionButton = styled(Button)`
    width: 100%;
    height: 56px;
    border-radius: ${(d) => actionButtonBorderRadius[d.theme.borderRadius]};
    background-color: ${(d) => rgba(d.theme.colors.accent, 0.12)};
    color: ${(d) => d.theme.colors.accent};
    font-size: 16px;
    line-height: 20px;
    font-weight: 500;
    padding: 17px 20px 19px 20px;
`, MobileUniversalQR = (d) => [
      createComponent(H1Styled$1, {
        translationKey: "walletModal.mobileUniversalModal.connectYourWallet",
        children: "Connect your TON wallet"
      }),
      createComponent(H2Styled$1, {
        translationKey: "walletModal.mobileUniversalModal.scan",
        children: "Scan with your mobile wallet"
      }),
      createComponent(QrCodeWrapper, {
        get children() {
          return createComponent(QRCode, {
            get imageUrl() {
              return IMG.TON;
            },
            get sourceUrl() {
              return addReturnStrategy(d.universalLink, "none");
            },
            disableCopy: true
          });
        }
      }),
      createComponent(ButtonsWrapper, {
        get children() {
          return [
            createComponent(ActionButton, {
              appearance: "secondary",
              onClick: () => d.onOpenLink(),
              get children() {
                return createComponent(Translation, {
                  translationKey: "walletModal.mobileUniversalModal.openLink",
                  children: "Open Link"
                });
              }
            }),
            createComponent(ActionButton, {
              appearance: "secondary",
              onClick: () => d.onCopy(),
              get children() {
                return createComponent(Translation, {
                  get translationKey() {
                    return d.isCopiedShown !== void 0 ? "common.copied" : "common.copyLink";
                  },
                  get children() {
                    return d.isCopiedShown !== void 0 ? "Copied" : "Copy Link";
                  }
                });
              }
            })
          ];
        }
      })
    ];
    function getUniqueBridges(d) {
      const _ = new Set(d.filter(isWalletInfoRemote).map(($) => $.bridgeUrl));
      return Array.from(_).map(($) => ({
        bridgeUrl: $
      }));
    }
    function bridgesIsEqual(d, _) {
      const $ = new Set(d == null ? void 0 : d.map((rt) => rt.bridgeUrl)), j = new Set(_ == null ? void 0 : _.map((rt) => rt.bridgeUrl));
      return $.size === j.size && [
        ...$
      ].every((rt) => j.has(rt));
    }
    const _tmpl$$1 = template$1("<li></li>"), _tmpl$2 = template$1('<div data-tc-wallets-modal-universal-mobile="true"></div>'), MobileUniversalModal = (d) => {
      const [_, $] = createSignal(false), [j, rt] = createSignal(true), [et, st] = createSignal(null), pt = appState.connector, Et = () => d.walletsList.filter((Ft) => supportsMobile(Ft) && Ft.appName !== AT_WALLET_APP_NAME), Bt = () => Et().length > 7, St = createMemo(() => getUniqueBridges(d.walletsList), null, {
        equals: bridgesIsEqual
      }), $t = () => (et() || st(pt.connect(St(), d.additionalRequest)), et());
      setLastSelectedWalletInfo({
        openMethod: "universal-link"
      });
      const [kt, Tt] = createSignal(void 0), Pt = () => __async(void 0, null, function* () {
        kt() !== void 0 && clearTimeout(kt()), yield copyToClipboard($t());
        const Ft = setTimeout(() => Tt(void 0), 1500);
        Tt(Ft);
      }), It = () => {
        const Ft = !j();
        rt(false), redirectToWallet($t(), void 0, {
          returnStrategy: appState.returnStrategy,
          forceRedirect: Ft
        }, (Lt) => {
          setLastSelectedWalletInfo({
            openMethod: Lt
          });
        });
      }, jt = () => {
        st(null);
        const Ft = d.walletsList.find((Kt) => Kt.appName === AT_WALLET_APP_NAME);
        if (!Ft || !isWalletInfoRemote(Ft)) throw new TonConnectUIError("@wallet bot not found in the wallets list");
        const Lt = pt.connect({
          bridgeUrl: Ft.bridgeUrl,
          universalLink: Ft.universalLink
        }, d.additionalRequest), Zt = !j();
        rt(false), redirectToTelegram(Lt, {
          returnStrategy: appState.returnStrategy,
          twaReturnUrl: appState.twaReturnUrl,
          forceRedirect: Zt
        });
      }, Dt = () => {
        $(true), setLastSelectedWalletInfo({
          openMethod: "qrcode"
        });
      }, Ot = () => {
        $(false), setLastSelectedWalletInfo({
          openMethod: "universal-link"
        });
      };
      return (() => {
        const Ft = _tmpl$2.cloneNode(true);
        return insert(Ft, createComponent(Show, {
          get when() {
            return _();
          },
          get children() {
            return [
              createComponent(StyledLeftActionButton, {
                icon: "arrow",
                onClick: Ot
              }),
              createComponent(MobileUniversalQR, {
                get universalLink() {
                  return $t();
                },
                get isCopiedShown() {
                  return kt();
                },
                onOpenLink: It,
                onCopy: Pt
              })
            ];
          }
        }), null), insert(Ft, createComponent(Show, {
          get when() {
            return !_();
          },
          get children() {
            return [
              createComponent(StyledLeftActionButton, {
                get icon() {
                  return createComponent(QRIcon, {});
                },
                onClick: Dt
              }),
              createComponent(H1Styled$2, {
                translationKey: "walletModal.mobileUniversalModal.connectYourWallet",
                children: "Connect your TON wallet"
              }),
              createComponent(H2Styled$2, {
                translationKey: "walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect",
                maxWidth: 320,
                children: "Use Wallet in Telegram or choose other application"
              }),
              createComponent(TelegramButtonStyled, {
                get leftIcon() {
                  return createComponent(AtWalletIcon, {});
                },
                get rightIcon() {
                  return createComponent(TGImageStyled, {
                    get src() {
                      return IMG.TG;
                    }
                  });
                },
                onClick: jt,
                scale: "s",
                get children() {
                  return createComponent(Translation, {
                    translationKey: "walletModal.mobileUniversalModal.openWalletOnTelegram",
                    children: "Connect Wallet in Telegram"
                  });
                }
              }),
              createComponent(H2Styled$2, {
                translationKey: "walletModal.mobileUniversalModal.chooseOtherApplication",
                maxWidth: 342,
                padding: "0 24px 8px 24px",
                margin: "0",
                children: "Choose other application"
              }),
              createComponent(WalletUlContainer, {
                get children() {
                  return [
                    createComponent(For, {
                      get each() {
                        return createMemo(() => !!Bt())() ? Et().slice(0, 3) : Et();
                      },
                      children: (Lt) => (() => {
                        const Zt = _tmpl$$1.cloneNode(true);
                        return insert(Zt, createComponent(WalletItem, {
                          get icon() {
                            return Lt.imageUrl;
                          },
                          get name() {
                            return Lt.name;
                          },
                          onClick: () => d.onSelect(Lt)
                        })), Zt;
                      })()
                    }),
                    createComponent(Show, {
                      get when() {
                        return Bt();
                      },
                      get children() {
                        const Lt = _tmpl$$1.cloneNode(true);
                        return insert(Lt, createComponent(FourWalletsItem, {
                          labelLine1: "View all",
                          labelLine2: "wallets",
                          get images() {
                            return Et().slice(3, 7).map((Zt) => Zt.imageUrl);
                          },
                          onClick: () => d.onSelectAllWallets()
                        })), Lt;
                      }
                    })
                  ];
                }
              })
            ];
          }
        }), null), Ft;
      })();
    }, borders = {
      m: "16px",
      s: "8px",
      none: "0"
    }, hoverBorders = {
      m: "8px",
      s: "4px",
      none: "0"
    }, DesktopUniversalModalStyled = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 16px;
`, H2Styled = styled(H2)`
    max-width: 320px;
    margin-top: 2px;
    margin-bottom: 20px;
`, H2AvailableWalletsStyled = styled(H2)`
    margin-bottom: 16px;
`, QRCodeStyled = styled(QRCode)`
    margin-bottom: 24px;
`, WalletsContainerStyled = styled.ul`
    display: flex;
`;
    styled.div`
    display: flex;
    gap: 16px;
    width: 100%;
`;
    styled(Button)`
    position: relative;
    font-size: 16px;
    line-height: 20px;
    width: 100%;
    padding: 0 16px;
    height: 56px;
    border-radius: ${(d) => borders[d.theme.borderRadius]};

    &:hover {
        ${(d) => d.disableEventsAnimation ? "transform: unset;" : ""}
    }

    &:active {
        ${(d) => d.disableEventsAnimation ? "transform: unset;" : ""}
    }
`;
    styled.ul`
    position: absolute;
    bottom: 100%;
    left: 0;
    margin: 0;
    padding: 8px;
    width: 188px;
    transform: translateY(-16px);

    background-color: ${(d) => d.theme.colors.background.primary};
    border-radius: ${(d) => borders[d.theme.borderRadius]};
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
`;
    styled.li`
    padding: 8px;

    display: flex;
    align-items: center;
    gap: 8px;

    cursor: pointer;
    border-radius: ${(d) => hoverBorders[d.theme.borderRadius]};

    transition: background-color, transform 0.1s ease-in-out;

    &:hover {
        background-color: ${(d) => d.theme.colors.background.secondary};
    }

    &:active {
        transform: scale(0.96);
    }
`;
    styled(Image$1)`
    width: 24px;
    height: 24px;

    border-radius: 6px;
`;
    styled.div`
    margin-top: 23px;
    margin-bottom: 1px;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
`;
    styled(Text)`
    color: ${(d) => d.theme.colors.text.secondary};
    font-size: 16px;
`;
    const _tmpl$ = template$1("<li></li>"), DesktopUniversalModal = (d) => {
      const [_, $] = createSignal(false), j = appState.connector, rt = createMemo(() => getUniqueBridges(d.walletsList), null, {
        equals: bridgesIsEqual
      });
      setLastSelectedWalletInfo({
        openMethod: "qrcode"
      });
      const et = createMemo(() => j.connect(rt(), d.additionalRequest));
      return createComponent(DesktopUniversalModalStyled, {
        onClick: () => $(false),
        "data-tc-wallets-modal-universal-desktop": "true",
        get children() {
          return [
            createComponent(H1, {
              translationKey: "walletModal.desktopUniversalModal.connectYourWallet",
              children: "Connect your wallet"
            }),
            createComponent(H2Styled, {
              translationKey: "walletModal.desktopUniversalModal.scan",
              children: "Scan with your mobile wallet"
            }),
            createComponent(QRCodeStyled, {
              get sourceUrl() {
                return addReturnStrategy(et(), "none");
              },
              get disableCopy() {
                return _();
              },
              get imageUrl() {
                return IMG.TON;
              }
            }),
            createComponent(H2AvailableWalletsStyled, {
              translationKey: "walletModal.desktopUniversalModal.availableWallets",
              children: "Available wallets"
            }),
            createComponent(WalletsContainerStyled, {
              get children() {
                return [
                  createComponent(For, {
                    get each() {
                      return d.walletsList.slice(0, 3);
                    },
                    children: (st) => (() => {
                      const pt = _tmpl$.cloneNode(true);
                      return insert(pt, createComponent(WalletLabeledItem, {
                        wallet: st,
                        onClick: () => d.onSelect(st)
                      })), pt;
                    })()
                  }),
                  createComponent(FourWalletsItem, {
                    labelLine1: "View all",
                    labelLine2: "wallets",
                    get images() {
                      return d.walletsList.slice(3, 7).map((st) => st.imageUrl);
                    },
                    onClick: () => d.onSelectAllWallets()
                  })
                ];
              }
            })
          ];
        }
      });
    }, WalletsModal = () => {
      const { locale: d } = useI18n()[1];
      createEffect(() => d(appState.language)), createEffect(() => {
        getWalletsModalIsOpened() ? updateIsMobile() : (et(null), pt("universal"), Bt(false));
      });
      const _ = useContext(ConnectorContext), $ = useContext(TonConnectUiContext), [j] = createResource(() => $.getWallets()), [rt, et] = createSignal(null), [st, pt] = createSignal("universal"), [Et, Bt] = createSignal(false), St = createMemo(() => {
        if (j.state !== "ready") return null;
        let Ot = applyWalletsListConfiguration(j(), appState.walletsListConfiguration);
        const Ft = Ot.filter(isWalletInfoCurrentlyInjected), Lt = Ot.filter((er) => !isWalletInfoCurrentlyInjected(er));
        Ot = (Ft || []).concat(Lt);
        const Zt = appState.preferredWalletAppName, Kt = Ot.find((er) => eqWalletName(er, Zt)), ar = Ot.filter((er) => eqWalletName(er, Zt)).length >= 2;
        Zt && Kt && !ar && (Ot = [
          __spreadProps(__spreadValues$1({}, Kt), {
            isPreferred: true
          })
        ].concat(Ot.filter((er) => !eqWalletName(er, Zt))));
        const sr = Ot.find((er) => eqWalletName(er, AT_WALLET_APP_NAME));
        return sr && (Ot = [
          sr
        ].concat(Ot.filter((er) => !eqWalletName(er, AT_WALLET_APP_NAME)))), Ot;
      }), $t = () => {
        var Ot;
        return ((Ot = appState.connectRequestParameters) == null ? void 0 : Ot.state) === "loading";
      }, kt = createMemo(() => {
        var Ot;
        if (!$t()) return (Ot = appState.connectRequestParameters) == null ? void 0 : Ot.value;
      }), Tt = (Ot) => {
        $.closeModal(Ot);
      }, Pt = _.onStatusChange((Ot) => {
        Ot && Tt("wallet-selected");
      }), It = () => {
        pt("all-wallets");
      }, jt = () => {
        pt("universal");
      }, Dt = () => {
        et(null);
      };
      return onCleanup(() => {
        et(null), Bt(false);
      }), onCleanup(Pt), createComponent(StyledModal, {
        get opened() {
          return getWalletsModalIsOpened();
        },
        get enableAndroidBackHandler() {
          return appState.enableAndroidBackHandler;
        },
        onClose: () => Tt("action-cancelled"),
        onClickQuestion: () => Bt((Ot) => !Ot),
        "data-tc-wallets-modal-container": "true",
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return Et();
              },
              get children() {
                return createComponent(InfoModal, {
                  onBackClick: () => Bt(false)
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return !Et();
              },
              get children() {
                return [
                  createComponent(Show, {
                    get when() {
                      return $t() || !St();
                    },
                    get children() {
                      return [
                        createComponent(H1Styled$8, {
                          translationKey: "walletModal.loading",
                          children: "Wallets list is loading"
                        }),
                        createComponent(LoaderContainerStyled, {
                          get children() {
                            return createComponent(LoaderIcon, {
                              size: "m"
                            });
                          }
                        })
                      ];
                    }
                  }),
                  createComponent(Show, {
                    get when() {
                      return createMemo(() => !$t())() && St();
                    },
                    get children() {
                      return createComponent(Switch, {
                        get children() {
                          return [
                            createComponent(Match, {
                              get when() {
                                return rt();
                              },
                              get children() {
                                return createComponent(Dynamic, {
                                  get component() {
                                    return isMobile() ? MobileConnectionModal : DesktopConnectionModal;
                                  },
                                  get wallet() {
                                    return rt();
                                  },
                                  get additionalRequest() {
                                    return kt();
                                  },
                                  onBackClick: Dt
                                });
                              }
                            }),
                            createComponent(Match, {
                              get when() {
                                return st() === "universal";
                              },
                              get children() {
                                return createComponent(Dynamic, {
                                  get component() {
                                    return isMobile() ? MobileUniversalModal : DesktopUniversalModal;
                                  },
                                  onSelect: et,
                                  get walletsList() {
                                    return St();
                                  },
                                  get additionalRequest() {
                                    return kt();
                                  },
                                  onSelectAllWallets: It
                                });
                              }
                            }),
                            createComponent(Match, {
                              get when() {
                                return st() === "all-wallets";
                              },
                              get children() {
                                return createComponent(AllWalletsListModal, {
                                  get walletsList() {
                                    return St();
                                  },
                                  onBack: jt,
                                  onSelect: et
                                });
                              }
                            })
                          ];
                        }
                      });
                    }
                  })
                ];
              }
            })
          ];
        }
      });
    }, ActionModalStyled = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 8px;
`, H1Styled = styled(H1)`
    margin-top: 16px;
`, TextStyled = styled(Text)`
    font-weight: 510;
    font-size: 16px;
    line-height: 20px;
    text-align: center;
    max-width: 250px;

    color: ${(d) => d.theme.colors.text.secondary};
`, LoaderButtonStyled = styled(Button)`
    min-width: 112px;
    margin-top: 32px;
`, LoaderIconStyled = styled(LoaderIcon)`
    height: 16px;
    width: 16px;
`, ButtonStyled = styled(Button)`
    margin-top: 32px;
`, ActionModal = (d) => {
      const _ = useDataAttributes(d), $ = useContext(TonConnectUiContext), [j, rt] = createSignal(true), [et, st] = createSignal(false);
      createEffect(() => {
        const St = action();
        st(!!St && "sent" in St && St.sent);
      });
      let pt;
      ($ == null ? void 0 : $.wallet) && "universalLink" in $.wallet && ($.wallet.openMethod === "universal-link" || isTelegramUrl($.wallet.universalLink) && isInTMA()) && (pt = $.wallet.universalLink);
      let Et;
      ($ == null ? void 0 : $.wallet) && "deepLink" in $.wallet && ($.wallet.openMethod === "custom-deeplink" || isTelegramUrl($.wallet.deepLink) && isInTMA()) && (Et = $.wallet.deepLink);
      const Bt = () => {
        const St = action(), $t = "returnStrategy" in St ? St.returnStrategy : appState.returnStrategy, kt = !j();
        rt(false), isTelegramUrl(pt) ? redirectToTelegram(pt, {
          returnStrategy: $t,
          twaReturnUrl: "twaReturnUrl" in St ? St.twaReturnUrl : appState.twaReturnUrl,
          forceRedirect: kt
        }) : redirectToWallet(pt, Et, {
          returnStrategy: $t,
          forceRedirect: kt
        }, () => {
        });
      };
      return createComponent(ActionModalStyled, mergeProps(_, {
        get children() {
          return [
            createMemo(() => d.icon),
            createComponent(H1Styled, {
              get translationKey() {
                return d.headerTranslationKey;
              },
              get translationValues() {
                return d.headerTranslationValues;
              }
            }),
            createComponent(TextStyled, {
              get translationKey() {
                return d.textTranslationKey;
              },
              get translationValues() {
                return d.textTranslationValues;
              }
            }),
            createComponent(Show, {
              get when() {
                return !et() && (d.showButton === "open-wallet" && pt || d.showButton !== "open-wallet");
              },
              get children() {
                return createComponent(LoaderButtonStyled, {
                  disabled: true,
                  "data-tc-connect-button-loading": "true",
                  get children() {
                    return createComponent(LoaderIconStyled, {});
                  }
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return et();
              },
              get children() {
                return [
                  createComponent(Show, {
                    get when() {
                      return d.showButton !== "open-wallet";
                    },
                    get children() {
                      return createComponent(ButtonStyled, {
                        onClick: () => d.onClose(),
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.close",
                            children: "Close"
                          });
                        }
                      });
                    }
                  }),
                  createComponent(Show, {
                    get when() {
                      return d.showButton === "open-wallet" && pt;
                    },
                    get children() {
                      return createComponent(ButtonStyled, {
                        onClick: Bt,
                        get children() {
                          return createComponent(Translation, {
                            translationKey: "common.openWallet",
                            children: "Open wallet"
                          });
                        }
                      });
                    }
                  })
                ];
              }
            })
          ];
        }
      }));
    }, ConfirmTransactionModal = (d) => {
      const _ = useContext(TonConnectUiContext), [$] = useI18n(), j = () => _.wallet && "name" in _.wallet ? _.wallet.name : $("common.yourWallet", {}, "Your wallet");
      return createComponent(ActionModal, {
        headerTranslationKey: "actionModal.confirmTransaction.header",
        get headerTranslationValues() {
          return {
            name: j()
          };
        },
        textTranslationKey: "actionModal.confirmTransaction.text",
        get icon() {
          return createComponent(LoaderIcon, {
            size: "m"
          });
        },
        onClose: () => d.onClose(),
        showButton: "open-wallet",
        "data-tc-confirm-modal": "true"
      });
    }, TransactionCanceledModal = (d) => createComponent(ActionModal, {
      headerTranslationKey: "actionModal.transactionCanceled.header",
      textTranslationKey: "actionModal.transactionCanceled.text",
      get icon() {
        return createComponent(ErrorIcon, {
          size: "m"
        });
      },
      onClose: () => d.onClose(),
      "data-tc-transaction-canceled-modal": "true"
    }), TransactionSentModal = (d) => createComponent(ActionModal, {
      headerTranslationKey: "actionModal.transactionSent.header",
      textTranslationKey: "actionModal.transactionSent.text",
      get icon() {
        return createComponent(SuccessIcon, {
          size: "m"
        });
      },
      onClose: () => d.onClose(),
      "data-tc-transaction-sent-modal": "true"
    }), ActionsModal = () => createComponent(Modal, {
      get opened() {
        var d;
        return createMemo(() => action() !== null)() && ((d = action()) == null ? void 0 : d.openModal) === true;
      },
      get enableAndroidBackHandler() {
        return appState.enableAndroidBackHandler;
      },
      onClose: () => setAction(null),
      "data-tc-actions-modal-container": "true",
      get children() {
        return createComponent(Switch, {
          get children() {
            return [
              createComponent(Match, {
                get when() {
                  return action().name === "transaction-sent";
                },
                get children() {
                  return createComponent(TransactionSentModal, {
                    onClose: () => setAction(null)
                  });
                }
              }),
              createComponent(Match, {
                get when() {
                  return action().name === "transaction-canceled";
                },
                get children() {
                  return createComponent(TransactionCanceledModal, {
                    onClose: () => setAction(null)
                  });
                }
              }),
              createComponent(Match, {
                get when() {
                  return action().name === "confirm-transaction";
                },
                get children() {
                  return createComponent(ConfirmTransactionModal, {
                    onClose: () => setAction(null)
                  });
                }
              })
            ];
          }
        });
      }
    }), SingleWalletModal = () => {
      const { locale: d } = useI18n()[1];
      createEffect(() => d(appState.language)), createEffect(() => {
        getSingleWalletModalIsOpened() && updateIsMobile();
      });
      const _ = useContext(ConnectorContext), $ = useContext(TonConnectUiContext), [j, rt] = createSignal(false), et = () => {
        var Bt;
        return ((Bt = appState.connectRequestParameters) == null ? void 0 : Bt.state) === "loading";
      }, st = createMemo(() => {
        var Bt;
        if (!et()) return (Bt = appState.connectRequestParameters) == null ? void 0 : Bt.value;
      }), pt = (Bt) => {
        $.closeSingleWalletModal(Bt);
      }, Et = _.onStatusChange((Bt) => {
        Bt && pt("wallet-selected");
      });
      return onCleanup(Et), onCleanup(() => {
        rt(false);
      }), createComponent(StyledModal, {
        get opened() {
          return getSingleWalletModalIsOpened();
        },
        get enableAndroidBackHandler() {
          return appState.enableAndroidBackHandler;
        },
        onClose: () => pt("action-cancelled"),
        onClickQuestion: () => rt((Bt) => !Bt),
        "data-tc-wallets-modal-container": "true",
        get children() {
          return [
            createComponent(Show, {
              get when() {
                return j();
              },
              get children() {
                return createComponent(InfoModal, {
                  onBackClick: () => rt(false)
                });
              }
            }),
            createComponent(Show, {
              get when() {
                return !j();
              },
              get children() {
                return [
                  createComponent(Show, {
                    get when() {
                      return et();
                    },
                    get children() {
                      return [
                        createComponent(H1Styled$8, {
                          translationKey: "walletModal.loading",
                          children: "Wallets list is loading"
                        }),
                        createComponent(LoaderContainerStyled, {
                          get children() {
                            return createComponent(LoaderIcon, {
                              size: "m"
                            });
                          }
                        })
                      ];
                    }
                  }),
                  createComponent(Show, {
                    get when() {
                      return !et();
                    },
                    get children() {
                      return createComponent(Dynamic, {
                        get component() {
                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;
                        },
                        get wallet() {
                          return getSingleWalletModalWalletInfo();
                        },
                        get additionalRequest() {
                          return st();
                        },
                        onBackClick: () => {
                        },
                        backDisabled: true
                      });
                    }
                  })
                ];
              }
            })
          ];
        }
      });
    }, App$2 = (d) => {
      const _ = createI18nContext(i18nDictionary, appState.language);
      return defineStylesRoot(), fixMobileSafariActiveTransition(), createComponent(I18nContext.Provider, {
        value: _,
        get children() {
          return createComponent(TonConnectUiContext.Provider, {
            get value() {
              return d.tonConnectUI;
            },
            get children() {
              return createComponent(ConnectorContext.Provider, {
                get value() {
                  return appState.connector;
                },
                get children() {
                  return [
                    createComponent(GlobalStyles, {}),
                    createComponent(ThemeProvider, {
                      theme: themeState,
                      get children() {
                        return [
                          createComponent(Show, {
                            get when() {
                              return appState.buttonRootId;
                            },
                            get children() {
                              return createComponent(Portal, {
                                get mount() {
                                  return document.getElementById(appState.buttonRootId);
                                },
                                get children() {
                                  return createComponent(AccountButton, {});
                                }
                              });
                            }
                          }),
                          createComponent(Dynamic, {
                            component: globalStylesTag,
                            get children() {
                              return [
                                createComponent(WalletsModal, {}),
                                createComponent(SingleWalletModal, {}),
                                createComponent(ActionsModal, {})
                              ];
                            }
                          })
                        ];
                      }
                    })
                  ];
                }
              });
            }
          });
        }
      });
    }, widgetController = {
      openWalletsModal: () => void setTimeout(() => setWalletsModalState({
        status: "opened",
        closeReason: null
      })),
      closeWalletsModal: (d) => void setTimeout(() => setWalletsModalState({
        status: "closed",
        closeReason: d
      })),
      openSingleWalletModal: (d) => {
        setTimeout(() => setSingleWalletModalState({
          status: "opened",
          closeReason: null,
          walletInfo: d
        }));
      },
      closeSingleWalletModal: (d) => void setTimeout(() => setSingleWalletModalState({
        status: "closed",
        closeReason: d
      })),
      setAction: (d) => void setTimeout(() => setAction(d)),
      clearAction: () => void setTimeout(() => setAction(null)),
      getSelectedWalletInfo: () => lastSelectedWalletInfo(),
      removeSelectedWalletInfo: () => setLastSelectedWalletInfo(null),
      renderApp: (d, _) => render(() => createComponent(App$2, {
        tonConnectUI: _
      }), document.getElementById(d))
    };
    class WalletsModalManager {
      constructor(_) {
        __publicField(this, "connector"), __publicField(this, "setConnectRequestParametersCallback"), __publicField(this, "consumers", []), __publicField(this, "tracker"), __publicField(this, "state", walletsModalState()), this.connector = _.connector, this.tracker = _.tracker, this.setConnectRequestParametersCallback = _.setConnectRequestParametersCallback, createEffect(() => {
          const $ = walletsModalState();
          this.state = $, this.consumers.forEach((j) => j($));
        });
      }
      open() {
        return __async(this, null, function* () {
          this.tracker.trackConnectionStarted();
          const $ = (yield this.connector.getWallets()).find(isWalletInfoCurrentlyEmbedded);
          return $ ? this.connectEmbeddedWallet($) : this.openWalletsModal();
        });
      }
      close(_ = "action-cancelled") {
        _ === "action-cancelled" && this.tracker.trackConnectionError("Connection was cancelled"), widgetController.closeWalletsModal(_);
      }
      onStateChange(_) {
        return this.consumers.push(_), () => {
          this.consumers = this.consumers.filter(($) => $ !== _);
        };
      }
      connectEmbeddedWallet(_) {
        const $ = (rt) => {
          setLastSelectedWalletInfo(_), this.connector.connect({
            jsBridgeKey: _.jsBridgeKey
          }, rt);
        }, j = appState.connectRequestParameters;
        (j == null ? void 0 : j.state) === "loading" ? this.setConnectRequestParametersCallback($) : $(j == null ? void 0 : j.value);
      }
      openWalletsModal() {
        return __async(this, null, function* () {
          return isInTMA() && sendExpand(), widgetController.openWalletsModal(), new Promise((_) => {
            const $ = this.onStateChange((j) => {
              const { status: rt } = j;
              rt === "opened" && ($(), _());
            });
          });
        });
      }
    }
    class TransactionModalManager {
      constructor(_) {
        __publicField(this, "connector"), __publicField(this, "consumers", []), this.connector = _.connector, createEffect(() => {
          const $ = action();
          this.consumers.forEach((j) => j($));
        });
      }
      onStateChange(_) {
        return this.consumers.push(_), () => {
          this.consumers = this.consumers.filter(($) => $ !== _);
        };
      }
    }
    class SingleWalletModalManager {
      constructor(_) {
        __publicField(this, "connector"), __publicField(this, "setConnectRequestParametersCallback"), __publicField(this, "consumers", []), __publicField(this, "tracker"), __publicField(this, "state", singleWalletModalState()), this.connector = _.connector, this.tracker = _.tracker, this.setConnectRequestParametersCallback = _.setConnectRequestParametersCallback, createEffect(() => {
          const $ = singleWalletModalState();
          this.state = $, this.consumers.forEach((j) => j($));
        });
      }
      open(_) {
        return __async(this, null, function* () {
          this.tracker.trackConnectionStarted();
          const $ = yield this.connector.getWallets(), j = applyWalletsListConfiguration($, appState.walletsListConfiguration), rt = j.find(isWalletInfoCurrentlyEmbedded);
          if (!!rt) return this.connectEmbeddedWallet(rt);
          const pt = j.filter(isWalletInfoRemote).find((St) => eqWalletName(St, _));
          if (!!pt) return this.openSingleWalletModal(pt);
          const Bt = `Trying to open modal window with unknown wallet "${_}".`;
          throw this.tracker.trackConnectionError(Bt), new TonConnectUIError(Bt);
        });
      }
      close(_ = "action-cancelled") {
        _ === "action-cancelled" && this.tracker.trackConnectionError("Connection was cancelled"), widgetController.closeSingleWalletModal("action-cancelled");
      }
      onStateChange(_) {
        return this.consumers.push(_), () => {
          this.consumers = this.consumers.filter(($) => $ !== _);
        };
      }
      connectEmbeddedWallet(_) {
        const $ = (rt) => {
          setLastSelectedWalletInfo(_), this.connector.connect({
            jsBridgeKey: _.jsBridgeKey
          }, rt);
        }, j = appState.connectRequestParameters;
        (j == null ? void 0 : j.state) === "loading" ? this.setConnectRequestParametersCallback($) : $(j == null ? void 0 : j.value);
      }
      openSingleWalletModal(_) {
        return __async(this, null, function* () {
          return isInTMA() && sendExpand(), widgetController.openSingleWalletModal(_), new Promise(($) => {
            const j = this.onStateChange((rt) => {
              const { status: et } = rt;
              et === "opened" && (j(), $());
            });
          });
        });
      }
    }
    class TonConnectUITracker {
      constructor(_) {
        __publicField(this, "eventPrefix", "ton-connect-ui-"), __publicField(this, "tonConnectUiVersion"), __publicField(this, "tonConnectSdkVersion", null), __publicField(this, "eventDispatcher");
        var $;
        this.eventDispatcher = ($ = _ == null ? void 0 : _.eventDispatcher) != null ? $ : new BrowserEventDispatcher(), this.tonConnectUiVersion = _.tonConnectUiVersion, this.init().catch();
      }
      get version() {
        return createVersionInfo({
          ton_connect_sdk_lib: this.tonConnectSdkVersion,
          ton_connect_ui_lib: this.tonConnectUiVersion
        });
      }
      init() {
        return __async(this, null, function* () {
          try {
            yield this.setRequestVersionHandler(), this.tonConnectSdkVersion = yield this.requestTonConnectSdkVersion();
          } catch {
          }
        });
      }
      setRequestVersionHandler() {
        return __async(this, null, function* () {
          yield this.eventDispatcher.addEventListener("ton-connect-ui-request-version", () => __async(this, null, function* () {
            yield this.eventDispatcher.dispatchEvent("ton-connect-ui-response-version", createResponseVersionEvent(this.tonConnectUiVersion));
          }));
        });
      }
      requestTonConnectSdkVersion() {
        return __async(this, null, function* () {
          return new Promise((_, $) => __async(this, null, function* () {
            try {
              yield this.eventDispatcher.addEventListener("ton-connect-response-version", (j) => {
                _(j.detail.version);
              }, {
                once: true
              }), yield this.eventDispatcher.dispatchEvent("ton-connect-request-version", createRequestVersionEvent());
            } catch (j) {
              $(j);
            }
          }));
        });
      }
      dispatchUserActionEvent(_) {
        var $;
        try {
          ($ = this.eventDispatcher) == null || $.dispatchEvent(`${this.eventPrefix}${_.type}`, _).catch();
        } catch {
        }
      }
      trackConnectionStarted(..._) {
        try {
          const $ = createConnectionStartedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionCompleted(..._) {
        try {
          const $ = createConnectionCompletedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionError(..._) {
        try {
          const $ = createConnectionErrorEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringStarted(..._) {
        try {
          const $ = createConnectionRestoringStartedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringCompleted(..._) {
        try {
          const $ = createConnectionRestoringCompletedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackConnectionRestoringError(..._) {
        try {
          const $ = createConnectionRestoringErrorEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackDisconnection(..._) {
        try {
          const $ = createDisconnectionEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSentForSignature(..._) {
        try {
          const $ = createTransactionSentForSignatureEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSigned(..._) {
        try {
          const $ = createTransactionSignedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
      trackTransactionSigningFailed(..._) {
        try {
          const $ = createTransactionSigningFailedEvent(this.version, ..._);
          this.dispatchUserActionEvent($);
        } catch {
        }
      }
    }
    const tonConnectUiVersion = "2.0.11";
    class TonConnectUI {
      constructor(_) {
        if (__publicField(this, "walletInfoStorage", new WalletInfoStorage()), __publicField(this, "preferredWalletStorage", new PreferredWalletStorage()), __publicField(this, "tracker"), __publicField(this, "walletInfo", null), __publicField(this, "systemThemeChangeUnsubscribe", null), __publicField(this, "actionsConfiguration"), __publicField(this, "walletsList"), __publicField(this, "connectRequestParametersCallback"), __publicField(this, "connector"), __publicField(this, "modal"), __publicField(this, "singleWalletModal"), __publicField(this, "transactionModal"), __publicField(this, "connectionRestored", Promise.resolve(false)), _ && "connector" in _ && _.connector) this.connector = _.connector;
        else if (_ && "manifestUrl" in _ && _.manifestUrl) this.connector = new TonConnect({
          manifestUrl: _.manifestUrl,
          eventDispatcher: _ == null ? void 0 : _.eventDispatcher
        });
        else throw new TonConnectUIError("You have to specify a `manifestUrl` or a `connector` in the options.");
        this.tracker = new TonConnectUITracker({
          eventDispatcher: _ == null ? void 0 : _.eventDispatcher,
          tonConnectUiVersion
        }), this.modal = new WalletsModalManager({
          connector: this.connector,
          tracker: this.tracker,
          setConnectRequestParametersCallback: (rt) => {
            this.connectRequestParametersCallback = rt;
          }
        }), this.singleWalletModal = new SingleWalletModalManager({
          connector: this.connector,
          tracker: this.tracker,
          setConnectRequestParametersCallback: (rt) => {
            this.connectRequestParametersCallback = rt;
          }
        }), this.transactionModal = new TransactionModalManager({
          connector: this.connector
        }), this.walletsList = this.getWallets(), this.walletsList.then((rt) => preloadImages(uniq(rt.map((et) => et.imageUrl))));
        const $ = this.normalizeWidgetRoot(_ == null ? void 0 : _.widgetRootId);
        this.subscribeToWalletChange(), (_ == null ? void 0 : _.restoreConnection) !== false && (this.connectionRestored = createMacrotaskAsync(() => __async(this, null, function* () {
          return this.tracker.trackConnectionRestoringStarted(), yield this.connector.restoreConnection(), this.connector.connected ? this.tracker.trackConnectionRestoringCompleted(this.wallet) : (this.tracker.trackConnectionRestoringError("Connection was not restored"), this.walletInfoStorage.removeWalletInfo()), this.connector.connected;
        }))), this.uiOptions = mergeOptions(_, {
          uiPreferences: {
            theme: "SYSTEM"
          }
        });
        const j = this.preferredWalletStorage.getPreferredWalletAppName();
        setAppState({
          connector: this.connector,
          preferredWalletAppName: j
        }), widgetController.renderApp($, this);
      }
      static getWallets() {
        return TonConnect.getWallets();
      }
      get connected() {
        return this.connector.connected;
      }
      get account() {
        return this.connector.account;
      }
      get wallet() {
        return this.connector.wallet ? __spreadValues$1(__spreadValues$1({}, this.connector.wallet), this.walletInfo) : null;
      }
      set uiOptions(_) {
        var $, j, rt, et, st;
        this.checkButtonRootExist(_.buttonRootId), this.actionsConfiguration = _.actionsConfiguration, ($ = _.uiPreferences) != null && $.theme ? ((j = _.uiPreferences) == null ? void 0 : j.theme) !== "SYSTEM" ? ((rt = this.systemThemeChangeUnsubscribe) == null || rt.call(this), setTheme(_.uiPreferences.theme, _.uiPreferences.colorsSet)) : (setTheme(getSystemTheme(), _.uiPreferences.colorsSet), this.systemThemeChangeUnsubscribe || (this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme))) : (et = _.uiPreferences) != null && et.colorsSet && setColors(_.uiPreferences.colorsSet), (st = _.uiPreferences) != null && st.borderRadius && setBorderRadius(_.uiPreferences.borderRadius), setAppState((pt) => {
          var Et, Bt;
          const St = mergeOptions(__spreadValues$1(__spreadValues$1(__spreadValues$1(__spreadValues$1({}, _.language && {
            language: _.language
          }), !!((Et = _.actionsConfiguration) != null && Et.returnStrategy) && {
            returnStrategy: _.actionsConfiguration.returnStrategy
          }), !!((Bt = _.actionsConfiguration) != null && Bt.twaReturnUrl) && {
            twaReturnUrl: _.actionsConfiguration.twaReturnUrl
          }), !!_.walletsListConfiguration && {
            walletsListConfiguration: _.walletsListConfiguration
          }), unwrap(pt));
          return _.buttonRootId !== void 0 && (St.buttonRootId = _.buttonRootId), _.enableAndroidBackHandler !== void 0 && (St.enableAndroidBackHandler = _.enableAndroidBackHandler), St;
        });
      }
      setConnectRequestParameters(_) {
        var $;
        setAppState({
          connectRequestParameters: _
        }), ((_ == null ? void 0 : _.state) === "ready" || !_) && (($ = this.connectRequestParametersCallback) == null || $.call(this, _ == null ? void 0 : _.value));
      }
      getWallets() {
        return __async(this, null, function* () {
          return this.connector.getWallets();
        });
      }
      onStatusChange(_, $) {
        return this.connector.onStatusChange((j) => __async(this, null, function* () {
          if (j) {
            const rt = yield this.getSelectedWalletInfo(j);
            _(__spreadValues$1(__spreadValues$1({}, j), rt || this.walletInfoStorage.getWalletInfo()));
          } else _(j);
        }), $);
      }
      openModal() {
        return __async(this, null, function* () {
          return this.modal.open();
        });
      }
      closeModal(_) {
        this.modal.close(_);
      }
      onModalStateChange(_) {
        return this.modal.onStateChange(_);
      }
      get modalState() {
        return this.modal.state;
      }
      openSingleWalletModal(_) {
        return __async(this, null, function* () {
          return this.singleWalletModal.open(_);
        });
      }
      closeSingleWalletModal(_) {
        this.singleWalletModal.close(_);
      }
      onSingleWalletModalStateChange(_) {
        return this.singleWalletModal.onStateChange(_);
      }
      get singleWalletModalState() {
        return this.singleWalletModal.state;
      }
      connectWallet() {
        return __async(this, null, function* () {
          const $ = (yield this.getWallets()).find(isWalletInfoCurrentlyEmbedded);
          return $ ? yield this.connectEmbeddedWallet($) : yield this.connectExternalWallet();
        });
      }
      disconnect() {
        return this.tracker.trackDisconnection(this.wallet, "dapp"), widgetController.clearAction(), widgetController.removeSelectedWalletInfo(), this.walletInfoStorage.removeWalletInfo(), this.connector.disconnect();
      }
      sendTransaction(_, $) {
        return __async(this, null, function* () {
          if (this.tracker.trackTransactionSentForSignature(this.wallet, _), !this.connected) throw this.tracker.trackTransactionSigningFailed(this.wallet, _, "Wallet was not connected"), new TonConnectUIError("Connect wallet to send a transaction.");
          isInTMA() && sendExpand();
          const { notifications: j, modals: rt, returnStrategy: et, twaReturnUrl: st, skipRedirectToWallet: pt } = this.getModalsAndNotificationsConfiguration($);
          widgetController.setAction({
            name: "confirm-transaction",
            showNotification: j.includes("before"),
            openModal: rt.includes("before"),
            sent: false
          });
          const Et = () => {
            Bt.signal.aborted || (widgetController.setAction({
              name: "confirm-transaction",
              showNotification: j.includes("before"),
              openModal: rt.includes("before"),
              sent: true
            }), this.walletInfo && "universalLink" in this.walletInfo && (this.walletInfo.openMethod === "universal-link" || this.walletInfo.openMethod === "custom-deeplink") && (isTelegramUrl(this.walletInfo.universalLink) ? redirectToTelegram(this.walletInfo.universalLink, {
              returnStrategy: et,
              twaReturnUrl: st || appState.twaReturnUrl,
              forceRedirect: false
            }) : redirectToWallet(this.walletInfo.universalLink, this.walletInfo.deepLink, {
              returnStrategy: et,
              forceRedirect: false
            }, () => {
            })));
          }, Bt = new AbortController(), St = this.onTransactionModalStateChange(($t) => {
            ($t == null ? void 0 : $t.openModal) || (St(), $t || Bt.abort());
          });
          try {
            const $t = yield this.waitForSendTransaction({
              transaction: _,
              signal: Bt.signal
            }, Et);
            return this.tracker.trackTransactionSigned(this.wallet, _, $t), widgetController.setAction({
              name: "transaction-sent",
              showNotification: j.includes("success"),
              openModal: rt.includes("success")
            }), $t;
          } catch ($t) {
            throw widgetController.setAction({
              name: "transaction-canceled",
              showNotification: j.includes("error"),
              openModal: rt.includes("error")
            }), $t instanceof TonConnectError ? $t : (console.error($t), new TonConnectUIError("Unhandled error:" + $t));
          } finally {
            St();
          }
        });
      }
      connectEmbeddedWallet(_) {
        return __async(this, null, function* () {
          const $ = (rt) => {
            setLastSelectedWalletInfo(_), this.connector.connect({
              jsBridgeKey: _.jsBridgeKey
            }, rt);
          }, j = appState.connectRequestParameters;
          return (j == null ? void 0 : j.state) === "loading" ? this.connectRequestParametersCallback = $ : $(j == null ? void 0 : j.value), yield this.waitForWalletConnection({
            ignoreErrors: false
          });
        });
      }
      connectExternalWallet() {
        return __async(this, null, function* () {
          const _ = new AbortController();
          widgetController.openWalletsModal();
          const $ = this.onModalStateChange((j) => {
            const { status: rt, closeReason: et } = j;
            rt !== "opened" && ($(), et === "action-cancelled" && _.abort());
          });
          return yield this.waitForWalletConnection({
            ignoreErrors: true,
            signal: _.signal
          });
        });
      }
      waitForWalletConnection(_) {
        return __async(this, null, function* () {
          return new Promise(($, j) => {
            this.tracker.trackConnectionStarted();
            const { ignoreErrors: rt = false, signal: et = null } = _;
            if (et && et.aborted) return this.tracker.trackConnectionError("Connection was cancelled"), j(new TonConnectUIError("Wallet was not connected"));
            const st = (Bt) => __async(this, null, function* () {
              if (Bt) this.tracker.trackConnectionCompleted(Bt), Et(), $(Bt);
              else {
                if (this.tracker.trackConnectionError("Connection was cancelled"), rt) return;
                Et(), j(new TonConnectUIError("Wallet was not connected"));
              }
            }), pt = (Bt) => {
              this.tracker.trackConnectionError(Bt.message), !rt && (Et(), j(Bt));
            }, Et = this.onStatusChange((Bt) => st(Bt), (Bt) => pt(Bt));
            et && et.addEventListener("abort", () => {
              Et(), j(new TonConnectUIError("Wallet was not connected"));
            }, {
              once: true
            });
          });
        });
      }
      waitForSendTransaction(_, $) {
        return __async(this, null, function* () {
          return new Promise((j, rt) => {
            const { transaction: et, signal: st } = _;
            if (st.aborted) return this.tracker.trackTransactionSigningFailed(this.wallet, et, "Transaction was cancelled"), rt(new TonConnectUIError("Transaction was not sent"));
            const pt = (St) => __async(this, null, function* () {
              j(St);
            }), Et = (St) => {
              rt(St);
            }, Bt = () => {
              this.tracker.trackTransactionSigningFailed(this.wallet, et, "Transaction was cancelled"), rt(new TonConnectUIError("Transaction was not sent"));
            };
            st.addEventListener("abort", Bt, {
              once: true
            }), this.connector.sendTransaction(et, {
              onRequestSent: $,
              signal: st
            }).then((St) => (st.removeEventListener("abort", Bt), pt(St))).catch((St) => (st.removeEventListener("abort", Bt), Et(St)));
          });
        });
      }
      onTransactionModalStateChange(_) {
        return this.transactionModal.onStateChange(_);
      }
      subscribeToWalletChange() {
        this.connector.onStatusChange((_) => __async(this, null, function* () {
          var $;
          _ ? (yield this.updateWalletInfo(_), this.setPreferredWalletAppName((($ = this.walletInfo) == null ? void 0 : $.appName) || _.device.appName)) : this.walletInfoStorage.removeWalletInfo();
        }));
      }
      setPreferredWalletAppName(_) {
        this.preferredWalletStorage.setPreferredWalletAppName(_), setAppState({
          preferredWalletAppName: _
        });
      }
      getSelectedWalletInfo(_) {
        return __async(this, null, function* () {
          let $ = widgetController.getSelectedWalletInfo();
          if (!$) return null;
          let j;
          if ("name" in $) j = $;
          else {
            const et = applyWalletsListConfiguration(yield this.walletsList, appState.walletsListConfiguration).find((st) => eqWalletName(st, _.device.appName));
            if (!et) throw new TonConnectUIError(`Cannot find WalletInfo for the '${_.device.appName}' wallet`);
            j = __spreadValues$1(__spreadValues$1({}, et), $);
          }
          return j;
        });
      }
      updateWalletInfo(_) {
        return __async(this, null, function* () {
          const $ = yield this.getSelectedWalletInfo(_);
          if ($) {
            this.walletInfo = $, this.walletInfoStorage.setWalletInfo($);
            return;
          }
          const j = this.walletInfoStorage.getWalletInfo();
          if (j) {
            this.walletInfo = j;
            return;
          }
          this.walletInfo = (yield this.walletsList).find((rt) => eqWalletName(rt, _.device.appName)) || null;
        });
      }
      normalizeWidgetRoot(_) {
        if (!_ || !document.getElementById(_)) {
          _ = "tc-widget-root";
          const $ = document.createElement("div");
          $.id = _, document.body.appendChild($);
        }
        return _;
      }
      checkButtonRootExist(_) {
        if (_ != null && !document.getElementById(_)) throw new TonConnectUIError(`${_} element not found in the document.`);
      }
      getModalsAndNotificationsConfiguration(_) {
        var $, j, rt, et, st, pt;
        const Et = [
          "before",
          "success",
          "error"
        ];
        let Bt = Et;
        ($ = this.actionsConfiguration) != null && $.notifications && ((j = this.actionsConfiguration) == null ? void 0 : j.notifications) !== "all" && (Bt = this.actionsConfiguration.notifications), (_ == null ? void 0 : _.notifications) && (_.notifications === "all" ? Bt = Et : Bt = _.notifications);
        let St = [
          "before"
        ];
        (rt = this.actionsConfiguration) != null && rt.modals && (this.actionsConfiguration.modals === "all" ? St = Et : St = this.actionsConfiguration.modals), (_ == null ? void 0 : _.modals) && (_.modals === "all" ? St = Et : St = _.modals);
        const $t = (_ == null ? void 0 : _.returnStrategy) || ((et = this.actionsConfiguration) == null ? void 0 : et.returnStrategy) || "back", kt = (_ == null ? void 0 : _.twaReturnUrl) || ((st = this.actionsConfiguration) == null ? void 0 : st.twaReturnUrl);
        let Tt = (_ == null ? void 0 : _.skipRedirectToWallet) || ((pt = this.actionsConfiguration) == null ? void 0 : pt.skipRedirectToWallet) || "ios";
        return isInTMA() && (Tt = "never"), {
          notifications: Bt,
          modals: St,
          returnStrategy: $t,
          twaReturnUrl: kt,
          skipRedirectToWallet: Tt
        };
      }
    }
    var __defProp = Object.defineProperty, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (d, _, $) => _ in d ? __defProp(d, _, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: $
    }) : d[_] = $, __spreadValues = (d, _) => {
      for (var $ in _ || (_ = {})) __hasOwnProp.call(_, $) && __defNormalProp(d, $, _[$]);
      if (__getOwnPropSymbols) for (var $ of __getOwnPropSymbols(_)) __propIsEnum.call(_, $) && __defNormalProp(d, $, _[$]);
      return d;
    }, __objRest = (d, _) => {
      var $ = {};
      for (var j in d) __hasOwnProp.call(d, j) && _.indexOf(j) < 0 && ($[j] = d[j]);
      if (d != null && __getOwnPropSymbols) for (var j of __getOwnPropSymbols(d)) _.indexOf(j) < 0 && __propIsEnum.call(d, j) && ($[j] = d[j]);
      return $;
    }, jsxRuntime = {
      exports: {}
    }, reactJsxRuntime_production_min = {};
    var hasRequiredReactJsxRuntime_production_min;
    function requireReactJsxRuntime_production_min() {
      if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
      hasRequiredReactJsxRuntime_production_min = 1;
      var d = React, _ = Symbol.for("react.element"), $ = Symbol.for("react.fragment"), j = Object.prototype.hasOwnProperty, rt = d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, et = {
        key: true,
        ref: true,
        __self: true,
        __source: true
      };
      function st(pt, Et, Bt) {
        var St, $t = {}, kt = null, Tt = null;
        Bt !== void 0 && (kt = "" + Bt), Et.key !== void 0 && (kt = "" + Et.key), Et.ref !== void 0 && (Tt = Et.ref);
        for (St in Et) j.call(Et, St) && !et.hasOwnProperty(St) && ($t[St] = Et[St]);
        if (pt && pt.defaultProps) for (St in Et = pt.defaultProps, Et) $t[St] === void 0 && ($t[St] = Et[St]);
        return {
          $$typeof: _,
          type: pt,
          key: kt,
          ref: Tt,
          props: $t,
          _owner: rt.current
        };
      }
      return reactJsxRuntime_production_min.Fragment = $, reactJsxRuntime_production_min.jsx = st, reactJsxRuntime_production_min.jsxs = st, reactJsxRuntime_production_min;
    }
    (function(d) {
      d.exports = requireReactJsxRuntime_production_min();
    })(jsxRuntime);
    const jsx = jsxRuntime.exports.jsx;
    function isClientSide() {
      return typeof window < "u";
    }
    function isServerSide() {
      return !isClientSide();
    }
    const TonConnectUIContext = reactExports.createContext(null);
    let tonConnectUI = null;
    const TonConnectUIProvider = (d) => {
      var _ = d, { children: $ } = _, j = __objRest(_, [
        "children"
      ]);
      return isClientSide() && !tonConnectUI && (tonConnectUI = new TonConnectUI(j)), jsx(TonConnectUIContext.Provider, {
        value: tonConnectUI,
        children: $
      });
    }, TonConnectUIProvider$1 = reactExports.memo(TonConnectUIProvider);
    class TonConnectUIReactError extends TonConnectUIError {
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, TonConnectUIReactError.prototype);
      }
    }
    class TonConnectProviderNotSetError extends TonConnectUIReactError {
      constructor(..._) {
        super(..._), Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);
      }
    }
    function checkProvider(d) {
      if (!d) throw new TonConnectProviderNotSetError("You should add <TonConnectUIProvider> on the top of the app to use TonConnect");
      return true;
    }
    function useTonConnectUI() {
      const d = reactExports.useContext(TonConnectUIContext), _ = reactExports.useCallback(($) => {
        d && (d.uiOptions = $);
      }, [
        d
      ]);
      return isServerSide() ? [
        null,
        () => {
        }
      ] : (checkProvider(d), [
        d,
        _
      ]);
    }
    const buttonRootId = "ton-connect-button", TonConnectButton = ({ className: d, style: _ }) => {
      const [$, j] = useTonConnectUI();
      return reactExports.useEffect(() => (j({
        buttonRootId
      }), () => j({
        buttonRootId: null
      })), [
        j
      ]), jsx("div", {
        id: buttonRootId,
        className: d,
        style: __spreadValues({
          width: "fit-content"
        }, _)
      });
    };
    reactExports.memo(TonConnectButton);
    var dist$3 = {}, dist$2 = {}, Address$n = {};
    const SymbolInspect = Symbol.for("nodejs.util.inspect.custom");
    var symbol_inspect = SymbolInspect, crc16$5 = {};
    Object.defineProperty(crc16$5, "__esModule", {
      value: true
    });
    crc16$5.crc16 = void 0;
    function crc16$4(d) {
      let $ = 0;
      const j = Buffer.alloc(d.length + 2);
      j.set(d);
      for (let rt of j) {
        let et = 128;
        for (; et > 0; ) $ <<= 1, rt & et && ($ += 1), et >>= 1, $ > 65535 && ($ &= 65535, $ ^= 4129);
      }
      return Buffer.from([
        Math.floor($ / 256),
        $ % 256
      ]);
    }
    crc16$5.crc16 = crc16$4;
    var __importDefault$a = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    }, _a$2;
    Object.defineProperty(Address$n, "__esModule", {
      value: true
    });
    Address$n.address = Address$n.Address = void 0;
    const symbol_inspect_1$2 = __importDefault$a(symbol_inspect), crc16_1$1 = crc16$5, bounceable_tag$1 = 17, non_bounceable_tag$1 = 81, test_flag$1 = 128;
    function parseFriendlyAddress$1(d) {
      if (typeof d == "string" && !Address$m.isFriendly(d)) throw new Error("Unknown address type");
      const _ = Buffer.isBuffer(d) ? d : Buffer.from(d, "base64");
      if (_.length !== 36) throw new Error("Unknown address type: byte length is not equal to 36");
      const $ = _.subarray(0, 34), j = _.subarray(34, 36), rt = (0, crc16_1$1.crc16)($);
      if (!(rt[0] === j[0] && rt[1] === j[1])) throw new Error("Invalid checksum: " + d);
      let et = $[0], st = false, pt = false;
      if (et & test_flag$1 && (st = true, et = et ^ test_flag$1), et !== bounceable_tag$1 && et !== non_bounceable_tag$1) throw "Unknown address tag";
      pt = et === bounceable_tag$1;
      let Et = null;
      $[1] === 255 ? Et = -1 : Et = $[1];
      const Bt = $.subarray(2, 34);
      return {
        isTestOnly: st,
        isBounceable: pt,
        workchain: Et,
        hashPart: Bt
      };
    }
    let Address$m = class Zn {
      static isAddress(_) {
        return _ instanceof Zn;
      }
      static isFriendly(_) {
        return !(_.length !== 48 || !/[A-Za-z0-9+/_-]+/.test(_));
      }
      static isRaw(_) {
        if (_.indexOf(":") === -1) return false;
        let [$, j] = _.split(":");
        return !(!Number.isInteger(parseFloat($)) || !/[a-f0-9]+/.test(j.toLowerCase()) || j.length !== 64);
      }
      static normalize(_) {
        return typeof _ == "string" ? Zn.parse(_).toString() : _.toString();
      }
      static parse(_) {
        if (Zn.isFriendly(_)) return this.parseFriendly(_).address;
        if (Zn.isRaw(_)) return this.parseRaw(_);
        throw new Error("Unknown address type: " + _);
      }
      static parseRaw(_) {
        let $ = parseInt(_.split(":")[0]), j = Buffer.from(_.split(":")[1], "hex");
        return new Zn($, j);
      }
      static parseFriendly(_) {
        if (Buffer.isBuffer(_)) {
          let $ = parseFriendlyAddress$1(_);
          return {
            isBounceable: $.isBounceable,
            isTestOnly: $.isTestOnly,
            address: new Zn($.workchain, $.hashPart)
          };
        } else {
          let $ = _.replace(/\-/g, "+").replace(/_/g, "/"), j = parseFriendlyAddress$1($);
          return {
            isBounceable: j.isBounceable,
            isTestOnly: j.isTestOnly,
            address: new Zn(j.workchain, j.hashPart)
          };
        }
      }
      constructor(_, $) {
        if (this.toRawString = () => this.workChain + ":" + this.hash.toString("hex"), this.toRaw = () => {
          const j = Buffer.alloc(36);
          return j.set(this.hash), j.set([
            this.workChain,
            this.workChain,
            this.workChain,
            this.workChain
          ], 32), j;
        }, this.toStringBuffer = (j) => {
          let rt = j && j.testOnly !== void 0 ? j.testOnly : false, st = (j && j.bounceable !== void 0 ? j.bounceable : true) ? bounceable_tag$1 : non_bounceable_tag$1;
          rt && (st |= test_flag$1);
          const pt = Buffer.alloc(34);
          pt[0] = st, pt[1] = this.workChain, pt.set(this.hash, 2);
          const Et = Buffer.alloc(36);
          return Et.set(pt), Et.set((0, crc16_1$1.crc16)(pt), 34), Et;
        }, this.toString = (j) => {
          let rt = j && j.urlSafe !== void 0 ? j.urlSafe : true, et = this.toStringBuffer(j);
          return rt ? et.toString("base64").replace(/\+/g, "-").replace(/\//g, "_") : et.toString("base64");
        }, this[_a$2] = () => this.toString(), $.length !== 32) throw new Error("Invalid address hash length: " + $.length);
        this.workChain = _, this.hash = $, Object.freeze(this);
      }
      equals(_) {
        return _.workChain !== this.workChain ? false : _.hash.equals(this.hash);
      }
    };
    Address$n.Address = Address$m;
    _a$2 = symbol_inspect_1$2.default;
    function address(d) {
      return Address$m.parse(d);
    }
    Address$n.address = address;
    var ExternalAddress$1 = {}, __importDefault$9 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    }, _a$1;
    Object.defineProperty(ExternalAddress$1, "__esModule", {
      value: true
    });
    ExternalAddress$1.ExternalAddress = void 0;
    const symbol_inspect_1$1 = __importDefault$9(symbol_inspect);
    class ExternalAddress {
      static isAddress(_) {
        return _ instanceof ExternalAddress;
      }
      constructor(_, $) {
        this[_a$1] = () => this.toString(), this.value = _, this.bits = $;
      }
      toString() {
        return `External<${this.bits}:${this.value}>`;
      }
    }
    ExternalAddress$1.ExternalAddress = ExternalAddress;
    _a$1 = symbol_inspect_1$1.default;
    var ADNLAddress$1 = {}, base32 = {};
    Object.defineProperty(base32, "__esModule", {
      value: true
    });
    base32.base32Decode = base32.base32Encode = void 0;
    const alphabet = "abcdefghijklmnopqrstuvwxyz234567";
    function base32Encode(d) {
      const _ = d.byteLength;
      let $ = 0, j = 0, rt = "";
      for (let et = 0; et < _; et++) for (j = j << 8 | d[et], $ += 8; $ >= 5; ) rt += alphabet[j >>> $ - 5 & 31], $ -= 5;
      return $ > 0 && (rt += alphabet[j << 5 - $ & 31]), rt;
    }
    base32.base32Encode = base32Encode;
    function readChar(d, _) {
      const $ = d.indexOf(_);
      if ($ === -1) throw new Error("Invalid character found: " + _);
      return $;
    }
    function base32Decode(d) {
      let _;
      _ = d.toLowerCase();
      const { length: $ } = _;
      let j = 0, rt = 0, et = 0;
      const st = Buffer.alloc($ * 5 / 8 | 0);
      for (let pt = 0; pt < $; pt++) rt = rt << 5 | readChar(alphabet, _[pt]), j += 5, j >= 8 && (st[et++] = rt >>> j - 8 & 255, j -= 8);
      return st;
    }
    base32.base32Decode = base32Decode;
    var __importDefault$8 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    }, _a;
    Object.defineProperty(ADNLAddress$1, "__esModule", {
      value: true
    });
    ADNLAddress$1.ADNLAddress = void 0;
    const symbol_inspect_1 = __importDefault$8(symbol_inspect), base32_1 = base32, crc16_1 = crc16$5;
    class ADNLAddress {
      static parseFriendly(_) {
        if (_.length !== 55) throw Error("Invalid address");
        _ = "f" + _;
        let $ = (0, base32_1.base32Decode)(_);
        if ($[0] !== 45) throw Error("Invalid address");
        let j = $.slice(33);
        if (!(0, crc16_1.crc16)($.slice(0, 33)).equals(j)) throw Error("Invalid address");
        return new ADNLAddress($.slice(1, 33));
      }
      static parseRaw(_) {
        const $ = Buffer.from(_, "base64");
        return new ADNLAddress($);
      }
      constructor(_) {
        if (this.toRaw = () => this.address.toString("hex").toUpperCase(), this.toString = () => {
          let $ = Buffer.concat([
            Buffer.from([
              45
            ]),
            this.address
          ]), j = (0, crc16_1.crc16)($);
          return $ = Buffer.concat([
            $,
            j
          ]), (0, base32_1.base32Encode)($).slice(1);
        }, this[_a] = () => this.toString(), _.length !== 32) throw Error("Invalid address");
        this.address = _;
      }
      equals(_) {
        return this.address.equals(_.address);
      }
    }
    ADNLAddress$1.ADNLAddress = ADNLAddress;
    _a = symbol_inspect_1.default;
    var contractAddress$1 = {}, Builder = {}, BitBuilder = {}, BitString$4 = {}, paddedBits = {}, hasRequiredPaddedBits;
    function requirePaddedBits() {
      if (hasRequiredPaddedBits) return paddedBits;
      hasRequiredPaddedBits = 1, Object.defineProperty(paddedBits, "__esModule", {
        value: true
      }), paddedBits.paddedBufferToBits = paddedBits.bitsToPaddedBuffer = void 0;
      const d = requireBitBuilder(), _ = requireBitString();
      function $(rt) {
        let et = new d.BitBuilder(Math.ceil(rt.length / 8) * 8);
        et.writeBits(rt);
        let st = Math.ceil(rt.length / 8) * 8 - rt.length;
        for (let pt = 0; pt < st; pt++) pt === 0 ? et.writeBit(1) : et.writeBit(0);
        return et.buffer();
      }
      paddedBits.bitsToPaddedBuffer = $;
      function j(rt) {
        let et = 0;
        for (let st = rt.length - 1; st >= 0; st--) if (rt[st] !== 0) {
          const pt = rt[st];
          let Et = pt & -pt;
          Et & 1 || (Et = Math.log2(Et) + 1), st > 0 && (et = st << 3), et += 8 - Et;
          break;
        }
        return new _.BitString(rt, 0, et);
      }
      return paddedBits.paddedBufferToBits = j, paddedBits;
    }
    var hasRequiredBitString;
    function requireBitString() {
      if (hasRequiredBitString) return BitString$4;
      hasRequiredBitString = 1;
      var d = commonjsGlobal && commonjsGlobal.__importDefault || function(et) {
        return et && et.__esModule ? et : {
          default: et
        };
      }, _;
      Object.defineProperty(BitString$4, "__esModule", {
        value: true
      }), BitString$4.BitString = void 0;
      const $ = requirePaddedBits(), j = d(symbol_inspect);
      class rt {
        static isBitString(st) {
          return st instanceof rt;
        }
        constructor(st, pt, Et) {
          if (this[_] = () => this.toString(), Et < 0) throw new Error(`Length ${Et} is out of bounds`);
          this._length = Et, this._data = st, this._offset = pt;
        }
        get length() {
          return this._length;
        }
        at(st) {
          if (st >= this._length) throw new Error(`Index ${st} > ${this._length} is out of bounds`);
          if (st < 0) throw new Error(`Index ${st} < 0 is out of bounds`);
          let pt = this._offset + st >> 3, Et = 7 - (this._offset + st) % 8;
          return (this._data[pt] & 1 << Et) !== 0;
        }
        substring(st, pt) {
          if (st > this._length) throw new Error(`Offset(${st}) > ${this._length} is out of bounds`);
          if (st < 0) throw new Error(`Offset(${st}) < 0 is out of bounds`);
          if (pt === 0) return rt.EMPTY;
          if (st + pt > this._length) throw new Error(`Offset ${st} + Length ${pt} > ${this._length} is out of bounds`);
          return new rt(this._data, this._offset + st, pt);
        }
        subbuffer(st, pt) {
          if (st > this._length) throw new Error(`Offset ${st} is out of bounds`);
          if (st < 0) throw new Error(`Offset ${st} is out of bounds`);
          if (st + pt > this._length) throw new Error(`Offset + Lenght = ${st + pt} is out of bounds`);
          if (pt % 8 !== 0 || (this._offset + st) % 8 !== 0) return null;
          let Et = this._offset + st >> 3, Bt = Et + (pt >> 3);
          return this._data.subarray(Et, Bt);
        }
        equals(st) {
          if (this._length !== st._length) return false;
          for (let pt = 0; pt < this._length; pt++) if (this.at(pt) !== st.at(pt)) return false;
          return true;
        }
        toString() {
          const st = (0, $.bitsToPaddedBuffer)(this);
          if (this._length % 4 === 0) {
            const pt = st.subarray(0, Math.ceil(this._length / 8)).toString("hex").toUpperCase();
            return this._length % 8 === 0 ? pt : pt.substring(0, pt.length - 1);
          } else {
            const pt = st.toString("hex").toUpperCase();
            return this._length % 8 <= 4 ? pt.substring(0, pt.length - 1) + "_" : pt + "_";
          }
        }
      }
      return BitString$4.BitString = rt, _ = j.default, rt.EMPTY = new rt(Buffer.alloc(0), 0, 0), BitString$4;
    }
    var hasRequiredBitBuilder;
    function requireBitBuilder() {
      if (hasRequiredBitBuilder) return BitBuilder;
      hasRequiredBitBuilder = 1, Object.defineProperty(BitBuilder, "__esModule", {
        value: true
      }), BitBuilder.BitBuilder = void 0;
      const d = Address$n, _ = ExternalAddress$1, $ = requireBitString();
      let j = class {
        constructor(et = 1023) {
          this._buffer = Buffer.alloc(Math.ceil(et / 8)), this._length = 0;
        }
        get length() {
          return this._length;
        }
        writeBit(et) {
          let st = this._length;
          if (st > this._buffer.length * 8) throw new Error("BitBuilder overflow");
          (typeof et == "boolean" && et === true || typeof et == "number" && et > 0) && (this._buffer[st / 8 | 0] |= 1 << 7 - st % 8), this._length++;
        }
        writeBits(et) {
          for (let st = 0; st < et.length; st++) this.writeBit(et.at(st));
        }
        writeBuffer(et) {
          if (this._length % 8 === 0) {
            if (this._length + et.length * 8 > this._buffer.length * 8) throw new Error("BitBuilder overflow");
            et.copy(this._buffer, this._length / 8), this._length += et.length * 8;
          } else for (let st = 0; st < et.length; st++) this.writeUint(et[st], 8);
        }
        writeUint(et, st) {
          if (st < 0 || !Number.isSafeInteger(st)) throw Error(`invalid bit length. Got ${st}`);
          const pt = BigInt(et);
          if (st === 0) {
            if (pt !== 0n) throw Error(`value is not zero for ${st} bits. Got ${et}`);
            return;
          }
          const Et = 1n << BigInt(st);
          if (pt < 0 || pt >= Et) throw Error(`bitLength is too small for a value ${et}. Got ${st}`);
          if (this._length + st > this._buffer.length * 8) throw new Error("BitBuilder overflow");
          const Bt = 8 - this._length % 8;
          if (Bt > 0) {
            const St = Math.floor(this._length / 8);
            if (st < Bt) {
              const $t = Number(pt);
              this._buffer[St] |= $t << Bt - st, this._length += st;
            } else {
              const $t = Number(pt >> BigInt(st - Bt));
              this._buffer[St] |= $t, this._length += Bt;
            }
          }
          for (st -= Bt; st > 0; ) st >= 8 ? (this._buffer[this._length / 8] = Number(pt >> BigInt(st - 8) & 0xffn), this._length += 8, st -= 8) : (this._buffer[this._length / 8] = Number(pt << BigInt(8 - st) & 0xffn), this._length += st, st = 0);
        }
        writeInt(et, st) {
          let pt = BigInt(et);
          if (st < 0 || !Number.isSafeInteger(st)) throw Error(`invalid bit length. Got ${st}`);
          if (st === 0) {
            if (et !== 0n) throw Error(`value is not zero for ${st} bits. Got ${et}`);
            return;
          }
          if (st === 1) {
            if (et !== -1n && et !== 0n) throw Error(`value is not zero or -1 for ${st} bits. Got ${et}`);
            this.writeBit(et === -1n);
            return;
          }
          let Et = 1n << BigInt(st) - 1n;
          if (pt < -Et || pt >= Et) throw Error(`value is out of range for ${st} bits. Got ${et}`);
          pt < 0 ? (this.writeBit(true), pt = Et + pt) : this.writeBit(false), this.writeUint(pt, st - 1);
        }
        writeVarUint(et, st) {
          let pt = BigInt(et);
          if (st < 0 || !Number.isSafeInteger(st)) throw Error(`invalid bit length. Got ${st}`);
          if (pt < 0) throw Error(`value is negative. Got ${et}`);
          if (pt === 0n) {
            this.writeUint(0, st);
            return;
          }
          const Et = Math.ceil(pt.toString(2).length / 8), Bt = Et * 8;
          this.writeUint(Et, st), this.writeUint(pt, Bt);
        }
        writeVarInt(et, st) {
          let pt = BigInt(et);
          if (st < 0 || !Number.isSafeInteger(st)) throw Error(`invalid bit length. Got ${st}`);
          if (pt === 0n) {
            this.writeUint(0, st);
            return;
          }
          let Et = pt > 0 ? pt : -pt;
          const Bt = Math.ceil((Et.toString(2).length + 1) / 8), St = Bt * 8;
          this.writeUint(Bt, st), this.writeInt(pt, St);
        }
        writeCoins(et) {
          this.writeVarUint(et, 4);
        }
        writeAddress(et) {
          if (et == null) {
            this.writeUint(0, 2);
            return;
          }
          if (d.Address.isAddress(et)) {
            this.writeUint(2, 2), this.writeUint(0, 1), this.writeInt(et.workChain, 8), this.writeBuffer(et.hash);
            return;
          }
          if (_.ExternalAddress.isAddress(et)) {
            this.writeUint(1, 2), this.writeUint(et.bits, 9), this.writeUint(et.value, et.bits);
            return;
          }
          throw Error(`Invalid address. Got ${et}`);
        }
        build() {
          return new $.BitString(this._buffer, 0, this._length);
        }
        buffer() {
          if (this._length % 8 !== 0) throw new Error("BitBuilder buffer is not byte aligned");
          return this._buffer.subarray(0, this._length / 8);
        }
      };
      return BitBuilder.BitBuilder = j, BitBuilder;
    }
    var Cell$u = {}, CellType$1 = {};
    Object.defineProperty(CellType$1, "__esModule", {
      value: true
    });
    CellType$1.CellType = void 0;
    var CellType;
    (function(d) {
      d[d.Ordinary = -1] = "Ordinary", d[d.PrunedBranch = 1] = "PrunedBranch", d[d.Library = 2] = "Library", d[d.MerkleProof = 3] = "MerkleProof", d[d.MerkleUpdate = 4] = "MerkleUpdate";
    })(CellType || (CellType$1.CellType = CellType = {}));
    var Slice$3 = {}, Dictionary = {}, generateMerkleProof = {}, readUnaryLength$2 = {};
    Object.defineProperty(readUnaryLength$2, "__esModule", {
      value: true
    });
    readUnaryLength$2.readUnaryLength = void 0;
    function readUnaryLength$1(d) {
      let _ = 0;
      for (; d.loadBit(); ) _++;
      return _;
    }
    readUnaryLength$2.readUnaryLength = readUnaryLength$1;
    var exoticMerkleProof = {}, BitReader$1 = {};
    Object.defineProperty(BitReader$1, "__esModule", {
      value: true
    });
    BitReader$1.BitReader = void 0;
    const Address_1$4 = Address$n, ExternalAddress_1 = ExternalAddress$1;
    class BitReader {
      constructor(_, $ = 0) {
        this._checkpoints = [], this._bits = _, this._offset = $;
      }
      get offset() {
        return this._offset;
      }
      get remaining() {
        return this._bits.length - this._offset;
      }
      skip(_) {
        if (_ < 0 || this._offset + _ > this._bits.length) throw new Error(`Index ${this._offset + _} is out of bounds`);
        this._offset += _;
      }
      reset() {
        this._checkpoints.length > 0 ? this._offset = this._checkpoints.pop() : this._offset = 0;
      }
      save() {
        this._checkpoints.push(this._offset);
      }
      loadBit() {
        let _ = this._bits.at(this._offset);
        return this._offset++, _;
      }
      preloadBit() {
        return this._bits.at(this._offset);
      }
      loadBits(_) {
        let $ = this._bits.substring(this._offset, _);
        return this._offset += _, $;
      }
      preloadBits(_) {
        return this._bits.substring(this._offset, _);
      }
      loadBuffer(_) {
        let $ = this._preloadBuffer(_, this._offset);
        return this._offset += _ * 8, $;
      }
      preloadBuffer(_) {
        return this._preloadBuffer(_, this._offset);
      }
      loadUint(_) {
        return this._toSafeInteger(this.loadUintBig(_), "loadUintBig");
      }
      loadUintBig(_) {
        let $ = this.preloadUintBig(_);
        return this._offset += _, $;
      }
      preloadUint(_) {
        return this._toSafeInteger(this._preloadUint(_, this._offset), "preloadUintBig");
      }
      preloadUintBig(_) {
        return this._preloadUint(_, this._offset);
      }
      loadInt(_) {
        let $ = this._preloadInt(_, this._offset);
        return this._offset += _, this._toSafeInteger($, "loadUintBig");
      }
      loadIntBig(_) {
        let $ = this._preloadInt(_, this._offset);
        return this._offset += _, $;
      }
      preloadInt(_) {
        return this._toSafeInteger(this._preloadInt(_, this._offset), "preloadIntBig");
      }
      preloadIntBig(_) {
        return this._preloadInt(_, this._offset);
      }
      loadVarUint(_) {
        let $ = Number(this.loadUint(_));
        return this._toSafeInteger(this.loadUintBig($ * 8), "loadVarUintBig");
      }
      loadVarUintBig(_) {
        let $ = Number(this.loadUint(_));
        return this.loadUintBig($ * 8);
      }
      preloadVarUint(_) {
        let $ = Number(this._preloadUint(_, this._offset));
        return this._toSafeInteger(this._preloadUint($ * 8, this._offset + _), "preloadVarUintBig");
      }
      preloadVarUintBig(_) {
        let $ = Number(this._preloadUint(_, this._offset));
        return this._preloadUint($ * 8, this._offset + _);
      }
      loadVarInt(_) {
        let $ = Number(this.loadUint(_));
        return this._toSafeInteger(this.loadIntBig($ * 8), "loadVarIntBig");
      }
      loadVarIntBig(_) {
        let $ = Number(this.loadUint(_));
        return this.loadIntBig($ * 8);
      }
      preloadVarInt(_) {
        let $ = Number(this._preloadUint(_, this._offset));
        return this._toSafeInteger(this._preloadInt($ * 8, this._offset + _), "preloadVarIntBig");
      }
      preloadVarIntBig(_) {
        let $ = Number(this._preloadUint(_, this._offset));
        return this._preloadInt($ * 8, this._offset + _);
      }
      loadCoins() {
        return this.loadVarUintBig(4);
      }
      preloadCoins() {
        return this.preloadVarUintBig(4);
      }
      loadAddress() {
        let _ = Number(this._preloadUint(2, this._offset));
        if (_ === 2) return this._loadInternalAddress();
        throw new Error("Invalid address: " + _);
      }
      loadMaybeAddress() {
        let _ = Number(this._preloadUint(2, this._offset));
        if (_ === 0) return this._offset += 2, null;
        if (_ === 2) return this._loadInternalAddress();
        throw new Error("Invalid address");
      }
      loadExternalAddress() {
        if (Number(this._preloadUint(2, this._offset)) === 1) return this._loadExternalAddress();
        throw new Error("Invalid address");
      }
      loadMaybeExternalAddress() {
        let _ = Number(this._preloadUint(2, this._offset));
        if (_ === 0) return this._offset += 2, null;
        if (_ === 1) return this._loadExternalAddress();
        throw new Error("Invalid address");
      }
      loadAddressAny() {
        let _ = Number(this._preloadUint(2, this._offset));
        if (_ === 0) return this._offset += 2, null;
        if (_ === 2) return this._loadInternalAddress();
        if (_ === 1) return this._loadExternalAddress();
        throw Error(_ === 3 ? "Unsupported" : "Unreachable");
      }
      loadPaddedBits(_) {
        if (_ % 8 !== 0) throw new Error("Invalid number of bits");
        let $ = _;
        for (; ; ) if (this._bits.at(this._offset + $ - 1)) {
          $--;
          break;
        } else $--;
        let j = this._bits.substring(this._offset, $);
        return this._offset += _, j;
      }
      clone() {
        return new BitReader(this._bits, this._offset);
      }
      _preloadInt(_, $) {
        if (_ == 0) return 0n;
        let j = this._bits.at($), rt = 0n;
        for (let et = 0; et < _ - 1; et++) this._bits.at($ + 1 + et) && (rt += 1n << BigInt(_ - et - 1 - 1));
        return j && (rt = rt - (1n << BigInt(_ - 1))), rt;
      }
      _preloadUint(_, $) {
        if (_ == 0) return 0n;
        let j = 0n;
        for (let rt = 0; rt < _; rt++) this._bits.at($ + rt) && (j += 1n << BigInt(_ - rt - 1));
        return j;
      }
      _preloadBuffer(_, $) {
        let j = this._bits.subbuffer($, _ * 8);
        if (j) return j;
        let rt = Buffer.alloc(_);
        for (let et = 0; et < _; et++) rt[et] = Number(this._preloadUint(8, $ + et * 8));
        return rt;
      }
      _loadInternalAddress() {
        if (Number(this._preloadUint(2, this._offset)) !== 2 || this._preloadUint(1, this._offset + 2) !== 0n) throw Error("Invalid address");
        let $ = Number(this._preloadInt(8, this._offset + 3)), j = this._preloadBuffer(32, this._offset + 11);
        return this._offset += 267, new Address_1$4.Address($, j);
      }
      _loadExternalAddress() {
        if (Number(this._preloadUint(2, this._offset)) !== 1) throw Error("Invalid address");
        let $ = Number(this._preloadUint(9, this._offset + 2)), j = this._preloadUint($, this._offset + 11);
        return this._offset += 11 + $, new ExternalAddress_1.ExternalAddress(j, $);
      }
      _toSafeInteger(_, $) {
        if (BigInt(Number.MAX_SAFE_INTEGER) < _ || _ < BigInt(Number.MIN_SAFE_INTEGER)) throw new TypeError(`${_} is out of safe integer range. Use ${$} instead`);
        return Number(_);
      }
    }
    BitReader$1.BitReader = BitReader;
    var hasRequiredExoticMerkleProof;
    function requireExoticMerkleProof() {
      if (hasRequiredExoticMerkleProof) return exoticMerkleProof;
      hasRequiredExoticMerkleProof = 1, Object.defineProperty(exoticMerkleProof, "__esModule", {
        value: true
      }), exoticMerkleProof.convertToMerkleProof = exoticMerkleProof.exoticMerkleProof = void 0;
      const d = BitReader$1, _ = requireBuilder();
      function $(rt, et) {
        const st = new d.BitReader(rt);
        if (rt.length !== 280) throw new Error(`Merkle Proof cell must have exactly (8 + 256 + 16) bits, got "${rt.length}"`);
        if (et.length !== 1) throw new Error(`Merkle Proof cell must have exactly 1 ref, got "${et.length}"`);
        let Et = st.loadUint(8);
        if (Et !== 3) throw new Error(`Merkle Proof cell must have type 3, got "${Et}"`);
        const Bt = st.loadBuffer(32), St = st.loadUint(16), $t = et[0].hash(0), kt = et[0].depth(0);
        if (St !== kt) throw new Error(`Merkle Proof cell ref depth must be exactly "${St}", got "${kt}"`);
        if (!Bt.equals($t)) throw new Error(`Merkle Proof cell ref hash must be exactly "${Bt.toString("hex")}", got "${$t.toString("hex")}"`);
        return {
          proofDepth: St,
          proofHash: Bt
        };
      }
      exoticMerkleProof.exoticMerkleProof = $;
      function j(rt) {
        return (0, _.beginCell)().storeUint(3, 8).storeBuffer(rt.hash(0)).storeUint(rt.depth(0), 16).storeRef(rt).endCell({
          exotic: true
        });
      }
      return exoticMerkleProof.convertToMerkleProof = j, exoticMerkleProof;
    }
    var hasRequiredGenerateMerkleProof;
    function requireGenerateMerkleProof() {
      if (hasRequiredGenerateMerkleProof) return generateMerkleProof;
      hasRequiredGenerateMerkleProof = 1, Object.defineProperty(generateMerkleProof, "__esModule", {
        value: true
      }), generateMerkleProof.generateMerkleProof = generateMerkleProof.generateMerkleProofDirect = void 0;
      const d = requireBuilder(), _ = readUnaryLength$2, $ = requireExoticMerkleProof();
      function j(pt) {
        return (0, d.beginCell)().storeUint(1, 8).storeUint(1, 8).storeBuffer(pt.hash(0)).storeUint(pt.depth(0), 16).endCell({
          exotic: true
        });
      }
      function rt(pt, Et, Bt, St) {
        const $t = Et.asCell();
        if (St.length == 0) return j($t);
        let kt = Et.loadBit() ? 1 : 0, Tt = 0, Pt = pt;
        if (kt === 0) {
          Tt = (0, _.readUnaryLength)(Et);
          for (let It = 0; It < Tt; It++) Pt += Et.loadBit() ? "1" : "0";
        } else if ((Et.loadBit() ? 1 : 0) === 0) {
          Tt = Et.loadUint(Math.ceil(Math.log2(Bt + 1)));
          for (let jt = 0; jt < Tt; jt++) Pt += Et.loadBit() ? "1" : "0";
        } else {
          let jt = Et.loadBit() ? "1" : "0";
          Tt = Et.loadUint(Math.ceil(Math.log2(Bt + 1)));
          for (let Dt = 0; Dt < Tt; Dt++) Pt += jt;
        }
        if (Bt - Tt === 0) return $t;
        {
          let It = $t.beginParse(), jt = It.loadRef(), Dt = It.loadRef();
          if (!jt.isExotic) {
            const Ot = St.filter((Ft) => Pt + "0" === Ft.slice(0, Pt.length + 1));
            jt = rt(Pt + "0", jt.beginParse(), Bt - Tt - 1, Ot);
          }
          if (!Dt.isExotic) {
            const Ot = St.filter((Ft) => Pt + "1" === Ft.slice(0, Pt.length + 1));
            Dt = rt(Pt + "1", Dt.beginParse(), Bt - Tt - 1, Ot);
          }
          return (0, d.beginCell)().storeSlice(It).storeRef(jt).storeRef(Dt).endCell();
        }
      }
      function et(pt, Et, Bt) {
        Et.forEach(($t) => {
          if (!pt.has($t)) throw new Error(`Trying to generate merkle proof for a missing key "${$t}"`);
        });
        const St = (0, d.beginCell)().storeDictDirect(pt).asSlice();
        return rt("", St, Bt.bits, Et.map(($t) => Bt.serialize($t).toString(2).padStart(Bt.bits, "0")));
      }
      generateMerkleProof.generateMerkleProofDirect = et;
      function st(pt, Et, Bt) {
        return (0, $.convertToMerkleProof)(et(pt, Et, Bt));
      }
      return generateMerkleProof.generateMerkleProof = st, generateMerkleProof;
    }
    var generateMerkleUpdate = {}, hasRequiredGenerateMerkleUpdate;
    function requireGenerateMerkleUpdate() {
      if (hasRequiredGenerateMerkleUpdate) return generateMerkleUpdate;
      hasRequiredGenerateMerkleUpdate = 1, Object.defineProperty(generateMerkleUpdate, "__esModule", {
        value: true
      }), generateMerkleUpdate.generateMerkleUpdate = void 0;
      const d = requireBuilder(), _ = requireGenerateMerkleProof();
      function $(rt, et) {
        return (0, d.beginCell)().storeUint(4, 8).storeBuffer(rt.hash(0)).storeBuffer(et.hash(0)).storeUint(rt.depth(0), 16).storeUint(et.depth(0), 16).storeRef(rt).storeRef(et).endCell({
          exotic: true
        });
      }
      function j(rt, et, st, pt) {
        const Et = (0, _.generateMerkleProof)(rt, [
          et
        ], st).refs[0];
        rt.set(et, pt);
        const Bt = (0, _.generateMerkleProof)(rt, [
          et
        ], st).refs[0];
        return $(Et, Bt);
      }
      return generateMerkleUpdate.generateMerkleUpdate = j, generateMerkleUpdate;
    }
    var parseDict$1 = {};
    Object.defineProperty(parseDict$1, "__esModule", {
      value: true
    });
    parseDict$1.parseDict = void 0;
    function readUnaryLength(d) {
      let _ = 0;
      for (; d.loadBit(); ) _++;
      return _;
    }
    function doParse(d, _, $, j, rt) {
      let et = _.loadBit() ? 1 : 0, st = 0, pt = d;
      if (et === 0) {
        st = readUnaryLength(_);
        for (let Et = 0; Et < st; Et++) pt += _.loadBit() ? "1" : "0";
      } else if ((_.loadBit() ? 1 : 0) === 0) {
        st = _.loadUint(Math.ceil(Math.log2($ + 1)));
        for (let Bt = 0; Bt < st; Bt++) pt += _.loadBit() ? "1" : "0";
      } else {
        let Bt = _.loadBit() ? "1" : "0";
        st = _.loadUint(Math.ceil(Math.log2($ + 1)));
        for (let St = 0; St < st; St++) pt += Bt;
      }
      if ($ - st === 0) j.set(BigInt("0b" + pt), rt(_));
      else {
        let Et = _.loadRef(), Bt = _.loadRef();
        Et.isExotic || doParse(pt + "0", Et.beginParse(), $ - st - 1, j, rt), Bt.isExotic || doParse(pt + "1", Bt.beginParse(), $ - st - 1, j, rt);
      }
    }
    function parseDict(d, _, $) {
      let j = /* @__PURE__ */ new Map();
      return d && doParse("", d, _, j, $), j;
    }
    parseDict$1.parseDict = parseDict;
    var serializeDict = {}, findCommonPrefix$1 = {};
    Object.defineProperty(findCommonPrefix$1, "__esModule", {
      value: true
    });
    findCommonPrefix$1.findCommonPrefix = void 0;
    function findCommonPrefix(d, _ = 0) {
      if (d.length === 0) return "";
      let $ = d[0].slice(_);
      for (let j = 1; j < d.length; j++) {
        const rt = d[j];
        for (; rt.indexOf($, _) !== _; ) if ($ = $.substring(0, $.length - 1), $ === "") return $;
      }
      return $;
    }
    findCommonPrefix$1.findCommonPrefix = findCommonPrefix;
    var hasRequiredSerializeDict;
    function requireSerializeDict() {
      if (hasRequiredSerializeDict) return serializeDict;
      hasRequiredSerializeDict = 1, Object.defineProperty(serializeDict, "__esModule", {
        value: true
      }), serializeDict.serializeDict = serializeDict.detectLabelType = serializeDict.writeLabelSame = serializeDict.writeLabelLong = serializeDict.writeLabelShort = serializeDict.buildTree = void 0;
      const d = requireBuilder(), _ = findCommonPrefix$1;
      function $(Ft, Lt) {
        for (; Ft.length < Lt; ) Ft = "0" + Ft;
        return Ft;
      }
      function j(Ft, Lt) {
        if (Ft.size === 0) throw Error("Internal inconsistency");
        let Zt = /* @__PURE__ */ new Map(), Kt = /* @__PURE__ */ new Map();
        for (let [ar, sr] of Ft.entries()) ar[Lt] === "0" ? Zt.set(ar, sr) : Kt.set(ar, sr);
        if (Zt.size === 0) throw Error("Internal inconsistency. Left emtpy.");
        if (Kt.size === 0) throw Error("Internal inconsistency. Right emtpy.");
        return {
          left: Zt,
          right: Kt
        };
      }
      function rt(Ft, Lt) {
        if (Ft.size === 0) throw Error("Internal inconsistency");
        if (Ft.size === 1) return {
          type: "leaf",
          value: Array.from(Ft.values())[0]
        };
        let { left: Zt, right: Kt } = j(Ft, Lt);
        return {
          type: "fork",
          left: et(Zt, Lt + 1),
          right: et(Kt, Lt + 1)
        };
      }
      function et(Ft, Lt = 0) {
        if (Ft.size === 0) throw Error("Internal inconsistency");
        const Zt = (0, _.findCommonPrefix)(Array.from(Ft.keys()), Lt);
        return {
          label: Zt,
          node: rt(Ft, Zt.length + Lt)
        };
      }
      function st(Ft, Lt) {
        let Zt = /* @__PURE__ */ new Map();
        for (let Kt of Array.from(Ft.keys())) {
          const ar = $(Kt.toString(2), Lt);
          Zt.set(ar, Ft.get(Kt));
        }
        return et(Zt);
      }
      serializeDict.buildTree = st;
      function pt(Ft, Lt) {
        Lt.storeBit(0);
        for (let Zt = 0; Zt < Ft.length; Zt++) Lt.storeBit(1);
        return Lt.storeBit(0), Ft.length > 0 && Lt.storeUint(BigInt("0b" + Ft), Ft.length), Lt;
      }
      serializeDict.writeLabelShort = pt;
      function Et(Ft) {
        return 1 + Ft.length + 1 + Ft.length;
      }
      function Bt(Ft, Lt, Zt) {
        Zt.storeBit(1), Zt.storeBit(0);
        let Kt = Math.ceil(Math.log2(Lt + 1));
        return Zt.storeUint(Ft.length, Kt), Ft.length > 0 && Zt.storeUint(BigInt("0b" + Ft), Ft.length), Zt;
      }
      serializeDict.writeLabelLong = Bt;
      function St(Ft, Lt) {
        return 2 + Math.ceil(Math.log2(Lt + 1)) + Ft.length;
      }
      function $t(Ft, Lt, Zt, Kt) {
        Kt.storeBit(1), Kt.storeBit(1), Kt.storeBit(Ft);
        let ar = Math.ceil(Math.log2(Zt + 1));
        Kt.storeUint(Lt, ar);
      }
      serializeDict.writeLabelSame = $t;
      function kt(Ft) {
        return 3 + Math.ceil(Math.log2(Ft + 1));
      }
      function Tt(Ft) {
        if (Ft.length === 0 || Ft.length === 1) return true;
        for (let Lt = 1; Lt < Ft.length; Lt++) if (Ft[Lt] !== Ft[0]) return false;
        return true;
      }
      function Pt(Ft, Lt) {
        let Zt = "short", Kt = Et(Ft), ar = St(Ft, Lt);
        if (ar < Kt && (Kt = ar, Zt = "long"), Tt(Ft)) {
          let sr = kt(Lt);
          sr < Kt && (Kt = sr, Zt = "same");
        }
        return Zt;
      }
      serializeDict.detectLabelType = Pt;
      function It(Ft, Lt, Zt) {
        let Kt = Pt(Ft, Lt);
        Kt === "short" ? pt(Ft, Zt) : Kt === "long" ? Bt(Ft, Lt, Zt) : Kt === "same" && $t(Ft[0] === "1", Ft.length, Lt, Zt);
      }
      function jt(Ft, Lt, Zt, Kt) {
        if (Ft.type === "leaf" && Zt(Ft.value, Kt), Ft.type === "fork") {
          const ar = (0, d.beginCell)(), sr = (0, d.beginCell)();
          Dt(Ft.left, Lt - 1, Zt, ar), Dt(Ft.right, Lt - 1, Zt, sr), Kt.storeRef(ar), Kt.storeRef(sr);
        }
      }
      function Dt(Ft, Lt, Zt, Kt) {
        It(Ft.label, Lt, Kt), jt(Ft.node, Lt - Ft.label.length, Zt, Kt);
      }
      function Ot(Ft, Lt, Zt, Kt) {
        const ar = st(Ft, Lt);
        Dt(ar, Lt, Zt, Kt);
      }
      return serializeDict.serializeDict = Ot, serializeDict;
    }
    var internalKeySerializer = {};
    Object.defineProperty(internalKeySerializer, "__esModule", {
      value: true
    });
    internalKeySerializer.deserializeInternalKey = internalKeySerializer.serializeInternalKey = void 0;
    const Address_1$3 = Address$n, BitString_1$1 = requireBitString(), paddedBits_1$1 = requirePaddedBits();
    function serializeInternalKey(d) {
      if (typeof d == "number") {
        if (!Number.isSafeInteger(d)) throw Error("Invalid key type: not a safe integer: " + d);
        return "n:" + d.toString(10);
      } else {
        if (typeof d == "bigint") return "b:" + d.toString(10);
        if (Address_1$3.Address.isAddress(d)) return "a:" + d.toString();
        if (Buffer.isBuffer(d)) return "f:" + d.toString("hex");
        if (BitString_1$1.BitString.isBitString(d)) return "B:" + d.toString();
        throw Error("Invalid key type");
      }
    }
    internalKeySerializer.serializeInternalKey = serializeInternalKey;
    function deserializeInternalKey(d) {
      let _ = d.slice(0, 2), $ = d.slice(2);
      if (_ === "n:") return parseInt($, 10);
      if (_ === "b:") return BigInt($);
      if (_ === "a:") return Address_1$3.Address.parse($);
      if (_ === "f:") return Buffer.from($, "hex");
      if (_ === "B:") {
        const j = $.slice(-1) == "_";
        if (j || $.length % 2 != 0) {
          let et = j ? $.length - 1 : $.length;
          const st = $.substr(0, et) + "0";
          return !j && et & 1 ? new BitString_1$1.BitString(Buffer.from(st, "hex"), 0, et << 2) : (0, paddedBits_1$1.paddedBufferToBits)(Buffer.from(st, "hex"));
        } else return new BitString_1$1.BitString(Buffer.from($, "hex"), 0, $.length << 2);
      }
      throw Error("Invalid key type: " + _);
    }
    internalKeySerializer.deserializeInternalKey = deserializeInternalKey;
    var hasRequiredDictionary;
    function requireDictionary() {
      if (hasRequiredDictionary) return Dictionary;
      hasRequiredDictionary = 1, Object.defineProperty(Dictionary, "__esModule", {
        value: true
      }), Dictionary.Dictionary = void 0;
      const d = Address$n, _ = requireBuilder(), $ = requireCell(), j = requireBitString(), rt = requireGenerateMerkleProof(), et = requireGenerateMerkleUpdate(), st = parseDict$1, pt = requireSerializeDict(), Et = internalKeySerializer;
      let Bt = class Kn {
        static empty(it, at) {
          return it && at ? new Kn(/* @__PURE__ */ new Map(), it, at) : new Kn(/* @__PURE__ */ new Map(), null, null);
        }
        static load(it, at, ct) {
          let Mt;
          if (ct instanceof $.Cell) {
            if (ct.isExotic) return Kn.empty(it, at);
            Mt = ct.beginParse();
          } else Mt = ct;
          let At = Mt.loadMaybeRef();
          return At && !At.isExotic ? Kn.loadDirect(it, at, At.beginParse()) : Kn.empty(it, at);
        }
        static loadDirect(it, at, ct) {
          if (!ct) return Kn.empty(it, at);
          let Mt;
          ct instanceof $.Cell ? Mt = ct.beginParse() : Mt = ct;
          let At = (0, st.parseDict)(Mt, it.bits, at.parse), ut = /* @__PURE__ */ new Map();
          for (let [ot, Ct] of At) ut.set((0, Et.serializeInternalKey)(it.parse(ot)), Ct);
          return new Kn(ut, it, at);
        }
        constructor(it, at, ct) {
          this._key = at, this._value = ct, this._map = it;
        }
        get size() {
          return this._map.size;
        }
        get(it) {
          return this._map.get((0, Et.serializeInternalKey)(it));
        }
        has(it) {
          return this._map.has((0, Et.serializeInternalKey)(it));
        }
        set(it, at) {
          return this._map.set((0, Et.serializeInternalKey)(it), at), this;
        }
        delete(it) {
          const at = (0, Et.serializeInternalKey)(it);
          return this._map.delete(at);
        }
        clear() {
          this._map.clear();
        }
        *[Symbol.iterator]() {
          for (const [it, at] of this._map) yield [
            (0, Et.deserializeInternalKey)(it),
            at
          ];
        }
        keys() {
          return Array.from(this._map.keys()).map((it) => (0, Et.deserializeInternalKey)(it));
        }
        values() {
          return Array.from(this._map.values());
        }
        store(it, at, ct) {
          if (this._map.size === 0) it.storeBit(0);
          else {
            let Mt = this._key;
            at != null && (Mt = at);
            let At = this._value;
            if (ct != null && (At = ct), !Mt) throw Error("Key serializer is not defined");
            if (!At) throw Error("Value serializer is not defined");
            let ut = /* @__PURE__ */ new Map();
            for (const [Ct, Rt] of this._map) ut.set(Mt.serialize((0, Et.deserializeInternalKey)(Ct)), Rt);
            it.storeBit(1);
            let ot = (0, _.beginCell)();
            (0, pt.serializeDict)(ut, Mt.bits, At.serialize, ot), it.storeRef(ot.endCell());
          }
        }
        storeDirect(it, at, ct) {
          if (this._map.size === 0) throw Error("Cannot store empty dictionary directly");
          let Mt = this._key;
          at != null && (Mt = at);
          let At = this._value;
          if (ct != null && (At = ct), !Mt) throw Error("Key serializer is not defined");
          if (!At) throw Error("Value serializer is not defined");
          let ut = /* @__PURE__ */ new Map();
          for (const [ot, Ct] of this._map) ut.set(Mt.serialize((0, Et.deserializeInternalKey)(ot)), Ct);
          (0, pt.serializeDict)(ut, Mt.bits, At.serialize, it);
        }
        generateMerkleProof(it) {
          return (0, rt.generateMerkleProof)(this, it, this._key);
        }
        generateMerkleProofDirect(it) {
          return (0, rt.generateMerkleProofDirect)(this, it, this._key);
        }
        generateMerkleUpdate(it, at) {
          return (0, et.generateMerkleUpdate)(this, it, this._key, at);
        }
      };
      Dictionary.Dictionary = Bt, Bt.Keys = {
        Address: () => St(),
        BigInt: (nt) => $t(nt),
        Int: (nt) => kt(nt),
        BigUint: (nt) => Tt(nt),
        Uint: (nt) => Pt(nt),
        Buffer: (nt) => It(nt),
        BitString: (nt) => jt(nt)
      }, Bt.Values = {
        BigInt: (nt) => Ot(nt),
        Int: (nt) => Dt(nt),
        BigVarInt: (nt) => Ft(nt),
        BigUint: (nt) => Kt(nt),
        Uint: (nt) => Zt(nt),
        BigVarUint: (nt) => Lt(nt),
        Bool: () => ar(),
        Address: () => sr(),
        Cell: () => er(),
        Buffer: (nt) => xt(nt),
        BitString: (nt) => tt(nt),
        Dictionary: (nt, it) => Ut(nt, it)
      };
      function St() {
        return {
          bits: 267,
          serialize: (nt) => {
            if (!d.Address.isAddress(nt)) throw Error("Key is not an address");
            return (0, _.beginCell)().storeAddress(nt).endCell().beginParse().preloadUintBig(267);
          },
          parse: (nt) => (0, _.beginCell)().storeUint(nt, 267).endCell().beginParse().loadAddress()
        };
      }
      function $t(nt) {
        return {
          bits: nt,
          serialize: (it) => {
            if (typeof it != "bigint") throw Error("Key is not a bigint");
            return (0, _.beginCell)().storeInt(it, nt).endCell().beginParse().loadUintBig(nt);
          },
          parse: (it) => (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadIntBig(nt)
        };
      }
      function kt(nt) {
        return {
          bits: nt,
          serialize: (it) => {
            if (typeof it != "number") throw Error("Key is not a number");
            if (!Number.isSafeInteger(it)) throw Error("Key is not a safe integer: " + it);
            return (0, _.beginCell)().storeInt(it, nt).endCell().beginParse().loadUintBig(nt);
          },
          parse: (it) => (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadInt(nt)
        };
      }
      function Tt(nt) {
        return {
          bits: nt,
          serialize: (it) => {
            if (typeof it != "bigint") throw Error("Key is not a bigint");
            if (it < 0) throw Error("Key is negative: " + it);
            return (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadUintBig(nt);
          },
          parse: (it) => (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadUintBig(nt)
        };
      }
      function Pt(nt) {
        return {
          bits: nt,
          serialize: (it) => {
            if (typeof it != "number") throw Error("Key is not a number");
            if (!Number.isSafeInteger(it)) throw Error("Key is not a safe integer: " + it);
            if (it < 0) throw Error("Key is negative: " + it);
            return (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadUintBig(nt);
          },
          parse: (it) => Number((0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadUint(nt))
        };
      }
      function It(nt) {
        return {
          bits: nt * 8,
          serialize: (it) => {
            if (!Buffer.isBuffer(it)) throw Error("Key is not a buffer");
            return (0, _.beginCell)().storeBuffer(it).endCell().beginParse().loadUintBig(nt * 8);
          },
          parse: (it) => (0, _.beginCell)().storeUint(it, nt * 8).endCell().beginParse().loadBuffer(nt)
        };
      }
      function jt(nt) {
        return {
          bits: nt,
          serialize: (it) => {
            if (!j.BitString.isBitString(it)) throw Error("Key is not a BitString");
            return (0, _.beginCell)().storeBits(it).endCell().beginParse().loadUintBig(nt);
          },
          parse: (it) => (0, _.beginCell)().storeUint(it, nt).endCell().beginParse().loadBits(nt)
        };
      }
      function Dt(nt) {
        return {
          serialize: (it, at) => {
            at.storeInt(it, nt);
          },
          parse: (it) => {
            let at = it.loadInt(nt);
            return it.endParse(), at;
          }
        };
      }
      function Ot(nt) {
        return {
          serialize: (it, at) => {
            at.storeInt(it, nt);
          },
          parse: (it) => {
            let at = it.loadIntBig(nt);
            return it.endParse(), at;
          }
        };
      }
      function Ft(nt) {
        return {
          serialize: (it, at) => {
            at.storeVarInt(it, nt);
          },
          parse: (it) => {
            let at = it.loadVarIntBig(nt);
            return it.endParse(), at;
          }
        };
      }
      function Lt(nt) {
        return {
          serialize: (it, at) => {
            at.storeVarUint(it, nt);
          },
          parse: (it) => {
            let at = it.loadVarUintBig(nt);
            return it.endParse(), at;
          }
        };
      }
      function Zt(nt) {
        return {
          serialize: (it, at) => {
            at.storeUint(it, nt);
          },
          parse: (it) => {
            let at = it.loadUint(nt);
            return it.endParse(), at;
          }
        };
      }
      function Kt(nt) {
        return {
          serialize: (it, at) => {
            at.storeUint(it, nt);
          },
          parse: (it) => {
            let at = it.loadUintBig(nt);
            return it.endParse(), at;
          }
        };
      }
      function ar() {
        return {
          serialize: (nt, it) => {
            it.storeBit(nt);
          },
          parse: (nt) => {
            let it = nt.loadBit();
            return nt.endParse(), it;
          }
        };
      }
      function sr() {
        return {
          serialize: (nt, it) => {
            it.storeAddress(nt);
          },
          parse: (nt) => {
            let it = nt.loadAddress();
            return nt.endParse(), it;
          }
        };
      }
      function er() {
        return {
          serialize: (nt, it) => {
            it.storeRef(nt);
          },
          parse: (nt) => {
            let it = nt.loadRef();
            return nt.endParse(), it;
          }
        };
      }
      function Ut(nt, it) {
        return {
          serialize: (at, ct) => {
            at.store(ct);
          },
          parse: (at) => {
            let ct = Bt.load(nt, it, at);
            return at.endParse(), ct;
          }
        };
      }
      function xt(nt) {
        return {
          serialize: (it, at) => {
            if (it.length !== nt) throw Error("Invalid buffer size");
            at.storeBuffer(it);
          },
          parse: (it) => {
            let at = it.loadBuffer(nt);
            return it.endParse(), at;
          }
        };
      }
      function tt(nt) {
        return {
          serialize: (it, at) => {
            if (it.length !== nt) throw Error("Invalid BitString size");
            at.storeBits(it);
          },
          parse: (it) => {
            let at = it.loadBits(nt);
            return it.endParse(), at;
          }
        };
      }
      return Dictionary;
    }
    var strings = {}, hasRequiredStrings;
    function requireStrings() {
      if (hasRequiredStrings) return strings;
      hasRequiredStrings = 1, Object.defineProperty(strings, "__esModule", {
        value: true
      }), strings.writeString = strings.stringToCell = strings.readString = void 0;
      const d = requireBuilder();
      function _(st) {
        if (st.remainingBits % 8 !== 0) throw new Error(`Invalid string length: ${st.remainingBits}`);
        if (st.remainingRefs !== 0 && st.remainingRefs !== 1) throw new Error(`invalid number of refs: ${st.remainingRefs}`);
        let pt;
        return st.remainingBits === 0 ? pt = Buffer.alloc(0) : pt = st.loadBuffer(st.remainingBits / 8), st.remainingRefs === 1 && (pt = Buffer.concat([
          pt,
          _(st.loadRef().beginParse())
        ])), pt;
      }
      function $(st) {
        return _(st).toString();
      }
      strings.readString = $;
      function j(st, pt) {
        if (st.length > 0) {
          let Et = Math.floor(pt.availableBits / 8);
          if (st.length > Et) {
            let Bt = st.subarray(0, Et), St = st.subarray(Et);
            pt = pt.storeBuffer(Bt);
            let $t = (0, d.beginCell)();
            j(St, $t), pt = pt.storeRef($t.endCell());
          } else pt = pt.storeBuffer(st);
        }
      }
      function rt(st) {
        let pt = (0, d.beginCell)();
        return j(Buffer.from(st), pt), pt.endCell();
      }
      strings.stringToCell = rt;
      function et(st, pt) {
        j(Buffer.from(st), pt);
      }
      return strings.writeString = et, strings;
    }
    var hasRequiredSlice;
    function requireSlice() {
      if (hasRequiredSlice) return Slice$3;
      hasRequiredSlice = 1;
      var d = commonjsGlobal && commonjsGlobal.__importDefault || function(pt) {
        return pt && pt.__esModule ? pt : {
          default: pt
        };
      }, _;
      Object.defineProperty(Slice$3, "__esModule", {
        value: true
      }), Slice$3.Slice = void 0;
      const $ = d(symbol_inspect), j = requireDictionary(), rt = requireBuilder(), et = requireStrings();
      class st {
        constructor(Et, Bt) {
          this[_] = () => this.toString(), this._reader = Et.clone(), this._refs = [
            ...Bt
          ], this._refsOffset = 0;
        }
        get remainingBits() {
          return this._reader.remaining;
        }
        get offsetBits() {
          return this._reader.offset;
        }
        get remainingRefs() {
          return this._refs.length - this._refsOffset;
        }
        get offsetRefs() {
          return this._refsOffset;
        }
        skip(Et) {
          return this._reader.skip(Et), this;
        }
        loadBit() {
          return this._reader.loadBit();
        }
        preloadBit() {
          return this._reader.preloadBit();
        }
        loadBoolean() {
          return this.loadBit();
        }
        loadMaybeBoolean() {
          return this.loadBit() ? this.loadBoolean() : null;
        }
        loadBits(Et) {
          return this._reader.loadBits(Et);
        }
        preloadBits(Et) {
          return this._reader.preloadBits(Et);
        }
        loadUint(Et) {
          return this._reader.loadUint(Et);
        }
        loadUintBig(Et) {
          return this._reader.loadUintBig(Et);
        }
        preloadUint(Et) {
          return this._reader.preloadUint(Et);
        }
        preloadUintBig(Et) {
          return this._reader.preloadUintBig(Et);
        }
        loadMaybeUint(Et) {
          return this.loadBit() ? this.loadUint(Et) : null;
        }
        loadMaybeUintBig(Et) {
          return this.loadBit() ? this.loadUintBig(Et) : null;
        }
        loadInt(Et) {
          return this._reader.loadInt(Et);
        }
        loadIntBig(Et) {
          return this._reader.loadIntBig(Et);
        }
        preloadInt(Et) {
          return this._reader.preloadInt(Et);
        }
        preloadIntBig(Et) {
          return this._reader.preloadIntBig(Et);
        }
        loadMaybeInt(Et) {
          return this.loadBit() ? this.loadInt(Et) : null;
        }
        loadMaybeIntBig(Et) {
          return this.loadBit() ? this.loadIntBig(Et) : null;
        }
        loadVarUint(Et) {
          return this._reader.loadVarUint(Et);
        }
        loadVarUintBig(Et) {
          return this._reader.loadVarUintBig(Et);
        }
        preloadVarUint(Et) {
          return this._reader.preloadVarUint(Et);
        }
        preloadVarUintBig(Et) {
          return this._reader.preloadVarUintBig(Et);
        }
        loadVarInt(Et) {
          return this._reader.loadVarInt(Et);
        }
        loadVarIntBig(Et) {
          return this._reader.loadVarIntBig(Et);
        }
        preloadVarInt(Et) {
          return this._reader.preloadVarInt(Et);
        }
        preloadVarIntBig(Et) {
          return this._reader.preloadVarIntBig(Et);
        }
        loadCoins() {
          return this._reader.loadCoins();
        }
        preloadCoins() {
          return this._reader.preloadCoins();
        }
        loadMaybeCoins() {
          return this._reader.loadBit() ? this._reader.loadCoins() : null;
        }
        loadAddress() {
          return this._reader.loadAddress();
        }
        loadMaybeAddress() {
          return this._reader.loadMaybeAddress();
        }
        loadExternalAddress() {
          return this._reader.loadExternalAddress();
        }
        loadMaybeExternalAddress() {
          return this._reader.loadMaybeExternalAddress();
        }
        loadAddressAny() {
          return this._reader.loadAddressAny();
        }
        loadRef() {
          if (this._refsOffset >= this._refs.length) throw new Error("No more references");
          return this._refs[this._refsOffset++];
        }
        preloadRef() {
          if (this._refsOffset >= this._refs.length) throw new Error("No more references");
          return this._refs[this._refsOffset];
        }
        loadMaybeRef() {
          return this.loadBit() ? this.loadRef() : null;
        }
        preloadMaybeRef() {
          return this.preloadBit() ? this.preloadRef() : null;
        }
        loadBuffer(Et) {
          return this._reader.loadBuffer(Et);
        }
        preloadBuffer(Et) {
          return this._reader.preloadBuffer(Et);
        }
        loadStringTail() {
          return (0, et.readString)(this);
        }
        loadMaybeStringTail() {
          return this.loadBit() ? (0, et.readString)(this) : null;
        }
        loadStringRefTail() {
          return (0, et.readString)(this.loadRef().beginParse());
        }
        loadMaybeStringRefTail() {
          const Et = this.loadMaybeRef();
          return Et ? (0, et.readString)(Et.beginParse()) : null;
        }
        loadDict(Et, Bt) {
          return j.Dictionary.load(Et, Bt, this);
        }
        loadDictDirect(Et, Bt) {
          return j.Dictionary.loadDirect(Et, Bt, this);
        }
        endParse() {
          if (this.remainingBits > 0 || this.remainingRefs > 0) throw new Error("Slice is not empty");
        }
        asCell() {
          return (0, rt.beginCell)().storeSlice(this).endCell();
        }
        asBuilder() {
          return (0, rt.beginCell)().storeSlice(this);
        }
        clone(Et = false) {
          if (Et) {
            let Bt = this._reader.clone();
            return Bt.reset(), new st(Bt, this._refs);
          } else {
            let Bt = new st(this._reader, this._refs);
            return Bt._refsOffset = this._refsOffset, Bt;
          }
        }
        toString() {
          return this.asCell().toString();
        }
      }
      return Slice$3.Slice = st, _ = $.default, Slice$3;
    }
    var resolveExotic = {}, exoticLibrary$1 = {};
    Object.defineProperty(exoticLibrary$1, "__esModule", {
      value: true
    });
    exoticLibrary$1.exoticLibrary = void 0;
    const BitReader_1$2 = BitReader$1;
    function exoticLibrary(d, _) {
      const $ = new BitReader_1$2.BitReader(d);
      if (d.length !== 264) throw new Error(`Library cell must have exactly (8 + 256) bits, got "${d.length}"`);
      let rt = $.loadUint(8);
      if (rt !== 2) throw new Error(`Library cell must have type 2, got "${rt}"`);
      return {};
    }
    exoticLibrary$1.exoticLibrary = exoticLibrary;
    var exoticMerkleUpdate$1 = {};
    Object.defineProperty(exoticMerkleUpdate$1, "__esModule", {
      value: true
    });
    exoticMerkleUpdate$1.exoticMerkleUpdate = void 0;
    const BitReader_1$1 = BitReader$1;
    function exoticMerkleUpdate(d, _) {
      const $ = new BitReader_1$1.BitReader(d), j = 8 + 2 * 272;
      if (d.length !== j) throw new Error(`Merkle Update cell must have exactly (8 + (2 * (256 + 16))) bits, got "${d.length}"`);
      if (_.length !== 2) throw new Error(`Merkle Update cell must have exactly 2 refs, got "${_.length}"`);
      let rt = $.loadUint(8);
      if (rt !== 4) throw new Error(`Merkle Update cell type must be exactly 4, got "${rt}"`);
      const et = $.loadBuffer(32), st = $.loadBuffer(32), pt = $.loadUint(16), Et = $.loadUint(16);
      if (pt !== _[0].depth(0)) throw new Error(`Merkle Update cell ref depth must be exactly "${pt}", got "${_[0].depth(0)}"`);
      if (!et.equals(_[0].hash(0))) throw new Error(`Merkle Update cell ref hash must be exactly "${et.toString("hex")}", got "${_[0].hash(0).toString("hex")}"`);
      if (Et !== _[1].depth(0)) throw new Error(`Merkle Update cell ref depth must be exactly "${Et}", got "${_[1].depth(0)}"`);
      if (!st.equals(_[1].hash(0))) throw new Error(`Merkle Update cell ref hash must be exactly "${st.toString("hex")}", got "${_[1].hash(0).toString("hex")}"`);
      return {
        proofDepth1: pt,
        proofDepth2: Et,
        proofHash1: et,
        proofHash2: st
      };
    }
    exoticMerkleUpdate$1.exoticMerkleUpdate = exoticMerkleUpdate;
    var exoticPruned$1 = {}, LevelMask$1 = {};
    Object.defineProperty(LevelMask$1, "__esModule", {
      value: true
    });
    LevelMask$1.LevelMask = void 0;
    class LevelMask {
      constructor(_ = 0) {
        this._mask = 0, this._mask = _, this._hashIndex = countSetBits(this._mask), this._hashCount = this._hashIndex + 1;
      }
      get value() {
        return this._mask;
      }
      get level() {
        return 32 - Math.clz32(this._mask);
      }
      get hashIndex() {
        return this._hashIndex;
      }
      get hashCount() {
        return this._hashCount;
      }
      apply(_) {
        return new LevelMask(this._mask & (1 << _) - 1);
      }
      isSignificant(_) {
        return _ === 0 || (this._mask >> _ - 1) % 2 !== 0;
      }
    }
    LevelMask$1.LevelMask = LevelMask;
    function countSetBits(d) {
      return d = d - (d >> 1 & 1431655765), d = (d & 858993459) + (d >> 2 & 858993459), (d + (d >> 4) & 252645135) * 16843009 >> 24;
    }
    Object.defineProperty(exoticPruned$1, "__esModule", {
      value: true
    });
    exoticPruned$1.exoticPruned = void 0;
    const BitReader_1 = BitReader$1, LevelMask_1 = LevelMask$1;
    function exoticPruned(d, _) {
      let $ = new BitReader_1.BitReader(d), j = $.loadUint(8);
      if (j !== 1) throw new Error(`Pruned branch cell must have type 1, got "${j}"`);
      if (_.length !== 0) throw new Error(`Pruned Branch cell can't has refs, got "${_.length}"`);
      let rt;
      if (d.length === 280) rt = new LevelMask_1.LevelMask(1);
      else {
        if (rt = new LevelMask_1.LevelMask($.loadUint(8)), rt.level < 1 || rt.level > 3) throw new Error(`Pruned Branch cell level must be >= 1 and <= 3, got "${rt.level}/${rt.value}"`);
        const Et = 16 + rt.apply(rt.level - 1).hashCount * 272;
        if (d.length !== Et) throw new Error(`Pruned branch cell must have exactly ${Et} bits, got "${d.length}"`);
      }
      let et = [], st = [], pt = [];
      for (let Et = 0; Et < rt.level; Et++) st.push($.loadBuffer(32));
      for (let Et = 0; Et < rt.level; Et++) pt.push($.loadUint(16));
      for (let Et = 0; Et < rt.level; Et++) et.push({
        depth: pt[Et],
        hash: st[Et]
      });
      return {
        mask: rt.value,
        pruned: et
      };
    }
    exoticPruned$1.exoticPruned = exoticPruned;
    var hasRequiredResolveExotic;
    function requireResolveExotic() {
      if (hasRequiredResolveExotic) return resolveExotic;
      hasRequiredResolveExotic = 1, Object.defineProperty(resolveExotic, "__esModule", {
        value: true
      }), resolveExotic.resolveExotic = void 0;
      const d = BitReader$1, _ = CellType$1, $ = exoticLibrary$1, j = requireExoticMerkleProof(), rt = exoticMerkleUpdate$1, et = exoticPruned$1, st = LevelMask$1;
      function pt(kt, Tt) {
        let Pt = (0, et.exoticPruned)(kt, Tt), It = [], jt = [], Dt = new st.LevelMask(Pt.mask);
        for (let Ot = 0; Ot < Pt.pruned.length; Ot++) It.push(Pt.pruned[Ot].depth), jt.push(Pt.pruned[Ot].hash);
        return {
          type: _.CellType.PrunedBranch,
          depths: It,
          hashes: jt,
          mask: Dt
        };
      }
      function Et(kt, Tt) {
        (0, $.exoticLibrary)(kt, Tt);
        let Pt = [], It = [], jt = new st.LevelMask();
        return {
          type: _.CellType.Library,
          depths: Pt,
          hashes: It,
          mask: jt
        };
      }
      function Bt(kt, Tt) {
        (0, j.exoticMerkleProof)(kt, Tt);
        let Pt = [], It = [], jt = new st.LevelMask(Tt[0].level() >> 1);
        return {
          type: _.CellType.MerkleProof,
          depths: Pt,
          hashes: It,
          mask: jt
        };
      }
      function St(kt, Tt) {
        (0, rt.exoticMerkleUpdate)(kt, Tt);
        let Pt = [], It = [], jt = new st.LevelMask((Tt[0].level() | Tt[1].level()) >> 1);
        return {
          type: _.CellType.MerkleUpdate,
          depths: Pt,
          hashes: It,
          mask: jt
        };
      }
      function $t(kt, Tt) {
        let It = new d.BitReader(kt).preloadUint(8);
        if (It === 1) return pt(kt, Tt);
        if (It === 2) return Et(kt, Tt);
        if (It === 3) return Bt(kt, Tt);
        if (It === 4) return St(kt, Tt);
        throw Error("Invalid exotic cell type: " + It);
      }
      return resolveExotic.resolveExotic = $t, resolveExotic;
    }
    var wonderCalculator = {}, descriptor = {};
    Object.defineProperty(descriptor, "__esModule", {
      value: true
    });
    descriptor.getRepr = descriptor.getBitsDescriptor = descriptor.getRefsDescriptor = void 0;
    const CellType_1 = CellType$1, paddedBits_1 = requirePaddedBits();
    function getRefsDescriptor(d, _, $) {
      return d.length + ($ !== CellType_1.CellType.Ordinary ? 1 : 0) * 8 + _ * 32;
    }
    descriptor.getRefsDescriptor = getRefsDescriptor;
    function getBitsDescriptor(d) {
      let _ = d.length;
      return Math.ceil(_ / 8) + Math.floor(_ / 8);
    }
    descriptor.getBitsDescriptor = getBitsDescriptor;
    function getRepr(d, _, $, j, rt, et) {
      const st = Math.ceil(_.length / 8), pt = Buffer.alloc(2 + st + 34 * $.length);
      let Et = 0;
      pt[Et++] = getRefsDescriptor($, rt, et), pt[Et++] = getBitsDescriptor(d), (0, paddedBits_1.bitsToPaddedBuffer)(_).copy(pt, Et), Et += st;
      for (const Bt of $) {
        let St;
        et == CellType_1.CellType.MerkleProof || et == CellType_1.CellType.MerkleUpdate ? St = Bt.depth(j + 1) : St = Bt.depth(j), pt[Et++] = Math.floor(St / 256), pt[Et++] = St % 256;
      }
      for (const Bt of $) {
        let St;
        et == CellType_1.CellType.MerkleProof || et == CellType_1.CellType.MerkleUpdate ? St = Bt.hash(j + 1) : St = Bt.hash(j), St.copy(pt, Et), Et += 32;
      }
      return pt;
    }
    descriptor.getRepr = getRepr;
    var dist$1 = {}, sha256$7 = {}, sha = {
      exports: {}
    };
    (function(d, _) {
      (function($, j) {
        d.exports = j();
      })(commonjsGlobal, function() {
        var $ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        function j(yr, fr, dr, gr) {
          var Er, zt, qt, Vt = fr || [
            0
          ], Qt = (dr = dr || 0) >>> 3, hr = gr === -1 ? 3 : 0;
          for (Er = 0; Er < yr.length; Er += 1) zt = (qt = Er + Qt) >>> 2, Vt.length <= zt && Vt.push(0), Vt[zt] |= yr[Er] << 8 * (hr + gr * (qt % 4));
          return {
            value: Vt,
            binLen: 8 * yr.length + dr
          };
        }
        function rt(yr, fr, dr) {
          switch (fr) {
            case "UTF8":
            case "UTF16BE":
            case "UTF16LE":
              break;
            default:
              throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE");
          }
          switch (yr) {
            case "HEX":
              return function(gr, Er, zt) {
                return function(qt, Vt, Qt, hr) {
                  var br, pr, Rr, qr;
                  if (qt.length % 2 != 0) throw new Error("String of HEX type must be in byte increments");
                  var xr = Vt || [
                    0
                  ], Fr = (Qt = Qt || 0) >>> 3, zr = hr === -1 ? 3 : 0;
                  for (br = 0; br < qt.length; br += 2) {
                    if (pr = parseInt(qt.substr(br, 2), 16), isNaN(pr)) throw new Error("String of HEX type contains invalid characters");
                    for (Rr = (qr = (br >>> 1) + Fr) >>> 2; xr.length <= Rr; ) xr.push(0);
                    xr[Rr] |= pr << 8 * (zr + hr * (qr % 4));
                  }
                  return {
                    value: xr,
                    binLen: 4 * qt.length + Qt
                  };
                }(gr, Er, zt, dr);
              };
            case "TEXT":
              return function(gr, Er, zt) {
                return function(qt, Vt, Qt, hr, br) {
                  var pr, Rr, qr, xr, Fr, zr, Pr, Wr, tn = 0, Nr = Qt || [
                    0
                  ], Hr = (hr = hr || 0) >>> 3;
                  if (Vt === "UTF8") for (Pr = br === -1 ? 3 : 0, qr = 0; qr < qt.length; qr += 1) for (Rr = [], 128 > (pr = qt.charCodeAt(qr)) ? Rr.push(pr) : 2048 > pr ? (Rr.push(192 | pr >>> 6), Rr.push(128 | 63 & pr)) : 55296 > pr || 57344 <= pr ? Rr.push(224 | pr >>> 12, 128 | pr >>> 6 & 63, 128 | 63 & pr) : (qr += 1, pr = 65536 + ((1023 & pr) << 10 | 1023 & qt.charCodeAt(qr)), Rr.push(240 | pr >>> 18, 128 | pr >>> 12 & 63, 128 | pr >>> 6 & 63, 128 | 63 & pr)), xr = 0; xr < Rr.length; xr += 1) {
                    for (Fr = (zr = tn + Hr) >>> 2; Nr.length <= Fr; ) Nr.push(0);
                    Nr[Fr] |= Rr[xr] << 8 * (Pr + br * (zr % 4)), tn += 1;
                  }
                  else for (Pr = br === -1 ? 2 : 0, Wr = Vt === "UTF16LE" && br !== 1 || Vt !== "UTF16LE" && br === 1, qr = 0; qr < qt.length; qr += 1) {
                    for (pr = qt.charCodeAt(qr), Wr === true && (pr = (xr = 255 & pr) << 8 | pr >>> 8), Fr = (zr = tn + Hr) >>> 2; Nr.length <= Fr; ) Nr.push(0);
                    Nr[Fr] |= pr << 8 * (Pr + br * (zr % 4)), tn += 2;
                  }
                  return {
                    value: Nr,
                    binLen: 8 * tn + hr
                  };
                }(gr, fr, Er, zt, dr);
              };
            case "B64":
              return function(gr, Er, zt) {
                return function(qt, Vt, Qt, hr) {
                  var br, pr, Rr, qr, xr, Fr, zr = 0, Pr = Vt || [
                    0
                  ], Wr = (Qt = Qt || 0) >>> 3, tn = hr === -1 ? 3 : 0, Nr = qt.indexOf("=");
                  if (qt.search(/^[a-zA-Z0-9=+/]+$/) === -1) throw new Error("Invalid character in base-64 string");
                  if (qt = qt.replace(/=/g, ""), Nr !== -1 && Nr < qt.length) throw new Error("Invalid '=' found in base-64 string");
                  for (br = 0; br < qt.length; br += 4) {
                    for (qr = qt.substr(br, 4), Rr = 0, pr = 0; pr < qr.length; pr += 1) Rr |= $.indexOf(qr.charAt(pr)) << 18 - 6 * pr;
                    for (pr = 0; pr < qr.length - 1; pr += 1) {
                      for (xr = (Fr = zr + Wr) >>> 2; Pr.length <= xr; ) Pr.push(0);
                      Pr[xr] |= (Rr >>> 16 - 8 * pr & 255) << 8 * (tn + hr * (Fr % 4)), zr += 1;
                    }
                  }
                  return {
                    value: Pr,
                    binLen: 8 * zr + Qt
                  };
                }(gr, Er, zt, dr);
              };
            case "BYTES":
              return function(gr, Er, zt) {
                return function(qt, Vt, Qt, hr) {
                  var br, pr, Rr, qr, xr = Vt || [
                    0
                  ], Fr = (Qt = Qt || 0) >>> 3, zr = hr === -1 ? 3 : 0;
                  for (pr = 0; pr < qt.length; pr += 1) br = qt.charCodeAt(pr), Rr = (qr = pr + Fr) >>> 2, xr.length <= Rr && xr.push(0), xr[Rr] |= br << 8 * (zr + hr * (qr % 4));
                  return {
                    value: xr,
                    binLen: 8 * qt.length + Qt
                  };
                }(gr, Er, zt, dr);
              };
            case "ARRAYBUFFER":
              try {
                new ArrayBuffer(0);
              } catch {
                throw new Error("ARRAYBUFFER not supported by this environment");
              }
              return function(gr, Er, zt) {
                return function(qt, Vt, Qt, hr) {
                  return j(new Uint8Array(qt), Vt, Qt, hr);
                }(gr, Er, zt, dr);
              };
            case "UINT8ARRAY":
              try {
                new Uint8Array(0);
              } catch {
                throw new Error("UINT8ARRAY not supported by this environment");
              }
              return function(gr, Er, zt) {
                return j(gr, Er, zt, dr);
              };
            default:
              throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
          }
        }
        function et(yr, fr, dr, gr) {
          switch (yr) {
            case "HEX":
              return function(Er) {
                return function(zt, qt, Vt, Qt) {
                  var hr, br, pr = "", Rr = qt / 8, qr = Vt === -1 ? 3 : 0;
                  for (hr = 0; hr < Rr; hr += 1) br = zt[hr >>> 2] >>> 8 * (qr + Vt * (hr % 4)), pr += "0123456789abcdef".charAt(br >>> 4 & 15) + "0123456789abcdef".charAt(15 & br);
                  return Qt.outputUpper ? pr.toUpperCase() : pr;
                }(Er, fr, dr, gr);
              };
            case "B64":
              return function(Er) {
                return function(zt, qt, Vt, Qt) {
                  var hr, br, pr, Rr, qr, xr = "", Fr = qt / 8, zr = Vt === -1 ? 3 : 0;
                  for (hr = 0; hr < Fr; hr += 3) for (Rr = hr + 1 < Fr ? zt[hr + 1 >>> 2] : 0, qr = hr + 2 < Fr ? zt[hr + 2 >>> 2] : 0, pr = (zt[hr >>> 2] >>> 8 * (zr + Vt * (hr % 4)) & 255) << 16 | (Rr >>> 8 * (zr + Vt * ((hr + 1) % 4)) & 255) << 8 | qr >>> 8 * (zr + Vt * ((hr + 2) % 4)) & 255, br = 0; br < 4; br += 1) xr += 8 * hr + 6 * br <= qt ? $.charAt(pr >>> 6 * (3 - br) & 63) : Qt.b64Pad;
                  return xr;
                }(Er, fr, dr, gr);
              };
            case "BYTES":
              return function(Er) {
                return function(zt, qt, Vt) {
                  var Qt, hr, br = "", pr = qt / 8, Rr = Vt === -1 ? 3 : 0;
                  for (Qt = 0; Qt < pr; Qt += 1) hr = zt[Qt >>> 2] >>> 8 * (Rr + Vt * (Qt % 4)) & 255, br += String.fromCharCode(hr);
                  return br;
                }(Er, fr, dr);
              };
            case "ARRAYBUFFER":
              try {
                new ArrayBuffer(0);
              } catch {
                throw new Error("ARRAYBUFFER not supported by this environment");
              }
              return function(Er) {
                return function(zt, qt, Vt) {
                  var Qt, hr = qt / 8, br = new ArrayBuffer(hr), pr = new Uint8Array(br), Rr = Vt === -1 ? 3 : 0;
                  for (Qt = 0; Qt < hr; Qt += 1) pr[Qt] = zt[Qt >>> 2] >>> 8 * (Rr + Vt * (Qt % 4)) & 255;
                  return br;
                }(Er, fr, dr);
              };
            case "UINT8ARRAY":
              try {
                new Uint8Array(0);
              } catch {
                throw new Error("UINT8ARRAY not supported by this environment");
              }
              return function(Er) {
                return function(zt, qt, Vt) {
                  var Qt, hr = qt / 8, br = Vt === -1 ? 3 : 0, pr = new Uint8Array(hr);
                  for (Qt = 0; Qt < hr; Qt += 1) pr[Qt] = zt[Qt >>> 2] >>> 8 * (br + Vt * (Qt % 4)) & 255;
                  return pr;
                }(Er, fr, dr);
              };
            default:
              throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
          }
        }
        var st = [
          1116352408,
          1899447441,
          3049323471,
          3921009573,
          961987163,
          1508970993,
          2453635748,
          2870763221,
          3624381080,
          310598401,
          607225278,
          1426881987,
          1925078388,
          2162078206,
          2614888103,
          3248222580,
          3835390401,
          4022224774,
          264347078,
          604807628,
          770255983,
          1249150122,
          1555081692,
          1996064986,
          2554220882,
          2821834349,
          2952996808,
          3210313671,
          3336571891,
          3584528711,
          113926993,
          338241895,
          666307205,
          773529912,
          1294757372,
          1396182291,
          1695183700,
          1986661051,
          2177026350,
          2456956037,
          2730485921,
          2820302411,
          3259730800,
          3345764771,
          3516065817,
          3600352804,
          4094571909,
          275423344,
          430227734,
          506948616,
          659060556,
          883997877,
          958139571,
          1322822218,
          1537002063,
          1747873779,
          1955562222,
          2024104815,
          2227730452,
          2361852424,
          2428436474,
          2756734187,
          3204031479,
          3329325298
        ], pt = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ], Et = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ], Bt = "Chosen SHA variant is not supported";
        function St(yr, fr) {
          var dr, gr, Er = yr.binLen >>> 3, zt = fr.binLen >>> 3, qt = Er << 3, Vt = 4 - Er << 3;
          if (Er % 4 != 0) {
            for (dr = 0; dr < zt; dr += 4) gr = Er + dr >>> 2, yr.value[gr] |= fr.value[dr >>> 2] << qt, yr.value.push(0), yr.value[gr + 1] |= fr.value[dr >>> 2] >>> Vt;
            return (yr.value.length << 2) - 4 >= zt + Er && yr.value.pop(), {
              value: yr.value,
              binLen: yr.binLen + fr.binLen
            };
          }
          return {
            value: yr.value.concat(fr.value),
            binLen: yr.binLen + fr.binLen
          };
        }
        function $t(yr) {
          var fr = {
            outputUpper: false,
            b64Pad: "=",
            outputLen: -1
          }, dr = yr || {}, gr = "Output length must be a multiple of 8";
          if (fr.outputUpper = dr.outputUpper || false, dr.b64Pad && (fr.b64Pad = dr.b64Pad), dr.outputLen) {
            if (dr.outputLen % 8 != 0) throw new Error(gr);
            fr.outputLen = dr.outputLen;
          } else if (dr.shakeLen) {
            if (dr.shakeLen % 8 != 0) throw new Error(gr);
            fr.outputLen = dr.shakeLen;
          }
          if (typeof fr.outputUpper != "boolean") throw new Error("Invalid outputUpper formatting option");
          if (typeof fr.b64Pad != "string") throw new Error("Invalid b64Pad formatting option");
          return fr;
        }
        function kt(yr, fr, dr, gr) {
          var Er = yr + " must include a value and format";
          if (!fr) {
            if (!gr) throw new Error(Er);
            return gr;
          }
          if (fr.value === void 0 || !fr.format) throw new Error(Er);
          return rt(fr.format, fr.encoding || "UTF8", dr)(fr.value);
        }
        var Tt = function() {
          function yr(fr, dr, gr) {
            var Er = gr || {};
            if (this.t = dr, this.i = Er.encoding || "UTF8", this.numRounds = Er.numRounds || 1, isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) throw new Error("numRounds must a integer >= 1");
            this.o = fr, this.u = [], this.s = 0, this.h = false, this.v = 0, this.A = false, this.l = [], this.H = [];
          }
          return yr.prototype.update = function(fr) {
            var dr, gr = 0, Er = this.S >>> 5, zt = this.p(fr, this.u, this.s), qt = zt.binLen, Vt = zt.value, Qt = qt >>> 5;
            for (dr = 0; dr < Qt; dr += Er) gr + this.S <= qt && (this.m = this.R(Vt.slice(dr, dr + Er), this.m), gr += this.S);
            this.v += gr, this.u = Vt.slice(gr >>> 5), this.s = qt % this.S, this.h = true;
          }, yr.prototype.getHash = function(fr, dr) {
            var gr, Er, zt = this.U, qt = $t(dr);
            if (this.T) {
              if (qt.outputLen === -1) throw new Error("Output length must be specified in options");
              zt = qt.outputLen;
            }
            var Vt = et(fr, zt, this.C, qt);
            if (this.A && this.F) return Vt(this.F(qt));
            for (Er = this.K(this.u.slice(), this.s, this.v, this.B(this.m), zt), gr = 1; gr < this.numRounds; gr += 1) this.T && zt % 32 != 0 && (Er[Er.length - 1] &= 16777215 >>> 24 - zt % 32), Er = this.K(Er, zt, 0, this.L(this.o), zt);
            return Vt(Er);
          }, yr.prototype.setHMACKey = function(fr, dr, gr) {
            if (!this.g) throw new Error("Variant does not support HMAC");
            if (this.h) throw new Error("Cannot set MAC key after calling update");
            var Er = rt(dr, (gr || {}).encoding || "UTF8", this.C);
            this.k(Er(fr));
          }, yr.prototype.k = function(fr) {
            var dr, gr = this.S >>> 3, Er = gr / 4 - 1;
            if (this.numRounds !== 1) throw new Error("Cannot set numRounds with MAC");
            if (this.A) throw new Error("MAC key already set");
            for (gr < fr.binLen / 8 && (fr.value = this.K(fr.value, fr.binLen, 0, this.L(this.o), this.U)); fr.value.length <= Er; ) fr.value.push(0);
            for (dr = 0; dr <= Er; dr += 1) this.l[dr] = 909522486 ^ fr.value[dr], this.H[dr] = 1549556828 ^ fr.value[dr];
            this.m = this.R(this.l, this.m), this.v = this.S, this.A = true;
          }, yr.prototype.getHMAC = function(fr, dr) {
            var gr = $t(dr);
            return et(fr, this.U, this.C, gr)(this.Y());
          }, yr.prototype.Y = function() {
            var fr;
            if (!this.A) throw new Error("Cannot call getHMAC without first setting MAC key");
            var dr = this.K(this.u.slice(), this.s, this.v, this.B(this.m), this.U);
            return fr = this.R(this.H, this.L(this.o)), fr = this.K(dr, this.U, this.S, fr, this.U);
          }, yr;
        }(), Pt = function(yr, fr) {
          return (Pt = Object.setPrototypeOf || {
            __proto__: []
          } instanceof Array && function(dr, gr) {
            dr.__proto__ = gr;
          } || function(dr, gr) {
            for (var Er in gr) Object.prototype.hasOwnProperty.call(gr, Er) && (dr[Er] = gr[Er]);
          })(yr, fr);
        };
        function It(yr, fr) {
          function dr() {
            this.constructor = yr;
          }
          Pt(yr, fr), yr.prototype = fr === null ? Object.create(fr) : (dr.prototype = fr.prototype, new dr());
        }
        function jt(yr, fr) {
          return yr << fr | yr >>> 32 - fr;
        }
        function Dt(yr, fr) {
          return yr >>> fr | yr << 32 - fr;
        }
        function Ot(yr, fr) {
          return yr >>> fr;
        }
        function Ft(yr, fr, dr) {
          return yr ^ fr ^ dr;
        }
        function Lt(yr, fr, dr) {
          return yr & fr ^ ~yr & dr;
        }
        function Zt(yr, fr, dr) {
          return yr & fr ^ yr & dr ^ fr & dr;
        }
        function Kt(yr) {
          return Dt(yr, 2) ^ Dt(yr, 13) ^ Dt(yr, 22);
        }
        function ar(yr, fr) {
          var dr = (65535 & yr) + (65535 & fr);
          return (65535 & (yr >>> 16) + (fr >>> 16) + (dr >>> 16)) << 16 | 65535 & dr;
        }
        function sr(yr, fr, dr, gr) {
          var Er = (65535 & yr) + (65535 & fr) + (65535 & dr) + (65535 & gr);
          return (65535 & (yr >>> 16) + (fr >>> 16) + (dr >>> 16) + (gr >>> 16) + (Er >>> 16)) << 16 | 65535 & Er;
        }
        function er(yr, fr, dr, gr, Er) {
          var zt = (65535 & yr) + (65535 & fr) + (65535 & dr) + (65535 & gr) + (65535 & Er);
          return (65535 & (yr >>> 16) + (fr >>> 16) + (dr >>> 16) + (gr >>> 16) + (Er >>> 16) + (zt >>> 16)) << 16 | 65535 & zt;
        }
        function Ut(yr) {
          return Dt(yr, 7) ^ Dt(yr, 18) ^ Ot(yr, 3);
        }
        function xt(yr) {
          return Dt(yr, 6) ^ Dt(yr, 11) ^ Dt(yr, 25);
        }
        function tt(yr) {
          return [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520
          ];
        }
        function nt(yr, fr) {
          var dr, gr, Er, zt, qt, Vt, Qt, hr = [];
          for (dr = fr[0], gr = fr[1], Er = fr[2], zt = fr[3], qt = fr[4], Qt = 0; Qt < 80; Qt += 1) hr[Qt] = Qt < 16 ? yr[Qt] : jt(hr[Qt - 3] ^ hr[Qt - 8] ^ hr[Qt - 14] ^ hr[Qt - 16], 1), Vt = Qt < 20 ? er(jt(dr, 5), Lt(gr, Er, zt), qt, 1518500249, hr[Qt]) : Qt < 40 ? er(jt(dr, 5), Ft(gr, Er, zt), qt, 1859775393, hr[Qt]) : Qt < 60 ? er(jt(dr, 5), Zt(gr, Er, zt), qt, 2400959708, hr[Qt]) : er(jt(dr, 5), Ft(gr, Er, zt), qt, 3395469782, hr[Qt]), qt = zt, zt = Er, Er = jt(gr, 30), gr = dr, dr = Vt;
          return fr[0] = ar(dr, fr[0]), fr[1] = ar(gr, fr[1]), fr[2] = ar(Er, fr[2]), fr[3] = ar(zt, fr[3]), fr[4] = ar(qt, fr[4]), fr;
        }
        function it(yr, fr, dr, gr) {
          for (var Er, zt = 15 + (fr + 65 >>> 9 << 4), qt = fr + dr; yr.length <= zt; ) yr.push(0);
          for (yr[fr >>> 5] |= 128 << 24 - fr % 32, yr[zt] = 4294967295 & qt, yr[zt - 1] = qt / 4294967296 | 0, Er = 0; Er < yr.length; Er += 16) gr = nt(yr.slice(Er, Er + 16), gr);
          return gr;
        }
        var at = function(yr) {
          function fr(dr, gr, Er) {
            var zt = this;
            if (dr !== "SHA-1") throw new Error(Bt);
            var qt = Er || {};
            return (zt = yr.call(this, dr, gr, Er) || this).g = true, zt.F = zt.Y, zt.C = -1, zt.p = rt(zt.t, zt.i, zt.C), zt.R = nt, zt.B = function(Vt) {
              return Vt.slice();
            }, zt.L = tt, zt.K = it, zt.m = [
              1732584193,
              4023233417,
              2562383102,
              271733878,
              3285377520
            ], zt.S = 512, zt.U = 160, zt.T = false, qt.hmacKey && zt.k(kt("hmacKey", qt.hmacKey, zt.C)), zt;
          }
          return It(fr, yr), fr;
        }(Tt);
        function ct(yr) {
          return yr == "SHA-224" ? pt.slice() : Et.slice();
        }
        function Mt(yr, fr) {
          var dr, gr, Er, zt, qt, Vt, Qt, hr, br, pr, Rr, qr, xr = [];
          for (dr = fr[0], gr = fr[1], Er = fr[2], zt = fr[3], qt = fr[4], Vt = fr[5], Qt = fr[6], hr = fr[7], Rr = 0; Rr < 64; Rr += 1) xr[Rr] = Rr < 16 ? yr[Rr] : sr(Dt(qr = xr[Rr - 2], 17) ^ Dt(qr, 19) ^ Ot(qr, 10), xr[Rr - 7], Ut(xr[Rr - 15]), xr[Rr - 16]), br = er(hr, xt(qt), Lt(qt, Vt, Qt), st[Rr], xr[Rr]), pr = ar(Kt(dr), Zt(dr, gr, Er)), hr = Qt, Qt = Vt, Vt = qt, qt = ar(zt, br), zt = Er, Er = gr, gr = dr, dr = ar(br, pr);
          return fr[0] = ar(dr, fr[0]), fr[1] = ar(gr, fr[1]), fr[2] = ar(Er, fr[2]), fr[3] = ar(zt, fr[3]), fr[4] = ar(qt, fr[4]), fr[5] = ar(Vt, fr[5]), fr[6] = ar(Qt, fr[6]), fr[7] = ar(hr, fr[7]), fr;
        }
        var At = function(yr) {
          function fr(dr, gr, Er) {
            var zt = this;
            if (dr !== "SHA-224" && dr !== "SHA-256") throw new Error(Bt);
            var qt = Er || {};
            return (zt = yr.call(this, dr, gr, Er) || this).F = zt.Y, zt.g = true, zt.C = -1, zt.p = rt(zt.t, zt.i, zt.C), zt.R = Mt, zt.B = function(Vt) {
              return Vt.slice();
            }, zt.L = ct, zt.K = function(Vt, Qt, hr, br) {
              return function(pr, Rr, qr, xr, Fr) {
                for (var zr, Pr = 15 + (Rr + 65 >>> 9 << 4), Wr = Rr + qr; pr.length <= Pr; ) pr.push(0);
                for (pr[Rr >>> 5] |= 128 << 24 - Rr % 32, pr[Pr] = 4294967295 & Wr, pr[Pr - 1] = Wr / 4294967296 | 0, zr = 0; zr < pr.length; zr += 16) xr = Mt(pr.slice(zr, zr + 16), xr);
                return Fr === "SHA-224" ? [
                  xr[0],
                  xr[1],
                  xr[2],
                  xr[3],
                  xr[4],
                  xr[5],
                  xr[6]
                ] : xr;
              }(Vt, Qt, hr, br, dr);
            }, zt.m = ct(dr), zt.S = 512, zt.U = dr === "SHA-224" ? 224 : 256, zt.T = false, qt.hmacKey && zt.k(kt("hmacKey", qt.hmacKey, zt.C)), zt;
          }
          return It(fr, yr), fr;
        }(Tt), ut = function(yr, fr) {
          this.N = yr, this.I = fr;
        };
        function ot(yr, fr) {
          var dr;
          return fr > 32 ? (dr = 64 - fr, new ut(yr.I << fr | yr.N >>> dr, yr.N << fr | yr.I >>> dr)) : fr !== 0 ? (dr = 32 - fr, new ut(yr.N << fr | yr.I >>> dr, yr.I << fr | yr.N >>> dr)) : yr;
        }
        function Ct(yr, fr) {
          var dr;
          return fr < 32 ? (dr = 32 - fr, new ut(yr.N >>> fr | yr.I << dr, yr.I >>> fr | yr.N << dr)) : (dr = 64 - fr, new ut(yr.I >>> fr | yr.N << dr, yr.N >>> fr | yr.I << dr));
        }
        function Rt(yr, fr) {
          return new ut(yr.N >>> fr, yr.I >>> fr | yr.N << 32 - fr);
        }
        function Nt(yr, fr, dr) {
          return new ut(yr.N & fr.N ^ ~yr.N & dr.N, yr.I & fr.I ^ ~yr.I & dr.I);
        }
        function Wt(yr, fr, dr) {
          return new ut(yr.N & fr.N ^ yr.N & dr.N ^ fr.N & dr.N, yr.I & fr.I ^ yr.I & dr.I ^ fr.I & dr.I);
        }
        function Xt(yr) {
          var fr = Ct(yr, 28), dr = Ct(yr, 34), gr = Ct(yr, 39);
          return new ut(fr.N ^ dr.N ^ gr.N, fr.I ^ dr.I ^ gr.I);
        }
        function rr(yr, fr) {
          var dr, gr;
          dr = (65535 & yr.I) + (65535 & fr.I);
          var Er = (65535 & (gr = (yr.I >>> 16) + (fr.I >>> 16) + (dr >>> 16))) << 16 | 65535 & dr;
          return dr = (65535 & yr.N) + (65535 & fr.N) + (gr >>> 16), gr = (yr.N >>> 16) + (fr.N >>> 16) + (dr >>> 16), new ut((65535 & gr) << 16 | 65535 & dr, Er);
        }
        function Gt(yr, fr, dr, gr) {
          var Er, zt;
          Er = (65535 & yr.I) + (65535 & fr.I) + (65535 & dr.I) + (65535 & gr.I);
          var qt = (65535 & (zt = (yr.I >>> 16) + (fr.I >>> 16) + (dr.I >>> 16) + (gr.I >>> 16) + (Er >>> 16))) << 16 | 65535 & Er;
          return Er = (65535 & yr.N) + (65535 & fr.N) + (65535 & dr.N) + (65535 & gr.N) + (zt >>> 16), zt = (yr.N >>> 16) + (fr.N >>> 16) + (dr.N >>> 16) + (gr.N >>> 16) + (Er >>> 16), new ut((65535 & zt) << 16 | 65535 & Er, qt);
        }
        function Yt(yr, fr, dr, gr, Er) {
          var zt, qt;
          zt = (65535 & yr.I) + (65535 & fr.I) + (65535 & dr.I) + (65535 & gr.I) + (65535 & Er.I);
          var Vt = (65535 & (qt = (yr.I >>> 16) + (fr.I >>> 16) + (dr.I >>> 16) + (gr.I >>> 16) + (Er.I >>> 16) + (zt >>> 16))) << 16 | 65535 & zt;
          return zt = (65535 & yr.N) + (65535 & fr.N) + (65535 & dr.N) + (65535 & gr.N) + (65535 & Er.N) + (qt >>> 16), qt = (yr.N >>> 16) + (fr.N >>> 16) + (dr.N >>> 16) + (gr.N >>> 16) + (Er.N >>> 16) + (zt >>> 16), new ut((65535 & qt) << 16 | 65535 & zt, Vt);
        }
        function tr(yr, fr) {
          return new ut(yr.N ^ fr.N, yr.I ^ fr.I);
        }
        function cr(yr) {
          var fr = Ct(yr, 1), dr = Ct(yr, 8), gr = Rt(yr, 7);
          return new ut(fr.N ^ dr.N ^ gr.N, fr.I ^ dr.I ^ gr.I);
        }
        function ir(yr) {
          var fr = Ct(yr, 14), dr = Ct(yr, 18), gr = Ct(yr, 41);
          return new ut(fr.N ^ dr.N ^ gr.N, fr.I ^ dr.I ^ gr.I);
        }
        var Jt = [
          new ut(st[0], 3609767458),
          new ut(st[1], 602891725),
          new ut(st[2], 3964484399),
          new ut(st[3], 2173295548),
          new ut(st[4], 4081628472),
          new ut(st[5], 3053834265),
          new ut(st[6], 2937671579),
          new ut(st[7], 3664609560),
          new ut(st[8], 2734883394),
          new ut(st[9], 1164996542),
          new ut(st[10], 1323610764),
          new ut(st[11], 3590304994),
          new ut(st[12], 4068182383),
          new ut(st[13], 991336113),
          new ut(st[14], 633803317),
          new ut(st[15], 3479774868),
          new ut(st[16], 2666613458),
          new ut(st[17], 944711139),
          new ut(st[18], 2341262773),
          new ut(st[19], 2007800933),
          new ut(st[20], 1495990901),
          new ut(st[21], 1856431235),
          new ut(st[22], 3175218132),
          new ut(st[23], 2198950837),
          new ut(st[24], 3999719339),
          new ut(st[25], 766784016),
          new ut(st[26], 2566594879),
          new ut(st[27], 3203337956),
          new ut(st[28], 1034457026),
          new ut(st[29], 2466948901),
          new ut(st[30], 3758326383),
          new ut(st[31], 168717936),
          new ut(st[32], 1188179964),
          new ut(st[33], 1546045734),
          new ut(st[34], 1522805485),
          new ut(st[35], 2643833823),
          new ut(st[36], 2343527390),
          new ut(st[37], 1014477480),
          new ut(st[38], 1206759142),
          new ut(st[39], 344077627),
          new ut(st[40], 1290863460),
          new ut(st[41], 3158454273),
          new ut(st[42], 3505952657),
          new ut(st[43], 106217008),
          new ut(st[44], 3606008344),
          new ut(st[45], 1432725776),
          new ut(st[46], 1467031594),
          new ut(st[47], 851169720),
          new ut(st[48], 3100823752),
          new ut(st[49], 1363258195),
          new ut(st[50], 3750685593),
          new ut(st[51], 3785050280),
          new ut(st[52], 3318307427),
          new ut(st[53], 3812723403),
          new ut(st[54], 2003034995),
          new ut(st[55], 3602036899),
          new ut(st[56], 1575990012),
          new ut(st[57], 1125592928),
          new ut(st[58], 2716904306),
          new ut(st[59], 442776044),
          new ut(st[60], 593698344),
          new ut(st[61], 3733110249),
          new ut(st[62], 2999351573),
          new ut(st[63], 3815920427),
          new ut(3391569614, 3928383900),
          new ut(3515267271, 566280711),
          new ut(3940187606, 3454069534),
          new ut(4118630271, 4000239992),
          new ut(116418474, 1914138554),
          new ut(174292421, 2731055270),
          new ut(289380356, 3203993006),
          new ut(460393269, 320620315),
          new ut(685471733, 587496836),
          new ut(852142971, 1086792851),
          new ut(1017036298, 365543100),
          new ut(1126000580, 2618297676),
          new ut(1288033470, 3409855158),
          new ut(1501505948, 4234509866),
          new ut(1607167915, 987167468),
          new ut(1816402316, 1246189591)
        ];
        function vr(yr) {
          return yr === "SHA-384" ? [
            new ut(3418070365, pt[0]),
            new ut(1654270250, pt[1]),
            new ut(2438529370, pt[2]),
            new ut(355462360, pt[3]),
            new ut(1731405415, pt[4]),
            new ut(41048885895, pt[5]),
            new ut(3675008525, pt[6]),
            new ut(1203062813, pt[7])
          ] : [
            new ut(Et[0], 4089235720),
            new ut(Et[1], 2227873595),
            new ut(Et[2], 4271175723),
            new ut(Et[3], 1595750129),
            new ut(Et[4], 2917565137),
            new ut(Et[5], 725511199),
            new ut(Et[6], 4215389547),
            new ut(Et[7], 327033209)
          ];
        }
        function Br(yr, fr) {
          var dr, gr, Er, zt, qt, Vt, Qt, hr, br, pr, Rr, qr, xr, Fr, zr, Pr, Wr = [];
          for (dr = fr[0], gr = fr[1], Er = fr[2], zt = fr[3], qt = fr[4], Vt = fr[5], Qt = fr[6], hr = fr[7], Rr = 0; Rr < 80; Rr += 1) Rr < 16 ? (qr = 2 * Rr, Wr[Rr] = new ut(yr[qr], yr[qr + 1])) : Wr[Rr] = Gt((xr = Wr[Rr - 2], Fr = void 0, zr = void 0, Pr = void 0, Fr = Ct(xr, 19), zr = Ct(xr, 61), Pr = Rt(xr, 6), new ut(Fr.N ^ zr.N ^ Pr.N, Fr.I ^ zr.I ^ Pr.I)), Wr[Rr - 7], cr(Wr[Rr - 15]), Wr[Rr - 16]), br = Yt(hr, ir(qt), Nt(qt, Vt, Qt), Jt[Rr], Wr[Rr]), pr = rr(Xt(dr), Wt(dr, gr, Er)), hr = Qt, Qt = Vt, Vt = qt, qt = rr(zt, br), zt = Er, Er = gr, gr = dr, dr = rr(br, pr);
          return fr[0] = rr(dr, fr[0]), fr[1] = rr(gr, fr[1]), fr[2] = rr(Er, fr[2]), fr[3] = rr(zt, fr[3]), fr[4] = rr(qt, fr[4]), fr[5] = rr(Vt, fr[5]), fr[6] = rr(Qt, fr[6]), fr[7] = rr(hr, fr[7]), fr;
        }
        var _r = function(yr) {
          function fr(dr, gr, Er) {
            var zt = this;
            if (dr !== "SHA-384" && dr !== "SHA-512") throw new Error(Bt);
            var qt = Er || {};
            return (zt = yr.call(this, dr, gr, Er) || this).F = zt.Y, zt.g = true, zt.C = -1, zt.p = rt(zt.t, zt.i, zt.C), zt.R = Br, zt.B = function(Vt) {
              return Vt.slice();
            }, zt.L = vr, zt.K = function(Vt, Qt, hr, br) {
              return function(pr, Rr, qr, xr, Fr) {
                for (var zr, Pr = 31 + (Rr + 129 >>> 10 << 5), Wr = Rr + qr; pr.length <= Pr; ) pr.push(0);
                for (pr[Rr >>> 5] |= 128 << 24 - Rr % 32, pr[Pr] = 4294967295 & Wr, pr[Pr - 1] = Wr / 4294967296 | 0, zr = 0; zr < pr.length; zr += 32) xr = Br(pr.slice(zr, zr + 32), xr);
                return Fr === "SHA-384" ? [
                  (xr = xr)[0].N,
                  xr[0].I,
                  xr[1].N,
                  xr[1].I,
                  xr[2].N,
                  xr[2].I,
                  xr[3].N,
                  xr[3].I,
                  xr[4].N,
                  xr[4].I,
                  xr[5].N,
                  xr[5].I
                ] : [
                  xr[0].N,
                  xr[0].I,
                  xr[1].N,
                  xr[1].I,
                  xr[2].N,
                  xr[2].I,
                  xr[3].N,
                  xr[3].I,
                  xr[4].N,
                  xr[4].I,
                  xr[5].N,
                  xr[5].I,
                  xr[6].N,
                  xr[6].I,
                  xr[7].N,
                  xr[7].I
                ];
              }(Vt, Qt, hr, br, dr);
            }, zt.m = vr(dr), zt.S = 1024, zt.U = dr === "SHA-384" ? 384 : 512, zt.T = false, qt.hmacKey && zt.k(kt("hmacKey", qt.hmacKey, zt.C)), zt;
          }
          return It(fr, yr), fr;
        }(Tt), $r = [
          new ut(0, 1),
          new ut(0, 32898),
          new ut(2147483648, 32906),
          new ut(2147483648, 2147516416),
          new ut(0, 32907),
          new ut(0, 2147483649),
          new ut(2147483648, 2147516545),
          new ut(2147483648, 32777),
          new ut(0, 138),
          new ut(0, 136),
          new ut(0, 2147516425),
          new ut(0, 2147483658),
          new ut(0, 2147516555),
          new ut(2147483648, 139),
          new ut(2147483648, 32905),
          new ut(2147483648, 32771),
          new ut(2147483648, 32770),
          new ut(2147483648, 128),
          new ut(0, 32778),
          new ut(2147483648, 2147483658),
          new ut(2147483648, 2147516545),
          new ut(2147483648, 32896),
          new ut(0, 2147483649),
          new ut(2147483648, 2147516424)
        ], Ur = [
          [
            0,
            36,
            3,
            41,
            18
          ],
          [
            1,
            44,
            10,
            45,
            2
          ],
          [
            62,
            6,
            43,
            15,
            61
          ],
          [
            28,
            55,
            25,
            21,
            56
          ],
          [
            27,
            20,
            39,
            8,
            14
          ]
        ];
        function Sr(yr) {
          var fr, dr = [];
          for (fr = 0; fr < 5; fr += 1) dr[fr] = [
            new ut(0, 0),
            new ut(0, 0),
            new ut(0, 0),
            new ut(0, 0),
            new ut(0, 0)
          ];
          return dr;
        }
        function Mr(yr) {
          var fr, dr = [];
          for (fr = 0; fr < 5; fr += 1) dr[fr] = yr[fr].slice();
          return dr;
        }
        function Kr(yr, fr) {
          var dr, gr, Er, zt, qt, Vt, Qt, hr, br, pr = [], Rr = [];
          if (yr !== null) for (gr = 0; gr < yr.length; gr += 2) fr[(gr >>> 1) % 5][(gr >>> 1) / 5 | 0] = tr(fr[(gr >>> 1) % 5][(gr >>> 1) / 5 | 0], new ut(yr[gr + 1], yr[gr]));
          for (dr = 0; dr < 24; dr += 1) {
            for (zt = Sr(), gr = 0; gr < 5; gr += 1) pr[gr] = (qt = fr[gr][0], Vt = fr[gr][1], Qt = fr[gr][2], hr = fr[gr][3], br = fr[gr][4], new ut(qt.N ^ Vt.N ^ Qt.N ^ hr.N ^ br.N, qt.I ^ Vt.I ^ Qt.I ^ hr.I ^ br.I));
            for (gr = 0; gr < 5; gr += 1) Rr[gr] = tr(pr[(gr + 4) % 5], ot(pr[(gr + 1) % 5], 1));
            for (gr = 0; gr < 5; gr += 1) for (Er = 0; Er < 5; Er += 1) fr[gr][Er] = tr(fr[gr][Er], Rr[gr]);
            for (gr = 0; gr < 5; gr += 1) for (Er = 0; Er < 5; Er += 1) zt[Er][(2 * gr + 3 * Er) % 5] = ot(fr[gr][Er], Ur[gr][Er]);
            for (gr = 0; gr < 5; gr += 1) for (Er = 0; Er < 5; Er += 1) fr[gr][Er] = tr(zt[gr][Er], new ut(~zt[(gr + 1) % 5][Er].N & zt[(gr + 2) % 5][Er].N, ~zt[(gr + 1) % 5][Er].I & zt[(gr + 2) % 5][Er].I));
            fr[0][0] = tr(fr[0][0], $r[dr]);
          }
          return fr;
        }
        function kr(yr) {
          var fr, dr, gr = 0, Er = [
            0,
            0
          ], zt = [
            4294967295 & yr,
            yr / 4294967296 & 2097151
          ];
          for (fr = 6; fr >= 0; fr--) (dr = zt[fr >> 2] >>> 8 * fr & 255) === 0 && gr === 0 || (Er[gr + 1 >> 2] |= dr << 8 * (gr + 1), gr += 1);
          return gr = gr !== 0 ? gr : 1, Er[0] |= gr, {
            value: gr + 1 > 4 ? Er : [
              Er[0]
            ],
            binLen: 8 + 8 * gr
          };
        }
        function Lr(yr) {
          return St(kr(yr.binLen), yr);
        }
        function Gr(yr, fr) {
          var dr, gr = kr(fr), Er = fr >>> 2, zt = (Er - (gr = St(gr, yr)).value.length % Er) % Er;
          for (dr = 0; dr < zt; dr++) gr.value.push(0);
          return gr.value;
        }
        var Tr = function(yr) {
          function fr(dr, gr, Er) {
            var zt = this, qt = 6, Vt = 0, Qt = Er || {};
            if ((zt = yr.call(this, dr, gr, Er) || this).numRounds !== 1) {
              if (Qt.kmacKey || Qt.hmacKey) throw new Error("Cannot set numRounds with MAC");
              if (zt.o === "CSHAKE128" || zt.o === "CSHAKE256") throw new Error("Cannot set numRounds for CSHAKE variants");
            }
            switch (zt.C = 1, zt.p = rt(zt.t, zt.i, zt.C), zt.R = Kr, zt.B = Mr, zt.L = Sr, zt.m = Sr(), zt.T = false, dr) {
              case "SHA3-224":
                zt.S = Vt = 1152, zt.U = 224, zt.g = true, zt.F = zt.Y;
                break;
              case "SHA3-256":
                zt.S = Vt = 1088, zt.U = 256, zt.g = true, zt.F = zt.Y;
                break;
              case "SHA3-384":
                zt.S = Vt = 832, zt.U = 384, zt.g = true, zt.F = zt.Y;
                break;
              case "SHA3-512":
                zt.S = Vt = 576, zt.U = 512, zt.g = true, zt.F = zt.Y;
                break;
              case "SHAKE128":
                qt = 31, zt.S = Vt = 1344, zt.U = -1, zt.T = true, zt.g = false, zt.F = null;
                break;
              case "SHAKE256":
                qt = 31, zt.S = Vt = 1088, zt.U = -1, zt.T = true, zt.g = false, zt.F = null;
                break;
              case "KMAC128":
                qt = 4, zt.S = Vt = 1344, zt.M(Er), zt.U = -1, zt.T = true, zt.g = false, zt.F = zt.X;
                break;
              case "KMAC256":
                qt = 4, zt.S = Vt = 1088, zt.M(Er), zt.U = -1, zt.T = true, zt.g = false, zt.F = zt.X;
                break;
              case "CSHAKE128":
                zt.S = Vt = 1344, qt = zt.O(Er), zt.U = -1, zt.T = true, zt.g = false, zt.F = null;
                break;
              case "CSHAKE256":
                zt.S = Vt = 1088, qt = zt.O(Er), zt.U = -1, zt.T = true, zt.g = false, zt.F = null;
                break;
              default:
                throw new Error(Bt);
            }
            return zt.K = function(hr, br, pr, Rr, qr) {
              return function(xr, Fr, zr, Pr, Wr, tn, Nr) {
                var Hr, rn, jr = 0, Yr = [], nn = Wr >>> 5, Or = Fr >>> 5;
                for (Hr = 0; Hr < Or && Fr >= Wr; Hr += nn) Pr = Kr(xr.slice(Hr, Hr + nn), Pr), Fr -= Wr;
                for (xr = xr.slice(Hr), Fr %= Wr; xr.length < nn; ) xr.push(0);
                for (xr[(Hr = Fr >>> 3) >> 2] ^= tn << Hr % 4 * 8, xr[nn - 1] ^= 2147483648, Pr = Kr(xr, Pr); 32 * Yr.length < Nr && (rn = Pr[jr % 5][jr / 5 | 0], Yr.push(rn.I), !(32 * Yr.length >= Nr)); ) Yr.push(rn.N), 64 * (jr += 1) % Wr == 0 && (Kr(null, Pr), jr = 0);
                return Yr;
              }(hr, br, 0, Rr, Vt, qt, qr);
            }, Qt.hmacKey && zt.k(kt("hmacKey", Qt.hmacKey, zt.C)), zt;
          }
          return It(fr, yr), fr.prototype.O = function(dr, gr) {
            var Er = function(Qt) {
              var hr = Qt || {};
              return {
                funcName: kt("funcName", hr.funcName, 1, {
                  value: [],
                  binLen: 0
                }),
                customization: kt("Customization", hr.customization, 1, {
                  value: [],
                  binLen: 0
                })
              };
            }(dr || {});
            gr && (Er.funcName = gr);
            var zt = St(Lr(Er.funcName), Lr(Er.customization));
            if (Er.customization.binLen !== 0 || Er.funcName.binLen !== 0) {
              for (var qt = Gr(zt, this.S >>> 3), Vt = 0; Vt < qt.length; Vt += this.S >>> 5) this.m = this.R(qt.slice(Vt, Vt + (this.S >>> 5)), this.m), this.v += this.S;
              return 4;
            }
            return 31;
          }, fr.prototype.M = function(dr) {
            var gr = function(qt) {
              var Vt = qt || {};
              return {
                kmacKey: kt("kmacKey", Vt.kmacKey, 1),
                funcName: {
                  value: [
                    1128353099
                  ],
                  binLen: 32
                },
                customization: kt("Customization", Vt.customization, 1, {
                  value: [],
                  binLen: 0
                })
              };
            }(dr || {});
            this.O(dr, gr.funcName);
            for (var Er = Gr(Lr(gr.kmacKey), this.S >>> 3), zt = 0; zt < Er.length; zt += this.S >>> 5) this.m = this.R(Er.slice(zt, zt + (this.S >>> 5)), this.m), this.v += this.S;
            this.A = true;
          }, fr.prototype.X = function(dr) {
            var gr = St({
              value: this.u.slice(),
              binLen: this.s
            }, function(Er) {
              var zt, qt, Vt = 0, Qt = [
                0,
                0
              ], hr = [
                4294967295 & Er,
                Er / 4294967296 & 2097151
              ];
              for (zt = 6; zt >= 0; zt--) (qt = hr[zt >> 2] >>> 8 * zt & 255) == 0 && Vt === 0 || (Qt[Vt >> 2] |= qt << 8 * Vt, Vt += 1);
              return Qt[(Vt = Vt !== 0 ? Vt : 1) >> 2] |= Vt << 8 * Vt, {
                value: Vt + 1 > 4 ? Qt : [
                  Qt[0]
                ],
                binLen: 8 + 8 * Vt
              };
            }(dr.outputLen));
            return this.K(gr.value, gr.binLen, this.v, this.B(this.m), dr.outputLen);
          }, fr;
        }(Tt);
        return function() {
          function yr(fr, dr, gr) {
            if (fr == "SHA-1") this.j = new at(fr, dr, gr);
            else if (fr == "SHA-224" || fr == "SHA-256") this.j = new At(fr, dr, gr);
            else if (fr == "SHA-384" || fr == "SHA-512") this.j = new _r(fr, dr, gr);
            else {
              if (fr != "SHA3-224" && fr != "SHA3-256" && fr != "SHA3-384" && fr != "SHA3-512" && fr != "SHAKE128" && fr != "SHAKE256" && fr != "CSHAKE128" && fr != "CSHAKE256" && fr != "KMAC128" && fr != "KMAC256") throw new Error(Bt);
              this.j = new Tr(fr, dr, gr);
            }
          }
          return yr.prototype.update = function(fr) {
            this.j.update(fr);
          }, yr.prototype.getHash = function(fr, dr) {
            return this.j.getHash(fr, dr);
          }, yr.prototype.setHMACKey = function(fr, dr, gr) {
            this.j.setHMACKey(fr, dr, gr);
          }, yr.prototype.getHMAC = function(fr, dr) {
            return this.j.getHMAC(fr, dr);
          }, yr;
        }();
      });
    })(sha);
    var shaExports = sha.exports, browser$2 = {}, getSecureRandom$1 = {};
    Object.defineProperty(getSecureRandom$1, "__esModule", {
      value: true
    });
    getSecureRandom$1.getSecureRandomWords = getSecureRandom$1.getSecureRandomBytes = void 0;
    function getSecureRandomBytes$1(d) {
      return Buffer.from(window.crypto.getRandomValues(new Uint8Array(d)));
    }
    getSecureRandom$1.getSecureRandomBytes = getSecureRandomBytes$1;
    function getSecureRandomWords$1(d) {
      return window.crypto.getRandomValues(new Uint16Array(d));
    }
    getSecureRandom$1.getSecureRandomWords = getSecureRandomWords$1;
    var hmac_sha512$3 = {};
    Object.defineProperty(hmac_sha512$3, "__esModule", {
      value: true
    });
    hmac_sha512$3.hmac_sha512 = void 0;
    async function hmac_sha512$2(d, _) {
      let $ = typeof d == "string" ? Buffer.from(d, "utf-8") : d, j = typeof _ == "string" ? Buffer.from(_, "utf-8") : _;
      const rt = {
        name: "HMAC",
        hash: "SHA-512"
      }, et = await window.crypto.subtle.importKey("raw", $, rt, false, [
        "sign"
      ]);
      return Buffer.from(await crypto.subtle.sign(rt, et, j));
    }
    hmac_sha512$3.hmac_sha512 = hmac_sha512$2;
    var pbkdf2_sha512$3 = {};
    Object.defineProperty(pbkdf2_sha512$3, "__esModule", {
      value: true
    });
    pbkdf2_sha512$3.pbkdf2_sha512 = void 0;
    async function pbkdf2_sha512$2(d, _, $, j) {
      const rt = typeof d == "string" ? Buffer.from(d, "utf-8") : d, et = typeof _ == "string" ? Buffer.from(_, "utf-8") : _, st = await window.crypto.subtle.importKey("raw", rt, {
        name: "PBKDF2"
      }, false, [
        "deriveBits"
      ]), pt = await window.crypto.subtle.deriveBits({
        name: "PBKDF2",
        hash: "SHA-512",
        salt: et,
        iterations: $
      }, st, j * 8);
      return Buffer.from(pt);
    }
    pbkdf2_sha512$3.pbkdf2_sha512 = pbkdf2_sha512$2;
    var sha256$6 = {};
    Object.defineProperty(sha256$6, "__esModule", {
      value: true
    });
    sha256$6.sha256 = void 0;
    async function sha256$5(d) {
      return typeof d == "string" ? Buffer.from(await crypto.subtle.digest("SHA-256", Buffer.from(d, "utf-8"))) : Buffer.from(await crypto.subtle.digest("SHA-256", d));
    }
    sha256$6.sha256 = sha256$5;
    var sha512$3 = {};
    Object.defineProperty(sha512$3, "__esModule", {
      value: true
    });
    sha512$3.sha512 = void 0;
    async function sha512$2(d) {
      return typeof d == "string" ? Buffer.from(await crypto.subtle.digest("SHA-512", Buffer.from(d, "utf-8"))) : Buffer.from(await crypto.subtle.digest("SHA-512", d));
    }
    sha512$3.sha512 = sha512$2;
    (function(d) {
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.sha512 = d.sha256 = d.pbkdf2_sha512 = d.hmac_sha512 = d.getSecureRandomWords = d.getSecureRandomBytes = void 0;
      var _ = getSecureRandom$1;
      Object.defineProperty(d, "getSecureRandomBytes", {
        enumerable: true,
        get: function() {
          return _.getSecureRandomBytes;
        }
      }), Object.defineProperty(d, "getSecureRandomWords", {
        enumerable: true,
        get: function() {
          return _.getSecureRandomWords;
        }
      });
      var $ = hmac_sha512$3;
      Object.defineProperty(d, "hmac_sha512", {
        enumerable: true,
        get: function() {
          return $.hmac_sha512;
        }
      });
      var j = pbkdf2_sha512$3;
      Object.defineProperty(d, "pbkdf2_sha512", {
        enumerable: true,
        get: function() {
          return j.pbkdf2_sha512;
        }
      });
      var rt = sha256$6;
      Object.defineProperty(d, "sha256", {
        enumerable: true,
        get: function() {
          return rt.sha256;
        }
      });
      var et = sha512$3;
      Object.defineProperty(d, "sha512", {
        enumerable: true,
        get: function() {
          return et.sha512;
        }
      });
    })(browser$2);
    var __importDefault$7 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(sha256$7, "__esModule", {
      value: true
    });
    sha256$7.sha256 = sha256$7.sha256_fallback = sha256$7.sha256_sync = void 0;
    const jssha_1$2 = __importDefault$7(shaExports), crypto_primitives_1$4 = browser$2;
    function sha256_sync(d) {
      let _;
      typeof d == "string" ? _ = Buffer.from(d, "utf-8").toString("hex") : _ = d.toString("hex");
      let $ = new jssha_1$2.default("SHA-256", "HEX");
      $.update(_);
      let j = $.getHash("HEX");
      return Buffer.from(j, "hex");
    }
    sha256$7.sha256_sync = sha256_sync;
    async function sha256_fallback(d) {
      return sha256_sync(d);
    }
    sha256$7.sha256_fallback = sha256_fallback;
    function sha256$4(d) {
      return (0, crypto_primitives_1$4.sha256)(d);
    }
    sha256$7.sha256 = sha256$4;
    var sha512$1 = {}, __importDefault$6 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(sha512$1, "__esModule", {
      value: true
    });
    sha512$1.sha512 = sha512$1.sha512_fallback = sha512$1.sha512_sync = void 0;
    const jssha_1$1 = __importDefault$6(shaExports), crypto_primitives_1$3 = browser$2;
    function sha512_sync(d) {
      let _;
      typeof d == "string" ? _ = Buffer.from(d, "utf-8").toString("hex") : _ = d.toString("hex");
      let $ = new jssha_1$1.default("SHA-512", "HEX");
      $.update(_);
      let j = $.getHash("HEX");
      return Buffer.from(j, "hex");
    }
    sha512$1.sha512_sync = sha512_sync;
    async function sha512_fallback(d) {
      return sha512_sync(d);
    }
    sha512$1.sha512_fallback = sha512_fallback;
    async function sha512(d) {
      return (0, crypto_primitives_1$3.sha512)(d);
    }
    sha512$1.sha512 = sha512;
    var pbkdf2_sha512$1 = {};
    Object.defineProperty(pbkdf2_sha512$1, "__esModule", {
      value: true
    });
    pbkdf2_sha512$1.pbkdf2_sha512 = void 0;
    const crypto_primitives_1$2 = browser$2;
    function pbkdf2_sha512(d, _, $, j) {
      return (0, crypto_primitives_1$2.pbkdf2_sha512)(d, _, $, j);
    }
    pbkdf2_sha512$1.pbkdf2_sha512 = pbkdf2_sha512;
    var hmac_sha512$1 = {}, __importDefault$5 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(hmac_sha512$1, "__esModule", {
      value: true
    });
    hmac_sha512$1.hmac_sha512 = hmac_sha512$1.hmac_sha512_fallback = void 0;
    const jssha_1 = __importDefault$5(shaExports), crypto_primitives_1$1 = browser$2;
    async function hmac_sha512_fallback(d, _) {
      let $ = typeof d == "string" ? Buffer.from(d, "utf-8") : d, j = typeof _ == "string" ? Buffer.from(_, "utf-8") : _;
      const rt = new jssha_1.default("SHA-512", "HEX", {
        hmacKey: {
          value: $.toString("hex"),
          format: "HEX"
        }
      });
      rt.update(j.toString("hex"));
      const et = rt.getHash("HEX");
      return Buffer.from(et, "hex");
    }
    hmac_sha512$1.hmac_sha512_fallback = hmac_sha512_fallback;
    function hmac_sha512(d, _) {
      return (0, crypto_primitives_1$1.hmac_sha512)(d, _);
    }
    hmac_sha512$1.hmac_sha512 = hmac_sha512;
    var getSecureRandom = {};
    Object.defineProperty(getSecureRandom, "__esModule", {
      value: true
    });
    getSecureRandom.getSecureRandomNumber = getSecureRandom.getSecureRandomWords = getSecureRandom.getSecureRandomBytes = void 0;
    const crypto_primitives_1 = browser$2;
    async function getSecureRandomBytes(d) {
      return (0, crypto_primitives_1.getSecureRandomBytes)(d);
    }
    getSecureRandom.getSecureRandomBytes = getSecureRandomBytes;
    async function getSecureRandomWords(d) {
      return getSecureRandomWords();
    }
    getSecureRandom.getSecureRandomWords = getSecureRandomWords;
    async function getSecureRandomNumber(d, _) {
      let $ = _ - d;
      var j = Math.ceil(Math.log2($));
      if (j > 53) throw new Error("Range is too large");
      for (var rt = Math.ceil(j / 8), et = Math.pow(2, j) - 1; ; ) {
        let pt = await getSecureRandomBytes(j), Et = (rt - 1) * 8, Bt = 0;
        for (var st = 0; st < rt; st++) Bt += pt[st] * Math.pow(2, Et), Et -= 8;
        if (Bt = Bt & et, !(Bt >= $)) return d + Bt;
      }
    }
    getSecureRandom.getSecureRandomNumber = getSecureRandomNumber;
    var newSecureWords$1 = {}, wordlist$1 = {};
    Object.defineProperty(wordlist$1, "__esModule", {
      value: true
    });
    wordlist$1.wordlist = void 0;
    wordlist$1.wordlist = [
      "abacus",
      "abdomen",
      "abdominal",
      "abide",
      "abiding",
      "ability",
      "ablaze",
      "able",
      "abnormal",
      "abrasion",
      "abrasive",
      "abreast",
      "abridge",
      "abroad",
      "abruptly",
      "absence",
      "absentee",
      "absently",
      "absinthe",
      "absolute",
      "absolve",
      "abstain",
      "abstract",
      "absurd",
      "accent",
      "acclaim",
      "acclimate",
      "accompany",
      "account",
      "accuracy",
      "accurate",
      "accustom",
      "acetone",
      "achiness",
      "aching",
      "acid",
      "acorn",
      "acquaint",
      "acquire",
      "acre",
      "acrobat",
      "acronym",
      "acting",
      "action",
      "activate",
      "activator",
      "active",
      "activism",
      "activist",
      "activity",
      "actress",
      "acts",
      "acutely",
      "acuteness",
      "aeration",
      "aerobics",
      "aerosol",
      "aerospace",
      "afar",
      "affair",
      "affected",
      "affecting",
      "affection",
      "affidavit",
      "affiliate",
      "affirm",
      "affix",
      "afflicted",
      "affluent",
      "afford",
      "affront",
      "aflame",
      "afloat",
      "aflutter",
      "afoot",
      "afraid",
      "afterglow",
      "afterlife",
      "aftermath",
      "aftermost",
      "afternoon",
      "aged",
      "ageless",
      "agency",
      "agenda",
      "agent",
      "aggregate",
      "aghast",
      "agile",
      "agility",
      "aging",
      "agnostic",
      "agonize",
      "agonizing",
      "agony",
      "agreeable",
      "agreeably",
      "agreed",
      "agreeing",
      "agreement",
      "aground",
      "ahead",
      "ahoy",
      "aide",
      "aids",
      "aim",
      "ajar",
      "alabaster",
      "alarm",
      "albatross",
      "album",
      "alfalfa",
      "algebra",
      "algorithm",
      "alias",
      "alibi",
      "alienable",
      "alienate",
      "aliens",
      "alike",
      "alive",
      "alkaline",
      "alkalize",
      "almanac",
      "almighty",
      "almost",
      "aloe",
      "aloft",
      "aloha",
      "alone",
      "alongside",
      "aloof",
      "alphabet",
      "alright",
      "although",
      "altitude",
      "alto",
      "aluminum",
      "alumni",
      "always",
      "amaretto",
      "amaze",
      "amazingly",
      "amber",
      "ambiance",
      "ambiguity",
      "ambiguous",
      "ambition",
      "ambitious",
      "ambulance",
      "ambush",
      "amendable",
      "amendment",
      "amends",
      "amenity",
      "amiable",
      "amicably",
      "amid",
      "amigo",
      "amino",
      "amiss",
      "ammonia",
      "ammonium",
      "amnesty",
      "amniotic",
      "among",
      "amount",
      "amperage",
      "ample",
      "amplifier",
      "amplify",
      "amply",
      "amuck",
      "amulet",
      "amusable",
      "amused",
      "amusement",
      "amuser",
      "amusing",
      "anaconda",
      "anaerobic",
      "anagram",
      "anatomist",
      "anatomy",
      "anchor",
      "anchovy",
      "ancient",
      "android",
      "anemia",
      "anemic",
      "aneurism",
      "anew",
      "angelfish",
      "angelic",
      "anger",
      "angled",
      "angler",
      "angles",
      "angling",
      "angrily",
      "angriness",
      "anguished",
      "angular",
      "animal",
      "animate",
      "animating",
      "animation",
      "animator",
      "anime",
      "animosity",
      "ankle",
      "annex",
      "annotate",
      "announcer",
      "annoying",
      "annually",
      "annuity",
      "anointer",
      "another",
      "answering",
      "antacid",
      "antarctic",
      "anteater",
      "antelope",
      "antennae",
      "anthem",
      "anthill",
      "anthology",
      "antibody",
      "antics",
      "antidote",
      "antihero",
      "antiquely",
      "antiques",
      "antiquity",
      "antirust",
      "antitoxic",
      "antitrust",
      "antiviral",
      "antivirus",
      "antler",
      "antonym",
      "antsy",
      "anvil",
      "anybody",
      "anyhow",
      "anymore",
      "anyone",
      "anyplace",
      "anything",
      "anytime",
      "anyway",
      "anywhere",
      "aorta",
      "apache",
      "apostle",
      "appealing",
      "appear",
      "appease",
      "appeasing",
      "appendage",
      "appendix",
      "appetite",
      "appetizer",
      "applaud",
      "applause",
      "apple",
      "appliance",
      "applicant",
      "applied",
      "apply",
      "appointee",
      "appraisal",
      "appraiser",
      "apprehend",
      "approach",
      "approval",
      "approve",
      "apricot",
      "april",
      "apron",
      "aptitude",
      "aptly",
      "aqua",
      "aqueduct",
      "arbitrary",
      "arbitrate",
      "ardently",
      "area",
      "arena",
      "arguable",
      "arguably",
      "argue",
      "arise",
      "armadillo",
      "armband",
      "armchair",
      "armed",
      "armful",
      "armhole",
      "arming",
      "armless",
      "armoire",
      "armored",
      "armory",
      "armrest",
      "army",
      "aroma",
      "arose",
      "around",
      "arousal",
      "arrange",
      "array",
      "arrest",
      "arrival",
      "arrive",
      "arrogance",
      "arrogant",
      "arson",
      "art",
      "ascend",
      "ascension",
      "ascent",
      "ascertain",
      "ashamed",
      "ashen",
      "ashes",
      "ashy",
      "aside",
      "askew",
      "asleep",
      "asparagus",
      "aspect",
      "aspirate",
      "aspire",
      "aspirin",
      "astonish",
      "astound",
      "astride",
      "astrology",
      "astronaut",
      "astronomy",
      "astute",
      "atlantic",
      "atlas",
      "atom",
      "atonable",
      "atop",
      "atrium",
      "atrocious",
      "atrophy",
      "attach",
      "attain",
      "attempt",
      "attendant",
      "attendee",
      "attention",
      "attentive",
      "attest",
      "attic",
      "attire",
      "attitude",
      "attractor",
      "attribute",
      "atypical",
      "auction",
      "audacious",
      "audacity",
      "audible",
      "audibly",
      "audience",
      "audio",
      "audition",
      "augmented",
      "august",
      "authentic",
      "author",
      "autism",
      "autistic",
      "autograph",
      "automaker",
      "automated",
      "automatic",
      "autopilot",
      "available",
      "avalanche",
      "avatar",
      "avenge",
      "avenging",
      "avenue",
      "average",
      "aversion",
      "avert",
      "aviation",
      "aviator",
      "avid",
      "avoid",
      "await",
      "awaken",
      "award",
      "aware",
      "awhile",
      "awkward",
      "awning",
      "awoke",
      "awry",
      "axis",
      "babble",
      "babbling",
      "babied",
      "baboon",
      "backache",
      "backboard",
      "backboned",
      "backdrop",
      "backed",
      "backer",
      "backfield",
      "backfire",
      "backhand",
      "backing",
      "backlands",
      "backlash",
      "backless",
      "backlight",
      "backlit",
      "backlog",
      "backpack",
      "backpedal",
      "backrest",
      "backroom",
      "backshift",
      "backside",
      "backslid",
      "backspace",
      "backspin",
      "backstab",
      "backstage",
      "backtalk",
      "backtrack",
      "backup",
      "backward",
      "backwash",
      "backwater",
      "backyard",
      "bacon",
      "bacteria",
      "bacterium",
      "badass",
      "badge",
      "badland",
      "badly",
      "badness",
      "baffle",
      "baffling",
      "bagel",
      "bagful",
      "baggage",
      "bagged",
      "baggie",
      "bagginess",
      "bagging",
      "baggy",
      "bagpipe",
      "baguette",
      "baked",
      "bakery",
      "bakeshop",
      "baking",
      "balance",
      "balancing",
      "balcony",
      "balmy",
      "balsamic",
      "bamboo",
      "banana",
      "banish",
      "banister",
      "banjo",
      "bankable",
      "bankbook",
      "banked",
      "banker",
      "banking",
      "banknote",
      "bankroll",
      "banner",
      "bannister",
      "banshee",
      "banter",
      "barbecue",
      "barbed",
      "barbell",
      "barber",
      "barcode",
      "barge",
      "bargraph",
      "barista",
      "baritone",
      "barley",
      "barmaid",
      "barman",
      "barn",
      "barometer",
      "barrack",
      "barracuda",
      "barrel",
      "barrette",
      "barricade",
      "barrier",
      "barstool",
      "bartender",
      "barterer",
      "bash",
      "basically",
      "basics",
      "basil",
      "basin",
      "basis",
      "basket",
      "batboy",
      "batch",
      "bath",
      "baton",
      "bats",
      "battalion",
      "battered",
      "battering",
      "battery",
      "batting",
      "battle",
      "bauble",
      "bazooka",
      "blabber",
      "bladder",
      "blade",
      "blah",
      "blame",
      "blaming",
      "blanching",
      "blandness",
      "blank",
      "blaspheme",
      "blasphemy",
      "blast",
      "blatancy",
      "blatantly",
      "blazer",
      "blazing",
      "bleach",
      "bleak",
      "bleep",
      "blemish",
      "blend",
      "bless",
      "blighted",
      "blimp",
      "bling",
      "blinked",
      "blinker",
      "blinking",
      "blinks",
      "blip",
      "blissful",
      "blitz",
      "blizzard",
      "bloated",
      "bloating",
      "blob",
      "blog",
      "bloomers",
      "blooming",
      "blooper",
      "blot",
      "blouse",
      "blubber",
      "bluff",
      "bluish",
      "blunderer",
      "blunt",
      "blurb",
      "blurred",
      "blurry",
      "blurt",
      "blush",
      "blustery",
      "boaster",
      "boastful",
      "boasting",
      "boat",
      "bobbed",
      "bobbing",
      "bobble",
      "bobcat",
      "bobsled",
      "bobtail",
      "bodacious",
      "body",
      "bogged",
      "boggle",
      "bogus",
      "boil",
      "bok",
      "bolster",
      "bolt",
      "bonanza",
      "bonded",
      "bonding",
      "bondless",
      "boned",
      "bonehead",
      "boneless",
      "bonelike",
      "boney",
      "bonfire",
      "bonnet",
      "bonsai",
      "bonus",
      "bony",
      "boogeyman",
      "boogieman",
      "book",
      "boondocks",
      "booted",
      "booth",
      "bootie",
      "booting",
      "bootlace",
      "bootleg",
      "boots",
      "boozy",
      "borax",
      "boring",
      "borough",
      "borrower",
      "borrowing",
      "boss",
      "botanical",
      "botanist",
      "botany",
      "botch",
      "both",
      "bottle",
      "bottling",
      "bottom",
      "bounce",
      "bouncing",
      "bouncy",
      "bounding",
      "boundless",
      "bountiful",
      "bovine",
      "boxcar",
      "boxer",
      "boxing",
      "boxlike",
      "boxy",
      "breach",
      "breath",
      "breeches",
      "breeching",
      "breeder",
      "breeding",
      "breeze",
      "breezy",
      "brethren",
      "brewery",
      "brewing",
      "briar",
      "bribe",
      "brick",
      "bride",
      "bridged",
      "brigade",
      "bright",
      "brilliant",
      "brim",
      "bring",
      "brink",
      "brisket",
      "briskly",
      "briskness",
      "bristle",
      "brittle",
      "broadband",
      "broadcast",
      "broaden",
      "broadly",
      "broadness",
      "broadside",
      "broadways",
      "broiler",
      "broiling",
      "broken",
      "broker",
      "bronchial",
      "bronco",
      "bronze",
      "bronzing",
      "brook",
      "broom",
      "brought",
      "browbeat",
      "brownnose",
      "browse",
      "browsing",
      "bruising",
      "brunch",
      "brunette",
      "brunt",
      "brush",
      "brussels",
      "brute",
      "brutishly",
      "bubble",
      "bubbling",
      "bubbly",
      "buccaneer",
      "bucked",
      "bucket",
      "buckle",
      "buckshot",
      "buckskin",
      "bucktooth",
      "buckwheat",
      "buddhism",
      "buddhist",
      "budding",
      "buddy",
      "budget",
      "buffalo",
      "buffed",
      "buffer",
      "buffing",
      "buffoon",
      "buggy",
      "bulb",
      "bulge",
      "bulginess",
      "bulgur",
      "bulk",
      "bulldog",
      "bulldozer",
      "bullfight",
      "bullfrog",
      "bullhorn",
      "bullion",
      "bullish",
      "bullpen",
      "bullring",
      "bullseye",
      "bullwhip",
      "bully",
      "bunch",
      "bundle",
      "bungee",
      "bunion",
      "bunkbed",
      "bunkhouse",
      "bunkmate",
      "bunny",
      "bunt",
      "busboy",
      "bush",
      "busily",
      "busload",
      "bust",
      "busybody",
      "buzz",
      "cabana",
      "cabbage",
      "cabbie",
      "cabdriver",
      "cable",
      "caboose",
      "cache",
      "cackle",
      "cacti",
      "cactus",
      "caddie",
      "caddy",
      "cadet",
      "cadillac",
      "cadmium",
      "cage",
      "cahoots",
      "cake",
      "calamari",
      "calamity",
      "calcium",
      "calculate",
      "calculus",
      "caliber",
      "calibrate",
      "calm",
      "caloric",
      "calorie",
      "calzone",
      "camcorder",
      "cameo",
      "camera",
      "camisole",
      "camper",
      "campfire",
      "camping",
      "campsite",
      "campus",
      "canal",
      "canary",
      "cancel",
      "candied",
      "candle",
      "candy",
      "cane",
      "canine",
      "canister",
      "cannabis",
      "canned",
      "canning",
      "cannon",
      "cannot",
      "canola",
      "canon",
      "canopener",
      "canopy",
      "canteen",
      "canyon",
      "capable",
      "capably",
      "capacity",
      "cape",
      "capillary",
      "capital",
      "capitol",
      "capped",
      "capricorn",
      "capsize",
      "capsule",
      "caption",
      "captivate",
      "captive",
      "captivity",
      "capture",
      "caramel",
      "carat",
      "caravan",
      "carbon",
      "cardboard",
      "carded",
      "cardiac",
      "cardigan",
      "cardinal",
      "cardstock",
      "carefully",
      "caregiver",
      "careless",
      "caress",
      "caretaker",
      "cargo",
      "caring",
      "carless",
      "carload",
      "carmaker",
      "carnage",
      "carnation",
      "carnival",
      "carnivore",
      "carol",
      "carpenter",
      "carpentry",
      "carpool",
      "carport",
      "carried",
      "carrot",
      "carrousel",
      "carry",
      "cartel",
      "cartload",
      "carton",
      "cartoon",
      "cartridge",
      "cartwheel",
      "carve",
      "carving",
      "carwash",
      "cascade",
      "case",
      "cash",
      "casing",
      "casino",
      "casket",
      "cassette",
      "casually",
      "casualty",
      "catacomb",
      "catalog",
      "catalyst",
      "catalyze",
      "catapult",
      "cataract",
      "catatonic",
      "catcall",
      "catchable",
      "catcher",
      "catching",
      "catchy",
      "caterer",
      "catering",
      "catfight",
      "catfish",
      "cathedral",
      "cathouse",
      "catlike",
      "catnap",
      "catnip",
      "catsup",
      "cattail",
      "cattishly",
      "cattle",
      "catty",
      "catwalk",
      "caucasian",
      "caucus",
      "causal",
      "causation",
      "cause",
      "causing",
      "cauterize",
      "caution",
      "cautious",
      "cavalier",
      "cavalry",
      "caviar",
      "cavity",
      "cedar",
      "celery",
      "celestial",
      "celibacy",
      "celibate",
      "celtic",
      "cement",
      "census",
      "ceramics",
      "ceremony",
      "certainly",
      "certainty",
      "certified",
      "certify",
      "cesarean",
      "cesspool",
      "chafe",
      "chaffing",
      "chain",
      "chair",
      "chalice",
      "challenge",
      "chamber",
      "chamomile",
      "champion",
      "chance",
      "change",
      "channel",
      "chant",
      "chaos",
      "chaperone",
      "chaplain",
      "chapped",
      "chaps",
      "chapter",
      "character",
      "charbroil",
      "charcoal",
      "charger",
      "charging",
      "chariot",
      "charity",
      "charm",
      "charred",
      "charter",
      "charting",
      "chase",
      "chasing",
      "chaste",
      "chastise",
      "chastity",
      "chatroom",
      "chatter",
      "chatting",
      "chatty",
      "cheating",
      "cheddar",
      "cheek",
      "cheer",
      "cheese",
      "cheesy",
      "chef",
      "chemicals",
      "chemist",
      "chemo",
      "cherisher",
      "cherub",
      "chess",
      "chest",
      "chevron",
      "chevy",
      "chewable",
      "chewer",
      "chewing",
      "chewy",
      "chief",
      "chihuahua",
      "childcare",
      "childhood",
      "childish",
      "childless",
      "childlike",
      "chili",
      "chill",
      "chimp",
      "chip",
      "chirping",
      "chirpy",
      "chitchat",
      "chivalry",
      "chive",
      "chloride",
      "chlorine",
      "choice",
      "chokehold",
      "choking",
      "chomp",
      "chooser",
      "choosing",
      "choosy",
      "chop",
      "chosen",
      "chowder",
      "chowtime",
      "chrome",
      "chubby",
      "chuck",
      "chug",
      "chummy",
      "chump",
      "chunk",
      "churn",
      "chute",
      "cider",
      "cilantro",
      "cinch",
      "cinema",
      "cinnamon",
      "circle",
      "circling",
      "circular",
      "circulate",
      "circus",
      "citable",
      "citadel",
      "citation",
      "citizen",
      "citric",
      "citrus",
      "city",
      "civic",
      "civil",
      "clad",
      "claim",
      "clambake",
      "clammy",
      "clamor",
      "clamp",
      "clamshell",
      "clang",
      "clanking",
      "clapped",
      "clapper",
      "clapping",
      "clarify",
      "clarinet",
      "clarity",
      "clash",
      "clasp",
      "class",
      "clatter",
      "clause",
      "clavicle",
      "claw",
      "clay",
      "clean",
      "clear",
      "cleat",
      "cleaver",
      "cleft",
      "clench",
      "clergyman",
      "clerical",
      "clerk",
      "clever",
      "clicker",
      "client",
      "climate",
      "climatic",
      "cling",
      "clinic",
      "clinking",
      "clip",
      "clique",
      "cloak",
      "clobber",
      "clock",
      "clone",
      "cloning",
      "closable",
      "closure",
      "clothes",
      "clothing",
      "cloud",
      "clover",
      "clubbed",
      "clubbing",
      "clubhouse",
      "clump",
      "clumsily",
      "clumsy",
      "clunky",
      "clustered",
      "clutch",
      "clutter",
      "coach",
      "coagulant",
      "coastal",
      "coaster",
      "coasting",
      "coastland",
      "coastline",
      "coat",
      "coauthor",
      "cobalt",
      "cobbler",
      "cobweb",
      "cocoa",
      "coconut",
      "cod",
      "coeditor",
      "coerce",
      "coexist",
      "coffee",
      "cofounder",
      "cognition",
      "cognitive",
      "cogwheel",
      "coherence",
      "coherent",
      "cohesive",
      "coil",
      "coke",
      "cola",
      "cold",
      "coleslaw",
      "coliseum",
      "collage",
      "collapse",
      "collar",
      "collected",
      "collector",
      "collide",
      "collie",
      "collision",
      "colonial",
      "colonist",
      "colonize",
      "colony",
      "colossal",
      "colt",
      "coma",
      "come",
      "comfort",
      "comfy",
      "comic",
      "coming",
      "comma",
      "commence",
      "commend",
      "comment",
      "commerce",
      "commode",
      "commodity",
      "commodore",
      "common",
      "commotion",
      "commute",
      "commuting",
      "compacted",
      "compacter",
      "compactly",
      "compactor",
      "companion",
      "company",
      "compare",
      "compel",
      "compile",
      "comply",
      "component",
      "composed",
      "composer",
      "composite",
      "compost",
      "composure",
      "compound",
      "compress",
      "comprised",
      "computer",
      "computing",
      "comrade",
      "concave",
      "conceal",
      "conceded",
      "concept",
      "concerned",
      "concert",
      "conch",
      "concierge",
      "concise",
      "conclude",
      "concrete",
      "concur",
      "condense",
      "condiment",
      "condition",
      "condone",
      "conducive",
      "conductor",
      "conduit",
      "cone",
      "confess",
      "confetti",
      "confidant",
      "confident",
      "confider",
      "confiding",
      "configure",
      "confined",
      "confining",
      "confirm",
      "conflict",
      "conform",
      "confound",
      "confront",
      "confused",
      "confusing",
      "confusion",
      "congenial",
      "congested",
      "congrats",
      "congress",
      "conical",
      "conjoined",
      "conjure",
      "conjuror",
      "connected",
      "connector",
      "consensus",
      "consent",
      "console",
      "consoling",
      "consonant",
      "constable",
      "constant",
      "constrain",
      "constrict",
      "construct",
      "consult",
      "consumer",
      "consuming",
      "contact",
      "container",
      "contempt",
      "contend",
      "contented",
      "contently",
      "contents",
      "contest",
      "context",
      "contort",
      "contour",
      "contrite",
      "control",
      "contusion",
      "convene",
      "convent",
      "copartner",
      "cope",
      "copied",
      "copier",
      "copilot",
      "coping",
      "copious",
      "copper",
      "copy",
      "coral",
      "cork",
      "cornball",
      "cornbread",
      "corncob",
      "cornea",
      "corned",
      "corner",
      "cornfield",
      "cornflake",
      "cornhusk",
      "cornmeal",
      "cornstalk",
      "corny",
      "coronary",
      "coroner",
      "corporal",
      "corporate",
      "corral",
      "correct",
      "corridor",
      "corrode",
      "corroding",
      "corrosive",
      "corsage",
      "corset",
      "cortex",
      "cosigner",
      "cosmetics",
      "cosmic",
      "cosmos",
      "cosponsor",
      "cost",
      "cottage",
      "cotton",
      "couch",
      "cough",
      "could",
      "countable",
      "countdown",
      "counting",
      "countless",
      "country",
      "county",
      "courier",
      "covenant",
      "cover",
      "coveted",
      "coveting",
      "coyness",
      "cozily",
      "coziness",
      "cozy",
      "crabbing",
      "crabgrass",
      "crablike",
      "crabmeat",
      "cradle",
      "cradling",
      "crafter",
      "craftily",
      "craftsman",
      "craftwork",
      "crafty",
      "cramp",
      "cranberry",
      "crane",
      "cranial",
      "cranium",
      "crank",
      "crate",
      "crave",
      "craving",
      "crawfish",
      "crawlers",
      "crawling",
      "crayfish",
      "crayon",
      "crazed",
      "crazily",
      "craziness",
      "crazy",
      "creamed",
      "creamer",
      "creamlike",
      "crease",
      "creasing",
      "creatable",
      "create",
      "creation",
      "creative",
      "creature",
      "credible",
      "credibly",
      "credit",
      "creed",
      "creme",
      "creole",
      "crepe",
      "crept",
      "crescent",
      "crested",
      "cresting",
      "crestless",
      "crevice",
      "crewless",
      "crewman",
      "crewmate",
      "crib",
      "cricket",
      "cried",
      "crier",
      "crimp",
      "crimson",
      "cringe",
      "cringing",
      "crinkle",
      "crinkly",
      "crisped",
      "crisping",
      "crisply",
      "crispness",
      "crispy",
      "criteria",
      "critter",
      "croak",
      "crock",
      "crook",
      "croon",
      "crop",
      "cross",
      "crouch",
      "crouton",
      "crowbar",
      "crowd",
      "crown",
      "crucial",
      "crudely",
      "crudeness",
      "cruelly",
      "cruelness",
      "cruelty",
      "crumb",
      "crummiest",
      "crummy",
      "crumpet",
      "crumpled",
      "cruncher",
      "crunching",
      "crunchy",
      "crusader",
      "crushable",
      "crushed",
      "crusher",
      "crushing",
      "crust",
      "crux",
      "crying",
      "cryptic",
      "crystal",
      "cubbyhole",
      "cube",
      "cubical",
      "cubicle",
      "cucumber",
      "cuddle",
      "cuddly",
      "cufflink",
      "culinary",
      "culminate",
      "culpable",
      "culprit",
      "cultivate",
      "cultural",
      "culture",
      "cupbearer",
      "cupcake",
      "cupid",
      "cupped",
      "cupping",
      "curable",
      "curator",
      "curdle",
      "cure",
      "curfew",
      "curing",
      "curled",
      "curler",
      "curliness",
      "curling",
      "curly",
      "curry",
      "curse",
      "cursive",
      "cursor",
      "curtain",
      "curtly",
      "curtsy",
      "curvature",
      "curve",
      "curvy",
      "cushy",
      "cusp",
      "cussed",
      "custard",
      "custodian",
      "custody",
      "customary",
      "customer",
      "customize",
      "customs",
      "cut",
      "cycle",
      "cyclic",
      "cycling",
      "cyclist",
      "cylinder",
      "cymbal",
      "cytoplasm",
      "cytoplast",
      "dab",
      "dad",
      "daffodil",
      "dagger",
      "daily",
      "daintily",
      "dainty",
      "dairy",
      "daisy",
      "dallying",
      "dance",
      "dancing",
      "dandelion",
      "dander",
      "dandruff",
      "dandy",
      "danger",
      "dangle",
      "dangling",
      "daredevil",
      "dares",
      "daringly",
      "darkened",
      "darkening",
      "darkish",
      "darkness",
      "darkroom",
      "darling",
      "darn",
      "dart",
      "darwinism",
      "dash",
      "dastardly",
      "data",
      "datebook",
      "dating",
      "daughter",
      "daunting",
      "dawdler",
      "dawn",
      "daybed",
      "daybreak",
      "daycare",
      "daydream",
      "daylight",
      "daylong",
      "dayroom",
      "daytime",
      "dazzler",
      "dazzling",
      "deacon",
      "deafening",
      "deafness",
      "dealer",
      "dealing",
      "dealmaker",
      "dealt",
      "dean",
      "debatable",
      "debate",
      "debating",
      "debit",
      "debrief",
      "debtless",
      "debtor",
      "debug",
      "debunk",
      "decade",
      "decaf",
      "decal",
      "decathlon",
      "decay",
      "deceased",
      "deceit",
      "deceiver",
      "deceiving",
      "december",
      "decency",
      "decent",
      "deception",
      "deceptive",
      "decibel",
      "decidable",
      "decimal",
      "decimeter",
      "decipher",
      "deck",
      "declared",
      "decline",
      "decode",
      "decompose",
      "decorated",
      "decorator",
      "decoy",
      "decrease",
      "decree",
      "dedicate",
      "dedicator",
      "deduce",
      "deduct",
      "deed",
      "deem",
      "deepen",
      "deeply",
      "deepness",
      "deface",
      "defacing",
      "defame",
      "default",
      "defeat",
      "defection",
      "defective",
      "defendant",
      "defender",
      "defense",
      "defensive",
      "deferral",
      "deferred",
      "defiance",
      "defiant",
      "defile",
      "defiling",
      "define",
      "definite",
      "deflate",
      "deflation",
      "deflator",
      "deflected",
      "deflector",
      "defog",
      "deforest",
      "defraud",
      "defrost",
      "deftly",
      "defuse",
      "defy",
      "degraded",
      "degrading",
      "degrease",
      "degree",
      "dehydrate",
      "deity",
      "dejected",
      "delay",
      "delegate",
      "delegator",
      "delete",
      "deletion",
      "delicacy",
      "delicate",
      "delicious",
      "delighted",
      "delirious",
      "delirium",
      "deliverer",
      "delivery",
      "delouse",
      "delta",
      "deluge",
      "delusion",
      "deluxe",
      "demanding",
      "demeaning",
      "demeanor",
      "demise",
      "democracy",
      "democrat",
      "demote",
      "demotion",
      "demystify",
      "denatured",
      "deniable",
      "denial",
      "denim",
      "denote",
      "dense",
      "density",
      "dental",
      "dentist",
      "denture",
      "deny",
      "deodorant",
      "deodorize",
      "departed",
      "departure",
      "depict",
      "deplete",
      "depletion",
      "deplored",
      "deploy",
      "deport",
      "depose",
      "depraved",
      "depravity",
      "deprecate",
      "depress",
      "deprive",
      "depth",
      "deputize",
      "deputy",
      "derail",
      "deranged",
      "derby",
      "derived",
      "desecrate",
      "deserve",
      "deserving",
      "designate",
      "designed",
      "designer",
      "designing",
      "deskbound",
      "desktop",
      "deskwork",
      "desolate",
      "despair",
      "despise",
      "despite",
      "destiny",
      "destitute",
      "destruct",
      "detached",
      "detail",
      "detection",
      "detective",
      "detector",
      "detention",
      "detergent",
      "detest",
      "detonate",
      "detonator",
      "detoxify",
      "detract",
      "deuce",
      "devalue",
      "deviancy",
      "deviant",
      "deviate",
      "deviation",
      "deviator",
      "device",
      "devious",
      "devotedly",
      "devotee",
      "devotion",
      "devourer",
      "devouring",
      "devoutly",
      "dexterity",
      "dexterous",
      "diabetes",
      "diabetic",
      "diabolic",
      "diagnoses",
      "diagnosis",
      "diagram",
      "dial",
      "diameter",
      "diaper",
      "diaphragm",
      "diary",
      "dice",
      "dicing",
      "dictate",
      "dictation",
      "dictator",
      "difficult",
      "diffused",
      "diffuser",
      "diffusion",
      "diffusive",
      "dig",
      "dilation",
      "diligence",
      "diligent",
      "dill",
      "dilute",
      "dime",
      "diminish",
      "dimly",
      "dimmed",
      "dimmer",
      "dimness",
      "dimple",
      "diner",
      "dingbat",
      "dinghy",
      "dinginess",
      "dingo",
      "dingy",
      "dining",
      "dinner",
      "diocese",
      "dioxide",
      "diploma",
      "dipped",
      "dipper",
      "dipping",
      "directed",
      "direction",
      "directive",
      "directly",
      "directory",
      "direness",
      "dirtiness",
      "disabled",
      "disagree",
      "disallow",
      "disarm",
      "disarray",
      "disaster",
      "disband",
      "disbelief",
      "disburse",
      "discard",
      "discern",
      "discharge",
      "disclose",
      "discolor",
      "discount",
      "discourse",
      "discover",
      "discuss",
      "disdain",
      "disengage",
      "disfigure",
      "disgrace",
      "dish",
      "disinfect",
      "disjoin",
      "disk",
      "dislike",
      "disliking",
      "dislocate",
      "dislodge",
      "disloyal",
      "dismantle",
      "dismay",
      "dismiss",
      "dismount",
      "disobey",
      "disorder",
      "disown",
      "disparate",
      "disparity",
      "dispatch",
      "dispense",
      "dispersal",
      "dispersed",
      "disperser",
      "displace",
      "display",
      "displease",
      "disposal",
      "dispose",
      "disprove",
      "dispute",
      "disregard",
      "disrupt",
      "dissuade",
      "distance",
      "distant",
      "distaste",
      "distill",
      "distinct",
      "distort",
      "distract",
      "distress",
      "district",
      "distrust",
      "ditch",
      "ditto",
      "ditzy",
      "dividable",
      "divided",
      "dividend",
      "dividers",
      "dividing",
      "divinely",
      "diving",
      "divinity",
      "divisible",
      "divisibly",
      "division",
      "divisive",
      "divorcee",
      "dizziness",
      "dizzy",
      "doable",
      "docile",
      "dock",
      "doctrine",
      "document",
      "dodge",
      "dodgy",
      "doily",
      "doing",
      "dole",
      "dollar",
      "dollhouse",
      "dollop",
      "dolly",
      "dolphin",
      "domain",
      "domelike",
      "domestic",
      "dominion",
      "dominoes",
      "donated",
      "donation",
      "donator",
      "donor",
      "donut",
      "doodle",
      "doorbell",
      "doorframe",
      "doorknob",
      "doorman",
      "doormat",
      "doornail",
      "doorpost",
      "doorstep",
      "doorstop",
      "doorway",
      "doozy",
      "dork",
      "dormitory",
      "dorsal",
      "dosage",
      "dose",
      "dotted",
      "doubling",
      "douche",
      "dove",
      "down",
      "dowry",
      "doze",
      "drab",
      "dragging",
      "dragonfly",
      "dragonish",
      "dragster",
      "drainable",
      "drainage",
      "drained",
      "drainer",
      "drainpipe",
      "dramatic",
      "dramatize",
      "drank",
      "drapery",
      "drastic",
      "draw",
      "dreaded",
      "dreadful",
      "dreadlock",
      "dreamboat",
      "dreamily",
      "dreamland",
      "dreamless",
      "dreamlike",
      "dreamt",
      "dreamy",
      "drearily",
      "dreary",
      "drench",
      "dress",
      "drew",
      "dribble",
      "dried",
      "drier",
      "drift",
      "driller",
      "drilling",
      "drinkable",
      "drinking",
      "dripping",
      "drippy",
      "drivable",
      "driven",
      "driver",
      "driveway",
      "driving",
      "drizzle",
      "drizzly",
      "drone",
      "drool",
      "droop",
      "drop-down",
      "dropbox",
      "dropkick",
      "droplet",
      "dropout",
      "dropper",
      "drove",
      "drown",
      "drowsily",
      "drudge",
      "drum",
      "dry",
      "dubbed",
      "dubiously",
      "duchess",
      "duckbill",
      "ducking",
      "duckling",
      "ducktail",
      "ducky",
      "duct",
      "dude",
      "duffel",
      "dugout",
      "duh",
      "duke",
      "duller",
      "dullness",
      "duly",
      "dumping",
      "dumpling",
      "dumpster",
      "duo",
      "dupe",
      "duplex",
      "duplicate",
      "duplicity",
      "durable",
      "durably",
      "duration",
      "duress",
      "during",
      "dusk",
      "dust",
      "dutiful",
      "duty",
      "duvet",
      "dwarf",
      "dweeb",
      "dwelled",
      "dweller",
      "dwelling",
      "dwindle",
      "dwindling",
      "dynamic",
      "dynamite",
      "dynasty",
      "dyslexia",
      "dyslexic",
      "each",
      "eagle",
      "earache",
      "eardrum",
      "earflap",
      "earful",
      "earlobe",
      "early",
      "earmark",
      "earmuff",
      "earphone",
      "earpiece",
      "earplugs",
      "earring",
      "earshot",
      "earthen",
      "earthlike",
      "earthling",
      "earthly",
      "earthworm",
      "earthy",
      "earwig",
      "easeful",
      "easel",
      "easiest",
      "easily",
      "easiness",
      "easing",
      "eastbound",
      "eastcoast",
      "easter",
      "eastward",
      "eatable",
      "eaten",
      "eatery",
      "eating",
      "eats",
      "ebay",
      "ebony",
      "ebook",
      "ecard",
      "eccentric",
      "echo",
      "eclair",
      "eclipse",
      "ecologist",
      "ecology",
      "economic",
      "economist",
      "economy",
      "ecosphere",
      "ecosystem",
      "edge",
      "edginess",
      "edging",
      "edgy",
      "edition",
      "editor",
      "educated",
      "education",
      "educator",
      "eel",
      "effective",
      "effects",
      "efficient",
      "effort",
      "eggbeater",
      "egging",
      "eggnog",
      "eggplant",
      "eggshell",
      "egomaniac",
      "egotism",
      "egotistic",
      "either",
      "eject",
      "elaborate",
      "elastic",
      "elated",
      "elbow",
      "eldercare",
      "elderly",
      "eldest",
      "electable",
      "election",
      "elective",
      "elephant",
      "elevate",
      "elevating",
      "elevation",
      "elevator",
      "eleven",
      "elf",
      "eligible",
      "eligibly",
      "eliminate",
      "elite",
      "elitism",
      "elixir",
      "elk",
      "ellipse",
      "elliptic",
      "elm",
      "elongated",
      "elope",
      "eloquence",
      "eloquent",
      "elsewhere",
      "elude",
      "elusive",
      "elves",
      "email",
      "embargo",
      "embark",
      "embassy",
      "embattled",
      "embellish",
      "ember",
      "embezzle",
      "emblaze",
      "emblem",
      "embody",
      "embolism",
      "emboss",
      "embroider",
      "emcee",
      "emerald",
      "emergency",
      "emission",
      "emit",
      "emote",
      "emoticon",
      "emotion",
      "empathic",
      "empathy",
      "emperor",
      "emphases",
      "emphasis",
      "emphasize",
      "emphatic",
      "empirical",
      "employed",
      "employee",
      "employer",
      "emporium",
      "empower",
      "emptier",
      "emptiness",
      "empty",
      "emu",
      "enable",
      "enactment",
      "enamel",
      "enchanted",
      "enchilada",
      "encircle",
      "enclose",
      "enclosure",
      "encode",
      "encore",
      "encounter",
      "encourage",
      "encroach",
      "encrust",
      "encrypt",
      "endanger",
      "endeared",
      "endearing",
      "ended",
      "ending",
      "endless",
      "endnote",
      "endocrine",
      "endorphin",
      "endorse",
      "endowment",
      "endpoint",
      "endurable",
      "endurance",
      "enduring",
      "energetic",
      "energize",
      "energy",
      "enforced",
      "enforcer",
      "engaged",
      "engaging",
      "engine",
      "engorge",
      "engraved",
      "engraver",
      "engraving",
      "engross",
      "engulf",
      "enhance",
      "enigmatic",
      "enjoyable",
      "enjoyably",
      "enjoyer",
      "enjoying",
      "enjoyment",
      "enlarged",
      "enlarging",
      "enlighten",
      "enlisted",
      "enquirer",
      "enrage",
      "enrich",
      "enroll",
      "enslave",
      "ensnare",
      "ensure",
      "entail",
      "entangled",
      "entering",
      "entertain",
      "enticing",
      "entire",
      "entitle",
      "entity",
      "entomb",
      "entourage",
      "entrap",
      "entree",
      "entrench",
      "entrust",
      "entryway",
      "entwine",
      "enunciate",
      "envelope",
      "enviable",
      "enviably",
      "envious",
      "envision",
      "envoy",
      "envy",
      "enzyme",
      "epic",
      "epidemic",
      "epidermal",
      "epidermis",
      "epidural",
      "epilepsy",
      "epileptic",
      "epilogue",
      "epiphany",
      "episode",
      "equal",
      "equate",
      "equation",
      "equator",
      "equinox",
      "equipment",
      "equity",
      "equivocal",
      "eradicate",
      "erasable",
      "erased",
      "eraser",
      "erasure",
      "ergonomic",
      "errand",
      "errant",
      "erratic",
      "error",
      "erupt",
      "escalate",
      "escalator",
      "escapable",
      "escapade",
      "escapist",
      "escargot",
      "eskimo",
      "esophagus",
      "espionage",
      "espresso",
      "esquire",
      "essay",
      "essence",
      "essential",
      "establish",
      "estate",
      "esteemed",
      "estimate",
      "estimator",
      "estranged",
      "estrogen",
      "etching",
      "eternal",
      "eternity",
      "ethanol",
      "ether",
      "ethically",
      "ethics",
      "euphemism",
      "evacuate",
      "evacuee",
      "evade",
      "evaluate",
      "evaluator",
      "evaporate",
      "evasion",
      "evasive",
      "even",
      "everglade",
      "evergreen",
      "everybody",
      "everyday",
      "everyone",
      "evict",
      "evidence",
      "evident",
      "evil",
      "evoke",
      "evolution",
      "evolve",
      "exact",
      "exalted",
      "example",
      "excavate",
      "excavator",
      "exceeding",
      "exception",
      "excess",
      "exchange",
      "excitable",
      "exciting",
      "exclaim",
      "exclude",
      "excluding",
      "exclusion",
      "exclusive",
      "excretion",
      "excretory",
      "excursion",
      "excusable",
      "excusably",
      "excuse",
      "exemplary",
      "exemplify",
      "exemption",
      "exerciser",
      "exert",
      "exes",
      "exfoliate",
      "exhale",
      "exhaust",
      "exhume",
      "exile",
      "existing",
      "exit",
      "exodus",
      "exonerate",
      "exorcism",
      "exorcist",
      "expand",
      "expanse",
      "expansion",
      "expansive",
      "expectant",
      "expedited",
      "expediter",
      "expel",
      "expend",
      "expenses",
      "expensive",
      "expert",
      "expire",
      "expiring",
      "explain",
      "expletive",
      "explicit",
      "explode",
      "exploit",
      "explore",
      "exploring",
      "exponent",
      "exporter",
      "exposable",
      "expose",
      "exposure",
      "express",
      "expulsion",
      "exquisite",
      "extended",
      "extending",
      "extent",
      "extenuate",
      "exterior",
      "external",
      "extinct",
      "extortion",
      "extradite",
      "extras",
      "extrovert",
      "extrude",
      "extruding",
      "exuberant",
      "fable",
      "fabric",
      "fabulous",
      "facebook",
      "facecloth",
      "facedown",
      "faceless",
      "facelift",
      "faceplate",
      "faceted",
      "facial",
      "facility",
      "facing",
      "facsimile",
      "faction",
      "factoid",
      "factor",
      "factsheet",
      "factual",
      "faculty",
      "fade",
      "fading",
      "failing",
      "falcon",
      "fall",
      "false",
      "falsify",
      "fame",
      "familiar",
      "family",
      "famine",
      "famished",
      "fanatic",
      "fancied",
      "fanciness",
      "fancy",
      "fanfare",
      "fang",
      "fanning",
      "fantasize",
      "fantastic",
      "fantasy",
      "fascism",
      "fastball",
      "faster",
      "fasting",
      "fastness",
      "faucet",
      "favorable",
      "favorably",
      "favored",
      "favoring",
      "favorite",
      "fax",
      "feast",
      "federal",
      "fedora",
      "feeble",
      "feed",
      "feel",
      "feisty",
      "feline",
      "felt-tip",
      "feminine",
      "feminism",
      "feminist",
      "feminize",
      "femur",
      "fence",
      "fencing",
      "fender",
      "ferment",
      "fernlike",
      "ferocious",
      "ferocity",
      "ferret",
      "ferris",
      "ferry",
      "fervor",
      "fester",
      "festival",
      "festive",
      "festivity",
      "fetal",
      "fetch",
      "fever",
      "fiber",
      "fiction",
      "fiddle",
      "fiddling",
      "fidelity",
      "fidgeting",
      "fidgety",
      "fifteen",
      "fifth",
      "fiftieth",
      "fifty",
      "figment",
      "figure",
      "figurine",
      "filing",
      "filled",
      "filler",
      "filling",
      "film",
      "filter",
      "filth",
      "filtrate",
      "finale",
      "finalist",
      "finalize",
      "finally",
      "finance",
      "financial",
      "finch",
      "fineness",
      "finer",
      "finicky",
      "finished",
      "finisher",
      "finishing",
      "finite",
      "finless",
      "finlike",
      "fiscally",
      "fit",
      "five",
      "flaccid",
      "flagman",
      "flagpole",
      "flagship",
      "flagstick",
      "flagstone",
      "flail",
      "flakily",
      "flaky",
      "flame",
      "flammable",
      "flanked",
      "flanking",
      "flannels",
      "flap",
      "flaring",
      "flashback",
      "flashbulb",
      "flashcard",
      "flashily",
      "flashing",
      "flashy",
      "flask",
      "flatbed",
      "flatfoot",
      "flatly",
      "flatness",
      "flatten",
      "flattered",
      "flatterer",
      "flattery",
      "flattop",
      "flatware",
      "flatworm",
      "flavored",
      "flavorful",
      "flavoring",
      "flaxseed",
      "fled",
      "fleshed",
      "fleshy",
      "flick",
      "flier",
      "flight",
      "flinch",
      "fling",
      "flint",
      "flip",
      "flirt",
      "float",
      "flock",
      "flogging",
      "flop",
      "floral",
      "florist",
      "floss",
      "flounder",
      "flyable",
      "flyaway",
      "flyer",
      "flying",
      "flyover",
      "flypaper",
      "foam",
      "foe",
      "fog",
      "foil",
      "folic",
      "folk",
      "follicle",
      "follow",
      "fondling",
      "fondly",
      "fondness",
      "fondue",
      "font",
      "food",
      "fool",
      "footage",
      "football",
      "footbath",
      "footboard",
      "footer",
      "footgear",
      "foothill",
      "foothold",
      "footing",
      "footless",
      "footman",
      "footnote",
      "footpad",
      "footpath",
      "footprint",
      "footrest",
      "footsie",
      "footsore",
      "footwear",
      "footwork",
      "fossil",
      "foster",
      "founder",
      "founding",
      "fountain",
      "fox",
      "foyer",
      "fraction",
      "fracture",
      "fragile",
      "fragility",
      "fragment",
      "fragrance",
      "fragrant",
      "frail",
      "frame",
      "framing",
      "frantic",
      "fraternal",
      "frayed",
      "fraying",
      "frays",
      "freckled",
      "freckles",
      "freebase",
      "freebee",
      "freebie",
      "freedom",
      "freefall",
      "freehand",
      "freeing",
      "freeload",
      "freely",
      "freemason",
      "freeness",
      "freestyle",
      "freeware",
      "freeway",
      "freewill",
      "freezable",
      "freezing",
      "freight",
      "french",
      "frenzied",
      "frenzy",
      "frequency",
      "frequent",
      "fresh",
      "fretful",
      "fretted",
      "friction",
      "friday",
      "fridge",
      "fried",
      "friend",
      "frighten",
      "frightful",
      "frigidity",
      "frigidly",
      "frill",
      "fringe",
      "frisbee",
      "frisk",
      "fritter",
      "frivolous",
      "frolic",
      "from",
      "front",
      "frostbite",
      "frosted",
      "frostily",
      "frosting",
      "frostlike",
      "frosty",
      "froth",
      "frown",
      "frozen",
      "fructose",
      "frugality",
      "frugally",
      "fruit",
      "frustrate",
      "frying",
      "gab",
      "gaffe",
      "gag",
      "gainfully",
      "gaining",
      "gains",
      "gala",
      "gallantly",
      "galleria",
      "gallery",
      "galley",
      "gallon",
      "gallows",
      "gallstone",
      "galore",
      "galvanize",
      "gambling",
      "game",
      "gaming",
      "gamma",
      "gander",
      "gangly",
      "gangrene",
      "gangway",
      "gap",
      "garage",
      "garbage",
      "garden",
      "gargle",
      "garland",
      "garlic",
      "garment",
      "garnet",
      "garnish",
      "garter",
      "gas",
      "gatherer",
      "gathering",
      "gating",
      "gauging",
      "gauntlet",
      "gauze",
      "gave",
      "gawk",
      "gazing",
      "gear",
      "gecko",
      "geek",
      "geiger",
      "gem",
      "gender",
      "generic",
      "generous",
      "genetics",
      "genre",
      "gentile",
      "gentleman",
      "gently",
      "gents",
      "geography",
      "geologic",
      "geologist",
      "geology",
      "geometric",
      "geometry",
      "geranium",
      "gerbil",
      "geriatric",
      "germicide",
      "germinate",
      "germless",
      "germproof",
      "gestate",
      "gestation",
      "gesture",
      "getaway",
      "getting",
      "getup",
      "giant",
      "gibberish",
      "giblet",
      "giddily",
      "giddiness",
      "giddy",
      "gift",
      "gigabyte",
      "gigahertz",
      "gigantic",
      "giggle",
      "giggling",
      "giggly",
      "gigolo",
      "gilled",
      "gills",
      "gimmick",
      "girdle",
      "giveaway",
      "given",
      "giver",
      "giving",
      "gizmo",
      "gizzard",
      "glacial",
      "glacier",
      "glade",
      "gladiator",
      "gladly",
      "glamorous",
      "glamour",
      "glance",
      "glancing",
      "glandular",
      "glare",
      "glaring",
      "glass",
      "glaucoma",
      "glazing",
      "gleaming",
      "gleeful",
      "glider",
      "gliding",
      "glimmer",
      "glimpse",
      "glisten",
      "glitch",
      "glitter",
      "glitzy",
      "gloater",
      "gloating",
      "gloomily",
      "gloomy",
      "glorified",
      "glorifier",
      "glorify",
      "glorious",
      "glory",
      "gloss",
      "glove",
      "glowing",
      "glowworm",
      "glucose",
      "glue",
      "gluten",
      "glutinous",
      "glutton",
      "gnarly",
      "gnat",
      "goal",
      "goatskin",
      "goes",
      "goggles",
      "going",
      "goldfish",
      "goldmine",
      "goldsmith",
      "golf",
      "goliath",
      "gonad",
      "gondola",
      "gone",
      "gong",
      "good",
      "gooey",
      "goofball",
      "goofiness",
      "goofy",
      "google",
      "goon",
      "gopher",
      "gore",
      "gorged",
      "gorgeous",
      "gory",
      "gosling",
      "gossip",
      "gothic",
      "gotten",
      "gout",
      "gown",
      "grab",
      "graceful",
      "graceless",
      "gracious",
      "gradation",
      "graded",
      "grader",
      "gradient",
      "grading",
      "gradually",
      "graduate",
      "graffiti",
      "grafted",
      "grafting",
      "grain",
      "granddad",
      "grandkid",
      "grandly",
      "grandma",
      "grandpa",
      "grandson",
      "granite",
      "granny",
      "granola",
      "grant",
      "granular",
      "grape",
      "graph",
      "grapple",
      "grappling",
      "grasp",
      "grass",
      "gratified",
      "gratify",
      "grating",
      "gratitude",
      "gratuity",
      "gravel",
      "graveness",
      "graves",
      "graveyard",
      "gravitate",
      "gravity",
      "gravy",
      "gray",
      "grazing",
      "greasily",
      "greedily",
      "greedless",
      "greedy",
      "green",
      "greeter",
      "greeting",
      "grew",
      "greyhound",
      "grid",
      "grief",
      "grievance",
      "grieving",
      "grievous",
      "grill",
      "grimace",
      "grimacing",
      "grime",
      "griminess",
      "grimy",
      "grinch",
      "grinning",
      "grip",
      "gristle",
      "grit",
      "groggily",
      "groggy",
      "groin",
      "groom",
      "groove",
      "grooving",
      "groovy",
      "grope",
      "ground",
      "grouped",
      "grout",
      "grove",
      "grower",
      "growing",
      "growl",
      "grub",
      "grudge",
      "grudging",
      "grueling",
      "gruffly",
      "grumble",
      "grumbling",
      "grumbly",
      "grumpily",
      "grunge",
      "grunt",
      "guacamole",
      "guidable",
      "guidance",
      "guide",
      "guiding",
      "guileless",
      "guise",
      "gulf",
      "gullible",
      "gully",
      "gulp",
      "gumball",
      "gumdrop",
      "gumminess",
      "gumming",
      "gummy",
      "gurgle",
      "gurgling",
      "guru",
      "gush",
      "gusto",
      "gusty",
      "gutless",
      "guts",
      "gutter",
      "guy",
      "guzzler",
      "gyration",
      "habitable",
      "habitant",
      "habitat",
      "habitual",
      "hacked",
      "hacker",
      "hacking",
      "hacksaw",
      "had",
      "haggler",
      "haiku",
      "half",
      "halogen",
      "halt",
      "halved",
      "halves",
      "hamburger",
      "hamlet",
      "hammock",
      "hamper",
      "hamster",
      "hamstring",
      "handbag",
      "handball",
      "handbook",
      "handbrake",
      "handcart",
      "handclap",
      "handclasp",
      "handcraft",
      "handcuff",
      "handed",
      "handful",
      "handgrip",
      "handgun",
      "handheld",
      "handiness",
      "handiwork",
      "handlebar",
      "handled",
      "handler",
      "handling",
      "handmade",
      "handoff",
      "handpick",
      "handprint",
      "handrail",
      "handsaw",
      "handset",
      "handsfree",
      "handshake",
      "handstand",
      "handwash",
      "handwork",
      "handwoven",
      "handwrite",
      "handyman",
      "hangnail",
      "hangout",
      "hangover",
      "hangup",
      "hankering",
      "hankie",
      "hanky",
      "haphazard",
      "happening",
      "happier",
      "happiest",
      "happily",
      "happiness",
      "happy",
      "harbor",
      "hardcopy",
      "hardcore",
      "hardcover",
      "harddisk",
      "hardened",
      "hardener",
      "hardening",
      "hardhat",
      "hardhead",
      "hardiness",
      "hardly",
      "hardness",
      "hardship",
      "hardware",
      "hardwired",
      "hardwood",
      "hardy",
      "harmful",
      "harmless",
      "harmonica",
      "harmonics",
      "harmonize",
      "harmony",
      "harness",
      "harpist",
      "harsh",
      "harvest",
      "hash",
      "hassle",
      "haste",
      "hastily",
      "hastiness",
      "hasty",
      "hatbox",
      "hatchback",
      "hatchery",
      "hatchet",
      "hatching",
      "hatchling",
      "hate",
      "hatless",
      "hatred",
      "haunt",
      "haven",
      "hazard",
      "hazelnut",
      "hazily",
      "haziness",
      "hazing",
      "hazy",
      "headache",
      "headband",
      "headboard",
      "headcount",
      "headdress",
      "headed",
      "header",
      "headfirst",
      "headgear",
      "heading",
      "headlamp",
      "headless",
      "headlock",
      "headphone",
      "headpiece",
      "headrest",
      "headroom",
      "headscarf",
      "headset",
      "headsman",
      "headstand",
      "headstone",
      "headway",
      "headwear",
      "heap",
      "heat",
      "heave",
      "heavily",
      "heaviness",
      "heaving",
      "hedge",
      "hedging",
      "heftiness",
      "hefty",
      "helium",
      "helmet",
      "helper",
      "helpful",
      "helping",
      "helpless",
      "helpline",
      "hemlock",
      "hemstitch",
      "hence",
      "henchman",
      "henna",
      "herald",
      "herbal",
      "herbicide",
      "herbs",
      "heritage",
      "hermit",
      "heroics",
      "heroism",
      "herring",
      "herself",
      "hertz",
      "hesitancy",
      "hesitant",
      "hesitate",
      "hexagon",
      "hexagram",
      "hubcap",
      "huddle",
      "huddling",
      "huff",
      "hug",
      "hula",
      "hulk",
      "hull",
      "human",
      "humble",
      "humbling",
      "humbly",
      "humid",
      "humiliate",
      "humility",
      "humming",
      "hummus",
      "humongous",
      "humorist",
      "humorless",
      "humorous",
      "humpback",
      "humped",
      "humvee",
      "hunchback",
      "hundredth",
      "hunger",
      "hungrily",
      "hungry",
      "hunk",
      "hunter",
      "hunting",
      "huntress",
      "huntsman",
      "hurdle",
      "hurled",
      "hurler",
      "hurling",
      "hurray",
      "hurricane",
      "hurried",
      "hurry",
      "hurt",
      "husband",
      "hush",
      "husked",
      "huskiness",
      "hut",
      "hybrid",
      "hydrant",
      "hydrated",
      "hydration",
      "hydrogen",
      "hydroxide",
      "hyperlink",
      "hypertext",
      "hyphen",
      "hypnoses",
      "hypnosis",
      "hypnotic",
      "hypnotism",
      "hypnotist",
      "hypnotize",
      "hypocrisy",
      "hypocrite",
      "ibuprofen",
      "ice",
      "iciness",
      "icing",
      "icky",
      "icon",
      "icy",
      "idealism",
      "idealist",
      "idealize",
      "ideally",
      "idealness",
      "identical",
      "identify",
      "identity",
      "ideology",
      "idiocy",
      "idiom",
      "idly",
      "igloo",
      "ignition",
      "ignore",
      "iguana",
      "illicitly",
      "illusion",
      "illusive",
      "image",
      "imaginary",
      "imagines",
      "imaging",
      "imbecile",
      "imitate",
      "imitation",
      "immature",
      "immerse",
      "immersion",
      "imminent",
      "immobile",
      "immodest",
      "immorally",
      "immortal",
      "immovable",
      "immovably",
      "immunity",
      "immunize",
      "impaired",
      "impale",
      "impart",
      "impatient",
      "impeach",
      "impeding",
      "impending",
      "imperfect",
      "imperial",
      "impish",
      "implant",
      "implement",
      "implicate",
      "implicit",
      "implode",
      "implosion",
      "implosive",
      "imply",
      "impolite",
      "important",
      "importer",
      "impose",
      "imposing",
      "impotence",
      "impotency",
      "impotent",
      "impound",
      "imprecise",
      "imprint",
      "imprison",
      "impromptu",
      "improper",
      "improve",
      "improving",
      "improvise",
      "imprudent",
      "impulse",
      "impulsive",
      "impure",
      "impurity",
      "iodine",
      "iodize",
      "ion",
      "ipad",
      "iphone",
      "ipod",
      "irate",
      "irk",
      "iron",
      "irregular",
      "irrigate",
      "irritable",
      "irritably",
      "irritant",
      "irritate",
      "islamic",
      "islamist",
      "isolated",
      "isolating",
      "isolation",
      "isotope",
      "issue",
      "issuing",
      "italicize",
      "italics",
      "item",
      "itinerary",
      "itunes",
      "ivory",
      "ivy",
      "jab",
      "jackal",
      "jacket",
      "jackknife",
      "jackpot",
      "jailbird",
      "jailbreak",
      "jailer",
      "jailhouse",
      "jalapeno",
      "jam",
      "janitor",
      "january",
      "jargon",
      "jarring",
      "jasmine",
      "jaundice",
      "jaunt",
      "java",
      "jawed",
      "jawless",
      "jawline",
      "jaws",
      "jaybird",
      "jaywalker",
      "jazz",
      "jeep",
      "jeeringly",
      "jellied",
      "jelly",
      "jersey",
      "jester",
      "jet",
      "jiffy",
      "jigsaw",
      "jimmy",
      "jingle",
      "jingling",
      "jinx",
      "jitters",
      "jittery",
      "job",
      "jockey",
      "jockstrap",
      "jogger",
      "jogging",
      "john",
      "joining",
      "jokester",
      "jokingly",
      "jolliness",
      "jolly",
      "jolt",
      "jot",
      "jovial",
      "joyfully",
      "joylessly",
      "joyous",
      "joyride",
      "joystick",
      "jubilance",
      "jubilant",
      "judge",
      "judgingly",
      "judicial",
      "judiciary",
      "judo",
      "juggle",
      "juggling",
      "jugular",
      "juice",
      "juiciness",
      "juicy",
      "jujitsu",
      "jukebox",
      "july",
      "jumble",
      "jumbo",
      "jump",
      "junction",
      "juncture",
      "june",
      "junior",
      "juniper",
      "junkie",
      "junkman",
      "junkyard",
      "jurist",
      "juror",
      "jury",
      "justice",
      "justifier",
      "justify",
      "justly",
      "justness",
      "juvenile",
      "kabob",
      "kangaroo",
      "karaoke",
      "karate",
      "karma",
      "kebab",
      "keenly",
      "keenness",
      "keep",
      "keg",
      "kelp",
      "kennel",
      "kept",
      "kerchief",
      "kerosene",
      "kettle",
      "kick",
      "kiln",
      "kilobyte",
      "kilogram",
      "kilometer",
      "kilowatt",
      "kilt",
      "kimono",
      "kindle",
      "kindling",
      "kindly",
      "kindness",
      "kindred",
      "kinetic",
      "kinfolk",
      "king",
      "kinship",
      "kinsman",
      "kinswoman",
      "kissable",
      "kisser",
      "kissing",
      "kitchen",
      "kite",
      "kitten",
      "kitty",
      "kiwi",
      "kleenex",
      "knapsack",
      "knee",
      "knelt",
      "knickers",
      "knoll",
      "koala",
      "kooky",
      "kosher",
      "krypton",
      "kudos",
      "kung",
      "labored",
      "laborer",
      "laboring",
      "laborious",
      "labrador",
      "ladder",
      "ladies",
      "ladle",
      "ladybug",
      "ladylike",
      "lagged",
      "lagging",
      "lagoon",
      "lair",
      "lake",
      "lance",
      "landed",
      "landfall",
      "landfill",
      "landing",
      "landlady",
      "landless",
      "landline",
      "landlord",
      "landmark",
      "landmass",
      "landmine",
      "landowner",
      "landscape",
      "landside",
      "landslide",
      "language",
      "lankiness",
      "lanky",
      "lantern",
      "lapdog",
      "lapel",
      "lapped",
      "lapping",
      "laptop",
      "lard",
      "large",
      "lark",
      "lash",
      "lasso",
      "last",
      "latch",
      "late",
      "lather",
      "latitude",
      "latrine",
      "latter",
      "latticed",
      "launch",
      "launder",
      "laundry",
      "laurel",
      "lavender",
      "lavish",
      "laxative",
      "lazily",
      "laziness",
      "lazy",
      "lecturer",
      "left",
      "legacy",
      "legal",
      "legend",
      "legged",
      "leggings",
      "legible",
      "legibly",
      "legislate",
      "lego",
      "legroom",
      "legume",
      "legwarmer",
      "legwork",
      "lemon",
      "lend",
      "length",
      "lens",
      "lent",
      "leotard",
      "lesser",
      "letdown",
      "lethargic",
      "lethargy",
      "letter",
      "lettuce",
      "level",
      "leverage",
      "levers",
      "levitate",
      "levitator",
      "liability",
      "liable",
      "liberty",
      "librarian",
      "library",
      "licking",
      "licorice",
      "lid",
      "life",
      "lifter",
      "lifting",
      "liftoff",
      "ligament",
      "likely",
      "likeness",
      "likewise",
      "liking",
      "lilac",
      "lilly",
      "lily",
      "limb",
      "limeade",
      "limelight",
      "limes",
      "limit",
      "limping",
      "limpness",
      "line",
      "lingo",
      "linguini",
      "linguist",
      "lining",
      "linked",
      "linoleum",
      "linseed",
      "lint",
      "lion",
      "lip",
      "liquefy",
      "liqueur",
      "liquid",
      "lisp",
      "list",
      "litigate",
      "litigator",
      "litmus",
      "litter",
      "little",
      "livable",
      "lived",
      "lively",
      "liver",
      "livestock",
      "lividly",
      "living",
      "lizard",
      "lubricant",
      "lubricate",
      "lucid",
      "luckily",
      "luckiness",
      "luckless",
      "lucrative",
      "ludicrous",
      "lugged",
      "lukewarm",
      "lullaby",
      "lumber",
      "luminance",
      "luminous",
      "lumpiness",
      "lumping",
      "lumpish",
      "lunacy",
      "lunar",
      "lunchbox",
      "luncheon",
      "lunchroom",
      "lunchtime",
      "lung",
      "lurch",
      "lure",
      "luridness",
      "lurk",
      "lushly",
      "lushness",
      "luster",
      "lustfully",
      "lustily",
      "lustiness",
      "lustrous",
      "lusty",
      "luxurious",
      "luxury",
      "lying",
      "lyrically",
      "lyricism",
      "lyricist",
      "lyrics",
      "macarena",
      "macaroni",
      "macaw",
      "mace",
      "machine",
      "machinist",
      "magazine",
      "magenta",
      "maggot",
      "magical",
      "magician",
      "magma",
      "magnesium",
      "magnetic",
      "magnetism",
      "magnetize",
      "magnifier",
      "magnify",
      "magnitude",
      "magnolia",
      "mahogany",
      "maimed",
      "majestic",
      "majesty",
      "majorette",
      "majority",
      "makeover",
      "maker",
      "makeshift",
      "making",
      "malformed",
      "malt",
      "mama",
      "mammal",
      "mammary",
      "mammogram",
      "manager",
      "managing",
      "manatee",
      "mandarin",
      "mandate",
      "mandatory",
      "mandolin",
      "manger",
      "mangle",
      "mango",
      "mangy",
      "manhandle",
      "manhole",
      "manhood",
      "manhunt",
      "manicotti",
      "manicure",
      "manifesto",
      "manila",
      "mankind",
      "manlike",
      "manliness",
      "manly",
      "manmade",
      "manned",
      "mannish",
      "manor",
      "manpower",
      "mantis",
      "mantra",
      "manual",
      "many",
      "map",
      "marathon",
      "marauding",
      "marbled",
      "marbles",
      "marbling",
      "march",
      "mardi",
      "margarine",
      "margarita",
      "margin",
      "marigold",
      "marina",
      "marine",
      "marital",
      "maritime",
      "marlin",
      "marmalade",
      "maroon",
      "married",
      "marrow",
      "marry",
      "marshland",
      "marshy",
      "marsupial",
      "marvelous",
      "marxism",
      "mascot",
      "masculine",
      "mashed",
      "mashing",
      "massager",
      "masses",
      "massive",
      "mastiff",
      "matador",
      "matchbook",
      "matchbox",
      "matcher",
      "matching",
      "matchless",
      "material",
      "maternal",
      "maternity",
      "math",
      "mating",
      "matriarch",
      "matrimony",
      "matrix",
      "matron",
      "matted",
      "matter",
      "maturely",
      "maturing",
      "maturity",
      "mauve",
      "maverick",
      "maximize",
      "maximum",
      "maybe",
      "mayday",
      "mayflower",
      "moaner",
      "moaning",
      "mobile",
      "mobility",
      "mobilize",
      "mobster",
      "mocha",
      "mocker",
      "mockup",
      "modified",
      "modify",
      "modular",
      "modulator",
      "module",
      "moisten",
      "moistness",
      "moisture",
      "molar",
      "molasses",
      "mold",
      "molecular",
      "molecule",
      "molehill",
      "mollusk",
      "mom",
      "monastery",
      "monday",
      "monetary",
      "monetize",
      "moneybags",
      "moneyless",
      "moneywise",
      "mongoose",
      "mongrel",
      "monitor",
      "monkhood",
      "monogamy",
      "monogram",
      "monologue",
      "monopoly",
      "monorail",
      "monotone",
      "monotype",
      "monoxide",
      "monsieur",
      "monsoon",
      "monstrous",
      "monthly",
      "monument",
      "moocher",
      "moodiness",
      "moody",
      "mooing",
      "moonbeam",
      "mooned",
      "moonlight",
      "moonlike",
      "moonlit",
      "moonrise",
      "moonscape",
      "moonshine",
      "moonstone",
      "moonwalk",
      "mop",
      "morale",
      "morality",
      "morally",
      "morbidity",
      "morbidly",
      "morphine",
      "morphing",
      "morse",
      "mortality",
      "mortally",
      "mortician",
      "mortified",
      "mortify",
      "mortuary",
      "mosaic",
      "mossy",
      "most",
      "mothball",
      "mothproof",
      "motion",
      "motivate",
      "motivator",
      "motive",
      "motocross",
      "motor",
      "motto",
      "mountable",
      "mountain",
      "mounted",
      "mounting",
      "mourner",
      "mournful",
      "mouse",
      "mousiness",
      "moustache",
      "mousy",
      "mouth",
      "movable",
      "move",
      "movie",
      "moving",
      "mower",
      "mowing",
      "much",
      "muck",
      "mud",
      "mug",
      "mulberry",
      "mulch",
      "mule",
      "mulled",
      "mullets",
      "multiple",
      "multiply",
      "multitask",
      "multitude",
      "mumble",
      "mumbling",
      "mumbo",
      "mummified",
      "mummify",
      "mummy",
      "mumps",
      "munchkin",
      "mundane",
      "municipal",
      "muppet",
      "mural",
      "murkiness",
      "murky",
      "murmuring",
      "muscular",
      "museum",
      "mushily",
      "mushiness",
      "mushroom",
      "mushy",
      "music",
      "musket",
      "muskiness",
      "musky",
      "mustang",
      "mustard",
      "muster",
      "mustiness",
      "musty",
      "mutable",
      "mutate",
      "mutation",
      "mute",
      "mutilated",
      "mutilator",
      "mutiny",
      "mutt",
      "mutual",
      "muzzle",
      "myself",
      "myspace",
      "mystified",
      "mystify",
      "myth",
      "nacho",
      "nag",
      "nail",
      "name",
      "naming",
      "nanny",
      "nanometer",
      "nape",
      "napkin",
      "napped",
      "napping",
      "nappy",
      "narrow",
      "nastily",
      "nastiness",
      "national",
      "native",
      "nativity",
      "natural",
      "nature",
      "naturist",
      "nautical",
      "navigate",
      "navigator",
      "navy",
      "nearby",
      "nearest",
      "nearly",
      "nearness",
      "neatly",
      "neatness",
      "nebula",
      "nebulizer",
      "nectar",
      "negate",
      "negation",
      "negative",
      "neglector",
      "negligee",
      "negligent",
      "negotiate",
      "nemeses",
      "nemesis",
      "neon",
      "nephew",
      "nerd",
      "nervous",
      "nervy",
      "nest",
      "net",
      "neurology",
      "neuron",
      "neurosis",
      "neurotic",
      "neuter",
      "neutron",
      "never",
      "next",
      "nibble",
      "nickname",
      "nicotine",
      "niece",
      "nifty",
      "nimble",
      "nimbly",
      "nineteen",
      "ninetieth",
      "ninja",
      "nintendo",
      "ninth",
      "nuclear",
      "nuclei",
      "nucleus",
      "nugget",
      "nullify",
      "number",
      "numbing",
      "numbly",
      "numbness",
      "numeral",
      "numerate",
      "numerator",
      "numeric",
      "numerous",
      "nuptials",
      "nursery",
      "nursing",
      "nurture",
      "nutcase",
      "nutlike",
      "nutmeg",
      "nutrient",
      "nutshell",
      "nuttiness",
      "nutty",
      "nuzzle",
      "nylon",
      "oaf",
      "oak",
      "oasis",
      "oat",
      "obedience",
      "obedient",
      "obituary",
      "object",
      "obligate",
      "obliged",
      "oblivion",
      "oblivious",
      "oblong",
      "obnoxious",
      "oboe",
      "obscure",
      "obscurity",
      "observant",
      "observer",
      "observing",
      "obsessed",
      "obsession",
      "obsessive",
      "obsolete",
      "obstacle",
      "obstinate",
      "obstruct",
      "obtain",
      "obtrusive",
      "obtuse",
      "obvious",
      "occultist",
      "occupancy",
      "occupant",
      "occupier",
      "occupy",
      "ocean",
      "ocelot",
      "octagon",
      "octane",
      "october",
      "octopus",
      "ogle",
      "oil",
      "oink",
      "ointment",
      "okay",
      "old",
      "olive",
      "olympics",
      "omega",
      "omen",
      "ominous",
      "omission",
      "omit",
      "omnivore",
      "onboard",
      "oncoming",
      "ongoing",
      "onion",
      "online",
      "onlooker",
      "only",
      "onscreen",
      "onset",
      "onshore",
      "onslaught",
      "onstage",
      "onto",
      "onward",
      "onyx",
      "oops",
      "ooze",
      "oozy",
      "opacity",
      "opal",
      "open",
      "operable",
      "operate",
      "operating",
      "operation",
      "operative",
      "operator",
      "opium",
      "opossum",
      "opponent",
      "oppose",
      "opposing",
      "opposite",
      "oppressed",
      "oppressor",
      "opt",
      "opulently",
      "osmosis",
      "other",
      "otter",
      "ouch",
      "ought",
      "ounce",
      "outage",
      "outback",
      "outbid",
      "outboard",
      "outbound",
      "outbreak",
      "outburst",
      "outcast",
      "outclass",
      "outcome",
      "outdated",
      "outdoors",
      "outer",
      "outfield",
      "outfit",
      "outflank",
      "outgoing",
      "outgrow",
      "outhouse",
      "outing",
      "outlast",
      "outlet",
      "outline",
      "outlook",
      "outlying",
      "outmatch",
      "outmost",
      "outnumber",
      "outplayed",
      "outpost",
      "outpour",
      "output",
      "outrage",
      "outrank",
      "outreach",
      "outright",
      "outscore",
      "outsell",
      "outshine",
      "outshoot",
      "outsider",
      "outskirts",
      "outsmart",
      "outsource",
      "outspoken",
      "outtakes",
      "outthink",
      "outward",
      "outweigh",
      "outwit",
      "oval",
      "ovary",
      "oven",
      "overact",
      "overall",
      "overarch",
      "overbid",
      "overbill",
      "overbite",
      "overblown",
      "overboard",
      "overbook",
      "overbuilt",
      "overcast",
      "overcoat",
      "overcome",
      "overcook",
      "overcrowd",
      "overdraft",
      "overdrawn",
      "overdress",
      "overdrive",
      "overdue",
      "overeager",
      "overeater",
      "overexert",
      "overfed",
      "overfeed",
      "overfill",
      "overflow",
      "overfull",
      "overgrown",
      "overhand",
      "overhang",
      "overhaul",
      "overhead",
      "overhear",
      "overheat",
      "overhung",
      "overjoyed",
      "overkill",
      "overlabor",
      "overlaid",
      "overlap",
      "overlay",
      "overload",
      "overlook",
      "overlord",
      "overlying",
      "overnight",
      "overpass",
      "overpay",
      "overplant",
      "overplay",
      "overpower",
      "overprice",
      "overrate",
      "overreach",
      "overreact",
      "override",
      "overripe",
      "overrule",
      "overrun",
      "overshoot",
      "overshot",
      "oversight",
      "oversized",
      "oversleep",
      "oversold",
      "overspend",
      "overstate",
      "overstay",
      "overstep",
      "overstock",
      "overstuff",
      "oversweet",
      "overtake",
      "overthrow",
      "overtime",
      "overtly",
      "overtone",
      "overture",
      "overturn",
      "overuse",
      "overvalue",
      "overview",
      "overwrite",
      "owl",
      "oxford",
      "oxidant",
      "oxidation",
      "oxidize",
      "oxidizing",
      "oxygen",
      "oxymoron",
      "oyster",
      "ozone",
      "paced",
      "pacemaker",
      "pacific",
      "pacifier",
      "pacifism",
      "pacifist",
      "pacify",
      "padded",
      "padding",
      "paddle",
      "paddling",
      "padlock",
      "pagan",
      "pager",
      "paging",
      "pajamas",
      "palace",
      "palatable",
      "palm",
      "palpable",
      "palpitate",
      "paltry",
      "pampered",
      "pamperer",
      "pampers",
      "pamphlet",
      "panama",
      "pancake",
      "pancreas",
      "panda",
      "pandemic",
      "pang",
      "panhandle",
      "panic",
      "panning",
      "panorama",
      "panoramic",
      "panther",
      "pantomime",
      "pantry",
      "pants",
      "pantyhose",
      "paparazzi",
      "papaya",
      "paper",
      "paprika",
      "papyrus",
      "parabola",
      "parachute",
      "parade",
      "paradox",
      "paragraph",
      "parakeet",
      "paralegal",
      "paralyses",
      "paralysis",
      "paralyze",
      "paramedic",
      "parameter",
      "paramount",
      "parasail",
      "parasite",
      "parasitic",
      "parcel",
      "parched",
      "parchment",
      "pardon",
      "parish",
      "parka",
      "parking",
      "parkway",
      "parlor",
      "parmesan",
      "parole",
      "parrot",
      "parsley",
      "parsnip",
      "partake",
      "parted",
      "parting",
      "partition",
      "partly",
      "partner",
      "partridge",
      "party",
      "passable",
      "passably",
      "passage",
      "passcode",
      "passenger",
      "passerby",
      "passing",
      "passion",
      "passive",
      "passivism",
      "passover",
      "passport",
      "password",
      "pasta",
      "pasted",
      "pastel",
      "pastime",
      "pastor",
      "pastrami",
      "pasture",
      "pasty",
      "patchwork",
      "patchy",
      "paternal",
      "paternity",
      "path",
      "patience",
      "patient",
      "patio",
      "patriarch",
      "patriot",
      "patrol",
      "patronage",
      "patronize",
      "pauper",
      "pavement",
      "paver",
      "pavestone",
      "pavilion",
      "paving",
      "pawing",
      "payable",
      "payback",
      "paycheck",
      "payday",
      "payee",
      "payer",
      "paying",
      "payment",
      "payphone",
      "payroll",
      "pebble",
      "pebbly",
      "pecan",
      "pectin",
      "peculiar",
      "peddling",
      "pediatric",
      "pedicure",
      "pedigree",
      "pedometer",
      "pegboard",
      "pelican",
      "pellet",
      "pelt",
      "pelvis",
      "penalize",
      "penalty",
      "pencil",
      "pendant",
      "pending",
      "penholder",
      "penknife",
      "pennant",
      "penniless",
      "penny",
      "penpal",
      "pension",
      "pentagon",
      "pentagram",
      "pep",
      "perceive",
      "percent",
      "perch",
      "percolate",
      "perennial",
      "perfected",
      "perfectly",
      "perfume",
      "periscope",
      "perish",
      "perjurer",
      "perjury",
      "perkiness",
      "perky",
      "perm",
      "peroxide",
      "perpetual",
      "perplexed",
      "persecute",
      "persevere",
      "persuaded",
      "persuader",
      "pesky",
      "peso",
      "pessimism",
      "pessimist",
      "pester",
      "pesticide",
      "petal",
      "petite",
      "petition",
      "petri",
      "petroleum",
      "petted",
      "petticoat",
      "pettiness",
      "petty",
      "petunia",
      "phantom",
      "phobia",
      "phoenix",
      "phonebook",
      "phoney",
      "phonics",
      "phoniness",
      "phony",
      "phosphate",
      "photo",
      "phrase",
      "phrasing",
      "placard",
      "placate",
      "placidly",
      "plank",
      "planner",
      "plant",
      "plasma",
      "plaster",
      "plastic",
      "plated",
      "platform",
      "plating",
      "platinum",
      "platonic",
      "platter",
      "platypus",
      "plausible",
      "plausibly",
      "playable",
      "playback",
      "player",
      "playful",
      "playgroup",
      "playhouse",
      "playing",
      "playlist",
      "playmaker",
      "playmate",
      "playoff",
      "playpen",
      "playroom",
      "playset",
      "plaything",
      "playtime",
      "plaza",
      "pleading",
      "pleat",
      "pledge",
      "plentiful",
      "plenty",
      "plethora",
      "plexiglas",
      "pliable",
      "plod",
      "plop",
      "plot",
      "plow",
      "ploy",
      "pluck",
      "plug",
      "plunder",
      "plunging",
      "plural",
      "plus",
      "plutonium",
      "plywood",
      "poach",
      "pod",
      "poem",
      "poet",
      "pogo",
      "pointed",
      "pointer",
      "pointing",
      "pointless",
      "pointy",
      "poise",
      "poison",
      "poker",
      "poking",
      "polar",
      "police",
      "policy",
      "polio",
      "polish",
      "politely",
      "polka",
      "polo",
      "polyester",
      "polygon",
      "polygraph",
      "polymer",
      "poncho",
      "pond",
      "pony",
      "popcorn",
      "pope",
      "poplar",
      "popper",
      "poppy",
      "popsicle",
      "populace",
      "popular",
      "populate",
      "porcupine",
      "pork",
      "porous",
      "porridge",
      "portable",
      "portal",
      "portfolio",
      "porthole",
      "portion",
      "portly",
      "portside",
      "poser",
      "posh",
      "posing",
      "possible",
      "possibly",
      "possum",
      "postage",
      "postal",
      "postbox",
      "postcard",
      "posted",
      "poster",
      "posting",
      "postnasal",
      "posture",
      "postwar",
      "pouch",
      "pounce",
      "pouncing",
      "pound",
      "pouring",
      "pout",
      "powdered",
      "powdering",
      "powdery",
      "power",
      "powwow",
      "pox",
      "praising",
      "prance",
      "prancing",
      "pranker",
      "prankish",
      "prankster",
      "prayer",
      "praying",
      "preacher",
      "preaching",
      "preachy",
      "preamble",
      "precinct",
      "precise",
      "precision",
      "precook",
      "precut",
      "predator",
      "predefine",
      "predict",
      "preface",
      "prefix",
      "preflight",
      "preformed",
      "pregame",
      "pregnancy",
      "pregnant",
      "preheated",
      "prelaunch",
      "prelaw",
      "prelude",
      "premiere",
      "premises",
      "premium",
      "prenatal",
      "preoccupy",
      "preorder",
      "prepaid",
      "prepay",
      "preplan",
      "preppy",
      "preschool",
      "prescribe",
      "preseason",
      "preset",
      "preshow",
      "president",
      "presoak",
      "press",
      "presume",
      "presuming",
      "preteen",
      "pretended",
      "pretender",
      "pretense",
      "pretext",
      "pretty",
      "pretzel",
      "prevail",
      "prevalent",
      "prevent",
      "preview",
      "previous",
      "prewar",
      "prewashed",
      "prideful",
      "pried",
      "primal",
      "primarily",
      "primary",
      "primate",
      "primer",
      "primp",
      "princess",
      "print",
      "prior",
      "prism",
      "prison",
      "prissy",
      "pristine",
      "privacy",
      "private",
      "privatize",
      "prize",
      "proactive",
      "probable",
      "probably",
      "probation",
      "probe",
      "probing",
      "probiotic",
      "problem",
      "procedure",
      "process",
      "proclaim",
      "procreate",
      "procurer",
      "prodigal",
      "prodigy",
      "produce",
      "product",
      "profane",
      "profanity",
      "professed",
      "professor",
      "profile",
      "profound",
      "profusely",
      "progeny",
      "prognosis",
      "program",
      "progress",
      "projector",
      "prologue",
      "prolonged",
      "promenade",
      "prominent",
      "promoter",
      "promotion",
      "prompter",
      "promptly",
      "prone",
      "prong",
      "pronounce",
      "pronto",
      "proofing",
      "proofread",
      "proofs",
      "propeller",
      "properly",
      "property",
      "proponent",
      "proposal",
      "propose",
      "props",
      "prorate",
      "protector",
      "protegee",
      "proton",
      "prototype",
      "protozoan",
      "protract",
      "protrude",
      "proud",
      "provable",
      "proved",
      "proven",
      "provided",
      "provider",
      "providing",
      "province",
      "proving",
      "provoke",
      "provoking",
      "provolone",
      "prowess",
      "prowler",
      "prowling",
      "proximity",
      "proxy",
      "prozac",
      "prude",
      "prudishly",
      "prune",
      "pruning",
      "pry",
      "psychic",
      "public",
      "publisher",
      "pucker",
      "pueblo",
      "pug",
      "pull",
      "pulmonary",
      "pulp",
      "pulsate",
      "pulse",
      "pulverize",
      "puma",
      "pumice",
      "pummel",
      "punch",
      "punctual",
      "punctuate",
      "punctured",
      "pungent",
      "punisher",
      "punk",
      "pupil",
      "puppet",
      "puppy",
      "purchase",
      "pureblood",
      "purebred",
      "purely",
      "pureness",
      "purgatory",
      "purge",
      "purging",
      "purifier",
      "purify",
      "purist",
      "puritan",
      "purity",
      "purple",
      "purplish",
      "purposely",
      "purr",
      "purse",
      "pursuable",
      "pursuant",
      "pursuit",
      "purveyor",
      "pushcart",
      "pushchair",
      "pusher",
      "pushiness",
      "pushing",
      "pushover",
      "pushpin",
      "pushup",
      "pushy",
      "putdown",
      "putt",
      "puzzle",
      "puzzling",
      "pyramid",
      "pyromania",
      "python",
      "quack",
      "quadrant",
      "quail",
      "quaintly",
      "quake",
      "quaking",
      "qualified",
      "qualifier",
      "qualify",
      "quality",
      "qualm",
      "quantum",
      "quarrel",
      "quarry",
      "quartered",
      "quarterly",
      "quarters",
      "quartet",
      "quench",
      "query",
      "quicken",
      "quickly",
      "quickness",
      "quicksand",
      "quickstep",
      "quiet",
      "quill",
      "quilt",
      "quintet",
      "quintuple",
      "quirk",
      "quit",
      "quiver",
      "quizzical",
      "quotable",
      "quotation",
      "quote",
      "rabid",
      "race",
      "racing",
      "racism",
      "rack",
      "racoon",
      "radar",
      "radial",
      "radiance",
      "radiantly",
      "radiated",
      "radiation",
      "radiator",
      "radio",
      "radish",
      "raffle",
      "raft",
      "rage",
      "ragged",
      "raging",
      "ragweed",
      "raider",
      "railcar",
      "railing",
      "railroad",
      "railway",
      "raisin",
      "rake",
      "raking",
      "rally",
      "ramble",
      "rambling",
      "ramp",
      "ramrod",
      "ranch",
      "rancidity",
      "random",
      "ranged",
      "ranger",
      "ranging",
      "ranked",
      "ranking",
      "ransack",
      "ranting",
      "rants",
      "rare",
      "rarity",
      "rascal",
      "rash",
      "rasping",
      "ravage",
      "raven",
      "ravine",
      "raving",
      "ravioli",
      "ravishing",
      "reabsorb",
      "reach",
      "reacquire",
      "reaction",
      "reactive",
      "reactor",
      "reaffirm",
      "ream",
      "reanalyze",
      "reappear",
      "reapply",
      "reappoint",
      "reapprove",
      "rearrange",
      "rearview",
      "reason",
      "reassign",
      "reassure",
      "reattach",
      "reawake",
      "rebalance",
      "rebate",
      "rebel",
      "rebirth",
      "reboot",
      "reborn",
      "rebound",
      "rebuff",
      "rebuild",
      "rebuilt",
      "reburial",
      "rebuttal",
      "recall",
      "recant",
      "recapture",
      "recast",
      "recede",
      "recent",
      "recess",
      "recharger",
      "recipient",
      "recital",
      "recite",
      "reckless",
      "reclaim",
      "recliner",
      "reclining",
      "recluse",
      "reclusive",
      "recognize",
      "recoil",
      "recollect",
      "recolor",
      "reconcile",
      "reconfirm",
      "reconvene",
      "recopy",
      "record",
      "recount",
      "recoup",
      "recovery",
      "recreate",
      "rectal",
      "rectangle",
      "rectified",
      "rectify",
      "recycled",
      "recycler",
      "recycling",
      "reemerge",
      "reenact",
      "reenter",
      "reentry",
      "reexamine",
      "referable",
      "referee",
      "reference",
      "refill",
      "refinance",
      "refined",
      "refinery",
      "refining",
      "refinish",
      "reflected",
      "reflector",
      "reflex",
      "reflux",
      "refocus",
      "refold",
      "reforest",
      "reformat",
      "reformed",
      "reformer",
      "reformist",
      "refract",
      "refrain",
      "refreeze",
      "refresh",
      "refried",
      "refueling",
      "refund",
      "refurbish",
      "refurnish",
      "refusal",
      "refuse",
      "refusing",
      "refutable",
      "refute",
      "regain",
      "regalia",
      "regally",
      "reggae",
      "regime",
      "region",
      "register",
      "registrar",
      "registry",
      "regress",
      "regretful",
      "regroup",
      "regular",
      "regulate",
      "regulator",
      "rehab",
      "reheat",
      "rehire",
      "rehydrate",
      "reimburse",
      "reissue",
      "reiterate",
      "rejoice",
      "rejoicing",
      "rejoin",
      "rekindle",
      "relapse",
      "relapsing",
      "relatable",
      "related",
      "relation",
      "relative",
      "relax",
      "relay",
      "relearn",
      "release",
      "relenting",
      "reliable",
      "reliably",
      "reliance",
      "reliant",
      "relic",
      "relieve",
      "relieving",
      "relight",
      "relish",
      "relive",
      "reload",
      "relocate",
      "relock",
      "reluctant",
      "rely",
      "remake",
      "remark",
      "remarry",
      "rematch",
      "remedial",
      "remedy",
      "remember",
      "reminder",
      "remindful",
      "remission",
      "remix",
      "remnant",
      "remodeler",
      "remold",
      "remorse",
      "remote",
      "removable",
      "removal",
      "removed",
      "remover",
      "removing",
      "rename",
      "renderer",
      "rendering",
      "rendition",
      "renegade",
      "renewable",
      "renewably",
      "renewal",
      "renewed",
      "renounce",
      "renovate",
      "renovator",
      "rentable",
      "rental",
      "rented",
      "renter",
      "reoccupy",
      "reoccur",
      "reopen",
      "reorder",
      "repackage",
      "repacking",
      "repaint",
      "repair",
      "repave",
      "repaying",
      "repayment",
      "repeal",
      "repeated",
      "repeater",
      "repent",
      "rephrase",
      "replace",
      "replay",
      "replica",
      "reply",
      "reporter",
      "repose",
      "repossess",
      "repost",
      "repressed",
      "reprimand",
      "reprint",
      "reprise",
      "reproach",
      "reprocess",
      "reproduce",
      "reprogram",
      "reps",
      "reptile",
      "reptilian",
      "repugnant",
      "repulsion",
      "repulsive",
      "repurpose",
      "reputable",
      "reputably",
      "request",
      "require",
      "requisite",
      "reroute",
      "rerun",
      "resale",
      "resample",
      "rescuer",
      "reseal",
      "research",
      "reselect",
      "reseller",
      "resemble",
      "resend",
      "resent",
      "reset",
      "reshape",
      "reshoot",
      "reshuffle",
      "residence",
      "residency",
      "resident",
      "residual",
      "residue",
      "resigned",
      "resilient",
      "resistant",
      "resisting",
      "resize",
      "resolute",
      "resolved",
      "resonant",
      "resonate",
      "resort",
      "resource",
      "respect",
      "resubmit",
      "result",
      "resume",
      "resupply",
      "resurface",
      "resurrect",
      "retail",
      "retainer",
      "retaining",
      "retake",
      "retaliate",
      "retention",
      "rethink",
      "retinal",
      "retired",
      "retiree",
      "retiring",
      "retold",
      "retool",
      "retorted",
      "retouch",
      "retrace",
      "retract",
      "retrain",
      "retread",
      "retreat",
      "retrial",
      "retrieval",
      "retriever",
      "retry",
      "return",
      "retying",
      "retype",
      "reunion",
      "reunite",
      "reusable",
      "reuse",
      "reveal",
      "reveler",
      "revenge",
      "revenue",
      "reverb",
      "revered",
      "reverence",
      "reverend",
      "reversal",
      "reverse",
      "reversing",
      "reversion",
      "revert",
      "revisable",
      "revise",
      "revision",
      "revisit",
      "revivable",
      "revival",
      "reviver",
      "reviving",
      "revocable",
      "revoke",
      "revolt",
      "revolver",
      "revolving",
      "reward",
      "rewash",
      "rewind",
      "rewire",
      "reword",
      "rework",
      "rewrap",
      "rewrite",
      "rhyme",
      "ribbon",
      "ribcage",
      "rice",
      "riches",
      "richly",
      "richness",
      "rickety",
      "ricotta",
      "riddance",
      "ridden",
      "ride",
      "riding",
      "rifling",
      "rift",
      "rigging",
      "rigid",
      "rigor",
      "rimless",
      "rimmed",
      "rind",
      "rink",
      "rinse",
      "rinsing",
      "riot",
      "ripcord",
      "ripeness",
      "ripening",
      "ripping",
      "ripple",
      "rippling",
      "riptide",
      "rise",
      "rising",
      "risk",
      "risotto",
      "ritalin",
      "ritzy",
      "rival",
      "riverbank",
      "riverbed",
      "riverboat",
      "riverside",
      "riveter",
      "riveting",
      "roamer",
      "roaming",
      "roast",
      "robbing",
      "robe",
      "robin",
      "robotics",
      "robust",
      "rockband",
      "rocker",
      "rocket",
      "rockfish",
      "rockiness",
      "rocking",
      "rocklike",
      "rockslide",
      "rockstar",
      "rocky",
      "rogue",
      "roman",
      "romp",
      "rope",
      "roping",
      "roster",
      "rosy",
      "rotten",
      "rotting",
      "rotunda",
      "roulette",
      "rounding",
      "roundish",
      "roundness",
      "roundup",
      "roundworm",
      "routine",
      "routing",
      "rover",
      "roving",
      "royal",
      "rubbed",
      "rubber",
      "rubbing",
      "rubble",
      "rubdown",
      "ruby",
      "ruckus",
      "rudder",
      "rug",
      "ruined",
      "rule",
      "rumble",
      "rumbling",
      "rummage",
      "rumor",
      "runaround",
      "rundown",
      "runner",
      "running",
      "runny",
      "runt",
      "runway",
      "rupture",
      "rural",
      "ruse",
      "rush",
      "rust",
      "rut",
      "sabbath",
      "sabotage",
      "sacrament",
      "sacred",
      "sacrifice",
      "sadden",
      "saddlebag",
      "saddled",
      "saddling",
      "sadly",
      "sadness",
      "safari",
      "safeguard",
      "safehouse",
      "safely",
      "safeness",
      "saffron",
      "saga",
      "sage",
      "sagging",
      "saggy",
      "said",
      "saint",
      "sake",
      "salad",
      "salami",
      "salaried",
      "salary",
      "saline",
      "salon",
      "saloon",
      "salsa",
      "salt",
      "salutary",
      "salute",
      "salvage",
      "salvaging",
      "salvation",
      "same",
      "sample",
      "sampling",
      "sanction",
      "sanctity",
      "sanctuary",
      "sandal",
      "sandbag",
      "sandbank",
      "sandbar",
      "sandblast",
      "sandbox",
      "sanded",
      "sandfish",
      "sanding",
      "sandlot",
      "sandpaper",
      "sandpit",
      "sandstone",
      "sandstorm",
      "sandworm",
      "sandy",
      "sanitary",
      "sanitizer",
      "sank",
      "santa",
      "sapling",
      "sappiness",
      "sappy",
      "sarcasm",
      "sarcastic",
      "sardine",
      "sash",
      "sasquatch",
      "sassy",
      "satchel",
      "satiable",
      "satin",
      "satirical",
      "satisfied",
      "satisfy",
      "saturate",
      "saturday",
      "sauciness",
      "saucy",
      "sauna",
      "savage",
      "savanna",
      "saved",
      "savings",
      "savior",
      "savor",
      "saxophone",
      "say",
      "scabbed",
      "scabby",
      "scalded",
      "scalding",
      "scale",
      "scaling",
      "scallion",
      "scallop",
      "scalping",
      "scam",
      "scandal",
      "scanner",
      "scanning",
      "scant",
      "scapegoat",
      "scarce",
      "scarcity",
      "scarecrow",
      "scared",
      "scarf",
      "scarily",
      "scariness",
      "scarring",
      "scary",
      "scavenger",
      "scenic",
      "schedule",
      "schematic",
      "scheme",
      "scheming",
      "schilling",
      "schnapps",
      "scholar",
      "science",
      "scientist",
      "scion",
      "scoff",
      "scolding",
      "scone",
      "scoop",
      "scooter",
      "scope",
      "scorch",
      "scorebook",
      "scorecard",
      "scored",
      "scoreless",
      "scorer",
      "scoring",
      "scorn",
      "scorpion",
      "scotch",
      "scoundrel",
      "scoured",
      "scouring",
      "scouting",
      "scouts",
      "scowling",
      "scrabble",
      "scraggly",
      "scrambled",
      "scrambler",
      "scrap",
      "scratch",
      "scrawny",
      "screen",
      "scribble",
      "scribe",
      "scribing",
      "scrimmage",
      "script",
      "scroll",
      "scrooge",
      "scrounger",
      "scrubbed",
      "scrubber",
      "scruffy",
      "scrunch",
      "scrutiny",
      "scuba",
      "scuff",
      "sculptor",
      "sculpture",
      "scurvy",
      "scuttle",
      "secluded",
      "secluding",
      "seclusion",
      "second",
      "secrecy",
      "secret",
      "sectional",
      "sector",
      "secular",
      "securely",
      "security",
      "sedan",
      "sedate",
      "sedation",
      "sedative",
      "sediment",
      "seduce",
      "seducing",
      "segment",
      "seismic",
      "seizing",
      "seldom",
      "selected",
      "selection",
      "selective",
      "selector",
      "self",
      "seltzer",
      "semantic",
      "semester",
      "semicolon",
      "semifinal",
      "seminar",
      "semisoft",
      "semisweet",
      "senate",
      "senator",
      "send",
      "senior",
      "senorita",
      "sensation",
      "sensitive",
      "sensitize",
      "sensually",
      "sensuous",
      "sepia",
      "september",
      "septic",
      "septum",
      "sequel",
      "sequence",
      "sequester",
      "series",
      "sermon",
      "serotonin",
      "serpent",
      "serrated",
      "serve",
      "service",
      "serving",
      "sesame",
      "sessions",
      "setback",
      "setting",
      "settle",
      "settling",
      "setup",
      "sevenfold",
      "seventeen",
      "seventh",
      "seventy",
      "severity",
      "shabby",
      "shack",
      "shaded",
      "shadily",
      "shadiness",
      "shading",
      "shadow",
      "shady",
      "shaft",
      "shakable",
      "shakily",
      "shakiness",
      "shaking",
      "shaky",
      "shale",
      "shallot",
      "shallow",
      "shame",
      "shampoo",
      "shamrock",
      "shank",
      "shanty",
      "shape",
      "shaping",
      "share",
      "sharpener",
      "sharper",
      "sharpie",
      "sharply",
      "sharpness",
      "shawl",
      "sheath",
      "shed",
      "sheep",
      "sheet",
      "shelf",
      "shell",
      "shelter",
      "shelve",
      "shelving",
      "sherry",
      "shield",
      "shifter",
      "shifting",
      "shiftless",
      "shifty",
      "shimmer",
      "shimmy",
      "shindig",
      "shine",
      "shingle",
      "shininess",
      "shining",
      "shiny",
      "ship",
      "shirt",
      "shivering",
      "shock",
      "shone",
      "shoplift",
      "shopper",
      "shopping",
      "shoptalk",
      "shore",
      "shortage",
      "shortcake",
      "shortcut",
      "shorten",
      "shorter",
      "shorthand",
      "shortlist",
      "shortly",
      "shortness",
      "shorts",
      "shortwave",
      "shorty",
      "shout",
      "shove",
      "showbiz",
      "showcase",
      "showdown",
      "shower",
      "showgirl",
      "showing",
      "showman",
      "shown",
      "showoff",
      "showpiece",
      "showplace",
      "showroom",
      "showy",
      "shrank",
      "shrapnel",
      "shredder",
      "shredding",
      "shrewdly",
      "shriek",
      "shrill",
      "shrimp",
      "shrine",
      "shrink",
      "shrivel",
      "shrouded",
      "shrubbery",
      "shrubs",
      "shrug",
      "shrunk",
      "shucking",
      "shudder",
      "shuffle",
      "shuffling",
      "shun",
      "shush",
      "shut",
      "shy",
      "siamese",
      "siberian",
      "sibling",
      "siding",
      "sierra",
      "siesta",
      "sift",
      "sighing",
      "silenced",
      "silencer",
      "silent",
      "silica",
      "silicon",
      "silk",
      "silliness",
      "silly",
      "silo",
      "silt",
      "silver",
      "similarly",
      "simile",
      "simmering",
      "simple",
      "simplify",
      "simply",
      "sincere",
      "sincerity",
      "singer",
      "singing",
      "single",
      "singular",
      "sinister",
      "sinless",
      "sinner",
      "sinuous",
      "sip",
      "siren",
      "sister",
      "sitcom",
      "sitter",
      "sitting",
      "situated",
      "situation",
      "sixfold",
      "sixteen",
      "sixth",
      "sixties",
      "sixtieth",
      "sixtyfold",
      "sizable",
      "sizably",
      "size",
      "sizing",
      "sizzle",
      "sizzling",
      "skater",
      "skating",
      "skedaddle",
      "skeletal",
      "skeleton",
      "skeptic",
      "sketch",
      "skewed",
      "skewer",
      "skid",
      "skied",
      "skier",
      "skies",
      "skiing",
      "skilled",
      "skillet",
      "skillful",
      "skimmed",
      "skimmer",
      "skimming",
      "skimpily",
      "skincare",
      "skinhead",
      "skinless",
      "skinning",
      "skinny",
      "skintight",
      "skipper",
      "skipping",
      "skirmish",
      "skirt",
      "skittle",
      "skydiver",
      "skylight",
      "skyline",
      "skype",
      "skyrocket",
      "skyward",
      "slab",
      "slacked",
      "slacker",
      "slacking",
      "slackness",
      "slacks",
      "slain",
      "slam",
      "slander",
      "slang",
      "slapping",
      "slapstick",
      "slashed",
      "slashing",
      "slate",
      "slather",
      "slaw",
      "sled",
      "sleek",
      "sleep",
      "sleet",
      "sleeve",
      "slept",
      "sliceable",
      "sliced",
      "slicer",
      "slicing",
      "slick",
      "slider",
      "slideshow",
      "sliding",
      "slighted",
      "slighting",
      "slightly",
      "slimness",
      "slimy",
      "slinging",
      "slingshot",
      "slinky",
      "slip",
      "slit",
      "sliver",
      "slobbery",
      "slogan",
      "sloped",
      "sloping",
      "sloppily",
      "sloppy",
      "slot",
      "slouching",
      "slouchy",
      "sludge",
      "slug",
      "slum",
      "slurp",
      "slush",
      "sly",
      "small",
      "smartly",
      "smartness",
      "smasher",
      "smashing",
      "smashup",
      "smell",
      "smelting",
      "smile",
      "smilingly",
      "smirk",
      "smite",
      "smith",
      "smitten",
      "smock",
      "smog",
      "smoked",
      "smokeless",
      "smokiness",
      "smoking",
      "smoky",
      "smolder",
      "smooth",
      "smother",
      "smudge",
      "smudgy",
      "smuggler",
      "smuggling",
      "smugly",
      "smugness",
      "snack",
      "snagged",
      "snaking",
      "snap",
      "snare",
      "snarl",
      "snazzy",
      "sneak",
      "sneer",
      "sneeze",
      "sneezing",
      "snide",
      "sniff",
      "snippet",
      "snipping",
      "snitch",
      "snooper",
      "snooze",
      "snore",
      "snoring",
      "snorkel",
      "snort",
      "snout",
      "snowbird",
      "snowboard",
      "snowbound",
      "snowcap",
      "snowdrift",
      "snowdrop",
      "snowfall",
      "snowfield",
      "snowflake",
      "snowiness",
      "snowless",
      "snowman",
      "snowplow",
      "snowshoe",
      "snowstorm",
      "snowsuit",
      "snowy",
      "snub",
      "snuff",
      "snuggle",
      "snugly",
      "snugness",
      "speak",
      "spearfish",
      "spearhead",
      "spearman",
      "spearmint",
      "species",
      "specimen",
      "specked",
      "speckled",
      "specks",
      "spectacle",
      "spectator",
      "spectrum",
      "speculate",
      "speech",
      "speed",
      "spellbind",
      "speller",
      "spelling",
      "spendable",
      "spender",
      "spending",
      "spent",
      "spew",
      "sphere",
      "spherical",
      "sphinx",
      "spider",
      "spied",
      "spiffy",
      "spill",
      "spilt",
      "spinach",
      "spinal",
      "spindle",
      "spinner",
      "spinning",
      "spinout",
      "spinster",
      "spiny",
      "spiral",
      "spirited",
      "spiritism",
      "spirits",
      "spiritual",
      "splashed",
      "splashing",
      "splashy",
      "splatter",
      "spleen",
      "splendid",
      "splendor",
      "splice",
      "splicing",
      "splinter",
      "splotchy",
      "splurge",
      "spoilage",
      "spoiled",
      "spoiler",
      "spoiling",
      "spoils",
      "spoken",
      "spokesman",
      "sponge",
      "spongy",
      "sponsor",
      "spoof",
      "spookily",
      "spooky",
      "spool",
      "spoon",
      "spore",
      "sporting",
      "sports",
      "sporty",
      "spotless",
      "spotlight",
      "spotted",
      "spotter",
      "spotting",
      "spotty",
      "spousal",
      "spouse",
      "spout",
      "sprain",
      "sprang",
      "sprawl",
      "spray",
      "spree",
      "sprig",
      "spring",
      "sprinkled",
      "sprinkler",
      "sprint",
      "sprite",
      "sprout",
      "spruce",
      "sprung",
      "spry",
      "spud",
      "spur",
      "sputter",
      "spyglass",
      "squabble",
      "squad",
      "squall",
      "squander",
      "squash",
      "squatted",
      "squatter",
      "squatting",
      "squeak",
      "squealer",
      "squealing",
      "squeamish",
      "squeegee",
      "squeeze",
      "squeezing",
      "squid",
      "squiggle",
      "squiggly",
      "squint",
      "squire",
      "squirt",
      "squishier",
      "squishy",
      "stability",
      "stabilize",
      "stable",
      "stack",
      "stadium",
      "staff",
      "stage",
      "staging",
      "stagnant",
      "stagnate",
      "stainable",
      "stained",
      "staining",
      "stainless",
      "stalemate",
      "staleness",
      "stalling",
      "stallion",
      "stamina",
      "stammer",
      "stamp",
      "stand",
      "stank",
      "staple",
      "stapling",
      "starboard",
      "starch",
      "stardom",
      "stardust",
      "starfish",
      "stargazer",
      "staring",
      "stark",
      "starless",
      "starlet",
      "starlight",
      "starlit",
      "starring",
      "starry",
      "starship",
      "starter",
      "starting",
      "startle",
      "startling",
      "startup",
      "starved",
      "starving",
      "stash",
      "state",
      "static",
      "statistic",
      "statue",
      "stature",
      "status",
      "statute",
      "statutory",
      "staunch",
      "stays",
      "steadfast",
      "steadier",
      "steadily",
      "steadying",
      "steam",
      "steed",
      "steep",
      "steerable",
      "steering",
      "steersman",
      "stegosaur",
      "stellar",
      "stem",
      "stench",
      "stencil",
      "step",
      "stereo",
      "sterile",
      "sterility",
      "sterilize",
      "sterling",
      "sternness",
      "sternum",
      "stew",
      "stick",
      "stiffen",
      "stiffly",
      "stiffness",
      "stifle",
      "stifling",
      "stillness",
      "stilt",
      "stimulant",
      "stimulate",
      "stimuli",
      "stimulus",
      "stinger",
      "stingily",
      "stinging",
      "stingray",
      "stingy",
      "stinking",
      "stinky",
      "stipend",
      "stipulate",
      "stir",
      "stitch",
      "stock",
      "stoic",
      "stoke",
      "stole",
      "stomp",
      "stonewall",
      "stoneware",
      "stonework",
      "stoning",
      "stony",
      "stood",
      "stooge",
      "stool",
      "stoop",
      "stoplight",
      "stoppable",
      "stoppage",
      "stopped",
      "stopper",
      "stopping",
      "stopwatch",
      "storable",
      "storage",
      "storeroom",
      "storewide",
      "storm",
      "stout",
      "stove",
      "stowaway",
      "stowing",
      "straddle",
      "straggler",
      "strained",
      "strainer",
      "straining",
      "strangely",
      "stranger",
      "strangle",
      "strategic",
      "strategy",
      "stratus",
      "straw",
      "stray",
      "streak",
      "stream",
      "street",
      "strength",
      "strenuous",
      "strep",
      "stress",
      "stretch",
      "strewn",
      "stricken",
      "strict",
      "stride",
      "strife",
      "strike",
      "striking",
      "strive",
      "striving",
      "strobe",
      "strode",
      "stroller",
      "strongbox",
      "strongly",
      "strongman",
      "struck",
      "structure",
      "strudel",
      "struggle",
      "strum",
      "strung",
      "strut",
      "stubbed",
      "stubble",
      "stubbly",
      "stubborn",
      "stucco",
      "stuck",
      "student",
      "studied",
      "studio",
      "study",
      "stuffed",
      "stuffing",
      "stuffy",
      "stumble",
      "stumbling",
      "stump",
      "stung",
      "stunned",
      "stunner",
      "stunning",
      "stunt",
      "stupor",
      "sturdily",
      "sturdy",
      "styling",
      "stylishly",
      "stylist",
      "stylized",
      "stylus",
      "suave",
      "subarctic",
      "subatomic",
      "subdivide",
      "subdued",
      "subduing",
      "subfloor",
      "subgroup",
      "subheader",
      "subject",
      "sublease",
      "sublet",
      "sublevel",
      "sublime",
      "submarine",
      "submerge",
      "submersed",
      "submitter",
      "subpanel",
      "subpar",
      "subplot",
      "subprime",
      "subscribe",
      "subscript",
      "subsector",
      "subside",
      "subsiding",
      "subsidize",
      "subsidy",
      "subsoil",
      "subsonic",
      "substance",
      "subsystem",
      "subtext",
      "subtitle",
      "subtly",
      "subtotal",
      "subtract",
      "subtype",
      "suburb",
      "subway",
      "subwoofer",
      "subzero",
      "succulent",
      "such",
      "suction",
      "sudden",
      "sudoku",
      "suds",
      "sufferer",
      "suffering",
      "suffice",
      "suffix",
      "suffocate",
      "suffrage",
      "sugar",
      "suggest",
      "suing",
      "suitable",
      "suitably",
      "suitcase",
      "suitor",
      "sulfate",
      "sulfide",
      "sulfite",
      "sulfur",
      "sulk",
      "sullen",
      "sulphate",
      "sulphuric",
      "sultry",
      "superbowl",
      "superglue",
      "superhero",
      "superior",
      "superjet",
      "superman",
      "supermom",
      "supernova",
      "supervise",
      "supper",
      "supplier",
      "supply",
      "support",
      "supremacy",
      "supreme",
      "surcharge",
      "surely",
      "sureness",
      "surface",
      "surfacing",
      "surfboard",
      "surfer",
      "surgery",
      "surgical",
      "surging",
      "surname",
      "surpass",
      "surplus",
      "surprise",
      "surreal",
      "surrender",
      "surrogate",
      "surround",
      "survey",
      "survival",
      "survive",
      "surviving",
      "survivor",
      "sushi",
      "suspect",
      "suspend",
      "suspense",
      "sustained",
      "sustainer",
      "swab",
      "swaddling",
      "swagger",
      "swampland",
      "swan",
      "swapping",
      "swarm",
      "sway",
      "swear",
      "sweat",
      "sweep",
      "swell",
      "swept",
      "swerve",
      "swifter",
      "swiftly",
      "swiftness",
      "swimmable",
      "swimmer",
      "swimming",
      "swimsuit",
      "swimwear",
      "swinger",
      "swinging",
      "swipe",
      "swirl",
      "switch",
      "swivel",
      "swizzle",
      "swooned",
      "swoop",
      "swoosh",
      "swore",
      "sworn",
      "swung",
      "sycamore",
      "sympathy",
      "symphonic",
      "symphony",
      "symptom",
      "synapse",
      "syndrome",
      "synergy",
      "synopses",
      "synopsis",
      "synthesis",
      "synthetic",
      "syrup",
      "system",
      "t-shirt",
      "tabasco",
      "tabby",
      "tableful",
      "tables",
      "tablet",
      "tableware",
      "tabloid",
      "tackiness",
      "tacking",
      "tackle",
      "tackling",
      "tacky",
      "taco",
      "tactful",
      "tactical",
      "tactics",
      "tactile",
      "tactless",
      "tadpole",
      "taekwondo",
      "tag",
      "tainted",
      "take",
      "taking",
      "talcum",
      "talisman",
      "tall",
      "talon",
      "tamale",
      "tameness",
      "tamer",
      "tamper",
      "tank",
      "tanned",
      "tannery",
      "tanning",
      "tantrum",
      "tapeless",
      "tapered",
      "tapering",
      "tapestry",
      "tapioca",
      "tapping",
      "taps",
      "tarantula",
      "target",
      "tarmac",
      "tarnish",
      "tarot",
      "tartar",
      "tartly",
      "tartness",
      "task",
      "tassel",
      "taste",
      "tastiness",
      "tasting",
      "tasty",
      "tattered",
      "tattle",
      "tattling",
      "tattoo",
      "taunt",
      "tavern",
      "thank",
      "that",
      "thaw",
      "theater",
      "theatrics",
      "thee",
      "theft",
      "theme",
      "theology",
      "theorize",
      "thermal",
      "thermos",
      "thesaurus",
      "these",
      "thesis",
      "thespian",
      "thicken",
      "thicket",
      "thickness",
      "thieving",
      "thievish",
      "thigh",
      "thimble",
      "thing",
      "think",
      "thinly",
      "thinner",
      "thinness",
      "thinning",
      "thirstily",
      "thirsting",
      "thirsty",
      "thirteen",
      "thirty",
      "thong",
      "thorn",
      "those",
      "thousand",
      "thrash",
      "thread",
      "threaten",
      "threefold",
      "thrift",
      "thrill",
      "thrive",
      "thriving",
      "throat",
      "throbbing",
      "throng",
      "throttle",
      "throwaway",
      "throwback",
      "thrower",
      "throwing",
      "thud",
      "thumb",
      "thumping",
      "thursday",
      "thus",
      "thwarting",
      "thyself",
      "tiara",
      "tibia",
      "tidal",
      "tidbit",
      "tidiness",
      "tidings",
      "tidy",
      "tiger",
      "tighten",
      "tightly",
      "tightness",
      "tightrope",
      "tightwad",
      "tigress",
      "tile",
      "tiling",
      "till",
      "tilt",
      "timid",
      "timing",
      "timothy",
      "tinderbox",
      "tinfoil",
      "tingle",
      "tingling",
      "tingly",
      "tinker",
      "tinkling",
      "tinsel",
      "tinsmith",
      "tint",
      "tinwork",
      "tiny",
      "tipoff",
      "tipped",
      "tipper",
      "tipping",
      "tiptoeing",
      "tiptop",
      "tiring",
      "tissue",
      "trace",
      "tracing",
      "track",
      "traction",
      "tractor",
      "trade",
      "trading",
      "tradition",
      "traffic",
      "tragedy",
      "trailing",
      "trailside",
      "train",
      "traitor",
      "trance",
      "tranquil",
      "transfer",
      "transform",
      "translate",
      "transpire",
      "transport",
      "transpose",
      "trapdoor",
      "trapeze",
      "trapezoid",
      "trapped",
      "trapper",
      "trapping",
      "traps",
      "trash",
      "travel",
      "traverse",
      "travesty",
      "tray",
      "treachery",
      "treading",
      "treadmill",
      "treason",
      "treat",
      "treble",
      "tree",
      "trekker",
      "tremble",
      "trembling",
      "tremor",
      "trench",
      "trend",
      "trespass",
      "triage",
      "trial",
      "triangle",
      "tribesman",
      "tribunal",
      "tribune",
      "tributary",
      "tribute",
      "triceps",
      "trickery",
      "trickily",
      "tricking",
      "trickle",
      "trickster",
      "tricky",
      "tricolor",
      "tricycle",
      "trident",
      "tried",
      "trifle",
      "trifocals",
      "trillion",
      "trilogy",
      "trimester",
      "trimmer",
      "trimming",
      "trimness",
      "trinity",
      "trio",
      "tripod",
      "tripping",
      "triumph",
      "trivial",
      "trodden",
      "trolling",
      "trombone",
      "trophy",
      "tropical",
      "tropics",
      "trouble",
      "troubling",
      "trough",
      "trousers",
      "trout",
      "trowel",
      "truce",
      "truck",
      "truffle",
      "trump",
      "trunks",
      "trustable",
      "trustee",
      "trustful",
      "trusting",
      "trustless",
      "truth",
      "try",
      "tubby",
      "tubeless",
      "tubular",
      "tucking",
      "tuesday",
      "tug",
      "tuition",
      "tulip",
      "tumble",
      "tumbling",
      "tummy",
      "turban",
      "turbine",
      "turbofan",
      "turbojet",
      "turbulent",
      "turf",
      "turkey",
      "turmoil",
      "turret",
      "turtle",
      "tusk",
      "tutor",
      "tutu",
      "tux",
      "tweak",
      "tweed",
      "tweet",
      "tweezers",
      "twelve",
      "twentieth",
      "twenty",
      "twerp",
      "twice",
      "twiddle",
      "twiddling",
      "twig",
      "twilight",
      "twine",
      "twins",
      "twirl",
      "twistable",
      "twisted",
      "twister",
      "twisting",
      "twisty",
      "twitch",
      "twitter",
      "tycoon",
      "tying",
      "tyke",
      "udder",
      "ultimate",
      "ultimatum",
      "ultra",
      "umbilical",
      "umbrella",
      "umpire",
      "unabashed",
      "unable",
      "unadorned",
      "unadvised",
      "unafraid",
      "unaired",
      "unaligned",
      "unaltered",
      "unarmored",
      "unashamed",
      "unaudited",
      "unawake",
      "unaware",
      "unbaked",
      "unbalance",
      "unbeaten",
      "unbend",
      "unbent",
      "unbiased",
      "unbitten",
      "unblended",
      "unblessed",
      "unblock",
      "unbolted",
      "unbounded",
      "unboxed",
      "unbraided",
      "unbridle",
      "unbroken",
      "unbuckled",
      "unbundle",
      "unburned",
      "unbutton",
      "uncanny",
      "uncapped",
      "uncaring",
      "uncertain",
      "unchain",
      "unchanged",
      "uncharted",
      "uncheck",
      "uncivil",
      "unclad",
      "unclaimed",
      "unclamped",
      "unclasp",
      "uncle",
      "unclip",
      "uncloak",
      "unclog",
      "unclothed",
      "uncoated",
      "uncoiled",
      "uncolored",
      "uncombed",
      "uncommon",
      "uncooked",
      "uncork",
      "uncorrupt",
      "uncounted",
      "uncouple",
      "uncouth",
      "uncover",
      "uncross",
      "uncrown",
      "uncrushed",
      "uncured",
      "uncurious",
      "uncurled",
      "uncut",
      "undamaged",
      "undated",
      "undaunted",
      "undead",
      "undecided",
      "undefined",
      "underage",
      "underarm",
      "undercoat",
      "undercook",
      "undercut",
      "underdog",
      "underdone",
      "underfed",
      "underfeed",
      "underfoot",
      "undergo",
      "undergrad",
      "underhand",
      "underline",
      "underling",
      "undermine",
      "undermost",
      "underpaid",
      "underpass",
      "underpay",
      "underrate",
      "undertake",
      "undertone",
      "undertook",
      "undertow",
      "underuse",
      "underwear",
      "underwent",
      "underwire",
      "undesired",
      "undiluted",
      "undivided",
      "undocked",
      "undoing",
      "undone",
      "undrafted",
      "undress",
      "undrilled",
      "undusted",
      "undying",
      "unearned",
      "unearth",
      "unease",
      "uneasily",
      "uneasy",
      "uneatable",
      "uneaten",
      "unedited",
      "unelected",
      "unending",
      "unengaged",
      "unenvied",
      "unequal",
      "unethical",
      "uneven",
      "unexpired",
      "unexposed",
      "unfailing",
      "unfair",
      "unfasten",
      "unfazed",
      "unfeeling",
      "unfiled",
      "unfilled",
      "unfitted",
      "unfitting",
      "unfixable",
      "unfixed",
      "unflawed",
      "unfocused",
      "unfold",
      "unfounded",
      "unframed",
      "unfreeze",
      "unfrosted",
      "unfrozen",
      "unfunded",
      "unglazed",
      "ungloved",
      "unglue",
      "ungodly",
      "ungraded",
      "ungreased",
      "unguarded",
      "unguided",
      "unhappily",
      "unhappy",
      "unharmed",
      "unhealthy",
      "unheard",
      "unhearing",
      "unheated",
      "unhelpful",
      "unhidden",
      "unhinge",
      "unhitched",
      "unholy",
      "unhook",
      "unicorn",
      "unicycle",
      "unified",
      "unifier",
      "uniformed",
      "uniformly",
      "unify",
      "unimpeded",
      "uninjured",
      "uninstall",
      "uninsured",
      "uninvited",
      "union",
      "uniquely",
      "unisexual",
      "unison",
      "unissued",
      "unit",
      "universal",
      "universe",
      "unjustly",
      "unkempt",
      "unkind",
      "unknotted",
      "unknowing",
      "unknown",
      "unlaced",
      "unlatch",
      "unlawful",
      "unleaded",
      "unlearned",
      "unleash",
      "unless",
      "unleveled",
      "unlighted",
      "unlikable",
      "unlimited",
      "unlined",
      "unlinked",
      "unlisted",
      "unlit",
      "unlivable",
      "unloaded",
      "unloader",
      "unlocked",
      "unlocking",
      "unlovable",
      "unloved",
      "unlovely",
      "unloving",
      "unluckily",
      "unlucky",
      "unmade",
      "unmanaged",
      "unmanned",
      "unmapped",
      "unmarked",
      "unmasked",
      "unmasking",
      "unmatched",
      "unmindful",
      "unmixable",
      "unmixed",
      "unmolded",
      "unmoral",
      "unmovable",
      "unmoved",
      "unmoving",
      "unnamable",
      "unnamed",
      "unnatural",
      "unneeded",
      "unnerve",
      "unnerving",
      "unnoticed",
      "unopened",
      "unopposed",
      "unpack",
      "unpadded",
      "unpaid",
      "unpainted",
      "unpaired",
      "unpaved",
      "unpeeled",
      "unpicked",
      "unpiloted",
      "unpinned",
      "unplanned",
      "unplanted",
      "unpleased",
      "unpledged",
      "unplowed",
      "unplug",
      "unpopular",
      "unproven",
      "unquote",
      "unranked",
      "unrated",
      "unraveled",
      "unreached",
      "unread",
      "unreal",
      "unreeling",
      "unrefined",
      "unrelated",
      "unrented",
      "unrest",
      "unretired",
      "unrevised",
      "unrigged",
      "unripe",
      "unrivaled",
      "unroasted",
      "unrobed",
      "unroll",
      "unruffled",
      "unruly",
      "unrushed",
      "unsaddle",
      "unsafe",
      "unsaid",
      "unsalted",
      "unsaved",
      "unsavory",
      "unscathed",
      "unscented",
      "unscrew",
      "unsealed",
      "unseated",
      "unsecured",
      "unseeing",
      "unseemly",
      "unseen",
      "unselect",
      "unselfish",
      "unsent",
      "unsettled",
      "unshackle",
      "unshaken",
      "unshaved",
      "unshaven",
      "unsheathe",
      "unshipped",
      "unsightly",
      "unsigned",
      "unskilled",
      "unsliced",
      "unsmooth",
      "unsnap",
      "unsocial",
      "unsoiled",
      "unsold",
      "unsolved",
      "unsorted",
      "unspoiled",
      "unspoken",
      "unstable",
      "unstaffed",
      "unstamped",
      "unsteady",
      "unsterile",
      "unstirred",
      "unstitch",
      "unstopped",
      "unstuck",
      "unstuffed",
      "unstylish",
      "unsubtle",
      "unsubtly",
      "unsuited",
      "unsure",
      "unsworn",
      "untagged",
      "untainted",
      "untaken",
      "untamed",
      "untangled",
      "untapped",
      "untaxed",
      "unthawed",
      "unthread",
      "untidy",
      "untie",
      "until",
      "untimed",
      "untimely",
      "untitled",
      "untoasted",
      "untold",
      "untouched",
      "untracked",
      "untrained",
      "untreated",
      "untried",
      "untrimmed",
      "untrue",
      "untruth",
      "unturned",
      "untwist",
      "untying",
      "unusable",
      "unused",
      "unusual",
      "unvalued",
      "unvaried",
      "unvarying",
      "unveiled",
      "unveiling",
      "unvented",
      "unviable",
      "unvisited",
      "unvocal",
      "unwanted",
      "unwarlike",
      "unwary",
      "unwashed",
      "unwatched",
      "unweave",
      "unwed",
      "unwelcome",
      "unwell",
      "unwieldy",
      "unwilling",
      "unwind",
      "unwired",
      "unwitting",
      "unwomanly",
      "unworldly",
      "unworn",
      "unworried",
      "unworthy",
      "unwound",
      "unwoven",
      "unwrapped",
      "unwritten",
      "unzip",
      "upbeat",
      "upchuck",
      "upcoming",
      "upcountry",
      "update",
      "upfront",
      "upgrade",
      "upheaval",
      "upheld",
      "uphill",
      "uphold",
      "uplifted",
      "uplifting",
      "upload",
      "upon",
      "upper",
      "upright",
      "uprising",
      "upriver",
      "uproar",
      "uproot",
      "upscale",
      "upside",
      "upstage",
      "upstairs",
      "upstart",
      "upstate",
      "upstream",
      "upstroke",
      "upswing",
      "uptake",
      "uptight",
      "uptown",
      "upturned",
      "upward",
      "upwind",
      "uranium",
      "urban",
      "urchin",
      "urethane",
      "urgency",
      "urgent",
      "urging",
      "urologist",
      "urology",
      "usable",
      "usage",
      "useable",
      "used",
      "uselessly",
      "user",
      "usher",
      "usual",
      "utensil",
      "utility",
      "utilize",
      "utmost",
      "utopia",
      "utter",
      "vacancy",
      "vacant",
      "vacate",
      "vacation",
      "vagabond",
      "vagrancy",
      "vagrantly",
      "vaguely",
      "vagueness",
      "valiant",
      "valid",
      "valium",
      "valley",
      "valuables",
      "value",
      "vanilla",
      "vanish",
      "vanity",
      "vanquish",
      "vantage",
      "vaporizer",
      "variable",
      "variably",
      "varied",
      "variety",
      "various",
      "varmint",
      "varnish",
      "varsity",
      "varying",
      "vascular",
      "vaseline",
      "vastly",
      "vastness",
      "veal",
      "vegan",
      "veggie",
      "vehicular",
      "velcro",
      "velocity",
      "velvet",
      "vendetta",
      "vending",
      "vendor",
      "veneering",
      "vengeful",
      "venomous",
      "ventricle",
      "venture",
      "venue",
      "venus",
      "verbalize",
      "verbally",
      "verbose",
      "verdict",
      "verify",
      "verse",
      "version",
      "versus",
      "vertebrae",
      "vertical",
      "vertigo",
      "very",
      "vessel",
      "vest",
      "veteran",
      "veto",
      "vexingly",
      "viability",
      "viable",
      "vibes",
      "vice",
      "vicinity",
      "victory",
      "video",
      "viewable",
      "viewer",
      "viewing",
      "viewless",
      "viewpoint",
      "vigorous",
      "village",
      "villain",
      "vindicate",
      "vineyard",
      "vintage",
      "violate",
      "violation",
      "violator",
      "violet",
      "violin",
      "viper",
      "viral",
      "virtual",
      "virtuous",
      "virus",
      "visa",
      "viscosity",
      "viscous",
      "viselike",
      "visible",
      "visibly",
      "vision",
      "visiting",
      "visitor",
      "visor",
      "vista",
      "vitality",
      "vitalize",
      "vitally",
      "vitamins",
      "vivacious",
      "vividly",
      "vividness",
      "vixen",
      "vocalist",
      "vocalize",
      "vocally",
      "vocation",
      "voice",
      "voicing",
      "void",
      "volatile",
      "volley",
      "voltage",
      "volumes",
      "voter",
      "voting",
      "voucher",
      "vowed",
      "vowel",
      "voyage",
      "wackiness",
      "wad",
      "wafer",
      "waffle",
      "waged",
      "wager",
      "wages",
      "waggle",
      "wagon",
      "wake",
      "waking",
      "walk",
      "walmart",
      "walnut",
      "walrus",
      "waltz",
      "wand",
      "wannabe",
      "wanted",
      "wanting",
      "wasabi",
      "washable",
      "washbasin",
      "washboard",
      "washbowl",
      "washcloth",
      "washday",
      "washed",
      "washer",
      "washhouse",
      "washing",
      "washout",
      "washroom",
      "washstand",
      "washtub",
      "wasp",
      "wasting",
      "watch",
      "water",
      "waviness",
      "waving",
      "wavy",
      "whacking",
      "whacky",
      "wham",
      "wharf",
      "wheat",
      "whenever",
      "whiff",
      "whimsical",
      "whinny",
      "whiny",
      "whisking",
      "whoever",
      "whole",
      "whomever",
      "whoopee",
      "whooping",
      "whoops",
      "why",
      "wick",
      "widely",
      "widen",
      "widget",
      "widow",
      "width",
      "wieldable",
      "wielder",
      "wife",
      "wifi",
      "wikipedia",
      "wildcard",
      "wildcat",
      "wilder",
      "wildfire",
      "wildfowl",
      "wildland",
      "wildlife",
      "wildly",
      "wildness",
      "willed",
      "willfully",
      "willing",
      "willow",
      "willpower",
      "wilt",
      "wimp",
      "wince",
      "wincing",
      "wind",
      "wing",
      "winking",
      "winner",
      "winnings",
      "winter",
      "wipe",
      "wired",
      "wireless",
      "wiring",
      "wiry",
      "wisdom",
      "wise",
      "wish",
      "wisplike",
      "wispy",
      "wistful",
      "wizard",
      "wobble",
      "wobbling",
      "wobbly",
      "wok",
      "wolf",
      "wolverine",
      "womanhood",
      "womankind",
      "womanless",
      "womanlike",
      "womanly",
      "womb",
      "woof",
      "wooing",
      "wool",
      "woozy",
      "word",
      "work",
      "worried",
      "worrier",
      "worrisome",
      "worry",
      "worsening",
      "worshiper",
      "worst",
      "wound",
      "woven",
      "wow",
      "wrangle",
      "wrath",
      "wreath",
      "wreckage",
      "wrecker",
      "wrecking",
      "wrench",
      "wriggle",
      "wriggly",
      "wrinkle",
      "wrinkly",
      "wrist",
      "writing",
      "written",
      "wrongdoer",
      "wronged",
      "wrongful",
      "wrongly",
      "wrongness",
      "wrought",
      "xbox",
      "xerox",
      "yahoo",
      "yam",
      "yanking",
      "yapping",
      "yard",
      "yarn",
      "yeah",
      "yearbook",
      "yearling",
      "yearly",
      "yearning",
      "yeast",
      "yelling",
      "yelp",
      "yen",
      "yesterday",
      "yiddish",
      "yield",
      "yin",
      "yippee",
      "yo-yo",
      "yodel",
      "yoga",
      "yogurt",
      "yonder",
      "yoyo",
      "yummy",
      "zap",
      "zealous",
      "zebra",
      "zen",
      "zeppelin",
      "zero",
      "zestfully",
      "zesty",
      "zigzagged",
      "zipfile",
      "zipping",
      "zippy",
      "zips",
      "zit",
      "zodiac",
      "zombie",
      "zone",
      "zoning",
      "zookeeper",
      "zoologist",
      "zoology",
      "zoom"
    ];
    Object.defineProperty(newSecureWords$1, "__esModule", {
      value: true
    });
    newSecureWords$1.newSecureWords = void 0;
    const getSecureRandom_1$1 = getSecureRandom, wordlist_1$1 = wordlist$1;
    async function newSecureWords(d = 6) {
      let _ = [];
      for (let $ = 0; $ < d; $++) _.push(wordlist_1$1.wordlist[await (0, getSecureRandom_1$1.getSecureRandomNumber)(0, wordlist_1$1.wordlist.length)]);
      return _;
    }
    newSecureWords$1.newSecureWords = newSecureWords;
    var newSecurePassphrase = {}, hasRequiredNewSecurePassphrase;
    function requireNewSecurePassphrase() {
      if (hasRequiredNewSecurePassphrase) return newSecurePassphrase;
      hasRequiredNewSecurePassphrase = 1, Object.defineProperty(newSecurePassphrase, "__esModule", {
        value: true
      }), newSecurePassphrase.newSecurePassphrase = void 0;
      const d = requireDist();
      async function _($ = 6) {
        return (await (0, d.newSecureWords)($)).join("-");
      }
      return newSecurePassphrase.newSecurePassphrase = _, newSecurePassphrase;
    }
    var mnemonic = {}, binary = {};
    Object.defineProperty(binary, "__esModule", {
      value: true
    });
    binary.bitsToBytes = binary.bytesToBits = binary.lpad = void 0;
    function lpad(d, _, $) {
      for (; d.length < $; ) d = _ + d;
      return d;
    }
    binary.lpad = lpad;
    function bytesToBits(d) {
      let _ = "";
      for (let $ = 0; $ < d.length; $++) {
        let j = d.at($);
        _ += lpad(j.toString(2), "0", 8);
      }
      return _;
    }
    binary.bytesToBits = bytesToBits;
    function bitsToBytes(d) {
      if (d.length % 8 !== 0) throw Error("Uneven bits");
      let _ = [];
      for (; d.length > 0; ) _.push(parseInt(d.slice(0, 8), 2)), d = d.slice(8);
      return Buffer.from(_);
    }
    binary.bitsToBytes = bitsToBytes;
    var wordlist = {};
    Object.defineProperty(wordlist, "__esModule", {
      value: true
    });
    wordlist.wordlist = void 0;
    const EN = [
      "abandon",
      "ability",
      "able",
      "about",
      "above",
      "absent",
      "absorb",
      "abstract",
      "absurd",
      "abuse",
      "access",
      "accident",
      "account",
      "accuse",
      "achieve",
      "acid",
      "acoustic",
      "acquire",
      "across",
      "act",
      "action",
      "actor",
      "actress",
      "actual",
      "adapt",
      "add",
      "addict",
      "address",
      "adjust",
      "admit",
      "adult",
      "advance",
      "advice",
      "aerobic",
      "affair",
      "afford",
      "afraid",
      "again",
      "age",
      "agent",
      "agree",
      "ahead",
      "aim",
      "air",
      "airport",
      "aisle",
      "alarm",
      "album",
      "alcohol",
      "alert",
      "alien",
      "all",
      "alley",
      "allow",
      "almost",
      "alone",
      "alpha",
      "already",
      "also",
      "alter",
      "always",
      "amateur",
      "amazing",
      "among",
      "amount",
      "amused",
      "analyst",
      "anchor",
      "ancient",
      "anger",
      "angle",
      "angry",
      "animal",
      "ankle",
      "announce",
      "annual",
      "another",
      "answer",
      "antenna",
      "antique",
      "anxiety",
      "any",
      "apart",
      "apology",
      "appear",
      "apple",
      "approve",
      "april",
      "arch",
      "arctic",
      "area",
      "arena",
      "argue",
      "arm",
      "armed",
      "armor",
      "army",
      "around",
      "arrange",
      "arrest",
      "arrive",
      "arrow",
      "art",
      "artefact",
      "artist",
      "artwork",
      "ask",
      "aspect",
      "assault",
      "asset",
      "assist",
      "assume",
      "asthma",
      "athlete",
      "atom",
      "attack",
      "attend",
      "attitude",
      "attract",
      "auction",
      "audit",
      "august",
      "aunt",
      "author",
      "auto",
      "autumn",
      "average",
      "avocado",
      "avoid",
      "awake",
      "aware",
      "away",
      "awesome",
      "awful",
      "awkward",
      "axis",
      "baby",
      "bachelor",
      "bacon",
      "badge",
      "bag",
      "balance",
      "balcony",
      "ball",
      "bamboo",
      "banana",
      "banner",
      "bar",
      "barely",
      "bargain",
      "barrel",
      "base",
      "basic",
      "basket",
      "battle",
      "beach",
      "bean",
      "beauty",
      "because",
      "become",
      "beef",
      "before",
      "begin",
      "behave",
      "behind",
      "believe",
      "below",
      "belt",
      "bench",
      "benefit",
      "best",
      "betray",
      "better",
      "between",
      "beyond",
      "bicycle",
      "bid",
      "bike",
      "bind",
      "biology",
      "bird",
      "birth",
      "bitter",
      "black",
      "blade",
      "blame",
      "blanket",
      "blast",
      "bleak",
      "bless",
      "blind",
      "blood",
      "blossom",
      "blouse",
      "blue",
      "blur",
      "blush",
      "board",
      "boat",
      "body",
      "boil",
      "bomb",
      "bone",
      "bonus",
      "book",
      "boost",
      "border",
      "boring",
      "borrow",
      "boss",
      "bottom",
      "bounce",
      "box",
      "boy",
      "bracket",
      "brain",
      "brand",
      "brass",
      "brave",
      "bread",
      "breeze",
      "brick",
      "bridge",
      "brief",
      "bright",
      "bring",
      "brisk",
      "broccoli",
      "broken",
      "bronze",
      "broom",
      "brother",
      "brown",
      "brush",
      "bubble",
      "buddy",
      "budget",
      "buffalo",
      "build",
      "bulb",
      "bulk",
      "bullet",
      "bundle",
      "bunker",
      "burden",
      "burger",
      "burst",
      "bus",
      "business",
      "busy",
      "butter",
      "buyer",
      "buzz",
      "cabbage",
      "cabin",
      "cable",
      "cactus",
      "cage",
      "cake",
      "call",
      "calm",
      "camera",
      "camp",
      "can",
      "canal",
      "cancel",
      "candy",
      "cannon",
      "canoe",
      "canvas",
      "canyon",
      "capable",
      "capital",
      "captain",
      "car",
      "carbon",
      "card",
      "cargo",
      "carpet",
      "carry",
      "cart",
      "case",
      "cash",
      "casino",
      "castle",
      "casual",
      "cat",
      "catalog",
      "catch",
      "category",
      "cattle",
      "caught",
      "cause",
      "caution",
      "cave",
      "ceiling",
      "celery",
      "cement",
      "census",
      "century",
      "cereal",
      "certain",
      "chair",
      "chalk",
      "champion",
      "change",
      "chaos",
      "chapter",
      "charge",
      "chase",
      "chat",
      "cheap",
      "check",
      "cheese",
      "chef",
      "cherry",
      "chest",
      "chicken",
      "chief",
      "child",
      "chimney",
      "choice",
      "choose",
      "chronic",
      "chuckle",
      "chunk",
      "churn",
      "cigar",
      "cinnamon",
      "circle",
      "citizen",
      "city",
      "civil",
      "claim",
      "clap",
      "clarify",
      "claw",
      "clay",
      "clean",
      "clerk",
      "clever",
      "click",
      "client",
      "cliff",
      "climb",
      "clinic",
      "clip",
      "clock",
      "clog",
      "close",
      "cloth",
      "cloud",
      "clown",
      "club",
      "clump",
      "cluster",
      "clutch",
      "coach",
      "coast",
      "coconut",
      "code",
      "coffee",
      "coil",
      "coin",
      "collect",
      "color",
      "column",
      "combine",
      "come",
      "comfort",
      "comic",
      "common",
      "company",
      "concert",
      "conduct",
      "confirm",
      "congress",
      "connect",
      "consider",
      "control",
      "convince",
      "cook",
      "cool",
      "copper",
      "copy",
      "coral",
      "core",
      "corn",
      "correct",
      "cost",
      "cotton",
      "couch",
      "country",
      "couple",
      "course",
      "cousin",
      "cover",
      "coyote",
      "crack",
      "cradle",
      "craft",
      "cram",
      "crane",
      "crash",
      "crater",
      "crawl",
      "crazy",
      "cream",
      "credit",
      "creek",
      "crew",
      "cricket",
      "crime",
      "crisp",
      "critic",
      "crop",
      "cross",
      "crouch",
      "crowd",
      "crucial",
      "cruel",
      "cruise",
      "crumble",
      "crunch",
      "crush",
      "cry",
      "crystal",
      "cube",
      "culture",
      "cup",
      "cupboard",
      "curious",
      "current",
      "curtain",
      "curve",
      "cushion",
      "custom",
      "cute",
      "cycle",
      "dad",
      "damage",
      "damp",
      "dance",
      "danger",
      "daring",
      "dash",
      "daughter",
      "dawn",
      "day",
      "deal",
      "debate",
      "debris",
      "decade",
      "december",
      "decide",
      "decline",
      "decorate",
      "decrease",
      "deer",
      "defense",
      "define",
      "defy",
      "degree",
      "delay",
      "deliver",
      "demand",
      "demise",
      "denial",
      "dentist",
      "deny",
      "depart",
      "depend",
      "deposit",
      "depth",
      "deputy",
      "derive",
      "describe",
      "desert",
      "design",
      "desk",
      "despair",
      "destroy",
      "detail",
      "detect",
      "develop",
      "device",
      "devote",
      "diagram",
      "dial",
      "diamond",
      "diary",
      "dice",
      "diesel",
      "diet",
      "differ",
      "digital",
      "dignity",
      "dilemma",
      "dinner",
      "dinosaur",
      "direct",
      "dirt",
      "disagree",
      "discover",
      "disease",
      "dish",
      "dismiss",
      "disorder",
      "display",
      "distance",
      "divert",
      "divide",
      "divorce",
      "dizzy",
      "doctor",
      "document",
      "dog",
      "doll",
      "dolphin",
      "domain",
      "donate",
      "donkey",
      "donor",
      "door",
      "dose",
      "double",
      "dove",
      "draft",
      "dragon",
      "drama",
      "drastic",
      "draw",
      "dream",
      "dress",
      "drift",
      "drill",
      "drink",
      "drip",
      "drive",
      "drop",
      "drum",
      "dry",
      "duck",
      "dumb",
      "dune",
      "during",
      "dust",
      "dutch",
      "duty",
      "dwarf",
      "dynamic",
      "eager",
      "eagle",
      "early",
      "earn",
      "earth",
      "easily",
      "east",
      "easy",
      "echo",
      "ecology",
      "economy",
      "edge",
      "edit",
      "educate",
      "effort",
      "egg",
      "eight",
      "either",
      "elbow",
      "elder",
      "electric",
      "elegant",
      "element",
      "elephant",
      "elevator",
      "elite",
      "else",
      "embark",
      "embody",
      "embrace",
      "emerge",
      "emotion",
      "employ",
      "empower",
      "empty",
      "enable",
      "enact",
      "end",
      "endless",
      "endorse",
      "enemy",
      "energy",
      "enforce",
      "engage",
      "engine",
      "enhance",
      "enjoy",
      "enlist",
      "enough",
      "enrich",
      "enroll",
      "ensure",
      "enter",
      "entire",
      "entry",
      "envelope",
      "episode",
      "equal",
      "equip",
      "era",
      "erase",
      "erode",
      "erosion",
      "error",
      "erupt",
      "escape",
      "essay",
      "essence",
      "estate",
      "eternal",
      "ethics",
      "evidence",
      "evil",
      "evoke",
      "evolve",
      "exact",
      "example",
      "excess",
      "exchange",
      "excite",
      "exclude",
      "excuse",
      "execute",
      "exercise",
      "exhaust",
      "exhibit",
      "exile",
      "exist",
      "exit",
      "exotic",
      "expand",
      "expect",
      "expire",
      "explain",
      "expose",
      "express",
      "extend",
      "extra",
      "eye",
      "eyebrow",
      "fabric",
      "face",
      "faculty",
      "fade",
      "faint",
      "faith",
      "fall",
      "false",
      "fame",
      "family",
      "famous",
      "fan",
      "fancy",
      "fantasy",
      "farm",
      "fashion",
      "fat",
      "fatal",
      "father",
      "fatigue",
      "fault",
      "favorite",
      "feature",
      "february",
      "federal",
      "fee",
      "feed",
      "feel",
      "female",
      "fence",
      "festival",
      "fetch",
      "fever",
      "few",
      "fiber",
      "fiction",
      "field",
      "figure",
      "file",
      "film",
      "filter",
      "final",
      "find",
      "fine",
      "finger",
      "finish",
      "fire",
      "firm",
      "first",
      "fiscal",
      "fish",
      "fit",
      "fitness",
      "fix",
      "flag",
      "flame",
      "flash",
      "flat",
      "flavor",
      "flee",
      "flight",
      "flip",
      "float",
      "flock",
      "floor",
      "flower",
      "fluid",
      "flush",
      "fly",
      "foam",
      "focus",
      "fog",
      "foil",
      "fold",
      "follow",
      "food",
      "foot",
      "force",
      "forest",
      "forget",
      "fork",
      "fortune",
      "forum",
      "forward",
      "fossil",
      "foster",
      "found",
      "fox",
      "fragile",
      "frame",
      "frequent",
      "fresh",
      "friend",
      "fringe",
      "frog",
      "front",
      "frost",
      "frown",
      "frozen",
      "fruit",
      "fuel",
      "fun",
      "funny",
      "furnace",
      "fury",
      "future",
      "gadget",
      "gain",
      "galaxy",
      "gallery",
      "game",
      "gap",
      "garage",
      "garbage",
      "garden",
      "garlic",
      "garment",
      "gas",
      "gasp",
      "gate",
      "gather",
      "gauge",
      "gaze",
      "general",
      "genius",
      "genre",
      "gentle",
      "genuine",
      "gesture",
      "ghost",
      "giant",
      "gift",
      "giggle",
      "ginger",
      "giraffe",
      "girl",
      "give",
      "glad",
      "glance",
      "glare",
      "glass",
      "glide",
      "glimpse",
      "globe",
      "gloom",
      "glory",
      "glove",
      "glow",
      "glue",
      "goat",
      "goddess",
      "gold",
      "good",
      "goose",
      "gorilla",
      "gospel",
      "gossip",
      "govern",
      "gown",
      "grab",
      "grace",
      "grain",
      "grant",
      "grape",
      "grass",
      "gravity",
      "great",
      "green",
      "grid",
      "grief",
      "grit",
      "grocery",
      "group",
      "grow",
      "grunt",
      "guard",
      "guess",
      "guide",
      "guilt",
      "guitar",
      "gun",
      "gym",
      "habit",
      "hair",
      "half",
      "hammer",
      "hamster",
      "hand",
      "happy",
      "harbor",
      "hard",
      "harsh",
      "harvest",
      "hat",
      "have",
      "hawk",
      "hazard",
      "head",
      "health",
      "heart",
      "heavy",
      "hedgehog",
      "height",
      "hello",
      "helmet",
      "help",
      "hen",
      "hero",
      "hidden",
      "high",
      "hill",
      "hint",
      "hip",
      "hire",
      "history",
      "hobby",
      "hockey",
      "hold",
      "hole",
      "holiday",
      "hollow",
      "home",
      "honey",
      "hood",
      "hope",
      "horn",
      "horror",
      "horse",
      "hospital",
      "host",
      "hotel",
      "hour",
      "hover",
      "hub",
      "huge",
      "human",
      "humble",
      "humor",
      "hundred",
      "hungry",
      "hunt",
      "hurdle",
      "hurry",
      "hurt",
      "husband",
      "hybrid",
      "ice",
      "icon",
      "idea",
      "identify",
      "idle",
      "ignore",
      "ill",
      "illegal",
      "illness",
      "image",
      "imitate",
      "immense",
      "immune",
      "impact",
      "impose",
      "improve",
      "impulse",
      "inch",
      "include",
      "income",
      "increase",
      "index",
      "indicate",
      "indoor",
      "industry",
      "infant",
      "inflict",
      "inform",
      "inhale",
      "inherit",
      "initial",
      "inject",
      "injury",
      "inmate",
      "inner",
      "innocent",
      "input",
      "inquiry",
      "insane",
      "insect",
      "inside",
      "inspire",
      "install",
      "intact",
      "interest",
      "into",
      "invest",
      "invite",
      "involve",
      "iron",
      "island",
      "isolate",
      "issue",
      "item",
      "ivory",
      "jacket",
      "jaguar",
      "jar",
      "jazz",
      "jealous",
      "jeans",
      "jelly",
      "jewel",
      "job",
      "join",
      "joke",
      "journey",
      "joy",
      "judge",
      "juice",
      "jump",
      "jungle",
      "junior",
      "junk",
      "just",
      "kangaroo",
      "keen",
      "keep",
      "ketchup",
      "key",
      "kick",
      "kid",
      "kidney",
      "kind",
      "kingdom",
      "kiss",
      "kit",
      "kitchen",
      "kite",
      "kitten",
      "kiwi",
      "knee",
      "knife",
      "knock",
      "know",
      "lab",
      "label",
      "labor",
      "ladder",
      "lady",
      "lake",
      "lamp",
      "language",
      "laptop",
      "large",
      "later",
      "latin",
      "laugh",
      "laundry",
      "lava",
      "law",
      "lawn",
      "lawsuit",
      "layer",
      "lazy",
      "leader",
      "leaf",
      "learn",
      "leave",
      "lecture",
      "left",
      "leg",
      "legal",
      "legend",
      "leisure",
      "lemon",
      "lend",
      "length",
      "lens",
      "leopard",
      "lesson",
      "letter",
      "level",
      "liar",
      "liberty",
      "library",
      "license",
      "life",
      "lift",
      "light",
      "like",
      "limb",
      "limit",
      "link",
      "lion",
      "liquid",
      "list",
      "little",
      "live",
      "lizard",
      "load",
      "loan",
      "lobster",
      "local",
      "lock",
      "logic",
      "lonely",
      "long",
      "loop",
      "lottery",
      "loud",
      "lounge",
      "love",
      "loyal",
      "lucky",
      "luggage",
      "lumber",
      "lunar",
      "lunch",
      "luxury",
      "lyrics",
      "machine",
      "mad",
      "magic",
      "magnet",
      "maid",
      "mail",
      "main",
      "major",
      "make",
      "mammal",
      "man",
      "manage",
      "mandate",
      "mango",
      "mansion",
      "manual",
      "maple",
      "marble",
      "march",
      "margin",
      "marine",
      "market",
      "marriage",
      "mask",
      "mass",
      "master",
      "match",
      "material",
      "math",
      "matrix",
      "matter",
      "maximum",
      "maze",
      "meadow",
      "mean",
      "measure",
      "meat",
      "mechanic",
      "medal",
      "media",
      "melody",
      "melt",
      "member",
      "memory",
      "mention",
      "menu",
      "mercy",
      "merge",
      "merit",
      "merry",
      "mesh",
      "message",
      "metal",
      "method",
      "middle",
      "midnight",
      "milk",
      "million",
      "mimic",
      "mind",
      "minimum",
      "minor",
      "minute",
      "miracle",
      "mirror",
      "misery",
      "miss",
      "mistake",
      "mix",
      "mixed",
      "mixture",
      "mobile",
      "model",
      "modify",
      "mom",
      "moment",
      "monitor",
      "monkey",
      "monster",
      "month",
      "moon",
      "moral",
      "more",
      "morning",
      "mosquito",
      "mother",
      "motion",
      "motor",
      "mountain",
      "mouse",
      "move",
      "movie",
      "much",
      "muffin",
      "mule",
      "multiply",
      "muscle",
      "museum",
      "mushroom",
      "music",
      "must",
      "mutual",
      "myself",
      "mystery",
      "myth",
      "naive",
      "name",
      "napkin",
      "narrow",
      "nasty",
      "nation",
      "nature",
      "near",
      "neck",
      "need",
      "negative",
      "neglect",
      "neither",
      "nephew",
      "nerve",
      "nest",
      "net",
      "network",
      "neutral",
      "never",
      "news",
      "next",
      "nice",
      "night",
      "noble",
      "noise",
      "nominee",
      "noodle",
      "normal",
      "north",
      "nose",
      "notable",
      "note",
      "nothing",
      "notice",
      "novel",
      "now",
      "nuclear",
      "number",
      "nurse",
      "nut",
      "oak",
      "obey",
      "object",
      "oblige",
      "obscure",
      "observe",
      "obtain",
      "obvious",
      "occur",
      "ocean",
      "october",
      "odor",
      "off",
      "offer",
      "office",
      "often",
      "oil",
      "okay",
      "old",
      "olive",
      "olympic",
      "omit",
      "once",
      "one",
      "onion",
      "online",
      "only",
      "open",
      "opera",
      "opinion",
      "oppose",
      "option",
      "orange",
      "orbit",
      "orchard",
      "order",
      "ordinary",
      "organ",
      "orient",
      "original",
      "orphan",
      "ostrich",
      "other",
      "outdoor",
      "outer",
      "output",
      "outside",
      "oval",
      "oven",
      "over",
      "own",
      "owner",
      "oxygen",
      "oyster",
      "ozone",
      "pact",
      "paddle",
      "page",
      "pair",
      "palace",
      "palm",
      "panda",
      "panel",
      "panic",
      "panther",
      "paper",
      "parade",
      "parent",
      "park",
      "parrot",
      "party",
      "pass",
      "patch",
      "path",
      "patient",
      "patrol",
      "pattern",
      "pause",
      "pave",
      "payment",
      "peace",
      "peanut",
      "pear",
      "peasant",
      "pelican",
      "pen",
      "penalty",
      "pencil",
      "people",
      "pepper",
      "perfect",
      "permit",
      "person",
      "pet",
      "phone",
      "photo",
      "phrase",
      "physical",
      "piano",
      "picnic",
      "picture",
      "piece",
      "pig",
      "pigeon",
      "pill",
      "pilot",
      "pink",
      "pioneer",
      "pipe",
      "pistol",
      "pitch",
      "pizza",
      "place",
      "planet",
      "plastic",
      "plate",
      "play",
      "please",
      "pledge",
      "pluck",
      "plug",
      "plunge",
      "poem",
      "poet",
      "point",
      "polar",
      "pole",
      "police",
      "pond",
      "pony",
      "pool",
      "popular",
      "portion",
      "position",
      "possible",
      "post",
      "potato",
      "pottery",
      "poverty",
      "powder",
      "power",
      "practice",
      "praise",
      "predict",
      "prefer",
      "prepare",
      "present",
      "pretty",
      "prevent",
      "price",
      "pride",
      "primary",
      "print",
      "priority",
      "prison",
      "private",
      "prize",
      "problem",
      "process",
      "produce",
      "profit",
      "program",
      "project",
      "promote",
      "proof",
      "property",
      "prosper",
      "protect",
      "proud",
      "provide",
      "public",
      "pudding",
      "pull",
      "pulp",
      "pulse",
      "pumpkin",
      "punch",
      "pupil",
      "puppy",
      "purchase",
      "purity",
      "purpose",
      "purse",
      "push",
      "put",
      "puzzle",
      "pyramid",
      "quality",
      "quantum",
      "quarter",
      "question",
      "quick",
      "quit",
      "quiz",
      "quote",
      "rabbit",
      "raccoon",
      "race",
      "rack",
      "radar",
      "radio",
      "rail",
      "rain",
      "raise",
      "rally",
      "ramp",
      "ranch",
      "random",
      "range",
      "rapid",
      "rare",
      "rate",
      "rather",
      "raven",
      "raw",
      "razor",
      "ready",
      "real",
      "reason",
      "rebel",
      "rebuild",
      "recall",
      "receive",
      "recipe",
      "record",
      "recycle",
      "reduce",
      "reflect",
      "reform",
      "refuse",
      "region",
      "regret",
      "regular",
      "reject",
      "relax",
      "release",
      "relief",
      "rely",
      "remain",
      "remember",
      "remind",
      "remove",
      "render",
      "renew",
      "rent",
      "reopen",
      "repair",
      "repeat",
      "replace",
      "report",
      "require",
      "rescue",
      "resemble",
      "resist",
      "resource",
      "response",
      "result",
      "retire",
      "retreat",
      "return",
      "reunion",
      "reveal",
      "review",
      "reward",
      "rhythm",
      "rib",
      "ribbon",
      "rice",
      "rich",
      "ride",
      "ridge",
      "rifle",
      "right",
      "rigid",
      "ring",
      "riot",
      "ripple",
      "risk",
      "ritual",
      "rival",
      "river",
      "road",
      "roast",
      "robot",
      "robust",
      "rocket",
      "romance",
      "roof",
      "rookie",
      "room",
      "rose",
      "rotate",
      "rough",
      "round",
      "route",
      "royal",
      "rubber",
      "rude",
      "rug",
      "rule",
      "run",
      "runway",
      "rural",
      "sad",
      "saddle",
      "sadness",
      "safe",
      "sail",
      "salad",
      "salmon",
      "salon",
      "salt",
      "salute",
      "same",
      "sample",
      "sand",
      "satisfy",
      "satoshi",
      "sauce",
      "sausage",
      "save",
      "say",
      "scale",
      "scan",
      "scare",
      "scatter",
      "scene",
      "scheme",
      "school",
      "science",
      "scissors",
      "scorpion",
      "scout",
      "scrap",
      "screen",
      "script",
      "scrub",
      "sea",
      "search",
      "season",
      "seat",
      "second",
      "secret",
      "section",
      "security",
      "seed",
      "seek",
      "segment",
      "select",
      "sell",
      "seminar",
      "senior",
      "sense",
      "sentence",
      "series",
      "service",
      "session",
      "settle",
      "setup",
      "seven",
      "shadow",
      "shaft",
      "shallow",
      "share",
      "shed",
      "shell",
      "sheriff",
      "shield",
      "shift",
      "shine",
      "ship",
      "shiver",
      "shock",
      "shoe",
      "shoot",
      "shop",
      "short",
      "shoulder",
      "shove",
      "shrimp",
      "shrug",
      "shuffle",
      "shy",
      "sibling",
      "sick",
      "side",
      "siege",
      "sight",
      "sign",
      "silent",
      "silk",
      "silly",
      "silver",
      "similar",
      "simple",
      "since",
      "sing",
      "siren",
      "sister",
      "situate",
      "six",
      "size",
      "skate",
      "sketch",
      "ski",
      "skill",
      "skin",
      "skirt",
      "skull",
      "slab",
      "slam",
      "sleep",
      "slender",
      "slice",
      "slide",
      "slight",
      "slim",
      "slogan",
      "slot",
      "slow",
      "slush",
      "small",
      "smart",
      "smile",
      "smoke",
      "smooth",
      "snack",
      "snake",
      "snap",
      "sniff",
      "snow",
      "soap",
      "soccer",
      "social",
      "sock",
      "soda",
      "soft",
      "solar",
      "soldier",
      "solid",
      "solution",
      "solve",
      "someone",
      "song",
      "soon",
      "sorry",
      "sort",
      "soul",
      "sound",
      "soup",
      "source",
      "south",
      "space",
      "spare",
      "spatial",
      "spawn",
      "speak",
      "special",
      "speed",
      "spell",
      "spend",
      "sphere",
      "spice",
      "spider",
      "spike",
      "spin",
      "spirit",
      "split",
      "spoil",
      "sponsor",
      "spoon",
      "sport",
      "spot",
      "spray",
      "spread",
      "spring",
      "spy",
      "square",
      "squeeze",
      "squirrel",
      "stable",
      "stadium",
      "staff",
      "stage",
      "stairs",
      "stamp",
      "stand",
      "start",
      "state",
      "stay",
      "steak",
      "steel",
      "stem",
      "step",
      "stereo",
      "stick",
      "still",
      "sting",
      "stock",
      "stomach",
      "stone",
      "stool",
      "story",
      "stove",
      "strategy",
      "street",
      "strike",
      "strong",
      "struggle",
      "student",
      "stuff",
      "stumble",
      "style",
      "subject",
      "submit",
      "subway",
      "success",
      "such",
      "sudden",
      "suffer",
      "sugar",
      "suggest",
      "suit",
      "summer",
      "sun",
      "sunny",
      "sunset",
      "super",
      "supply",
      "supreme",
      "sure",
      "surface",
      "surge",
      "surprise",
      "surround",
      "survey",
      "suspect",
      "sustain",
      "swallow",
      "swamp",
      "swap",
      "swarm",
      "swear",
      "sweet",
      "swift",
      "swim",
      "swing",
      "switch",
      "sword",
      "symbol",
      "symptom",
      "syrup",
      "system",
      "table",
      "tackle",
      "tag",
      "tail",
      "talent",
      "talk",
      "tank",
      "tape",
      "target",
      "task",
      "taste",
      "tattoo",
      "taxi",
      "teach",
      "team",
      "tell",
      "ten",
      "tenant",
      "tennis",
      "tent",
      "term",
      "test",
      "text",
      "thank",
      "that",
      "theme",
      "then",
      "theory",
      "there",
      "they",
      "thing",
      "this",
      "thought",
      "three",
      "thrive",
      "throw",
      "thumb",
      "thunder",
      "ticket",
      "tide",
      "tiger",
      "tilt",
      "timber",
      "time",
      "tiny",
      "tip",
      "tired",
      "tissue",
      "title",
      "toast",
      "tobacco",
      "today",
      "toddler",
      "toe",
      "together",
      "toilet",
      "token",
      "tomato",
      "tomorrow",
      "tone",
      "tongue",
      "tonight",
      "tool",
      "tooth",
      "top",
      "topic",
      "topple",
      "torch",
      "tornado",
      "tortoise",
      "toss",
      "total",
      "tourist",
      "toward",
      "tower",
      "town",
      "toy",
      "track",
      "trade",
      "traffic",
      "tragic",
      "train",
      "transfer",
      "trap",
      "trash",
      "travel",
      "tray",
      "treat",
      "tree",
      "trend",
      "trial",
      "tribe",
      "trick",
      "trigger",
      "trim",
      "trip",
      "trophy",
      "trouble",
      "truck",
      "true",
      "truly",
      "trumpet",
      "trust",
      "truth",
      "try",
      "tube",
      "tuition",
      "tumble",
      "tuna",
      "tunnel",
      "turkey",
      "turn",
      "turtle",
      "twelve",
      "twenty",
      "twice",
      "twin",
      "twist",
      "two",
      "type",
      "typical",
      "ugly",
      "umbrella",
      "unable",
      "unaware",
      "uncle",
      "uncover",
      "under",
      "undo",
      "unfair",
      "unfold",
      "unhappy",
      "uniform",
      "unique",
      "unit",
      "universe",
      "unknown",
      "unlock",
      "until",
      "unusual",
      "unveil",
      "update",
      "upgrade",
      "uphold",
      "upon",
      "upper",
      "upset",
      "urban",
      "urge",
      "usage",
      "use",
      "used",
      "useful",
      "useless",
      "usual",
      "utility",
      "vacant",
      "vacuum",
      "vague",
      "valid",
      "valley",
      "valve",
      "van",
      "vanish",
      "vapor",
      "various",
      "vast",
      "vault",
      "vehicle",
      "velvet",
      "vendor",
      "venture",
      "venue",
      "verb",
      "verify",
      "version",
      "very",
      "vessel",
      "veteran",
      "viable",
      "vibrant",
      "vicious",
      "victory",
      "video",
      "view",
      "village",
      "vintage",
      "violin",
      "virtual",
      "virus",
      "visa",
      "visit",
      "visual",
      "vital",
      "vivid",
      "vocal",
      "voice",
      "void",
      "volcano",
      "volume",
      "vote",
      "voyage",
      "wage",
      "wagon",
      "wait",
      "walk",
      "wall",
      "walnut",
      "want",
      "warfare",
      "warm",
      "warrior",
      "wash",
      "wasp",
      "waste",
      "water",
      "wave",
      "way",
      "wealth",
      "weapon",
      "wear",
      "weasel",
      "weather",
      "web",
      "wedding",
      "weekend",
      "weird",
      "welcome",
      "west",
      "wet",
      "whale",
      "what",
      "wheat",
      "wheel",
      "when",
      "where",
      "whip",
      "whisper",
      "wide",
      "width",
      "wife",
      "wild",
      "will",
      "win",
      "window",
      "wine",
      "wing",
      "wink",
      "winner",
      "winter",
      "wire",
      "wisdom",
      "wise",
      "wish",
      "witness",
      "wolf",
      "woman",
      "wonder",
      "wood",
      "wool",
      "word",
      "work",
      "world",
      "worry",
      "worth",
      "wrap",
      "wreck",
      "wrestle",
      "wrist",
      "write",
      "wrong",
      "yard",
      "year",
      "yellow",
      "you",
      "young",
      "youth",
      "zebra",
      "zero",
      "zone",
      "zoo"
    ];
    wordlist.wordlist = EN;
    var __importDefault$4 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(mnemonic, "__esModule", {
      value: true
    });
    mnemonic.mnemonicFromRandomSeed = mnemonic.mnemonicIndexesToBytes = mnemonic.bytesToMnemonics = mnemonic.bytesToMnemonicIndexes = mnemonic.mnemonicNew = mnemonic.mnemonicValidate = mnemonic.mnemonicToHDSeed = mnemonic.mnemonicToWalletKey = mnemonic.mnemonicToPrivateKey = mnemonic.mnemonicToSeed = mnemonic.mnemonicToEntropy = void 0;
    const tweetnacl_1$1 = __importDefault$4(naclFastExports), getSecureRandom_1 = getSecureRandom, hmac_sha512_1$3 = hmac_sha512$1, pbkdf2_sha512_1 = pbkdf2_sha512$1, binary_1 = binary, wordlist_1 = wordlist, PBKDF_ITERATIONS = 1e5;
    async function isPasswordNeeded(d) {
      const _ = await mnemonicToEntropy(d);
      return await isPasswordSeed(_) && !await isBasicSeed(_);
    }
    function normalizeMnemonic(d) {
      return d.map((_) => _.toLowerCase().trim());
    }
    async function isBasicSeed(d) {
      return (await (0, pbkdf2_sha512_1.pbkdf2_sha512)(d, "TON seed version", Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64))[0] == 0;
    }
    async function isPasswordSeed(d) {
      return (await (0, pbkdf2_sha512_1.pbkdf2_sha512)(d, "TON fast seed version", 1, 64))[0] == 1;
    }
    async function mnemonicToEntropy(d, _) {
      return await (0, hmac_sha512_1$3.hmac_sha512)(d.join(" "), _ && _.length > 0 ? _ : "");
    }
    mnemonic.mnemonicToEntropy = mnemonicToEntropy;
    async function mnemonicToSeed(d, _, $) {
      const j = await mnemonicToEntropy(d, $);
      return await (0, pbkdf2_sha512_1.pbkdf2_sha512)(j, _, PBKDF_ITERATIONS, 64);
    }
    mnemonic.mnemonicToSeed = mnemonicToSeed;
    async function mnemonicToPrivateKey(d, _) {
      d = normalizeMnemonic(d);
      const $ = await mnemonicToSeed(d, "TON default seed", _);
      let j = tweetnacl_1$1.default.sign.keyPair.fromSeed($.slice(0, 32));
      return {
        publicKey: Buffer.from(j.publicKey),
        secretKey: Buffer.from(j.secretKey)
      };
    }
    mnemonic.mnemonicToPrivateKey = mnemonicToPrivateKey;
    async function mnemonicToWalletKey(d, _) {
      let j = (await mnemonicToPrivateKey(d, _)).secretKey.slice(0, 32);
      const rt = tweetnacl_1$1.default.sign.keyPair.fromSeed(j);
      return {
        publicKey: Buffer.from(rt.publicKey),
        secretKey: Buffer.from(rt.secretKey)
      };
    }
    mnemonic.mnemonicToWalletKey = mnemonicToWalletKey;
    async function mnemonicToHDSeed(d, _) {
      return d = normalizeMnemonic(d), await mnemonicToSeed(d, "TON HD Keys seed", _);
    }
    mnemonic.mnemonicToHDSeed = mnemonicToHDSeed;
    async function mnemonicValidate(d, _) {
      d = normalizeMnemonic(d);
      for (let $ of d) if (wordlist_1.wordlist.indexOf($) < 0) return false;
      return _ && _.length > 0 && !await isPasswordNeeded(d) ? false : await isBasicSeed(await mnemonicToEntropy(d, _));
    }
    mnemonic.mnemonicValidate = mnemonicValidate;
    async function mnemonicNew(d = 24, _) {
      let $ = [];
      for (; ; ) {
        $ = [];
        for (let j = 0; j < d; j++) {
          let rt = await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);
          $.push(wordlist_1.wordlist[rt]);
        }
        if (!(_ && _.length > 0 && !await isPasswordNeeded($)) && await isBasicSeed(await mnemonicToEntropy($, _))) break;
      }
      return $;
    }
    mnemonic.mnemonicNew = mnemonicNew;
    function bytesToMnemonicIndexes(d, _) {
      let $ = (0, binary_1.bytesToBits)(d), j = [];
      for (let rt = 0; rt < _; rt++) {
        let et = $.slice(rt * 11, rt * 11 + 11);
        j.push(parseInt(et, 2));
      }
      return j;
    }
    mnemonic.bytesToMnemonicIndexes = bytesToMnemonicIndexes;
    function bytesToMnemonics(d, _) {
      let $ = bytesToMnemonicIndexes(d, _), j = [];
      for (let rt of $) j.push(wordlist_1.wordlist[rt]);
      return j;
    }
    mnemonic.bytesToMnemonics = bytesToMnemonics;
    function mnemonicIndexesToBytes(d) {
      let _ = "";
      for (let $ of d) {
        if (!Number.isSafeInteger($) || $ < 0 || $ >= 2028) throw Error("Invalid input");
        _ += (0, binary_1.lpad)($.toString(2), "0", 11);
      }
      for (; _.length % 8 !== 0; ) _ = _ + "0";
      return (0, binary_1.bitsToBytes)(_);
    }
    mnemonic.mnemonicIndexesToBytes = mnemonicIndexesToBytes;
    async function mnemonicFromRandomSeed(d, _ = 24, $) {
      const j = Math.ceil(_ * 11 / 8);
      let rt = d;
      for (; ; ) {
        let et = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(rt, "TON mnemonic seed", Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), j), st = bytesToMnemonics(et, _);
        if (await mnemonicValidate(st, $)) return st;
        rt = et;
      }
    }
    mnemonic.mnemonicFromRandomSeed = mnemonicFromRandomSeed;
    var nacl$7 = {}, __importDefault$3 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(nacl$7, "__esModule", {
      value: true
    });
    nacl$7.openBox = nacl$7.sealBox = nacl$7.signVerify = nacl$7.sign = nacl$7.keyPairFromSeed = nacl$7.keyPairFromSecretKey = void 0;
    const tweetnacl_1 = __importDefault$3(naclFastExports);
    function keyPairFromSecretKey(d) {
      let _ = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(d));
      return {
        publicKey: Buffer.from(_.publicKey),
        secretKey: Buffer.from(_.secretKey)
      };
    }
    nacl$7.keyPairFromSecretKey = keyPairFromSecretKey;
    function keyPairFromSeed$2(d) {
      let _ = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(d));
      return {
        publicKey: Buffer.from(_.publicKey),
        secretKey: Buffer.from(_.secretKey)
      };
    }
    nacl$7.keyPairFromSeed = keyPairFromSeed$2;
    function sign(d, _) {
      return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(d), new Uint8Array(_)));
    }
    nacl$7.sign = sign;
    function signVerify(d, _, $) {
      return tweetnacl_1.default.sign.detached.verify(new Uint8Array(d), new Uint8Array(_), new Uint8Array($));
    }
    nacl$7.signVerify = signVerify;
    function sealBox(d, _, $) {
      return Buffer.from(tweetnacl_1.default.secretbox(d, _, $));
    }
    nacl$7.sealBox = sealBox;
    function openBox(d, _, $) {
      let j = tweetnacl_1.default.secretbox.open(d, _, $);
      return j ? Buffer.from(j) : null;
    }
    nacl$7.openBox = openBox;
    var ed25519 = {};
    Object.defineProperty(ed25519, "__esModule", {
      value: true
    });
    ed25519.deriveEd25519Path = ed25519.deriveED25519HardenedKey = ed25519.getED25519MasterKeyFromSeed = void 0;
    const hmac_sha512_1$2 = hmac_sha512$1, ED25519_CURVE = "ed25519 seed", HARDENED_OFFSET$1 = 2147483648;
    async function getED25519MasterKeyFromSeed(d) {
      const _ = await (0, hmac_sha512_1$2.hmac_sha512)(ED25519_CURVE, d), $ = _.slice(0, 32), j = _.slice(32);
      return {
        key: $,
        chainCode: j
      };
    }
    ed25519.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;
    async function deriveED25519HardenedKey(d, _) {
      if (_ >= HARDENED_OFFSET$1) throw Error("Key index must be less than offset");
      const $ = Buffer.alloc(4);
      $.writeUInt32BE(_ + HARDENED_OFFSET$1, 0);
      const j = Buffer.concat([
        Buffer.alloc(1, 0),
        d.key,
        $
      ]), rt = await (0, hmac_sha512_1$2.hmac_sha512)(d.chainCode, j), et = rt.slice(0, 32), st = rt.slice(32);
      return {
        key: et,
        chainCode: st
      };
    }
    ed25519.deriveED25519HardenedKey = deriveED25519HardenedKey;
    async function deriveEd25519Path(d, _) {
      let $ = await getED25519MasterKeyFromSeed(d), j = [
        ..._
      ];
      for (; j.length > 0; ) {
        let rt = j[0];
        j = j.slice(1), $ = await deriveED25519HardenedKey($, rt);
      }
      return $.key;
    }
    ed25519.deriveEd25519Path = deriveEd25519Path;
    var symmetric = {};
    Object.defineProperty(symmetric, "__esModule", {
      value: true
    });
    symmetric.deriveSymmetricPath = symmetric.deriveSymmetricHardenedKey = symmetric.getSymmetricMasterKeyFromSeed = void 0;
    const hmac_sha512_1$1 = hmac_sha512$1, SYMMETRIC_SEED = "Symmetric key seed";
    async function getSymmetricMasterKeyFromSeed(d) {
      const _ = await (0, hmac_sha512_1$1.hmac_sha512)(SYMMETRIC_SEED, d), $ = _.slice(32), j = _.slice(0, 32);
      return {
        key: $,
        chainCode: j
      };
    }
    symmetric.getSymmetricMasterKeyFromSeed = getSymmetricMasterKeyFromSeed;
    async function deriveSymmetricHardenedKey(d, _) {
      const $ = Buffer.concat([
        Buffer.alloc(1, 0),
        Buffer.from(_)
      ]), j = await (0, hmac_sha512_1$1.hmac_sha512)(d.chainCode, $), rt = j.slice(32), et = j.slice(0, 32);
      return {
        key: rt,
        chainCode: et
      };
    }
    symmetric.deriveSymmetricHardenedKey = deriveSymmetricHardenedKey;
    async function deriveSymmetricPath(d, _) {
      let $ = await getSymmetricMasterKeyFromSeed(d), j = [
        ..._
      ];
      for (; j.length > 0; ) {
        let rt = j[0];
        j = j.slice(1), $ = await deriveSymmetricHardenedKey($, rt);
      }
      return $.key;
    }
    symmetric.deriveSymmetricPath = deriveSymmetricPath;
    var mnemonics = {};
    Object.defineProperty(mnemonics, "__esModule", {
      value: true
    });
    mnemonics.deriveMnemonicsPath = mnemonics.deriveMnemonicHardenedKey = mnemonics.getMnemonicsMasterKeyFromSeed = void 0;
    const mnemonic_1 = mnemonic, hmac_sha512_1 = hmac_sha512$1, HARDENED_OFFSET = 2147483648, MNEMONICS_SEED = "TON Mnemonics HD seed";
    async function getMnemonicsMasterKeyFromSeed(d) {
      const _ = await (0, hmac_sha512_1.hmac_sha512)(MNEMONICS_SEED, d), $ = _.slice(0, 32), j = _.slice(32);
      return {
        key: $,
        chainCode: j
      };
    }
    mnemonics.getMnemonicsMasterKeyFromSeed = getMnemonicsMasterKeyFromSeed;
    async function deriveMnemonicHardenedKey(d, _) {
      if (_ >= HARDENED_OFFSET) throw Error("Key index must be less than offset");
      const $ = Buffer.alloc(4);
      $.writeUInt32BE(_ + HARDENED_OFFSET, 0);
      const j = Buffer.concat([
        Buffer.alloc(1, 0),
        d.key,
        $
      ]), rt = await (0, hmac_sha512_1.hmac_sha512)(d.chainCode, j), et = rt.slice(0, 32), st = rt.slice(32);
      return {
        key: et,
        chainCode: st
      };
    }
    mnemonics.deriveMnemonicHardenedKey = deriveMnemonicHardenedKey;
    async function deriveMnemonicsPath(d, _, $ = 24, j) {
      let rt = await getMnemonicsMasterKeyFromSeed(d), et = [
        ..._
      ];
      for (; et.length > 0; ) {
        let st = et[0];
        et = et.slice(1), rt = await deriveMnemonicHardenedKey(rt, st);
      }
      return await (0, mnemonic_1.mnemonicFromRandomSeed)(rt.key, $, j);
    }
    mnemonics.deriveMnemonicsPath = deriveMnemonicsPath;
    var hasRequiredDist;
    function requireDist() {
      return hasRequiredDist || (hasRequiredDist = 1, function(d) {
        Object.defineProperty(d, "__esModule", {
          value: true
        }), d.getMnemonicsMasterKeyFromSeed = d.deriveMnemonicHardenedKey = d.deriveMnemonicsPath = d.deriveSymmetricPath = d.deriveSymmetricHardenedKey = d.getSymmetricMasterKeyFromSeed = d.deriveEd25519Path = d.deriveED25519HardenedKey = d.getED25519MasterKeyFromSeed = d.signVerify = d.sign = d.keyPairFromSecretKey = d.keyPairFromSeed = d.openBox = d.sealBox = d.mnemonicWordList = d.mnemonicToHDSeed = d.mnemonicToSeed = d.mnemonicToWalletKey = d.mnemonicToPrivateKey = d.mnemonicValidate = d.mnemonicNew = d.newSecurePassphrase = d.newSecureWords = d.getSecureRandomNumber = d.getSecureRandomWords = d.getSecureRandomBytes = d.hmac_sha512 = d.pbkdf2_sha512 = d.sha512_sync = d.sha512 = d.sha256_sync = d.sha256 = void 0;
        var _ = sha256$7;
        Object.defineProperty(d, "sha256", {
          enumerable: true,
          get: function() {
            return _.sha256;
          }
        }), Object.defineProperty(d, "sha256_sync", {
          enumerable: true,
          get: function() {
            return _.sha256_sync;
          }
        });
        var $ = sha512$1;
        Object.defineProperty(d, "sha512", {
          enumerable: true,
          get: function() {
            return $.sha512;
          }
        }), Object.defineProperty(d, "sha512_sync", {
          enumerable: true,
          get: function() {
            return $.sha512_sync;
          }
        });
        var j = pbkdf2_sha512$1;
        Object.defineProperty(d, "pbkdf2_sha512", {
          enumerable: true,
          get: function() {
            return j.pbkdf2_sha512;
          }
        });
        var rt = hmac_sha512$1;
        Object.defineProperty(d, "hmac_sha512", {
          enumerable: true,
          get: function() {
            return rt.hmac_sha512;
          }
        });
        var et = getSecureRandom;
        Object.defineProperty(d, "getSecureRandomBytes", {
          enumerable: true,
          get: function() {
            return et.getSecureRandomBytes;
          }
        }), Object.defineProperty(d, "getSecureRandomWords", {
          enumerable: true,
          get: function() {
            return et.getSecureRandomWords;
          }
        }), Object.defineProperty(d, "getSecureRandomNumber", {
          enumerable: true,
          get: function() {
            return et.getSecureRandomNumber;
          }
        });
        var st = newSecureWords$1;
        Object.defineProperty(d, "newSecureWords", {
          enumerable: true,
          get: function() {
            return st.newSecureWords;
          }
        });
        var pt = requireNewSecurePassphrase();
        Object.defineProperty(d, "newSecurePassphrase", {
          enumerable: true,
          get: function() {
            return pt.newSecurePassphrase;
          }
        });
        var Et = mnemonic;
        Object.defineProperty(d, "mnemonicNew", {
          enumerable: true,
          get: function() {
            return Et.mnemonicNew;
          }
        }), Object.defineProperty(d, "mnemonicValidate", {
          enumerable: true,
          get: function() {
            return Et.mnemonicValidate;
          }
        }), Object.defineProperty(d, "mnemonicToPrivateKey", {
          enumerable: true,
          get: function() {
            return Et.mnemonicToPrivateKey;
          }
        }), Object.defineProperty(d, "mnemonicToWalletKey", {
          enumerable: true,
          get: function() {
            return Et.mnemonicToWalletKey;
          }
        }), Object.defineProperty(d, "mnemonicToSeed", {
          enumerable: true,
          get: function() {
            return Et.mnemonicToSeed;
          }
        }), Object.defineProperty(d, "mnemonicToHDSeed", {
          enumerable: true,
          get: function() {
            return Et.mnemonicToHDSeed;
          }
        });
        var Bt = wordlist;
        Object.defineProperty(d, "mnemonicWordList", {
          enumerable: true,
          get: function() {
            return Bt.wordlist;
          }
        });
        var St = nacl$7;
        Object.defineProperty(d, "sealBox", {
          enumerable: true,
          get: function() {
            return St.sealBox;
          }
        }), Object.defineProperty(d, "openBox", {
          enumerable: true,
          get: function() {
            return St.openBox;
          }
        });
        var $t = nacl$7;
        Object.defineProperty(d, "keyPairFromSeed", {
          enumerable: true,
          get: function() {
            return $t.keyPairFromSeed;
          }
        }), Object.defineProperty(d, "keyPairFromSecretKey", {
          enumerable: true,
          get: function() {
            return $t.keyPairFromSecretKey;
          }
        }), Object.defineProperty(d, "sign", {
          enumerable: true,
          get: function() {
            return $t.sign;
          }
        }), Object.defineProperty(d, "signVerify", {
          enumerable: true,
          get: function() {
            return $t.signVerify;
          }
        });
        var kt = ed25519;
        Object.defineProperty(d, "getED25519MasterKeyFromSeed", {
          enumerable: true,
          get: function() {
            return kt.getED25519MasterKeyFromSeed;
          }
        }), Object.defineProperty(d, "deriveED25519HardenedKey", {
          enumerable: true,
          get: function() {
            return kt.deriveED25519HardenedKey;
          }
        }), Object.defineProperty(d, "deriveEd25519Path", {
          enumerable: true,
          get: function() {
            return kt.deriveEd25519Path;
          }
        });
        var Tt = symmetric;
        Object.defineProperty(d, "getSymmetricMasterKeyFromSeed", {
          enumerable: true,
          get: function() {
            return Tt.getSymmetricMasterKeyFromSeed;
          }
        }), Object.defineProperty(d, "deriveSymmetricHardenedKey", {
          enumerable: true,
          get: function() {
            return Tt.deriveSymmetricHardenedKey;
          }
        }), Object.defineProperty(d, "deriveSymmetricPath", {
          enumerable: true,
          get: function() {
            return Tt.deriveSymmetricPath;
          }
        });
        var Pt = mnemonics;
        Object.defineProperty(d, "deriveMnemonicsPath", {
          enumerable: true,
          get: function() {
            return Pt.deriveMnemonicsPath;
          }
        }), Object.defineProperty(d, "deriveMnemonicHardenedKey", {
          enumerable: true,
          get: function() {
            return Pt.deriveMnemonicHardenedKey;
          }
        }), Object.defineProperty(d, "getMnemonicsMasterKeyFromSeed", {
          enumerable: true,
          get: function() {
            return Pt.getMnemonicsMasterKeyFromSeed;
          }
        });
      }(dist$1)), dist$1;
    }
    var hasRequiredWonderCalculator;
    function requireWonderCalculator() {
      if (hasRequiredWonderCalculator) return wonderCalculator;
      hasRequiredWonderCalculator = 1, Object.defineProperty(wonderCalculator, "__esModule", {
        value: true
      }), wonderCalculator.wonderCalculator = void 0;
      const d = requireBitString(), _ = CellType$1, $ = LevelMask$1, j = exoticPruned$1, rt = requireExoticMerkleProof(), et = descriptor, st = requireDist(), pt = exoticMerkleUpdate$1, Et = exoticLibrary$1;
      function Bt(St, $t, kt) {
        let Tt, Pt = null;
        if (St === _.CellType.Ordinary) {
          let Kt = 0;
          for (let ar of kt) Kt = Kt | ar.mask.value;
          Tt = new $.LevelMask(Kt);
        } else if (St === _.CellType.PrunedBranch) Pt = (0, j.exoticPruned)($t, kt), Tt = new $.LevelMask(Pt.mask);
        else if (St === _.CellType.MerkleProof) (0, rt.exoticMerkleProof)($t, kt), Tt = new $.LevelMask(kt[0].mask.value >> 1);
        else if (St === _.CellType.MerkleUpdate) (0, pt.exoticMerkleUpdate)($t, kt), Tt = new $.LevelMask((kt[0].mask.value | kt[1].mask.value) >> 1);
        else if (St === _.CellType.Library) (0, Et.exoticLibrary)($t, kt), Tt = new $.LevelMask();
        else throw new Error("Unsupported exotic type");
        let It = [], jt = [], Dt = St === _.CellType.PrunedBranch ? 1 : Tt.hashCount, Ft = Tt.hashCount - Dt;
        for (let Kt = 0, ar = 0; Kt <= Tt.level; Kt++) {
          if (!Tt.isSignificant(Kt)) continue;
          if (ar < Ft) {
            ar++;
            continue;
          }
          let sr;
          if (ar === Ft) {
            if (!(Kt === 0 || St === _.CellType.PrunedBranch)) throw Error("Invalid");
            sr = $t;
          } else {
            if (!(Kt !== 0 && St !== _.CellType.PrunedBranch)) throw Error("Invalid: " + Kt + ", " + St);
            sr = new d.BitString(jt[ar - Ft - 1], 0, 256);
          }
          let er = 0;
          for (let nt of kt) {
            let it;
            St == _.CellType.MerkleProof || St == _.CellType.MerkleUpdate ? it = nt.depth(Kt + 1) : it = nt.depth(Kt), er = Math.max(er, it);
          }
          kt.length > 0 && er++;
          let Ut = (0, et.getRepr)($t, sr, kt, Kt, Tt.apply(Kt).value, St), xt = (0, st.sha256_sync)(Ut), tt = ar - Ft;
          It[tt] = er, jt[tt] = xt, ar++;
        }
        let Lt = [], Zt = [];
        if (Pt) for (let Kt = 0; Kt < 4; Kt++) {
          const { hashIndex: ar } = Tt.apply(Kt), { hashIndex: sr } = Tt;
          ar !== sr ? (Lt.push(Pt.pruned[ar].hash), Zt.push(Pt.pruned[ar].depth)) : (Lt.push(jt[0]), Zt.push(It[0]));
        }
        else for (let Kt = 0; Kt < 4; Kt++) Lt.push(jt[Tt.apply(Kt).hashIndex]), Zt.push(It[Tt.apply(Kt).hashIndex]);
        return {
          mask: Tt,
          hashes: Lt,
          depths: Zt
        };
      }
      return wonderCalculator.wonderCalculator = Bt, wonderCalculator;
    }
    var serialization = {}, topologicalSort$1 = {};
    Object.defineProperty(topologicalSort$1, "__esModule", {
      value: true
    });
    topologicalSort$1.topologicalSort = void 0;
    function topologicalSort(d) {
      let _ = [
        d
      ], $ = /* @__PURE__ */ new Map(), j = /* @__PURE__ */ new Set(), rt = [];
      for (; _.length > 0; ) {
        const Bt = [
          ..._
        ];
        _ = [];
        for (let St of Bt) {
          const $t = St.hash().toString("hex");
          if (!$.has($t)) {
            j.add($t), $.set($t, {
              cell: St,
              refs: St.refs.map((kt) => kt.hash().toString("hex"))
            });
            for (let kt of St.refs) _.push(kt);
          }
        }
      }
      let et = /* @__PURE__ */ new Set();
      function st(Bt) {
        if (!j.has(Bt)) return;
        if (et.has(Bt)) throw Error("Not a DAG");
        et.add(Bt);
        let St = $.get(Bt).refs;
        for (let $t = St.length - 1; $t >= 0; $t--) st(St[$t]);
        rt.push(Bt), et.delete(Bt), j.delete(Bt);
      }
      for (; j.size > 0; ) {
        const Bt = Array.from(j)[0];
        st(Bt);
      }
      let pt = /* @__PURE__ */ new Map();
      for (let Bt = 0; Bt < rt.length; Bt++) pt.set(rt[rt.length - Bt - 1], Bt);
      let Et = [];
      for (let Bt = rt.length - 1; Bt >= 0; Bt--) {
        let St = rt[Bt];
        const $t = $.get(St);
        Et.push({
          cell: $t.cell,
          refs: $t.refs.map((kt) => pt.get(kt))
        });
      }
      return Et;
    }
    topologicalSort$1.topologicalSort = topologicalSort;
    var bitsForNumber$1 = {};
    Object.defineProperty(bitsForNumber$1, "__esModule", {
      value: true
    });
    bitsForNumber$1.bitsForNumber = void 0;
    function bitsForNumber(d, _) {
      let $ = BigInt(d);
      if (_ === "int") return $ === 0n || $ === -1n ? 1 : ($ > 0 ? $ : -$).toString(2).length + 1;
      if (_ === "uint") {
        if ($ < 0) throw Error(`value is negative. Got ${d}`);
        return $.toString(2).length;
      } else throw Error(`invalid mode. Got ${_}`);
    }
    bitsForNumber$1.bitsForNumber = bitsForNumber;
    var crc32c$4 = {};
    Object.defineProperty(crc32c$4, "__esModule", {
      value: true
    });
    crc32c$4.crc32c = void 0;
    const POLY = 2197175160;
    function crc32c$3(d) {
      let _ = -1;
      for (let j = 0; j < d.length; j++) _ ^= d[j], _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1, _ = _ & 1 ? _ >>> 1 ^ POLY : _ >>> 1;
      _ = _ ^ 4294967295;
      let $ = Buffer.alloc(4);
      return $.writeInt32LE(_), $;
    }
    crc32c$4.crc32c = crc32c$3;
    var hasRequiredSerialization;
    function requireSerialization() {
      if (hasRequiredSerialization) return serialization;
      hasRequiredSerialization = 1, Object.defineProperty(serialization, "__esModule", {
        value: true
      }), serialization.serializeBoc = serialization.deserializeBoc = serialization.parseBoc = void 0;
      const d = BitReader$1, _ = requireBitString(), $ = requireCell(), j = topologicalSort$1, rt = bitsForNumber$1, et = requireBitBuilder(), st = descriptor, pt = requirePaddedBits(), Et = crc32c$4;
      function Bt(Dt) {
        return St(Dt & 7);
      }
      function St(Dt) {
        let Ot = 0;
        for (let Ft = 0; Ft < 3; Ft++) Ot += Dt & 1, Dt = Dt >> 1;
        return Ot + 1;
      }
      function $t(Dt, Ot) {
        const Ft = Dt.loadUint(8), Lt = Ft % 8, Zt = !!(Ft & 8), Kt = Dt.loadUint(8), ar = Math.ceil(Kt / 2), sr = !!(Kt % 2), er = Ft >> 5, Ut = (Ft & 16) != 0, tt = Ut ? Bt(er) * 32 : 0, nt = Ut ? Bt(er) * 2 : 0;
        Dt.skip(tt * 8), Dt.skip(nt * 8);
        let it = _.BitString.EMPTY;
        ar > 0 && (sr ? it = Dt.loadPaddedBits(ar * 8) : it = Dt.loadBits(ar * 8));
        let at = [];
        for (let ct = 0; ct < Lt; ct++) at.push(Dt.loadUint(Ot * 8));
        return {
          bits: it,
          refs: at,
          exotic: Zt
        };
      }
      function kt(Dt, Ot) {
        return 2 + Math.ceil(Dt.bits.length / 8) + Dt.refs.length * Ot;
      }
      function Tt(Dt) {
        let Ot = new d.BitReader(new _.BitString(Dt, 0, Dt.length * 8)), Ft = Ot.loadUint(32);
        if (Ft === 1761568243) {
          let Lt = Ot.loadUint(8), Zt = Ot.loadUint(8), Kt = Ot.loadUint(Lt * 8), ar = Ot.loadUint(Lt * 8), sr = Ot.loadUint(Lt * 8), er = Ot.loadUint(Zt * 8), Ut = Ot.loadBuffer(Kt * Zt), xt = Ot.loadBuffer(er);
          return {
            size: Lt,
            offBytes: Zt,
            cells: Kt,
            roots: ar,
            absent: sr,
            totalCellSize: er,
            index: Ut,
            cellData: xt,
            root: [
              0
            ]
          };
        } else if (Ft === 2898503464) {
          let Lt = Ot.loadUint(8), Zt = Ot.loadUint(8), Kt = Ot.loadUint(Lt * 8), ar = Ot.loadUint(Lt * 8), sr = Ot.loadUint(Lt * 8), er = Ot.loadUint(Zt * 8), Ut = Ot.loadBuffer(Kt * Zt), xt = Ot.loadBuffer(er), tt = Ot.loadBuffer(4);
          if (!(0, Et.crc32c)(Dt.subarray(0, Dt.length - 4)).equals(tt)) throw Error("Invalid CRC32C");
          return {
            size: Lt,
            offBytes: Zt,
            cells: Kt,
            roots: ar,
            absent: sr,
            totalCellSize: er,
            index: Ut,
            cellData: xt,
            root: [
              0
            ]
          };
        } else if (Ft === 3052313714) {
          let Lt = Ot.loadUint(1), Zt = Ot.loadUint(1);
          Ot.loadUint(1), Ot.loadUint(2);
          let Kt = Ot.loadUint(3), ar = Ot.loadUint(8), sr = Ot.loadUint(Kt * 8), er = Ot.loadUint(Kt * 8), Ut = Ot.loadUint(Kt * 8), xt = Ot.loadUint(ar * 8), tt = [];
          for (let at = 0; at < er; at++) tt.push(Ot.loadUint(Kt * 8));
          let nt = null;
          Lt && (nt = Ot.loadBuffer(sr * ar));
          let it = Ot.loadBuffer(xt);
          if (Zt) {
            let at = Ot.loadBuffer(4);
            if (!(0, Et.crc32c)(Dt.subarray(0, Dt.length - 4)).equals(at)) throw Error("Invalid CRC32C");
          }
          return {
            size: Kt,
            offBytes: ar,
            cells: sr,
            roots: er,
            absent: Ut,
            totalCellSize: xt,
            index: nt,
            cellData: it,
            root: tt
          };
        } else throw Error("Invalid magic");
      }
      serialization.parseBoc = Tt;
      function Pt(Dt) {
        let Ot = Tt(Dt), Ft = new d.BitReader(new _.BitString(Ot.cellData, 0, Ot.cellData.length * 8)), Lt = [];
        for (let Kt = 0; Kt < Ot.cells; Kt++) {
          let ar = $t(Ft, Ot.size);
          Lt.push({
            ...ar,
            result: null
          });
        }
        for (let Kt = Lt.length - 1; Kt >= 0; Kt--) {
          if (Lt[Kt].result) throw Error("Impossible");
          let ar = [];
          for (let sr of Lt[Kt].refs) {
            if (!Lt[sr].result) throw Error("Invalid BOC file");
            ar.push(Lt[sr].result);
          }
          Lt[Kt].result = new $.Cell({
            bits: Lt[Kt].bits,
            refs: ar,
            exotic: Lt[Kt].exotic
          });
        }
        let Zt = [];
        for (let Kt = 0; Kt < Ot.root.length; Kt++) Zt.push(Lt[Ot.root[Kt]].result);
        return Zt;
      }
      serialization.deserializeBoc = Pt;
      function It(Dt, Ot, Ft, Lt) {
        let Zt = (0, st.getRefsDescriptor)(Dt.refs, Dt.mask.value, Dt.type), Kt = (0, st.getBitsDescriptor)(Dt.bits);
        Lt.writeUint(Zt, 8), Lt.writeUint(Kt, 8), Lt.writeBuffer((0, pt.bitsToPaddedBuffer)(Dt.bits));
        for (let ar of Ot) Lt.writeUint(ar, Ft * 8);
      }
      function jt(Dt, Ot) {
        let Ft = (0, j.topologicalSort)(Dt), Lt = Ft.length, Zt = Ot.idx, Kt = Ot.crc32, ar = false, sr = 0, er = Math.max(Math.ceil((0, rt.bitsForNumber)(Lt, "uint") / 8), 1), Ut = 0, xt = [];
        for (let ct of Ft) {
          let Mt = kt(ct.cell, er);
          Ut += Mt, xt.push(Ut);
        }
        let tt = Math.max(Math.ceil((0, rt.bitsForNumber)(Ut, "uint") / 8), 1), nt = (6 + 3 * er + tt + 1 * er + (Zt ? Lt * tt : 0) + Ut + (Kt ? 4 : 0)) * 8, it = new et.BitBuilder(nt);
        if (it.writeUint(3052313714, 32), it.writeBit(Zt), it.writeBit(Kt), it.writeBit(ar), it.writeUint(sr, 2), it.writeUint(er, 3), it.writeUint(tt, 8), it.writeUint(Lt, er * 8), it.writeUint(1, er * 8), it.writeUint(0, er * 8), it.writeUint(Ut, tt * 8), it.writeUint(0, er * 8), Zt) for (let ct = 0; ct < Lt; ct++) it.writeUint(xt[ct], tt * 8);
        for (let ct = 0; ct < Lt; ct++) It(Ft[ct].cell, Ft[ct].refs, er, it);
        if (Kt) {
          let ct = (0, Et.crc32c)(it.buffer());
          it.writeBuffer(ct);
        }
        let at = it.buffer();
        if (at.length !== nt / 8) throw Error("Internal error");
        return at;
      }
      return serialization.serializeBoc = jt, serialization;
    }
    var hasRequiredCell;
    function requireCell() {
      if (hasRequiredCell) return Cell$u;
      hasRequiredCell = 1;
      var d = commonjsGlobal && commonjsGlobal.__importDefault || function(kt) {
        return kt && kt.__esModule ? kt : {
          default: kt
        };
      }, _;
      Object.defineProperty(Cell$u, "__esModule", {
        value: true
      }), Cell$u.Cell = void 0;
      const $ = d(symbol_inspect), j = requireBitString(), rt = CellType$1, et = requireSlice(), st = requireResolveExotic(), pt = requireWonderCalculator(), Et = requireSerialization(), Bt = BitReader$1, St = requireBuilder();
      class $t {
        static fromBoc(Tt) {
          return (0, Et.deserializeBoc)(Tt);
        }
        static fromBase64(Tt) {
          let Pt = $t.fromBoc(Buffer.from(Tt, "base64"));
          if (Pt.length !== 1) throw new Error("Deserialized more than one cell");
          return Pt[0];
        }
        static fromHex(Tt) {
          let Pt = $t.fromBoc(Buffer.from(Tt, "hex"));
          if (Pt.length !== 1) throw new Error("Deserialized more than one cell");
          return Pt[0];
        }
        constructor(Tt) {
          this._hashes = [], this._depths = [], this.beginParse = (Lt = false) => {
            if (this.isExotic && !Lt) throw new Error("Exotic cells cannot be parsed");
            return new et.Slice(new Bt.BitReader(this.bits), this.refs);
          }, this.hash = (Lt = 3) => this._hashes[Math.min(this._hashes.length - 1, Lt)], this.depth = (Lt = 3) => this._depths[Math.min(this._depths.length - 1, Lt)], this.level = () => this.mask.level, this.equals = (Lt) => this.hash().equals(Lt.hash()), this[_] = () => this.toString();
          let Pt = j.BitString.EMPTY;
          Tt && Tt.bits && (Pt = Tt.bits);
          let It = [];
          Tt && Tt.refs && (It = [
            ...Tt.refs
          ]);
          let jt, Dt, Ot, Ft = rt.CellType.Ordinary;
          if (Tt && Tt.exotic) {
            let Lt = (0, st.resolveExotic)(Pt, It), Zt = (0, pt.wonderCalculator)(Lt.type, Pt, It);
            Ot = Zt.mask, Dt = Zt.depths, jt = Zt.hashes, Ft = Lt.type;
          } else {
            if (It.length > 4) throw new Error("Invalid number of references");
            if (Pt.length > 1023) throw new Error(`Bits overflow: ${Pt.length} > 1023`);
            let Lt = (0, pt.wonderCalculator)(rt.CellType.Ordinary, Pt, It);
            Ot = Lt.mask, Dt = Lt.depths, jt = Lt.hashes, Ft = rt.CellType.Ordinary;
          }
          this.type = Ft, this.bits = Pt, this.refs = It, this.mask = Ot, this._depths = Dt, this._hashes = jt, Object.freeze(this), Object.freeze(this.refs), Object.freeze(this.bits), Object.freeze(this.mask), Object.freeze(this._depths), Object.freeze(this._hashes);
        }
        get isExotic() {
          return this.type !== rt.CellType.Ordinary;
        }
        toBoc(Tt) {
          let Pt = Tt && Tt.idx !== null && Tt.idx !== void 0 ? Tt.idx : false, It = Tt && Tt.crc32 !== null && Tt.crc32 !== void 0 ? Tt.crc32 : true;
          return (0, Et.serializeBoc)(this, {
            idx: Pt,
            crc32: It
          });
        }
        toString(Tt) {
          let Pt = Tt || "", It = "x";
          this.isExotic && (this.type === rt.CellType.MerkleProof ? It = "p" : this.type === rt.CellType.MerkleUpdate ? It = "u" : this.type === rt.CellType.PrunedBranch && (It = "p"));
          let jt = Pt + (this.isExotic ? It : "x") + "{" + this.bits.toString() + "}";
          for (let Dt in this.refs) {
            const Ot = this.refs[Dt];
            jt += `
` + Ot.toString(Pt + " ");
          }
          return jt;
        }
        asSlice() {
          return this.beginParse();
        }
        asBuilder() {
          return (0, St.beginCell)().storeSlice(this.asSlice());
        }
      }
      return Cell$u.Cell = $t, _ = $.default, $t.EMPTY = new $t(), Cell$u;
    }
    var hasRequiredBuilder;
    function requireBuilder() {
      if (hasRequiredBuilder) return Builder;
      hasRequiredBuilder = 1, Object.defineProperty(Builder, "__esModule", {
        value: true
      }), Builder.Builder = Builder.beginCell = void 0;
      const d = requireBitBuilder(), _ = requireCell(), $ = requireStrings();
      function j() {
        return new rt();
      }
      Builder.beginCell = j;
      let rt = class no {
        constructor() {
          this._bits = new d.BitBuilder(), this._refs = [];
        }
        get bits() {
          return this._bits.length;
        }
        get refs() {
          return this._refs.length;
        }
        get availableBits() {
          return 1023 - this.bits;
        }
        get availableRefs() {
          return 4 - this.refs;
        }
        storeBit(st) {
          return this._bits.writeBit(st), this;
        }
        storeBits(st) {
          return this._bits.writeBits(st), this;
        }
        storeBuffer(st, pt) {
          if (pt != null && st.length !== pt) throw Error(`Buffer length ${st.length} is not equal to ${pt}`);
          return this._bits.writeBuffer(st), this;
        }
        storeMaybeBuffer(st, pt) {
          return st !== null ? (this.storeBit(1), this.storeBuffer(st, pt)) : this.storeBit(0), this;
        }
        storeUint(st, pt) {
          return this._bits.writeUint(st, pt), this;
        }
        storeMaybeUint(st, pt) {
          return st != null ? (this.storeBit(1), this.storeUint(st, pt)) : this.storeBit(0), this;
        }
        storeInt(st, pt) {
          return this._bits.writeInt(st, pt), this;
        }
        storeMaybeInt(st, pt) {
          return st != null ? (this.storeBit(1), this.storeInt(st, pt)) : this.storeBit(0), this;
        }
        storeVarUint(st, pt) {
          return this._bits.writeVarUint(st, pt), this;
        }
        storeMaybeVarUint(st, pt) {
          return st != null ? (this.storeBit(1), this.storeVarUint(st, pt)) : this.storeBit(0), this;
        }
        storeVarInt(st, pt) {
          return this._bits.writeVarInt(st, pt), this;
        }
        storeMaybeVarInt(st, pt) {
          return st != null ? (this.storeBit(1), this.storeVarInt(st, pt)) : this.storeBit(0), this;
        }
        storeCoins(st) {
          return this._bits.writeCoins(st), this;
        }
        storeMaybeCoins(st) {
          return st != null ? (this.storeBit(1), this.storeCoins(st)) : this.storeBit(0), this;
        }
        storeAddress(st) {
          return this._bits.writeAddress(st), this;
        }
        storeRef(st) {
          if (this._refs.length >= 4) throw new Error("Too many references");
          if (st instanceof _.Cell) this._refs.push(st);
          else if (st instanceof no) this._refs.push(st.endCell());
          else throw new Error("Invalid argument");
          return this;
        }
        storeMaybeRef(st) {
          return st ? (this.storeBit(1), this.storeRef(st)) : this.storeBit(0), this;
        }
        storeSlice(st) {
          let pt = st.clone();
          for (pt.remainingBits > 0 && this.storeBits(pt.loadBits(pt.remainingBits)); pt.remainingRefs > 0; ) this.storeRef(pt.loadRef());
          return this;
        }
        storeMaybeSlice(st) {
          return st ? (this.storeBit(1), this.storeSlice(st)) : this.storeBit(0), this;
        }
        storeBuilder(st) {
          return this.storeSlice(st.endCell().beginParse());
        }
        storeMaybeBuilder(st) {
          return st ? (this.storeBit(1), this.storeBuilder(st)) : this.storeBit(0), this;
        }
        storeWritable(st) {
          return typeof st == "object" ? st.writeTo(this) : st(this), this;
        }
        storeMaybeWritable(st) {
          return st ? (this.storeBit(1), this.storeWritable(st)) : this.storeBit(0), this;
        }
        store(st) {
          return this.storeWritable(st), this;
        }
        storeStringTail(st) {
          return (0, $.writeString)(st, this), this;
        }
        storeMaybeStringTail(st) {
          return st != null ? (this.storeBit(1), (0, $.writeString)(st, this)) : this.storeBit(0), this;
        }
        storeStringRefTail(st) {
          return this.storeRef(j().storeStringTail(st)), this;
        }
        storeMaybeStringRefTail(st) {
          return st != null ? (this.storeBit(1), this.storeStringRefTail(st)) : this.storeBit(0), this;
        }
        storeDict(st, pt, Et) {
          return st ? st.store(this, pt, Et) : this.storeBit(0), this;
        }
        storeDictDirect(st, pt, Et) {
          return st.storeDirect(this, pt, Et), this;
        }
        endCell(st) {
          return new _.Cell({
            bits: this._bits.build(),
            refs: this._refs,
            exotic: st == null ? void 0 : st.exotic
          });
        }
        asCell() {
          return this.endCell();
        }
        asSlice() {
          return this.endCell().beginParse();
        }
      };
      return Builder.Builder = rt, Builder;
    }
    var StateInit = {}, SimpleLibrary = {};
    Object.defineProperty(SimpleLibrary, "__esModule", {
      value: true
    });
    SimpleLibrary.SimpleLibraryValue = SimpleLibrary.storeSimpleLibrary = SimpleLibrary.loadSimpleLibrary = void 0;
    function loadSimpleLibrary(d) {
      return {
        public: d.loadBit(),
        root: d.loadRef()
      };
    }
    SimpleLibrary.loadSimpleLibrary = loadSimpleLibrary;
    function storeSimpleLibrary(d) {
      return (_) => {
        _.storeBit(d.public), _.storeRef(d.root);
      };
    }
    SimpleLibrary.storeSimpleLibrary = storeSimpleLibrary;
    SimpleLibrary.SimpleLibraryValue = {
      serialize(d, _) {
        storeSimpleLibrary(d)(_);
      },
      parse(d) {
        return loadSimpleLibrary(d);
      }
    };
    var TickTock = {};
    Object.defineProperty(TickTock, "__esModule", {
      value: true
    });
    TickTock.storeTickTock = TickTock.loadTickTock = void 0;
    function loadTickTock(d) {
      return {
        tick: d.loadBit(),
        tock: d.loadBit()
      };
    }
    TickTock.loadTickTock = loadTickTock;
    function storeTickTock(d) {
      return (_) => {
        _.storeBit(d.tick), _.storeBit(d.tock);
      };
    }
    TickTock.storeTickTock = storeTickTock;
    Object.defineProperty(StateInit, "__esModule", {
      value: true
    });
    StateInit.storeStateInit = StateInit.loadStateInit = void 0;
    const Dictionary_1$3 = requireDictionary(), SimpleLibrary_1 = SimpleLibrary, TickTock_1 = TickTock;
    function loadStateInit(d) {
      let _;
      d.loadBit() && (_ = d.loadUint(5));
      let $;
      d.loadBit() && ($ = (0, TickTock_1.loadTickTock)(d));
      let j = d.loadMaybeRef(), rt = d.loadMaybeRef(), et = d.loadDict(Dictionary_1$3.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);
      return et.size === 0 && (et = void 0), {
        splitDepth: _,
        special: $,
        code: j,
        data: rt,
        libraries: et
      };
    }
    StateInit.loadStateInit = loadStateInit;
    function storeStateInit(d) {
      return (_) => {
        d.splitDepth !== null && d.splitDepth !== void 0 ? (_.storeBit(true), _.storeUint(d.splitDepth, 5)) : _.storeBit(false), d.special !== null && d.special !== void 0 ? (_.storeBit(true), _.store((0, TickTock_1.storeTickTock)(d.special))) : _.storeBit(false), _.storeMaybeRef(d.code), _.storeMaybeRef(d.data), _.storeDict(d.libraries);
      };
    }
    StateInit.storeStateInit = storeStateInit;
    Object.defineProperty(contractAddress$1, "__esModule", {
      value: true
    });
    contractAddress$1.contractAddress = void 0;
    const Builder_1$9 = requireBuilder(), StateInit_1$3 = StateInit, Address_1$2 = Address$n;
    function contractAddress(d, _) {
      let $ = (0, Builder_1$9.beginCell)().store((0, StateInit_1$3.storeStateInit)(_)).endCell().hash();
      return new Address_1$2.Address(d, $);
    }
    contractAddress$1.contractAddress = contractAddress;
    var tuple = {};
    Object.defineProperty(tuple, "__esModule", {
      value: true
    });
    tuple.parseTuple = tuple.serializeTuple = void 0;
    const Builder_1$8 = requireBuilder(), INT64_MIN = BigInt("-9223372036854775808"), INT64_MAX = BigInt("9223372036854775807");
    function serializeTupleItem(d, _) {
      if (d.type === "null") _.storeUint(0, 8);
      else if (d.type === "int") d.value <= INT64_MAX && d.value >= INT64_MIN ? (_.storeUint(1, 8), _.storeInt(d.value, 64)) : (_.storeUint(256, 15), _.storeInt(d.value, 257));
      else if (d.type === "nan") _.storeInt(767, 16);
      else if (d.type === "cell") _.storeUint(3, 8), _.storeRef(d.cell);
      else if (d.type === "slice") _.storeUint(4, 8), _.storeUint(0, 10), _.storeUint(d.cell.bits.length, 10), _.storeUint(0, 3), _.storeUint(d.cell.refs.length, 3), _.storeRef(d.cell);
      else if (d.type === "builder") _.storeUint(5, 8), _.storeRef(d.cell);
      else if (d.type === "tuple") {
        let $ = null, j = null;
        for (let rt = 0; rt < d.items.length; rt++) {
          let et = $;
          $ = j, j = et, rt > 1 && ($ = (0, Builder_1$8.beginCell)().storeRef(j).storeRef($).endCell());
          let st = (0, Builder_1$8.beginCell)();
          serializeTupleItem(d.items[rt], st), j = st.endCell();
        }
        _.storeUint(7, 8), _.storeUint(d.items.length, 16), $ && _.storeRef($), j && _.storeRef(j);
      } else throw Error("Invalid value");
    }
    function parseStackItem$1(d) {
      let _ = d.loadUint(8);
      if (_ === 0) return {
        type: "null"
      };
      if (_ === 1) return {
        type: "int",
        value: d.loadIntBig(64)
      };
      if (_ === 2) return d.loadUint(7) === 0 ? {
        type: "int",
        value: d.loadIntBig(257)
      } : (d.loadBit(), {
        type: "nan"
      });
      if (_ === 3) return {
        type: "cell",
        cell: d.loadRef()
      };
      if (_ === 4) {
        let $ = d.loadUint(10), j = d.loadUint(10), rt = d.loadUint(3), et = d.loadUint(3), st = d.loadRef().beginParse();
        st.skip($);
        let pt = st.loadBits(j - $), Et = (0, Builder_1$8.beginCell)().storeBits(pt);
        if (rt < et) {
          for (let Bt = 0; Bt < rt; Bt++) st.loadRef();
          for (let Bt = 0; Bt < et - rt; Bt++) Et.storeRef(st.loadRef());
        }
        return {
          type: "slice",
          cell: Et.endCell()
        };
      } else {
        if (_ === 5) return {
          type: "builder",
          cell: d.loadRef()
        };
        if (_ === 7) {
          let $ = d.loadUint(16), j = [];
          if ($ > 1) {
            let rt = d.loadRef().beginParse(), et = d.loadRef().beginParse();
            j.unshift(parseStackItem$1(et));
            for (let st = 0; st < $ - 2; st++) {
              let pt = rt;
              rt = pt.loadRef().beginParse(), et = pt.loadRef().beginParse(), j.unshift(parseStackItem$1(et));
            }
            j.unshift(parseStackItem$1(rt));
          } else $ === 1 && j.push(parseStackItem$1(d.loadRef().beginParse()));
          return {
            type: "tuple",
            items: j
          };
        } else throw Error("Unsupported stack item");
      }
    }
    function serializeTupleTail(d, _) {
      if (d.length > 0) {
        let $ = (0, Builder_1$8.beginCell)();
        serializeTupleTail(d.slice(0, d.length - 1), $), _.storeRef($.endCell()), serializeTupleItem(d[d.length - 1], _);
      }
    }
    function serializeTuple(d) {
      let _ = (0, Builder_1$8.beginCell)();
      _.storeUint(d.length, 24);
      let $ = [
        ...d
      ];
      return serializeTupleTail($, _), _.endCell();
    }
    tuple.serializeTuple = serializeTuple;
    function parseTuple(d) {
      let _ = [], $ = d.beginParse(), j = $.loadUint(24);
      for (let rt = 0; rt < j; rt++) {
        let et = $.loadRef();
        _.unshift(parseStackItem$1($)), $ = et.beginParse();
      }
      return _;
    }
    tuple.parseTuple = parseTuple;
    var reader = {};
    Object.defineProperty(reader, "__esModule", {
      value: true
    });
    reader.TupleReader = void 0;
    class TupleReader {
      constructor(_) {
        this.items = [
          ..._
        ];
      }
      get remaining() {
        return this.items.length;
      }
      peek() {
        if (this.items.length === 0) throw Error("EOF");
        return this.items[0];
      }
      pop() {
        if (this.items.length === 0) throw Error("EOF");
        let _ = this.items[0];
        return this.items.splice(0, 1), _;
      }
      skip(_ = 1) {
        for (let $ = 0; $ < _; $++) this.pop();
        return this;
      }
      readBigNumber() {
        let _ = this.pop();
        if (_.type !== "int") throw Error("Not a number");
        return _.value;
      }
      readBigNumberOpt() {
        let _ = this.pop();
        if (_.type === "null") return null;
        if (_.type !== "int") throw Error("Not a number");
        return _.value;
      }
      readNumber() {
        return Number(this.readBigNumber());
      }
      readNumberOpt() {
        let _ = this.readBigNumberOpt();
        return _ !== null ? Number(_) : null;
      }
      readBoolean() {
        return this.readNumber() !== 0;
      }
      readBooleanOpt() {
        let _ = this.readNumberOpt();
        return _ !== null ? _ !== 0 : null;
      }
      readAddress() {
        let _ = this.readCell().beginParse().loadAddress();
        if (_ !== null) return _;
        throw Error("Not an address");
      }
      readAddressOpt() {
        let _ = this.readCellOpt();
        return _ !== null ? _.beginParse().loadMaybeAddress() : null;
      }
      readCell() {
        let _ = this.pop();
        if (_.type !== "cell" && _.type !== "slice" && _.type !== "builder") throw Error("Not a cell: " + _.type);
        return _.cell;
      }
      readCellOpt() {
        let _ = this.pop();
        if (_.type === "null") return null;
        if (_.type !== "cell" && _.type !== "slice" && _.type !== "builder") throw Error("Not a cell");
        return _.cell;
      }
      readTuple() {
        let _ = this.pop();
        if (_.type !== "tuple") throw Error("Not a tuple");
        return new TupleReader(_.items);
      }
      readTupleOpt() {
        let _ = this.pop();
        if (_.type === "null") return null;
        if (_.type !== "tuple") throw Error("Not a tuple");
        return new TupleReader(_.items);
      }
      static readLispList(_) {
        const $ = [];
        let j = _;
        for (; j !== null; ) {
          var rt = j.pop();
          if (j.items.length === 0 || j.items[0].type !== "tuple" && j.items[0].type !== "null") throw Error("Lisp list consists only from (any, tuple) elements and ends with null");
          j = j.readTupleOpt(), $.push(rt);
        }
        return $;
      }
      readLispListDirect() {
        return this.items.length === 1 && this.items[0].type === "null" ? [] : TupleReader.readLispList(this);
      }
      readLispList() {
        return TupleReader.readLispList(this.readTupleOpt());
      }
      readBuffer() {
        let _ = this.readCell().beginParse();
        if (_.remainingRefs !== 0 || _.remainingBits % 8 !== 0) throw Error("Not a buffer");
        return _.loadBuffer(_.remainingBits / 8);
      }
      readBufferOpt() {
        let _ = this.readCellOpt();
        if (_ !== null) {
          let $ = _.beginParse();
          if ($.remainingRefs !== 0 || $.remainingBits % 8 !== 0) throw Error("Not a buffer");
          return $.loadBuffer($.remainingBits / 8);
        } else return null;
      }
      readString() {
        return this.readCell().beginParse().loadStringTail();
      }
      readStringOpt() {
        let _ = this.readCellOpt();
        return _ !== null ? _.beginParse().loadStringTail() : null;
      }
    }
    reader.TupleReader = TupleReader;
    var builder = {};
    Object.defineProperty(builder, "__esModule", {
      value: true
    });
    builder.TupleBuilder = void 0;
    const Builder_1$7 = requireBuilder(), Cell_1$3 = requireCell(), Slice_1$1 = requireSlice();
    class TupleBuilder {
      constructor() {
        this._tuple = [];
      }
      writeNumber(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "int",
          value: BigInt(_)
        });
      }
      writeBoolean(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "int",
          value: _ ? -1n : 0n
        });
      }
      writeBuffer(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "slice",
          cell: (0, Builder_1$7.beginCell)().storeBuffer(_).endCell()
        });
      }
      writeString(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "slice",
          cell: (0, Builder_1$7.beginCell)().storeStringTail(_).endCell()
        });
      }
      writeCell(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : _ instanceof Cell_1$3.Cell ? this._tuple.push({
          type: "cell",
          cell: _
        }) : _ instanceof Slice_1$1.Slice && this._tuple.push({
          type: "cell",
          cell: _.asCell()
        });
      }
      writeSlice(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : _ instanceof Cell_1$3.Cell ? this._tuple.push({
          type: "slice",
          cell: _
        }) : _ instanceof Slice_1$1.Slice && this._tuple.push({
          type: "slice",
          cell: _.asCell()
        });
      }
      writeBuilder(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : _ instanceof Cell_1$3.Cell ? this._tuple.push({
          type: "builder",
          cell: _
        }) : _ instanceof Slice_1$1.Slice && this._tuple.push({
          type: "builder",
          cell: _.asCell()
        });
      }
      writeTuple(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "tuple",
          items: _
        });
      }
      writeAddress(_) {
        _ == null ? this._tuple.push({
          type: "null"
        }) : this._tuple.push({
          type: "slice",
          cell: (0, Builder_1$7.beginCell)().storeAddress(_).endCell()
        });
      }
      build() {
        return [
          ...this._tuple
        ];
      }
    }
    builder.TupleBuilder = TupleBuilder;
    var _export = {}, _helpers = {}, convert = {};
    Object.defineProperty(convert, "__esModule", {
      value: true
    });
    convert.fromNano = convert.toNano = void 0;
    function toNano$4(d) {
      if (typeof d == "bigint") return d * 1000000000n;
      {
        if (typeof d == "number") {
          if (!Number.isFinite(d)) throw Error("Invalid number");
          if (Math.log10(d) <= 6) d = d.toLocaleString("en", {
            minimumFractionDigits: 9,
            useGrouping: false
          });
          else if (d - Math.trunc(d) === 0) d = d.toLocaleString("en", {
            maximumFractionDigits: 0,
            useGrouping: false
          });
          else throw Error("Not enough precision for a number value. Use string value instead");
        }
        let _ = false;
        for (; d.startsWith("-"); ) _ = !_, d = d.slice(1);
        if (d === ".") throw Error("Invalid number");
        let $ = d.split(".");
        if ($.length > 2) throw Error("Invalid number");
        let j = $[0], rt = $[1];
        if (j || (j = "0"), rt || (rt = "0"), rt.length > 9) throw Error("Invalid number");
        for (; rt.length < 9; ) rt += "0";
        let et = BigInt(j) * 1000000000n + BigInt(rt);
        return _ && (et = -et), et;
      }
    }
    convert.toNano = toNano$4;
    function fromNano$2(d) {
      let _ = BigInt(d), $ = false;
      _ < 0 && ($ = true, _ = -_);
      let rt = (_ % 1000000000n).toString();
      for (; rt.length < 9; ) rt = "0" + rt;
      rt = rt.match(/^([0-9]*[1-9]|0)(0*)/)[1];
      let pt = `${(_ / 1000000000n).toString()}${rt === "0" ? "" : `.${rt}`}`;
      return $ && (pt = "-" + pt), pt;
    }
    convert.fromNano = fromNano$2;
    var ExtraCurrency = {};
    Object.defineProperty(ExtraCurrency, "__esModule", {
      value: true
    });
    ExtraCurrency.packExtraCurrencyCell = ExtraCurrency.packExtraCurrencyDict = ExtraCurrency.storeExtraCurrency = ExtraCurrency.loadMaybeExtraCurrency = ExtraCurrency.loadExtraCurrency = void 0;
    const Builder_1$6 = requireBuilder(), Dictionary_1$2 = requireDictionary();
    function loadExtraCurrency(d) {
      let _ = d instanceof Dictionary_1$2.Dictionary ? d : Dictionary_1$2.Dictionary.loadDirect(Dictionary_1$2.Dictionary.Keys.Uint(32), Dictionary_1$2.Dictionary.Values.BigVarUint(5), d), $ = {};
      for (let [j, rt] of _) $[j] = rt;
      return $;
    }
    ExtraCurrency.loadExtraCurrency = loadExtraCurrency;
    function loadMaybeExtraCurrency(d) {
      const _ = d.loadMaybeRef();
      return _ === null ? _ : loadExtraCurrency(_);
    }
    ExtraCurrency.loadMaybeExtraCurrency = loadMaybeExtraCurrency;
    function storeExtraCurrency(d) {
      return (_) => {
        _.storeDict(packExtraCurrencyDict(d));
      };
    }
    ExtraCurrency.storeExtraCurrency = storeExtraCurrency;
    function packExtraCurrencyDict(d) {
      const _ = Dictionary_1$2.Dictionary.empty(Dictionary_1$2.Dictionary.Keys.Uint(32), Dictionary_1$2.Dictionary.Values.BigVarUint(5));
      return Object.entries(d).map(([$, j]) => _.set(Number($), j)), _;
    }
    ExtraCurrency.packExtraCurrencyDict = packExtraCurrencyDict;
    function packExtraCurrencyCell(d) {
      return (0, Builder_1$6.beginCell)().storeDictDirect(packExtraCurrencyDict(d)).endCell();
    }
    ExtraCurrency.packExtraCurrencyCell = packExtraCurrencyCell;
    Object.defineProperty(_helpers, "__esModule", {
      value: true
    });
    _helpers.comment = _helpers.external = _helpers.internal = void 0;
    const Address_1$1 = Address$n, Cell_1$2 = requireCell(), Builder_1$5 = requireBuilder(), convert_1 = convert, ExtraCurrency_1 = ExtraCurrency;
    function internal(d) {
      let _ = true;
      d.bounce !== null && d.bounce !== void 0 && (_ = d.bounce);
      let $;
      if (typeof d.to == "string") $ = Address_1$1.Address.parse(d.to);
      else if (Address_1$1.Address.isAddress(d.to)) $ = d.to;
      else throw new Error(`Invalid address ${d.to}`);
      let j;
      typeof d.value == "string" ? j = (0, convert_1.toNano)(d.value) : j = d.value;
      let rt;
      d.extracurrency && (rt = (0, ExtraCurrency_1.packExtraCurrencyDict)(d.extracurrency));
      let et = Cell_1$2.Cell.EMPTY;
      return typeof d.body == "string" ? et = (0, Builder_1$5.beginCell)().storeUint(0, 32).storeStringTail(d.body).endCell() : d.body && (et = d.body), {
        info: {
          type: "internal",
          dest: $,
          value: {
            coins: j,
            other: rt
          },
          bounce: _,
          ihrDisabled: true,
          bounced: false,
          ihrFee: 0n,
          forwardFee: 0n,
          createdAt: 0,
          createdLt: 0n
        },
        init: d.init ?? void 0,
        body: et
      };
    }
    _helpers.internal = internal;
    function external$1(d) {
      let _;
      if (typeof d.to == "string") _ = Address_1$1.Address.parse(d.to);
      else if (Address_1$1.Address.isAddress(d.to)) _ = d.to;
      else throw new Error(`Invalid address ${d.to}`);
      return {
        info: {
          type: "external-in",
          dest: _,
          importFee: 0n
        },
        init: d.init ?? void 0,
        body: d.body || Cell_1$2.Cell.EMPTY
      };
    }
    _helpers.external = external$1;
    function comment(d) {
      return (0, Builder_1$5.beginCell)().storeUint(0, 32).storeStringTail(d).endCell();
    }
    _helpers.comment = comment;
    var Account = {}, AccountStorage = {}, AccountState = {};
    Object.defineProperty(AccountState, "__esModule", {
      value: true
    });
    AccountState.storeAccountState = AccountState.loadAccountState = void 0;
    const StateInit_1$2 = StateInit;
    function loadAccountState(d) {
      return d.loadBit() ? {
        type: "active",
        state: (0, StateInit_1$2.loadStateInit)(d)
      } : d.loadBit() ? {
        type: "frozen",
        stateHash: d.loadUintBig(256)
      } : {
        type: "uninit"
      };
    }
    AccountState.loadAccountState = loadAccountState;
    function storeAccountState(d) {
      return (_) => {
        d.type === "active" ? (_.storeBit(true), _.store((0, StateInit_1$2.storeStateInit)(d.state))) : d.type === "frozen" ? (_.storeBit(false), _.storeBit(true), _.storeUint(d.stateHash, 256)) : d.type === "uninit" && (_.storeBit(false), _.storeBit(false));
      };
    }
    AccountState.storeAccountState = storeAccountState;
    var CurrencyCollection = {};
    Object.defineProperty(CurrencyCollection, "__esModule", {
      value: true
    });
    CurrencyCollection.storeCurrencyCollection = CurrencyCollection.loadCurrencyCollection = void 0;
    const Dictionary_1$1 = requireDictionary();
    function loadCurrencyCollection(d) {
      const _ = d.loadCoins(), $ = d.loadDict(Dictionary_1$1.Dictionary.Keys.Uint(32), Dictionary_1$1.Dictionary.Values.BigVarUint(5));
      return $.size === 0 ? {
        coins: _
      } : {
        other: $,
        coins: _
      };
    }
    CurrencyCollection.loadCurrencyCollection = loadCurrencyCollection;
    function storeCurrencyCollection(d) {
      return (_) => {
        _.storeCoins(d.coins), d.other ? _.storeDict(d.other) : _.storeBit(0);
      };
    }
    CurrencyCollection.storeCurrencyCollection = storeCurrencyCollection;
    Object.defineProperty(AccountStorage, "__esModule", {
      value: true
    });
    AccountStorage.storeAccountStorage = AccountStorage.loadAccountStorage = void 0;
    const AccountState_1 = AccountState, CurrencyCollection_1$6 = CurrencyCollection;
    function loadAccountStorage(d) {
      return {
        lastTransLt: d.loadUintBig(64),
        balance: (0, CurrencyCollection_1$6.loadCurrencyCollection)(d),
        state: (0, AccountState_1.loadAccountState)(d)
      };
    }
    AccountStorage.loadAccountStorage = loadAccountStorage;
    function storeAccountStorage(d) {
      return (_) => {
        _.storeUint(d.lastTransLt, 64), _.store((0, CurrencyCollection_1$6.storeCurrencyCollection)(d.balance)), _.store((0, AccountState_1.storeAccountState)(d.state));
      };
    }
    AccountStorage.storeAccountStorage = storeAccountStorage;
    var StorageInto = {}, StorageUsed = {};
    Object.defineProperty(StorageUsed, "__esModule", {
      value: true
    });
    StorageUsed.storeStorageUsed = StorageUsed.loadStorageUsed = void 0;
    function loadStorageUsed(d) {
      return {
        cells: d.loadVarUintBig(3),
        bits: d.loadVarUintBig(3),
        publicCells: d.loadVarUintBig(3)
      };
    }
    StorageUsed.loadStorageUsed = loadStorageUsed;
    function storeStorageUsed(d) {
      return (_) => {
        _.storeVarUint(d.cells, 3), _.storeVarUint(d.bits, 3), _.storeVarUint(d.publicCells, 3);
      };
    }
    StorageUsed.storeStorageUsed = storeStorageUsed;
    Object.defineProperty(StorageInto, "__esModule", {
      value: true
    });
    StorageInto.storeStorageInfo = StorageInto.loadStorageInfo = void 0;
    const StorageUsed_1 = StorageUsed;
    function loadStorageInfo(d) {
      return {
        used: (0, StorageUsed_1.loadStorageUsed)(d),
        lastPaid: d.loadUint(32),
        duePayment: d.loadMaybeCoins()
      };
    }
    StorageInto.loadStorageInfo = loadStorageInfo;
    function storeStorageInfo(d) {
      return (_) => {
        _.store((0, StorageUsed_1.storeStorageUsed)(d.used)), _.storeUint(d.lastPaid, 32), _.storeMaybeCoins(d.duePayment);
      };
    }
    StorageInto.storeStorageInfo = storeStorageInfo;
    Object.defineProperty(Account, "__esModule", {
      value: true
    });
    Account.storeAccount = Account.loadAccount = void 0;
    const AccountStorage_1 = AccountStorage, StorageInto_1 = StorageInto;
    function loadAccount(d) {
      return {
        addr: d.loadAddress(),
        storageStats: (0, StorageInto_1.loadStorageInfo)(d),
        storage: (0, AccountStorage_1.loadAccountStorage)(d)
      };
    }
    Account.loadAccount = loadAccount;
    function storeAccount(d) {
      return (_) => {
        _.storeAddress(d.addr), _.store((0, StorageInto_1.storeStorageInfo)(d.storageStats)), _.store((0, AccountStorage_1.storeAccountStorage)(d.storage));
      };
    }
    Account.storeAccount = storeAccount;
    var AccountStatus = {};
    Object.defineProperty(AccountStatus, "__esModule", {
      value: true
    });
    AccountStatus.storeAccountStatus = AccountStatus.loadAccountStatus = void 0;
    function loadAccountStatus(d) {
      const _ = d.loadUint(2);
      if (_ === 0) return "uninitialized";
      if (_ === 1) return "frozen";
      if (_ === 2) return "active";
      if (_ === 3) return "non-existing";
      throw Error("Invalid data");
    }
    AccountStatus.loadAccountStatus = loadAccountStatus;
    function storeAccountStatus(d) {
      return (_) => {
        if (d === "uninitialized") _.storeUint(0, 2);
        else if (d === "frozen") _.storeUint(1, 2);
        else if (d === "active") _.storeUint(2, 2);
        else if (d === "non-existing") _.storeUint(3, 2);
        else throw Error("Invalid data");
        return _;
      };
    }
    AccountStatus.storeAccountStatus = storeAccountStatus;
    var AccountStatusChange = {};
    Object.defineProperty(AccountStatusChange, "__esModule", {
      value: true
    });
    AccountStatusChange.storeAccountStatusChange = AccountStatusChange.loadAccountStatusChange = void 0;
    function loadAccountStatusChange(d) {
      return d.loadBit() ? d.loadBit() ? "deleted" : "frozen" : "unchanged";
    }
    AccountStatusChange.loadAccountStatusChange = loadAccountStatusChange;
    function storeAccountStatusChange(d) {
      return (_) => {
        if (d == "unchanged") _.storeBit(0);
        else if (d === "frozen") _.storeBit(1), _.storeBit(0);
        else if (d === "deleted") _.storeBit(1), _.storeBit(1);
        else throw Error("Invalid account status change");
      };
    }
    AccountStatusChange.storeAccountStatusChange = storeAccountStatusChange;
    var OutList = {}, MessageRelaxed = {}, CommonMessageInfoRelaxed = {};
    Object.defineProperty(CommonMessageInfoRelaxed, "__esModule", {
      value: true
    });
    CommonMessageInfoRelaxed.storeCommonMessageInfoRelaxed = CommonMessageInfoRelaxed.loadCommonMessageInfoRelaxed = void 0;
    const CurrencyCollection_1$5 = CurrencyCollection;
    function loadCommonMessageInfoRelaxed(d) {
      if (!d.loadBit()) {
        const et = d.loadBit(), st = d.loadBit(), pt = d.loadBit(), Et = d.loadMaybeAddress(), Bt = d.loadAddress(), St = (0, CurrencyCollection_1$5.loadCurrencyCollection)(d), $t = d.loadCoins(), kt = d.loadCoins(), Tt = d.loadUintBig(64), Pt = d.loadUint(32);
        return {
          type: "internal",
          ihrDisabled: et,
          bounce: st,
          bounced: pt,
          src: Et,
          dest: Bt,
          value: St,
          ihrFee: $t,
          forwardFee: kt,
          createdLt: Tt,
          createdAt: Pt
        };
      }
      if (!d.loadBit()) throw Error("External In message is not possible for CommonMessageInfoRelaxed");
      const _ = d.loadMaybeAddress(), $ = d.loadMaybeExternalAddress(), j = d.loadUintBig(64), rt = d.loadUint(32);
      return {
        type: "external-out",
        src: _,
        dest: $,
        createdLt: j,
        createdAt: rt
      };
    }
    CommonMessageInfoRelaxed.loadCommonMessageInfoRelaxed = loadCommonMessageInfoRelaxed;
    function storeCommonMessageInfoRelaxed(d) {
      return (_) => {
        if (d.type === "internal") _.storeBit(0), _.storeBit(d.ihrDisabled), _.storeBit(d.bounce), _.storeBit(d.bounced), _.storeAddress(d.src), _.storeAddress(d.dest), _.store((0, CurrencyCollection_1$5.storeCurrencyCollection)(d.value)), _.storeCoins(d.ihrFee), _.storeCoins(d.forwardFee), _.storeUint(d.createdLt, 64), _.storeUint(d.createdAt, 32);
        else if (d.type === "external-out") _.storeBit(1), _.storeBit(1), _.storeAddress(d.src), _.storeAddress(d.dest), _.storeUint(d.createdLt, 64), _.storeUint(d.createdAt, 32);
        else throw new Error("Unknown CommonMessageInfo type");
      };
    }
    CommonMessageInfoRelaxed.storeCommonMessageInfoRelaxed = storeCommonMessageInfoRelaxed;
    Object.defineProperty(MessageRelaxed, "__esModule", {
      value: true
    });
    MessageRelaxed.storeMessageRelaxed = MessageRelaxed.loadMessageRelaxed = void 0;
    const Builder_1$4 = requireBuilder(), CommonMessageInfoRelaxed_1 = CommonMessageInfoRelaxed, StateInit_1$1 = StateInit;
    function loadMessageRelaxed(d) {
      const _ = (0, CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed)(d);
      let $ = null;
      d.loadBit() && (d.loadBit() ? $ = (0, StateInit_1$1.loadStateInit)(d.loadRef().beginParse()) : $ = (0, StateInit_1$1.loadStateInit)(d));
      const j = d.loadBit() ? d.loadRef() : d.asCell();
      return {
        info: _,
        init: $,
        body: j
      };
    }
    MessageRelaxed.loadMessageRelaxed = loadMessageRelaxed;
    function storeMessageRelaxed(d, _) {
      return ($) => {
        if ($.store((0, CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed)(d.info)), d.init) {
          $.storeBit(true);
          let rt = (0, Builder_1$4.beginCell)().store((0, StateInit_1$1.storeStateInit)(d.init)), et = false;
          _ && _.forceRef ? et = true : $.availableBits - 2 >= rt.bits ? et = false : et = true, et ? ($.storeBit(true), $.storeRef(rt)) : ($.storeBit(false), $.storeBuilder(rt));
        } else $.storeBit(false);
        let j = false;
        _ && _.forceRef ? j = true : $.availableBits - 1 >= d.body.bits.length && $.refs + d.body.refs.length <= 4 && !d.body.isExotic ? j = false : j = true, j ? ($.storeBit(true), $.storeRef(d.body)) : ($.storeBit(false), $.storeBuilder(d.body.asBuilder()));
      };
    }
    MessageRelaxed.storeMessageRelaxed = storeMessageRelaxed;
    var LibRef = {};
    Object.defineProperty(LibRef, "__esModule", {
      value: true
    });
    LibRef.storeLibRef = LibRef.loadLibRef = void 0;
    function loadLibRef(d) {
      return d.loadUint(1) === 0 ? {
        type: "hash",
        libHash: d.loadBuffer(32)
      } : {
        type: "ref",
        library: d.loadRef()
      };
    }
    LibRef.loadLibRef = loadLibRef;
    function storeLibRef(d) {
      return (_) => {
        d.type === "hash" ? (_.storeUint(0, 1), _.storeBuffer(d.libHash)) : (_.storeUint(1, 1), _.storeRef(d.library));
      };
    }
    LibRef.storeLibRef = storeLibRef;
    Object.defineProperty(OutList, "__esModule", {
      value: true
    });
    OutList.loadOutList = OutList.storeOutList = OutList.loadOutAction = OutList.storeOutAction = void 0;
    const MessageRelaxed_1 = MessageRelaxed, Builder_1$3 = requireBuilder(), CurrencyCollection_1$4 = CurrencyCollection, LibRef_1 = LibRef;
    function storeOutAction(d) {
      switch (d.type) {
        case "sendMsg":
          return storeOutActionSendMsg(d);
        case "setCode":
          return storeOutActionSetCode(d);
        case "reserve":
          return storeOutActionReserve(d);
        case "changeLibrary":
          return storeOutActionChangeLibrary(d);
        default:
          throw new Error(`Unknown action type ${d.type}`);
      }
    }
    OutList.storeOutAction = storeOutAction;
    const outActionSendMsgTag = 247711853;
    function storeOutActionSendMsg(d) {
      return (_) => {
        _.storeUint(outActionSendMsgTag, 32).storeUint(d.mode, 8).storeRef((0, Builder_1$3.beginCell)().store((0, MessageRelaxed_1.storeMessageRelaxed)(d.outMsg)).endCell());
      };
    }
    const outActionSetCodeTag = 2907562126;
    function storeOutActionSetCode(d) {
      return (_) => {
        _.storeUint(outActionSetCodeTag, 32).storeRef(d.newCode);
      };
    }
    const outActionReserveTag = 921090057;
    function storeOutActionReserve(d) {
      return (_) => {
        _.storeUint(outActionReserveTag, 32).storeUint(d.mode, 8).store((0, CurrencyCollection_1$4.storeCurrencyCollection)(d.currency));
      };
    }
    const outActionChangeLibraryTag = 653925844;
    function storeOutActionChangeLibrary(d) {
      return (_) => {
        _.storeUint(outActionChangeLibraryTag, 32).storeUint(d.mode, 7).store((0, LibRef_1.storeLibRef)(d.libRef));
      };
    }
    function loadOutAction(d) {
      const _ = d.loadUint(32);
      if (_ === outActionSendMsgTag) {
        const $ = d.loadUint(8), j = (0, MessageRelaxed_1.loadMessageRelaxed)(d.loadRef().beginParse());
        return {
          type: "sendMsg",
          mode: $,
          outMsg: j
        };
      }
      if (_ === outActionSetCodeTag) return {
        type: "setCode",
        newCode: d.loadRef()
      };
      if (_ === outActionReserveTag) {
        const $ = d.loadUint(8), j = (0, CurrencyCollection_1$4.loadCurrencyCollection)(d);
        return {
          type: "reserve",
          mode: $,
          currency: j
        };
      }
      if (_ === outActionChangeLibraryTag) {
        const $ = d.loadUint(7), j = (0, LibRef_1.loadLibRef)(d);
        return {
          type: "changeLibrary",
          mode: $,
          libRef: j
        };
      }
      throw new Error(`Unknown out action tag 0x${_.toString(16)}`);
    }
    OutList.loadOutAction = loadOutAction;
    function storeOutList(d) {
      const _ = d.reduce(($, j) => (0, Builder_1$3.beginCell)().storeRef($).store(storeOutAction(j)).endCell(), (0, Builder_1$3.beginCell)().endCell());
      return ($) => {
        $.storeSlice(_.beginParse());
      };
    }
    OutList.storeOutList = storeOutList;
    function loadOutList(d) {
      const _ = [];
      for (; d.remainingRefs; ) {
        const $ = d.loadRef();
        _.push(loadOutAction(d)), d = $.beginParse();
      }
      return _.reverse();
    }
    OutList.loadOutList = loadOutList;
    var CommonMessageInfo = {};
    Object.defineProperty(CommonMessageInfo, "__esModule", {
      value: true
    });
    CommonMessageInfo.storeCommonMessageInfo = CommonMessageInfo.loadCommonMessageInfo = void 0;
    const CurrencyCollection_1$3 = CurrencyCollection;
    function loadCommonMessageInfo(d) {
      if (!d.loadBit()) {
        const et = d.loadBit(), st = d.loadBit(), pt = d.loadBit(), Et = d.loadAddress(), Bt = d.loadAddress(), St = (0, CurrencyCollection_1$3.loadCurrencyCollection)(d), $t = d.loadCoins(), kt = d.loadCoins(), Tt = d.loadUintBig(64), Pt = d.loadUint(32);
        return {
          type: "internal",
          ihrDisabled: et,
          bounce: st,
          bounced: pt,
          src: Et,
          dest: Bt,
          value: St,
          ihrFee: $t,
          forwardFee: kt,
          createdLt: Tt,
          createdAt: Pt
        };
      }
      if (!d.loadBit()) {
        const et = d.loadMaybeExternalAddress(), st = d.loadAddress(), pt = d.loadCoins();
        return {
          type: "external-in",
          src: et,
          dest: st,
          importFee: pt
        };
      }
      const _ = d.loadAddress(), $ = d.loadMaybeExternalAddress(), j = d.loadUintBig(64), rt = d.loadUint(32);
      return {
        type: "external-out",
        src: _,
        dest: $,
        createdLt: j,
        createdAt: rt
      };
    }
    CommonMessageInfo.loadCommonMessageInfo = loadCommonMessageInfo;
    function storeCommonMessageInfo(d) {
      return (_) => {
        if (d.type === "internal") _.storeBit(0), _.storeBit(d.ihrDisabled), _.storeBit(d.bounce), _.storeBit(d.bounced), _.storeAddress(d.src), _.storeAddress(d.dest), _.store((0, CurrencyCollection_1$3.storeCurrencyCollection)(d.value)), _.storeCoins(d.ihrFee), _.storeCoins(d.forwardFee), _.storeUint(d.createdLt, 64), _.storeUint(d.createdAt, 32);
        else if (d.type === "external-in") _.storeBit(1), _.storeBit(0), _.storeAddress(d.src), _.storeAddress(d.dest), _.storeCoins(d.importFee);
        else if (d.type === "external-out") _.storeBit(1), _.storeBit(1), _.storeAddress(d.src), _.storeAddress(d.dest), _.storeUint(d.createdLt, 64), _.storeUint(d.createdAt, 32);
        else throw new Error("Unknown CommonMessageInfo type");
      };
    }
    CommonMessageInfo.storeCommonMessageInfo = storeCommonMessageInfo;
    var ComputeSkipReason = {};
    Object.defineProperty(ComputeSkipReason, "__esModule", {
      value: true
    });
    ComputeSkipReason.storeComputeSkipReason = ComputeSkipReason.loadComputeSkipReason = void 0;
    function loadComputeSkipReason(d) {
      let _ = d.loadUint(2);
      if (_ === 0) return "no-state";
      if (_ === 1) return "bad-state";
      if (_ === 2) return "no-gas";
      throw new Error(`Unknown ComputeSkipReason: ${_}`);
    }
    ComputeSkipReason.loadComputeSkipReason = loadComputeSkipReason;
    function storeComputeSkipReason(d) {
      return (_) => {
        if (d === "no-state") _.storeUint(0, 2);
        else if (d === "bad-state") _.storeUint(1, 2);
        else if (d === "no-gas") _.storeUint(2, 2);
        else throw new Error(`Unknown ComputeSkipReason: ${d}`);
      };
    }
    ComputeSkipReason.storeComputeSkipReason = storeComputeSkipReason;
    var DepthBalanceInfo = {};
    Object.defineProperty(DepthBalanceInfo, "__esModule", {
      value: true
    });
    DepthBalanceInfo.storeDepthBalanceInfo = DepthBalanceInfo.loadDepthBalanceInfo = void 0;
    const CurrencyCollection_1$2 = CurrencyCollection;
    function loadDepthBalanceInfo(d) {
      return {
        splitDepth: d.loadUint(5),
        balance: (0, CurrencyCollection_1$2.loadCurrencyCollection)(d)
      };
    }
    DepthBalanceInfo.loadDepthBalanceInfo = loadDepthBalanceInfo;
    function storeDepthBalanceInfo(d) {
      return (_) => {
        _.storeUint(d.splitDepth, 5), _.store((0, CurrencyCollection_1$2.storeCurrencyCollection)(d.balance));
      };
    }
    DepthBalanceInfo.storeDepthBalanceInfo = storeDepthBalanceInfo;
    var HashUpdate = {};
    Object.defineProperty(HashUpdate, "__esModule", {
      value: true
    });
    HashUpdate.storeHashUpdate = HashUpdate.loadHashUpdate = void 0;
    function loadHashUpdate(d) {
      if (d.loadUint(8) !== 114) throw Error("Invalid data");
      const _ = d.loadBuffer(32), $ = d.loadBuffer(32);
      return {
        oldHash: _,
        newHash: $
      };
    }
    HashUpdate.loadHashUpdate = loadHashUpdate;
    function storeHashUpdate(d) {
      return (_) => {
        _.storeUint(114, 8), _.storeBuffer(d.oldHash), _.storeBuffer(d.newHash);
      };
    }
    HashUpdate.storeHashUpdate = storeHashUpdate;
    var MasterchainStateExtra = {};
    Object.defineProperty(MasterchainStateExtra, "__esModule", {
      value: true
    });
    MasterchainStateExtra.loadMasterchainStateExtra = void 0;
    const Dictionary_1 = requireDictionary(), CurrencyCollection_1$1 = CurrencyCollection;
    function loadMasterchainStateExtra(d) {
      if (d.loadUint(16) !== 52262) throw Error("Invalid data");
      d.loadBit() && d.loadRef();
      let _ = d.loadUintBig(256), $ = Dictionary_1.Dictionary.load(Dictionary_1.Dictionary.Keys.Int(32), Dictionary_1.Dictionary.Values.Cell(), d);
      const j = (0, CurrencyCollection_1$1.loadCurrencyCollection)(d);
      return {
        config: $,
        configAddress: _,
        globalBalance: j
      };
    }
    MasterchainStateExtra.loadMasterchainStateExtra = loadMasterchainStateExtra;
    var Message = {};
    Object.defineProperty(Message, "__esModule", {
      value: true
    });
    Message.MessageValue = Message.storeMessage = Message.loadMessage = void 0;
    const Builder_1$2 = requireBuilder(), CommonMessageInfo_1 = CommonMessageInfo, StateInit_1 = StateInit;
    function loadMessage(d) {
      const _ = (0, CommonMessageInfo_1.loadCommonMessageInfo)(d);
      let $ = null;
      d.loadBit() && (d.loadBit() ? $ = (0, StateInit_1.loadStateInit)(d.loadRef().beginParse()) : $ = (0, StateInit_1.loadStateInit)(d));
      const j = d.loadBit() ? d.loadRef() : d.asCell();
      return {
        info: _,
        init: $,
        body: j
      };
    }
    Message.loadMessage = loadMessage;
    function storeMessage(d, _) {
      return ($) => {
        if ($.store((0, CommonMessageInfo_1.storeCommonMessageInfo)(d.info)), d.init) {
          $.storeBit(true);
          let rt = (0, Builder_1$2.beginCell)().store((0, StateInit_1.storeStateInit)(d.init)), et = false;
          _ && _.forceRef ? et = true : et = $.availableBits - 2 < rt.bits + d.body.bits.length, et ? ($.storeBit(true), $.storeRef(rt)) : ($.storeBit(false), $.storeBuilder(rt));
        } else $.storeBit(false);
        let j = false;
        _ && _.forceRef ? j = true : j = $.availableBits - 1 < d.body.bits.length || $.refs + d.body.refs.length > 4, j ? ($.storeBit(true), $.storeRef(d.body)) : ($.storeBit(false), $.storeBuilder(d.body.asBuilder()));
      };
    }
    Message.storeMessage = storeMessage;
    Message.MessageValue = {
      serialize(d, _) {
        _.storeRef((0, Builder_1$2.beginCell)().store(storeMessage(d)));
      },
      parse(d) {
        return loadMessage(d.loadRef().beginParse());
      }
    };
    var SendMode$1 = {};
    Object.defineProperty(SendMode$1, "__esModule", {
      value: true
    });
    SendMode$1.SendMode = void 0;
    var SendMode;
    (function(d) {
      d[d.CARRY_ALL_REMAINING_BALANCE = 128] = "CARRY_ALL_REMAINING_BALANCE", d[d.CARRY_ALL_REMAINING_INCOMING_VALUE = 64] = "CARRY_ALL_REMAINING_INCOMING_VALUE", d[d.DESTROY_ACCOUNT_IF_ZERO = 32] = "DESTROY_ACCOUNT_IF_ZERO", d[d.PAY_GAS_SEPARATELY = 1] = "PAY_GAS_SEPARATELY", d[d.IGNORE_ERRORS = 2] = "IGNORE_ERRORS", d[d.NONE = 0] = "NONE";
    })(SendMode || (SendMode$1.SendMode = SendMode = {}));
    var ReserveMode$1 = {};
    Object.defineProperty(ReserveMode$1, "__esModule", {
      value: true
    });
    ReserveMode$1.ReserveMode = void 0;
    var ReserveMode;
    (function(d) {
      d[d.THIS_AMOUNT = 0] = "THIS_AMOUNT", d[d.LEAVE_THIS_AMOUNT = 1] = "LEAVE_THIS_AMOUNT", d[d.AT_MOST_THIS_AMOUNT = 2] = "AT_MOST_THIS_AMOUNT", d[d.LEAVE_MAX_THIS_AMOUNT = 3] = "LEAVE_MAX_THIS_AMOUNT", d[d.BEFORE_BALANCE_PLUS_THIS_AMOUNT = 4] = "BEFORE_BALANCE_PLUS_THIS_AMOUNT", d[d.LEAVE_BBALANCE_PLUS_THIS_AMOUNT = 5] = "LEAVE_BBALANCE_PLUS_THIS_AMOUNT", d[d.BEFORE_BALANCE_MINUS_THIS_AMOUNT = 12] = "BEFORE_BALANCE_MINUS_THIS_AMOUNT", d[d.LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT = 13] = "LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT";
    })(ReserveMode || (ReserveMode$1.ReserveMode = ReserveMode = {}));
    var ShardAccount = {};
    Object.defineProperty(ShardAccount, "__esModule", {
      value: true
    });
    ShardAccount.storeShardAccount = ShardAccount.loadShardAccount = void 0;
    const Builder_1$1 = requireBuilder(), Account_1 = Account;
    function loadShardAccount(d) {
      let _ = d.loadRef(), $;
      if (!_.isExotic) {
        let j = _.beginParse();
        j.loadBit() && ($ = (0, Account_1.loadAccount)(j));
      }
      return {
        account: $,
        lastTransactionHash: d.loadUintBig(256),
        lastTransactionLt: d.loadUintBig(64)
      };
    }
    ShardAccount.loadShardAccount = loadShardAccount;
    function storeShardAccount(d) {
      return (_) => {
        d.account ? _.storeRef((0, Builder_1$1.beginCell)().storeBit(true).store((0, Account_1.storeAccount)(d.account))) : _.storeRef((0, Builder_1$1.beginCell)().storeBit(false)), _.storeUint(d.lastTransactionHash, 256), _.storeUint(d.lastTransactionLt, 64);
      };
    }
    ShardAccount.storeShardAccount = storeShardAccount;
    var ShardAccounts = {};
    (function(d) {
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.storeShardAccounts = d.loadShardAccounts = d.ShardAccountRefValue = void 0;
      const _ = requireDictionary(), $ = DepthBalanceInfo, j = ShardAccount;
      d.ShardAccountRefValue = {
        parse: (st) => {
          let pt = (0, $.loadDepthBalanceInfo)(st), Et = (0, j.loadShardAccount)(st);
          return {
            depthBalanceInfo: pt,
            shardAccount: Et
          };
        },
        serialize(st, pt) {
          pt.store((0, $.storeDepthBalanceInfo)(st.depthBalanceInfo)), pt.store((0, j.storeShardAccount)(st.shardAccount));
        }
      };
      function rt(st) {
        return _.Dictionary.load(_.Dictionary.Keys.BigUint(256), d.ShardAccountRefValue, st);
      }
      d.loadShardAccounts = rt;
      function et(st) {
        return (pt) => {
          pt.storeDict(st);
        };
      }
      d.storeShardAccounts = et;
    })(ShardAccounts);
    var ShardIdent = {};
    Object.defineProperty(ShardIdent, "__esModule", {
      value: true
    });
    ShardIdent.storeShardIdent = ShardIdent.loadShardIdent = void 0;
    function loadShardIdent(d) {
      if (d.loadUint(2) !== 0) throw Error("Invalid data");
      return {
        shardPrefixBits: d.loadUint(6),
        workchainId: d.loadInt(32),
        shardPrefix: d.loadUintBig(64)
      };
    }
    ShardIdent.loadShardIdent = loadShardIdent;
    function storeShardIdent(d) {
      return (_) => {
        _.storeUint(0, 2), _.storeUint(d.shardPrefixBits, 6), _.storeInt(d.workchainId, 32), _.storeUint(d.shardPrefix, 64);
      };
    }
    ShardIdent.storeShardIdent = storeShardIdent;
    var ShardStateUnsplit = {};
    Object.defineProperty(ShardStateUnsplit, "__esModule", {
      value: true
    });
    ShardStateUnsplit.loadShardStateUnsplit = void 0;
    const MasterchainStateExtra_1 = MasterchainStateExtra, ShardAccounts_1 = ShardAccounts, ShardIdent_1 = ShardIdent;
    function loadShardStateUnsplit(d) {
      if (d.loadUint(32) !== 2418257890) throw Error("Invalid data");
      let _ = d.loadInt(32), $ = (0, ShardIdent_1.loadShardIdent)(d), j = d.loadUint(32), rt = d.loadUint(32), et = d.loadUint(32), st = d.loadUintBig(64), pt = d.loadUint(32);
      d.loadRef();
      let Et = d.loadBit(), Bt = d.loadRef(), St;
      Bt.isExotic || (St = (0, ShardAccounts_1.loadShardAccounts)(Bt.beginParse())), d.loadRef();
      let $t = d.loadBit(), kt = null;
      if ($t) {
        let Tt = d.loadRef();
        Tt.isExotic || (kt = (0, MasterchainStateExtra_1.loadMasterchainStateExtra)(Tt.beginParse()));
      }
      return {
        globalId: _,
        shardId: $,
        seqno: j,
        vertSeqNo: rt,
        genUtime: et,
        genLt: st,
        minRefMcSeqno: pt,
        beforeSplit: Et,
        accounts: St,
        extras: kt
      };
    }
    ShardStateUnsplit.loadShardStateUnsplit = loadShardStateUnsplit;
    var SplitMergeInfo = {};
    Object.defineProperty(SplitMergeInfo, "__esModule", {
      value: true
    });
    SplitMergeInfo.storeSplitMergeInfo = SplitMergeInfo.loadSplitMergeInfo = void 0;
    function loadSplitMergeInfo(d) {
      let _ = d.loadUint(6), $ = d.loadUint(6), j = d.loadUintBig(256), rt = d.loadUintBig(256);
      return {
        currentShardPrefixLength: _,
        accountSplitDepth: $,
        thisAddress: j,
        siblingAddress: rt
      };
    }
    SplitMergeInfo.loadSplitMergeInfo = loadSplitMergeInfo;
    function storeSplitMergeInfo(d) {
      return (_) => {
        _.storeUint(d.currentShardPrefixLength, 6), _.storeUint(d.accountSplitDepth, 6), _.storeUint(d.thisAddress, 256), _.storeUint(d.siblingAddress, 256);
      };
    }
    SplitMergeInfo.storeSplitMergeInfo = storeSplitMergeInfo;
    var StorageUsedShort = {};
    Object.defineProperty(StorageUsedShort, "__esModule", {
      value: true
    });
    StorageUsedShort.storeStorageUsedShort = StorageUsedShort.loadStorageUsedShort = void 0;
    function loadStorageUsedShort(d) {
      let _ = d.loadVarUintBig(3), $ = d.loadVarUintBig(3);
      return {
        cells: _,
        bits: $
      };
    }
    StorageUsedShort.loadStorageUsedShort = loadStorageUsedShort;
    function storeStorageUsedShort(d) {
      return (_) => {
        _.storeVarUint(d.cells, 3), _.storeVarUint(d.bits, 3);
      };
    }
    StorageUsedShort.storeStorageUsedShort = storeStorageUsedShort;
    var Transaction = {}, TransactionDescription = {}, TransactionActionPhase = {};
    Object.defineProperty(TransactionActionPhase, "__esModule", {
      value: true
    });
    TransactionActionPhase.storeTransactionActionPhase = TransactionActionPhase.loadTransactionActionPhase = void 0;
    const AccountStatusChange_1$1 = AccountStatusChange, StorageUsedShort_1$1 = StorageUsedShort;
    function loadTransactionActionPhase(d) {
      let _ = d.loadBit(), $ = d.loadBit(), j = d.loadBit(), rt = (0, AccountStatusChange_1$1.loadAccountStatusChange)(d), et = d.loadBit() ? d.loadCoins() : void 0, st = d.loadBit() ? d.loadCoins() : void 0, pt = d.loadInt(32), Et = d.loadBit() ? d.loadInt(32) : void 0, Bt = d.loadUint(16), St = d.loadUint(16), $t = d.loadUint(16), kt = d.loadUint(16), Tt = d.loadUintBig(256), Pt = (0, StorageUsedShort_1$1.loadStorageUsedShort)(d);
      return {
        success: _,
        valid: $,
        noFunds: j,
        statusChange: rt,
        totalFwdFees: et,
        totalActionFees: st,
        resultCode: pt,
        resultArg: Et,
        totalActions: Bt,
        specActions: St,
        skippedActions: $t,
        messagesCreated: kt,
        actionListHash: Tt,
        totalMessageSize: Pt
      };
    }
    TransactionActionPhase.loadTransactionActionPhase = loadTransactionActionPhase;
    function storeTransactionActionPhase(d) {
      return (_) => {
        _.storeBit(d.success), _.storeBit(d.valid), _.storeBit(d.noFunds), _.store((0, AccountStatusChange_1$1.storeAccountStatusChange)(d.statusChange)), _.storeMaybeCoins(d.totalFwdFees), _.storeMaybeCoins(d.totalActionFees), _.storeInt(d.resultCode, 32), _.storeMaybeInt(d.resultArg, 32), _.storeUint(d.totalActions, 16), _.storeUint(d.specActions, 16), _.storeUint(d.skippedActions, 16), _.storeUint(d.messagesCreated, 16), _.storeUint(d.actionListHash, 256), _.store((0, StorageUsedShort_1$1.storeStorageUsedShort)(d.totalMessageSize));
      };
    }
    TransactionActionPhase.storeTransactionActionPhase = storeTransactionActionPhase;
    var TransactionBouncePhase = {};
    Object.defineProperty(TransactionBouncePhase, "__esModule", {
      value: true
    });
    TransactionBouncePhase.storeTransactionBouncePhase = TransactionBouncePhase.loadTransactionBouncePhase = void 0;
    const StorageUsedShort_1 = StorageUsedShort;
    function loadTransactionBouncePhase(d) {
      if (d.loadBit()) {
        let _ = (0, StorageUsedShort_1.loadStorageUsedShort)(d), $ = d.loadCoins(), j = d.loadCoins();
        return {
          type: "ok",
          messageSize: _,
          messageFees: $,
          forwardFees: j
        };
      }
      if (d.loadBit()) {
        let _ = (0, StorageUsedShort_1.loadStorageUsedShort)(d), $ = d.loadCoins();
        return {
          type: "no-funds",
          messageSize: _,
          requiredForwardFees: $
        };
      }
      return {
        type: "negative-funds"
      };
    }
    TransactionBouncePhase.loadTransactionBouncePhase = loadTransactionBouncePhase;
    function storeTransactionBouncePhase(d) {
      return (_) => {
        if (d.type === "ok") _.storeBit(true), _.store((0, StorageUsedShort_1.storeStorageUsedShort)(d.messageSize)), _.storeCoins(d.messageFees), _.storeCoins(d.forwardFees);
        else if (d.type === "negative-funds") _.storeBit(false), _.storeBit(false);
        else if (d.type === "no-funds") _.storeBit(false), _.storeBit(true), _.store((0, StorageUsedShort_1.storeStorageUsedShort)(d.messageSize)), _.storeCoins(d.requiredForwardFees);
        else throw new Error("Invalid TransactionBouncePhase type");
      };
    }
    TransactionBouncePhase.storeTransactionBouncePhase = storeTransactionBouncePhase;
    var TransactionComputePhase = {};
    Object.defineProperty(TransactionComputePhase, "__esModule", {
      value: true
    });
    TransactionComputePhase.storeTransactionComputePhase = TransactionComputePhase.loadTransactionComputePhase = void 0;
    const Builder_1 = requireBuilder(), ComputeSkipReason_1 = ComputeSkipReason;
    function loadTransactionComputePhase(d) {
      if (!d.loadBit()) return {
        type: "skipped",
        reason: (0, ComputeSkipReason_1.loadComputeSkipReason)(d)
      };
      let _ = d.loadBit(), $ = d.loadBit(), j = d.loadBit(), rt = d.loadCoins();
      const et = d.loadRef().beginParse();
      let st = et.loadVarUintBig(3), pt = et.loadVarUintBig(3), Et = et.loadBit() ? et.loadVarUintBig(2) : void 0, Bt = et.loadUint(8), St = et.loadInt(32), $t = et.loadBit() ? et.loadInt(32) : void 0, kt = et.loadUint(32), Tt = et.loadUintBig(256), Pt = et.loadUintBig(256);
      return {
        type: "vm",
        success: _,
        messageStateUsed: $,
        accountActivated: j,
        gasFees: rt,
        gasUsed: st,
        gasLimit: pt,
        gasCredit: Et,
        mode: Bt,
        exitCode: St,
        exitArg: $t,
        vmSteps: kt,
        vmInitStateHash: Tt,
        vmFinalStateHash: Pt
      };
    }
    TransactionComputePhase.loadTransactionComputePhase = loadTransactionComputePhase;
    function storeTransactionComputePhase(d) {
      return (_) => {
        if (d.type === "skipped") {
          _.storeBit(0), _.store((0, ComputeSkipReason_1.storeComputeSkipReason)(d.reason));
          return;
        }
        _.storeBit(1), _.storeBit(d.success), _.storeBit(d.messageStateUsed), _.storeBit(d.accountActivated), _.storeCoins(d.gasFees), _.storeRef((0, Builder_1.beginCell)().storeVarUint(d.gasUsed, 3).storeVarUint(d.gasLimit, 3).store(($) => d.gasCredit !== void 0 && d.gasCredit !== null ? $.storeBit(1).storeVarUint(d.gasCredit, 2) : $.storeBit(0)).storeUint(d.mode, 8).storeInt(d.exitCode, 32).store(($) => d.exitArg !== void 0 && d.exitArg !== null ? $.storeBit(1).storeInt(d.exitArg, 32) : $.storeBit(0)).storeUint(d.vmSteps, 32).storeUint(d.vmInitStateHash, 256).storeUint(d.vmFinalStateHash, 256).endCell());
      };
    }
    TransactionComputePhase.storeTransactionComputePhase = storeTransactionComputePhase;
    var TransactionCreditPhase = {};
    Object.defineProperty(TransactionCreditPhase, "__esModule", {
      value: true
    });
    TransactionCreditPhase.storeTransactionCreditPhase = TransactionCreditPhase.loadTransactionCreditPhase = void 0;
    const CurrencyCollection_1 = CurrencyCollection;
    function loadTransactionCreditPhase(d) {
      const _ = d.loadBit() ? d.loadCoins() : void 0, $ = (0, CurrencyCollection_1.loadCurrencyCollection)(d);
      return {
        dueFeesColelcted: _,
        credit: $
      };
    }
    TransactionCreditPhase.loadTransactionCreditPhase = loadTransactionCreditPhase;
    function storeTransactionCreditPhase(d) {
      return (_) => {
        d.dueFeesColelcted === null || d.dueFeesColelcted === void 0 ? _.storeBit(false) : (_.storeBit(true), _.storeCoins(d.dueFeesColelcted)), _.store((0, CurrencyCollection_1.storeCurrencyCollection)(d.credit));
      };
    }
    TransactionCreditPhase.storeTransactionCreditPhase = storeTransactionCreditPhase;
    var TransactionStoragePhase = {};
    Object.defineProperty(TransactionStoragePhase, "__esModule", {
      value: true
    });
    TransactionStoragePhase.storeTransactionsStoragePhase = TransactionStoragePhase.loadTransactionStoragePhase = void 0;
    const AccountStatusChange_1 = AccountStatusChange;
    function loadTransactionStoragePhase(d) {
      const _ = d.loadCoins();
      let $;
      d.loadBit() && ($ = d.loadCoins());
      const j = (0, AccountStatusChange_1.loadAccountStatusChange)(d);
      return {
        storageFeesCollected: _,
        storageFeesDue: $,
        statusChange: j
      };
    }
    TransactionStoragePhase.loadTransactionStoragePhase = loadTransactionStoragePhase;
    function storeTransactionsStoragePhase(d) {
      return (_) => {
        _.storeCoins(d.storageFeesCollected), d.storageFeesDue === null || d.storageFeesDue === void 0 ? _.storeBit(false) : (_.storeBit(true), _.storeCoins(d.storageFeesDue)), _.store((0, AccountStatusChange_1.storeAccountStatusChange)(d.statusChange));
      };
    }
    TransactionStoragePhase.storeTransactionsStoragePhase = storeTransactionsStoragePhase;
    var hasRequiredTransactionDescription;
    function requireTransactionDescription() {
      if (hasRequiredTransactionDescription) return TransactionDescription;
      hasRequiredTransactionDescription = 1, Object.defineProperty(TransactionDescription, "__esModule", {
        value: true
      }), TransactionDescription.storeTransactionDescription = TransactionDescription.loadTransactionDescription = void 0;
      const d = requireBuilder(), _ = SplitMergeInfo, $ = requireTransaction(), j = TransactionActionPhase, rt = TransactionBouncePhase, et = TransactionComputePhase, st = TransactionCreditPhase, pt = TransactionStoragePhase;
      function Et(St) {
        let $t = St.loadUint(4);
        if ($t === 0) {
          const kt = St.loadBit();
          let Tt;
          St.loadBit() && (Tt = (0, pt.loadTransactionStoragePhase)(St));
          let Pt;
          St.loadBit() && (Pt = (0, st.loadTransactionCreditPhase)(St));
          let It = (0, et.loadTransactionComputePhase)(St), jt;
          St.loadBit() && (jt = (0, j.loadTransactionActionPhase)(St.loadRef().beginParse()));
          let Dt = St.loadBit(), Ot;
          St.loadBit() && (Ot = (0, rt.loadTransactionBouncePhase)(St));
          const Ft = St.loadBit();
          return {
            type: "generic",
            creditFirst: kt,
            storagePhase: Tt,
            creditPhase: Pt,
            computePhase: It,
            actionPhase: jt,
            bouncePhase: Ot,
            aborted: Dt,
            destroyed: Ft
          };
        }
        if ($t === 1) return {
          type: "storage",
          storagePhase: (0, pt.loadTransactionStoragePhase)(St)
        };
        if ($t === 2 || $t === 3) {
          const kt = $t === 3;
          let Tt = (0, pt.loadTransactionStoragePhase)(St), Pt = (0, et.loadTransactionComputePhase)(St), It;
          St.loadBit() && (It = (0, j.loadTransactionActionPhase)(St.loadRef().beginParse()));
          const jt = St.loadBit(), Dt = St.loadBit();
          return {
            type: "tick-tock",
            isTock: kt,
            storagePhase: Tt,
            computePhase: Pt,
            actionPhase: It,
            aborted: jt,
            destroyed: Dt
          };
        }
        if ($t === 4) {
          let kt = (0, _.loadSplitMergeInfo)(St), Tt;
          St.loadBit() && (Tt = (0, pt.loadTransactionStoragePhase)(St));
          let Pt = (0, et.loadTransactionComputePhase)(St), It;
          St.loadBit() && (It = (0, j.loadTransactionActionPhase)(St.loadRef().beginParse()));
          const jt = St.loadBit(), Dt = St.loadBit();
          return {
            type: "split-prepare",
            splitInfo: kt,
            storagePhase: Tt,
            computePhase: Pt,
            actionPhase: It,
            aborted: jt,
            destroyed: Dt
          };
        }
        if ($t === 5) {
          let kt = (0, _.loadSplitMergeInfo)(St), Tt = (0, $.loadTransaction)(St.loadRef().beginParse());
          const Pt = St.loadBit();
          return {
            type: "split-install",
            splitInfo: kt,
            prepareTransaction: Tt,
            installed: Pt
          };
        }
        throw Error(`Unsupported transaction description type ${$t}`);
      }
      TransactionDescription.loadTransactionDescription = Et;
      function Bt(St) {
        return ($t) => {
          if (St.type === "generic") $t.storeUint(0, 4), $t.storeBit(St.creditFirst), St.storagePhase ? ($t.storeBit(true), $t.store((0, pt.storeTransactionsStoragePhase)(St.storagePhase))) : $t.storeBit(false), St.creditPhase ? ($t.storeBit(true), $t.store((0, st.storeTransactionCreditPhase)(St.creditPhase))) : $t.storeBit(false), $t.store((0, et.storeTransactionComputePhase)(St.computePhase)), St.actionPhase ? ($t.storeBit(true), $t.storeRef((0, d.beginCell)().store((0, j.storeTransactionActionPhase)(St.actionPhase)))) : $t.storeBit(false), $t.storeBit(St.aborted), St.bouncePhase ? ($t.storeBit(true), $t.store((0, rt.storeTransactionBouncePhase)(St.bouncePhase))) : $t.storeBit(false), $t.storeBit(St.destroyed);
          else if (St.type === "storage") $t.storeUint(1, 4), $t.store((0, pt.storeTransactionsStoragePhase)(St.storagePhase));
          else if (St.type === "tick-tock") $t.storeUint(St.isTock ? 3 : 2, 4), $t.store((0, pt.storeTransactionsStoragePhase)(St.storagePhase)), $t.store((0, et.storeTransactionComputePhase)(St.computePhase)), St.actionPhase ? ($t.storeBit(true), $t.storeRef((0, d.beginCell)().store((0, j.storeTransactionActionPhase)(St.actionPhase)))) : $t.storeBit(false), $t.storeBit(St.aborted), $t.storeBit(St.destroyed);
          else if (St.type === "split-prepare") $t.storeUint(4, 4), $t.store((0, _.storeSplitMergeInfo)(St.splitInfo)), St.storagePhase ? ($t.storeBit(true), $t.store((0, pt.storeTransactionsStoragePhase)(St.storagePhase))) : $t.storeBit(false), $t.store((0, et.storeTransactionComputePhase)(St.computePhase)), St.actionPhase ? ($t.storeBit(true), $t.store((0, j.storeTransactionActionPhase)(St.actionPhase))) : $t.storeBit(false), $t.storeBit(St.aborted), $t.storeBit(St.destroyed);
          else if (St.type === "split-install") $t.storeUint(5, 4), $t.store((0, _.storeSplitMergeInfo)(St.splitInfo)), $t.storeRef((0, d.beginCell)().store((0, $.storeTransaction)(St.prepareTransaction))), $t.storeBit(St.installed);
          else throw Error(`Unsupported transaction description type ${St.type}`);
        };
      }
      return TransactionDescription.storeTransactionDescription = Bt, TransactionDescription;
    }
    var hasRequiredTransaction;
    function requireTransaction() {
      if (hasRequiredTransaction) return Transaction;
      hasRequiredTransaction = 1, Object.defineProperty(Transaction, "__esModule", {
        value: true
      }), Transaction.storeTransaction = Transaction.loadTransaction = void 0;
      const d = requireBuilder(), _ = requireDictionary(), $ = AccountStatus, j = CurrencyCollection, rt = HashUpdate, et = Message, st = requireTransactionDescription();
      function pt(Bt) {
        let St = Bt.asCell();
        if (Bt.loadUint(4) !== 7) throw Error("Invalid data");
        let $t = Bt.loadUintBig(256), kt = Bt.loadUintBig(64), Tt = Bt.loadUintBig(256), Pt = Bt.loadUintBig(64), It = Bt.loadUint(32), jt = Bt.loadUint(15), Dt = (0, $.loadAccountStatus)(Bt), Ot = (0, $.loadAccountStatus)(Bt), Lt = Bt.loadRef().beginParse(), Zt = Lt.loadBit() ? (0, et.loadMessage)(Lt.loadRef().beginParse()) : void 0, Kt = Lt.loadDict(_.Dictionary.Keys.Uint(15), et.MessageValue);
        Lt.endParse();
        let ar = (0, j.loadCurrencyCollection)(Bt), sr = (0, rt.loadHashUpdate)(Bt.loadRef().beginParse()), er = (0, st.loadTransactionDescription)(Bt.loadRef().beginParse());
        return {
          address: $t,
          lt: kt,
          prevTransactionHash: Tt,
          prevTransactionLt: Pt,
          now: It,
          outMessagesCount: jt,
          oldStatus: Dt,
          endStatus: Ot,
          inMessage: Zt,
          outMessages: Kt,
          totalFees: ar,
          stateUpdate: sr,
          description: er,
          raw: St,
          hash: () => St.hash()
        };
      }
      Transaction.loadTransaction = pt;
      function Et(Bt) {
        return (St) => {
          St.storeUint(7, 4), St.storeUint(Bt.address, 256), St.storeUint(Bt.lt, 64), St.storeUint(Bt.prevTransactionHash, 256), St.storeUint(Bt.prevTransactionLt, 64), St.storeUint(Bt.now, 32), St.storeUint(Bt.outMessagesCount, 15), St.store((0, $.storeAccountStatus)(Bt.oldStatus)), St.store((0, $.storeAccountStatus)(Bt.endStatus));
          let $t = (0, d.beginCell)();
          Bt.inMessage ? ($t.storeBit(true), $t.storeRef((0, d.beginCell)().store((0, et.storeMessage)(Bt.inMessage)))) : $t.storeBit(false), $t.storeDict(Bt.outMessages), St.storeRef($t), St.store((0, j.storeCurrencyCollection)(Bt.totalFees)), St.storeRef((0, d.beginCell)().store((0, rt.storeHashUpdate)(Bt.stateUpdate))), St.storeRef((0, d.beginCell)().store((0, st.storeTransactionDescription)(Bt.description)));
        };
      }
      return Transaction.storeTransaction = Et, Transaction;
    }
    (function(d) {
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.loadSimpleLibrary = d.loadShardStateUnsplit = d.storeShardIdent = d.loadShardIdent = d.storeShardAccounts = d.loadShardAccounts = d.ShardAccountRefValue = d.storeShardAccount = d.loadShardAccount = d.ReserveMode = d.SendMode = d.storeMessageRelaxed = d.loadMessageRelaxed = d.storeMessage = d.loadMessage = d.loadMasterchainStateExtra = d.storeHashUpdate = d.loadHashUpdate = d.storeExtraCurrency = d.loadMaybeExtraCurrency = d.loadExtraCurrency = d.packExtraCurrencyDict = d.packExtraCurrencyCell = d.storeDepthBalanceInfo = d.loadDepthBalanceInfo = d.storeCurrencyCollection = d.loadCurrencyCollection = d.storeComputeSkipReason = d.loadComputeSkipReason = d.storeCommonMessageInfoRelaxed = d.loadCommonMessageInfoRelaxed = d.storeCommonMessageInfo = d.loadCommonMessageInfo = d.storeOutList = d.loadOutList = d.storeOutAction = d.loadOutAction = d.storeAccountStorage = d.loadAccountStorage = d.storeAccountStatusChange = d.loadAccountStatusChange = d.storeAccountStatus = d.loadAccountStatus = d.storeAccountState = d.loadAccountState = d.storeAccount = d.loadAccount = d.comment = d.external = d.internal = void 0, d.storeTransactionsStoragePhase = d.loadTransactionStoragePhase = d.storeTransactionDescription = d.loadTransactionDescription = d.storeTransactionCreditPhase = d.loadTransactionCreditPhase = d.storeTransactionComputePhase = d.loadTransactionComputePhase = d.storeTransactionBouncePhase = d.loadTransactionBouncePhase = d.storeTransactionActionPhase = d.loadTransactionActionPhase = d.storeTransaction = d.loadTransaction = d.storeTickTock = d.loadTickTock = d.storeStorageUsedShort = d.loadStorageUsedShort = d.storeStorageUsed = d.loadStorageUsed = d.storeStorageInfo = d.loadStorageInfo = d.storeStateInit = d.loadStateInit = d.storeSplitMergeInfo = d.loadSplitMergeInfo = d.storeLibRef = d.loadLibRef = d.storeSimpleLibrary = void 0;
      var _ = _helpers;
      Object.defineProperty(d, "internal", {
        enumerable: true,
        get: function() {
          return _.internal;
        }
      }), Object.defineProperty(d, "external", {
        enumerable: true,
        get: function() {
          return _.external;
        }
      }), Object.defineProperty(d, "comment", {
        enumerable: true,
        get: function() {
          return _.comment;
        }
      });
      var $ = Account;
      Object.defineProperty(d, "loadAccount", {
        enumerable: true,
        get: function() {
          return $.loadAccount;
        }
      }), Object.defineProperty(d, "storeAccount", {
        enumerable: true,
        get: function() {
          return $.storeAccount;
        }
      });
      var j = AccountState;
      Object.defineProperty(d, "loadAccountState", {
        enumerable: true,
        get: function() {
          return j.loadAccountState;
        }
      }), Object.defineProperty(d, "storeAccountState", {
        enumerable: true,
        get: function() {
          return j.storeAccountState;
        }
      });
      var rt = AccountStatus;
      Object.defineProperty(d, "loadAccountStatus", {
        enumerable: true,
        get: function() {
          return rt.loadAccountStatus;
        }
      }), Object.defineProperty(d, "storeAccountStatus", {
        enumerable: true,
        get: function() {
          return rt.storeAccountStatus;
        }
      });
      var et = AccountStatusChange;
      Object.defineProperty(d, "loadAccountStatusChange", {
        enumerable: true,
        get: function() {
          return et.loadAccountStatusChange;
        }
      }), Object.defineProperty(d, "storeAccountStatusChange", {
        enumerable: true,
        get: function() {
          return et.storeAccountStatusChange;
        }
      });
      var st = AccountStorage;
      Object.defineProperty(d, "loadAccountStorage", {
        enumerable: true,
        get: function() {
          return st.loadAccountStorage;
        }
      }), Object.defineProperty(d, "storeAccountStorage", {
        enumerable: true,
        get: function() {
          return st.storeAccountStorage;
        }
      });
      var pt = OutList;
      Object.defineProperty(d, "loadOutAction", {
        enumerable: true,
        get: function() {
          return pt.loadOutAction;
        }
      }), Object.defineProperty(d, "storeOutAction", {
        enumerable: true,
        get: function() {
          return pt.storeOutAction;
        }
      }), Object.defineProperty(d, "loadOutList", {
        enumerable: true,
        get: function() {
          return pt.loadOutList;
        }
      }), Object.defineProperty(d, "storeOutList", {
        enumerable: true,
        get: function() {
          return pt.storeOutList;
        }
      });
      var Et = CommonMessageInfo;
      Object.defineProperty(d, "loadCommonMessageInfo", {
        enumerable: true,
        get: function() {
          return Et.loadCommonMessageInfo;
        }
      }), Object.defineProperty(d, "storeCommonMessageInfo", {
        enumerable: true,
        get: function() {
          return Et.storeCommonMessageInfo;
        }
      });
      var Bt = CommonMessageInfoRelaxed;
      Object.defineProperty(d, "loadCommonMessageInfoRelaxed", {
        enumerable: true,
        get: function() {
          return Bt.loadCommonMessageInfoRelaxed;
        }
      }), Object.defineProperty(d, "storeCommonMessageInfoRelaxed", {
        enumerable: true,
        get: function() {
          return Bt.storeCommonMessageInfoRelaxed;
        }
      });
      var St = ComputeSkipReason;
      Object.defineProperty(d, "loadComputeSkipReason", {
        enumerable: true,
        get: function() {
          return St.loadComputeSkipReason;
        }
      }), Object.defineProperty(d, "storeComputeSkipReason", {
        enumerable: true,
        get: function() {
          return St.storeComputeSkipReason;
        }
      });
      var $t = CurrencyCollection;
      Object.defineProperty(d, "loadCurrencyCollection", {
        enumerable: true,
        get: function() {
          return $t.loadCurrencyCollection;
        }
      }), Object.defineProperty(d, "storeCurrencyCollection", {
        enumerable: true,
        get: function() {
          return $t.storeCurrencyCollection;
        }
      });
      var kt = DepthBalanceInfo;
      Object.defineProperty(d, "loadDepthBalanceInfo", {
        enumerable: true,
        get: function() {
          return kt.loadDepthBalanceInfo;
        }
      }), Object.defineProperty(d, "storeDepthBalanceInfo", {
        enumerable: true,
        get: function() {
          return kt.storeDepthBalanceInfo;
        }
      });
      var Tt = ExtraCurrency;
      Object.defineProperty(d, "packExtraCurrencyCell", {
        enumerable: true,
        get: function() {
          return Tt.packExtraCurrencyCell;
        }
      }), Object.defineProperty(d, "packExtraCurrencyDict", {
        enumerable: true,
        get: function() {
          return Tt.packExtraCurrencyDict;
        }
      }), Object.defineProperty(d, "loadExtraCurrency", {
        enumerable: true,
        get: function() {
          return Tt.loadExtraCurrency;
        }
      }), Object.defineProperty(d, "loadMaybeExtraCurrency", {
        enumerable: true,
        get: function() {
          return Tt.loadMaybeExtraCurrency;
        }
      }), Object.defineProperty(d, "storeExtraCurrency", {
        enumerable: true,
        get: function() {
          return Tt.storeExtraCurrency;
        }
      });
      var Pt = HashUpdate;
      Object.defineProperty(d, "loadHashUpdate", {
        enumerable: true,
        get: function() {
          return Pt.loadHashUpdate;
        }
      }), Object.defineProperty(d, "storeHashUpdate", {
        enumerable: true,
        get: function() {
          return Pt.storeHashUpdate;
        }
      });
      var It = MasterchainStateExtra;
      Object.defineProperty(d, "loadMasterchainStateExtra", {
        enumerable: true,
        get: function() {
          return It.loadMasterchainStateExtra;
        }
      });
      var jt = Message;
      Object.defineProperty(d, "loadMessage", {
        enumerable: true,
        get: function() {
          return jt.loadMessage;
        }
      }), Object.defineProperty(d, "storeMessage", {
        enumerable: true,
        get: function() {
          return jt.storeMessage;
        }
      });
      var Dt = MessageRelaxed;
      Object.defineProperty(d, "loadMessageRelaxed", {
        enumerable: true,
        get: function() {
          return Dt.loadMessageRelaxed;
        }
      }), Object.defineProperty(d, "storeMessageRelaxed", {
        enumerable: true,
        get: function() {
          return Dt.storeMessageRelaxed;
        }
      });
      var Ot = SendMode$1;
      Object.defineProperty(d, "SendMode", {
        enumerable: true,
        get: function() {
          return Ot.SendMode;
        }
      });
      var Ft = ReserveMode$1;
      Object.defineProperty(d, "ReserveMode", {
        enumerable: true,
        get: function() {
          return Ft.ReserveMode;
        }
      });
      var Lt = ShardAccount;
      Object.defineProperty(d, "loadShardAccount", {
        enumerable: true,
        get: function() {
          return Lt.loadShardAccount;
        }
      }), Object.defineProperty(d, "storeShardAccount", {
        enumerable: true,
        get: function() {
          return Lt.storeShardAccount;
        }
      });
      var Zt = ShardAccounts;
      Object.defineProperty(d, "ShardAccountRefValue", {
        enumerable: true,
        get: function() {
          return Zt.ShardAccountRefValue;
        }
      }), Object.defineProperty(d, "loadShardAccounts", {
        enumerable: true,
        get: function() {
          return Zt.loadShardAccounts;
        }
      }), Object.defineProperty(d, "storeShardAccounts", {
        enumerable: true,
        get: function() {
          return Zt.storeShardAccounts;
        }
      });
      var Kt = ShardIdent;
      Object.defineProperty(d, "loadShardIdent", {
        enumerable: true,
        get: function() {
          return Kt.loadShardIdent;
        }
      }), Object.defineProperty(d, "storeShardIdent", {
        enumerable: true,
        get: function() {
          return Kt.storeShardIdent;
        }
      });
      var ar = ShardStateUnsplit;
      Object.defineProperty(d, "loadShardStateUnsplit", {
        enumerable: true,
        get: function() {
          return ar.loadShardStateUnsplit;
        }
      });
      var sr = SimpleLibrary;
      Object.defineProperty(d, "loadSimpleLibrary", {
        enumerable: true,
        get: function() {
          return sr.loadSimpleLibrary;
        }
      }), Object.defineProperty(d, "storeSimpleLibrary", {
        enumerable: true,
        get: function() {
          return sr.storeSimpleLibrary;
        }
      });
      var er = LibRef;
      Object.defineProperty(d, "loadLibRef", {
        enumerable: true,
        get: function() {
          return er.loadLibRef;
        }
      }), Object.defineProperty(d, "storeLibRef", {
        enumerable: true,
        get: function() {
          return er.storeLibRef;
        }
      });
      var Ut = SplitMergeInfo;
      Object.defineProperty(d, "loadSplitMergeInfo", {
        enumerable: true,
        get: function() {
          return Ut.loadSplitMergeInfo;
        }
      }), Object.defineProperty(d, "storeSplitMergeInfo", {
        enumerable: true,
        get: function() {
          return Ut.storeSplitMergeInfo;
        }
      });
      var xt = StateInit;
      Object.defineProperty(d, "loadStateInit", {
        enumerable: true,
        get: function() {
          return xt.loadStateInit;
        }
      }), Object.defineProperty(d, "storeStateInit", {
        enumerable: true,
        get: function() {
          return xt.storeStateInit;
        }
      });
      var tt = StorageInto;
      Object.defineProperty(d, "loadStorageInfo", {
        enumerable: true,
        get: function() {
          return tt.loadStorageInfo;
        }
      }), Object.defineProperty(d, "storeStorageInfo", {
        enumerable: true,
        get: function() {
          return tt.storeStorageInfo;
        }
      });
      var nt = StorageUsed;
      Object.defineProperty(d, "loadStorageUsed", {
        enumerable: true,
        get: function() {
          return nt.loadStorageUsed;
        }
      }), Object.defineProperty(d, "storeStorageUsed", {
        enumerable: true,
        get: function() {
          return nt.storeStorageUsed;
        }
      });
      var it = StorageUsedShort;
      Object.defineProperty(d, "loadStorageUsedShort", {
        enumerable: true,
        get: function() {
          return it.loadStorageUsedShort;
        }
      }), Object.defineProperty(d, "storeStorageUsedShort", {
        enumerable: true,
        get: function() {
          return it.storeStorageUsedShort;
        }
      });
      var at = TickTock;
      Object.defineProperty(d, "loadTickTock", {
        enumerable: true,
        get: function() {
          return at.loadTickTock;
        }
      }), Object.defineProperty(d, "storeTickTock", {
        enumerable: true,
        get: function() {
          return at.storeTickTock;
        }
      });
      var ct = requireTransaction();
      Object.defineProperty(d, "loadTransaction", {
        enumerable: true,
        get: function() {
          return ct.loadTransaction;
        }
      }), Object.defineProperty(d, "storeTransaction", {
        enumerable: true,
        get: function() {
          return ct.storeTransaction;
        }
      });
      var Mt = TransactionActionPhase;
      Object.defineProperty(d, "loadTransactionActionPhase", {
        enumerable: true,
        get: function() {
          return Mt.loadTransactionActionPhase;
        }
      }), Object.defineProperty(d, "storeTransactionActionPhase", {
        enumerable: true,
        get: function() {
          return Mt.storeTransactionActionPhase;
        }
      });
      var At = TransactionBouncePhase;
      Object.defineProperty(d, "loadTransactionBouncePhase", {
        enumerable: true,
        get: function() {
          return At.loadTransactionBouncePhase;
        }
      }), Object.defineProperty(d, "storeTransactionBouncePhase", {
        enumerable: true,
        get: function() {
          return At.storeTransactionBouncePhase;
        }
      });
      var ut = TransactionComputePhase;
      Object.defineProperty(d, "loadTransactionComputePhase", {
        enumerable: true,
        get: function() {
          return ut.loadTransactionComputePhase;
        }
      }), Object.defineProperty(d, "storeTransactionComputePhase", {
        enumerable: true,
        get: function() {
          return ut.storeTransactionComputePhase;
        }
      });
      var ot = TransactionCreditPhase;
      Object.defineProperty(d, "loadTransactionCreditPhase", {
        enumerable: true,
        get: function() {
          return ot.loadTransactionCreditPhase;
        }
      }), Object.defineProperty(d, "storeTransactionCreditPhase", {
        enumerable: true,
        get: function() {
          return ot.storeTransactionCreditPhase;
        }
      });
      var Ct = requireTransactionDescription();
      Object.defineProperty(d, "loadTransactionDescription", {
        enumerable: true,
        get: function() {
          return Ct.loadTransactionDescription;
        }
      }), Object.defineProperty(d, "storeTransactionDescription", {
        enumerable: true,
        get: function() {
          return Ct.storeTransactionDescription;
        }
      });
      var Rt = TransactionStoragePhase;
      Object.defineProperty(d, "loadTransactionStoragePhase", {
        enumerable: true,
        get: function() {
          return Rt.loadTransactionStoragePhase;
        }
      }), Object.defineProperty(d, "storeTransactionsStoragePhase", {
        enumerable: true,
        get: function() {
          return Rt.storeTransactionsStoragePhase;
        }
      });
    })(_export);
    var openContract$1 = {};
    Object.defineProperty(openContract$1, "__esModule", {
      value: true
    });
    openContract$1.openContract = void 0;
    const Address_1 = Address$n, Cell_1$1 = requireCell();
    function openContract(d, _) {
      let $, j = null;
      if (!Address_1.Address.isAddress(d.address)) throw Error("Invalid address");
      if ($ = d.address, d.init) {
        if (!(d.init.code instanceof Cell_1$1.Cell)) throw Error("Invalid init.code");
        if (!(d.init.data instanceof Cell_1$1.Cell)) throw Error("Invalid init.data");
        j = d.init;
      }
      let rt = _({
        address: $,
        init: j
      });
      return new Proxy(d, {
        get(et, st) {
          const pt = et[st];
          return typeof st == "string" && (st.startsWith("get") || st.startsWith("send") || st.startsWith("is")) && typeof pt == "function" ? (...Et) => pt.apply(et, [
            rt,
            ...Et
          ]) : pt;
        }
      });
    }
    openContract$1.openContract = openContract;
    var ComputeError$1 = {};
    Object.defineProperty(ComputeError$1, "__esModule", {
      value: true
    });
    ComputeError$1.ComputeError = void 0;
    class ComputeError extends Error {
      constructor(_, $, j) {
        super(_), this.exitCode = $, this.debugLogs = j && j.debugLogs ? j.debugLogs : null, this.logs = j && j.logs ? j.logs : null, Object.setPrototypeOf(this, ComputeError.prototype);
      }
    }
    ComputeError$1.ComputeError = ComputeError;
    var getMethodId$1 = {};
    Object.defineProperty(getMethodId$1, "__esModule", {
      value: true
    });
    getMethodId$1.getMethodId = void 0;
    const TABLE = new Int16Array([
      0,
      4129,
      8258,
      12387,
      16516,
      20645,
      24774,
      28903,
      33032,
      37161,
      41290,
      45419,
      49548,
      53677,
      57806,
      61935,
      4657,
      528,
      12915,
      8786,
      21173,
      17044,
      29431,
      25302,
      37689,
      33560,
      45947,
      41818,
      54205,
      50076,
      62463,
      58334,
      9314,
      13379,
      1056,
      5121,
      25830,
      29895,
      17572,
      21637,
      42346,
      46411,
      34088,
      38153,
      58862,
      62927,
      50604,
      54669,
      13907,
      9842,
      5649,
      1584,
      30423,
      26358,
      22165,
      18100,
      46939,
      42874,
      38681,
      34616,
      63455,
      59390,
      55197,
      51132,
      18628,
      22757,
      26758,
      30887,
      2112,
      6241,
      10242,
      14371,
      51660,
      55789,
      59790,
      63919,
      35144,
      39273,
      43274,
      47403,
      23285,
      19156,
      31415,
      27286,
      6769,
      2640,
      14899,
      10770,
      56317,
      52188,
      64447,
      60318,
      39801,
      35672,
      47931,
      43802,
      27814,
      31879,
      19684,
      23749,
      11298,
      15363,
      3168,
      7233,
      60846,
      64911,
      52716,
      56781,
      44330,
      48395,
      36200,
      40265,
      32407,
      28342,
      24277,
      20212,
      15891,
      11826,
      7761,
      3696,
      65439,
      61374,
      57309,
      53244,
      48923,
      44858,
      40793,
      36728,
      37256,
      33193,
      45514,
      41451,
      53516,
      49453,
      61774,
      57711,
      4224,
      161,
      12482,
      8419,
      20484,
      16421,
      28742,
      24679,
      33721,
      37784,
      41979,
      46042,
      49981,
      54044,
      58239,
      62302,
      689,
      4752,
      8947,
      13010,
      16949,
      21012,
      25207,
      29270,
      46570,
      42443,
      38312,
      34185,
      62830,
      58703,
      54572,
      50445,
      13538,
      9411,
      5280,
      1153,
      29798,
      25671,
      21540,
      17413,
      42971,
      47098,
      34713,
      38840,
      59231,
      63358,
      50973,
      55100,
      9939,
      14066,
      1681,
      5808,
      26199,
      30326,
      17941,
      22068,
      55628,
      51565,
      63758,
      59695,
      39368,
      35305,
      47498,
      43435,
      22596,
      18533,
      30726,
      26663,
      6336,
      2273,
      14466,
      10403,
      52093,
      56156,
      60223,
      64286,
      35833,
      39896,
      43963,
      48026,
      19061,
      23124,
      27191,
      31254,
      2801,
      6864,
      10931,
      14994,
      64814,
      60687,
      56684,
      52557,
      48554,
      44427,
      40424,
      36297,
      31782,
      27655,
      23652,
      19525,
      15522,
      11395,
      7392,
      3265,
      61215,
      65342,
      53085,
      57212,
      44955,
      49082,
      36825,
      40952,
      28183,
      32310,
      20053,
      24180,
      11923,
      16050,
      3793,
      7920
    ]);
    function crc16$3(d) {
      d instanceof Buffer || (d = Buffer.from(d));
      let _ = 0;
      for (let $ = 0; $ < d.length; $++) {
        const j = d[$];
        _ = (TABLE[(_ >> 8 ^ j) & 255] ^ _ << 8) & 65535;
      }
      return _;
    }
    function getMethodId(d) {
      return crc16$3(d) & 65535 | 65536;
    }
    getMethodId$1.getMethodId = getMethodId;
    var safeSign$1 = {};
    Object.defineProperty(safeSign$1, "__esModule", {
      value: true
    });
    safeSign$1.safeSignVerify = safeSign$1.safeSign = void 0;
    const crypto_1$3 = requireDist(), MIN_SEED_LENGTH = 8, MAX_SEED_LENGTH = 64;
    function createSafeSignHash(d, _) {
      let $ = Buffer.from(_);
      if ($.length > MAX_SEED_LENGTH) throw Error("Seed can	 be longer than 64 bytes");
      if ($.length < MIN_SEED_LENGTH) throw Error("Seed must be at least 8 bytes");
      return (0, crypto_1$3.sha256_sync)(Buffer.concat([
        Buffer.from([
          255,
          255
        ]),
        $,
        d.hash()
      ]));
    }
    function safeSign(d, _, $ = "ton-safe-sign-magic") {
      return (0, crypto_1$3.sign)(createSafeSignHash(d, $), _);
    }
    safeSign$1.safeSign = safeSign;
    function safeSignVerify(d, _, $, j = "ton-safe-sign-magic") {
      return (0, crypto_1$3.signVerify)(createSafeSignHash(d, j), _, $);
    }
    safeSign$1.safeSignVerify = safeSignVerify;
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(at, ct, Mt, At) {
        At === void 0 && (At = Mt);
        var ut = Object.getOwnPropertyDescriptor(ct, Mt);
        (!ut || ("get" in ut ? !ct.__esModule : ut.writable || ut.configurable)) && (ut = {
          enumerable: true,
          get: function() {
            return ct[Mt];
          }
        }), Object.defineProperty(at, At, ut);
      } : function(at, ct, Mt, At) {
        At === void 0 && (At = Mt), at[At] = ct[Mt];
      }), $ = commonjsGlobal && commonjsGlobal.__exportStar || function(at, ct) {
        for (var Mt in at) Mt !== "default" && !Object.prototype.hasOwnProperty.call(ct, Mt) && _(ct, at, Mt);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.safeSignVerify = d.safeSign = d.getMethodId = d.base32Encode = d.base32Decode = d.crc32c = d.crc16 = d.fromNano = d.toNano = d.ComputeError = d.openContract = d.TupleBuilder = d.TupleReader = d.serializeTuple = d.parseTuple = d.generateMerkleUpdate = d.generateMerkleProofDirect = d.generateMerkleProof = d.exoticPruned = d.exoticMerkleUpdate = d.convertToMerkleProof = d.exoticMerkleProof = d.Dictionary = d.Cell = d.CellType = d.Slice = d.beginCell = d.Builder = d.BitBuilder = d.BitReader = d.BitString = d.contractAddress = d.ADNLAddress = d.ExternalAddress = d.address = d.Address = void 0;
      var j = Address$n;
      Object.defineProperty(d, "Address", {
        enumerable: true,
        get: function() {
          return j.Address;
        }
      }), Object.defineProperty(d, "address", {
        enumerable: true,
        get: function() {
          return j.address;
        }
      });
      var rt = ExternalAddress$1;
      Object.defineProperty(d, "ExternalAddress", {
        enumerable: true,
        get: function() {
          return rt.ExternalAddress;
        }
      });
      var et = ADNLAddress$1;
      Object.defineProperty(d, "ADNLAddress", {
        enumerable: true,
        get: function() {
          return et.ADNLAddress;
        }
      });
      var st = contractAddress$1;
      Object.defineProperty(d, "contractAddress", {
        enumerable: true,
        get: function() {
          return st.contractAddress;
        }
      });
      var pt = requireBitString();
      Object.defineProperty(d, "BitString", {
        enumerable: true,
        get: function() {
          return pt.BitString;
        }
      });
      var Et = BitReader$1;
      Object.defineProperty(d, "BitReader", {
        enumerable: true,
        get: function() {
          return Et.BitReader;
        }
      });
      var Bt = requireBitBuilder();
      Object.defineProperty(d, "BitBuilder", {
        enumerable: true,
        get: function() {
          return Bt.BitBuilder;
        }
      });
      var St = requireBuilder();
      Object.defineProperty(d, "Builder", {
        enumerable: true,
        get: function() {
          return St.Builder;
        }
      }), Object.defineProperty(d, "beginCell", {
        enumerable: true,
        get: function() {
          return St.beginCell;
        }
      });
      var $t = requireSlice();
      Object.defineProperty(d, "Slice", {
        enumerable: true,
        get: function() {
          return $t.Slice;
        }
      });
      var kt = CellType$1;
      Object.defineProperty(d, "CellType", {
        enumerable: true,
        get: function() {
          return kt.CellType;
        }
      });
      var Tt = requireCell();
      Object.defineProperty(d, "Cell", {
        enumerable: true,
        get: function() {
          return Tt.Cell;
        }
      });
      var Pt = requireDictionary();
      Object.defineProperty(d, "Dictionary", {
        enumerable: true,
        get: function() {
          return Pt.Dictionary;
        }
      });
      var It = requireExoticMerkleProof();
      Object.defineProperty(d, "exoticMerkleProof", {
        enumerable: true,
        get: function() {
          return It.exoticMerkleProof;
        }
      }), Object.defineProperty(d, "convertToMerkleProof", {
        enumerable: true,
        get: function() {
          return It.convertToMerkleProof;
        }
      });
      var jt = exoticMerkleUpdate$1;
      Object.defineProperty(d, "exoticMerkleUpdate", {
        enumerable: true,
        get: function() {
          return jt.exoticMerkleUpdate;
        }
      });
      var Dt = exoticPruned$1;
      Object.defineProperty(d, "exoticPruned", {
        enumerable: true,
        get: function() {
          return Dt.exoticPruned;
        }
      });
      var Ot = requireGenerateMerkleProof();
      Object.defineProperty(d, "generateMerkleProof", {
        enumerable: true,
        get: function() {
          return Ot.generateMerkleProof;
        }
      }), Object.defineProperty(d, "generateMerkleProofDirect", {
        enumerable: true,
        get: function() {
          return Ot.generateMerkleProofDirect;
        }
      });
      var Ft = requireGenerateMerkleUpdate();
      Object.defineProperty(d, "generateMerkleUpdate", {
        enumerable: true,
        get: function() {
          return Ft.generateMerkleUpdate;
        }
      });
      var Lt = tuple;
      Object.defineProperty(d, "parseTuple", {
        enumerable: true,
        get: function() {
          return Lt.parseTuple;
        }
      }), Object.defineProperty(d, "serializeTuple", {
        enumerable: true,
        get: function() {
          return Lt.serializeTuple;
        }
      });
      var Zt = reader;
      Object.defineProperty(d, "TupleReader", {
        enumerable: true,
        get: function() {
          return Zt.TupleReader;
        }
      });
      var Kt = builder;
      Object.defineProperty(d, "TupleBuilder", {
        enumerable: true,
        get: function() {
          return Kt.TupleBuilder;
        }
      }), $(_export, d);
      var ar = openContract$1;
      Object.defineProperty(d, "openContract", {
        enumerable: true,
        get: function() {
          return ar.openContract;
        }
      });
      var sr = ComputeError$1;
      Object.defineProperty(d, "ComputeError", {
        enumerable: true,
        get: function() {
          return sr.ComputeError;
        }
      });
      var er = convert;
      Object.defineProperty(d, "toNano", {
        enumerable: true,
        get: function() {
          return er.toNano;
        }
      }), Object.defineProperty(d, "fromNano", {
        enumerable: true,
        get: function() {
          return er.fromNano;
        }
      });
      var Ut = crc16$5;
      Object.defineProperty(d, "crc16", {
        enumerable: true,
        get: function() {
          return Ut.crc16;
        }
      });
      var xt = crc32c$4;
      Object.defineProperty(d, "crc32c", {
        enumerable: true,
        get: function() {
          return xt.crc32c;
        }
      });
      var tt = base32;
      Object.defineProperty(d, "base32Decode", {
        enumerable: true,
        get: function() {
          return tt.base32Decode;
        }
      }), Object.defineProperty(d, "base32Encode", {
        enumerable: true,
        get: function() {
          return tt.base32Encode;
        }
      });
      var nt = getMethodId$1;
      Object.defineProperty(d, "getMethodId", {
        enumerable: true,
        get: function() {
          return nt.getMethodId;
        }
      });
      var it = safeSign$1;
      Object.defineProperty(d, "safeSign", {
        enumerable: true,
        get: function() {
          return it.safeSign;
        }
      }), Object.defineProperty(d, "safeSignVerify", {
        enumerable: true,
        get: function() {
          return it.safeSignVerify;
        }
      });
    })(dist$2);
    var HttpApi$1 = {}, TonCache = {};
    Object.defineProperty(TonCache, "__esModule", {
      value: true
    });
    TonCache.InMemoryCache = void 0;
    class InMemoryCache {
      constructor() {
        this.cache = /* @__PURE__ */ new Map(), this.set = async (_, $, j) => {
          j !== null ? this.cache.set(_ + "$$" + $, j) : this.cache.delete(_ + "$$" + $);
        }, this.get = async (_, $) => {
          let j = this.cache.get(_ + "$$" + $);
          return j !== void 0 ? j : null;
        };
      }
    }
    TonCache.InMemoryCache = InMemoryCache;
    var DataLoader = function() {
      function d($, j) {
        if (typeof $ != "function") throw new TypeError("DataLoader must be constructed with a function which accepts " + ("Array<key> and returns Promise<Array<value>>, but got: " + $ + "."));
        this._batchLoadFn = $, this._maxBatchSize = getValidMaxBatchSize(j), this._batchScheduleFn = getValidBatchScheduleFn(j), this._cacheKeyFn = getValidCacheKeyFn(j), this._cacheMap = getValidCacheMap(j), this._batch = null, this.name = getValidName(j);
      }
      var _ = d.prototype;
      return _.load = function(j) {
        if (j == null) throw new TypeError("The loader.load() function must be called with a value, " + ("but got: " + String(j) + "."));
        var rt = getCurrentBatch(this), et = this._cacheMap, st;
        if (et) {
          st = this._cacheKeyFn(j);
          var pt = et.get(st);
          if (pt) {
            var Et = rt.cacheHits || (rt.cacheHits = []);
            return new Promise(function(St) {
              Et.push(function() {
                St(pt);
              });
            });
          }
        }
        rt.keys.push(j);
        var Bt = new Promise(function(St, $t) {
          rt.callbacks.push({
            resolve: St,
            reject: $t
          });
        });
        return et && et.set(st, Bt), Bt;
      }, _.loadMany = function(j) {
        if (!isArrayLike$1(j)) throw new TypeError("The loader.loadMany() function must be called with Array<key> " + ("but got: " + j + "."));
        for (var rt = [], et = 0; et < j.length; et++) rt.push(this.load(j[et]).catch(function(st) {
          return st;
        }));
        return Promise.all(rt);
      }, _.clear = function(j) {
        var rt = this._cacheMap;
        if (rt) {
          var et = this._cacheKeyFn(j);
          rt.delete(et);
        }
        return this;
      }, _.clearAll = function() {
        var j = this._cacheMap;
        return j && j.clear(), this;
      }, _.prime = function(j, rt) {
        var et = this._cacheMap;
        if (et) {
          var st = this._cacheKeyFn(j);
          if (et.get(st) === void 0) {
            var pt;
            rt instanceof Error ? (pt = Promise.reject(rt), pt.catch(function() {
            })) : pt = Promise.resolve(rt), et.set(st, pt);
          }
        }
        return this;
      }, d;
    }(), enqueuePostPromiseJob = typeof process$1 == "object" && typeof process$1.nextTick == "function" ? function(d) {
      resolvedPromise || (resolvedPromise = Promise.resolve()), resolvedPromise.then(function() {
        process$1.nextTick(d);
      });
    } : typeof setImmediate == "function" ? function(d) {
      setImmediate(d);
    } : function(d) {
      setTimeout(d);
    }, resolvedPromise;
    function getCurrentBatch(d) {
      var _ = d._batch;
      if (_ !== null && !_.hasDispatched && _.keys.length < d._maxBatchSize) return _;
      var $ = {
        hasDispatched: false,
        keys: [],
        callbacks: []
      };
      return d._batch = $, d._batchScheduleFn(function() {
        dispatchBatch(d, $);
      }), $;
    }
    function dispatchBatch(d, _) {
      if (_.hasDispatched = true, _.keys.length === 0) {
        resolveCacheHits(_);
        return;
      }
      var $;
      try {
        $ = d._batchLoadFn(_.keys);
      } catch (j) {
        return failedDispatch(d, _, new TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function " + ("errored synchronously: " + String(j) + ".")));
      }
      if (!$ || typeof $.then != "function") return failedDispatch(d, _, new TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did " + ("not return a Promise: " + String($) + ".")));
      $.then(function(j) {
        if (!isArrayLike$1(j)) throw new TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did " + ("not return a Promise of an Array: " + String(j) + "."));
        if (j.length !== _.keys.length) throw new TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array of the same length as the Array of keys." + (`

Keys:
` + String(_.keys)) + (`

Values:
` + String(j)));
        resolveCacheHits(_);
        for (var rt = 0; rt < _.callbacks.length; rt++) {
          var et = j[rt];
          et instanceof Error ? _.callbacks[rt].reject(et) : _.callbacks[rt].resolve(et);
        }
      }).catch(function(j) {
        failedDispatch(d, _, j);
      });
    }
    function failedDispatch(d, _, $) {
      resolveCacheHits(_);
      for (var j = 0; j < _.keys.length; j++) d.clear(_.keys[j]), _.callbacks[j].reject($);
    }
    function resolveCacheHits(d) {
      if (d.cacheHits) for (var _ = 0; _ < d.cacheHits.length; _++) d.cacheHits[_]();
    }
    function getValidMaxBatchSize(d) {
      var _ = !d || d.batch !== false;
      if (!_) return 1;
      var $ = d && d.maxBatchSize;
      if ($ === void 0) return 1 / 0;
      if (typeof $ != "number" || $ < 1) throw new TypeError("maxBatchSize must be a positive number: " + $);
      return $;
    }
    function getValidBatchScheduleFn(d) {
      var _ = d && d.batchScheduleFn;
      if (_ === void 0) return enqueuePostPromiseJob;
      if (typeof _ != "function") throw new TypeError("batchScheduleFn must be a function: " + _);
      return _;
    }
    function getValidCacheKeyFn(d) {
      var _ = d && d.cacheKeyFn;
      if (_ === void 0) return function($) {
        return $;
      };
      if (typeof _ != "function") throw new TypeError("cacheKeyFn must be a function: " + _);
      return _;
    }
    function getValidCacheMap(d) {
      var _ = !d || d.cache !== false;
      if (!_) return null;
      var $ = d && d.cacheMap;
      if ($ === void 0) return /* @__PURE__ */ new Map();
      if ($ !== null) {
        var j = [
          "get",
          "set",
          "delete",
          "clear"
        ], rt = j.filter(function(et) {
          return $ && typeof $[et] != "function";
        });
        if (rt.length !== 0) throw new TypeError("Custom cacheMap missing methods: " + rt.join(", "));
      }
      return $;
    }
    function getValidName(d) {
      return d && d.name ? d.name : null;
    }
    function isArrayLike$1(d) {
      return typeof d == "object" && d !== null && typeof d.length == "number" && (d.length === 0 || d.length > 0 && Object.prototype.hasOwnProperty.call(d, d.length - 1));
    }
    var dataloader = DataLoader;
    function bind(d, _) {
      return function() {
        return d.apply(_, arguments);
      };
    }
    const { toString } = Object.prototype, { getPrototypeOf } = Object, kindOf = /* @__PURE__ */ ((d) => (_) => {
      const $ = toString.call(_);
      return d[$] || (d[$] = $.slice(8, -1).toLowerCase());
    })(/* @__PURE__ */ Object.create(null)), kindOfTest = (d) => (d = d.toLowerCase(), (_) => kindOf(_) === d), typeOfTest = (d) => (_) => typeof _ === d, { isArray: isArray$1 } = Array, isUndefined = typeOfTest("undefined");
    function isBuffer(d) {
      return d !== null && !isUndefined(d) && d.constructor !== null && !isUndefined(d.constructor) && isFunction$1(d.constructor.isBuffer) && d.constructor.isBuffer(d);
    }
    const isArrayBuffer = kindOfTest("ArrayBuffer");
    function isArrayBufferView$1(d) {
      let _;
      return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? _ = ArrayBuffer.isView(d) : _ = d && d.buffer && isArrayBuffer(d.buffer), _;
    }
    const isString = typeOfTest("string"), isFunction$1 = typeOfTest("function"), isNumber = typeOfTest("number"), isObject$1 = (d) => d !== null && typeof d == "object", isBoolean = (d) => d === true || d === false, isPlainObject = (d) => {
      if (kindOf(d) !== "object") return false;
      const _ = getPrototypeOf(d);
      return (_ === null || _ === Object.prototype || Object.getPrototypeOf(_) === null) && !(Symbol.toStringTag in d) && !(Symbol.iterator in d);
    }, isDate = kindOfTest("Date"), isFile = kindOfTest("File"), isBlob = kindOfTest("Blob"), isFileList = kindOfTest("FileList"), isStream = (d) => isObject$1(d) && isFunction$1(d.pipe), isFormData = (d) => {
      let _;
      return d && (typeof FormData == "function" && d instanceof FormData || isFunction$1(d.append) && ((_ = kindOf(d)) === "formdata" || _ === "object" && isFunction$1(d.toString) && d.toString() === "[object FormData]"));
    }, isURLSearchParams = kindOfTest("URLSearchParams"), [isReadableStream, isRequest, isResponse, isHeaders] = [
      "ReadableStream",
      "Request",
      "Response",
      "Headers"
    ].map(kindOfTest), trim = (d) => d.trim ? d.trim() : d.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function forEach(d, _, { allOwnKeys: $ = false } = {}) {
      if (d === null || typeof d > "u") return;
      let j, rt;
      if (typeof d != "object" && (d = [
        d
      ]), isArray$1(d)) for (j = 0, rt = d.length; j < rt; j++) _.call(null, d[j], j, d);
      else {
        const et = $ ? Object.getOwnPropertyNames(d) : Object.keys(d), st = et.length;
        let pt;
        for (j = 0; j < st; j++) pt = et[j], _.call(null, d[pt], pt, d);
      }
    }
    function findKey(d, _) {
      _ = _.toLowerCase();
      const $ = Object.keys(d);
      let j = $.length, rt;
      for (; j-- > 0; ) if (rt = $[j], _ === rt.toLowerCase()) return rt;
      return null;
    }
    const _global = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : commonjsGlobal, isContextDefined = (d) => !isUndefined(d) && d !== _global;
    function merge$1() {
      const { caseless: d } = isContextDefined(this) && this || {}, _ = {}, $ = (j, rt) => {
        const et = d && findKey(_, rt) || rt;
        isPlainObject(_[et]) && isPlainObject(j) ? _[et] = merge$1(_[et], j) : isPlainObject(j) ? _[et] = merge$1({}, j) : isArray$1(j) ? _[et] = j.slice() : _[et] = j;
      };
      for (let j = 0, rt = arguments.length; j < rt; j++) arguments[j] && forEach(arguments[j], $);
      return _;
    }
    const extend = (d, _, $, { allOwnKeys: j } = {}) => (forEach(_, (rt, et) => {
      $ && isFunction$1(rt) ? d[et] = bind(rt, $) : d[et] = rt;
    }, {
      allOwnKeys: j
    }), d), stripBOM = (d) => (d.charCodeAt(0) === 65279 && (d = d.slice(1)), d), inherits = (d, _, $, j) => {
      d.prototype = Object.create(_.prototype, j), d.prototype.constructor = d, Object.defineProperty(d, "super", {
        value: _.prototype
      }), $ && Object.assign(d.prototype, $);
    }, toFlatObject = (d, _, $, j) => {
      let rt, et, st;
      const pt = {};
      if (_ = _ || {}, d == null) return _;
      do {
        for (rt = Object.getOwnPropertyNames(d), et = rt.length; et-- > 0; ) st = rt[et], (!j || j(st, d, _)) && !pt[st] && (_[st] = d[st], pt[st] = true);
        d = $ !== false && getPrototypeOf(d);
      } while (d && (!$ || $(d, _)) && d !== Object.prototype);
      return _;
    }, endsWith = (d, _, $) => {
      d = String(d), ($ === void 0 || $ > d.length) && ($ = d.length), $ -= _.length;
      const j = d.indexOf(_, $);
      return j !== -1 && j === $;
    }, toArray = (d) => {
      if (!d) return null;
      if (isArray$1(d)) return d;
      let _ = d.length;
      if (!isNumber(_)) return null;
      const $ = new Array(_);
      for (; _-- > 0; ) $[_] = d[_];
      return $;
    }, isTypedArray = /* @__PURE__ */ ((d) => (_) => d && _ instanceof d)(typeof Uint8Array < "u" && getPrototypeOf(Uint8Array)), forEachEntry = (d, _) => {
      const j = (d && d[Symbol.iterator]).call(d);
      let rt;
      for (; (rt = j.next()) && !rt.done; ) {
        const et = rt.value;
        _.call(d, et[0], et[1]);
      }
    }, matchAll = (d, _) => {
      let $;
      const j = [];
      for (; ($ = d.exec(_)) !== null; ) j.push($);
      return j;
    }, isHTMLForm = kindOfTest("HTMLFormElement"), toCamelCase = (d) => d.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function($, j, rt) {
      return j.toUpperCase() + rt;
    }), hasOwnProperty = (({ hasOwnProperty: d }) => (_, $) => d.call(_, $))(Object.prototype), isRegExp = kindOfTest("RegExp"), reduceDescriptors = (d, _) => {
      const $ = Object.getOwnPropertyDescriptors(d), j = {};
      forEach($, (rt, et) => {
        let st;
        (st = _(rt, et, d)) !== false && (j[et] = st || rt);
      }), Object.defineProperties(d, j);
    }, freezeMethods = (d) => {
      reduceDescriptors(d, (_, $) => {
        if (isFunction$1(d) && [
          "arguments",
          "caller",
          "callee"
        ].indexOf($) !== -1) return false;
        const j = d[$];
        if (isFunction$1(j)) {
          if (_.enumerable = false, "writable" in _) {
            _.writable = false;
            return;
          }
          _.set || (_.set = () => {
            throw Error("Can not rewrite read-only method '" + $ + "'");
          });
        }
      });
    }, toObjectSet = (d, _) => {
      const $ = {}, j = (rt) => {
        rt.forEach((et) => {
          $[et] = true;
        });
      };
      return isArray$1(d) ? j(d) : j(String(d).split(_)), $;
    }, noop$1 = () => {
    }, toFiniteNumber = (d, _) => d != null && Number.isFinite(d = +d) ? d : _;
    function isSpecCompliantForm(d) {
      return !!(d && isFunction$1(d.append) && d[Symbol.toStringTag] === "FormData" && d[Symbol.iterator]);
    }
    const toJSONObject = (d) => {
      const _ = new Array(10), $ = (j, rt) => {
        if (isObject$1(j)) {
          if (_.indexOf(j) >= 0) return;
          if (!("toJSON" in j)) {
            _[rt] = j;
            const et = isArray$1(j) ? [] : {};
            return forEach(j, (st, pt) => {
              const Et = $(st, rt + 1);
              !isUndefined(Et) && (et[pt] = Et);
            }), _[rt] = void 0, et;
          }
        }
        return j;
      };
      return $(d, 0);
    }, isAsyncFn = kindOfTest("AsyncFunction"), isThenable = (d) => d && (isObject$1(d) || isFunction$1(d)) && isFunction$1(d.then) && isFunction$1(d.catch), _setImmediate = ((d, _) => d ? setImmediate : _ ? (($, j) => (_global.addEventListener("message", ({ source: rt, data: et }) => {
      rt === _global && et === $ && j.length && j.shift()();
    }, false), (rt) => {
      j.push(rt), _global.postMessage($, "*");
    }))(`axios@${Math.random()}`, []) : ($) => setTimeout($))(typeof setImmediate == "function", isFunction$1(_global.postMessage)), asap$1 = typeof queueMicrotask < "u" ? queueMicrotask.bind(_global) : typeof process$1 < "u" && process$1.nextTick || _setImmediate;
    var utils$1$1 = {
      isArray: isArray$1,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView: isArrayBufferView$1,
      isString,
      isNumber,
      isBoolean,
      isObject: isObject$1,
      isPlainObject,
      isReadableStream,
      isRequest,
      isResponse,
      isHeaders,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isRegExp,
      isFunction: isFunction$1,
      isStream,
      isURLSearchParams,
      isTypedArray,
      isFileList,
      forEach,
      merge: merge$1,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      forEachEntry,
      matchAll,
      isHTMLForm,
      hasOwnProperty,
      hasOwnProp: hasOwnProperty,
      reduceDescriptors,
      freezeMethods,
      toObjectSet,
      toCamelCase,
      noop: noop$1,
      toFiniteNumber,
      findKey,
      global: _global,
      isContextDefined,
      isSpecCompliantForm,
      toJSONObject,
      isAsyncFn,
      isThenable,
      setImmediate: _setImmediate,
      asap: asap$1
    };
    function AxiosError(d, _, $, j, rt) {
      Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = d, this.name = "AxiosError", _ && (this.code = _), $ && (this.config = $), j && (this.request = j), rt && (this.response = rt, this.status = rt.status ? rt.status : null);
    }
    utils$1$1.inherits(AxiosError, Error, {
      toJSON: function d() {
        return {
          message: this.message,
          name: this.name,
          description: this.description,
          number: this.number,
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          config: utils$1$1.toJSONObject(this.config),
          code: this.code,
          status: this.status
        };
      }
    });
    const prototype$1 = AxiosError.prototype, descriptors = {};
    [
      "ERR_BAD_OPTION_VALUE",
      "ERR_BAD_OPTION",
      "ECONNABORTED",
      "ETIMEDOUT",
      "ERR_NETWORK",
      "ERR_FR_TOO_MANY_REDIRECTS",
      "ERR_DEPRECATED",
      "ERR_BAD_RESPONSE",
      "ERR_BAD_REQUEST",
      "ERR_CANCELED",
      "ERR_NOT_SUPPORT",
      "ERR_INVALID_URL"
    ].forEach((d) => {
      descriptors[d] = {
        value: d
      };
    });
    Object.defineProperties(AxiosError, descriptors);
    Object.defineProperty(prototype$1, "isAxiosError", {
      value: true
    });
    AxiosError.from = (d, _, $, j, rt, et) => {
      const st = Object.create(prototype$1);
      return utils$1$1.toFlatObject(d, st, function(Et) {
        return Et !== Error.prototype;
      }, (pt) => pt !== "isAxiosError"), AxiosError.call(st, d.message, _, $, j, rt), st.cause = d, st.name = d.name, et && Object.assign(st, et), st;
    };
    var httpAdapter = null;
    function isVisitable(d) {
      return utils$1$1.isPlainObject(d) || utils$1$1.isArray(d);
    }
    function removeBrackets(d) {
      return utils$1$1.endsWith(d, "[]") ? d.slice(0, -2) : d;
    }
    function renderKey(d, _, $) {
      return d ? d.concat(_).map(function(rt, et) {
        return rt = removeBrackets(rt), !$ && et ? "[" + rt + "]" : rt;
      }).join($ ? "." : "") : _;
    }
    function isFlatArray(d) {
      return utils$1$1.isArray(d) && !d.some(isVisitable);
    }
    const predicates = utils$1$1.toFlatObject(utils$1$1, {}, null, function d(_) {
      return /^is[A-Z]/.test(_);
    });
    function toFormData(d, _, $) {
      if (!utils$1$1.isObject(d)) throw new TypeError("target must be an object");
      _ = _ || new FormData(), $ = utils$1$1.toFlatObject($, {
        metaTokens: true,
        dots: false,
        indexes: false
      }, false, function(It, jt) {
        return !utils$1$1.isUndefined(jt[It]);
      });
      const j = $.metaTokens, rt = $.visitor || St, et = $.dots, st = $.indexes, Et = ($.Blob || typeof Blob < "u" && Blob) && utils$1$1.isSpecCompliantForm(_);
      if (!utils$1$1.isFunction(rt)) throw new TypeError("visitor must be a function");
      function Bt(Pt) {
        if (Pt === null) return "";
        if (utils$1$1.isDate(Pt)) return Pt.toISOString();
        if (!Et && utils$1$1.isBlob(Pt)) throw new AxiosError("Blob is not supported. Use a Buffer instead.");
        return utils$1$1.isArrayBuffer(Pt) || utils$1$1.isTypedArray(Pt) ? Et && typeof Blob == "function" ? new Blob([
          Pt
        ]) : Buffer.from(Pt) : Pt;
      }
      function St(Pt, It, jt) {
        let Dt = Pt;
        if (Pt && !jt && typeof Pt == "object") {
          if (utils$1$1.endsWith(It, "{}")) It = j ? It : It.slice(0, -2), Pt = JSON.stringify(Pt);
          else if (utils$1$1.isArray(Pt) && isFlatArray(Pt) || (utils$1$1.isFileList(Pt) || utils$1$1.endsWith(It, "[]")) && (Dt = utils$1$1.toArray(Pt))) return It = removeBrackets(It), Dt.forEach(function(Ft, Lt) {
            !(utils$1$1.isUndefined(Ft) || Ft === null) && _.append(st === true ? renderKey([
              It
            ], Lt, et) : st === null ? It : It + "[]", Bt(Ft));
          }), false;
        }
        return isVisitable(Pt) ? true : (_.append(renderKey(jt, It, et), Bt(Pt)), false);
      }
      const $t = [], kt = Object.assign(predicates, {
        defaultVisitor: St,
        convertValue: Bt,
        isVisitable
      });
      function Tt(Pt, It) {
        if (!utils$1$1.isUndefined(Pt)) {
          if ($t.indexOf(Pt) !== -1) throw Error("Circular reference detected in " + It.join("."));
          $t.push(Pt), utils$1$1.forEach(Pt, function(Dt, Ot) {
            (!(utils$1$1.isUndefined(Dt) || Dt === null) && rt.call(_, Dt, utils$1$1.isString(Ot) ? Ot.trim() : Ot, It, kt)) === true && Tt(Dt, It ? It.concat(Ot) : [
              Ot
            ]);
          }), $t.pop();
        }
      }
      if (!utils$1$1.isObject(d)) throw new TypeError("data must be an object");
      return Tt(d), _;
    }
    function encode$1(d) {
      const _ = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+",
        "%00": "\0"
      };
      return encodeURIComponent(d).replace(/[!'()~]|%20|%00/g, function(j) {
        return _[j];
      });
    }
    function AxiosURLSearchParams(d, _) {
      this._pairs = [], d && toFormData(d, this, _);
    }
    const prototype = AxiosURLSearchParams.prototype;
    prototype.append = function d(_, $) {
      this._pairs.push([
        _,
        $
      ]);
    };
    prototype.toString = function d(_) {
      const $ = _ ? function(j) {
        return _.call(this, j, encode$1);
      } : encode$1;
      return this._pairs.map(function(rt) {
        return $(rt[0]) + "=" + $(rt[1]);
      }, "").join("&");
    };
    function encode(d) {
      return encodeURIComponent(d).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    function buildURL(d, _, $) {
      if (!_) return d;
      const j = $ && $.encode || encode;
      utils$1$1.isFunction($) && ($ = {
        serialize: $
      });
      const rt = $ && $.serialize;
      let et;
      if (rt ? et = rt(_, $) : et = utils$1$1.isURLSearchParams(_) ? _.toString() : new AxiosURLSearchParams(_, $).toString(j), et) {
        const st = d.indexOf("#");
        st !== -1 && (d = d.slice(0, st)), d += (d.indexOf("?") === -1 ? "?" : "&") + et;
      }
      return d;
    }
    class InterceptorManager {
      constructor() {
        this.handlers = [];
      }
      use(_, $, j) {
        return this.handlers.push({
          fulfilled: _,
          rejected: $,
          synchronous: j ? j.synchronous : false,
          runWhen: j ? j.runWhen : null
        }), this.handlers.length - 1;
      }
      eject(_) {
        this.handlers[_] && (this.handlers[_] = null);
      }
      clear() {
        this.handlers && (this.handlers = []);
      }
      forEach(_) {
        utils$1$1.forEach(this.handlers, function(j) {
          j !== null && _(j);
        });
      }
    }
    var InterceptorManager$1 = InterceptorManager, transitionalDefaults = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    }, URLSearchParams$1 = typeof URLSearchParams < "u" ? URLSearchParams : AxiosURLSearchParams, FormData$1 = typeof FormData < "u" ? FormData : null, Blob$1 = typeof Blob < "u" ? Blob : null, platform$1 = {
      isBrowser: true,
      classes: {
        URLSearchParams: URLSearchParams$1,
        FormData: FormData$1,
        Blob: Blob$1
      },
      protocols: [
        "http",
        "https",
        "file",
        "blob",
        "url",
        "data"
      ]
    };
    const hasBrowserEnv = typeof window < "u" && typeof document < "u", _navigator = typeof navigator == "object" && navigator || void 0, hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || [
      "ReactNative",
      "NativeScript",
      "NS"
    ].indexOf(_navigator.product) < 0), hasStandardBrowserWebWorkerEnv = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", origin = hasBrowserEnv && window.location.href || "http://localhost";
    var utils$2 = Object.freeze({
      __proto__: null,
      hasBrowserEnv,
      hasStandardBrowserWebWorkerEnv,
      hasStandardBrowserEnv,
      navigator: _navigator,
      origin
    }), platform = {
      ...utils$2,
      ...platform$1
    };
    function toURLEncodedForm(d, _) {
      return toFormData(d, new platform.classes.URLSearchParams(), Object.assign({
        visitor: function($, j, rt, et) {
          return platform.isNode && utils$1$1.isBuffer($) ? (this.append(j, $.toString("base64")), false) : et.defaultVisitor.apply(this, arguments);
        }
      }, _));
    }
    function parsePropPath(d) {
      return utils$1$1.matchAll(/\w+|\[(\w*)]/g, d).map((_) => _[0] === "[]" ? "" : _[1] || _[0]);
    }
    function arrayToObject(d) {
      const _ = {}, $ = Object.keys(d);
      let j;
      const rt = $.length;
      let et;
      for (j = 0; j < rt; j++) et = $[j], _[et] = d[et];
      return _;
    }
    function formDataToJSON(d) {
      function _($, j, rt, et) {
        let st = $[et++];
        if (st === "__proto__") return true;
        const pt = Number.isFinite(+st), Et = et >= $.length;
        return st = !st && utils$1$1.isArray(rt) ? rt.length : st, Et ? (utils$1$1.hasOwnProp(rt, st) ? rt[st] = [
          rt[st],
          j
        ] : rt[st] = j, !pt) : ((!rt[st] || !utils$1$1.isObject(rt[st])) && (rt[st] = []), _($, j, rt[st], et) && utils$1$1.isArray(rt[st]) && (rt[st] = arrayToObject(rt[st])), !pt);
      }
      if (utils$1$1.isFormData(d) && utils$1$1.isFunction(d.entries)) {
        const $ = {};
        return utils$1$1.forEachEntry(d, (j, rt) => {
          _(parsePropPath(j), rt, $, 0);
        }), $;
      }
      return null;
    }
    function stringifySafely(d, _, $) {
      if (utils$1$1.isString(d)) try {
        return (_ || JSON.parse)(d), utils$1$1.trim(d);
      } catch (j) {
        if (j.name !== "SyntaxError") throw j;
      }
      return ($ || JSON.stringify)(d);
    }
    const defaults = {
      transitional: transitionalDefaults,
      adapter: [
        "xhr",
        "http",
        "fetch"
      ],
      transformRequest: [
        function d(_, $) {
          const j = $.getContentType() || "", rt = j.indexOf("application/json") > -1, et = utils$1$1.isObject(_);
          if (et && utils$1$1.isHTMLForm(_) && (_ = new FormData(_)), utils$1$1.isFormData(_)) return rt ? JSON.stringify(formDataToJSON(_)) : _;
          if (utils$1$1.isArrayBuffer(_) || utils$1$1.isBuffer(_) || utils$1$1.isStream(_) || utils$1$1.isFile(_) || utils$1$1.isBlob(_) || utils$1$1.isReadableStream(_)) return _;
          if (utils$1$1.isArrayBufferView(_)) return _.buffer;
          if (utils$1$1.isURLSearchParams(_)) return $.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), _.toString();
          let pt;
          if (et) {
            if (j.indexOf("application/x-www-form-urlencoded") > -1) return toURLEncodedForm(_, this.formSerializer).toString();
            if ((pt = utils$1$1.isFileList(_)) || j.indexOf("multipart/form-data") > -1) {
              const Et = this.env && this.env.FormData;
              return toFormData(pt ? {
                "files[]": _
              } : _, Et && new Et(), this.formSerializer);
            }
          }
          return et || rt ? ($.setContentType("application/json", false), stringifySafely(_)) : _;
        }
      ],
      transformResponse: [
        function d(_) {
          const $ = this.transitional || defaults.transitional, j = $ && $.forcedJSONParsing, rt = this.responseType === "json";
          if (utils$1$1.isResponse(_) || utils$1$1.isReadableStream(_)) return _;
          if (_ && utils$1$1.isString(_) && (j && !this.responseType || rt)) {
            const st = !($ && $.silentJSONParsing) && rt;
            try {
              return JSON.parse(_);
            } catch (pt) {
              if (st) throw pt.name === "SyntaxError" ? AxiosError.from(pt, AxiosError.ERR_BAD_RESPONSE, this, null, this.response) : pt;
            }
          }
          return _;
        }
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: platform.classes.FormData,
        Blob: platform.classes.Blob
      },
      validateStatus: function d(_) {
        return _ >= 200 && _ < 300;
      },
      headers: {
        common: {
          Accept: "application/json, text/plain, */*",
          "Content-Type": void 0
        }
      }
    };
    utils$1$1.forEach([
      "delete",
      "get",
      "head",
      "post",
      "put",
      "patch"
    ], (d) => {
      defaults.headers[d] = {};
    });
    var defaults$1 = defaults;
    const ignoreDuplicateOf = utils$1$1.toObjectSet([
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ]);
    var parseHeaders$1 = (d) => {
      const _ = {};
      let $, j, rt;
      return d && d.split(`
`).forEach(function(st) {
        rt = st.indexOf(":"), $ = st.substring(0, rt).trim().toLowerCase(), j = st.substring(rt + 1).trim(), !(!$ || _[$] && ignoreDuplicateOf[$]) && ($ === "set-cookie" ? _[$] ? _[$].push(j) : _[$] = [
          j
        ] : _[$] = _[$] ? _[$] + ", " + j : j);
      }), _;
    };
    const $internals = Symbol("internals");
    function normalizeHeader(d) {
      return d && String(d).trim().toLowerCase();
    }
    function normalizeValue$1(d) {
      return d === false || d == null ? d : utils$1$1.isArray(d) ? d.map(normalizeValue$1) : String(d);
    }
    function parseTokens(d) {
      const _ = /* @__PURE__ */ Object.create(null), $ = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
      let j;
      for (; j = $.exec(d); ) _[j[1]] = j[2];
      return _;
    }
    const isValidHeaderName = (d) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(d.trim());
    function matchHeaderValue(d, _, $, j, rt) {
      if (utils$1$1.isFunction(j)) return j.call(this, _, $);
      if (rt && (_ = $), !!utils$1$1.isString(_)) {
        if (utils$1$1.isString(j)) return _.indexOf(j) !== -1;
        if (utils$1$1.isRegExp(j)) return j.test(_);
      }
    }
    function formatHeader(d) {
      return d.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (_, $, j) => $.toUpperCase() + j);
    }
    function buildAccessors(d, _) {
      const $ = utils$1$1.toCamelCase(" " + _);
      [
        "get",
        "set",
        "has"
      ].forEach((j) => {
        Object.defineProperty(d, j + $, {
          value: function(rt, et, st) {
            return this[j].call(this, _, rt, et, st);
          },
          configurable: true
        });
      });
    }
    class AxiosHeaders {
      constructor(_) {
        _ && this.set(_);
      }
      set(_, $, j) {
        const rt = this;
        function et(pt, Et, Bt) {
          const St = normalizeHeader(Et);
          if (!St) throw new Error("header name must be a non-empty string");
          const $t = utils$1$1.findKey(rt, St);
          (!$t || rt[$t] === void 0 || Bt === true || Bt === void 0 && rt[$t] !== false) && (rt[$t || Et] = normalizeValue$1(pt));
        }
        const st = (pt, Et) => utils$1$1.forEach(pt, (Bt, St) => et(Bt, St, Et));
        if (utils$1$1.isPlainObject(_) || _ instanceof this.constructor) st(_, $);
        else if (utils$1$1.isString(_) && (_ = _.trim()) && !isValidHeaderName(_)) st(parseHeaders$1(_), $);
        else if (utils$1$1.isHeaders(_)) for (const [pt, Et] of _.entries()) et(Et, pt, j);
        else _ != null && et($, _, j);
        return this;
      }
      get(_, $) {
        if (_ = normalizeHeader(_), _) {
          const j = utils$1$1.findKey(this, _);
          if (j) {
            const rt = this[j];
            if (!$) return rt;
            if ($ === true) return parseTokens(rt);
            if (utils$1$1.isFunction($)) return $.call(this, rt, j);
            if (utils$1$1.isRegExp($)) return $.exec(rt);
            throw new TypeError("parser must be boolean|regexp|function");
          }
        }
      }
      has(_, $) {
        if (_ = normalizeHeader(_), _) {
          const j = utils$1$1.findKey(this, _);
          return !!(j && this[j] !== void 0 && (!$ || matchHeaderValue(this, this[j], j, $)));
        }
        return false;
      }
      delete(_, $) {
        const j = this;
        let rt = false;
        function et(st) {
          if (st = normalizeHeader(st), st) {
            const pt = utils$1$1.findKey(j, st);
            pt && (!$ || matchHeaderValue(j, j[pt], pt, $)) && (delete j[pt], rt = true);
          }
        }
        return utils$1$1.isArray(_) ? _.forEach(et) : et(_), rt;
      }
      clear(_) {
        const $ = Object.keys(this);
        let j = $.length, rt = false;
        for (; j--; ) {
          const et = $[j];
          (!_ || matchHeaderValue(this, this[et], et, _, true)) && (delete this[et], rt = true);
        }
        return rt;
      }
      normalize(_) {
        const $ = this, j = {};
        return utils$1$1.forEach(this, (rt, et) => {
          const st = utils$1$1.findKey(j, et);
          if (st) {
            $[st] = normalizeValue$1(rt), delete $[et];
            return;
          }
          const pt = _ ? formatHeader(et) : String(et).trim();
          pt !== et && delete $[et], $[pt] = normalizeValue$1(rt), j[pt] = true;
        }), this;
      }
      concat(..._) {
        return this.constructor.concat(this, ..._);
      }
      toJSON(_) {
        const $ = /* @__PURE__ */ Object.create(null);
        return utils$1$1.forEach(this, (j, rt) => {
          j != null && j !== false && ($[rt] = _ && utils$1$1.isArray(j) ? j.join(", ") : j);
        }), $;
      }
      [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
      }
      toString() {
        return Object.entries(this.toJSON()).map(([_, $]) => _ + ": " + $).join(`
`);
      }
      get [Symbol.toStringTag]() {
        return "AxiosHeaders";
      }
      static from(_) {
        return _ instanceof this ? _ : new this(_);
      }
      static concat(_, ...$) {
        const j = new this(_);
        return $.forEach((rt) => j.set(rt)), j;
      }
      static accessor(_) {
        const j = (this[$internals] = this[$internals] = {
          accessors: {}
        }).accessors, rt = this.prototype;
        function et(st) {
          const pt = normalizeHeader(st);
          j[pt] || (buildAccessors(rt, st), j[pt] = true);
        }
        return utils$1$1.isArray(_) ? _.forEach(et) : et(_), this;
      }
    }
    AxiosHeaders.accessor([
      "Content-Type",
      "Content-Length",
      "Accept",
      "Accept-Encoding",
      "User-Agent",
      "Authorization"
    ]);
    utils$1$1.reduceDescriptors(AxiosHeaders.prototype, ({ value: d }, _) => {
      let $ = _[0].toUpperCase() + _.slice(1);
      return {
        get: () => d,
        set(j) {
          this[$] = j;
        }
      };
    });
    utils$1$1.freezeMethods(AxiosHeaders);
    var AxiosHeaders$1 = AxiosHeaders;
    function transformData(d, _) {
      const $ = this || defaults$1, j = _ || $, rt = AxiosHeaders$1.from(j.headers);
      let et = j.data;
      return utils$1$1.forEach(d, function(pt) {
        et = pt.call($, et, rt.normalize(), _ ? _.status : void 0);
      }), rt.normalize(), et;
    }
    function isCancel(d) {
      return !!(d && d.__CANCEL__);
    }
    function CanceledError(d, _, $) {
      AxiosError.call(this, d ?? "canceled", AxiosError.ERR_CANCELED, _, $), this.name = "CanceledError";
    }
    utils$1$1.inherits(CanceledError, AxiosError, {
      __CANCEL__: true
    });
    function settle(d, _, $) {
      const j = $.config.validateStatus;
      !$.status || !j || j($.status) ? d($) : _(new AxiosError("Request failed with status code " + $.status, [
        AxiosError.ERR_BAD_REQUEST,
        AxiosError.ERR_BAD_RESPONSE
      ][Math.floor($.status / 100) - 4], $.config, $.request, $));
    }
    function parseProtocol(d) {
      const _ = /^([-+\w]{1,25})(:?\/\/|:)/.exec(d);
      return _ && _[1] || "";
    }
    function speedometer(d, _) {
      d = d || 10;
      const $ = new Array(d), j = new Array(d);
      let rt = 0, et = 0, st;
      return _ = _ !== void 0 ? _ : 1e3, function(Et) {
        const Bt = Date.now(), St = j[et];
        st || (st = Bt), $[rt] = Et, j[rt] = Bt;
        let $t = et, kt = 0;
        for (; $t !== rt; ) kt += $[$t++], $t = $t % d;
        if (rt = (rt + 1) % d, rt === et && (et = (et + 1) % d), Bt - st < _) return;
        const Tt = St && Bt - St;
        return Tt ? Math.round(kt * 1e3 / Tt) : void 0;
      };
    }
    function throttle(d, _) {
      let $ = 0, j = 1e3 / _, rt, et;
      const st = (Bt, St = Date.now()) => {
        $ = St, rt = null, et && (clearTimeout(et), et = null), d.apply(null, Bt);
      };
      return [
        (...Bt) => {
          const St = Date.now(), $t = St - $;
          $t >= j ? st(Bt, St) : (rt = Bt, et || (et = setTimeout(() => {
            et = null, st(rt);
          }, j - $t)));
        },
        () => rt && st(rt)
      ];
    }
    const progressEventReducer = (d, _, $ = 3) => {
      let j = 0;
      const rt = speedometer(50, 250);
      return throttle((et) => {
        const st = et.loaded, pt = et.lengthComputable ? et.total : void 0, Et = st - j, Bt = rt(Et), St = st <= pt;
        j = st;
        const $t = {
          loaded: st,
          total: pt,
          progress: pt ? st / pt : void 0,
          bytes: Et,
          rate: Bt || void 0,
          estimated: Bt && pt && St ? (pt - st) / Bt : void 0,
          event: et,
          lengthComputable: pt != null,
          [_ ? "download" : "upload"]: true
        };
        d($t);
      }, $);
    }, progressEventDecorator = (d, _) => {
      const $ = d != null;
      return [
        (j) => _[0]({
          lengthComputable: $,
          total: d,
          loaded: j
        }),
        _[1]
      ];
    }, asyncDecorator = (d) => (..._) => utils$1$1.asap(() => d(..._));
    var isURLSameOrigin = platform.hasStandardBrowserEnv ? /* @__PURE__ */ ((d, _) => ($) => ($ = new URL($, platform.origin), d.protocol === $.protocol && d.host === $.host && (_ || d.port === $.port)))(new URL(platform.origin), platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)) : () => true, cookies = platform.hasStandardBrowserEnv ? {
      write(d, _, $, j, rt, et) {
        const st = [
          d + "=" + encodeURIComponent(_)
        ];
        utils$1$1.isNumber($) && st.push("expires=" + new Date($).toGMTString()), utils$1$1.isString(j) && st.push("path=" + j), utils$1$1.isString(rt) && st.push("domain=" + rt), et === true && st.push("secure"), document.cookie = st.join("; ");
      },
      read(d) {
        const _ = document.cookie.match(new RegExp("(^|;\\s*)(" + d + ")=([^;]*)"));
        return _ ? decodeURIComponent(_[3]) : null;
      },
      remove(d) {
        this.write(d, "", Date.now() - 864e5);
      }
    } : {
      write() {
      },
      read() {
        return null;
      },
      remove() {
      }
    };
    function isAbsoluteURL(d) {
      return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(d);
    }
    function combineURLs(d, _) {
      return _ ? d.replace(/\/?\/$/, "") + "/" + _.replace(/^\/+/, "") : d;
    }
    function buildFullPath(d, _, $) {
      let j = !isAbsoluteURL(_);
      return d && j || $ == false ? combineURLs(d, _) : _;
    }
    const headersToObject = (d) => d instanceof AxiosHeaders$1 ? {
      ...d
    } : d;
    function mergeConfig(d, _) {
      _ = _ || {};
      const $ = {};
      function j(Bt, St, $t, kt) {
        return utils$1$1.isPlainObject(Bt) && utils$1$1.isPlainObject(St) ? utils$1$1.merge.call({
          caseless: kt
        }, Bt, St) : utils$1$1.isPlainObject(St) ? utils$1$1.merge({}, St) : utils$1$1.isArray(St) ? St.slice() : St;
      }
      function rt(Bt, St, $t, kt) {
        if (utils$1$1.isUndefined(St)) {
          if (!utils$1$1.isUndefined(Bt)) return j(void 0, Bt, $t, kt);
        } else return j(Bt, St, $t, kt);
      }
      function et(Bt, St) {
        if (!utils$1$1.isUndefined(St)) return j(void 0, St);
      }
      function st(Bt, St) {
        if (utils$1$1.isUndefined(St)) {
          if (!utils$1$1.isUndefined(Bt)) return j(void 0, Bt);
        } else return j(void 0, St);
      }
      function pt(Bt, St, $t) {
        if ($t in _) return j(Bt, St);
        if ($t in d) return j(void 0, Bt);
      }
      const Et = {
        url: et,
        method: et,
        data: et,
        baseURL: st,
        transformRequest: st,
        transformResponse: st,
        paramsSerializer: st,
        timeout: st,
        timeoutMessage: st,
        withCredentials: st,
        withXSRFToken: st,
        adapter: st,
        responseType: st,
        xsrfCookieName: st,
        xsrfHeaderName: st,
        onUploadProgress: st,
        onDownloadProgress: st,
        decompress: st,
        maxContentLength: st,
        maxBodyLength: st,
        beforeRedirect: st,
        transport: st,
        httpAgent: st,
        httpsAgent: st,
        cancelToken: st,
        socketPath: st,
        responseEncoding: st,
        validateStatus: pt,
        headers: (Bt, St, $t) => rt(headersToObject(Bt), headersToObject(St), $t, true)
      };
      return utils$1$1.forEach(Object.keys(Object.assign({}, d, _)), function(St) {
        const $t = Et[St] || rt, kt = $t(d[St], _[St], St);
        utils$1$1.isUndefined(kt) && $t !== pt || ($[St] = kt);
      }), $;
    }
    var resolveConfig = (d) => {
      const _ = mergeConfig({}, d);
      let { data: $, withXSRFToken: j, xsrfHeaderName: rt, xsrfCookieName: et, headers: st, auth: pt } = _;
      _.headers = st = AxiosHeaders$1.from(st), _.url = buildURL(buildFullPath(_.baseURL, _.url), d.params, d.paramsSerializer), pt && st.set("Authorization", "Basic " + btoa((pt.username || "") + ":" + (pt.password ? unescape(encodeURIComponent(pt.password)) : "")));
      let Et;
      if (utils$1$1.isFormData($)) {
        if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) st.setContentType(void 0);
        else if ((Et = st.getContentType()) !== false) {
          const [Bt, ...St] = Et ? Et.split(";").map(($t) => $t.trim()).filter(Boolean) : [];
          st.setContentType([
            Bt || "multipart/form-data",
            ...St
          ].join("; "));
        }
      }
      if (platform.hasStandardBrowserEnv && (j && utils$1$1.isFunction(j) && (j = j(_)), j || j !== false && isURLSameOrigin(_.url))) {
        const Bt = rt && et && cookies.read(et);
        Bt && st.set(rt, Bt);
      }
      return _;
    };
    const isXHRAdapterSupported = typeof XMLHttpRequest < "u";
    var xhrAdapter = isXHRAdapterSupported && function(d) {
      return new Promise(function($, j) {
        const rt = resolveConfig(d);
        let et = rt.data;
        const st = AxiosHeaders$1.from(rt.headers).normalize();
        let { responseType: pt, onUploadProgress: Et, onDownloadProgress: Bt } = rt, St, $t, kt, Tt, Pt;
        function It() {
          Tt && Tt(), Pt && Pt(), rt.cancelToken && rt.cancelToken.unsubscribe(St), rt.signal && rt.signal.removeEventListener("abort", St);
        }
        let jt = new XMLHttpRequest();
        jt.open(rt.method.toUpperCase(), rt.url, true), jt.timeout = rt.timeout;
        function Dt() {
          if (!jt) return;
          const Ft = AxiosHeaders$1.from("getAllResponseHeaders" in jt && jt.getAllResponseHeaders()), Zt = {
            data: !pt || pt === "text" || pt === "json" ? jt.responseText : jt.response,
            status: jt.status,
            statusText: jt.statusText,
            headers: Ft,
            config: d,
            request: jt
          };
          settle(function(ar) {
            $(ar), It();
          }, function(ar) {
            j(ar), It();
          }, Zt), jt = null;
        }
        "onloadend" in jt ? jt.onloadend = Dt : jt.onreadystatechange = function() {
          !jt || jt.readyState !== 4 || jt.status === 0 && !(jt.responseURL && jt.responseURL.indexOf("file:") === 0) || setTimeout(Dt);
        }, jt.onabort = function() {
          jt && (j(new AxiosError("Request aborted", AxiosError.ECONNABORTED, d, jt)), jt = null);
        }, jt.onerror = function() {
          j(new AxiosError("Network Error", AxiosError.ERR_NETWORK, d, jt)), jt = null;
        }, jt.ontimeout = function() {
          let Lt = rt.timeout ? "timeout of " + rt.timeout + "ms exceeded" : "timeout exceeded";
          const Zt = rt.transitional || transitionalDefaults;
          rt.timeoutErrorMessage && (Lt = rt.timeoutErrorMessage), j(new AxiosError(Lt, Zt.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, d, jt)), jt = null;
        }, et === void 0 && st.setContentType(null), "setRequestHeader" in jt && utils$1$1.forEach(st.toJSON(), function(Lt, Zt) {
          jt.setRequestHeader(Zt, Lt);
        }), utils$1$1.isUndefined(rt.withCredentials) || (jt.withCredentials = !!rt.withCredentials), pt && pt !== "json" && (jt.responseType = rt.responseType), Bt && ([kt, Pt] = progressEventReducer(Bt, true), jt.addEventListener("progress", kt)), Et && jt.upload && ([$t, Tt] = progressEventReducer(Et), jt.upload.addEventListener("progress", $t), jt.upload.addEventListener("loadend", Tt)), (rt.cancelToken || rt.signal) && (St = (Ft) => {
          jt && (j(!Ft || Ft.type ? new CanceledError(null, d, jt) : Ft), jt.abort(), jt = null);
        }, rt.cancelToken && rt.cancelToken.subscribe(St), rt.signal && (rt.signal.aborted ? St() : rt.signal.addEventListener("abort", St)));
        const Ot = parseProtocol(rt.url);
        if (Ot && platform.protocols.indexOf(Ot) === -1) {
          j(new AxiosError("Unsupported protocol " + Ot + ":", AxiosError.ERR_BAD_REQUEST, d));
          return;
        }
        jt.send(et || null);
      });
    };
    const composeSignals = (d, _) => {
      const { length: $ } = d = d ? d.filter(Boolean) : [];
      if (_ || $) {
        let j = new AbortController(), rt;
        const et = function(Bt) {
          if (!rt) {
            rt = true, pt();
            const St = Bt instanceof Error ? Bt : this.reason;
            j.abort(St instanceof AxiosError ? St : new CanceledError(St instanceof Error ? St.message : St));
          }
        };
        let st = _ && setTimeout(() => {
          st = null, et(new AxiosError(`timeout ${_} of ms exceeded`, AxiosError.ETIMEDOUT));
        }, _);
        const pt = () => {
          d && (st && clearTimeout(st), st = null, d.forEach((Bt) => {
            Bt.unsubscribe ? Bt.unsubscribe(et) : Bt.removeEventListener("abort", et);
          }), d = null);
        };
        d.forEach((Bt) => Bt.addEventListener("abort", et));
        const { signal: Et } = j;
        return Et.unsubscribe = () => utils$1$1.asap(pt), Et;
      }
    };
    var composeSignals$1 = composeSignals;
    const streamChunk = function* (d, _) {
      let $ = d.byteLength;
      if ($ < _) {
        yield d;
        return;
      }
      let j = 0, rt;
      for (; j < $; ) rt = j + _, yield d.slice(j, rt), j = rt;
    }, readBytes = async function* (d, _) {
      for await (const $ of readStream(d)) yield* streamChunk($, _);
    }, readStream = async function* (d) {
      if (d[Symbol.asyncIterator]) {
        yield* d;
        return;
      }
      const _ = d.getReader();
      try {
        for (; ; ) {
          const { done: $, value: j } = await _.read();
          if ($) break;
          yield j;
        }
      } finally {
        await _.cancel();
      }
    }, trackStream = (d, _, $, j) => {
      const rt = readBytes(d, _);
      let et = 0, st, pt = (Et) => {
        st || (st = true, j && j(Et));
      };
      return new ReadableStream({
        async pull(Et) {
          try {
            const { done: Bt, value: St } = await rt.next();
            if (Bt) {
              pt(), Et.close();
              return;
            }
            let $t = St.byteLength;
            if ($) {
              let kt = et += $t;
              $(kt);
            }
            Et.enqueue(new Uint8Array(St));
          } catch (Bt) {
            throw pt(Bt), Bt;
          }
        },
        cancel(Et) {
          return pt(Et), rt.return();
        }
      }, {
        highWaterMark: 2
      });
    }, isFetchSupported = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", isReadableStreamSupported = isFetchSupported && typeof ReadableStream == "function", encodeText = isFetchSupported && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((d) => (_) => d.encode(_))(new TextEncoder()) : async (d) => new Uint8Array(await new Response(d).arrayBuffer())), test = (d, ..._) => {
      try {
        return !!d(..._);
      } catch {
        return false;
      }
    }, supportsRequestStream = isReadableStreamSupported && test(() => {
      let d = false;
      const _ = new Request(platform.origin, {
        body: new ReadableStream(),
        method: "POST",
        get duplex() {
          return d = true, "half";
        }
      }).headers.has("Content-Type");
      return d && !_;
    }), DEFAULT_CHUNK_SIZE = 64 * 1024, supportsResponseStream = isReadableStreamSupported && test(() => utils$1$1.isReadableStream(new Response("").body)), resolvers = {
      stream: supportsResponseStream && ((d) => d.body)
    };
    isFetchSupported && ((d) => {
      [
        "text",
        "arrayBuffer",
        "blob",
        "formData",
        "stream"
      ].forEach((_) => {
        !resolvers[_] && (resolvers[_] = utils$1$1.isFunction(d[_]) ? ($) => $[_]() : ($, j) => {
          throw new AxiosError(`Response type '${_}' is not supported`, AxiosError.ERR_NOT_SUPPORT, j);
        });
      });
    })(new Response());
    const getBodyLength = async (d) => {
      if (d == null) return 0;
      if (utils$1$1.isBlob(d)) return d.size;
      if (utils$1$1.isSpecCompliantForm(d)) return (await new Request(platform.origin, {
        method: "POST",
        body: d
      }).arrayBuffer()).byteLength;
      if (utils$1$1.isArrayBufferView(d) || utils$1$1.isArrayBuffer(d)) return d.byteLength;
      if (utils$1$1.isURLSearchParams(d) && (d = d + ""), utils$1$1.isString(d)) return (await encodeText(d)).byteLength;
    }, resolveBodyLength = async (d, _) => {
      const $ = utils$1$1.toFiniteNumber(d.getContentLength());
      return $ ?? getBodyLength(_);
    };
    var fetchAdapter = isFetchSupported && (async (d) => {
      let { url: _, method: $, data: j, signal: rt, cancelToken: et, timeout: st, onDownloadProgress: pt, onUploadProgress: Et, responseType: Bt, headers: St, withCredentials: $t = "same-origin", fetchOptions: kt } = resolveConfig(d);
      Bt = Bt ? (Bt + "").toLowerCase() : "text";
      let Tt = composeSignals$1([
        rt,
        et && et.toAbortSignal()
      ], st), Pt;
      const It = Tt && Tt.unsubscribe && (() => {
        Tt.unsubscribe();
      });
      let jt;
      try {
        if (Et && supportsRequestStream && $ !== "get" && $ !== "head" && (jt = await resolveBodyLength(St, j)) !== 0) {
          let Zt = new Request(_, {
            method: "POST",
            body: j,
            duplex: "half"
          }), Kt;
          if (utils$1$1.isFormData(j) && (Kt = Zt.headers.get("content-type")) && St.setContentType(Kt), Zt.body) {
            const [ar, sr] = progressEventDecorator(jt, progressEventReducer(asyncDecorator(Et)));
            j = trackStream(Zt.body, DEFAULT_CHUNK_SIZE, ar, sr);
          }
        }
        utils$1$1.isString($t) || ($t = $t ? "include" : "omit");
        const Dt = "credentials" in Request.prototype;
        Pt = new Request(_, {
          ...kt,
          signal: Tt,
          method: $.toUpperCase(),
          headers: St.normalize().toJSON(),
          body: j,
          duplex: "half",
          credentials: Dt ? $t : void 0
        });
        let Ot = await fetch(Pt);
        const Ft = supportsResponseStream && (Bt === "stream" || Bt === "response");
        if (supportsResponseStream && (pt || Ft && It)) {
          const Zt = {};
          [
            "status",
            "statusText",
            "headers"
          ].forEach((er) => {
            Zt[er] = Ot[er];
          });
          const Kt = utils$1$1.toFiniteNumber(Ot.headers.get("content-length")), [ar, sr] = pt && progressEventDecorator(Kt, progressEventReducer(asyncDecorator(pt), true)) || [];
          Ot = new Response(trackStream(Ot.body, DEFAULT_CHUNK_SIZE, ar, () => {
            sr && sr(), It && It();
          }), Zt);
        }
        Bt = Bt || "text";
        let Lt = await resolvers[utils$1$1.findKey(resolvers, Bt) || "text"](Ot, d);
        return !Ft && It && It(), await new Promise((Zt, Kt) => {
          settle(Zt, Kt, {
            data: Lt,
            headers: AxiosHeaders$1.from(Ot.headers),
            status: Ot.status,
            statusText: Ot.statusText,
            config: d,
            request: Pt
          });
        });
      } catch (Dt) {
        throw It && It(), Dt && Dt.name === "TypeError" && /fetch/i.test(Dt.message) ? Object.assign(new AxiosError("Network Error", AxiosError.ERR_NETWORK, d, Pt), {
          cause: Dt.cause || Dt
        }) : AxiosError.from(Dt, Dt && Dt.code, d, Pt);
      }
    });
    const knownAdapters = {
      http: httpAdapter,
      xhr: xhrAdapter,
      fetch: fetchAdapter
    };
    utils$1$1.forEach(knownAdapters, (d, _) => {
      if (d) {
        try {
          Object.defineProperty(d, "name", {
            value: _
          });
        } catch {
        }
        Object.defineProperty(d, "adapterName", {
          value: _
        });
      }
    });
    const renderReason = (d) => `- ${d}`, isResolvedHandle = (d) => utils$1$1.isFunction(d) || d === null || d === false;
    var adapters = {
      getAdapter: (d) => {
        d = utils$1$1.isArray(d) ? d : [
          d
        ];
        const { length: _ } = d;
        let $, j;
        const rt = {};
        for (let et = 0; et < _; et++) {
          $ = d[et];
          let st;
          if (j = $, !isResolvedHandle($) && (j = knownAdapters[(st = String($)).toLowerCase()], j === void 0)) throw new AxiosError(`Unknown adapter '${st}'`);
          if (j) break;
          rt[st || "#" + et] = j;
        }
        if (!j) {
          const et = Object.entries(rt).map(([pt, Et]) => `adapter ${pt} ` + (Et === false ? "is not supported by the environment" : "is not available in the build"));
          let st = _ ? et.length > 1 ? `since :
` + et.map(renderReason).join(`
`) : " " + renderReason(et[0]) : "as no adapter specified";
          throw new AxiosError("There is no suitable adapter to dispatch the request " + st, "ERR_NOT_SUPPORT");
        }
        return j;
      },
      adapters: knownAdapters
    };
    function throwIfCancellationRequested(d) {
      if (d.cancelToken && d.cancelToken.throwIfRequested(), d.signal && d.signal.aborted) throw new CanceledError(null, d);
    }
    function dispatchRequest(d) {
      return throwIfCancellationRequested(d), d.headers = AxiosHeaders$1.from(d.headers), d.data = transformData.call(d, d.transformRequest), [
        "post",
        "put",
        "patch"
      ].indexOf(d.method) !== -1 && d.headers.setContentType("application/x-www-form-urlencoded", false), adapters.getAdapter(d.adapter || defaults$1.adapter)(d).then(function(j) {
        return throwIfCancellationRequested(d), j.data = transformData.call(d, d.transformResponse, j), j.headers = AxiosHeaders$1.from(j.headers), j;
      }, function(j) {
        return isCancel(j) || (throwIfCancellationRequested(d), j && j.response && (j.response.data = transformData.call(d, d.transformResponse, j.response), j.response.headers = AxiosHeaders$1.from(j.response.headers))), Promise.reject(j);
      });
    }
    const VERSION = "1.8.1", validators$1 = {};
    [
      "object",
      "boolean",
      "number",
      "function",
      "string",
      "symbol"
    ].forEach((d, _) => {
      validators$1[d] = function(j) {
        return typeof j === d || "a" + (_ < 1 ? "n " : " ") + d;
      };
    });
    const deprecatedWarnings = {};
    validators$1.transitional = function d(_, $, j) {
      function rt(et, st) {
        return "[Axios v" + VERSION + "] Transitional option '" + et + "'" + st + (j ? ". " + j : "");
      }
      return (et, st, pt) => {
        if (_ === false) throw new AxiosError(rt(st, " has been removed" + ($ ? " in " + $ : "")), AxiosError.ERR_DEPRECATED);
        return $ && !deprecatedWarnings[st] && (deprecatedWarnings[st] = true, console.warn(rt(st, " has been deprecated since v" + $ + " and will be removed in the near future"))), _ ? _(et, st, pt) : true;
      };
    };
    validators$1.spelling = function d(_) {
      return ($, j) => (console.warn(`${j} is likely a misspelling of ${_}`), true);
    };
    function assertOptions(d, _, $) {
      if (typeof d != "object") throw new AxiosError("options must be an object", AxiosError.ERR_BAD_OPTION_VALUE);
      const j = Object.keys(d);
      let rt = j.length;
      for (; rt-- > 0; ) {
        const et = j[rt], st = _[et];
        if (st) {
          const pt = d[et], Et = pt === void 0 || st(pt, et, d);
          if (Et !== true) throw new AxiosError("option " + et + " must be " + Et, AxiosError.ERR_BAD_OPTION_VALUE);
          continue;
        }
        if ($ !== true) throw new AxiosError("Unknown option " + et, AxiosError.ERR_BAD_OPTION);
      }
    }
    var validator = {
      assertOptions,
      validators: validators$1
    };
    const validators = validator.validators;
    class Axios {
      constructor(_) {
        this.defaults = _, this.interceptors = {
          request: new InterceptorManager$1(),
          response: new InterceptorManager$1()
        };
      }
      async request(_, $) {
        try {
          return await this._request(_, $);
        } catch (j) {
          if (j instanceof Error) {
            let rt = {};
            Error.captureStackTrace ? Error.captureStackTrace(rt) : rt = new Error();
            const et = rt.stack ? rt.stack.replace(/^.+\n/, "") : "";
            try {
              j.stack ? et && !String(j.stack).endsWith(et.replace(/^.+\n.+\n/, "")) && (j.stack += `
` + et) : j.stack = et;
            } catch {
            }
          }
          throw j;
        }
      }
      _request(_, $) {
        typeof _ == "string" ? ($ = $ || {}, $.url = _) : $ = _ || {}, $ = mergeConfig(this.defaults, $);
        const { transitional: j, paramsSerializer: rt, headers: et } = $;
        j !== void 0 && validator.assertOptions(j, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false), rt != null && (utils$1$1.isFunction(rt) ? $.paramsSerializer = {
          serialize: rt
        } : validator.assertOptions(rt, {
          encode: validators.function,
          serialize: validators.function
        }, true)), $.allowAbsoluteUrls !== void 0 || (this.defaults.allowAbsoluteUrls !== void 0 ? $.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : $.allowAbsoluteUrls = true), validator.assertOptions($, {
          baseUrl: validators.spelling("baseURL"),
          withXsrfToken: validators.spelling("withXSRFToken")
        }, true), $.method = ($.method || this.defaults.method || "get").toLowerCase();
        let st = et && utils$1$1.merge(et.common, et[$.method]);
        et && utils$1$1.forEach([
          "delete",
          "get",
          "head",
          "post",
          "put",
          "patch",
          "common"
        ], (Pt) => {
          delete et[Pt];
        }), $.headers = AxiosHeaders$1.concat(st, et);
        const pt = [];
        let Et = true;
        this.interceptors.request.forEach(function(It) {
          typeof It.runWhen == "function" && It.runWhen($) === false || (Et = Et && It.synchronous, pt.unshift(It.fulfilled, It.rejected));
        });
        const Bt = [];
        this.interceptors.response.forEach(function(It) {
          Bt.push(It.fulfilled, It.rejected);
        });
        let St, $t = 0, kt;
        if (!Et) {
          const Pt = [
            dispatchRequest.bind(this),
            void 0
          ];
          for (Pt.unshift.apply(Pt, pt), Pt.push.apply(Pt, Bt), kt = Pt.length, St = Promise.resolve($); $t < kt; ) St = St.then(Pt[$t++], Pt[$t++]);
          return St;
        }
        kt = pt.length;
        let Tt = $;
        for ($t = 0; $t < kt; ) {
          const Pt = pt[$t++], It = pt[$t++];
          try {
            Tt = Pt(Tt);
          } catch (jt) {
            It.call(this, jt);
            break;
          }
        }
        try {
          St = dispatchRequest.call(this, Tt);
        } catch (Pt) {
          return Promise.reject(Pt);
        }
        for ($t = 0, kt = Bt.length; $t < kt; ) St = St.then(Bt[$t++], Bt[$t++]);
        return St;
      }
      getUri(_) {
        _ = mergeConfig(this.defaults, _);
        const $ = buildFullPath(_.baseURL, _.url, _.allowAbsoluteUrls);
        return buildURL($, _.params, _.paramsSerializer);
      }
    }
    utils$1$1.forEach([
      "delete",
      "get",
      "head",
      "options"
    ], function d(_) {
      Axios.prototype[_] = function($, j) {
        return this.request(mergeConfig(j || {}, {
          method: _,
          url: $,
          data: (j || {}).data
        }));
      };
    });
    utils$1$1.forEach([
      "post",
      "put",
      "patch"
    ], function d(_) {
      function $(j) {
        return function(et, st, pt) {
          return this.request(mergeConfig(pt || {}, {
            method: _,
            headers: j ? {
              "Content-Type": "multipart/form-data"
            } : {},
            url: et,
            data: st
          }));
        };
      }
      Axios.prototype[_] = $(), Axios.prototype[_ + "Form"] = $(true);
    });
    var Axios$1 = Axios;
    class CancelToken {
      constructor(_) {
        if (typeof _ != "function") throw new TypeError("executor must be a function.");
        let $;
        this.promise = new Promise(function(et) {
          $ = et;
        });
        const j = this;
        this.promise.then((rt) => {
          if (!j._listeners) return;
          let et = j._listeners.length;
          for (; et-- > 0; ) j._listeners[et](rt);
          j._listeners = null;
        }), this.promise.then = (rt) => {
          let et;
          const st = new Promise((pt) => {
            j.subscribe(pt), et = pt;
          }).then(rt);
          return st.cancel = function() {
            j.unsubscribe(et);
          }, st;
        }, _(function(et, st, pt) {
          j.reason || (j.reason = new CanceledError(et, st, pt), $(j.reason));
        });
      }
      throwIfRequested() {
        if (this.reason) throw this.reason;
      }
      subscribe(_) {
        if (this.reason) {
          _(this.reason);
          return;
        }
        this._listeners ? this._listeners.push(_) : this._listeners = [
          _
        ];
      }
      unsubscribe(_) {
        if (!this._listeners) return;
        const $ = this._listeners.indexOf(_);
        $ !== -1 && this._listeners.splice($, 1);
      }
      toAbortSignal() {
        const _ = new AbortController(), $ = (j) => {
          _.abort(j);
        };
        return this.subscribe($), _.signal.unsubscribe = () => this.unsubscribe($), _.signal;
      }
      static source() {
        let _;
        return {
          token: new CancelToken(function(rt) {
            _ = rt;
          }),
          cancel: _
        };
      }
    }
    var CancelToken$1 = CancelToken;
    function spread(d) {
      return function($) {
        return d.apply(null, $);
      };
    }
    function isAxiosError(d) {
      return utils$1$1.isObject(d) && d.isAxiosError === true;
    }
    const HttpStatusCode = {
      Continue: 100,
      SwitchingProtocols: 101,
      Processing: 102,
      EarlyHints: 103,
      Ok: 200,
      Created: 201,
      Accepted: 202,
      NonAuthoritativeInformation: 203,
      NoContent: 204,
      ResetContent: 205,
      PartialContent: 206,
      MultiStatus: 207,
      AlreadyReported: 208,
      ImUsed: 226,
      MultipleChoices: 300,
      MovedPermanently: 301,
      Found: 302,
      SeeOther: 303,
      NotModified: 304,
      UseProxy: 305,
      Unused: 306,
      TemporaryRedirect: 307,
      PermanentRedirect: 308,
      BadRequest: 400,
      Unauthorized: 401,
      PaymentRequired: 402,
      Forbidden: 403,
      NotFound: 404,
      MethodNotAllowed: 405,
      NotAcceptable: 406,
      ProxyAuthenticationRequired: 407,
      RequestTimeout: 408,
      Conflict: 409,
      Gone: 410,
      LengthRequired: 411,
      PreconditionFailed: 412,
      PayloadTooLarge: 413,
      UriTooLong: 414,
      UnsupportedMediaType: 415,
      RangeNotSatisfiable: 416,
      ExpectationFailed: 417,
      ImATeapot: 418,
      MisdirectedRequest: 421,
      UnprocessableEntity: 422,
      Locked: 423,
      FailedDependency: 424,
      TooEarly: 425,
      UpgradeRequired: 426,
      PreconditionRequired: 428,
      TooManyRequests: 429,
      RequestHeaderFieldsTooLarge: 431,
      UnavailableForLegalReasons: 451,
      InternalServerError: 500,
      NotImplemented: 501,
      BadGateway: 502,
      ServiceUnavailable: 503,
      GatewayTimeout: 504,
      HttpVersionNotSupported: 505,
      VariantAlsoNegotiates: 506,
      InsufficientStorage: 507,
      LoopDetected: 508,
      NotExtended: 510,
      NetworkAuthenticationRequired: 511
    };
    Object.entries(HttpStatusCode).forEach(([d, _]) => {
      HttpStatusCode[_] = d;
    });
    var HttpStatusCode$1 = HttpStatusCode;
    function createInstance(d) {
      const _ = new Axios$1(d), $ = bind(Axios$1.prototype.request, _);
      return utils$1$1.extend($, Axios$1.prototype, _, {
        allOwnKeys: true
      }), utils$1$1.extend($, _, null, {
        allOwnKeys: true
      }), $.create = function(rt) {
        return createInstance(mergeConfig(d, rt));
      }, $;
    }
    const axios = createInstance(defaults$1);
    axios.Axios = Axios$1;
    axios.CanceledError = CanceledError;
    axios.CancelToken = CancelToken$1;
    axios.isCancel = isCancel;
    axios.VERSION = VERSION;
    axios.toFormData = toFormData;
    axios.AxiosError = AxiosError;
    axios.Cancel = axios.CanceledError;
    axios.all = function d(_) {
      return Promise.all(_);
    };
    axios.spread = spread;
    axios.isAxiosError = isAxiosError;
    axios.mergeConfig = mergeConfig;
    axios.AxiosHeaders = AxiosHeaders$1;
    axios.formToJSON = (d) => formDataToJSON(utils$1$1.isHTMLForm(d) ? new FormData(d) : d);
    axios.getAdapter = adapters.getAdapter;
    axios.HttpStatusCode = HttpStatusCode$1;
    axios.default = axios;
    var axios_1$2 = axios, lib$2 = {}, external = {}, errors = {}, en = {}, util = {};
    (function(d) {
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.getParsedType = d.ZodParsedType = d.objectUtil = d.util = void 0;
      var _;
      (function(rt) {
        rt.assertEqual = (Et) => Et;
        function et(Et) {
        }
        rt.assertIs = et;
        function st(Et) {
          throw new Error();
        }
        rt.assertNever = st, rt.arrayToEnum = (Et) => {
          const Bt = {};
          for (const St of Et) Bt[St] = St;
          return Bt;
        }, rt.getValidEnumValues = (Et) => {
          const Bt = rt.objectKeys(Et).filter(($t) => typeof Et[Et[$t]] != "number"), St = {};
          for (const $t of Bt) St[$t] = Et[$t];
          return rt.objectValues(St);
        }, rt.objectValues = (Et) => rt.objectKeys(Et).map(function(Bt) {
          return Et[Bt];
        }), rt.objectKeys = typeof Object.keys == "function" ? (Et) => Object.keys(Et) : (Et) => {
          const Bt = [];
          for (const St in Et) Object.prototype.hasOwnProperty.call(Et, St) && Bt.push(St);
          return Bt;
        }, rt.find = (Et, Bt) => {
          for (const St of Et) if (Bt(St)) return St;
        }, rt.isInteger = typeof Number.isInteger == "function" ? (Et) => Number.isInteger(Et) : (Et) => typeof Et == "number" && isFinite(Et) && Math.floor(Et) === Et;
        function pt(Et, Bt = " | ") {
          return Et.map((St) => typeof St == "string" ? `'${St}'` : St).join(Bt);
        }
        rt.joinValues = pt, rt.jsonStringifyReplacer = (Et, Bt) => typeof Bt == "bigint" ? Bt.toString() : Bt;
      })(_ || (d.util = _ = {}));
      var $;
      (function(rt) {
        rt.mergeShapes = (et, st) => ({
          ...et,
          ...st
        });
      })($ || (d.objectUtil = $ = {})), d.ZodParsedType = _.arrayToEnum([
        "string",
        "nan",
        "number",
        "integer",
        "float",
        "boolean",
        "date",
        "bigint",
        "symbol",
        "function",
        "undefined",
        "null",
        "array",
        "object",
        "unknown",
        "promise",
        "void",
        "never",
        "map",
        "set"
      ]);
      const j = (rt) => {
        switch (typeof rt) {
          case "undefined":
            return d.ZodParsedType.undefined;
          case "string":
            return d.ZodParsedType.string;
          case "number":
            return isNaN(rt) ? d.ZodParsedType.nan : d.ZodParsedType.number;
          case "boolean":
            return d.ZodParsedType.boolean;
          case "function":
            return d.ZodParsedType.function;
          case "bigint":
            return d.ZodParsedType.bigint;
          case "symbol":
            return d.ZodParsedType.symbol;
          case "object":
            return Array.isArray(rt) ? d.ZodParsedType.array : rt === null ? d.ZodParsedType.null : rt.then && typeof rt.then == "function" && rt.catch && typeof rt.catch == "function" ? d.ZodParsedType.promise : typeof Map < "u" && rt instanceof Map ? d.ZodParsedType.map : typeof Set < "u" && rt instanceof Set ? d.ZodParsedType.set : typeof Date < "u" && rt instanceof Date ? d.ZodParsedType.date : d.ZodParsedType.object;
          default:
            return d.ZodParsedType.unknown;
        }
      };
      d.getParsedType = j;
    })(util);
    var ZodError$1 = {};
    Object.defineProperty(ZodError$1, "__esModule", {
      value: true
    });
    ZodError$1.ZodError = ZodError$1.quotelessJson = ZodError$1.ZodIssueCode = void 0;
    const util_1$2 = util;
    ZodError$1.ZodIssueCode = util_1$2.util.arrayToEnum([
      "invalid_type",
      "invalid_literal",
      "custom",
      "invalid_union",
      "invalid_union_discriminator",
      "invalid_enum_value",
      "unrecognized_keys",
      "invalid_arguments",
      "invalid_return_type",
      "invalid_date",
      "invalid_string",
      "too_small",
      "too_big",
      "invalid_intersection_types",
      "not_multiple_of",
      "not_finite"
    ]);
    const quotelessJson = (d) => JSON.stringify(d, null, 2).replace(/"([^"]+)":/g, "$1:");
    ZodError$1.quotelessJson = quotelessJson;
    class ZodError extends Error {
      get errors() {
        return this.issues;
      }
      constructor(_) {
        super(), this.issues = [], this.addIssue = (j) => {
          this.issues = [
            ...this.issues,
            j
          ];
        }, this.addIssues = (j = []) => {
          this.issues = [
            ...this.issues,
            ...j
          ];
        };
        const $ = new.target.prototype;
        Object.setPrototypeOf ? Object.setPrototypeOf(this, $) : this.__proto__ = $, this.name = "ZodError", this.issues = _;
      }
      format(_) {
        const $ = _ || function(et) {
          return et.message;
        }, j = {
          _errors: []
        }, rt = (et) => {
          for (const st of et.issues) if (st.code === "invalid_union") st.unionErrors.map(rt);
          else if (st.code === "invalid_return_type") rt(st.returnTypeError);
          else if (st.code === "invalid_arguments") rt(st.argumentsError);
          else if (st.path.length === 0) j._errors.push($(st));
          else {
            let pt = j, Et = 0;
            for (; Et < st.path.length; ) {
              const Bt = st.path[Et];
              Et === st.path.length - 1 ? (pt[Bt] = pt[Bt] || {
                _errors: []
              }, pt[Bt]._errors.push($(st))) : pt[Bt] = pt[Bt] || {
                _errors: []
              }, pt = pt[Bt], Et++;
            }
          }
        };
        return rt(this), j;
      }
      static assert(_) {
        if (!(_ instanceof ZodError)) throw new Error(`Not a ZodError: ${_}`);
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, util_1$2.util.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(_ = ($) => $.message) {
        const $ = {}, j = [];
        for (const rt of this.issues) rt.path.length > 0 ? ($[rt.path[0]] = $[rt.path[0]] || [], $[rt.path[0]].push(_(rt))) : j.push(_(rt));
        return {
          formErrors: j,
          fieldErrors: $
        };
      }
      get formErrors() {
        return this.flatten();
      }
    }
    ZodError$1.ZodError = ZodError;
    ZodError.create = (d) => new ZodError(d);
    Object.defineProperty(en, "__esModule", {
      value: true
    });
    const util_1$1 = util, ZodError_1$1 = ZodError$1, errorMap = (d, _) => {
      let $;
      switch (d.code) {
        case ZodError_1$1.ZodIssueCode.invalid_type:
          d.received === util_1$1.ZodParsedType.undefined ? $ = "Required" : $ = `Expected ${d.expected}, received ${d.received}`;
          break;
        case ZodError_1$1.ZodIssueCode.invalid_literal:
          $ = `Invalid literal value, expected ${JSON.stringify(d.expected, util_1$1.util.jsonStringifyReplacer)}`;
          break;
        case ZodError_1$1.ZodIssueCode.unrecognized_keys:
          $ = `Unrecognized key(s) in object: ${util_1$1.util.joinValues(d.keys, ", ")}`;
          break;
        case ZodError_1$1.ZodIssueCode.invalid_union:
          $ = "Invalid input";
          break;
        case ZodError_1$1.ZodIssueCode.invalid_union_discriminator:
          $ = `Invalid discriminator value. Expected ${util_1$1.util.joinValues(d.options)}`;
          break;
        case ZodError_1$1.ZodIssueCode.invalid_enum_value:
          $ = `Invalid enum value. Expected ${util_1$1.util.joinValues(d.options)}, received '${d.received}'`;
          break;
        case ZodError_1$1.ZodIssueCode.invalid_arguments:
          $ = "Invalid function arguments";
          break;
        case ZodError_1$1.ZodIssueCode.invalid_return_type:
          $ = "Invalid function return type";
          break;
        case ZodError_1$1.ZodIssueCode.invalid_date:
          $ = "Invalid date";
          break;
        case ZodError_1$1.ZodIssueCode.invalid_string:
          typeof d.validation == "object" ? "includes" in d.validation ? ($ = `Invalid input: must include "${d.validation.includes}"`, typeof d.validation.position == "number" && ($ = `${$} at one or more positions greater than or equal to ${d.validation.position}`)) : "startsWith" in d.validation ? $ = `Invalid input: must start with "${d.validation.startsWith}"` : "endsWith" in d.validation ? $ = `Invalid input: must end with "${d.validation.endsWith}"` : util_1$1.util.assertNever(d.validation) : d.validation !== "regex" ? $ = `Invalid ${d.validation}` : $ = "Invalid";
          break;
        case ZodError_1$1.ZodIssueCode.too_small:
          d.type === "array" ? $ = `Array must contain ${d.exact ? "exactly" : d.inclusive ? "at least" : "more than"} ${d.minimum} element(s)` : d.type === "string" ? $ = `String must contain ${d.exact ? "exactly" : d.inclusive ? "at least" : "over"} ${d.minimum} character(s)` : d.type === "number" ? $ = `Number must be ${d.exact ? "exactly equal to " : d.inclusive ? "greater than or equal to " : "greater than "}${d.minimum}` : d.type === "date" ? $ = `Date must be ${d.exact ? "exactly equal to " : d.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(d.minimum))}` : $ = "Invalid input";
          break;
        case ZodError_1$1.ZodIssueCode.too_big:
          d.type === "array" ? $ = `Array must contain ${d.exact ? "exactly" : d.inclusive ? "at most" : "less than"} ${d.maximum} element(s)` : d.type === "string" ? $ = `String must contain ${d.exact ? "exactly" : d.inclusive ? "at most" : "under"} ${d.maximum} character(s)` : d.type === "number" ? $ = `Number must be ${d.exact ? "exactly" : d.inclusive ? "less than or equal to" : "less than"} ${d.maximum}` : d.type === "bigint" ? $ = `BigInt must be ${d.exact ? "exactly" : d.inclusive ? "less than or equal to" : "less than"} ${d.maximum}` : d.type === "date" ? $ = `Date must be ${d.exact ? "exactly" : d.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(d.maximum))}` : $ = "Invalid input";
          break;
        case ZodError_1$1.ZodIssueCode.custom:
          $ = "Invalid input";
          break;
        case ZodError_1$1.ZodIssueCode.invalid_intersection_types:
          $ = "Intersection results could not be merged";
          break;
        case ZodError_1$1.ZodIssueCode.not_multiple_of:
          $ = `Number must be a multiple of ${d.multipleOf}`;
          break;
        case ZodError_1$1.ZodIssueCode.not_finite:
          $ = "Number must be finite";
          break;
        default:
          $ = _.defaultError, util_1$1.util.assertNever(d);
      }
      return {
        message: $
      };
    };
    en.default = errorMap;
    var __importDefault$2 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(errors, "__esModule", {
      value: true
    });
    errors.getErrorMap = errors.setErrorMap = errors.defaultErrorMap = void 0;
    const en_1 = __importDefault$2(en);
    errors.defaultErrorMap = en_1.default;
    let overrideErrorMap = en_1.default;
    function setErrorMap(d) {
      overrideErrorMap = d;
    }
    errors.setErrorMap = setErrorMap;
    function getErrorMap() {
      return overrideErrorMap;
    }
    errors.getErrorMap = getErrorMap;
    var parseUtil = {};
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__importDefault || function(Tt) {
        return Tt && Tt.__esModule ? Tt : {
          default: Tt
        };
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.isAsync = d.isValid = d.isDirty = d.isAborted = d.OK = d.DIRTY = d.INVALID = d.ParseStatus = d.addIssueToContext = d.EMPTY_PATH = d.makeIssue = void 0;
      const $ = errors, j = _(en), rt = (Tt) => {
        const { data: Pt, path: It, errorMaps: jt, issueData: Dt } = Tt, Ot = [
          ...It,
          ...Dt.path || []
        ], Ft = {
          ...Dt,
          path: Ot
        };
        if (Dt.message !== void 0) return {
          ...Dt,
          path: Ot,
          message: Dt.message
        };
        let Lt = "";
        const Zt = jt.filter((Kt) => !!Kt).slice().reverse();
        for (const Kt of Zt) Lt = Kt(Ft, {
          data: Pt,
          defaultError: Lt
        }).message;
        return {
          ...Dt,
          path: Ot,
          message: Lt
        };
      };
      d.makeIssue = rt, d.EMPTY_PATH = [];
      function et(Tt, Pt) {
        const It = (0, $.getErrorMap)(), jt = (0, d.makeIssue)({
          issueData: Pt,
          data: Tt.data,
          path: Tt.path,
          errorMaps: [
            Tt.common.contextualErrorMap,
            Tt.schemaErrorMap,
            It,
            It === j.default ? void 0 : j.default
          ].filter((Dt) => !!Dt)
        });
        Tt.common.issues.push(jt);
      }
      d.addIssueToContext = et;
      class st {
        constructor() {
          this.value = "valid";
        }
        dirty() {
          this.value === "valid" && (this.value = "dirty");
        }
        abort() {
          this.value !== "aborted" && (this.value = "aborted");
        }
        static mergeArray(Pt, It) {
          const jt = [];
          for (const Dt of It) {
            if (Dt.status === "aborted") return d.INVALID;
            Dt.status === "dirty" && Pt.dirty(), jt.push(Dt.value);
          }
          return {
            status: Pt.value,
            value: jt
          };
        }
        static async mergeObjectAsync(Pt, It) {
          const jt = [];
          for (const Dt of It) {
            const Ot = await Dt.key, Ft = await Dt.value;
            jt.push({
              key: Ot,
              value: Ft
            });
          }
          return st.mergeObjectSync(Pt, jt);
        }
        static mergeObjectSync(Pt, It) {
          const jt = {};
          for (const Dt of It) {
            const { key: Ot, value: Ft } = Dt;
            if (Ot.status === "aborted" || Ft.status === "aborted") return d.INVALID;
            Ot.status === "dirty" && Pt.dirty(), Ft.status === "dirty" && Pt.dirty(), Ot.value !== "__proto__" && (typeof Ft.value < "u" || Dt.alwaysSet) && (jt[Ot.value] = Ft.value);
          }
          return {
            status: Pt.value,
            value: jt
          };
        }
      }
      d.ParseStatus = st, d.INVALID = Object.freeze({
        status: "aborted"
      });
      const pt = (Tt) => ({
        status: "dirty",
        value: Tt
      });
      d.DIRTY = pt;
      const Et = (Tt) => ({
        status: "valid",
        value: Tt
      });
      d.OK = Et;
      const Bt = (Tt) => Tt.status === "aborted";
      d.isAborted = Bt;
      const St = (Tt) => Tt.status === "dirty";
      d.isDirty = St;
      const $t = (Tt) => Tt.status === "valid";
      d.isValid = $t;
      const kt = (Tt) => typeof Promise < "u" && Tt instanceof Promise;
      d.isAsync = kt;
    })(parseUtil);
    var typeAliases = {};
    Object.defineProperty(typeAliases, "__esModule", {
      value: true
    });
    var types = {}, errorUtil$1 = {};
    Object.defineProperty(errorUtil$1, "__esModule", {
      value: true
    });
    errorUtil$1.errorUtil = void 0;
    var errorUtil;
    (function(d) {
      d.errToObj = (_) => typeof _ == "string" ? {
        message: _
      } : _ || {}, d.toString = (_) => typeof _ == "string" ? _ : _ == null ? void 0 : _.message;
    })(errorUtil || (errorUtil$1.errorUtil = errorUtil = {}));
    var __classPrivateFieldGet$1 = commonjsGlobal && commonjsGlobal.__classPrivateFieldGet || function(d, _, $, j) {
      if ($ === "a" && !j) throw new TypeError("Private accessor was defined without a getter");
      if (typeof _ == "function" ? d !== _ || !j : !_.has(d)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return $ === "m" ? j : $ === "a" ? j.call(d) : j ? j.value : _.get(d);
    }, __classPrivateFieldSet$1 = commonjsGlobal && commonjsGlobal.__classPrivateFieldSet || function(d, _, $, j, rt) {
      if (j === "m") throw new TypeError("Private method is not writable");
      if (j === "a" && !rt) throw new TypeError("Private accessor was defined without a setter");
      if (typeof _ == "function" ? d !== _ || !rt : !_.has(d)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return j === "a" ? rt.call(d, $) : rt ? rt.value = $ : _.set(d, $), $;
    }, _ZodEnum_cache, _ZodNativeEnum_cache;
    Object.defineProperty(types, "__esModule", {
      value: true
    });
    types.boolean = types.bigint = types.array = types.any = types.coerce = types.ZodFirstPartyTypeKind = types.late = types.ZodSchema = types.Schema = types.custom = types.ZodReadonly = types.ZodPipeline = types.ZodBranded = types.BRAND = types.ZodNaN = types.ZodCatch = types.ZodDefault = types.ZodNullable = types.ZodOptional = types.ZodTransformer = types.ZodEffects = types.ZodPromise = types.ZodNativeEnum = types.ZodEnum = types.ZodLiteral = types.ZodLazy = types.ZodFunction = types.ZodSet = types.ZodMap = types.ZodRecord = types.ZodTuple = types.ZodIntersection = types.ZodDiscriminatedUnion = types.ZodUnion = types.ZodObject = types.ZodArray = types.ZodVoid = types.ZodNever = types.ZodUnknown = types.ZodAny = types.ZodNull = types.ZodUndefined = types.ZodSymbol = types.ZodDate = types.ZodBoolean = types.ZodBigInt = types.ZodNumber = types.ZodString = types.datetimeRegex = types.ZodType = void 0;
    types.NEVER = types.void = types.unknown = types.union = types.undefined = types.tuple = types.transformer = types.symbol = types.string = types.strictObject = types.set = types.record = types.promise = types.preprocess = types.pipeline = types.ostring = types.optional = types.onumber = types.oboolean = types.object = types.number = types.nullable = types.null = types.never = types.nativeEnum = types.nan = types.map = types.literal = types.lazy = types.intersection = types.instanceof = types.function = types.enum = types.effect = types.discriminatedUnion = types.date = void 0;
    const errors_1 = errors, errorUtil_1 = errorUtil$1, parseUtil_1 = parseUtil, util_1 = util, ZodError_1 = ZodError$1;
    class ParseInputLazyPath {
      constructor(_, $, j, rt) {
        this._cachedPath = [], this.parent = _, this.data = $, this._path = j, this._key = rt;
      }
      get path() {
        return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
      }
    }
    const handleResult = (d, _) => {
      if ((0, parseUtil_1.isValid)(_)) return {
        success: true,
        data: _.value
      };
      if (!d.common.issues.length) throw new Error("Validation failed but no issues detected.");
      return {
        success: false,
        get error() {
          if (this._error) return this._error;
          const $ = new ZodError_1.ZodError(d.common.issues);
          return this._error = $, this._error;
        }
      };
    };
    function processCreateParams(d) {
      if (!d) return {};
      const { errorMap: _, invalid_type_error: $, required_error: j, description: rt } = d;
      if (_ && ($ || j)) throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
      return _ ? {
        errorMap: _,
        description: rt
      } : {
        errorMap: (st, pt) => {
          var Et, Bt;
          const { message: St } = d;
          return st.code === "invalid_enum_value" ? {
            message: St ?? pt.defaultError
          } : typeof pt.data > "u" ? {
            message: (Et = St ?? j) !== null && Et !== void 0 ? Et : pt.defaultError
          } : st.code !== "invalid_type" ? {
            message: pt.defaultError
          } : {
            message: (Bt = St ?? $) !== null && Bt !== void 0 ? Bt : pt.defaultError
          };
        },
        description: rt
      };
    }
    class ZodType {
      get description() {
        return this._def.description;
      }
      _getType(_) {
        return (0, util_1.getParsedType)(_.data);
      }
      _getOrReturnCtx(_, $) {
        return $ || {
          common: _.parent.common,
          data: _.data,
          parsedType: (0, util_1.getParsedType)(_.data),
          schemaErrorMap: this._def.errorMap,
          path: _.path,
          parent: _.parent
        };
      }
      _processInputParams(_) {
        return {
          status: new parseUtil_1.ParseStatus(),
          ctx: {
            common: _.parent.common,
            data: _.data,
            parsedType: (0, util_1.getParsedType)(_.data),
            schemaErrorMap: this._def.errorMap,
            path: _.path,
            parent: _.parent
          }
        };
      }
      _parseSync(_) {
        const $ = this._parse(_);
        if ((0, parseUtil_1.isAsync)($)) throw new Error("Synchronous parse encountered promise.");
        return $;
      }
      _parseAsync(_) {
        const $ = this._parse(_);
        return Promise.resolve($);
      }
      parse(_, $) {
        const j = this.safeParse(_, $);
        if (j.success) return j.data;
        throw j.error;
      }
      safeParse(_, $) {
        var j;
        const rt = {
          common: {
            issues: [],
            async: (j = $ == null ? void 0 : $.async) !== null && j !== void 0 ? j : false,
            contextualErrorMap: $ == null ? void 0 : $.errorMap
          },
          path: ($ == null ? void 0 : $.path) || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _,
          parsedType: (0, util_1.getParsedType)(_)
        }, et = this._parseSync({
          data: _,
          path: rt.path,
          parent: rt
        });
        return handleResult(rt, et);
      }
      "~validate"(_) {
        var $, j;
        const rt = {
          common: {
            issues: [],
            async: !!this["~standard"].async
          },
          path: [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _,
          parsedType: (0, util_1.getParsedType)(_)
        };
        if (!this["~standard"].async) try {
          const et = this._parseSync({
            data: _,
            path: [],
            parent: rt
          });
          return (0, parseUtil_1.isValid)(et) ? {
            value: et.value
          } : {
            issues: rt.common.issues
          };
        } catch (et) {
          !((j = ($ = et == null ? void 0 : et.message) === null || $ === void 0 ? void 0 : $.toLowerCase()) === null || j === void 0) && j.includes("encountered") && (this["~standard"].async = true), rt.common = {
            issues: [],
            async: true
          };
        }
        return this._parseAsync({
          data: _,
          path: [],
          parent: rt
        }).then((et) => (0, parseUtil_1.isValid)(et) ? {
          value: et.value
        } : {
          issues: rt.common.issues
        });
      }
      async parseAsync(_, $) {
        const j = await this.safeParseAsync(_, $);
        if (j.success) return j.data;
        throw j.error;
      }
      async safeParseAsync(_, $) {
        const j = {
          common: {
            issues: [],
            contextualErrorMap: $ == null ? void 0 : $.errorMap,
            async: true
          },
          path: ($ == null ? void 0 : $.path) || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _,
          parsedType: (0, util_1.getParsedType)(_)
        }, rt = this._parse({
          data: _,
          path: j.path,
          parent: j
        }), et = await ((0, parseUtil_1.isAsync)(rt) ? rt : Promise.resolve(rt));
        return handleResult(j, et);
      }
      refine(_, $) {
        const j = (rt) => typeof $ == "string" || typeof $ > "u" ? {
          message: $
        } : typeof $ == "function" ? $(rt) : $;
        return this._refinement((rt, et) => {
          const st = _(rt), pt = () => et.addIssue({
            code: ZodError_1.ZodIssueCode.custom,
            ...j(rt)
          });
          return typeof Promise < "u" && st instanceof Promise ? st.then((Et) => Et ? true : (pt(), false)) : st ? true : (pt(), false);
        });
      }
      refinement(_, $) {
        return this._refinement((j, rt) => _(j) ? true : (rt.addIssue(typeof $ == "function" ? $(j, rt) : $), false));
      }
      _refinement(_) {
        return new ZodEffects({
          schema: this,
          typeName: ZodFirstPartyTypeKind.ZodEffects,
          effect: {
            type: "refinement",
            refinement: _
          }
        });
      }
      superRefine(_) {
        return this._refinement(_);
      }
      constructor(_) {
        this.spa = this.safeParseAsync, this._def = _, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this), this["~standard"] = {
          version: 1,
          vendor: "zod",
          validate: ($) => this["~validate"]($)
        };
      }
      optional() {
        return ZodOptional.create(this, this._def);
      }
      nullable() {
        return ZodNullable.create(this, this._def);
      }
      nullish() {
        return this.nullable().optional();
      }
      array() {
        return ZodArray.create(this);
      }
      promise() {
        return ZodPromise.create(this, this._def);
      }
      or(_) {
        return ZodUnion.create([
          this,
          _
        ], this._def);
      }
      and(_) {
        return ZodIntersection.create(this, _, this._def);
      }
      transform(_) {
        return new ZodEffects({
          ...processCreateParams(this._def),
          schema: this,
          typeName: ZodFirstPartyTypeKind.ZodEffects,
          effect: {
            type: "transform",
            transform: _
          }
        });
      }
      default(_) {
        const $ = typeof _ == "function" ? _ : () => _;
        return new ZodDefault({
          ...processCreateParams(this._def),
          innerType: this,
          defaultValue: $,
          typeName: ZodFirstPartyTypeKind.ZodDefault
        });
      }
      brand() {
        return new ZodBranded({
          typeName: ZodFirstPartyTypeKind.ZodBranded,
          type: this,
          ...processCreateParams(this._def)
        });
      }
      catch(_) {
        const $ = typeof _ == "function" ? _ : () => _;
        return new ZodCatch({
          ...processCreateParams(this._def),
          innerType: this,
          catchValue: $,
          typeName: ZodFirstPartyTypeKind.ZodCatch
        });
      }
      describe(_) {
        const $ = this.constructor;
        return new $({
          ...this._def,
          description: _
        });
      }
      pipe(_) {
        return ZodPipeline.create(this, _);
      }
      readonly() {
        return ZodReadonly.create(this);
      }
      isOptional() {
        return this.safeParse(void 0).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    }
    types.ZodType = ZodType;
    types.Schema = ZodType;
    types.ZodSchema = ZodType;
    const cuidRegex = /^c[^\s-]{8,}$/i, cuid2Regex = /^[0-9a-z]+$/, ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i, uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, nanoidRegex = /^[a-z0-9_-]{21}$/i, jwtRegex = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/, durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/, emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, _emojiRegex = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let emojiRegex;
    const ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/, ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/, ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/, base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/, dateRegexSource = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", dateRegex = new RegExp(`^${dateRegexSource}$`);
    function timeRegexSource(d) {
      let _ = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
      return d.precision ? _ = `${_}\\.\\d{${d.precision}}` : d.precision == null && (_ = `${_}(\\.\\d+)?`), _;
    }
    function timeRegex(d) {
      return new RegExp(`^${timeRegexSource(d)}$`);
    }
    function datetimeRegex(d) {
      let _ = `${dateRegexSource}T${timeRegexSource(d)}`;
      const $ = [];
      return $.push(d.local ? "Z?" : "Z"), d.offset && $.push("([+-]\\d{2}:?\\d{2})"), _ = `${_}(${$.join("|")})`, new RegExp(`^${_}$`);
    }
    types.datetimeRegex = datetimeRegex;
    function isValidIP(d, _) {
      return !!((_ === "v4" || !_) && ipv4Regex.test(d) || (_ === "v6" || !_) && ipv6Regex.test(d));
    }
    function isValidJWT(d, _) {
      if (!jwtRegex.test(d)) return false;
      try {
        const [$] = d.split("."), j = $.replace(/-/g, "+").replace(/_/g, "/").padEnd($.length + (4 - $.length % 4) % 4, "="), rt = JSON.parse(atob(j));
        return !(typeof rt != "object" || rt === null || !rt.typ || !rt.alg || _ && rt.alg !== _);
      } catch {
        return false;
      }
    }
    function isValidCidr(d, _) {
      return !!((_ === "v4" || !_) && ipv4CidrRegex.test(d) || (_ === "v6" || !_) && ipv6CidrRegex.test(d));
    }
    class ZodString extends ZodType {
      _parse(_) {
        if (this._def.coerce && (_.data = String(_.data)), this._getType(_) !== util_1.ZodParsedType.string) {
          const et = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(et, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.string,
            received: et.parsedType
          }), parseUtil_1.INVALID;
        }
        const j = new parseUtil_1.ParseStatus();
        let rt;
        for (const et of this._def.checks) if (et.kind === "min") _.data.length < et.value && (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.too_small,
          minimum: et.value,
          type: "string",
          inclusive: true,
          exact: false,
          message: et.message
        }), j.dirty());
        else if (et.kind === "max") _.data.length > et.value && (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.too_big,
          maximum: et.value,
          type: "string",
          inclusive: true,
          exact: false,
          message: et.message
        }), j.dirty());
        else if (et.kind === "length") {
          const st = _.data.length > et.value, pt = _.data.length < et.value;
          (st || pt) && (rt = this._getOrReturnCtx(_, rt), st ? (0, parseUtil_1.addIssueToContext)(rt, {
            code: ZodError_1.ZodIssueCode.too_big,
            maximum: et.value,
            type: "string",
            inclusive: true,
            exact: true,
            message: et.message
          }) : pt && (0, parseUtil_1.addIssueToContext)(rt, {
            code: ZodError_1.ZodIssueCode.too_small,
            minimum: et.value,
            type: "string",
            inclusive: true,
            exact: true,
            message: et.message
          }), j.dirty());
        } else if (et.kind === "email") emailRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "email",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "emoji") emojiRegex || (emojiRegex = new RegExp(_emojiRegex, "u")), emojiRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "emoji",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "uuid") uuidRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "uuid",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "nanoid") nanoidRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "nanoid",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "cuid") cuidRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "cuid",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "cuid2") cuid2Regex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "cuid2",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "ulid") ulidRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "ulid",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty());
        else if (et.kind === "url") try {
          new URL(_.data);
        } catch {
          rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
            validation: "url",
            code: ZodError_1.ZodIssueCode.invalid_string,
            message: et.message
          }), j.dirty();
        }
        else et.kind === "regex" ? (et.regex.lastIndex = 0, et.regex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "regex",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty())) : et.kind === "trim" ? _.data = _.data.trim() : et.kind === "includes" ? _.data.includes(et.value, et.position) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: {
            includes: et.value,
            position: et.position
          },
          message: et.message
        }), j.dirty()) : et.kind === "toLowerCase" ? _.data = _.data.toLowerCase() : et.kind === "toUpperCase" ? _.data = _.data.toUpperCase() : et.kind === "startsWith" ? _.data.startsWith(et.value) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: {
            startsWith: et.value
          },
          message: et.message
        }), j.dirty()) : et.kind === "endsWith" ? _.data.endsWith(et.value) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: {
            endsWith: et.value
          },
          message: et.message
        }), j.dirty()) : et.kind === "datetime" ? datetimeRegex(et).test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: "datetime",
          message: et.message
        }), j.dirty()) : et.kind === "date" ? dateRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: "date",
          message: et.message
        }), j.dirty()) : et.kind === "time" ? timeRegex(et).test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.invalid_string,
          validation: "time",
          message: et.message
        }), j.dirty()) : et.kind === "duration" ? durationRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "duration",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : et.kind === "ip" ? isValidIP(_.data, et.version) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "ip",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : et.kind === "jwt" ? isValidJWT(_.data, et.alg) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "jwt",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : et.kind === "cidr" ? isValidCidr(_.data, et.version) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "cidr",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : et.kind === "base64" ? base64Regex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "base64",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : et.kind === "base64url" ? base64urlRegex.test(_.data) || (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          validation: "base64url",
          code: ZodError_1.ZodIssueCode.invalid_string,
          message: et.message
        }), j.dirty()) : util_1.util.assertNever(et);
        return {
          status: j.value,
          value: _.data
        };
      }
      _regex(_, $, j) {
        return this.refinement((rt) => _.test(rt), {
          validation: $,
          code: ZodError_1.ZodIssueCode.invalid_string,
          ...errorUtil_1.errorUtil.errToObj(j)
        });
      }
      _addCheck(_) {
        return new ZodString({
          ...this._def,
          checks: [
            ...this._def.checks,
            _
          ]
        });
      }
      email(_) {
        return this._addCheck({
          kind: "email",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      url(_) {
        return this._addCheck({
          kind: "url",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      emoji(_) {
        return this._addCheck({
          kind: "emoji",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      uuid(_) {
        return this._addCheck({
          kind: "uuid",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      nanoid(_) {
        return this._addCheck({
          kind: "nanoid",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      cuid(_) {
        return this._addCheck({
          kind: "cuid",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      cuid2(_) {
        return this._addCheck({
          kind: "cuid2",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      ulid(_) {
        return this._addCheck({
          kind: "ulid",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      base64(_) {
        return this._addCheck({
          kind: "base64",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      base64url(_) {
        return this._addCheck({
          kind: "base64url",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      jwt(_) {
        return this._addCheck({
          kind: "jwt",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      ip(_) {
        return this._addCheck({
          kind: "ip",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      cidr(_) {
        return this._addCheck({
          kind: "cidr",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      datetime(_) {
        var $, j;
        return typeof _ == "string" ? this._addCheck({
          kind: "datetime",
          precision: null,
          offset: false,
          local: false,
          message: _
        }) : this._addCheck({
          kind: "datetime",
          precision: typeof (_ == null ? void 0 : _.precision) > "u" ? null : _ == null ? void 0 : _.precision,
          offset: ($ = _ == null ? void 0 : _.offset) !== null && $ !== void 0 ? $ : false,
          local: (j = _ == null ? void 0 : _.local) !== null && j !== void 0 ? j : false,
          ...errorUtil_1.errorUtil.errToObj(_ == null ? void 0 : _.message)
        });
      }
      date(_) {
        return this._addCheck({
          kind: "date",
          message: _
        });
      }
      time(_) {
        return typeof _ == "string" ? this._addCheck({
          kind: "time",
          precision: null,
          message: _
        }) : this._addCheck({
          kind: "time",
          precision: typeof (_ == null ? void 0 : _.precision) > "u" ? null : _ == null ? void 0 : _.precision,
          ...errorUtil_1.errorUtil.errToObj(_ == null ? void 0 : _.message)
        });
      }
      duration(_) {
        return this._addCheck({
          kind: "duration",
          ...errorUtil_1.errorUtil.errToObj(_)
        });
      }
      regex(_, $) {
        return this._addCheck({
          kind: "regex",
          regex: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      includes(_, $) {
        return this._addCheck({
          kind: "includes",
          value: _,
          position: $ == null ? void 0 : $.position,
          ...errorUtil_1.errorUtil.errToObj($ == null ? void 0 : $.message)
        });
      }
      startsWith(_, $) {
        return this._addCheck({
          kind: "startsWith",
          value: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      endsWith(_, $) {
        return this._addCheck({
          kind: "endsWith",
          value: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      min(_, $) {
        return this._addCheck({
          kind: "min",
          value: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      max(_, $) {
        return this._addCheck({
          kind: "max",
          value: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      length(_, $) {
        return this._addCheck({
          kind: "length",
          value: _,
          ...errorUtil_1.errorUtil.errToObj($)
        });
      }
      nonempty(_) {
        return this.min(1, errorUtil_1.errorUtil.errToObj(_));
      }
      trim() {
        return new ZodString({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind: "trim"
            }
          ]
        });
      }
      toLowerCase() {
        return new ZodString({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind: "toLowerCase"
            }
          ]
        });
      }
      toUpperCase() {
        return new ZodString({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind: "toUpperCase"
            }
          ]
        });
      }
      get isDatetime() {
        return !!this._def.checks.find((_) => _.kind === "datetime");
      }
      get isDate() {
        return !!this._def.checks.find((_) => _.kind === "date");
      }
      get isTime() {
        return !!this._def.checks.find((_) => _.kind === "time");
      }
      get isDuration() {
        return !!this._def.checks.find((_) => _.kind === "duration");
      }
      get isEmail() {
        return !!this._def.checks.find((_) => _.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find((_) => _.kind === "url");
      }
      get isEmoji() {
        return !!this._def.checks.find((_) => _.kind === "emoji");
      }
      get isUUID() {
        return !!this._def.checks.find((_) => _.kind === "uuid");
      }
      get isNANOID() {
        return !!this._def.checks.find((_) => _.kind === "nanoid");
      }
      get isCUID() {
        return !!this._def.checks.find((_) => _.kind === "cuid");
      }
      get isCUID2() {
        return !!this._def.checks.find((_) => _.kind === "cuid2");
      }
      get isULID() {
        return !!this._def.checks.find((_) => _.kind === "ulid");
      }
      get isIP() {
        return !!this._def.checks.find((_) => _.kind === "ip");
      }
      get isCIDR() {
        return !!this._def.checks.find((_) => _.kind === "cidr");
      }
      get isBase64() {
        return !!this._def.checks.find((_) => _.kind === "base64");
      }
      get isBase64url() {
        return !!this._def.checks.find((_) => _.kind === "base64url");
      }
      get minLength() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "min" && (_ === null || $.value > _) && (_ = $.value);
        return _;
      }
      get maxLength() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "max" && (_ === null || $.value < _) && (_ = $.value);
        return _;
      }
    }
    types.ZodString = ZodString;
    ZodString.create = (d) => {
      var _;
      return new ZodString({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodString,
        coerce: (_ = d == null ? void 0 : d.coerce) !== null && _ !== void 0 ? _ : false,
        ...processCreateParams(d)
      });
    };
    function floatSafeRemainder(d, _) {
      const $ = (d.toString().split(".")[1] || "").length, j = (_.toString().split(".")[1] || "").length, rt = $ > j ? $ : j, et = parseInt(d.toFixed(rt).replace(".", "")), st = parseInt(_.toFixed(rt).replace(".", ""));
      return et % st / Math.pow(10, rt);
    }
    class ZodNumber extends ZodType {
      constructor() {
        super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
      }
      _parse(_) {
        if (this._def.coerce && (_.data = Number(_.data)), this._getType(_) !== util_1.ZodParsedType.number) {
          const et = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(et, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.number,
            received: et.parsedType
          }), parseUtil_1.INVALID;
        }
        let j;
        const rt = new parseUtil_1.ParseStatus();
        for (const et of this._def.checks) et.kind === "int" ? util_1.util.isInteger(_.data) || (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: "integer",
          received: "float",
          message: et.message
        }), rt.dirty()) : et.kind === "min" ? (et.inclusive ? _.data < et.value : _.data <= et.value) && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_small,
          minimum: et.value,
          type: "number",
          inclusive: et.inclusive,
          exact: false,
          message: et.message
        }), rt.dirty()) : et.kind === "max" ? (et.inclusive ? _.data > et.value : _.data >= et.value) && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_big,
          maximum: et.value,
          type: "number",
          inclusive: et.inclusive,
          exact: false,
          message: et.message
        }), rt.dirty()) : et.kind === "multipleOf" ? floatSafeRemainder(_.data, et.value) !== 0 && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.not_multiple_of,
          multipleOf: et.value,
          message: et.message
        }), rt.dirty()) : et.kind === "finite" ? Number.isFinite(_.data) || (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.not_finite,
          message: et.message
        }), rt.dirty()) : util_1.util.assertNever(et);
        return {
          status: rt.value,
          value: _.data
        };
      }
      gte(_, $) {
        return this.setLimit("min", _, true, errorUtil_1.errorUtil.toString($));
      }
      gt(_, $) {
        return this.setLimit("min", _, false, errorUtil_1.errorUtil.toString($));
      }
      lte(_, $) {
        return this.setLimit("max", _, true, errorUtil_1.errorUtil.toString($));
      }
      lt(_, $) {
        return this.setLimit("max", _, false, errorUtil_1.errorUtil.toString($));
      }
      setLimit(_, $, j, rt) {
        return new ZodNumber({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind: _,
              value: $,
              inclusive: j,
              message: errorUtil_1.errorUtil.toString(rt)
            }
          ]
        });
      }
      _addCheck(_) {
        return new ZodNumber({
          ...this._def,
          checks: [
            ...this._def.checks,
            _
          ]
        });
      }
      int(_) {
        return this._addCheck({
          kind: "int",
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      positive(_) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: false,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      negative(_) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: false,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      nonpositive(_) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: true,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      nonnegative(_) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: true,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      multipleOf(_, $) {
        return this._addCheck({
          kind: "multipleOf",
          value: _,
          message: errorUtil_1.errorUtil.toString($)
        });
      }
      finite(_) {
        return this._addCheck({
          kind: "finite",
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      safe(_) {
        return this._addCheck({
          kind: "min",
          inclusive: true,
          value: Number.MIN_SAFE_INTEGER,
          message: errorUtil_1.errorUtil.toString(_)
        })._addCheck({
          kind: "max",
          inclusive: true,
          value: Number.MAX_SAFE_INTEGER,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      get minValue() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "min" && (_ === null || $.value > _) && (_ = $.value);
        return _;
      }
      get maxValue() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "max" && (_ === null || $.value < _) && (_ = $.value);
        return _;
      }
      get isInt() {
        return !!this._def.checks.find((_) => _.kind === "int" || _.kind === "multipleOf" && util_1.util.isInteger(_.value));
      }
      get isFinite() {
        let _ = null, $ = null;
        for (const j of this._def.checks) {
          if (j.kind === "finite" || j.kind === "int" || j.kind === "multipleOf") return true;
          j.kind === "min" ? ($ === null || j.value > $) && ($ = j.value) : j.kind === "max" && (_ === null || j.value < _) && (_ = j.value);
        }
        return Number.isFinite($) && Number.isFinite(_);
      }
    }
    types.ZodNumber = ZodNumber;
    ZodNumber.create = (d) => new ZodNumber({
      checks: [],
      typeName: ZodFirstPartyTypeKind.ZodNumber,
      coerce: (d == null ? void 0 : d.coerce) || false,
      ...processCreateParams(d)
    });
    class ZodBigInt extends ZodType {
      constructor() {
        super(...arguments), this.min = this.gte, this.max = this.lte;
      }
      _parse(_) {
        if (this._def.coerce) try {
          _.data = BigInt(_.data);
        } catch {
          return this._getInvalidInput(_);
        }
        if (this._getType(_) !== util_1.ZodParsedType.bigint) return this._getInvalidInput(_);
        let j;
        const rt = new parseUtil_1.ParseStatus();
        for (const et of this._def.checks) et.kind === "min" ? (et.inclusive ? _.data < et.value : _.data <= et.value) && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_small,
          type: "bigint",
          minimum: et.value,
          inclusive: et.inclusive,
          message: et.message
        }), rt.dirty()) : et.kind === "max" ? (et.inclusive ? _.data > et.value : _.data >= et.value) && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_big,
          type: "bigint",
          maximum: et.value,
          inclusive: et.inclusive,
          message: et.message
        }), rt.dirty()) : et.kind === "multipleOf" ? _.data % et.value !== BigInt(0) && (j = this._getOrReturnCtx(_, j), (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.not_multiple_of,
          multipleOf: et.value,
          message: et.message
        }), rt.dirty()) : util_1.util.assertNever(et);
        return {
          status: rt.value,
          value: _.data
        };
      }
      _getInvalidInput(_) {
        const $ = this._getOrReturnCtx(_);
        return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.bigint,
          received: $.parsedType
        }), parseUtil_1.INVALID;
      }
      gte(_, $) {
        return this.setLimit("min", _, true, errorUtil_1.errorUtil.toString($));
      }
      gt(_, $) {
        return this.setLimit("min", _, false, errorUtil_1.errorUtil.toString($));
      }
      lte(_, $) {
        return this.setLimit("max", _, true, errorUtil_1.errorUtil.toString($));
      }
      lt(_, $) {
        return this.setLimit("max", _, false, errorUtil_1.errorUtil.toString($));
      }
      setLimit(_, $, j, rt) {
        return new ZodBigInt({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind: _,
              value: $,
              inclusive: j,
              message: errorUtil_1.errorUtil.toString(rt)
            }
          ]
        });
      }
      _addCheck(_) {
        return new ZodBigInt({
          ...this._def,
          checks: [
            ...this._def.checks,
            _
          ]
        });
      }
      positive(_) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: false,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      negative(_) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: false,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      nonpositive(_) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: true,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      nonnegative(_) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: true,
          message: errorUtil_1.errorUtil.toString(_)
        });
      }
      multipleOf(_, $) {
        return this._addCheck({
          kind: "multipleOf",
          value: _,
          message: errorUtil_1.errorUtil.toString($)
        });
      }
      get minValue() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "min" && (_ === null || $.value > _) && (_ = $.value);
        return _;
      }
      get maxValue() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "max" && (_ === null || $.value < _) && (_ = $.value);
        return _;
      }
    }
    types.ZodBigInt = ZodBigInt;
    ZodBigInt.create = (d) => {
      var _;
      return new ZodBigInt({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodBigInt,
        coerce: (_ = d == null ? void 0 : d.coerce) !== null && _ !== void 0 ? _ : false,
        ...processCreateParams(d)
      });
    };
    class ZodBoolean extends ZodType {
      _parse(_) {
        if (this._def.coerce && (_.data = !!_.data), this._getType(_) !== util_1.ZodParsedType.boolean) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.boolean,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodBoolean = ZodBoolean;
    ZodBoolean.create = (d) => new ZodBoolean({
      typeName: ZodFirstPartyTypeKind.ZodBoolean,
      coerce: (d == null ? void 0 : d.coerce) || false,
      ...processCreateParams(d)
    });
    class ZodDate extends ZodType {
      _parse(_) {
        if (this._def.coerce && (_.data = new Date(_.data)), this._getType(_) !== util_1.ZodParsedType.date) {
          const et = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(et, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.date,
            received: et.parsedType
          }), parseUtil_1.INVALID;
        }
        if (isNaN(_.data.getTime())) {
          const et = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(et, {
            code: ZodError_1.ZodIssueCode.invalid_date
          }), parseUtil_1.INVALID;
        }
        const j = new parseUtil_1.ParseStatus();
        let rt;
        for (const et of this._def.checks) et.kind === "min" ? _.data.getTime() < et.value && (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.too_small,
          message: et.message,
          inclusive: true,
          exact: false,
          minimum: et.value,
          type: "date"
        }), j.dirty()) : et.kind === "max" ? _.data.getTime() > et.value && (rt = this._getOrReturnCtx(_, rt), (0, parseUtil_1.addIssueToContext)(rt, {
          code: ZodError_1.ZodIssueCode.too_big,
          message: et.message,
          inclusive: true,
          exact: false,
          maximum: et.value,
          type: "date"
        }), j.dirty()) : util_1.util.assertNever(et);
        return {
          status: j.value,
          value: new Date(_.data.getTime())
        };
      }
      _addCheck(_) {
        return new ZodDate({
          ...this._def,
          checks: [
            ...this._def.checks,
            _
          ]
        });
      }
      min(_, $) {
        return this._addCheck({
          kind: "min",
          value: _.getTime(),
          message: errorUtil_1.errorUtil.toString($)
        });
      }
      max(_, $) {
        return this._addCheck({
          kind: "max",
          value: _.getTime(),
          message: errorUtil_1.errorUtil.toString($)
        });
      }
      get minDate() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "min" && (_ === null || $.value > _) && (_ = $.value);
        return _ != null ? new Date(_) : null;
      }
      get maxDate() {
        let _ = null;
        for (const $ of this._def.checks) $.kind === "max" && (_ === null || $.value < _) && (_ = $.value);
        return _ != null ? new Date(_) : null;
      }
    }
    types.ZodDate = ZodDate;
    ZodDate.create = (d) => new ZodDate({
      checks: [],
      coerce: (d == null ? void 0 : d.coerce) || false,
      typeName: ZodFirstPartyTypeKind.ZodDate,
      ...processCreateParams(d)
    });
    class ZodSymbol extends ZodType {
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.symbol) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.symbol,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodSymbol = ZodSymbol;
    ZodSymbol.create = (d) => new ZodSymbol({
      typeName: ZodFirstPartyTypeKind.ZodSymbol,
      ...processCreateParams(d)
    });
    class ZodUndefined extends ZodType {
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.undefined) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.undefined,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodUndefined = ZodUndefined;
    ZodUndefined.create = (d) => new ZodUndefined({
      typeName: ZodFirstPartyTypeKind.ZodUndefined,
      ...processCreateParams(d)
    });
    class ZodNull extends ZodType {
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.null) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.null,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodNull = ZodNull;
    ZodNull.create = (d) => new ZodNull({
      typeName: ZodFirstPartyTypeKind.ZodNull,
      ...processCreateParams(d)
    });
    class ZodAny extends ZodType {
      constructor() {
        super(...arguments), this._any = true;
      }
      _parse(_) {
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodAny = ZodAny;
    ZodAny.create = (d) => new ZodAny({
      typeName: ZodFirstPartyTypeKind.ZodAny,
      ...processCreateParams(d)
    });
    class ZodUnknown extends ZodType {
      constructor() {
        super(...arguments), this._unknown = true;
      }
      _parse(_) {
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodUnknown = ZodUnknown;
    ZodUnknown.create = (d) => new ZodUnknown({
      typeName: ZodFirstPartyTypeKind.ZodUnknown,
      ...processCreateParams(d)
    });
    class ZodNever extends ZodType {
      _parse(_) {
        const $ = this._getOrReturnCtx(_);
        return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.never,
          received: $.parsedType
        }), parseUtil_1.INVALID;
      }
    }
    types.ZodNever = ZodNever;
    ZodNever.create = (d) => new ZodNever({
      typeName: ZodFirstPartyTypeKind.ZodNever,
      ...processCreateParams(d)
    });
    class ZodVoid extends ZodType {
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.undefined) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.void,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
    }
    types.ZodVoid = ZodVoid;
    ZodVoid.create = (d) => new ZodVoid({
      typeName: ZodFirstPartyTypeKind.ZodVoid,
      ...processCreateParams(d)
    });
    class ZodArray extends ZodType {
      _parse(_) {
        const { ctx: $, status: j } = this._processInputParams(_), rt = this._def;
        if ($.parsedType !== util_1.ZodParsedType.array) return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.array,
          received: $.parsedType
        }), parseUtil_1.INVALID;
        if (rt.exactLength !== null) {
          const st = $.data.length > rt.exactLength.value, pt = $.data.length < rt.exactLength.value;
          (st || pt) && ((0, parseUtil_1.addIssueToContext)($, {
            code: st ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,
            minimum: pt ? rt.exactLength.value : void 0,
            maximum: st ? rt.exactLength.value : void 0,
            type: "array",
            inclusive: true,
            exact: true,
            message: rt.exactLength.message
          }), j.dirty());
        }
        if (rt.minLength !== null && $.data.length < rt.minLength.value && ((0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.too_small,
          minimum: rt.minLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: rt.minLength.message
        }), j.dirty()), rt.maxLength !== null && $.data.length > rt.maxLength.value && ((0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.too_big,
          maximum: rt.maxLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: rt.maxLength.message
        }), j.dirty()), $.common.async) return Promise.all([
          ...$.data
        ].map((st, pt) => rt.type._parseAsync(new ParseInputLazyPath($, st, $.path, pt)))).then((st) => parseUtil_1.ParseStatus.mergeArray(j, st));
        const et = [
          ...$.data
        ].map((st, pt) => rt.type._parseSync(new ParseInputLazyPath($, st, $.path, pt)));
        return parseUtil_1.ParseStatus.mergeArray(j, et);
      }
      get element() {
        return this._def.type;
      }
      min(_, $) {
        return new ZodArray({
          ...this._def,
          minLength: {
            value: _,
            message: errorUtil_1.errorUtil.toString($)
          }
        });
      }
      max(_, $) {
        return new ZodArray({
          ...this._def,
          maxLength: {
            value: _,
            message: errorUtil_1.errorUtil.toString($)
          }
        });
      }
      length(_, $) {
        return new ZodArray({
          ...this._def,
          exactLength: {
            value: _,
            message: errorUtil_1.errorUtil.toString($)
          }
        });
      }
      nonempty(_) {
        return this.min(1, _);
      }
    }
    types.ZodArray = ZodArray;
    ZodArray.create = (d, _) => new ZodArray({
      type: d,
      minLength: null,
      maxLength: null,
      exactLength: null,
      typeName: ZodFirstPartyTypeKind.ZodArray,
      ...processCreateParams(_)
    });
    function deepPartialify(d) {
      if (d instanceof ZodObject) {
        const _ = {};
        for (const $ in d.shape) {
          const j = d.shape[$];
          _[$] = ZodOptional.create(deepPartialify(j));
        }
        return new ZodObject({
          ...d._def,
          shape: () => _
        });
      } else return d instanceof ZodArray ? new ZodArray({
        ...d._def,
        type: deepPartialify(d.element)
      }) : d instanceof ZodOptional ? ZodOptional.create(deepPartialify(d.unwrap())) : d instanceof ZodNullable ? ZodNullable.create(deepPartialify(d.unwrap())) : d instanceof ZodTuple ? ZodTuple.create(d.items.map((_) => deepPartialify(_))) : d;
    }
    class ZodObject extends ZodType {
      constructor() {
        super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
      }
      _getCached() {
        if (this._cached !== null) return this._cached;
        const _ = this._def.shape(), $ = util_1.util.objectKeys(_);
        return this._cached = {
          shape: _,
          keys: $
        };
      }
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.object) {
          const Bt = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(Bt, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.object,
            received: Bt.parsedType
          }), parseUtil_1.INVALID;
        }
        const { status: j, ctx: rt } = this._processInputParams(_), { shape: et, keys: st } = this._getCached(), pt = [];
        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) for (const Bt in rt.data) st.includes(Bt) || pt.push(Bt);
        const Et = [];
        for (const Bt of st) {
          const St = et[Bt], $t = rt.data[Bt];
          Et.push({
            key: {
              status: "valid",
              value: Bt
            },
            value: St._parse(new ParseInputLazyPath(rt, $t, rt.path, Bt)),
            alwaysSet: Bt in rt.data
          });
        }
        if (this._def.catchall instanceof ZodNever) {
          const Bt = this._def.unknownKeys;
          if (Bt === "passthrough") for (const St of pt) Et.push({
            key: {
              status: "valid",
              value: St
            },
            value: {
              status: "valid",
              value: rt.data[St]
            }
          });
          else if (Bt === "strict") pt.length > 0 && ((0, parseUtil_1.addIssueToContext)(rt, {
            code: ZodError_1.ZodIssueCode.unrecognized_keys,
            keys: pt
          }), j.dirty());
          else if (Bt !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.");
        } else {
          const Bt = this._def.catchall;
          for (const St of pt) {
            const $t = rt.data[St];
            Et.push({
              key: {
                status: "valid",
                value: St
              },
              value: Bt._parse(new ParseInputLazyPath(rt, $t, rt.path, St)),
              alwaysSet: St in rt.data
            });
          }
        }
        return rt.common.async ? Promise.resolve().then(async () => {
          const Bt = [];
          for (const St of Et) {
            const $t = await St.key, kt = await St.value;
            Bt.push({
              key: $t,
              value: kt,
              alwaysSet: St.alwaysSet
            });
          }
          return Bt;
        }).then((Bt) => parseUtil_1.ParseStatus.mergeObjectSync(j, Bt)) : parseUtil_1.ParseStatus.mergeObjectSync(j, Et);
      }
      get shape() {
        return this._def.shape();
      }
      strict(_) {
        return errorUtil_1.errorUtil.errToObj, new ZodObject({
          ...this._def,
          unknownKeys: "strict",
          ..._ !== void 0 ? {
            errorMap: ($, j) => {
              var rt, et, st, pt;
              const Et = (st = (et = (rt = this._def).errorMap) === null || et === void 0 ? void 0 : et.call(rt, $, j).message) !== null && st !== void 0 ? st : j.defaultError;
              return $.code === "unrecognized_keys" ? {
                message: (pt = errorUtil_1.errorUtil.errToObj(_).message) !== null && pt !== void 0 ? pt : Et
              } : {
                message: Et
              };
            }
          } : {}
        });
      }
      strip() {
        return new ZodObject({
          ...this._def,
          unknownKeys: "strip"
        });
      }
      passthrough() {
        return new ZodObject({
          ...this._def,
          unknownKeys: "passthrough"
        });
      }
      extend(_) {
        return new ZodObject({
          ...this._def,
          shape: () => ({
            ...this._def.shape(),
            ..._
          })
        });
      }
      merge(_) {
        return new ZodObject({
          unknownKeys: _._def.unknownKeys,
          catchall: _._def.catchall,
          shape: () => ({
            ...this._def.shape(),
            ..._._def.shape()
          }),
          typeName: ZodFirstPartyTypeKind.ZodObject
        });
      }
      setKey(_, $) {
        return this.augment({
          [_]: $
        });
      }
      catchall(_) {
        return new ZodObject({
          ...this._def,
          catchall: _
        });
      }
      pick(_) {
        const $ = {};
        return util_1.util.objectKeys(_).forEach((j) => {
          _[j] && this.shape[j] && ($[j] = this.shape[j]);
        }), new ZodObject({
          ...this._def,
          shape: () => $
        });
      }
      omit(_) {
        const $ = {};
        return util_1.util.objectKeys(this.shape).forEach((j) => {
          _[j] || ($[j] = this.shape[j]);
        }), new ZodObject({
          ...this._def,
          shape: () => $
        });
      }
      deepPartial() {
        return deepPartialify(this);
      }
      partial(_) {
        const $ = {};
        return util_1.util.objectKeys(this.shape).forEach((j) => {
          const rt = this.shape[j];
          _ && !_[j] ? $[j] = rt : $[j] = rt.optional();
        }), new ZodObject({
          ...this._def,
          shape: () => $
        });
      }
      required(_) {
        const $ = {};
        return util_1.util.objectKeys(this.shape).forEach((j) => {
          if (_ && !_[j]) $[j] = this.shape[j];
          else {
            let et = this.shape[j];
            for (; et instanceof ZodOptional; ) et = et._def.innerType;
            $[j] = et;
          }
        }), new ZodObject({
          ...this._def,
          shape: () => $
        });
      }
      keyof() {
        return createZodEnum(util_1.util.objectKeys(this.shape));
      }
    }
    types.ZodObject = ZodObject;
    ZodObject.create = (d, _) => new ZodObject({
      shape: () => d,
      unknownKeys: "strip",
      catchall: ZodNever.create(),
      typeName: ZodFirstPartyTypeKind.ZodObject,
      ...processCreateParams(_)
    });
    ZodObject.strictCreate = (d, _) => new ZodObject({
      shape: () => d,
      unknownKeys: "strict",
      catchall: ZodNever.create(),
      typeName: ZodFirstPartyTypeKind.ZodObject,
      ...processCreateParams(_)
    });
    ZodObject.lazycreate = (d, _) => new ZodObject({
      shape: d,
      unknownKeys: "strip",
      catchall: ZodNever.create(),
      typeName: ZodFirstPartyTypeKind.ZodObject,
      ...processCreateParams(_)
    });
    class ZodUnion extends ZodType {
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_), j = this._def.options;
        function rt(et) {
          for (const pt of et) if (pt.result.status === "valid") return pt.result;
          for (const pt of et) if (pt.result.status === "dirty") return $.common.issues.push(...pt.ctx.common.issues), pt.result;
          const st = et.map((pt) => new ZodError_1.ZodError(pt.ctx.common.issues));
          return (0, parseUtil_1.addIssueToContext)($, {
            code: ZodError_1.ZodIssueCode.invalid_union,
            unionErrors: st
          }), parseUtil_1.INVALID;
        }
        if ($.common.async) return Promise.all(j.map(async (et) => {
          const st = {
            ...$,
            common: {
              ...$.common,
              issues: []
            },
            parent: null
          };
          return {
            result: await et._parseAsync({
              data: $.data,
              path: $.path,
              parent: st
            }),
            ctx: st
          };
        })).then(rt);
        {
          let et;
          const st = [];
          for (const Et of j) {
            const Bt = {
              ...$,
              common: {
                ...$.common,
                issues: []
              },
              parent: null
            }, St = Et._parseSync({
              data: $.data,
              path: $.path,
              parent: Bt
            });
            if (St.status === "valid") return St;
            St.status === "dirty" && !et && (et = {
              result: St,
              ctx: Bt
            }), Bt.common.issues.length && st.push(Bt.common.issues);
          }
          if (et) return $.common.issues.push(...et.ctx.common.issues), et.result;
          const pt = st.map((Et) => new ZodError_1.ZodError(Et));
          return (0, parseUtil_1.addIssueToContext)($, {
            code: ZodError_1.ZodIssueCode.invalid_union,
            unionErrors: pt
          }), parseUtil_1.INVALID;
        }
      }
      get options() {
        return this._def.options;
      }
    }
    types.ZodUnion = ZodUnion;
    ZodUnion.create = (d, _) => new ZodUnion({
      options: d,
      typeName: ZodFirstPartyTypeKind.ZodUnion,
      ...processCreateParams(_)
    });
    const getDiscriminator = (d) => d instanceof ZodLazy ? getDiscriminator(d.schema) : d instanceof ZodEffects ? getDiscriminator(d.innerType()) : d instanceof ZodLiteral ? [
      d.value
    ] : d instanceof ZodEnum ? d.options : d instanceof ZodNativeEnum ? util_1.util.objectValues(d.enum) : d instanceof ZodDefault ? getDiscriminator(d._def.innerType) : d instanceof ZodUndefined ? [
      void 0
    ] : d instanceof ZodNull ? [
      null
    ] : d instanceof ZodOptional ? [
      void 0,
      ...getDiscriminator(d.unwrap())
    ] : d instanceof ZodNullable ? [
      null,
      ...getDiscriminator(d.unwrap())
    ] : d instanceof ZodBranded || d instanceof ZodReadonly ? getDiscriminator(d.unwrap()) : d instanceof ZodCatch ? getDiscriminator(d._def.innerType) : [];
    class ZodDiscriminatedUnion extends ZodType {
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_);
        if ($.parsedType !== util_1.ZodParsedType.object) return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.object,
          received: $.parsedType
        }), parseUtil_1.INVALID;
        const j = this.discriminator, rt = $.data[j], et = this.optionsMap.get(rt);
        return et ? $.common.async ? et._parseAsync({
          data: $.data,
          path: $.path,
          parent: $
        }) : et._parseSync({
          data: $.data,
          path: $.path,
          parent: $
        }) : ((0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_union_discriminator,
          options: Array.from(this.optionsMap.keys()),
          path: [
            j
          ]
        }), parseUtil_1.INVALID);
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get options() {
        return this._def.options;
      }
      get optionsMap() {
        return this._def.optionsMap;
      }
      static create(_, $, j) {
        const rt = /* @__PURE__ */ new Map();
        for (const et of $) {
          const st = getDiscriminator(et.shape[_]);
          if (!st.length) throw new Error(`A discriminator value for key \`${_}\` could not be extracted from all schema options`);
          for (const pt of st) {
            if (rt.has(pt)) throw new Error(`Discriminator property ${String(_)} has duplicate value ${String(pt)}`);
            rt.set(pt, et);
          }
        }
        return new ZodDiscriminatedUnion({
          typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
          discriminator: _,
          options: $,
          optionsMap: rt,
          ...processCreateParams(j)
        });
      }
    }
    types.ZodDiscriminatedUnion = ZodDiscriminatedUnion;
    function mergeValues(d, _) {
      const $ = (0, util_1.getParsedType)(d), j = (0, util_1.getParsedType)(_);
      if (d === _) return {
        valid: true,
        data: d
      };
      if ($ === util_1.ZodParsedType.object && j === util_1.ZodParsedType.object) {
        const rt = util_1.util.objectKeys(_), et = util_1.util.objectKeys(d).filter((pt) => rt.indexOf(pt) !== -1), st = {
          ...d,
          ..._
        };
        for (const pt of et) {
          const Et = mergeValues(d[pt], _[pt]);
          if (!Et.valid) return {
            valid: false
          };
          st[pt] = Et.data;
        }
        return {
          valid: true,
          data: st
        };
      } else if ($ === util_1.ZodParsedType.array && j === util_1.ZodParsedType.array) {
        if (d.length !== _.length) return {
          valid: false
        };
        const rt = [];
        for (let et = 0; et < d.length; et++) {
          const st = d[et], pt = _[et], Et = mergeValues(st, pt);
          if (!Et.valid) return {
            valid: false
          };
          rt.push(Et.data);
        }
        return {
          valid: true,
          data: rt
        };
      } else return $ === util_1.ZodParsedType.date && j === util_1.ZodParsedType.date && +d == +_ ? {
        valid: true,
        data: d
      } : {
        valid: false
      };
    }
    class ZodIntersection extends ZodType {
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_), rt = (et, st) => {
          if ((0, parseUtil_1.isAborted)(et) || (0, parseUtil_1.isAborted)(st)) return parseUtil_1.INVALID;
          const pt = mergeValues(et.value, st.value);
          return pt.valid ? (((0, parseUtil_1.isDirty)(et) || (0, parseUtil_1.isDirty)(st)) && $.dirty(), {
            status: $.value,
            value: pt.data
          }) : ((0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_intersection_types
          }), parseUtil_1.INVALID);
        };
        return j.common.async ? Promise.all([
          this._def.left._parseAsync({
            data: j.data,
            path: j.path,
            parent: j
          }),
          this._def.right._parseAsync({
            data: j.data,
            path: j.path,
            parent: j
          })
        ]).then(([et, st]) => rt(et, st)) : rt(this._def.left._parseSync({
          data: j.data,
          path: j.path,
          parent: j
        }), this._def.right._parseSync({
          data: j.data,
          path: j.path,
          parent: j
        }));
      }
    }
    types.ZodIntersection = ZodIntersection;
    ZodIntersection.create = (d, _, $) => new ZodIntersection({
      left: d,
      right: _,
      typeName: ZodFirstPartyTypeKind.ZodIntersection,
      ...processCreateParams($)
    });
    class ZodTuple extends ZodType {
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_);
        if (j.parsedType !== util_1.ZodParsedType.array) return (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.array,
          received: j.parsedType
        }), parseUtil_1.INVALID;
        if (j.data.length < this._def.items.length) return (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_small,
          minimum: this._def.items.length,
          inclusive: true,
          exact: false,
          type: "array"
        }), parseUtil_1.INVALID;
        !this._def.rest && j.data.length > this._def.items.length && ((0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_big,
          maximum: this._def.items.length,
          inclusive: true,
          exact: false,
          type: "array"
        }), $.dirty());
        const et = [
          ...j.data
        ].map((st, pt) => {
          const Et = this._def.items[pt] || this._def.rest;
          return Et ? Et._parse(new ParseInputLazyPath(j, st, j.path, pt)) : null;
        }).filter((st) => !!st);
        return j.common.async ? Promise.all(et).then((st) => parseUtil_1.ParseStatus.mergeArray($, st)) : parseUtil_1.ParseStatus.mergeArray($, et);
      }
      get items() {
        return this._def.items;
      }
      rest(_) {
        return new ZodTuple({
          ...this._def,
          rest: _
        });
      }
    }
    types.ZodTuple = ZodTuple;
    ZodTuple.create = (d, _) => {
      if (!Array.isArray(d)) throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
      return new ZodTuple({
        items: d,
        typeName: ZodFirstPartyTypeKind.ZodTuple,
        rest: null,
        ...processCreateParams(_)
      });
    };
    class ZodRecord extends ZodType {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_);
        if (j.parsedType !== util_1.ZodParsedType.object) return (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.object,
          received: j.parsedType
        }), parseUtil_1.INVALID;
        const rt = [], et = this._def.keyType, st = this._def.valueType;
        for (const pt in j.data) rt.push({
          key: et._parse(new ParseInputLazyPath(j, pt, j.path, pt)),
          value: st._parse(new ParseInputLazyPath(j, j.data[pt], j.path, pt)),
          alwaysSet: pt in j.data
        });
        return j.common.async ? parseUtil_1.ParseStatus.mergeObjectAsync($, rt) : parseUtil_1.ParseStatus.mergeObjectSync($, rt);
      }
      get element() {
        return this._def.valueType;
      }
      static create(_, $, j) {
        return $ instanceof ZodType ? new ZodRecord({
          keyType: _,
          valueType: $,
          typeName: ZodFirstPartyTypeKind.ZodRecord,
          ...processCreateParams(j)
        }) : new ZodRecord({
          keyType: ZodString.create(),
          valueType: _,
          typeName: ZodFirstPartyTypeKind.ZodRecord,
          ...processCreateParams($)
        });
      }
    }
    types.ZodRecord = ZodRecord;
    class ZodMap extends ZodType {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_);
        if (j.parsedType !== util_1.ZodParsedType.map) return (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.map,
          received: j.parsedType
        }), parseUtil_1.INVALID;
        const rt = this._def.keyType, et = this._def.valueType, st = [
          ...j.data.entries()
        ].map(([pt, Et], Bt) => ({
          key: rt._parse(new ParseInputLazyPath(j, pt, j.path, [
            Bt,
            "key"
          ])),
          value: et._parse(new ParseInputLazyPath(j, Et, j.path, [
            Bt,
            "value"
          ]))
        }));
        if (j.common.async) {
          const pt = /* @__PURE__ */ new Map();
          return Promise.resolve().then(async () => {
            for (const Et of st) {
              const Bt = await Et.key, St = await Et.value;
              if (Bt.status === "aborted" || St.status === "aborted") return parseUtil_1.INVALID;
              (Bt.status === "dirty" || St.status === "dirty") && $.dirty(), pt.set(Bt.value, St.value);
            }
            return {
              status: $.value,
              value: pt
            };
          });
        } else {
          const pt = /* @__PURE__ */ new Map();
          for (const Et of st) {
            const Bt = Et.key, St = Et.value;
            if (Bt.status === "aborted" || St.status === "aborted") return parseUtil_1.INVALID;
            (Bt.status === "dirty" || St.status === "dirty") && $.dirty(), pt.set(Bt.value, St.value);
          }
          return {
            status: $.value,
            value: pt
          };
        }
      }
    }
    types.ZodMap = ZodMap;
    ZodMap.create = (d, _, $) => new ZodMap({
      valueType: _,
      keyType: d,
      typeName: ZodFirstPartyTypeKind.ZodMap,
      ...processCreateParams($)
    });
    class ZodSet extends ZodType {
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_);
        if (j.parsedType !== util_1.ZodParsedType.set) return (0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.set,
          received: j.parsedType
        }), parseUtil_1.INVALID;
        const rt = this._def;
        rt.minSize !== null && j.data.size < rt.minSize.value && ((0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_small,
          minimum: rt.minSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: rt.minSize.message
        }), $.dirty()), rt.maxSize !== null && j.data.size > rt.maxSize.value && ((0, parseUtil_1.addIssueToContext)(j, {
          code: ZodError_1.ZodIssueCode.too_big,
          maximum: rt.maxSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: rt.maxSize.message
        }), $.dirty());
        const et = this._def.valueType;
        function st(Et) {
          const Bt = /* @__PURE__ */ new Set();
          for (const St of Et) {
            if (St.status === "aborted") return parseUtil_1.INVALID;
            St.status === "dirty" && $.dirty(), Bt.add(St.value);
          }
          return {
            status: $.value,
            value: Bt
          };
        }
        const pt = [
          ...j.data.values()
        ].map((Et, Bt) => et._parse(new ParseInputLazyPath(j, Et, j.path, Bt)));
        return j.common.async ? Promise.all(pt).then((Et) => st(Et)) : st(pt);
      }
      min(_, $) {
        return new ZodSet({
          ...this._def,
          minSize: {
            value: _,
            message: errorUtil_1.errorUtil.toString($)
          }
        });
      }
      max(_, $) {
        return new ZodSet({
          ...this._def,
          maxSize: {
            value: _,
            message: errorUtil_1.errorUtil.toString($)
          }
        });
      }
      size(_, $) {
        return this.min(_, $).max(_, $);
      }
      nonempty(_) {
        return this.min(1, _);
      }
    }
    types.ZodSet = ZodSet;
    ZodSet.create = (d, _) => new ZodSet({
      valueType: d,
      minSize: null,
      maxSize: null,
      typeName: ZodFirstPartyTypeKind.ZodSet,
      ...processCreateParams(_)
    });
    class ZodFunction extends ZodType {
      constructor() {
        super(...arguments), this.validate = this.implement;
      }
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_);
        if ($.parsedType !== util_1.ZodParsedType.function) return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.function,
          received: $.parsedType
        }), parseUtil_1.INVALID;
        function j(pt, Et) {
          return (0, parseUtil_1.makeIssue)({
            data: pt,
            path: $.path,
            errorMaps: [
              $.common.contextualErrorMap,
              $.schemaErrorMap,
              (0, errors_1.getErrorMap)(),
              errors_1.defaultErrorMap
            ].filter((Bt) => !!Bt),
            issueData: {
              code: ZodError_1.ZodIssueCode.invalid_arguments,
              argumentsError: Et
            }
          });
        }
        function rt(pt, Et) {
          return (0, parseUtil_1.makeIssue)({
            data: pt,
            path: $.path,
            errorMaps: [
              $.common.contextualErrorMap,
              $.schemaErrorMap,
              (0, errors_1.getErrorMap)(),
              errors_1.defaultErrorMap
            ].filter((Bt) => !!Bt),
            issueData: {
              code: ZodError_1.ZodIssueCode.invalid_return_type,
              returnTypeError: Et
            }
          });
        }
        const et = {
          errorMap: $.common.contextualErrorMap
        }, st = $.data;
        if (this._def.returns instanceof ZodPromise) {
          const pt = this;
          return (0, parseUtil_1.OK)(async function(...Et) {
            const Bt = new ZodError_1.ZodError([]), St = await pt._def.args.parseAsync(Et, et).catch((Tt) => {
              throw Bt.addIssue(j(Et, Tt)), Bt;
            }), $t = await Reflect.apply(st, this, St);
            return await pt._def.returns._def.type.parseAsync($t, et).catch((Tt) => {
              throw Bt.addIssue(rt($t, Tt)), Bt;
            });
          });
        } else {
          const pt = this;
          return (0, parseUtil_1.OK)(function(...Et) {
            const Bt = pt._def.args.safeParse(Et, et);
            if (!Bt.success) throw new ZodError_1.ZodError([
              j(Et, Bt.error)
            ]);
            const St = Reflect.apply(st, this, Bt.data), $t = pt._def.returns.safeParse(St, et);
            if (!$t.success) throw new ZodError_1.ZodError([
              rt(St, $t.error)
            ]);
            return $t.data;
          });
        }
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(..._) {
        return new ZodFunction({
          ...this._def,
          args: ZodTuple.create(_).rest(ZodUnknown.create())
        });
      }
      returns(_) {
        return new ZodFunction({
          ...this._def,
          returns: _
        });
      }
      implement(_) {
        return this.parse(_);
      }
      strictImplement(_) {
        return this.parse(_);
      }
      static create(_, $, j) {
        return new ZodFunction({
          args: _ || ZodTuple.create([]).rest(ZodUnknown.create()),
          returns: $ || ZodUnknown.create(),
          typeName: ZodFirstPartyTypeKind.ZodFunction,
          ...processCreateParams(j)
        });
      }
    }
    types.ZodFunction = ZodFunction;
    class ZodLazy extends ZodType {
      get schema() {
        return this._def.getter();
      }
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_);
        return this._def.getter()._parse({
          data: $.data,
          path: $.path,
          parent: $
        });
      }
    }
    types.ZodLazy = ZodLazy;
    ZodLazy.create = (d, _) => new ZodLazy({
      getter: d,
      typeName: ZodFirstPartyTypeKind.ZodLazy,
      ...processCreateParams(_)
    });
    class ZodLiteral extends ZodType {
      _parse(_) {
        if (_.data !== this._def.value) {
          const $ = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)($, {
            received: $.data,
            code: ZodError_1.ZodIssueCode.invalid_literal,
            expected: this._def.value
          }), parseUtil_1.INVALID;
        }
        return {
          status: "valid",
          value: _.data
        };
      }
      get value() {
        return this._def.value;
      }
    }
    types.ZodLiteral = ZodLiteral;
    ZodLiteral.create = (d, _) => new ZodLiteral({
      value: d,
      typeName: ZodFirstPartyTypeKind.ZodLiteral,
      ...processCreateParams(_)
    });
    function createZodEnum(d, _) {
      return new ZodEnum({
        values: d,
        typeName: ZodFirstPartyTypeKind.ZodEnum,
        ...processCreateParams(_)
      });
    }
    class ZodEnum extends ZodType {
      constructor() {
        super(...arguments), _ZodEnum_cache.set(this, void 0);
      }
      _parse(_) {
        if (typeof _.data != "string") {
          const $ = this._getOrReturnCtx(_), j = this._def.values;
          return (0, parseUtil_1.addIssueToContext)($, {
            expected: util_1.util.joinValues(j),
            received: $.parsedType,
            code: ZodError_1.ZodIssueCode.invalid_type
          }), parseUtil_1.INVALID;
        }
        if (__classPrivateFieldGet$1(this, _ZodEnum_cache, "f") || __classPrivateFieldSet$1(this, _ZodEnum_cache, new Set(this._def.values), "f"), !__classPrivateFieldGet$1(this, _ZodEnum_cache, "f").has(_.data)) {
          const $ = this._getOrReturnCtx(_), j = this._def.values;
          return (0, parseUtil_1.addIssueToContext)($, {
            received: $.data,
            code: ZodError_1.ZodIssueCode.invalid_enum_value,
            options: j
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        const _ = {};
        for (const $ of this._def.values) _[$] = $;
        return _;
      }
      get Values() {
        const _ = {};
        for (const $ of this._def.values) _[$] = $;
        return _;
      }
      get Enum() {
        const _ = {};
        for (const $ of this._def.values) _[$] = $;
        return _;
      }
      extract(_, $ = this._def) {
        return ZodEnum.create(_, {
          ...this._def,
          ...$
        });
      }
      exclude(_, $ = this._def) {
        return ZodEnum.create(this.options.filter((j) => !_.includes(j)), {
          ...this._def,
          ...$
        });
      }
    }
    types.ZodEnum = ZodEnum;
    _ZodEnum_cache = /* @__PURE__ */ new WeakMap();
    ZodEnum.create = createZodEnum;
    class ZodNativeEnum extends ZodType {
      constructor() {
        super(...arguments), _ZodNativeEnum_cache.set(this, void 0);
      }
      _parse(_) {
        const $ = util_1.util.getValidEnumValues(this._def.values), j = this._getOrReturnCtx(_);
        if (j.parsedType !== util_1.ZodParsedType.string && j.parsedType !== util_1.ZodParsedType.number) {
          const rt = util_1.util.objectValues($);
          return (0, parseUtil_1.addIssueToContext)(j, {
            expected: util_1.util.joinValues(rt),
            received: j.parsedType,
            code: ZodError_1.ZodIssueCode.invalid_type
          }), parseUtil_1.INVALID;
        }
        if (__classPrivateFieldGet$1(this, _ZodNativeEnum_cache, "f") || __classPrivateFieldSet$1(this, _ZodNativeEnum_cache, new Set(util_1.util.getValidEnumValues(this._def.values)), "f"), !__classPrivateFieldGet$1(this, _ZodNativeEnum_cache, "f").has(_.data)) {
          const rt = util_1.util.objectValues($);
          return (0, parseUtil_1.addIssueToContext)(j, {
            received: j.data,
            code: ZodError_1.ZodIssueCode.invalid_enum_value,
            options: rt
          }), parseUtil_1.INVALID;
        }
        return (0, parseUtil_1.OK)(_.data);
      }
      get enum() {
        return this._def.values;
      }
    }
    types.ZodNativeEnum = ZodNativeEnum;
    _ZodNativeEnum_cache = /* @__PURE__ */ new WeakMap();
    ZodNativeEnum.create = (d, _) => new ZodNativeEnum({
      values: d,
      typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
      ...processCreateParams(_)
    });
    class ZodPromise extends ZodType {
      unwrap() {
        return this._def.type;
      }
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_);
        if ($.parsedType !== util_1.ZodParsedType.promise && $.common.async === false) return (0, parseUtil_1.addIssueToContext)($, {
          code: ZodError_1.ZodIssueCode.invalid_type,
          expected: util_1.ZodParsedType.promise,
          received: $.parsedType
        }), parseUtil_1.INVALID;
        const j = $.parsedType === util_1.ZodParsedType.promise ? $.data : Promise.resolve($.data);
        return (0, parseUtil_1.OK)(j.then((rt) => this._def.type.parseAsync(rt, {
          path: $.path,
          errorMap: $.common.contextualErrorMap
        })));
      }
    }
    types.ZodPromise = ZodPromise;
    ZodPromise.create = (d, _) => new ZodPromise({
      type: d,
      typeName: ZodFirstPartyTypeKind.ZodPromise,
      ...processCreateParams(_)
    });
    class ZodEffects extends ZodType {
      innerType() {
        return this._def.schema;
      }
      sourceType() {
        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
      }
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_), rt = this._def.effect || null, et = {
          addIssue: (st) => {
            (0, parseUtil_1.addIssueToContext)(j, st), st.fatal ? $.abort() : $.dirty();
          },
          get path() {
            return j.path;
          }
        };
        if (et.addIssue = et.addIssue.bind(et), rt.type === "preprocess") {
          const st = rt.transform(j.data, et);
          if (j.common.async) return Promise.resolve(st).then(async (pt) => {
            if ($.value === "aborted") return parseUtil_1.INVALID;
            const Et = await this._def.schema._parseAsync({
              data: pt,
              path: j.path,
              parent: j
            });
            return Et.status === "aborted" ? parseUtil_1.INVALID : Et.status === "dirty" || $.value === "dirty" ? (0, parseUtil_1.DIRTY)(Et.value) : Et;
          });
          {
            if ($.value === "aborted") return parseUtil_1.INVALID;
            const pt = this._def.schema._parseSync({
              data: st,
              path: j.path,
              parent: j
            });
            return pt.status === "aborted" ? parseUtil_1.INVALID : pt.status === "dirty" || $.value === "dirty" ? (0, parseUtil_1.DIRTY)(pt.value) : pt;
          }
        }
        if (rt.type === "refinement") {
          const st = (pt) => {
            const Et = rt.refinement(pt, et);
            if (j.common.async) return Promise.resolve(Et);
            if (Et instanceof Promise) throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
            return pt;
          };
          if (j.common.async === false) {
            const pt = this._def.schema._parseSync({
              data: j.data,
              path: j.path,
              parent: j
            });
            return pt.status === "aborted" ? parseUtil_1.INVALID : (pt.status === "dirty" && $.dirty(), st(pt.value), {
              status: $.value,
              value: pt.value
            });
          } else return this._def.schema._parseAsync({
            data: j.data,
            path: j.path,
            parent: j
          }).then((pt) => pt.status === "aborted" ? parseUtil_1.INVALID : (pt.status === "dirty" && $.dirty(), st(pt.value).then(() => ({
            status: $.value,
            value: pt.value
          }))));
        }
        if (rt.type === "transform") if (j.common.async === false) {
          const st = this._def.schema._parseSync({
            data: j.data,
            path: j.path,
            parent: j
          });
          if (!(0, parseUtil_1.isValid)(st)) return st;
          const pt = rt.transform(st.value, et);
          if (pt instanceof Promise) throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
          return {
            status: $.value,
            value: pt
          };
        } else return this._def.schema._parseAsync({
          data: j.data,
          path: j.path,
          parent: j
        }).then((st) => (0, parseUtil_1.isValid)(st) ? Promise.resolve(rt.transform(st.value, et)).then((pt) => ({
          status: $.value,
          value: pt
        })) : st);
        util_1.util.assertNever(rt);
      }
    }
    types.ZodEffects = ZodEffects;
    types.ZodTransformer = ZodEffects;
    ZodEffects.create = (d, _, $) => new ZodEffects({
      schema: d,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: _,
      ...processCreateParams($)
    });
    ZodEffects.createWithPreprocess = (d, _, $) => new ZodEffects({
      schema: _,
      effect: {
        type: "preprocess",
        transform: d
      },
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      ...processCreateParams($)
    });
    class ZodOptional extends ZodType {
      _parse(_) {
        return this._getType(_) === util_1.ZodParsedType.undefined ? (0, parseUtil_1.OK)(void 0) : this._def.innerType._parse(_);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    types.ZodOptional = ZodOptional;
    ZodOptional.create = (d, _) => new ZodOptional({
      innerType: d,
      typeName: ZodFirstPartyTypeKind.ZodOptional,
      ...processCreateParams(_)
    });
    class ZodNullable extends ZodType {
      _parse(_) {
        return this._getType(_) === util_1.ZodParsedType.null ? (0, parseUtil_1.OK)(null) : this._def.innerType._parse(_);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    types.ZodNullable = ZodNullable;
    ZodNullable.create = (d, _) => new ZodNullable({
      innerType: d,
      typeName: ZodFirstPartyTypeKind.ZodNullable,
      ...processCreateParams(_)
    });
    class ZodDefault extends ZodType {
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_);
        let j = $.data;
        return $.parsedType === util_1.ZodParsedType.undefined && (j = this._def.defaultValue()), this._def.innerType._parse({
          data: j,
          path: $.path,
          parent: $
        });
      }
      removeDefault() {
        return this._def.innerType;
      }
    }
    types.ZodDefault = ZodDefault;
    ZodDefault.create = (d, _) => new ZodDefault({
      innerType: d,
      typeName: ZodFirstPartyTypeKind.ZodDefault,
      defaultValue: typeof _.default == "function" ? _.default : () => _.default,
      ...processCreateParams(_)
    });
    class ZodCatch extends ZodType {
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_), j = {
          ...$,
          common: {
            ...$.common,
            issues: []
          }
        }, rt = this._def.innerType._parse({
          data: j.data,
          path: j.path,
          parent: {
            ...j
          }
        });
        return (0, parseUtil_1.isAsync)(rt) ? rt.then((et) => ({
          status: "valid",
          value: et.status === "valid" ? et.value : this._def.catchValue({
            get error() {
              return new ZodError_1.ZodError(j.common.issues);
            },
            input: j.data
          })
        })) : {
          status: "valid",
          value: rt.status === "valid" ? rt.value : this._def.catchValue({
            get error() {
              return new ZodError_1.ZodError(j.common.issues);
            },
            input: j.data
          })
        };
      }
      removeCatch() {
        return this._def.innerType;
      }
    }
    types.ZodCatch = ZodCatch;
    ZodCatch.create = (d, _) => new ZodCatch({
      innerType: d,
      typeName: ZodFirstPartyTypeKind.ZodCatch,
      catchValue: typeof _.catch == "function" ? _.catch : () => _.catch,
      ...processCreateParams(_)
    });
    class ZodNaN extends ZodType {
      _parse(_) {
        if (this._getType(_) !== util_1.ZodParsedType.nan) {
          const j = this._getOrReturnCtx(_);
          return (0, parseUtil_1.addIssueToContext)(j, {
            code: ZodError_1.ZodIssueCode.invalid_type,
            expected: util_1.ZodParsedType.nan,
            received: j.parsedType
          }), parseUtil_1.INVALID;
        }
        return {
          status: "valid",
          value: _.data
        };
      }
    }
    types.ZodNaN = ZodNaN;
    ZodNaN.create = (d) => new ZodNaN({
      typeName: ZodFirstPartyTypeKind.ZodNaN,
      ...processCreateParams(d)
    });
    types.BRAND = Symbol("zod_brand");
    class ZodBranded extends ZodType {
      _parse(_) {
        const { ctx: $ } = this._processInputParams(_), j = $.data;
        return this._def.type._parse({
          data: j,
          path: $.path,
          parent: $
        });
      }
      unwrap() {
        return this._def.type;
      }
    }
    types.ZodBranded = ZodBranded;
    class ZodPipeline extends ZodType {
      _parse(_) {
        const { status: $, ctx: j } = this._processInputParams(_);
        if (j.common.async) return (async () => {
          const et = await this._def.in._parseAsync({
            data: j.data,
            path: j.path,
            parent: j
          });
          return et.status === "aborted" ? parseUtil_1.INVALID : et.status === "dirty" ? ($.dirty(), (0, parseUtil_1.DIRTY)(et.value)) : this._def.out._parseAsync({
            data: et.value,
            path: j.path,
            parent: j
          });
        })();
        {
          const rt = this._def.in._parseSync({
            data: j.data,
            path: j.path,
            parent: j
          });
          return rt.status === "aborted" ? parseUtil_1.INVALID : rt.status === "dirty" ? ($.dirty(), {
            status: "dirty",
            value: rt.value
          }) : this._def.out._parseSync({
            data: rt.value,
            path: j.path,
            parent: j
          });
        }
      }
      static create(_, $) {
        return new ZodPipeline({
          in: _,
          out: $,
          typeName: ZodFirstPartyTypeKind.ZodPipeline
        });
      }
    }
    types.ZodPipeline = ZodPipeline;
    class ZodReadonly extends ZodType {
      _parse(_) {
        const $ = this._def.innerType._parse(_), j = (rt) => ((0, parseUtil_1.isValid)(rt) && (rt.value = Object.freeze(rt.value)), rt);
        return (0, parseUtil_1.isAsync)($) ? $.then((rt) => j(rt)) : j($);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    types.ZodReadonly = ZodReadonly;
    ZodReadonly.create = (d, _) => new ZodReadonly({
      innerType: d,
      typeName: ZodFirstPartyTypeKind.ZodReadonly,
      ...processCreateParams(_)
    });
    function cleanParams(d, _) {
      const $ = typeof d == "function" ? d(_) : typeof d == "string" ? {
        message: d
      } : d;
      return typeof $ == "string" ? {
        message: $
      } : $;
    }
    function custom(d, _ = {}, $) {
      return d ? ZodAny.create().superRefine((j, rt) => {
        var et, st;
        const pt = d(j);
        if (pt instanceof Promise) return pt.then((Et) => {
          var Bt, St;
          if (!Et) {
            const $t = cleanParams(_, j), kt = (St = (Bt = $t.fatal) !== null && Bt !== void 0 ? Bt : $) !== null && St !== void 0 ? St : true;
            rt.addIssue({
              code: "custom",
              ...$t,
              fatal: kt
            });
          }
        });
        if (!pt) {
          const Et = cleanParams(_, j), Bt = (st = (et = Et.fatal) !== null && et !== void 0 ? et : $) !== null && st !== void 0 ? st : true;
          rt.addIssue({
            code: "custom",
            ...Et,
            fatal: Bt
          });
        }
      }) : ZodAny.create();
    }
    types.custom = custom;
    types.late = {
      object: ZodObject.lazycreate
    };
    var ZodFirstPartyTypeKind;
    (function(d) {
      d.ZodString = "ZodString", d.ZodNumber = "ZodNumber", d.ZodNaN = "ZodNaN", d.ZodBigInt = "ZodBigInt", d.ZodBoolean = "ZodBoolean", d.ZodDate = "ZodDate", d.ZodSymbol = "ZodSymbol", d.ZodUndefined = "ZodUndefined", d.ZodNull = "ZodNull", d.ZodAny = "ZodAny", d.ZodUnknown = "ZodUnknown", d.ZodNever = "ZodNever", d.ZodVoid = "ZodVoid", d.ZodArray = "ZodArray", d.ZodObject = "ZodObject", d.ZodUnion = "ZodUnion", d.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", d.ZodIntersection = "ZodIntersection", d.ZodTuple = "ZodTuple", d.ZodRecord = "ZodRecord", d.ZodMap = "ZodMap", d.ZodSet = "ZodSet", d.ZodFunction = "ZodFunction", d.ZodLazy = "ZodLazy", d.ZodLiteral = "ZodLiteral", d.ZodEnum = "ZodEnum", d.ZodEffects = "ZodEffects", d.ZodNativeEnum = "ZodNativeEnum", d.ZodOptional = "ZodOptional", d.ZodNullable = "ZodNullable", d.ZodDefault = "ZodDefault", d.ZodCatch = "ZodCatch", d.ZodPromise = "ZodPromise", d.ZodBranded = "ZodBranded", d.ZodPipeline = "ZodPipeline", d.ZodReadonly = "ZodReadonly";
    })(ZodFirstPartyTypeKind || (types.ZodFirstPartyTypeKind = ZodFirstPartyTypeKind = {}));
    const instanceOfType = (d, _ = {
      message: `Input not instance of ${d.name}`
    }) => custom(($) => $ instanceof d, _);
    types.instanceof = instanceOfType;
    const stringType = ZodString.create;
    types.string = stringType;
    const numberType = ZodNumber.create;
    types.number = numberType;
    const nanType = ZodNaN.create;
    types.nan = nanType;
    const bigIntType = ZodBigInt.create;
    types.bigint = bigIntType;
    const booleanType = ZodBoolean.create;
    types.boolean = booleanType;
    const dateType = ZodDate.create;
    types.date = dateType;
    const symbolType = ZodSymbol.create;
    types.symbol = symbolType;
    const undefinedType = ZodUndefined.create;
    types.undefined = undefinedType;
    const nullType = ZodNull.create;
    types.null = nullType;
    const anyType = ZodAny.create;
    types.any = anyType;
    const unknownType = ZodUnknown.create;
    types.unknown = unknownType;
    const neverType = ZodNever.create;
    types.never = neverType;
    const voidType = ZodVoid.create;
    types.void = voidType;
    const arrayType = ZodArray.create;
    types.array = arrayType;
    const objectType = ZodObject.create;
    types.object = objectType;
    const strictObjectType = ZodObject.strictCreate;
    types.strictObject = strictObjectType;
    const unionType = ZodUnion.create;
    types.union = unionType;
    const discriminatedUnionType = ZodDiscriminatedUnion.create;
    types.discriminatedUnion = discriminatedUnionType;
    const intersectionType = ZodIntersection.create;
    types.intersection = intersectionType;
    const tupleType = ZodTuple.create;
    types.tuple = tupleType;
    const recordType = ZodRecord.create;
    types.record = recordType;
    const mapType = ZodMap.create;
    types.map = mapType;
    const setType = ZodSet.create;
    types.set = setType;
    const functionType = ZodFunction.create;
    types.function = functionType;
    const lazyType = ZodLazy.create;
    types.lazy = lazyType;
    const literalType = ZodLiteral.create;
    types.literal = literalType;
    const enumType = ZodEnum.create;
    types.enum = enumType;
    const nativeEnumType = ZodNativeEnum.create;
    types.nativeEnum = nativeEnumType;
    const promiseType = ZodPromise.create;
    types.promise = promiseType;
    const effectsType = ZodEffects.create;
    types.effect = effectsType;
    types.transformer = effectsType;
    const optionalType = ZodOptional.create;
    types.optional = optionalType;
    const nullableType = ZodNullable.create;
    types.nullable = nullableType;
    const preprocessType = ZodEffects.createWithPreprocess;
    types.preprocess = preprocessType;
    const pipelineType = ZodPipeline.create;
    types.pipeline = pipelineType;
    const ostring = () => stringType().optional();
    types.ostring = ostring;
    const onumber = () => numberType().optional();
    types.onumber = onumber;
    const oboolean = () => booleanType().optional();
    types.oboolean = oboolean;
    types.coerce = {
      string: (d) => ZodString.create({
        ...d,
        coerce: true
      }),
      number: (d) => ZodNumber.create({
        ...d,
        coerce: true
      }),
      boolean: (d) => ZodBoolean.create({
        ...d,
        coerce: true
      }),
      bigint: (d) => ZodBigInt.create({
        ...d,
        coerce: true
      }),
      date: (d) => ZodDate.create({
        ...d,
        coerce: true
      })
    };
    types.NEVER = parseUtil_1.INVALID;
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(j, rt, et, st) {
        st === void 0 && (st = et);
        var pt = Object.getOwnPropertyDescriptor(rt, et);
        (!pt || ("get" in pt ? !rt.__esModule : pt.writable || pt.configurable)) && (pt = {
          enumerable: true,
          get: function() {
            return rt[et];
          }
        }), Object.defineProperty(j, st, pt);
      } : function(j, rt, et, st) {
        st === void 0 && (st = et), j[st] = rt[et];
      }), $ = commonjsGlobal && commonjsGlobal.__exportStar || function(j, rt) {
        for (var et in j) et !== "default" && !Object.prototype.hasOwnProperty.call(rt, et) && _(rt, j, et);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), $(errors, d), $(parseUtil, d), $(typeAliases, d), $(util, d), $(types, d), $(ZodError$1, d);
    })(external);
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(st, pt, Et, Bt) {
        Bt === void 0 && (Bt = Et);
        var St = Object.getOwnPropertyDescriptor(pt, Et);
        (!St || ("get" in St ? !pt.__esModule : St.writable || St.configurable)) && (St = {
          enumerable: true,
          get: function() {
            return pt[Et];
          }
        }), Object.defineProperty(st, Bt, St);
      } : function(st, pt, Et, Bt) {
        Bt === void 0 && (Bt = Et), st[Bt] = pt[Et];
      }), $ = commonjsGlobal && commonjsGlobal.__setModuleDefault || (Object.create ? function(st, pt) {
        Object.defineProperty(st, "default", {
          enumerable: true,
          value: pt
        });
      } : function(st, pt) {
        st.default = pt;
      }), j = commonjsGlobal && commonjsGlobal.__importStar || function(st) {
        if (st && st.__esModule) return st;
        var pt = {};
        if (st != null) for (var Et in st) Et !== "default" && Object.prototype.hasOwnProperty.call(st, Et) && _(pt, st, Et);
        return $(pt, st), pt;
      }, rt = commonjsGlobal && commonjsGlobal.__exportStar || function(st, pt) {
        for (var Et in st) Et !== "default" && !Object.prototype.hasOwnProperty.call(pt, Et) && _(pt, st, Et);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.z = void 0;
      const et = j(external);
      d.z = et, rt(external, d), d.default = et;
    })(lib$2);
    const version$3 = "15.2.1", require$$4 = {
      version: version$3
    };
    var __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    };
    Object.defineProperty(HttpApi$1, "__esModule", {
      value: true
    });
    HttpApi$1.HttpApi = void 0;
    const TonCache_1 = TonCache, dataloader_1 = __importDefault$1(dataloader), axios_1$1 = __importDefault$1(axios_1$2), zod_1$1 = lib$2, version$2 = require$$4.version, blockIdExt = zod_1$1.z.object({
      "@type": zod_1$1.z.literal("ton.blockIdExt"),
      workchain: zod_1$1.z.number(),
      shard: zod_1$1.z.string(),
      seqno: zod_1$1.z.number(),
      root_hash: zod_1$1.z.string(),
      file_hash: zod_1$1.z.string()
    }), addressInformation = zod_1$1.z.object({
      balance: zod_1$1.z.union([
        zod_1$1.z.number(),
        zod_1$1.z.string()
      ]),
      extra_currencies: zod_1$1.z.optional(zod_1$1.z.array(zod_1$1.z.object({
        "@type": zod_1$1.z.literal("extraCurrency"),
        id: zod_1$1.z.number(),
        amount: zod_1$1.z.string()
      }))),
      state: zod_1$1.z.union([
        zod_1$1.z.literal("active"),
        zod_1$1.z.literal("uninitialized"),
        zod_1$1.z.literal("frozen")
      ]),
      data: zod_1$1.z.string(),
      code: zod_1$1.z.string(),
      last_transaction_id: zod_1$1.z.object({
        "@type": zod_1$1.z.literal("internal.transactionId"),
        lt: zod_1$1.z.string(),
        hash: zod_1$1.z.string()
      }),
      block_id: blockIdExt,
      sync_utime: zod_1$1.z.number()
    }), bocResponse = zod_1$1.z.object({
      "@type": zod_1$1.z.literal("ok")
    }), feeResponse = zod_1$1.z.object({
      "@type": zod_1$1.z.literal("query.fees"),
      source_fees: zod_1$1.z.object({
        "@type": zod_1$1.z.literal("fees"),
        in_fwd_fee: zod_1$1.z.number(),
        storage_fee: zod_1$1.z.number(),
        gas_fee: zod_1$1.z.number(),
        fwd_fee: zod_1$1.z.number()
      })
    }), callGetMethod = zod_1$1.z.object({
      gas_used: zod_1$1.z.number(),
      exit_code: zod_1$1.z.number(),
      stack: zod_1$1.z.array(zod_1$1.z.unknown())
    }), messageData = zod_1$1.z.union([
      zod_1$1.z.object({
        "@type": zod_1$1.z.literal("msg.dataRaw"),
        body: zod_1$1.z.string()
      }),
      zod_1$1.z.object({
        "@type": zod_1$1.z.literal("msg.dataText"),
        text: zod_1$1.z.string()
      }),
      zod_1$1.z.object({
        "@type": zod_1$1.z.literal("msg.dataDecryptedText"),
        text: zod_1$1.z.string()
      }),
      zod_1$1.z.object({
        "@type": zod_1$1.z.literal("msg.dataEncryptedText"),
        text: zod_1$1.z.string()
      })
    ]), message = zod_1$1.z.object({
      source: zod_1$1.z.string(),
      destination: zod_1$1.z.string(),
      value: zod_1$1.z.string(),
      fwd_fee: zod_1$1.z.string(),
      ihr_fee: zod_1$1.z.string(),
      created_lt: zod_1$1.z.string(),
      body_hash: zod_1$1.z.string(),
      msg_data: messageData,
      message: zod_1$1.z.string().optional()
    }), transaction = zod_1$1.z.object({
      data: zod_1$1.z.string(),
      utime: zod_1$1.z.number(),
      transaction_id: zod_1$1.z.object({
        lt: zod_1$1.z.string(),
        hash: zod_1$1.z.string()
      }),
      fee: zod_1$1.z.string(),
      storage_fee: zod_1$1.z.string(),
      other_fee: zod_1$1.z.string(),
      in_msg: zod_1$1.z.union([
        zod_1$1.z.undefined(),
        message
      ]),
      out_msgs: zod_1$1.z.array(message)
    }), getTransactions = zod_1$1.z.array(transaction), getMasterchain = zod_1$1.z.object({
      state_root_hash: zod_1$1.z.string(),
      last: blockIdExt,
      init: blockIdExt
    }), getShards = zod_1$1.z.object({
      shards: zod_1$1.z.array(blockIdExt)
    }), blockShortTxt = zod_1$1.z.object({
      "@type": zod_1$1.z.literal("blocks.shortTxId"),
      mode: zod_1$1.z.number(),
      account: zod_1$1.z.string(),
      lt: zod_1$1.z.string(),
      hash: zod_1$1.z.string()
    }), getBlockTransactions = zod_1$1.z.object({
      id: blockIdExt,
      req_count: zod_1$1.z.number(),
      incomplete: zod_1$1.z.boolean(),
      transactions: zod_1$1.z.array(blockShortTxt)
    });
    class TypedCache {
      constructor(_, $, j, rt) {
        this.namespace = _, this.cache = $, this.codec = j, this.keyEncoder = rt;
      }
      async get(_) {
        let $ = await this.cache.get(this.namespace, this.keyEncoder(_));
        if ($) {
          let j = this.codec.safeParse(JSON.parse($));
          if (j.success) return j.data;
        }
        return null;
      }
      async set(_, $) {
        $ !== null ? await this.cache.set(this.namespace, this.keyEncoder(_), JSON.stringify($)) : await this.cache.set(this.namespace, this.keyEncoder(_), null);
      }
    }
    class HttpApi {
      constructor(_, $) {
        this.endpoint = _, this.cache = new TonCache_1.InMemoryCache(), this.parameters = {
          timeout: ($ == null ? void 0 : $.timeout) || 3e4,
          apiKey: $ == null ? void 0 : $.apiKey,
          adapter: $ == null ? void 0 : $.adapter
        }, this.shardCache = new TypedCache("ton-shard", this.cache, zod_1$1.z.array(blockIdExt), (j) => j + ""), this.shardLoader = new dataloader_1.default(async (j) => await Promise.all(j.map(async (rt) => {
          const et = await this.shardCache.get(rt);
          if (et) return et;
          let st = (await this.doCall("shards", {
            seqno: rt
          }, getShards)).shards;
          return await this.shardCache.set(rt, st), st;
        }))), this.shardTransactionsCache = new TypedCache("ton-shard-tx", this.cache, getBlockTransactions, (j) => j.workchain + ":" + j.shard + ":" + j.seqno), this.shardTransactionsLoader = new dataloader_1.default(async (j) => await Promise.all(j.map(async (rt) => {
          const et = await this.shardTransactionsCache.get(rt);
          if (et) return et;
          let st = await this.doCall("getBlockTransactions", {
            workchain: rt.workchain,
            seqno: rt.seqno,
            shard: rt.shard
          }, getBlockTransactions);
          return await this.shardTransactionsCache.set(rt, st), st;
        })), {
          cacheKeyFn: (j) => j.workchain + ":" + j.shard + ":" + j.seqno
        });
      }
      getAddressInformation(_) {
        return this.doCall("getAddressInformation", {
          address: _.toString()
        }, addressInformation);
      }
      async getTransactions(_, $) {
        const j = $.inclusive;
        delete $.inclusive;
        let rt;
        $.hash && (rt = Buffer.from($.hash, "base64").toString("hex"));
        let et = $.limit;
        $.hash && $.lt && j !== true && et++;
        let st = await this.doCall("getTransactions", {
          address: _.toString(),
          ...$,
          limit: et,
          hash: rt
        }, getTransactions);
        return st.length > et && (st = st.slice(0, et)), $.hash && $.lt && j !== true && st.shift(), st;
      }
      async getMasterchainInfo() {
        return await this.doCall("getMasterchainInfo", {}, getMasterchain);
      }
      async getShards(_) {
        return await this.shardLoader.load(_);
      }
      async getBlockTransactions(_, $, j) {
        return await this.shardTransactionsLoader.load({
          workchain: _,
          seqno: $,
          shard: j
        });
      }
      async getTransaction(_, $, j) {
        let rt = Buffer.from(j, "base64").toString("hex"), st = (await this.doCall("getTransactions", {
          address: _.toString(),
          lt: $,
          hash: rt,
          limit: 1
        }, getTransactions)).find((pt) => pt.transaction_id.lt === $ && pt.transaction_id.hash === j);
        return st || null;
      }
      async callGetMethod(_, $, j) {
        return await this.doCall("runGetMethod", {
          address: _.toString(),
          method: $,
          stack: serializeStack(j)
        }, callGetMethod);
      }
      async sendBoc(_) {
        await this.doCall("sendBoc", {
          boc: _.toString("base64")
        }, bocResponse);
      }
      async estimateFee(_, $) {
        return await this.doCall("estimateFee", {
          address: _.toString(),
          body: $.body.toBoc().toString("base64"),
          init_data: $.initData ? $.initData.toBoc().toString("base64") : "",
          init_code: $.initCode ? $.initCode.toBoc().toString("base64") : "",
          ignore_chksig: $.ignoreSignature
        }, feeResponse);
      }
      async tryLocateResultTx(_, $, j) {
        return await this.doCall("tryLocateResultTx", {
          source: _.toString(),
          destination: $.toString(),
          created_lt: j
        }, transaction);
      }
      async tryLocateSourceTx(_, $, j) {
        return await this.doCall("tryLocateSourceTx", {
          source: _.toString(),
          destination: $.toString(),
          created_lt: j
        }, transaction);
      }
      async doCall(_, $, j) {
        let rt = {
          "Content-Type": "application/json",
          "X-Ton-Client-Version": version$2
        };
        this.parameters.apiKey && (rt["X-API-Key"] = this.parameters.apiKey);
        let et = await axios_1$1.default.post(this.endpoint, JSON.stringify({
          id: "1",
          jsonrpc: "2.0",
          method: _,
          params: $
        }), {
          headers: rt,
          timeout: this.parameters.timeout,
          adapter: this.parameters.adapter
        });
        if (et.status !== 200 || !et.data.ok) throw Error("Received error: " + JSON.stringify(et.data));
        let st = j.safeParse(et.data.result);
        if (st.success) return st.data;
        throw Error("Malformed response: " + st.error.format()._errors.join(", "));
      }
    }
    HttpApi$1.HttpApi = HttpApi;
    function serializeStack(d) {
      let _ = [];
      for (let $ of d) if ($.type === "int") _.push([
        "num",
        $.value.toString()
      ]);
      else if ($.type === "cell") _.push([
        "tvm.Cell",
        $.cell.toBoc().toString("base64")
      ]);
      else if ($.type === "slice") _.push([
        "tvm.Slice",
        $.cell.toBoc().toString("base64")
      ]);
      else if ($.type === "builder") _.push([
        "tvm.Builder",
        $.cell.toBoc().toString("base64")
      ]);
      else throw Error("Unsupported stack item type: " + $.type);
      return _;
    }
    var TonClient$1 = {};
    Object.defineProperty(TonClient$1, "__esModule", {
      value: true
    });
    TonClient$1.TonClient = void 0;
    const HttpApi_1 = HttpApi$1, core_1$k = dist$2;
    class TonClient {
      constructor(_) {
        this.parameters = {
          endpoint: _.endpoint
        }, this.api = new HttpApi_1.HttpApi(this.parameters.endpoint, {
          timeout: _.timeout,
          apiKey: _.apiKey,
          adapter: _.httpAdapter
        });
      }
      async getBalance(_) {
        return (await this.getContractState(_)).balance;
      }
      async runMethod(_, $, j = []) {
        let rt = await this.api.callGetMethod(_, $, j);
        if (rt.exit_code !== 0) throw Error("Unable to execute get method. Got exit_code: " + rt.exit_code);
        return {
          gas_used: rt.gas_used,
          stack: parseStack(rt.stack)
        };
      }
      async callGetMethod(_, $, j = []) {
        return this.runMethod(_, $, j);
      }
      async runMethodWithError(_, $, j = []) {
        let rt = await this.api.callGetMethod(_, $, j);
        return {
          gas_used: rt.gas_used,
          stack: parseStack(rt.stack),
          exit_code: rt.exit_code
        };
      }
      async callGetMethodWithError(_, $, j = []) {
        return this.runMethodWithError(_, $, j);
      }
      async getTransactions(_, $) {
        let j = await this.api.getTransactions(_, $), rt = [];
        for (let et of j) rt.push((0, core_1$k.loadTransaction)(core_1$k.Cell.fromBoc(Buffer.from(et.data, "base64"))[0].beginParse()));
        return rt;
      }
      async getTransaction(_, $, j) {
        let rt = await this.api.getTransaction(_, $, j);
        return rt ? (0, core_1$k.loadTransaction)(core_1$k.Cell.fromBoc(Buffer.from(rt.data, "base64"))[0].beginParse()) : null;
      }
      async tryLocateResultTx(_, $, j) {
        let rt = await this.api.tryLocateResultTx(_, $, j);
        return (0, core_1$k.loadTransaction)(core_1$k.Cell.fromBase64(rt.data).beginParse());
      }
      async tryLocateSourceTx(_, $, j) {
        let rt = await this.api.tryLocateSourceTx(_, $, j);
        return (0, core_1$k.loadTransaction)(core_1$k.Cell.fromBase64(rt.data).beginParse());
      }
      async getMasterchainInfo() {
        let _ = await this.api.getMasterchainInfo();
        return {
          workchain: _.init.workchain,
          shard: _.last.shard,
          initSeqno: _.init.seqno,
          latestSeqno: _.last.seqno
        };
      }
      async getWorkchainShards(_) {
        return (await this.api.getShards(_)).map((j) => ({
          workchain: j.workchain,
          shard: j.shard,
          seqno: j.seqno
        }));
      }
      async getShardTransactions(_, $, j) {
        let rt = await this.api.getBlockTransactions(_, $, j);
        if (rt.incomplete) throw Error("Unsupported");
        return rt.transactions.map((et) => ({
          account: core_1$k.Address.parseRaw(et.account),
          lt: et.lt,
          hash: et.hash
        }));
      }
      async sendMessage(_) {
        const $ = (0, core_1$k.beginCell)().store((0, core_1$k.storeMessage)(_)).endCell().toBoc();
        await this.api.sendBoc($);
      }
      async sendFile(_) {
        await this.api.sendBoc(_);
      }
      async estimateExternalMessageFee(_, $) {
        return await this.api.estimateFee(_, {
          body: $.body,
          initCode: $.initCode,
          initData: $.initData,
          ignoreSignature: $.ignoreSignature
        });
      }
      async sendExternalMessage(_, $) {
        if (await this.isContractDeployed(_.address) || !_.init) {
          const j = (0, core_1$k.external)({
            to: _.address,
            body: $
          });
          await this.sendMessage(j);
        } else {
          const j = (0, core_1$k.external)({
            to: _.address,
            init: _.init,
            body: $
          });
          await this.sendMessage(j);
        }
      }
      async isContractDeployed(_) {
        return (await this.getContractState(_)).state === "active";
      }
      async getContractState(_) {
        let $ = await this.api.getAddressInformation(_), j = BigInt($.balance), rt = $.state;
        return {
          balance: j,
          extra_currencies: $.extra_currencies,
          state: rt,
          code: $.code !== "" ? Buffer.from($.code, "base64") : null,
          data: $.data !== "" ? Buffer.from($.data, "base64") : null,
          lastTransaction: $.last_transaction_id.lt !== "0" ? {
            lt: $.last_transaction_id.lt,
            hash: $.last_transaction_id.hash
          } : null,
          blockId: {
            workchain: $.block_id.workchain,
            shard: $.block_id.shard,
            seqno: $.block_id.seqno
          },
          timestampt: $.sync_utime
        };
      }
      open(_) {
        return (0, core_1$k.openContract)(_, ($) => createProvider$1(this, $.address, $.init));
      }
      provider(_, $) {
        return createProvider$1(this, _, $ ?? null);
      }
    }
    TonClient$1.TonClient = TonClient;
    function parseStackEntry(d) {
      const _ = d["@type"];
      switch (_) {
        case "tvm.list":
        case "tvm.tuple":
          return d.elements.map(parseStackEntry);
        case "tvm.cell":
          return core_1$k.Cell.fromBoc(Buffer.from(d.bytes, "base64"))[0];
        case "tvm.slice":
          return core_1$k.Cell.fromBoc(Buffer.from(d.bytes, "base64"))[0];
        case "tvm.stackEntryCell":
          return parseStackEntry(d.cell);
        case "tvm.stackEntrySlice":
          return parseStackEntry(d.slice);
        case "tvm.stackEntryTuple":
          return parseStackEntry(d.tuple);
        case "tvm.stackEntryList":
          return parseStackEntry(d.list);
        case "tvm.stackEntryNumber":
          return parseStackEntry(d.number);
        case "tvm.numberDecimal":
          return BigInt(d.number);
        default:
          throw Error("Unsupported item type: " + _);
      }
    }
    function parseStackItem(d) {
      if (d[0] === "num") {
        let _ = d[1];
        return _.startsWith("-") ? {
          type: "int",
          value: -BigInt(_.slice(1))
        } : {
          type: "int",
          value: BigInt(_)
        };
      } else {
        if (d[0] === "null") return {
          type: "null"
        };
        if (d[0] === "cell") return {
          type: "cell",
          cell: core_1$k.Cell.fromBoc(Buffer.from(d[1].bytes, "base64"))[0]
        };
        if (d[0] === "slice") return {
          type: "slice",
          cell: core_1$k.Cell.fromBoc(Buffer.from(d[1].bytes, "base64"))[0]
        };
        if (d[0] === "builder") return {
          type: "builder",
          cell: core_1$k.Cell.fromBoc(Buffer.from(d[1].bytes, "base64"))[0]
        };
        if (d[0] === "tuple" || d[0] === "list") return d[1].elements.length === 0 ? {
          type: "null"
        } : {
          type: "tuple",
          items: d[1].elements.map(parseStackEntry)
        };
        throw Error("Unsupported stack item type: " + d[0]);
      }
    }
    function parseStack(d) {
      let _ = [];
      for (let $ of d) _.push(parseStackItem($));
      return new core_1$k.TupleReader(_);
    }
    function createProvider$1(d, _, $) {
      return {
        async getState() {
          let j = await d.getContractState(_), rt = j.balance, et = j.lastTransaction ? {
            lt: BigInt(j.lastTransaction.lt),
            hash: Buffer.from(j.lastTransaction.hash, "base64")
          } : null, st = null, pt;
          if (j.state === "active") pt = {
            type: "active",
            code: j.code ? j.code : null,
            data: j.data ? j.data : null
          };
          else if (j.state === "uninitialized") pt = {
            type: "uninit"
          };
          else if (j.state === "frozen") pt = {
            type: "frozen",
            stateHash: Buffer.alloc(0)
          };
          else throw Error("Unsupported state");
          if (j.extra_currencies && j.extra_currencies.length > 0) {
            st = {};
            for (let Et of j.extra_currencies) st[Et.id] = BigInt(Et.amount);
          }
          return {
            balance: rt,
            extracurrency: st,
            last: et,
            state: pt
          };
        },
        async get(j, rt) {
          if (typeof j != "string") throw new Error("Method name must be a string for TonClient provider");
          return {
            stack: (await d.runMethod(_, j, rt)).stack
          };
        },
        async external(j) {
          let rt = null;
          $ && !await d.isContractDeployed(_) && (rt = $);
          const et = (0, core_1$k.external)({
            to: _,
            init: rt,
            body: j
          });
          let st = (0, core_1$k.beginCell)().store((0, core_1$k.storeMessage)(et)).endCell().toBoc();
          await d.sendFile(st);
        },
        async internal(j, rt) {
          let et = null;
          $ && !await d.isContractDeployed(_) && (et = $);
          let st = true;
          rt.bounce !== null && rt.bounce !== void 0 && (st = rt.bounce);
          let pt;
          typeof rt.value == "string" ? pt = (0, core_1$k.toNano)(rt.value) : pt = rt.value;
          let Et = null;
          typeof rt.body == "string" ? Et = (0, core_1$k.comment)(rt.body) : rt.body && (Et = rt.body), await j.send({
            to: _,
            value: pt,
            bounce: st,
            sendMode: rt.sendMode,
            extracurrency: rt.extracurrency,
            init: et,
            body: Et
          });
        },
        open(j) {
          return (0, core_1$k.openContract)(j, (rt) => createProvider$1(d, rt.address, rt.init ?? null));
        },
        getTransactions(j, rt, et, st) {
          return d.getTransactions(j, {
            limit: st ?? 100,
            lt: rt.toString(),
            hash: et.toString("base64"),
            inclusive: true
          });
        }
      };
    }
    var TonClient4$1 = {}, toUrlSafe$1 = {};
    Object.defineProperty(toUrlSafe$1, "__esModule", {
      value: true
    });
    toUrlSafe$1.toUrlSafe = toUrlSafe;
    function toUrlSafe(d) {
      for (; d.indexOf("/") >= 0; ) d = d.replace("/", "_");
      for (; d.indexOf("+") >= 0; ) d = d.replace("+", "-");
      for (; d.indexOf("=") >= 0; ) d = d.replace("=", "");
      return d;
    }
    var __classPrivateFieldSet = commonjsGlobal && commonjsGlobal.__classPrivateFieldSet || function(d, _, $, j, rt) {
      if (j === "m") throw new TypeError("Private method is not writable");
      if (j === "a" && !rt) throw new TypeError("Private accessor was defined without a setter");
      if (typeof _ == "function" ? d !== _ || !rt : !_.has(d)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return j === "a" ? rt.call(d, $) : rt ? rt.value = $ : _.set(d, $), $;
    }, __classPrivateFieldGet = commonjsGlobal && commonjsGlobal.__classPrivateFieldGet || function(d, _, $, j) {
      if ($ === "a" && !j) throw new TypeError("Private accessor was defined without a getter");
      if (typeof _ == "function" ? d !== _ || !j : !_.has(d)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return $ === "m" ? j : $ === "a" ? j.call(d) : j ? j.value : _.get(d);
    }, __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(d) {
      return d && d.__esModule ? d : {
        default: d
      };
    }, _TonClient4_endpoint, _TonClient4_timeout, _TonClient4_adapter, _TonClient4_axios;
    Object.defineProperty(TonClient4$1, "__esModule", {
      value: true
    });
    TonClient4$1.TonClient4 = void 0;
    const axios_1 = __importDefault(axios_1$2), core_1$j = dist$2, toUrlSafe_1 = toUrlSafe$1, zod_1 = lib$2;
    class TonClient4 {
      constructor(_) {
        _TonClient4_endpoint.set(this, void 0), _TonClient4_timeout.set(this, void 0), _TonClient4_adapter.set(this, void 0), _TonClient4_axios.set(this, void 0), __classPrivateFieldSet(this, _TonClient4_axios, axios_1.default.create(), "f"), __classPrivateFieldSet(this, _TonClient4_endpoint, _.endpoint, "f"), __classPrivateFieldSet(this, _TonClient4_timeout, _.timeout || 5e3, "f"), __classPrivateFieldSet(this, _TonClient4_adapter, _.httpAdapter, "f"), _.requestInterceptor && __classPrivateFieldGet(this, _TonClient4_axios, "f").interceptors.request.use(_.requestInterceptor);
      }
      async getLastBlock() {
        let _ = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/latest", {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), $ = lastBlockCodec.safeParse(_.data);
        if (!$.success) throw Error("Mailformed response: " + $.error.format()._errors.join(", "));
        return $.data;
      }
      async getBlock(_) {
        let $ = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _, {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), j = blockCodec.safeParse($.data);
        if (!j.success) throw Error("Mailformed response");
        if (!j.data.exist) throw Error("Block is out of scope");
        return j.data.block;
      }
      async getBlockByUtime(_) {
        let $ = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/utime/" + _, {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), j = blockCodec.safeParse($.data);
        if (!j.success) throw Error("Mailformed response");
        if (!j.data.exist) throw Error("Block is out of scope");
        return j.data.block;
      }
      async getAccount(_, $) {
        let j = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _ + "/" + $.toString({
          urlSafe: true
        }), {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), rt = accountCodec.safeParse(j.data);
        if (!rt.success) throw Error("Mailformed response");
        return rt.data;
      }
      async getAccountLite(_, $) {
        let j = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _ + "/" + $.toString({
          urlSafe: true
        }) + "/lite", {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), rt = accountLiteCodec.safeParse(j.data);
        if (!rt.success) throw Error("Mailformed response");
        return rt.data;
      }
      async isContractDeployed(_, $) {
        return (await this.getAccountLite(_, $)).account.state.type === "active";
      }
      async isAccountChanged(_, $, j) {
        let rt = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _ + "/" + $.toString({
          urlSafe: true
        }) + "/changed/" + j.toString(10), {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), et = changedCodec.safeParse(rt.data);
        if (!et.success) throw Error("Mailformed response");
        return et.data;
      }
      async getAccountTransactions(_, $, j) {
        let rt = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/account/" + _.toString({
          urlSafe: true
        }) + "/tx/" + $.toString(10) + "/" + (0, toUrlSafe_1.toUrlSafe)(j.toString("base64")), {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), et = transactionsCodec.safeParse(rt.data);
        if (!et.success) throw Error("Mailformed response");
        let st = et.data, pt = [], Et = core_1$j.Cell.fromBoc(Buffer.from(st.boc, "base64"));
        for (let Bt = 0; Bt < st.blocks.length; Bt++) pt.push({
          block: st.blocks[Bt],
          tx: (0, core_1$j.loadTransaction)(Et[Bt].beginParse())
        });
        return pt;
      }
      async getAccountTransactionsParsed(_, $, j, rt = 20) {
        let et = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/account/" + _.toString({
          urlSafe: true
        }) + "/tx/parsed/" + $.toString(10) + "/" + (0, toUrlSafe_1.toUrlSafe)(j.toString("base64")), {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f"),
          params: {
            count: rt
          }
        }), st = parsedTransactionsCodec.safeParse(et.data);
        if (!st.success) throw Error("Mailformed response");
        return st.data;
      }
      async getConfig(_, $) {
        let j = "";
        $ && $.length > 0 && (j = "/" + [
          ...$
        ].sort().join(","));
        let rt = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _ + "/config" + j, {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), et = configCodec.safeParse(rt.data);
        if (!et.success) throw Error("Mailformed response");
        return et.data;
      }
      async runMethod(_, $, j, rt) {
        let et = rt && rt.length > 0 ? "/" + (0, toUrlSafe_1.toUrlSafe)((0, core_1$j.serializeTuple)(rt).toBoc({
          idx: false,
          crc32: false
        }).toString("base64")) : "", st = __classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/block/" + _ + "/" + $.toString({
          urlSafe: true
        }) + "/run/" + encodeURIComponent(j) + et, pt = await __classPrivateFieldGet(this, _TonClient4_axios, "f").get(st, {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        }), Et = runMethodCodec.safeParse(pt.data);
        if (!Et.success) throw Error("Mailformed response");
        let Bt = Et.data.resultRaw ? (0, core_1$j.parseTuple)(core_1$j.Cell.fromBoc(Buffer.from(Et.data.resultRaw, "base64"))[0]) : [];
        return {
          exitCode: Et.data.exitCode,
          result: Bt,
          resultRaw: Et.data.resultRaw,
          block: Et.data.block,
          shardBlock: Et.data.shardBlock,
          reader: new core_1$j.TupleReader(Bt)
        };
      }
      async sendMessage(_) {
        let $ = await __classPrivateFieldGet(this, _TonClient4_axios, "f").post(__classPrivateFieldGet(this, _TonClient4_endpoint, "f") + "/send", {
          boc: _.toString("base64")
        }, {
          adapter: __classPrivateFieldGet(this, _TonClient4_adapter, "f"),
          timeout: __classPrivateFieldGet(this, _TonClient4_timeout, "f")
        });
        if (!sendCodec.safeParse($.data).success) throw Error("Mailformed response");
        return {
          status: $.data.status
        };
      }
      open(_) {
        return (0, core_1$j.openContract)(_, ($) => createProvider(this, null, $.address, $.init));
      }
      openAt(_, $) {
        return (0, core_1$j.openContract)($, (j) => createProvider(this, _, j.address, j.init));
      }
      provider(_, $) {
        return createProvider(this, null, _, $ ?? null);
      }
      providerAt(_, $, j) {
        return createProvider(this, _, $, j ?? null);
      }
    }
    TonClient4$1.TonClient4 = TonClient4;
    _TonClient4_endpoint = /* @__PURE__ */ new WeakMap(), _TonClient4_timeout = /* @__PURE__ */ new WeakMap(), _TonClient4_adapter = /* @__PURE__ */ new WeakMap(), _TonClient4_axios = /* @__PURE__ */ new WeakMap();
    function createProvider(d, _, $, j) {
      return {
        async getState() {
          let rt = _;
          rt === null && (rt = (await d.getLastBlock()).last.seqno);
          let et = await d.getAccount(rt, $), st = et.account.last ? {
            lt: BigInt(et.account.last.lt),
            hash: Buffer.from(et.account.last.hash, "base64")
          } : null, pt;
          if (et.account.state.type === "active") pt = {
            type: "active",
            code: et.account.state.code ? Buffer.from(et.account.state.code, "base64") : null,
            data: et.account.state.data ? Buffer.from(et.account.state.data, "base64") : null
          };
          else if (et.account.state.type === "uninit") pt = {
            type: "uninit"
          };
          else if (et.account.state.type === "frozen") pt = {
            type: "frozen",
            stateHash: Buffer.from(et.account.state.stateHash, "base64")
          };
          else throw Error("Unsupported state");
          let Et = null;
          if (et.account.balance.currencies) {
            Et = {};
            let Bt = et.account.balance.currencies;
            for (let [St, $t] of Object.entries(Bt)) Et[Number(St)] = BigInt($t);
          }
          return {
            balance: BigInt(et.account.balance.coins),
            extracurrency: Et,
            last: st,
            state: pt
          };
        },
        async get(rt, et) {
          if (typeof rt != "string") throw new Error("Method name must be a string for TonClient4 provider");
          let st = _;
          st === null && (st = (await d.getLastBlock()).last.seqno);
          let pt = await d.runMethod(st, $, rt, et);
          if (pt.exitCode !== 0 && pt.exitCode !== 1) throw Error("Exit code: " + pt.exitCode);
          return {
            stack: new core_1$j.TupleReader(pt.result)
          };
        },
        async external(rt) {
          let et = await d.getLastBlock(), st = null;
          j && (await d.getAccountLite(et.last.seqno, $)).account.state.type !== "active" && (st = j);
          const pt = (0, core_1$j.external)({
            to: $,
            init: st,
            body: rt
          });
          let Et = (0, core_1$j.beginCell)().store((0, core_1$j.storeMessage)(pt)).endCell().toBoc();
          await d.sendMessage(Et);
        },
        async internal(rt, et) {
          let st = await d.getLastBlock(), pt = null;
          j && (await d.getAccountLite(st.last.seqno, $)).account.state.type !== "active" && (pt = j);
          let Et = true;
          et.bounce !== null && et.bounce !== void 0 && (Et = et.bounce);
          let Bt;
          typeof et.value == "string" ? Bt = (0, core_1$j.toNano)(et.value) : Bt = et.value;
          let St = null;
          typeof et.body == "string" ? St = (0, core_1$j.comment)(et.body) : et.body && (St = et.body), await rt.send({
            to: $,
            value: Bt,
            extracurrency: et.extracurrency,
            bounce: Et,
            sendMode: et.sendMode,
            init: pt,
            body: St
          });
        },
        open(rt) {
          return (0, core_1$j.openContract)(rt, (et) => createProvider(d, _, et.address, et.init ?? null));
        },
        async getTransactions(rt, et, st, pt) {
          const Et = typeof pt == "number";
          if (Et && pt <= 0) return [];
          let Bt = [];
          do {
            const St = await d.getAccountTransactions(rt, et, st), $t = St[0].tx, [kt, Tt] = [
              $t.lt,
              $t.hash()
            ];
            if (Bt.length > 0 && kt === et && Tt.equals(st) && St.shift(), St.length === 0) break;
            const It = St[St.length - 1].tx, [jt, Dt] = [
              It.lt,
              It.hash()
            ];
            if (jt === et && Dt.equals(st)) break;
            Bt.push(...St.map((Ot) => Ot.tx)), et = jt, st = Dt;
          } while (Et && Bt.length < pt);
          return Et && (Bt = Bt.slice(0, pt)), Bt;
        }
      };
    }
    const lastBlockCodec = zod_1.z.object({
      last: zod_1.z.object({
        seqno: zod_1.z.number(),
        shard: zod_1.z.string(),
        workchain: zod_1.z.number(),
        fileHash: zod_1.z.string(),
        rootHash: zod_1.z.string()
      }),
      init: zod_1.z.object({
        fileHash: zod_1.z.string(),
        rootHash: zod_1.z.string()
      }),
      stateRootHash: zod_1.z.string(),
      now: zod_1.z.number()
    }), blockCodec = zod_1.z.union([
      zod_1.z.object({
        exist: zod_1.z.literal(false)
      }),
      zod_1.z.object({
        exist: zod_1.z.literal(true),
        block: zod_1.z.object({
          shards: zod_1.z.array(zod_1.z.object({
            workchain: zod_1.z.number(),
            seqno: zod_1.z.number(),
            shard: zod_1.z.string(),
            rootHash: zod_1.z.string(),
            fileHash: zod_1.z.string(),
            transactions: zod_1.z.array(zod_1.z.object({
              account: zod_1.z.string(),
              hash: zod_1.z.string(),
              lt: zod_1.z.string()
            }))
          }))
        })
      })
    ]), storageStatCodec = zod_1.z.object({
      lastPaid: zod_1.z.number(),
      duePayment: zod_1.z.union([
        zod_1.z.null(),
        zod_1.z.string()
      ]),
      used: zod_1.z.object({
        bits: zod_1.z.number(),
        cells: zod_1.z.number(),
        publicCells: zod_1.z.number()
      })
    }), accountCodec = zod_1.z.object({
      account: zod_1.z.object({
        state: zod_1.z.union([
          zod_1.z.object({
            type: zod_1.z.literal("uninit")
          }),
          zod_1.z.object({
            type: zod_1.z.literal("active"),
            code: zod_1.z.union([
              zod_1.z.string(),
              zod_1.z.null()
            ]),
            data: zod_1.z.union([
              zod_1.z.string(),
              zod_1.z.null()
            ])
          }),
          zod_1.z.object({
            type: zod_1.z.literal("frozen"),
            stateHash: zod_1.z.string()
          })
        ]),
        balance: zod_1.z.object({
          coins: zod_1.z.string(),
          currencies: zod_1.z.record(zod_1.z.string(), zod_1.z.string())
        }),
        last: zod_1.z.union([
          zod_1.z.null(),
          zod_1.z.object({
            lt: zod_1.z.string(),
            hash: zod_1.z.string()
          })
        ]),
        storageStat: zod_1.z.union([
          zod_1.z.null(),
          storageStatCodec
        ])
      }),
      block: zod_1.z.object({
        workchain: zod_1.z.number(),
        seqno: zod_1.z.number(),
        shard: zod_1.z.string(),
        rootHash: zod_1.z.string(),
        fileHash: zod_1.z.string()
      })
    }), accountLiteCodec = zod_1.z.object({
      account: zod_1.z.object({
        state: zod_1.z.union([
          zod_1.z.object({
            type: zod_1.z.literal("uninit")
          }),
          zod_1.z.object({
            type: zod_1.z.literal("active"),
            codeHash: zod_1.z.string(),
            dataHash: zod_1.z.string()
          }),
          zod_1.z.object({
            type: zod_1.z.literal("frozen"),
            stateHash: zod_1.z.string()
          })
        ]),
        balance: zod_1.z.object({
          coins: zod_1.z.string(),
          currencies: zod_1.z.record(zod_1.z.string(), zod_1.z.string())
        }),
        last: zod_1.z.union([
          zod_1.z.null(),
          zod_1.z.object({
            lt: zod_1.z.string(),
            hash: zod_1.z.string()
          })
        ]),
        storageStat: zod_1.z.union([
          zod_1.z.null(),
          storageStatCodec
        ])
      })
    }), changedCodec = zod_1.z.object({
      changed: zod_1.z.boolean(),
      block: zod_1.z.object({
        workchain: zod_1.z.number(),
        seqno: zod_1.z.number(),
        shard: zod_1.z.string(),
        rootHash: zod_1.z.string(),
        fileHash: zod_1.z.string()
      })
    }), runMethodCodec = zod_1.z.object({
      exitCode: zod_1.z.number(),
      resultRaw: zod_1.z.union([
        zod_1.z.string(),
        zod_1.z.null()
      ]),
      block: zod_1.z.object({
        workchain: zod_1.z.number(),
        seqno: zod_1.z.number(),
        shard: zod_1.z.string(),
        rootHash: zod_1.z.string(),
        fileHash: zod_1.z.string()
      }),
      shardBlock: zod_1.z.object({
        workchain: zod_1.z.number(),
        seqno: zod_1.z.number(),
        shard: zod_1.z.string(),
        rootHash: zod_1.z.string(),
        fileHash: zod_1.z.string()
      })
    }), configCodec = zod_1.z.object({
      config: zod_1.z.object({
        cell: zod_1.z.string(),
        address: zod_1.z.string(),
        globalBalance: zod_1.z.object({
          coins: zod_1.z.string()
        })
      })
    }), sendCodec = zod_1.z.object({
      status: zod_1.z.number()
    }), blocksCodec = zod_1.z.array(zod_1.z.object({
      workchain: zod_1.z.number(),
      seqno: zod_1.z.number(),
      shard: zod_1.z.string(),
      rootHash: zod_1.z.string(),
      fileHash: zod_1.z.string()
    })), transactionsCodec = zod_1.z.object({
      blocks: blocksCodec,
      boc: zod_1.z.string()
    }), parsedAddressExternalCodec = zod_1.z.object({
      bits: zod_1.z.number(),
      data: zod_1.z.string()
    }), parsedMessageInfoCodec = zod_1.z.union([
      zod_1.z.object({
        type: zod_1.z.literal("internal"),
        value: zod_1.z.string(),
        dest: zod_1.z.string(),
        src: zod_1.z.string(),
        bounced: zod_1.z.boolean(),
        bounce: zod_1.z.boolean(),
        ihrDisabled: zod_1.z.boolean(),
        createdAt: zod_1.z.number(),
        createdLt: zod_1.z.string(),
        fwdFee: zod_1.z.string(),
        ihrFee: zod_1.z.string()
      }),
      zod_1.z.object({
        type: zod_1.z.literal("external-in"),
        dest: zod_1.z.string(),
        src: zod_1.z.union([
          parsedAddressExternalCodec,
          zod_1.z.null()
        ]),
        importFee: zod_1.z.string()
      }),
      zod_1.z.object({
        type: zod_1.z.literal("external-out"),
        dest: zod_1.z.union([
          parsedAddressExternalCodec,
          zod_1.z.null()
        ])
      })
    ]), parsedStateInitCodec = zod_1.z.object({
      splitDepth: zod_1.z.union([
        zod_1.z.number(),
        zod_1.z.null()
      ]),
      code: zod_1.z.union([
        zod_1.z.string(),
        zod_1.z.null()
      ]),
      data: zod_1.z.union([
        zod_1.z.string(),
        zod_1.z.null()
      ]),
      special: zod_1.z.union([
        zod_1.z.object({
          tick: zod_1.z.boolean(),
          tock: zod_1.z.boolean()
        }),
        zod_1.z.null()
      ])
    }), parsedMessageCodec = zod_1.z.object({
      body: zod_1.z.string(),
      info: parsedMessageInfoCodec,
      init: zod_1.z.union([
        parsedStateInitCodec,
        zod_1.z.null()
      ])
    }), accountStatusCodec = zod_1.z.union([
      zod_1.z.literal("uninitialized"),
      zod_1.z.literal("frozen"),
      zod_1.z.literal("active"),
      zod_1.z.literal("non-existing")
    ]), txBodyCodec = zod_1.z.union([
      zod_1.z.object({
        type: zod_1.z.literal("comment"),
        comment: zod_1.z.string()
      }),
      zod_1.z.object({
        type: zod_1.z.literal("payload"),
        cell: zod_1.z.string()
      })
    ]), parsedOperationItemCodec = zod_1.z.union([
      zod_1.z.object({
        kind: zod_1.z.literal("ton"),
        amount: zod_1.z.string()
      }),
      zod_1.z.object({
        kind: zod_1.z.literal("token"),
        amount: zod_1.z.string()
      })
    ]), supportedMessageTypeCodec = zod_1.z.union([
      zod_1.z.literal("jetton::excesses"),
      zod_1.z.literal("jetton::transfer"),
      zod_1.z.literal("jetton::transfer_notification"),
      zod_1.z.literal("deposit"),
      zod_1.z.literal("deposit::ok"),
      zod_1.z.literal("withdraw"),
      zod_1.z.literal("withdraw::all"),
      zod_1.z.literal("withdraw::delayed"),
      zod_1.z.literal("withdraw::ok"),
      zod_1.z.literal("airdrop")
    ]), opCodec = zod_1.z.object({
      type: supportedMessageTypeCodec,
      options: zod_1.z.optional(zod_1.z.record(zod_1.z.string()))
    }), parsedOperationCodec = zod_1.z.object({
      address: zod_1.z.string(),
      comment: zod_1.z.optional(zod_1.z.string()),
      items: zod_1.z.array(parsedOperationItemCodec),
      op: zod_1.z.optional(opCodec)
    }), parsedTransactionCodec = zod_1.z.object({
      address: zod_1.z.string(),
      lt: zod_1.z.string(),
      hash: zod_1.z.string(),
      prevTransaction: zod_1.z.object({
        lt: zod_1.z.string(),
        hash: zod_1.z.string()
      }),
      time: zod_1.z.number(),
      outMessagesCount: zod_1.z.number(),
      oldStatus: accountStatusCodec,
      newStatus: accountStatusCodec,
      fees: zod_1.z.string(),
      update: zod_1.z.object({
        oldHash: zod_1.z.string(),
        newHash: zod_1.z.string()
      }),
      inMessage: zod_1.z.union([
        parsedMessageCodec,
        zod_1.z.null()
      ]),
      outMessages: zod_1.z.array(parsedMessageCodec),
      parsed: zod_1.z.object({
        seqno: zod_1.z.union([
          zod_1.z.number(),
          zod_1.z.null()
        ]),
        body: zod_1.z.union([
          txBodyCodec,
          zod_1.z.null()
        ]),
        status: zod_1.z.union([
          zod_1.z.literal("success"),
          zod_1.z.literal("failed"),
          zod_1.z.literal("pending")
        ]),
        dest: zod_1.z.union([
          zod_1.z.string(),
          zod_1.z.null()
        ]),
        kind: zod_1.z.union([
          zod_1.z.literal("out"),
          zod_1.z.literal("in")
        ]),
        amount: zod_1.z.string(),
        resolvedAddress: zod_1.z.string(),
        bounced: zod_1.z.boolean(),
        mentioned: zod_1.z.array(zod_1.z.string())
      }),
      operation: parsedOperationCodec
    }), parsedTransactionsCodec = zod_1.z.object({
      blocks: blocksCodec,
      transactions: zod_1.z.array(parsedTransactionCodec)
    });
    var WalletContractV1R1$1 = {}, createWalletTransfer = {}, WalletContractV5Beta$1 = {}, WalletV5BetaWalletId = {};
    Object.defineProperty(WalletV5BetaWalletId, "__esModule", {
      value: true
    });
    WalletV5BetaWalletId.loadWalletIdV5Beta = loadWalletIdV5Beta;
    WalletV5BetaWalletId.storeWalletIdV5Beta = storeWalletIdV5Beta;
    const core_1$i = dist$2, walletV5BetaVersionsSerialisation = {
      v5: 0
    };
    function loadWalletIdV5Beta(d) {
      var _a3;
      const _ = new core_1$i.BitReader(new core_1$i.BitString(typeof d == "bigint" ? Buffer.from(d.toString(16), "hex") : d instanceof core_1$i.Slice ? d.loadBuffer(10) : d, 0, 80)), $ = _.loadInt(32), j = _.loadInt(8), rt = _.loadUint(8), et = _.loadUint(32), st = (_a3 = Object.entries(walletV5BetaVersionsSerialisation).find(([pt, Et]) => Et === rt)) == null ? void 0 : _a3[0];
      if (st === void 0) throw new Error(`Can't deserialize walletId: unknown wallet version ${rt}`);
      return {
        networkGlobalId: $,
        workchain: j,
        walletVersion: st,
        subwalletNumber: et
      };
    }
    function storeWalletIdV5Beta(d) {
      return (_) => {
        _.storeInt(d.networkGlobalId, 32), _.storeInt(d.workchain, 8), _.storeUint(walletV5BetaVersionsSerialisation[d.walletVersion], 8), _.storeUint(d.subwalletNumber, 32);
      };
    }
    var hasRequiredWalletContractV5Beta;
    function requireWalletContractV5Beta() {
      if (hasRequiredWalletContractV5Beta) return WalletContractV5Beta$1;
      hasRequiredWalletContractV5Beta = 1, Object.defineProperty(WalletContractV5Beta$1, "__esModule", {
        value: true
      }), WalletContractV5Beta$1.WalletContractV5Beta = void 0;
      const d = dist$2, _ = requireCreateWalletTransfer(), $ = WalletV5BetaWalletId;
      class j {
        static create(et) {
          var _a3, _b2, _c2, _d2;
          const st = {
            networkGlobalId: ((_a3 = et.walletId) == null ? void 0 : _a3.networkGlobalId) ?? -239,
            workchain: ((_b2 = et == null ? void 0 : et.walletId) == null ? void 0 : _b2.workchain) ?? 0,
            subwalletNumber: ((_c2 = et == null ? void 0 : et.walletId) == null ? void 0 : _c2.subwalletNumber) ?? 0,
            walletVersion: ((_d2 = et == null ? void 0 : et.walletId) == null ? void 0 : _d2.walletVersion) ?? "v5"
          };
          return new j(st, et.publicKey);
        }
        constructor(et, st) {
          this.walletId = et, this.publicKey = st, this.walletId = et;
          let pt = d.Cell.fromBoc(Buffer.from("te6cckEBAQEAIwAIQgLkzzsvTG1qYeoPK1RH0mZ4WyavNjfbLe7mvNGqgm80Eg3NjhE=", "base64"))[0], Et = (0, d.beginCell)().storeInt(0, 33).store((0, $.storeWalletIdV5Beta)(this.walletId)).storeBuffer(this.publicKey, 32).storeBit(0).endCell();
          this.init = {
            code: pt,
            data: Et
          }, this.address = (0, d.contractAddress)(this.walletId.workchain, {
            code: pt,
            data: Et
          });
        }
        async getBalance(et) {
          return (await et.getState()).balance;
        }
        async getSeqno(et) {
          return (await et.getState()).state.type === "active" ? (await et.get("seqno", [])).stack.readNumber() : 0;
        }
        async getExtensions(et) {
          return (await et.getState()).state.type === "active" ? (await et.get("get_extensions", [])).stack.readCellOpt() : null;
        }
        async getExtensionsArray(et) {
          const st = await this.getExtensions(et);
          if (!st) return [];
          const pt = d.Dictionary.loadDirect(d.Dictionary.Keys.BigUint(256), d.Dictionary.Values.BigInt(8), st);
          return pt.keys().map((Et) => {
            const Bt = pt.get(Et), St = Et ^ Bt + 1n;
            return d.Address.parseRaw(`${Bt}:${St.toString(16).padStart(64, "0")}`);
          });
        }
        async getIsSecretKeyAuthEnabled(et) {
          return (await et.get("get_is_signature_auth_allowed", [])).stack.readNumber() !== 0;
        }
        async send(et, st) {
          await et.external(st);
        }
        async sendTransfer(et, st) {
          const pt = await this.createTransfer(st);
          await this.send(et, pt);
        }
        async sendAddExtension(et, st) {
          const pt = await this.createAddExtension(st);
          await this.send(et, pt);
        }
        async sendRemoveExtension(et, st) {
          const pt = await this.createRemoveExtension(st);
          await this.send(et, pt);
        }
        async sendActionsBatch(et, st) {
          const pt = await this.createRequest(st);
          await this.send(et, pt);
        }
        createActions(et) {
          return et.messages.map((pt) => ({
            type: "sendMsg",
            mode: et.sendMode,
            outMsg: pt
          }));
        }
        createTransfer(et) {
          return this.createRequest({
            ...et,
            actions: this.createActions({
              messages: et.messages,
              sendMode: et.sendMode
            })
          });
        }
        createAddExtension(et) {
          return this.createRequest({
            ...et,
            actions: [
              {
                type: "addExtension",
                address: et.extensionAddress
              }
            ]
          });
        }
        createRemoveExtension(et) {
          return this.createRequest({
            ...et,
            actions: [
              {
                type: "removeExtension",
                address: et.extensionAddress
              }
            ]
          });
        }
        createRequest(et) {
          return et.authType === "extension" ? (0, _.createWalletTransferV5Beta)(et) : (0, _.createWalletTransferV5Beta)({
            ...et,
            walletId: (0, $.storeWalletIdV5Beta)(this.walletId)
          });
        }
        sender(et, st) {
          return {
            send: async (pt) => {
              let Et = await this.getSeqno(et), Bt = this.createTransfer({
                seqno: Et,
                secretKey: st,
                sendMode: pt.sendMode ?? d.SendMode.PAY_GAS_SEPARATELY + d.SendMode.IGNORE_ERRORS,
                messages: [
                  (0, d.internal)({
                    to: pt.to,
                    value: pt.value,
                    extracurrency: pt.extracurrency,
                    init: pt.init,
                    body: pt.body,
                    bounce: pt.bounce
                  })
                ]
              });
              await this.send(et, Bt);
            }
          };
        }
      }
      return WalletContractV5Beta$1.WalletContractV5Beta = j, j.OpCodes = {
        auth_extension: 1702392942,
        auth_signed_external: 1936287598,
        auth_signed_internal: 1936289396
      }, WalletContractV5Beta$1;
    }
    var WalletV5BetaActions = {}, WalletV5OutActions = {};
    Object.defineProperty(WalletV5OutActions, "__esModule", {
      value: true
    });
    WalletV5OutActions.isOutActionExtended = isOutActionExtended;
    WalletV5OutActions.isOutActionBasic = isOutActionBasic;
    function isOutActionExtended(d) {
      return d.type === "setIsPublicKeyEnabled" || d.type === "addExtension" || d.type === "removeExtension";
    }
    function isOutActionBasic(d) {
      return !isOutActionExtended(d);
    }
    Object.defineProperty(WalletV5BetaActions, "__esModule", {
      value: true
    });
    WalletV5BetaActions.storeOutActionExtendedV5Beta = storeOutActionExtendedV5Beta;
    WalletV5BetaActions.loadOutActionV5BetaExtended = loadOutActionV5BetaExtended;
    WalletV5BetaActions.storeOutListExtendedV5Beta = storeOutListExtendedV5Beta;
    WalletV5BetaActions.loadOutListExtendedV5Beta = loadOutListExtendedV5Beta;
    const core_1$h = dist$2, WalletV5OutActions_1$1 = WalletV5OutActions, outActionSetIsPublicKeyEnabledTag$1 = 550222170;
    function storeOutActionSetIsPublicKeyEnabled$1(d) {
      return (_) => {
        _.storeUint(outActionSetIsPublicKeyEnabledTag$1, 32).storeUint(d.isEnabled ? 1 : 0, 1);
      };
    }
    const outActionAddExtensionTag$1 = 474012575;
    function storeOutActionAddExtension$1(d) {
      return (_) => {
        _.storeUint(outActionAddExtensionTag$1, 32).storeAddress(d.address);
      };
    }
    const outActionRemoveExtensionTag$1 = 1588524196;
    function storeOutActionRemoveExtension$1(d) {
      return (_) => {
        _.storeUint(outActionRemoveExtensionTag$1, 32).storeAddress(d.address);
      };
    }
    function storeOutActionExtendedV5Beta(d) {
      switch (d.type) {
        case "setIsPublicKeyEnabled":
          return storeOutActionSetIsPublicKeyEnabled$1(d);
        case "addExtension":
          return storeOutActionAddExtension$1(d);
        case "removeExtension":
          return storeOutActionRemoveExtension$1(d);
        default:
          throw new Error("Unknown action type" + (d == null ? void 0 : d.type));
      }
    }
    function loadOutActionV5BetaExtended(d) {
      const _ = d.loadUint(32);
      switch (_) {
        case outActionSetIsPublicKeyEnabledTag$1:
          return {
            type: "setIsPublicKeyEnabled",
            isEnabled: !!d.loadUint(1)
          };
        case outActionAddExtensionTag$1:
          return {
            type: "addExtension",
            address: d.loadAddress()
          };
        case outActionRemoveExtensionTag$1:
          return {
            type: "removeExtension",
            address: d.loadAddress()
          };
        default:
          throw new Error(`Unknown extended out action tag 0x${_.toString(16)}`);
      }
    }
    function storeOutListExtendedV5Beta(d) {
      const [_, ...$] = d;
      if (!_ || !(0, WalletV5OutActions_1$1.isOutActionExtended)(_)) {
        if (d.some(WalletV5OutActions_1$1.isOutActionExtended)) throw new Error("Can't serialize actions list: all extended actions must be placed before out actions");
        return (j) => {
          j.storeUint(0, 1).storeRef((0, core_1$h.beginCell)().store((0, core_1$h.storeOutList)(d)).endCell());
        };
      }
      return (j) => {
        j.storeUint(1, 1).store(storeOutActionExtendedV5Beta(_)).storeRef((0, core_1$h.beginCell)().store(storeOutListExtendedV5Beta($)).endCell());
      };
    }
    function loadOutListExtendedV5Beta(d) {
      const _ = [];
      for (; d.loadUint(1); ) {
        const j = loadOutActionV5BetaExtended(d);
        _.push(j), d = d.loadRef().beginParse();
      }
      const $ = (0, core_1$h.loadOutList)(d.loadRef().beginParse());
      if ($.some((j) => j.type === "setCode")) throw new Error("Can't deserialize actions list: only sendMsg actions are allowed for wallet v5");
      return _.concat($);
    }
    var singer = {};
    Object.defineProperty(singer, "__esModule", {
      value: true
    });
    singer.signPayload = signPayload;
    const crypto_1$2 = requireDist();
    function signPayload(d, _, $) {
      return "secretKey" in d ? $((0, crypto_1$2.sign)(_.endCell().hash(), d.secretKey), _) : d.signer(_.endCell()).then((j) => $(j, _));
    }
    var WalletContractV5R1$1 = {}, WalletV5R1WalletId = {};
    Object.defineProperty(WalletV5R1WalletId, "__esModule", {
      value: true
    });
    WalletV5R1WalletId.isWalletIdV5R1ClientContext = isWalletIdV5R1ClientContext;
    WalletV5R1WalletId.loadWalletIdV5R1 = loadWalletIdV5R1;
    WalletV5R1WalletId.storeWalletIdV5R1 = storeWalletIdV5R1;
    const core_1$g = dist$2;
    function isWalletIdV5R1ClientContext(d) {
      return typeof d != "number";
    }
    const walletV5R1VersionsSerialisation = {
      v5r1: 0
    };
    function loadWalletIdV5R1(d, _) {
      var _a3;
      const $ = new core_1$g.BitReader(new core_1$g.BitString(typeof d == "bigint" ? Buffer.from(d.toString(16), "hex") : d instanceof core_1$g.Slice ? d.loadBuffer(4) : d, 0, 32)).loadInt(32), j = BigInt($) ^ BigInt(_), rt = (0, core_1$g.beginCell)().storeInt(j, 32).endCell().beginParse();
      if (rt.loadUint(1)) {
        const st = rt.loadInt(8), pt = rt.loadUint(8), Et = rt.loadUint(15), Bt = (_a3 = Object.entries(walletV5R1VersionsSerialisation).find(([St, $t]) => $t === pt)) == null ? void 0 : _a3[0];
        if (Bt === void 0) throw new Error(`Can't deserialize walletId: unknown wallet version ${pt}`);
        return {
          networkGlobalId: _,
          context: {
            walletVersion: Bt,
            workchain: st,
            subwalletNumber: Et
          }
        };
      } else {
        const st = rt.loadUint(31);
        return {
          networkGlobalId: _,
          context: st
        };
      }
    }
    function storeWalletIdV5R1(d) {
      return (_) => {
        let $;
        return isWalletIdV5R1ClientContext(d.context) ? $ = (0, core_1$g.beginCell)().storeUint(1, 1).storeInt(d.context.workchain, 8).storeUint(walletV5R1VersionsSerialisation[d.context.walletVersion], 8).storeUint(d.context.subwalletNumber, 15).endCell().beginParse().loadInt(32) : $ = (0, core_1$g.beginCell)().storeUint(0, 1).storeUint(d.context, 31).endCell().beginParse().loadInt(32), _.storeInt(BigInt(d.networkGlobalId) ^ BigInt($), 32);
      };
    }
    var hasRequiredWalletContractV5R1;
    function requireWalletContractV5R1() {
      if (hasRequiredWalletContractV5R1) return WalletContractV5R1$1;
      hasRequiredWalletContractV5R1 = 1, Object.defineProperty(WalletContractV5R1$1, "__esModule", {
        value: true
      }), WalletContractV5R1$1.WalletContractV5R1 = void 0;
      const d = dist$2, _ = requireCreateWalletTransfer(), $ = WalletV5R1WalletId;
      class j {
        static create(et) {
          var _a3, _b2, _c2;
          let st = 0;
          return "workchain" in et && et.workchain != null && (st = et.workchain), ((_a3 = et.walletId) == null ? void 0 : _a3.context) && (0, $.isWalletIdV5R1ClientContext)(et.walletId.context) && et.walletId.context.workchain != null && (st = et.walletId.context.workchain), new j(st, et.publicKey, {
            networkGlobalId: ((_b2 = et.walletId) == null ? void 0 : _b2.networkGlobalId) ?? -239,
            context: ((_c2 = et.walletId) == null ? void 0 : _c2.context) ?? {
              workchain: 0,
              walletVersion: "v5r1",
              subwalletNumber: 0
            }
          });
        }
        constructor(et, st, pt) {
          this.publicKey = st, this.walletId = pt, this.walletId = pt;
          let Et = d.Cell.fromBoc(Buffer.from("b5ee9c7241021401000281000114ff00f4a413f4bcf2c80b01020120020d020148030402dcd020d749c120915b8f6320d70b1f2082106578746ebd21821073696e74bdb0925f03e082106578746eba8eb48020d72101d074d721fa4030fa44f828fa443058bd915be0ed44d0810141d721f4058307f40e6fa1319130e18040d721707fdb3ce03120d749810280b99130e070e2100f020120050c020120060902016e07080019adce76a2684020eb90eb85ffc00019af1df6a2684010eb90eb858fc00201480a0b0017b325fb51341c75c875c2c7e00011b262fb513435c280200019be5f0f6a2684080a0eb90fa02c0102f20e011e20d70b1f82107369676ebaf2e08a7f0f01e68ef0eda2edfb218308d722028308d723208020d721d31fd31fd31fed44d0d200d31f20d31fd3ffd70a000af90140ccf9109a28945f0adb31e1f2c087df02b35007b0f2d0845125baf2e0855036baf2e086f823bbf2d0882292f800de01a47fc8ca00cb1f01cf16c9ed542092f80fde70db3cd81003f6eda2edfb02f404216e926c218e4c0221d73930709421c700b38e2d01d72820761e436c20d749c008f2e09320d74ac002f2e09320d71d06c712c2005230b0f2d089d74cd7393001a4e86c128407bbf2e093d74ac000f2e093ed55e2d20001c000915be0ebd72c08142091709601d72c081c12e25210b1e30f20d74a111213009601fa4001fa44f828fa443058baf2e091ed44d0810141d718f405049d7fc8ca0040048307f453f2e08b8e14038307f45bf2e08c22d70a00216e01b3b0f2d090e2c85003cf1612f400c9ed54007230d72c08248e2d21f2e092d200ed44d0d2005113baf2d08f54503091319c01810140d721d70a00f2e08ee2c8ca0058cf16c9ed5493f2c08de20010935bdb31e1d74cd0b4d6c35e", "hex"))[0], Bt = (0, d.beginCell)().storeUint(1, 1).storeUint(0, 32).store((0, $.storeWalletIdV5R1)(this.walletId)).storeBuffer(this.publicKey, 32).storeBit(0).endCell();
          this.init = {
            code: Et,
            data: Bt
          }, this.address = (0, d.contractAddress)(et, {
            code: Et,
            data: Bt
          });
        }
        async getBalance(et) {
          return (await et.getState()).balance;
        }
        async getSeqno(et) {
          return (await et.getState()).state.type === "active" ? (await et.get("seqno", [])).stack.readNumber() : 0;
        }
        async getExtensions(et) {
          return (await et.getState()).state.type === "active" ? (await et.get("get_extensions", [])).stack.readCellOpt() : null;
        }
        async getExtensionsArray(et) {
          const st = await this.getExtensions(et);
          return st ? d.Dictionary.loadDirect(d.Dictionary.Keys.BigUint(256), d.Dictionary.Values.BigInt(1), st).keys().map((Et) => {
            const Bt = this.address.workChain;
            return d.Address.parseRaw(`${Bt}:${Et.toString(16).padStart(64, "0")}`);
          }) : [];
        }
        async getIsSecretKeyAuthEnabled(et) {
          return (await et.get("is_signature_allowed", [])).stack.readBoolean();
        }
        async send(et, st) {
          await et.external(st);
        }
        async sendTransfer(et, st) {
          const pt = await this.createTransfer(st);
          await this.send(et, pt);
        }
        async sendAddExtension(et, st) {
          const pt = await this.createAddExtension(st);
          await this.send(et, pt);
        }
        async sendRemoveExtension(et, st) {
          const pt = await this.createRemoveExtension(st);
          await this.send(et, pt);
        }
        createActions(et) {
          return et.messages.map((pt) => ({
            type: "sendMsg",
            mode: et.sendMode,
            outMsg: pt
          }));
        }
        createTransfer(et) {
          return this.createRequest({
            actions: this.createActions({
              messages: et.messages,
              sendMode: et.sendMode
            }),
            ...et
          });
        }
        createAddExtension(et) {
          return this.createRequest({
            actions: [
              {
                type: "addExtension",
                address: et.extensionAddress
              }
            ],
            ...et
          });
        }
        createRemoveExtension(et) {
          return this.createRequest({
            actions: [
              {
                type: "removeExtension",
                address: et.extensionAddress
              }
            ],
            ...et
          });
        }
        createRequest(et) {
          return et.authType === "extension" ? (0, _.createWalletTransferV5R1)(et) : (0, _.createWalletTransferV5R1)({
            ...et,
            walletId: (0, $.storeWalletIdV5R1)(this.walletId)
          });
        }
        sender(et, st) {
          return {
            send: async (pt) => {
              let Et = await this.getSeqno(et), Bt = this.createTransfer({
                seqno: Et,
                secretKey: st,
                sendMode: pt.sendMode ?? d.SendMode.PAY_GAS_SEPARATELY + d.SendMode.IGNORE_ERRORS,
                messages: [
                  (0, d.internal)({
                    to: pt.to,
                    value: pt.value,
                    extracurrency: pt.extracurrency,
                    init: pt.init,
                    body: pt.body,
                    bounce: pt.bounce
                  })
                ]
              });
              await this.send(et, Bt);
            }
          };
        }
      }
      return WalletContractV5R1$1.WalletContractV5R1 = j, j.OpCodes = {
        auth_extension: 1702392942,
        auth_signed_external: 1936287598,
        auth_signed_internal: 1936289396
      }, WalletContractV5R1$1;
    }
    var WalletV5R1Actions = {};
    Object.defineProperty(WalletV5R1Actions, "__esModule", {
      value: true
    });
    WalletV5R1Actions.storeOutActionExtendedV5R1 = storeOutActionExtendedV5R1;
    WalletV5R1Actions.loadOutActionExtendedV5R1 = loadOutActionExtendedV5R1;
    WalletV5R1Actions.storeOutListExtendedV5R1 = storeOutListExtendedV5R1;
    WalletV5R1Actions.loadOutListExtendedV5R1 = loadOutListExtendedV5R1;
    WalletV5R1Actions.toSafeV5R1SendMode = toSafeV5R1SendMode;
    WalletV5R1Actions.patchV5R1ActionsSendMode = patchV5R1ActionsSendMode;
    const core_1$f = dist$2, WalletV5OutActions_1 = WalletV5OutActions, outActionSetIsPublicKeyEnabledTag = 4;
    function storeOutActionSetIsPublicKeyEnabled(d) {
      return (_) => {
        _.storeUint(outActionSetIsPublicKeyEnabledTag, 8).storeUint(d.isEnabled ? 1 : 0, 1);
      };
    }
    const outActionAddExtensionTag = 2;
    function storeOutActionAddExtension(d) {
      return (_) => {
        _.storeUint(outActionAddExtensionTag, 8).storeAddress(d.address);
      };
    }
    const outActionRemoveExtensionTag = 3;
    function storeOutActionRemoveExtension(d) {
      return (_) => {
        _.storeUint(outActionRemoveExtensionTag, 8).storeAddress(d.address);
      };
    }
    function storeOutActionExtendedV5R1(d) {
      switch (d.type) {
        case "setIsPublicKeyEnabled":
          return storeOutActionSetIsPublicKeyEnabled(d);
        case "addExtension":
          return storeOutActionAddExtension(d);
        case "removeExtension":
          return storeOutActionRemoveExtension(d);
        default:
          throw new Error("Unknown action type" + (d == null ? void 0 : d.type));
      }
    }
    function loadOutActionExtendedV5R1(d) {
      const _ = d.loadUint(8);
      switch (_) {
        case outActionSetIsPublicKeyEnabledTag:
          return {
            type: "setIsPublicKeyEnabled",
            isEnabled: !!d.loadUint(1)
          };
        case outActionAddExtensionTag:
          return {
            type: "addExtension",
            address: d.loadAddress()
          };
        case outActionRemoveExtensionTag:
          return {
            type: "removeExtension",
            address: d.loadAddress()
          };
        default:
          throw new Error(`Unknown extended out action tag 0x${_.toString(16)}`);
      }
    }
    function storeOutListExtendedV5R1(d) {
      const _ = d.filter(WalletV5OutActions_1.isOutActionExtended), $ = d.filter(WalletV5OutActions_1.isOutActionBasic);
      return (j) => {
        const rt = $.length ? (0, core_1$f.beginCell)().store((0, core_1$f.storeOutList)($.slice().reverse())) : null;
        if (j.storeMaybeRef(rt), _.length === 0) j.storeUint(0, 1);
        else {
          const [et, ...st] = _;
          j.storeUint(1, 1).store(storeOutActionExtendedV5R1(et)), st.length > 0 && j.storeRef(packExtendedActionsRec(st));
        }
      };
    }
    function packExtendedActionsRec(d) {
      const [_, ...$] = d;
      let j = (0, core_1$f.beginCell)().store(storeOutActionExtendedV5R1(_));
      return $.length > 0 && (j = j.storeRef(packExtendedActionsRec($))), j.endCell();
    }
    function loadOutListExtendedV5R1(d) {
      const _ = [], $ = d.loadMaybeRef();
      if ($) {
        const j = (0, core_1$f.loadOutList)($.beginParse());
        if (j.some((rt) => rt.type !== "sendMsg")) throw new Error("Can't deserialize actions list: only sendMsg actions are allowed for wallet v5r1");
        _.push(...j);
      }
      if (d.loadBoolean()) {
        const j = loadOutActionExtendedV5R1(d);
        _.push(j);
      }
      for (; d.remainingRefs > 0; ) {
        d = d.loadRef().beginParse();
        const j = loadOutActionExtendedV5R1(d);
        _.push(j);
      }
      return _;
    }
    function toSafeV5R1SendMode(d, _) {
      return _ === "internal" || _ === "extension" ? d : d | core_1$f.SendMode.IGNORE_ERRORS;
    }
    function patchV5R1ActionsSendMode(d, _) {
      return d.map(($) => $.type === "sendMsg" ? {
        ...$,
        mode: toSafeV5R1SendMode($.mode, _)
      } : $);
    }
    var hasRequiredCreateWalletTransfer;
    function requireCreateWalletTransfer() {
      if (hasRequiredCreateWalletTransfer) return createWalletTransfer;
      hasRequiredCreateWalletTransfer = 1, Object.defineProperty(createWalletTransfer, "__esModule", {
        value: true
      }), createWalletTransfer.createWalletTransferV1 = Bt, createWalletTransfer.createWalletTransferV2 = St, createWalletTransfer.createWalletTransferV3 = $t, createWalletTransfer.createWalletTransferV4 = kt, createWalletTransfer.createWalletTransferV5Beta = Tt, createWalletTransfer.createWalletTransferV5R1 = Pt;
      const d = dist$2, _ = requireDist(), $ = requireWalletContractV5Beta(), j = WalletV5BetaActions, rt = singer, et = requireWalletContractV5R1(), st = WalletV5R1Actions;
      function pt(It, jt) {
        return (0, d.beginCell)().storeBuffer(It).storeBuilder(jt).endCell();
      }
      function Et(It, jt) {
        return (0, d.beginCell)().storeBuilder(jt).storeBuffer(It).endCell();
      }
      function Bt(It) {
        let jt = (0, d.beginCell)().storeUint(It.seqno, 32);
        It.message && (jt.storeUint(It.sendMode, 8), jt.storeRef((0, d.beginCell)().store((0, d.storeMessageRelaxed)(It.message))));
        let Dt = (0, _.sign)(jt.endCell().hash(), It.secretKey);
        return (0, d.beginCell)().storeBuffer(Dt).storeBuilder(jt).endCell();
      }
      function St(It) {
        if (It.messages.length > 4) throw Error("Maximum number of messages in a single transfer is 4");
        let jt = (0, d.beginCell)().storeUint(It.seqno, 32);
        if (It.seqno === 0) for (let Ft = 0; Ft < 32; Ft++) jt.storeBit(1);
        else jt.storeUint(It.timeout || Math.floor(Date.now() / 1e3) + 60, 32);
        for (let Ft of It.messages) jt.storeUint(It.sendMode, 8), jt.storeRef((0, d.beginCell)().store((0, d.storeMessageRelaxed)(Ft)));
        let Dt = (0, _.sign)(jt.endCell().hash(), It.secretKey);
        return (0, d.beginCell)().storeBuffer(Dt).storeBuilder(jt).endCell();
      }
      function $t(It) {
        if (It.messages.length > 4) throw Error("Maximum number of messages in a single transfer is 4");
        let jt = (0, d.beginCell)().storeUint(It.walletId, 32);
        if (It.seqno === 0) for (let Dt = 0; Dt < 32; Dt++) jt.storeBit(1);
        else jt.storeUint(It.timeout || Math.floor(Date.now() / 1e3) + 60, 32);
        jt.storeUint(It.seqno, 32);
        for (let Dt of It.messages) jt.storeUint(It.sendMode, 8), jt.storeRef((0, d.beginCell)().store((0, d.storeMessageRelaxed)(Dt)));
        return (0, rt.signPayload)(It, jt, pt);
      }
      function kt(It) {
        if (It.messages.length > 4) throw Error("Maximum number of messages in a single transfer is 4");
        let jt = (0, d.beginCell)().storeUint(It.walletId, 32);
        if (It.seqno === 0) for (let Dt = 0; Dt < 32; Dt++) jt.storeBit(1);
        else jt.storeUint(It.timeout || Math.floor(Date.now() / 1e3) + 60, 32);
        jt.storeUint(It.seqno, 32), jt.storeUint(0, 8);
        for (let Dt of It.messages) jt.storeUint(It.sendMode, 8), jt.storeRef((0, d.beginCell)().store((0, d.storeMessageRelaxed)(Dt)));
        return (0, rt.signPayload)(It, jt, pt);
      }
      function Tt(It) {
        if (It.actions.length > 255) throw Error("Maximum number of OutActions in a single request is 255");
        if (It.authType === "extension") return (0, d.beginCell)().storeUint($.WalletContractV5Beta.OpCodes.auth_extension, 32).store((0, j.storeOutListExtendedV5Beta)(It.actions)).endCell();
        const jt = (0, d.beginCell)().storeUint(It.authType === "internal" ? $.WalletContractV5Beta.OpCodes.auth_signed_internal : $.WalletContractV5Beta.OpCodes.auth_signed_external, 32).store(It.walletId);
        if (It.seqno === 0) for (let Dt = 0; Dt < 32; Dt++) jt.storeBit(1);
        else jt.storeUint(It.timeout || Math.floor(Date.now() / 1e3) + 60, 32);
        return jt.storeUint(It.seqno, 32).store((0, j.storeOutListExtendedV5Beta)(It.actions)), (0, rt.signPayload)(It, jt, Et);
      }
      function Pt(It) {
        if (It.actions.length > 255) throw Error("Maximum number of OutActions in a single request is 255");
        if (It = {
          ...It
        }, It.authType === "extension") return (0, d.beginCell)().storeUint(et.WalletContractV5R1.OpCodes.auth_extension, 32).storeUint(It.queryId ?? 0, 64).store((0, st.storeOutListExtendedV5R1)(It.actions)).endCell();
        It.actions = (0, st.patchV5R1ActionsSendMode)(It.actions, It.authType);
        const jt = (0, d.beginCell)().storeUint(It.authType === "internal" ? et.WalletContractV5R1.OpCodes.auth_signed_internal : et.WalletContractV5R1.OpCodes.auth_signed_external, 32).store(It.walletId);
        if (It.seqno === 0) for (let Dt = 0; Dt < 32; Dt++) jt.storeBit(1);
        else jt.storeUint(It.timeout || Math.floor(Date.now() / 1e3) + 60, 32);
        return jt.storeUint(It.seqno, 32).store((0, st.storeOutListExtendedV5R1)(It.actions)), (0, rt.signPayload)(It, jt, Et);
      }
      return createWalletTransfer;
    }
    Object.defineProperty(WalletContractV1R1$1, "__esModule", {
      value: true
    });
    WalletContractV1R1$1.WalletContractV1R1 = void 0;
    const core_1$e = dist$2, createWalletTransfer_1$7 = requireCreateWalletTransfer();
    class WalletContractV1R1 {
      static create(_) {
        return new WalletContractV1R1(_.workchain, _.publicKey);
      }
      constructor(_, $) {
        this.workchain = _, this.publicKey = $;
        let j = core_1$e.Cell.fromBoc(Buffer.from("te6cckEBAQEARAAAhP8AIN2k8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVEH98Ik=", "base64"))[0], rt = (0, core_1$e.beginCell)().storeUint(0, 32).storeBuffer($).endCell();
        this.init = {
          code: j,
          data: rt
        }, this.address = (0, core_1$e.contractAddress)(_, {
          code: j,
          data: rt
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        let $ = await _.getState();
        return $.state.type === "active" ? core_1$e.Cell.fromBoc($.state.data)[0].beginParse().loadUint(32) : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        let $ = core_1$e.SendMode.PAY_GAS_SEPARATELY;
        return _.sendMode !== null && _.sendMode !== void 0 && ($ = _.sendMode), (0, createWalletTransfer_1$7.createWalletTransferV1)({
          seqno: _.seqno,
          sendMode: $,
          secretKey: _.secretKey,
          message: _.message
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              message: (0, core_1$e.internal)({
                to: j.to,
                value: j.value,
                extracurrency: j.extracurrency,
                init: j.init,
                body: j.body,
                bounce: j.bounce
              })
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV1R1$1.WalletContractV1R1 = WalletContractV1R1;
    var WalletContractV1R2$1 = {};
    Object.defineProperty(WalletContractV1R2$1, "__esModule", {
      value: true
    });
    WalletContractV1R2$1.WalletContractV1R2 = void 0;
    const core_1$d = dist$2, createWalletTransfer_1$6 = requireCreateWalletTransfer();
    class WalletContractV1R2 {
      static create(_) {
        return new WalletContractV1R2(_.workchain, _.publicKey);
      }
      constructor(_, $) {
        this.workchain = _, this.publicKey = $;
        let j = core_1$d.Cell.fromBoc(Buffer.from("te6cckEBAQEAUwAAov8AIN0gggFMl7qXMO1E0NcLH+Ck8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVNDieG8=", "base64"))[0], rt = (0, core_1$d.beginCell)().storeUint(0, 32).storeBuffer($).endCell();
        this.init = {
          code: j,
          data: rt
        }, this.address = (0, core_1$d.contractAddress)(_, {
          code: j,
          data: rt
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        let $ = core_1$d.SendMode.PAY_GAS_SEPARATELY;
        return _.sendMode !== null && _.sendMode !== void 0 && ($ = _.sendMode), (0, createWalletTransfer_1$6.createWalletTransferV1)({
          seqno: _.seqno,
          sendMode: $,
          secretKey: _.secretKey,
          message: _.message
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              message: (0, core_1$d.internal)({
                to: j.to,
                value: j.value,
                extracurrency: j.extracurrency,
                init: j.init,
                body: j.body,
                bounce: j.bounce
              })
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV1R2$1.WalletContractV1R2 = WalletContractV1R2;
    var WalletContractV1R3$1 = {};
    Object.defineProperty(WalletContractV1R3$1, "__esModule", {
      value: true
    });
    WalletContractV1R3$1.WalletContractV1R3 = void 0;
    const core_1$c = dist$2, createWalletTransfer_1$5 = requireCreateWalletTransfer();
    class WalletContractV1R3 {
      static create(_) {
        return new WalletContractV1R3(_.workchain, _.publicKey);
      }
      constructor(_, $) {
        this.workchain = _, this.publicKey = $;
        let j = core_1$c.Cell.fromBoc(Buffer.from("te6cckEBAQEAXwAAuv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVLW4bkI=", "base64"))[0], rt = (0, core_1$c.beginCell)().storeUint(0, 32).storeBuffer($).endCell();
        this.init = {
          code: j,
          data: rt
        }, this.address = (0, core_1$c.contractAddress)(_, {
          code: j,
          data: rt
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        let $ = core_1$c.SendMode.PAY_GAS_SEPARATELY;
        return _.sendMode !== null && _.sendMode !== void 0 && ($ = _.sendMode), (0, createWalletTransfer_1$5.createWalletTransferV1)({
          seqno: _.seqno,
          sendMode: $,
          secretKey: _.secretKey,
          message: _.message
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              message: (0, core_1$c.internal)({
                to: j.to,
                value: j.value,
                init: j.init,
                body: j.body,
                bounce: j.bounce
              })
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV1R3$1.WalletContractV1R3 = WalletContractV1R3;
    var WalletContractV2R1$1 = {};
    Object.defineProperty(WalletContractV2R1$1, "__esModule", {
      value: true
    });
    WalletContractV2R1$1.WalletContractV2R1 = void 0;
    const core_1$b = dist$2, createWalletTransfer_1$4 = requireCreateWalletTransfer();
    class WalletContractV2R1 {
      static create(_) {
        return new WalletContractV2R1(_.workchain, _.publicKey);
      }
      constructor(_, $) {
        this.workchain = _, this.publicKey = $;
        let j = core_1$b.Cell.fromBoc(Buffer.from("te6cckEBAQEAVwAAqv8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VShNwu2", "base64"))[0], rt = (0, core_1$b.beginCell)().storeUint(0, 32).storeBuffer($).endCell();
        this.init = {
          code: j,
          data: rt
        }, this.address = (0, core_1$b.contractAddress)(_, {
          code: j,
          data: rt
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        let $ = core_1$b.SendMode.PAY_GAS_SEPARATELY;
        return _.sendMode !== null && _.sendMode !== void 0 && ($ = _.sendMode), (0, createWalletTransfer_1$4.createWalletTransferV2)({
          seqno: _.seqno,
          sendMode: $,
          secretKey: _.secretKey,
          messages: _.messages,
          timeout: _.timeout
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              messages: [
                (0, core_1$b.internal)({
                  to: j.to,
                  value: j.value,
                  extracurrency: j.extracurrency,
                  init: j.init,
                  body: j.body,
                  bounce: j.bounce
                })
              ]
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV2R1$1.WalletContractV2R1 = WalletContractV2R1;
    var WalletContractV2R2$1 = {};
    Object.defineProperty(WalletContractV2R2$1, "__esModule", {
      value: true
    });
    WalletContractV2R2$1.WalletContractV2R2 = void 0;
    const core_1$a = dist$2, createWalletTransfer_1$3 = requireCreateWalletTransfer();
    class WalletContractV2R2 {
      static create(_) {
        return new WalletContractV2R2(_.workchain, _.publicKey);
      }
      constructor(_, $) {
        this.workchain = _, this.publicKey = $;
        let j = core_1$a.Cell.fromBoc(Buffer.from("te6cckEBAQEAYwAAwv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VQETNeh", "base64"))[0], rt = (0, core_1$a.beginCell)().storeUint(0, 32).storeBuffer($).endCell();
        this.init = {
          code: j,
          data: rt
        }, this.address = (0, core_1$a.contractAddress)(_, {
          code: j,
          data: rt
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        let $ = core_1$a.SendMode.PAY_GAS_SEPARATELY;
        return _.sendMode !== null && _.sendMode !== void 0 && ($ = _.sendMode), (0, createWalletTransfer_1$3.createWalletTransferV2)({
          seqno: _.seqno,
          sendMode: $,
          secretKey: _.secretKey,
          messages: _.messages,
          timeout: _.timeout
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              messages: [
                (0, core_1$a.internal)({
                  to: j.to,
                  value: j.value,
                  extracurrency: j.extracurrency,
                  init: j.init,
                  body: j.body,
                  bounce: j.bounce
                })
              ]
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV2R2$1.WalletContractV2R2 = WalletContractV2R2;
    var WalletContractV3R1$1 = {};
    Object.defineProperty(WalletContractV3R1$1, "__esModule", {
      value: true
    });
    WalletContractV3R1$1.WalletContractV3R1 = void 0;
    const core_1$9 = dist$2, createWalletTransfer_1$2 = requireCreateWalletTransfer();
    class WalletContractV3R1 {
      static create(_) {
        return new WalletContractV3R1(_.workchain, _.publicKey, _.walletId);
      }
      constructor(_, $, j) {
        this.workchain = _, this.publicKey = $, j != null ? this.walletId = j : this.walletId = 698983191 + _;
        let rt = core_1$9.Cell.fromBoc(Buffer.from("te6cckEBAQEAYgAAwP8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVD++buA=", "base64"))[0], et = (0, core_1$9.beginCell)().storeUint(0, 32).storeUint(this.walletId, 32).storeBuffer($).endCell();
        this.init = {
          code: rt,
          data: et
        }, this.address = (0, core_1$9.contractAddress)(_, {
          code: rt,
          data: et
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        return (0, createWalletTransfer_1$2.createWalletTransferV3)({
          ..._,
          sendMode: _.sendMode ?? core_1$9.SendMode.PAY_GAS_SEPARATELY,
          walletId: this.walletId
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              messages: [
                (0, core_1$9.internal)({
                  to: j.to,
                  value: j.value,
                  extracurrency: j.extracurrency,
                  init: j.init,
                  body: j.body,
                  bounce: j.bounce
                })
              ]
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV3R1$1.WalletContractV3R1 = WalletContractV3R1;
    var WalletContractV3R2$1 = {};
    Object.defineProperty(WalletContractV3R2$1, "__esModule", {
      value: true
    });
    WalletContractV3R2$1.WalletContractV3R2 = void 0;
    const core_1$8 = dist$2, createWalletTransfer_1$1 = requireCreateWalletTransfer();
    class WalletContractV3R2 {
      static create(_) {
        return new WalletContractV3R2(_.workchain, _.publicKey, _.walletId);
      }
      constructor(_, $, j) {
        this.workchain = _, this.publicKey = $, j != null ? this.walletId = j : this.walletId = 698983191 + _;
        let rt = core_1$8.Cell.fromBoc(Buffer.from("te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=", "base64"))[0], et = (0, core_1$8.beginCell)().storeUint(0, 32).storeUint(this.walletId, 32).storeBuffer($).endCell();
        this.init = {
          code: rt,
          data: et
        }, this.address = (0, core_1$8.contractAddress)(_, {
          code: rt,
          data: et
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        return (0, createWalletTransfer_1$1.createWalletTransferV3)({
          ..._,
          sendMode: _.sendMode ?? core_1$8.SendMode.PAY_GAS_SEPARATELY,
          walletId: this.walletId
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              messages: [
                (0, core_1$8.internal)({
                  to: j.to,
                  value: j.value,
                  extracurrency: j.extracurrency,
                  init: j.init,
                  body: j.body,
                  bounce: j.bounce
                })
              ]
            });
            await this.send(_, et);
          }
        };
      }
    }
    WalletContractV3R2$1.WalletContractV3R2 = WalletContractV3R2;
    var WalletContractV4$2 = {};
    Object.defineProperty(WalletContractV4$2, "__esModule", {
      value: true
    });
    WalletContractV4$2.WalletContractV4 = void 0;
    const core_1$7 = dist$2, createWalletTransfer_1 = requireCreateWalletTransfer();
    let WalletContractV4$1 = class io {
      static create(_) {
        return new io(_.workchain, _.publicKey, _.walletId);
      }
      constructor(_, $, j) {
        this.workchain = _, this.publicKey = $, j != null ? this.walletId = j : this.walletId = 698983191 + _;
        let rt = core_1$7.Cell.fromBoc(Buffer.from("te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA==", "base64"))[0], et = (0, core_1$7.beginCell)().storeUint(0, 32).storeUint(this.walletId, 32).storeBuffer(this.publicKey).storeBit(0).endCell();
        this.init = {
          code: rt,
          data: et
        }, this.address = (0, core_1$7.contractAddress)(_, {
          code: rt,
          data: et
        });
      }
      async getBalance(_) {
        return (await _.getState()).balance;
      }
      async getSeqno(_) {
        return (await _.getState()).state.type === "active" ? (await _.get("seqno", [])).stack.readNumber() : 0;
      }
      async send(_, $) {
        await _.external($);
      }
      async sendTransfer(_, $) {
        let j = this.createTransfer($);
        await this.send(_, j);
      }
      createTransfer(_) {
        return (0, createWalletTransfer_1.createWalletTransferV4)({
          ..._,
          sendMode: _.sendMode ?? core_1$7.SendMode.PAY_GAS_SEPARATELY,
          walletId: this.walletId
        });
      }
      sender(_, $) {
        return {
          send: async (j) => {
            let rt = await this.getSeqno(_), et = this.createTransfer({
              seqno: rt,
              secretKey: $,
              sendMode: j.sendMode,
              messages: [
                (0, core_1$7.internal)({
                  to: j.to,
                  value: j.value,
                  extracurrency: j.extracurrency,
                  init: j.init,
                  body: j.body,
                  bounce: j.bounce
                })
              ]
            });
            await this.send(_, et);
          }
        };
      }
    };
    WalletContractV4$2.WalletContractV4 = WalletContractV4$1;
    var WalletContractV5Beta = {};
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(j, rt, et, st) {
        st === void 0 && (st = et);
        var pt = Object.getOwnPropertyDescriptor(rt, et);
        (!pt || ("get" in pt ? !rt.__esModule : pt.writable || pt.configurable)) && (pt = {
          enumerable: true,
          get: function() {
            return rt[et];
          }
        }), Object.defineProperty(j, st, pt);
      } : function(j, rt, et, st) {
        st === void 0 && (st = et), j[st] = rt[et];
      }), $ = commonjsGlobal && commonjsGlobal.__exportStar || function(j, rt) {
        for (var et in j) et !== "default" && !Object.prototype.hasOwnProperty.call(rt, et) && _(rt, j, et);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), $(requireWalletContractV5Beta(), d), $(WalletV5BetaActions, d), $(WalletV5BetaWalletId, d);
    })(WalletContractV5Beta);
    var WalletContractV5R1 = {};
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(j, rt, et, st) {
        st === void 0 && (st = et);
        var pt = Object.getOwnPropertyDescriptor(rt, et);
        (!pt || ("get" in pt ? !rt.__esModule : pt.writable || pt.configurable)) && (pt = {
          enumerable: true,
          get: function() {
            return rt[et];
          }
        }), Object.defineProperty(j, st, pt);
      } : function(j, rt, et, st) {
        st === void 0 && (st = et), j[st] = rt[et];
      }), $ = commonjsGlobal && commonjsGlobal.__exportStar || function(j, rt) {
        for (var et in j) et !== "default" && !Object.prototype.hasOwnProperty.call(rt, et) && _(rt, j, et);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), $(requireWalletContractV5R1(), d), $(WalletV5R1Actions, d), $(WalletV5R1WalletId, d);
    })(WalletContractV5R1);
    var JettonMaster$1 = {};
    Object.defineProperty(JettonMaster$1, "__esModule", {
      value: true
    });
    JettonMaster$1.JettonMaster = void 0;
    const core_1$6 = dist$2;
    class JettonMaster {
      static create(_) {
        return new JettonMaster(_);
      }
      constructor(_) {
        this.address = _;
      }
      async getWalletAddress(_, $) {
        return (await _.get("get_wallet_address", [
          {
            type: "slice",
            cell: (0, core_1$6.beginCell)().storeAddress($).endCell()
          }
        ])).stack.readAddress();
      }
      async getJettonData(_) {
        let $ = await _.get("get_jetton_data", []), j = $.stack.readBigNumber(), rt = $.stack.readBoolean(), et = $.stack.readAddress(), st = $.stack.readCell(), pt = $.stack.readCell();
        return {
          totalSupply: j,
          mintable: rt,
          adminAddress: et,
          content: st,
          walletCode: pt
        };
      }
    }
    JettonMaster$1.JettonMaster = JettonMaster;
    var JettonWallet$3 = {};
    Object.defineProperty(JettonWallet$3, "__esModule", {
      value: true
    });
    JettonWallet$3.JettonWallet = void 0;
    let JettonWallet$2 = class oo {
      static create(_) {
        return new oo(_);
      }
      constructor(_) {
        this.address = _;
      }
      async getBalance(_) {
        return (await _.getState()).state.type !== "active" ? 0n : (await _.get("get_wallet_data", [])).stack.readBigNumber();
      }
    };
    JettonWallet$3.JettonWallet = JettonWallet$2;
    var MultisigOrder$1 = {};
    Object.defineProperty(MultisigOrder$1, "__esModule", {
      value: true
    });
    MultisigOrder$1.MultisigOrder = void 0;
    const crypto_1$1 = requireDist(), core_1$5 = dist$2;
    class MultisigOrder {
      constructor(_) {
        this.signatures = {}, this.payload = _;
      }
      static fromCell(_) {
        var _a3;
        let $ = _.beginParse(), j = (_a3 = $.loadMaybeRef()) == null ? void 0 : _a3.beginParse();
        const rt = $.asCell();
        let et = new MultisigOrder(rt);
        if (j) {
          for (; j.remainingBits > 0; ) {
            const st = j.loadBuffer(64), pt = j.loadUint(8);
            et.signatures[pt] = st, j.remainingRefs > 0 ? j = j.loadRef().asSlice() : j.skip(1);
          }
          j.endParse();
        }
        return et;
      }
      static fromPayload(_) {
        return new MultisigOrder(_);
      }
      addSignature(_, $, j) {
        const rt = this.payload.hash();
        if (!(0, crypto_1$1.signVerify)(rt, $, j.owners.get(_).slice(0, -1))) throw Error("invalid signature");
        this.signatures[_] = $;
      }
      sign(_, $) {
        const j = this.payload.hash();
        return this.signatures[_] = (0, crypto_1$1.sign)(j, $), j;
      }
      unionSignatures(_) {
        this.signatures = Object.assign({}, this.signatures, _.signatures);
      }
      clearSignatures() {
        this.signatures = {};
      }
      toCell(_) {
        let $ = (0, core_1$5.beginCell)().storeBit(0);
        for (const j in this.signatures) {
          const rt = this.signatures[j];
          $ = (0, core_1$5.beginCell)().storeBit(1).storeRef((0, core_1$5.beginCell)().storeBuffer(rt).storeUint(parseInt(j), 8).storeBuilder($).endCell());
        }
        return (0, core_1$5.beginCell)().storeUint(_, 8).storeBuilder($).storeBuilder(this.payload.asBuilder()).endCell();
      }
    }
    MultisigOrder$1.MultisigOrder = MultisigOrder;
    var MultisigOrderBuilder$1 = {};
    Object.defineProperty(MultisigOrderBuilder$1, "__esModule", {
      value: true
    });
    MultisigOrderBuilder$1.MultisigOrderBuilder = void 0;
    const core_1$4 = dist$2, MultisigOrder_1 = MultisigOrder$1;
    class MultisigOrderBuilder {
      constructor(_, $) {
        this.messages = (0, core_1$4.beginCell)(), this.queryId = 0n, this.walletId = _, this.queryOffset = $ || 7200;
      }
      addMessage(_, $) {
        if (this.messages.refs >= 4) throw Error("only 4 refs are allowed");
        this.updateQueryId(), this.messages.storeUint($, 8), this.messages.storeRef((0, core_1$4.beginCell)().store((0, core_1$4.storeMessageRelaxed)(_)).endCell());
      }
      clearMessages() {
        this.messages = (0, core_1$4.beginCell)();
      }
      build() {
        return MultisigOrder_1.MultisigOrder.fromPayload((0, core_1$4.beginCell)().storeUint(this.walletId, 32).storeUint(this.queryId, 64).storeBuilder(this.messages).endCell());
      }
      updateQueryId() {
        const _ = BigInt(Math.floor(Date.now() / 1e3 + this.queryOffset));
        this.queryId = _ << 32n;
      }
    }
    MultisigOrderBuilder$1.MultisigOrderBuilder = MultisigOrderBuilder;
    var MultisigWallet$1 = {};
    Object.defineProperty(MultisigWallet$1, "__esModule", {
      value: true
    });
    MultisigWallet$1.MultisigWallet = void 0;
    const crypto_1 = requireDist(), core_1$3 = dist$2, MULTISIG_CODE = core_1$3.Cell.fromBase64("te6ccgECKwEABBgAART/APSkE/S88sgLAQIBIAIDAgFIBAUE2vIgxwCOgzDbPOCDCNcYIPkBAdMH2zwiwAAToVNxePQOb6Hyn9s8VBq6+RDyoAb0BCD5AQHTH1EYuvKq0z9wUwHwCgHCCAGDCryx8mhTFYBA9A5voSCYDqQgwgryZw7f+COqH1NAufJhVCOjU04gIyEiAgLMBgcCASAMDQIBIAgJAgFmCgsAA9GEAiPymAvHoHN9CYbZ5S7Z4BPHohwhJQAtAKkItdJEqCTItdKlwLUAdAT8ArobBKAATwhbpEx4CBukTDgAdAg10rDAJrUAvALyFjPFszJ4HHXI8gBzxb0AMmACASAODwIBIBQVARW77ZbVA0cFUg2zyCoCAUgQEQIBIBITAXOxHXQgwjXGCD5AQHTB4IB1MTtQ9hTIHj0Dm+h8p/XC/9eMfkQ8qCuAfQEIW6TW3Ey4PkBWNs8AaQBgJwA9rtqA6ADoAPoCAXoCEfyAgPyA3XlP+AXkegAA54tkwAAXrhlXP8EA1WZ2oexAAgEgFhcCASAYGQFRtyVbZ4YmRmpGEAgegc30McJNhFpAADMaYeYuAFrgJhwLb+4cC3d0bhAjAYm1WZtnhqvgb+2xxsoicAgej430pBHEoFpAADHDhBACGuQkuuBk9kUWE5kAOeLKhACQCB6IYFImHFImHFImXEA2YlzNijAjAgEgGhsAF7UGtc4QQDVZnah7EAIBIBwdAgOZOB4fARGsGm2eL4G2CUAjABWt+UEAzJV2oewYQAENqTbPBVfBYCMAFa3f3CCAarM7UPYgAiDbPALyZfgAUENxQxPbPO1UIyoACtP/0wcwBKDbPC+uUyCw8mISsQKkJbNTHLmwJYEA4aojoCi8sPJpggGGoPgBBZcCERACPj4wjo0REB/bPEDXePRDEL0F4lQWW1Rz51YQU9zbPFRxClR6vCQlKCYAIO1E0NMf0wfTB9M/9AT0BNEAXgGOGjDSAAHyo9MH0wdQA9cBIPkBBfkBFbrypFAD4GwhIddKqgIi10m68qtwVCATAAwByMv/ywcE1ts87VT4D3AlblOJvrGYEG4QLVDHXwePGzBUJANQTds8UFWgRlAQSRA6SwlTuds8UFQWf+L4AAeDJaGOLCaAQPSWb6UglDBTA7neII4WODk5CNIAAZfTBzAW8AcFkTDifwgHBZJsMeKz5jAGKicoKQBgcI4pA9CDCNcY0wf0BDBTFnj0Dm+h8qXXC/9URUT5EPKmrlIgsVIDvRShI27mbCIyAH5SML6OIF8D+ACTItdKmALTB9QC+wAC6DJwyMoAQBSAQPRDAvAHjhdxyMsAFMsHEssHWM8BWM8WQBOAQPRDAeIBII6KEEUQNEMA2zztVJJfBuIqABzIyx/LB8sHyz/0APQAyQ==");
    class MultisigWallet {
      constructor(_, $, j, rt, et) {
        this.provider = null, this.owners = core_1$3.Dictionary.empty(), this.workchain = $, this.walletId = j, this.k = rt;
        for (let st = 0; st < _.length; st += 1) this.owners.set(st, Buffer.concat([
          _[st],
          Buffer.alloc(1)
        ]));
        this.init = {
          code: MULTISIG_CODE,
          data: (0, core_1$3.beginCell)().storeUint(this.walletId, 32).storeUint(this.owners.size, 8).storeUint(this.k, 8).storeUint(0, 64).storeDict(this.owners, core_1$3.Dictionary.Keys.Uint(8), core_1$3.Dictionary.Values.Buffer(33)).storeBit(0).endCell()
        }, this.address = (et == null ? void 0 : et.address) || (0, core_1$3.contractAddress)($, this.init), (et == null ? void 0 : et.provider) ? this.provider = et.provider : (et == null ? void 0 : et.client) && (this.provider = et.client.provider(this.address, {
          code: this.init.code,
          data: this.init.data
        }));
      }
      static async fromAddress(_, $) {
        let j;
        if ($.provider) j = $.provider;
        else {
          if (!$.client) throw Error("Either provider or client must be specified");
          j = $.client.provider(_, {
            code: null,
            data: null
          });
        }
        const rt = (await j.getState()).state;
        if (rt.type !== "active") throw Error("Contract must be active");
        const et = core_1$3.Cell.fromBoc(rt.data)[0].beginParse(), st = et.loadUint(32);
        et.skip(8);
        const pt = et.loadUint(8);
        et.skip(64);
        const Et = et.loadDict(core_1$3.Dictionary.Keys.Uint(8), core_1$3.Dictionary.Values.Buffer(33));
        let Bt = [];
        for (const [St, $t] of Et) {
          const kt = $t.subarray(0, 32);
          Bt.push(kt);
        }
        return new MultisigWallet(Bt, _.workChain, st, pt, {
          address: _,
          provider: j,
          client: $.client
        });
      }
      async deployExternal(_) {
        if (!_ && !this.provider) throw Error("you must specify provider if there is no such property in MultisigWallet instance");
        _ || (_ = this.provider), await _.external(core_1$3.Cell.EMPTY);
      }
      async deployInternal(_, $ = 1000000000n) {
        await _.send({
          sendMode: core_1$3.SendMode.PAY_GAS_SEPARATELY + core_1$3.SendMode.IGNORE_ERRORS,
          to: this.address,
          value: $,
          init: this.init,
          body: core_1$3.Cell.EMPTY,
          bounce: true
        });
      }
      async sendOrder(_, $, j) {
        if (!j && !this.provider) throw Error("you must specify provider if there is no such property in MultisigWallet instance");
        j || (j = this.provider);
        let rt = (0, crypto_1.keyPairFromSecretKey)($).publicKey, et = this.getOwnerIdByPubkey(rt), st = _.toCell(et), pt = (0, crypto_1.sign)(st.hash(), $);
        st = (0, core_1$3.beginCell)().storeBuffer(pt).storeSlice(st.asSlice()).endCell(), await j.external(st);
      }
      async sendOrderWithoutSecretKey(_, $, j, rt) {
        if (!rt && !this.provider) throw Error("you must specify provider if there is no such property in MultisigWallet instance");
        rt || (rt = this.provider);
        let et = _.toCell(j);
        et = (0, core_1$3.beginCell)().storeBuffer($).storeSlice(et.asSlice()).endCell(), await rt.external(et);
      }
      getOwnerIdByPubkey(_) {
        for (const [$, j] of this.owners) if (j.subarray(0, 32).equals(_)) return $;
        throw Error("public key is not an owner");
      }
    }
    MultisigWallet$1.MultisigWallet = MultisigWallet;
    var ElectorContract$1 = {};
    Object.defineProperty(ElectorContract$1, "__esModule", {
      value: true
    });
    ElectorContract$1.ElectorContract = void 0;
    const core_1$2 = dist$2, FrozenDictValue = {
      serialize(d, _) {
        throw Error("not implemented");
      },
      parse(d) {
        const _ = new core_1$2.Address(-1, d.loadBuffer(32)), $ = d.loadUintBig(64), j = d.loadCoins();
        return {
          address: _,
          weight: $,
          stake: j
        };
      }
    }, EntitiesDictValue = {
      serialize(d, _) {
        throw Error("not implemented");
      },
      parse(d) {
        const _ = d.loadCoins();
        d.skip(64);
        const $ = new core_1$2.Address(-1, d.loadBuffer(32)), j = d.loadBuffer(32);
        return {
          stake: _,
          address: $,
          adnl: j
        };
      }
    };
    class ElectorContract {
      static create() {
        return new ElectorContract();
      }
      constructor() {
        this.address = core_1$2.Address.parseRaw("-1:3333333333333333333333333333333333333333333333333333333333333333");
      }
      async getReturnedStake(_, $) {
        if ($.workChain !== -1) throw Error("Only masterchain addresses could have stake");
        return (await _.get("compute_returned_stake", [
          {
            type: "int",
            value: BigInt("0x" + $.hash.toString("hex"))
          }
        ])).stack.readBigNumber();
      }
      async getPastElectionsList(_) {
        const $ = await _.get("past_elections_list", []), j = new core_1$2.TupleReader($.stack.readLispList()), rt = [];
        for (; j.remaining > 0; ) {
          const et = j.readTuple(), st = et.readNumber(), pt = et.readNumber();
          et.pop();
          const Et = et.readNumber();
          rt.push({
            id: st,
            unfreezeAt: pt,
            stakeHeld: Et
          });
        }
        return rt;
      }
      async getPastElections(_) {
        const $ = await _.get("past_elections", []), j = new core_1$2.TupleReader($.stack.readLispList()), rt = [];
        for (; j.remaining > 0; ) {
          const et = j.readTuple(), st = et.readNumber(), pt = et.readNumber(), Et = et.readNumber();
          et.pop();
          const Bt = et.readCell(), St = et.readBigNumber(), $t = et.readBigNumber();
          let kt = /* @__PURE__ */ new Map();
          const Tt = Bt.beginParse().loadDictDirect(core_1$2.Dictionary.Keys.Buffer(32), FrozenDictValue);
          for (const [Pt, It] of Tt) kt.set(BigInt("0x" + Pt.toString("hex")).toString(10), {
            address: It.address,
            weight: It.weight,
            stake: It.stake
          });
          rt.push({
            id: st,
            unfreezeAt: pt,
            stakeHeld: Et,
            totalStake: St,
            bonuses: $t,
            frozen: kt
          });
        }
        return rt;
      }
      async getElectionEntities(_) {
        const $ = await _.getState();
        if ($.state.type !== "active") throw Error("Unexpected error");
        const rt = core_1$2.Cell.fromBoc($.state.data)[0].beginParse();
        if (!rt.loadBit()) return null;
        const et = rt.loadRef().beginParse(), st = et.loadUint(32), pt = et.loadUint(32), Et = et.loadCoins(), Bt = et.loadCoins(), St = et.loadDict(core_1$2.Dictionary.Keys.Buffer(32), EntitiesDictValue);
        let $t = [];
        if (St) for (const [kt, Tt] of St) $t.push({
          pubkey: kt,
          stake: Tt.stake,
          address: Tt.address,
          adnl: Tt.adnl
        });
        return {
          minStake: Et,
          allStakes: Bt,
          endElectionsTime: pt,
          startWorkTime: st,
          entities: $t
        };
      }
      async getActiveElectionId(_) {
        const j = (await _.get("active_election_id", [])).stack.readNumber();
        return j > 0 ? j : null;
      }
      async getComplaints(_, $) {
        const j = new core_1$2.TupleBuilder();
        j.writeNumber($);
        const rt = await _.get("list_complaints", j.build());
        if (rt.stack.peek().type === "null") return [];
        const et = new core_1$2.TupleReader(rt.stack.readLispList()), st = [];
        for (; et.remaining > 0; ) {
          const pt = et.readTuple(), Et = pt.readBigNumber(), Bt = pt.readTuple(), St = Bt.readTuple(), $t = Buffer.from(St.readBigNumber().toString(16), "hex");
          St.readCell();
          const kt = St.readNumber(), Tt = St.readNumber(), Pt = new core_1$2.Address(-1, Buffer.from(St.readBigNumber().toString(16), "hex")), It = St.readBigNumber(), jt = St.readBigNumber(), Dt = St.readBigNumber(), Ot = [], Ft = new core_1$2.TupleReader(Bt.readLispList());
          for (; Ft.remaining > 0; ) Ot.push(Ft.readNumber());
          const Lt = Bt.readBigNumber(), Zt = Bt.readBigNumber();
          st.push({
            id: Et,
            publicKey: $t,
            createdAt: kt,
            severity: Tt,
            paid: It,
            suggestedFine: jt,
            suggestedFinePart: Dt,
            rewardAddress: Pt,
            votes: Ot,
            remainingWeight: Zt,
            vsetId: Lt
          });
        }
        return st;
      }
    }
    ElectorContract$1.ElectorContract = ElectorContract;
    var ConfigParser = {};
    Object.defineProperty(ConfigParser, "__esModule", {
      value: true
    });
    ConfigParser.configParseMasterAddress = configParseMasterAddress;
    ConfigParser.parseValidatorSet = parseValidatorSet;
    ConfigParser.parseBridge = parseBridge;
    ConfigParser.configParseMasterAddressRequired = configParseMasterAddressRequired;
    ConfigParser.configParse5 = configParse5;
    ConfigParser.configParse13 = configParse13;
    ConfigParser.configParse15 = configParse15;
    ConfigParser.configParse16 = configParse16;
    ConfigParser.configParse17 = configParse17;
    ConfigParser.configParse18 = configParse18;
    ConfigParser.configParse8 = configParse8;
    ConfigParser.configParse40 = configParse40;
    ConfigParser.configParseWorkchainDescriptor = configParseWorkchainDescriptor;
    ConfigParser.configParse12 = configParse12;
    ConfigParser.configParseValidatorSet = configParseValidatorSet;
    ConfigParser.configParseBridge = configParseBridge;
    ConfigParser.configParseGasLimitsPrices = configParseGasLimitsPrices;
    ConfigParser.configParseMsgPrices = configParseMsgPrices;
    ConfigParser.configParse28 = configParse28;
    ConfigParser.configParse29 = configParse29;
    ConfigParser.parseProposalSetup = parseProposalSetup;
    ConfigParser.parseVotingSetup = parseVotingSetup;
    ConfigParser.loadConfigParamById = loadConfigParamById;
    ConfigParser.loadConfigParamsAsSlice = loadConfigParamsAsSlice;
    ConfigParser.parseFullConfig = parseFullConfig;
    const core_1$1 = dist$2;
    function configParseMasterAddress(d) {
      return d ? new core_1$1.Address(-1, d.loadBuffer(32)) : null;
    }
    function readPublicKey(d) {
      if (d.loadUint(32) !== 2390828938) throw Error("Invalid config");
      return d.loadBuffer(32);
    }
    const ValidatorDescriptionDictValue = {
      serialize(d, _) {
        throw Error("not implemented");
      },
      parse(d) {
        const _ = d.loadUint(8);
        if (_ === 83) return {
          publicKey: readPublicKey(d),
          weight: d.loadUintBig(64),
          adnlAddress: null
        };
        if (_ === 115) return {
          publicKey: readPublicKey(d),
          weight: d.loadUintBig(64),
          adnlAddress: d.loadBuffer(32)
        };
        throw Error("Invalid config");
      }
    };
    function parseValidatorSet(d) {
      const _ = d.loadUint(8);
      if (_ === 17) {
        const $ = d.loadUint(32), j = d.loadUint(32), rt = d.loadUint(16), et = d.loadUint(16), st = d.loadDictDirect(core_1$1.Dictionary.Keys.Uint(16), ValidatorDescriptionDictValue);
        return {
          timeSince: $,
          timeUntil: j,
          total: rt,
          main: et,
          totalWeight: null,
          list: st
        };
      } else if (_ === 18) {
        const $ = d.loadUint(32), j = d.loadUint(32), rt = d.loadUint(16), et = d.loadUint(16), st = d.loadUintBig(64), pt = d.loadDict(core_1$1.Dictionary.Keys.Uint(16), ValidatorDescriptionDictValue);
        return {
          timeSince: $,
          timeUntil: j,
          total: rt,
          main: et,
          totalWeight: st,
          list: pt
        };
      }
    }
    function parseBridge(d) {
      const _ = new core_1$1.Address(-1, d.loadBuffer(32)), $ = new core_1$1.Address(-1, d.loadBuffer(32)), j = d.loadDict(core_1$1.Dictionary.Keys.Buffer(32), core_1$1.Dictionary.Values.Buffer(32)), rt = /* @__PURE__ */ new Map();
      for (const [st, pt] of j) rt.set(new core_1$1.Address(-1, st).toString(), pt);
      const et = d.loadBuffer(32);
      return {
        bridgeAddress: _,
        oracleMultisigAddress: $,
        oracles: rt,
        externalChainAddress: et
      };
    }
    function configParseMasterAddressRequired(d) {
      if (!d) throw Error("Invalid config");
      return configParseMasterAddress(d);
    }
    function configParse5(d) {
      if (!d) throw Error("Invalid config");
      if (d.loadUint(8) === 1) {
        const $ = d.loadBit() ? new core_1$1.Address(-1, d.loadBuffer(32)) : null, j = d.loadUint(32), rt = d.loadUint(32);
        return {
          blackholeAddr: $,
          feeBurnNominator: j,
          feeBurnDenominator: rt
        };
      }
      throw new Error("Invalid config");
    }
    function configParse13(d) {
      if (!d) throw Error("Invalid config");
      if (d.loadUint(8) === 26) {
        const $ = d.loadCoins(), j = d.loadCoins(), rt = d.loadCoins();
        return {
          deposit: $,
          bitPrice: j,
          cellPrice: rt
        };
      }
      throw new Error("Invalid config");
    }
    function configParse15(d) {
      if (!d) throw Error("Invalid config");
      const _ = d.loadUint(32), $ = d.loadUint(32), j = d.loadUint(32), rt = d.loadUint(32);
      return {
        validatorsElectedFor: _,
        electorsStartBefore: $,
        electorsEndBefore: j,
        stakeHeldFor: rt
      };
    }
    function configParse16(d) {
      if (!d) throw Error("Invalid config");
      const _ = d.loadUint(16), $ = d.loadUint(16), j = d.loadUint(16);
      return {
        maxValidators: _,
        maxMainValidators: $,
        minValidators: j
      };
    }
    function configParse17(d) {
      if (!d) throw Error("Invalid config");
      const _ = d.loadCoins(), $ = d.loadCoins(), j = d.loadCoins(), rt = d.loadUint(32);
      return {
        minStake: _,
        maxStake: $,
        minTotalStake: j,
        maxStakeFactor: rt
      };
    }
    const StoragePricesDictValue = {
      serialize(d, _) {
        throw Error("not implemented");
      },
      parse(d) {
        if (d.loadUint(8) !== 204) throw Error("Invalid config");
        const $ = d.loadUint(32), j = d.loadUintBig(64), rt = d.loadUintBig(64), et = d.loadUintBig(64), st = d.loadUintBig(64);
        return {
          utime_since: $,
          bit_price_ps: j,
          cell_price_ps: rt,
          mc_bit_price_ps: et,
          mc_cell_price_ps: st
        };
      }
    };
    function configParse18(d) {
      if (!d) throw Error("Invalid config");
      return d.loadDictDirect(core_1$1.Dictionary.Keys.Buffer(4), StoragePricesDictValue).values();
    }
    function configParse8(d) {
      if (!d) return {
        version: 0,
        capabilities: 0n
      };
      const _ = d.loadUint(32), $ = d.loadUintBig(64);
      return {
        version: _,
        capabilities: $
      };
    }
    function configParse40(d) {
      if (!d) return null;
      if (d.loadUint(8) !== 1) throw Error("Invalid config");
      const $ = d.loadCoins(), j = d.loadCoins(), rt = d.loadUint(16), et = d.loadUint(16), st = d.loadUint(16), pt = d.loadUint(16), Et = d.loadUint(16), Bt = d.loadUint(16), St = d.loadUint(16), $t = d.loadUint(16), kt = d.loadUint(16);
      return {
        defaultFlatFine: $,
        defaultProportionaFine: j,
        severityFlatMult: rt,
        severityProportionalMult: et,
        unfunishableInterval: st,
        longInterval: pt,
        longFlatMult: Et,
        longProportionalMult: Bt,
        mediumInterval: St,
        mediumFlatMult: $t,
        mediumProportionalMult: kt
      };
    }
    function configParseWorkchainDescriptor(d) {
      if (d.loadUint(8) !== 166) throw Error("Invalid config");
      const _ = d.loadUint(32), $ = d.loadUint(8), j = d.loadUint(8), rt = d.loadUint(8), et = d.loadBit(), st = d.loadBit(), pt = d.loadBit(), Et = d.loadUint(13), Bt = d.loadBuffer(32), St = d.loadBuffer(32), $t = d.loadUint(32);
      if (d.loadBit()) throw Error("Invalid config");
      const kt = d.loadUint(32), Tt = d.loadUintBig(64);
      return {
        enabledSince: _,
        actialMinSplit: $,
        min_split: j,
        max_split: rt,
        basic: et,
        active: st,
        accept_msgs: pt,
        flags: Et,
        zerostateRootHash: Bt,
        zerostateFileHash: St,
        version: $t,
        format: {
          vmVersion: kt,
          vmMode: Tt
        }
      };
    }
    const WorkchainDescriptorDictValue = {
      serialize(d, _) {
        throw Error("not implemented");
      },
      parse(d) {
        if (d.loadUint(8) !== 166) throw Error("Invalid config");
        const _ = d.loadUint(32), $ = d.loadUint(8), j = d.loadUint(8), rt = d.loadUint(8), et = d.loadBit(), st = d.loadBit(), pt = d.loadBit(), Et = d.loadUint(13), Bt = d.loadBuffer(32), St = d.loadBuffer(32), $t = d.loadUint(32);
        if (d.loadBit()) throw Error("Invalid config");
        const kt = d.loadUint(32), Tt = d.loadUintBig(64);
        return {
          enabledSince: _,
          actialMinSplit: $,
          min_split: j,
          max_split: rt,
          basic: et,
          active: st,
          accept_msgs: pt,
          flags: Et,
          zerostateRootHash: Bt,
          zerostateFileHash: St,
          version: $t,
          format: {
            vmVersion: kt,
            vmMode: Tt
          }
        };
      }
    };
    function configParse12(d) {
      if (!d) throw Error("Invalid config");
      const _ = d.loadDict(core_1$1.Dictionary.Keys.Uint(32), WorkchainDescriptorDictValue);
      if (_) return _;
      throw Error("No workchains exist");
    }
    function configParseValidatorSet(d) {
      return d ? parseValidatorSet(d) : null;
    }
    function configParseBridge(d) {
      return d ? parseBridge(d) : null;
    }
    function parseGasLimitsInternal(d) {
      const _ = d.loadUint(8);
      if (_ === 222) {
        const $ = d.loadUintBig(64), j = d.loadUintBig(64), rt = d.loadUintBig(64), et = d.loadUintBig(64), st = d.loadUintBig(64), pt = d.loadUintBig(64), Et = d.loadUintBig(64);
        return {
          gasPrice: $,
          gasLimit: j,
          specialGasLimit: rt,
          gasCredit: et,
          blockGasLimit: st,
          freezeDueLimit: pt,
          deleteDueLimit: Et
        };
      } else if (_ === 221) {
        const $ = d.loadUintBig(64), j = d.loadUintBig(64), rt = d.loadUintBig(64), et = d.loadUintBig(64), st = d.loadUintBig(64), pt = d.loadUintBig(64);
        return {
          gasPrice: $,
          gasLimit: j,
          gasCredit: rt,
          blockGasLimit: et,
          freezeDueLimit: st,
          deleteDueLimit: pt
        };
      } else throw Error("Invalid config");
    }
    function configParseGasLimitsPrices(d) {
      if (!d) throw Error("Invalid config");
      if (d.loadUint(8) === 209) {
        const $ = d.loadUintBig(64), j = d.loadUintBig(64), rt = parseGasLimitsInternal(d);
        return {
          flatLimit: $,
          flatGasPrice: j,
          other: rt
        };
      } else throw Error("Invalid config");
    }
    function configParseMsgPrices(d) {
      if (!d) throw new Error("Invalid config");
      if (d.loadUint(8) !== 234) throw new Error("Invalid msg prices param");
      return {
        lumpPrice: d.loadUintBig(64),
        bitPrice: d.loadUintBig(64),
        cellPrice: d.loadUintBig(64),
        ihrPriceFactor: d.loadUint(32),
        firstFrac: d.loadUint(16),
        nextFrac: d.loadUint(16)
      };
    }
    function configParse28(d) {
      if (!d) throw new Error("Invalid config");
      const _ = d.loadUint(8);
      if (_ === 193) {
        const $ = d.loadUint(32), j = d.loadUint(32), rt = d.loadUint(32), et = d.loadUint(32);
        return {
          masterCatchainLifetime: $,
          shardCatchainLifetime: j,
          shardValidatorsLifetime: rt,
          shardValidatorsCount: et
        };
      }
      if (_ === 194) {
        const $ = d.loadUint(7), j = d.loadBit(), rt = d.loadUint(32), et = d.loadUint(32), st = d.loadUint(32), pt = d.loadUint(32);
        return {
          flags: $,
          suffleMasterValidators: j,
          masterCatchainLifetime: rt,
          shardCatchainLifetime: et,
          shardValidatorsLifetime: st,
          shardValidatorsCount: pt
        };
      }
      throw new Error("Invalid config");
    }
    function configParse29(d) {
      if (!d) throw new Error("Invalid config");
      const _ = d.loadUint(8);
      if (_ === 214) {
        const $ = d.loadUint(32), j = d.loadUint(32), rt = d.loadUint(32), et = d.loadUint(32), st = d.loadUint(32), pt = d.loadUint(32), Et = d.loadUint(32), Bt = d.loadUint(32);
        return {
          roundCandidates: $,
          nextCandidateDelay: j,
          consensusTimeout: rt,
          fastAttempts: et,
          attemptDuration: st,
          catchainMaxDeps: pt,
          maxBlockBytes: Et,
          maxColaltedBytes: Bt
        };
      } else if (_ === 215) {
        const $ = d.loadUint(7), j = d.loadBit(), rt = d.loadUint(8), et = d.loadUint(32), st = d.loadUint(32), pt = d.loadUint(32), Et = d.loadUint(32), Bt = d.loadUint(32), St = d.loadUint(32), $t = d.loadUint(32);
        return {
          flags: $,
          newCatchainIds: j,
          roundCandidates: rt,
          nextCandidateDelay: et,
          consensusTimeout: st,
          fastAttempts: pt,
          attemptDuration: Et,
          catchainMaxDeps: Bt,
          maxBlockBytes: St,
          maxColaltedBytes: $t
        };
      } else if (_ === 216) {
        const $ = d.loadUint(7), j = d.loadBit(), rt = d.loadUint(8), et = d.loadUint(32), st = d.loadUint(32), pt = d.loadUint(32), Et = d.loadUint(32), Bt = d.loadUint(32), St = d.loadUint(32), $t = d.loadUint(32), kt = d.loadUint(16);
        return {
          flags: $,
          newCatchainIds: j,
          roundCandidates: rt,
          nextCandidateDelay: et,
          consensusTimeout: st,
          fastAttempts: pt,
          attemptDuration: Et,
          catchainMaxDeps: Bt,
          maxBlockBytes: St,
          maxColaltedBytes: $t,
          protoVersion: kt
        };
      } else if (_ === 217) {
        const $ = d.loadUint(7), j = d.loadBit(), rt = d.loadUint(8), et = d.loadUint(32), st = d.loadUint(32), pt = d.loadUint(32), Et = d.loadUint(32), Bt = d.loadUint(32), St = d.loadUint(32), $t = d.loadUint(32), kt = d.loadUint(16), Tt = d.loadUint(32);
        return {
          flags: $,
          newCatchainIds: j,
          roundCandidates: rt,
          nextCandidateDelay: et,
          consensusTimeout: st,
          fastAttempts: pt,
          attemptDuration: Et,
          catchainMaxDeps: Bt,
          maxBlockBytes: St,
          maxColaltedBytes: $t,
          protoVersion: kt,
          catchainMaxBlocksCoeff: Tt
        };
      }
      throw new Error("Invalid config");
    }
    function parseProposalSetup(d) {
      if (d.loadUint(8) !== 54) throw new Error("Invalid config");
      const $ = d.loadUint(8), j = d.loadUint(8), rt = d.loadUint(8), et = d.loadUint(8), st = d.loadUint(32), pt = d.loadUint(32), Et = d.loadUint(32), Bt = d.loadUint(32);
      return {
        minTotalRounds: $,
        maxTotalRounds: j,
        minWins: rt,
        maxLoses: et,
        minStoreSec: st,
        maxStoreSec: pt,
        bitPrice: Et,
        cellPrice: Bt
      };
    }
    function parseVotingSetup(d) {
      if (!d) throw new Error("Invalid config");
      if (d.loadUint(8) !== 145) throw new Error("Invalid config");
      const $ = parseProposalSetup(d.loadRef().beginParse()), j = parseProposalSetup(d.loadRef().beginParse());
      return {
        normalParams: $,
        criticalParams: j
      };
    }
    function loadConfigParams(d) {
      return core_1$1.Cell.fromBase64(d).beginParse().loadDictDirect(core_1$1.Dictionary.Keys.Int(32), core_1$1.Dictionary.Values.Cell());
    }
    function loadConfigParamById(d, _) {
      return loadConfigParams(d).get(_);
    }
    function loadConfigParamsAsSlice(d) {
      const _ = loadConfigParams(d), $ = /* @__PURE__ */ new Map();
      for (const [j, rt] of _) $.set(j, rt.beginParse());
      return $;
    }
    function parseFullConfig(d) {
      return {
        configAddress: configParseMasterAddressRequired(d.get(0)),
        electorAddress: configParseMasterAddressRequired(d.get(1)),
        minterAddress: configParseMasterAddress(d.get(2)),
        feeCollectorAddress: configParseMasterAddress(d.get(3)),
        dnsRootAddress: configParseMasterAddress(d.get(4)),
        burningConfig: configParse5(d.get(5)),
        globalVersion: configParse8(d.get(8)),
        workchains: configParse12(d.get(12)),
        voting: parseVotingSetup(d.get(11)),
        validators: {
          ...configParse15(d.get(15)),
          ...configParse16(d.get(16)),
          ...configParse17(d.get(17))
        },
        storagePrices: configParse18(d.get(18)),
        gasPrices: {
          masterchain: configParseGasLimitsPrices(d.get(20)),
          workchain: configParseGasLimitsPrices(d.get(21))
        },
        msgPrices: {
          masterchain: configParseMsgPrices(d.get(24)),
          workchain: configParseMsgPrices(d.get(25))
        },
        validatorSets: {
          prevValidators: configParseValidatorSet(d.get(32)),
          prevTempValidators: configParseValidatorSet(d.get(33)),
          currentValidators: configParseValidatorSet(d.get(34)),
          currentTempValidators: configParseValidatorSet(d.get(35)),
          nextValidators: configParseValidatorSet(d.get(36)),
          nextTempValidators: configParseValidatorSet(d.get(37))
        },
        validatorsPunish: configParse40(d.get(40)),
        bridges: {
          ethereum: configParseBridge(d.get(71)),
          binance: configParseBridge(d.get(72)),
          polygon: configParseBridge(d.get(73))
        },
        catchain: configParse28(d.get(28)),
        consensus: configParse29(d.get(29))
      };
    }
    var fees = {};
    Object.defineProperty(fees, "__esModule", {
      value: true
    });
    fees.computeStorageFees = computeStorageFees;
    fees.computeFwdFees = computeFwdFees;
    fees.computeGasPrices = computeGasPrices;
    fees.computeExternalMessageFees = computeExternalMessageFees;
    fees.computeMessageForwardFees = computeMessageForwardFees;
    const core_1 = dist$2;
    function computeStorageFees(d) {
      const { lastPaid: _, now: $, storagePrices: j, storageStat: rt, special: et, masterchain: st } = d;
      if ($ <= _ || j.length === 0 || $ < j[0].utime_since || et) return BigInt(0);
      let pt = Math.max(_, j[0].utime_since), Et = BigInt(0);
      for (let Bt = 0; Bt < j.length && pt < $; Bt++) {
        let St = Bt < j.length - 1 ? Math.min($, j[Bt + 1].utime_since) : $, $t = BigInt(0);
        if (pt < St) {
          let kt = St - pt;
          $t += BigInt(rt.cells) * (st ? j[Bt].mc_cell_price_ps : j[Bt].cell_price_ps), $t += BigInt(rt.bits) * (st ? j[Bt].mc_bit_price_ps : j[Bt].bit_price_ps), $t = $t * BigInt(kt);
        }
        pt = St, Et += $t;
      }
      return shr16ceil(Et);
    }
    function computeFwdFees(d, _, $) {
      return d.lumpPrice + shr16ceil(d.bitPrice * $ + d.cellPrice * _);
    }
    function computeGasPrices(d, _) {
      return d <= _.flatLimit ? _.flatPrice : _.flatPrice + (_.price * (d - _.flatLimit) >> 16n);
    }
    function computeExternalMessageFees(d, _) {
      let $ = collectCellStats(_);
      return $.bits -= _.bits.length, $.cells -= 1, computeFwdFees(d, BigInt($.cells), BigInt($.bits));
    }
    function computeMessageForwardFees(d, _) {
      let $ = (0, core_1.loadMessageRelaxed)(_.beginParse()), j = {
        bits: 0,
        cells: 0
      };
      if ($.init) {
        const Et = new core_1.Cell().asBuilder();
        (0, core_1.storeStateInit)($.init)(Et);
        const Bt = Et.endCell();
        let St = collectCellStats(Bt);
        St.bits -= Bt.bits.length, St.cells -= 1, j.bits += St.bits, j.cells += St.cells;
      }
      let rt = collectCellStats($.body);
      rt.bits -= $.body.bits.length, rt.cells -= 1, j.bits += rt.bits, j.cells += rt.cells;
      let et = computeFwdFees(d, BigInt(j.cells), BigInt(j.bits)), st = et * BigInt(d.firstFrac) >> 16n, pt = et - st;
      return {
        fees: st,
        remaining: pt
      };
    }
    function collectCellStats(d) {
      let _ = d.bits.length, $ = 1;
      for (let j of d.refs) {
        let rt = collectCellStats(j);
        $ += rt.cells, _ += rt.bits;
      }
      return {
        bits: _,
        cells: $
      };
    }
    function shr16ceil(d) {
      let _ = d % 65536n, $ = d >> 16n;
      return _ !== 0n && ($ += 1n), $;
    }
    (function(d) {
      var _ = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(sr, er, Ut, xt) {
        xt === void 0 && (xt = Ut);
        var tt = Object.getOwnPropertyDescriptor(er, Ut);
        (!tt || ("get" in tt ? !er.__esModule : tt.writable || tt.configurable)) && (tt = {
          enumerable: true,
          get: function() {
            return er[Ut];
          }
        }), Object.defineProperty(sr, xt, tt);
      } : function(sr, er, Ut, xt) {
        xt === void 0 && (xt = Ut), sr[xt] = er[Ut];
      }), $ = commonjsGlobal && commonjsGlobal.__exportStar || function(sr, er) {
        for (var Ut in sr) Ut !== "default" && !Object.prototype.hasOwnProperty.call(er, Ut) && _(er, sr, Ut);
      };
      Object.defineProperty(d, "__esModule", {
        value: true
      }), d.computeStorageFees = d.computeMessageForwardFees = d.computeGasPrices = d.computeFwdFees = d.computeExternalMessageFees = d.loadConfigParamsAsSlice = d.loadConfigParamById = d.parseFullConfig = d.parseVotingSetup = d.parseValidatorSet = d.parseProposalSetup = d.parseBridge = d.configParseWorkchainDescriptor = d.configParseValidatorSet = d.configParseMsgPrices = d.configParseMasterAddressRequired = d.configParseMasterAddress = d.configParseGasLimitsPrices = d.configParseBridge = d.configParse40 = d.configParse29 = d.configParse28 = d.configParse18 = d.configParse17 = d.configParse16 = d.configParse15 = d.configParse13 = d.configParse12 = d.configParse8 = d.configParse5 = d.ElectorContract = d.MultisigWallet = d.MultisigOrderBuilder = d.MultisigOrder = d.JettonWallet = d.JettonMaster = d.WalletContractV5R1 = d.WalletContractV5Beta = d.WalletContractV4 = d.WalletContractV3R2 = d.WalletContractV3R1 = d.WalletContractV2R2 = d.WalletContractV2R1 = d.WalletContractV1R3 = d.WalletContractV1R2 = d.WalletContractV1R1 = d.TonClient4 = d.TonClient = d.HttpApi = void 0, $(dist$2, d);
      var j = HttpApi$1;
      Object.defineProperty(d, "HttpApi", {
        enumerable: true,
        get: function() {
          return j.HttpApi;
        }
      });
      var rt = TonClient$1;
      Object.defineProperty(d, "TonClient", {
        enumerable: true,
        get: function() {
          return rt.TonClient;
        }
      });
      var et = TonClient4$1;
      Object.defineProperty(d, "TonClient4", {
        enumerable: true,
        get: function() {
          return et.TonClient4;
        }
      });
      var st = WalletContractV1R1$1;
      Object.defineProperty(d, "WalletContractV1R1", {
        enumerable: true,
        get: function() {
          return st.WalletContractV1R1;
        }
      });
      var pt = WalletContractV1R2$1;
      Object.defineProperty(d, "WalletContractV1R2", {
        enumerable: true,
        get: function() {
          return pt.WalletContractV1R2;
        }
      });
      var Et = WalletContractV1R3$1;
      Object.defineProperty(d, "WalletContractV1R3", {
        enumerable: true,
        get: function() {
          return Et.WalletContractV1R3;
        }
      });
      var Bt = WalletContractV2R1$1;
      Object.defineProperty(d, "WalletContractV2R1", {
        enumerable: true,
        get: function() {
          return Bt.WalletContractV2R1;
        }
      });
      var St = WalletContractV2R2$1;
      Object.defineProperty(d, "WalletContractV2R2", {
        enumerable: true,
        get: function() {
          return St.WalletContractV2R2;
        }
      });
      var $t = WalletContractV3R1$1;
      Object.defineProperty(d, "WalletContractV3R1", {
        enumerable: true,
        get: function() {
          return $t.WalletContractV3R1;
        }
      });
      var kt = WalletContractV3R2$1;
      Object.defineProperty(d, "WalletContractV3R2", {
        enumerable: true,
        get: function() {
          return kt.WalletContractV3R2;
        }
      });
      var Tt = WalletContractV4$2;
      Object.defineProperty(d, "WalletContractV4", {
        enumerable: true,
        get: function() {
          return Tt.WalletContractV4;
        }
      });
      var Pt = WalletContractV5Beta;
      Object.defineProperty(d, "WalletContractV5Beta", {
        enumerable: true,
        get: function() {
          return Pt.WalletContractV5Beta;
        }
      });
      var It = WalletContractV5R1;
      Object.defineProperty(d, "WalletContractV5R1", {
        enumerable: true,
        get: function() {
          return It.WalletContractV5R1;
        }
      });
      var jt = JettonMaster$1;
      Object.defineProperty(d, "JettonMaster", {
        enumerable: true,
        get: function() {
          return jt.JettonMaster;
        }
      });
      var Dt = JettonWallet$3;
      Object.defineProperty(d, "JettonWallet", {
        enumerable: true,
        get: function() {
          return Dt.JettonWallet;
        }
      });
      var Ot = MultisigOrder$1;
      Object.defineProperty(d, "MultisigOrder", {
        enumerable: true,
        get: function() {
          return Ot.MultisigOrder;
        }
      });
      var Ft = MultisigOrderBuilder$1;
      Object.defineProperty(d, "MultisigOrderBuilder", {
        enumerable: true,
        get: function() {
          return Ft.MultisigOrderBuilder;
        }
      });
      var Lt = MultisigWallet$1;
      Object.defineProperty(d, "MultisigWallet", {
        enumerable: true,
        get: function() {
          return Lt.MultisigWallet;
        }
      });
      var Zt = ElectorContract$1;
      Object.defineProperty(d, "ElectorContract", {
        enumerable: true,
        get: function() {
          return Zt.ElectorContract;
        }
      });
      var Kt = ConfigParser;
      Object.defineProperty(d, "configParse5", {
        enumerable: true,
        get: function() {
          return Kt.configParse5;
        }
      }), Object.defineProperty(d, "configParse8", {
        enumerable: true,
        get: function() {
          return Kt.configParse8;
        }
      }), Object.defineProperty(d, "configParse12", {
        enumerable: true,
        get: function() {
          return Kt.configParse12;
        }
      }), Object.defineProperty(d, "configParse13", {
        enumerable: true,
        get: function() {
          return Kt.configParse13;
        }
      }), Object.defineProperty(d, "configParse15", {
        enumerable: true,
        get: function() {
          return Kt.configParse15;
        }
      }), Object.defineProperty(d, "configParse16", {
        enumerable: true,
        get: function() {
          return Kt.configParse16;
        }
      }), Object.defineProperty(d, "configParse17", {
        enumerable: true,
        get: function() {
          return Kt.configParse17;
        }
      }), Object.defineProperty(d, "configParse18", {
        enumerable: true,
        get: function() {
          return Kt.configParse18;
        }
      }), Object.defineProperty(d, "configParse28", {
        enumerable: true,
        get: function() {
          return Kt.configParse28;
        }
      }), Object.defineProperty(d, "configParse29", {
        enumerable: true,
        get: function() {
          return Kt.configParse29;
        }
      }), Object.defineProperty(d, "configParse40", {
        enumerable: true,
        get: function() {
          return Kt.configParse40;
        }
      }), Object.defineProperty(d, "configParseBridge", {
        enumerable: true,
        get: function() {
          return Kt.configParseBridge;
        }
      }), Object.defineProperty(d, "configParseGasLimitsPrices", {
        enumerable: true,
        get: function() {
          return Kt.configParseGasLimitsPrices;
        }
      }), Object.defineProperty(d, "configParseMasterAddress", {
        enumerable: true,
        get: function() {
          return Kt.configParseMasterAddress;
        }
      }), Object.defineProperty(d, "configParseMasterAddressRequired", {
        enumerable: true,
        get: function() {
          return Kt.configParseMasterAddressRequired;
        }
      }), Object.defineProperty(d, "configParseMsgPrices", {
        enumerable: true,
        get: function() {
          return Kt.configParseMsgPrices;
        }
      }), Object.defineProperty(d, "configParseValidatorSet", {
        enumerable: true,
        get: function() {
          return Kt.configParseValidatorSet;
        }
      }), Object.defineProperty(d, "configParseWorkchainDescriptor", {
        enumerable: true,
        get: function() {
          return Kt.configParseWorkchainDescriptor;
        }
      }), Object.defineProperty(d, "parseBridge", {
        enumerable: true,
        get: function() {
          return Kt.parseBridge;
        }
      }), Object.defineProperty(d, "parseProposalSetup", {
        enumerable: true,
        get: function() {
          return Kt.parseProposalSetup;
        }
      }), Object.defineProperty(d, "parseValidatorSet", {
        enumerable: true,
        get: function() {
          return Kt.parseValidatorSet;
        }
      }), Object.defineProperty(d, "parseVotingSetup", {
        enumerable: true,
        get: function() {
          return Kt.parseVotingSetup;
        }
      }), Object.defineProperty(d, "parseFullConfig", {
        enumerable: true,
        get: function() {
          return Kt.parseFullConfig;
        }
      }), Object.defineProperty(d, "loadConfigParamById", {
        enumerable: true,
        get: function() {
          return Kt.loadConfigParamById;
        }
      }), Object.defineProperty(d, "loadConfigParamsAsSlice", {
        enumerable: true,
        get: function() {
          return Kt.loadConfigParamsAsSlice;
        }
      });
      var ar = fees;
      Object.defineProperty(d, "computeExternalMessageFees", {
        enumerable: true,
        get: function() {
          return ar.computeExternalMessageFees;
        }
      }), Object.defineProperty(d, "computeFwdFees", {
        enumerable: true,
        get: function() {
          return ar.computeFwdFees;
        }
      }), Object.defineProperty(d, "computeGasPrices", {
        enumerable: true,
        get: function() {
          return ar.computeGasPrices;
        }
      }), Object.defineProperty(d, "computeMessageForwardFees", {
        enumerable: true,
        get: function() {
          return ar.computeMessageForwardFees;
        }
      }), Object.defineProperty(d, "computeStorageFees", {
        enumerable: true,
        get: function() {
          return ar.computeStorageFees;
        }
      });
    })(dist$3);
    var lib$1 = {}, nodes = {}, g$1 = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof global$1 < "u" && global$1 || {}, support = {
      searchParams: "URLSearchParams" in g$1,
      iterable: "Symbol" in g$1 && "iterator" in Symbol,
      blob: "FileReader" in g$1 && "Blob" in g$1 && function() {
        try {
          return new Blob(), true;
        } catch {
          return false;
        }
      }(),
      formData: "FormData" in g$1,
      arrayBuffer: "ArrayBuffer" in g$1
    };
    function isDataView(d) {
      return d && DataView.prototype.isPrototypeOf(d);
    }
    if (support.arrayBuffer) var viewClasses = [
      "[object Int8Array]",
      "[object Uint8Array]",
      "[object Uint8ClampedArray]",
      "[object Int16Array]",
      "[object Uint16Array]",
      "[object Int32Array]",
      "[object Uint32Array]",
      "[object Float32Array]",
      "[object Float64Array]"
    ], isArrayBufferView = ArrayBuffer.isView || function(d) {
      return d && viewClasses.indexOf(Object.prototype.toString.call(d)) > -1;
    };
    function normalizeName(d) {
      if (typeof d != "string" && (d = String(d)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(d) || d === "") throw new TypeError('Invalid character in header field name: "' + d + '"');
      return d.toLowerCase();
    }
    function normalizeValue(d) {
      return typeof d != "string" && (d = String(d)), d;
    }
    function iteratorFor(d) {
      var _ = {
        next: function() {
          var $ = d.shift();
          return {
            done: $ === void 0,
            value: $
          };
        }
      };
      return support.iterable && (_[Symbol.iterator] = function() {
        return _;
      }), _;
    }
    function Headers(d) {
      this.map = {}, d instanceof Headers ? d.forEach(function(_, $) {
        this.append($, _);
      }, this) : Array.isArray(d) ? d.forEach(function(_) {
        if (_.length != 2) throw new TypeError("Headers constructor: expected name/value pair to be length 2, found" + _.length);
        this.append(_[0], _[1]);
      }, this) : d && Object.getOwnPropertyNames(d).forEach(function(_) {
        this.append(_, d[_]);
      }, this);
    }
    Headers.prototype.append = function(d, _) {
      d = normalizeName(d), _ = normalizeValue(_);
      var $ = this.map[d];
      this.map[d] = $ ? $ + ", " + _ : _;
    };
    Headers.prototype.delete = function(d) {
      delete this.map[normalizeName(d)];
    };
    Headers.prototype.get = function(d) {
      return d = normalizeName(d), this.has(d) ? this.map[d] : null;
    };
    Headers.prototype.has = function(d) {
      return this.map.hasOwnProperty(normalizeName(d));
    };
    Headers.prototype.set = function(d, _) {
      this.map[normalizeName(d)] = normalizeValue(_);
    };
    Headers.prototype.forEach = function(d, _) {
      for (var $ in this.map) this.map.hasOwnProperty($) && d.call(_, this.map[$], $, this);
    };
    Headers.prototype.keys = function() {
      var d = [];
      return this.forEach(function(_, $) {
        d.push($);
      }), iteratorFor(d);
    };
    Headers.prototype.values = function() {
      var d = [];
      return this.forEach(function(_) {
        d.push(_);
      }), iteratorFor(d);
    };
    Headers.prototype.entries = function() {
      var d = [];
      return this.forEach(function(_, $) {
        d.push([
          $,
          _
        ]);
      }), iteratorFor(d);
    };
    support.iterable && (Headers.prototype[Symbol.iterator] = Headers.prototype.entries);
    function consumed(d) {
      if (!d._noBody) {
        if (d.bodyUsed) return Promise.reject(new TypeError("Already read"));
        d.bodyUsed = true;
      }
    }
    function fileReaderReady(d) {
      return new Promise(function(_, $) {
        d.onload = function() {
          _(d.result);
        }, d.onerror = function() {
          $(d.error);
        };
      });
    }
    function readBlobAsArrayBuffer(d) {
      var _ = new FileReader(), $ = fileReaderReady(_);
      return _.readAsArrayBuffer(d), $;
    }
    function readBlobAsText(d) {
      var _ = new FileReader(), $ = fileReaderReady(_), j = /charset=([A-Za-z0-9_-]+)/.exec(d.type), rt = j ? j[1] : "utf-8";
      return _.readAsText(d, rt), $;
    }
    function readArrayBufferAsText(d) {
      for (var _ = new Uint8Array(d), $ = new Array(_.length), j = 0; j < _.length; j++) $[j] = String.fromCharCode(_[j]);
      return $.join("");
    }
    function bufferClone(d) {
      if (d.slice) return d.slice(0);
      var _ = new Uint8Array(d.byteLength);
      return _.set(new Uint8Array(d)), _.buffer;
    }
    function Body() {
      return this.bodyUsed = false, this._initBody = function(d) {
        this.bodyUsed = this.bodyUsed, this._bodyInit = d, d ? typeof d == "string" ? this._bodyText = d : support.blob && Blob.prototype.isPrototypeOf(d) ? this._bodyBlob = d : support.formData && FormData.prototype.isPrototypeOf(d) ? this._bodyFormData = d : support.searchParams && URLSearchParams.prototype.isPrototypeOf(d) ? this._bodyText = d.toString() : support.arrayBuffer && support.blob && isDataView(d) ? (this._bodyArrayBuffer = bufferClone(d.buffer), this._bodyInit = new Blob([
          this._bodyArrayBuffer
        ])) : support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(d) || isArrayBufferView(d)) ? this._bodyArrayBuffer = bufferClone(d) : this._bodyText = d = Object.prototype.toString.call(d) : (this._noBody = true, this._bodyText = ""), this.headers.get("content-type") || (typeof d == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : support.searchParams && URLSearchParams.prototype.isPrototypeOf(d) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
      }, support.blob && (this.blob = function() {
        var d = consumed(this);
        if (d) return d;
        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
          this._bodyArrayBuffer
        ]));
        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
        return Promise.resolve(new Blob([
          this._bodyText
        ]));
      }), this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          var d = consumed(this);
          return d || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer));
        } else {
          if (support.blob) return this.blob().then(readBlobAsArrayBuffer);
          throw new Error("could not read as ArrayBuffer");
        }
      }, this.text = function() {
        var d = consumed(this);
        if (d) return d;
        if (this._bodyBlob) return readBlobAsText(this._bodyBlob);
        if (this._bodyArrayBuffer) return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        if (this._bodyFormData) throw new Error("could not read FormData body as text");
        return Promise.resolve(this._bodyText);
      }, support.formData && (this.formData = function() {
        return this.text().then(decode);
      }), this.json = function() {
        return this.text().then(JSON.parse);
      }, this;
    }
    var methods = [
      "CONNECT",
      "DELETE",
      "GET",
      "HEAD",
      "OPTIONS",
      "PATCH",
      "POST",
      "PUT",
      "TRACE"
    ];
    function normalizeMethod(d) {
      var _ = d.toUpperCase();
      return methods.indexOf(_) > -1 ? _ : d;
    }
    function Request$1(d, _) {
      if (!(this instanceof Request$1)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
      _ = _ || {};
      var $ = _.body;
      if (d instanceof Request$1) {
        if (d.bodyUsed) throw new TypeError("Already read");
        this.url = d.url, this.credentials = d.credentials, _.headers || (this.headers = new Headers(d.headers)), this.method = d.method, this.mode = d.mode, this.signal = d.signal, !$ && d._bodyInit != null && ($ = d._bodyInit, d.bodyUsed = true);
      } else this.url = String(d);
      if (this.credentials = _.credentials || this.credentials || "same-origin", (_.headers || !this.headers) && (this.headers = new Headers(_.headers)), this.method = normalizeMethod(_.method || this.method || "GET"), this.mode = _.mode || this.mode || null, this.signal = _.signal || this.signal || function() {
        if ("AbortController" in g$1) {
          var et = new AbortController();
          return et.signal;
        }
      }(), this.referrer = null, (this.method === "GET" || this.method === "HEAD") && $) throw new TypeError("Body not allowed for GET or HEAD requests");
      if (this._initBody($), (this.method === "GET" || this.method === "HEAD") && (_.cache === "no-store" || _.cache === "no-cache")) {
        var j = /([?&])_=[^&]*/;
        if (j.test(this.url)) this.url = this.url.replace(j, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
        else {
          var rt = /\?/;
          this.url += (rt.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
        }
      }
    }
    Request$1.prototype.clone = function() {
      return new Request$1(this, {
        body: this._bodyInit
      });
    };
    function decode(d) {
      var _ = new FormData();
      return d.trim().split("&").forEach(function($) {
        if ($) {
          var j = $.split("="), rt = j.shift().replace(/\+/g, " "), et = j.join("=").replace(/\+/g, " ");
          _.append(decodeURIComponent(rt), decodeURIComponent(et));
        }
      }), _;
    }
    function parseHeaders(d) {
      var _ = new Headers(), $ = d.replace(/\r?\n[\t ]+/g, " ");
      return $.split("\r").map(function(j) {
        return j.indexOf(`
`) === 0 ? j.substr(1, j.length) : j;
      }).forEach(function(j) {
        var rt = j.split(":"), et = rt.shift().trim();
        if (et) {
          var st = rt.join(":").trim();
          try {
            _.append(et, st);
          } catch (pt) {
            console.warn("Response " + pt.message);
          }
        }
      }), _;
    }
    Body.call(Request$1.prototype);
    function Response$1(d, _) {
      if (!(this instanceof Response$1)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
      if (_ || (_ = {}), this.type = "default", this.status = _.status === void 0 ? 200 : _.status, this.status < 200 || this.status > 599) throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
      this.ok = this.status >= 200 && this.status < 300, this.statusText = _.statusText === void 0 ? "" : "" + _.statusText, this.headers = new Headers(_.headers), this.url = _.url || "", this._initBody(d);
    }
    Body.call(Response$1.prototype);
    Response$1.prototype.clone = function() {
      return new Response$1(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };
    Response$1.error = function() {
      var d = new Response$1(null, {
        status: 200,
        statusText: ""
      });
      return d.ok = false, d.status = 0, d.type = "error", d;
    };
    var redirectStatuses = [
      301,
      302,
      303,
      307,
      308
    ];
    Response$1.redirect = function(d, _) {
      if (redirectStatuses.indexOf(_) === -1) throw new RangeError("Invalid status code");
      return new Response$1(null, {
        status: _,
        headers: {
          location: d
        }
      });
    };
    var DOMException$1 = g$1.DOMException;
    try {
      new DOMException$1();
    } catch (d) {
      DOMException$1 = function(_, $) {
        this.message = _, this.name = $;
        var j = Error(_);
        this.stack = j.stack;
      }, DOMException$1.prototype = Object.create(Error.prototype), DOMException$1.prototype.constructor = DOMException$1;
    }
    function fetch$1(d, _) {
      return new Promise(function($, j) {
        var rt = new Request$1(d, _);
        if (rt.signal && rt.signal.aborted) return j(new DOMException$1("Aborted", "AbortError"));
        var et = new XMLHttpRequest();
        function st() {
          et.abort();
        }
        et.onload = function() {
          var Bt = {
            statusText: et.statusText,
            headers: parseHeaders(et.getAllResponseHeaders() || "")
          };
          rt.url.indexOf("file://") === 0 && (et.status < 200 || et.status > 599) ? Bt.status = 200 : Bt.status = et.status, Bt.url = "responseURL" in et ? et.responseURL : Bt.headers.get("X-Request-URL");
          var St = "response" in et ? et.response : et.responseText;
          setTimeout(function() {
            $(new Response$1(St, Bt));
          }, 0);
        }, et.onerror = function() {
          setTimeout(function() {
            j(new TypeError("Network request failed"));
          }, 0);
        }, et.ontimeout = function() {
          setTimeout(function() {
            j(new TypeError("Network request timed out"));
          }, 0);
        }, et.onabort = function() {
          setTimeout(function() {
            j(new DOMException$1("Aborted", "AbortError"));
          }, 0);
        };
        function pt(Bt) {
          try {
            return Bt === "" && g$1.location.href ? g$1.location.href : Bt;
          } catch {
            return Bt;
          }
        }
        if (et.open(rt.method, pt(rt.url), true), rt.credentials === "include" ? et.withCredentials = true : rt.credentials === "omit" && (et.withCredentials = false), "responseType" in et && (support.blob ? et.responseType = "blob" : support.arrayBuffer && (et.responseType = "arraybuffer")), _ && typeof _.headers == "object" && !(_.headers instanceof Headers || g$1.Headers && _.headers instanceof g$1.Headers)) {
          var Et = [];
          Object.getOwnPropertyNames(_.headers).forEach(function(Bt) {
            Et.push(normalizeName(Bt)), et.setRequestHeader(Bt, normalizeValue(_.headers[Bt]));
          }), rt.headers.forEach(function(Bt, St) {
            Et.indexOf(St) === -1 && et.setRequestHeader(St, Bt);
          });
        } else rt.headers.forEach(function(Bt, St) {
          et.setRequestHeader(St, Bt);
        });
        rt.signal && (rt.signal.addEventListener("abort", st), et.onreadystatechange = function() {
          et.readyState === 4 && rt.signal.removeEventListener("abort", st);
        }), et.send(typeof rt._bodyInit > "u" ? null : rt._bodyInit);
      });
    }
    fetch$1.polyfill = true;
    g$1.fetch || (g$1.fetch = fetch$1, g$1.Headers = Headers, g$1.Request = Request$1, g$1.Response = Response$1);
    self.fetch.bind(self);
    var __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(d, _, $, j) {
      function rt(et) {
        return et instanceof $ ? et : new $(function(st) {
          st(et);
        });
      }
      return new ($ || ($ = Promise))(function(et, st) {
        function pt(St) {
          try {
            Bt(j.next(St));
          } catch ($t) {
            st($t);
          }
        }
        function Et(St) {
          try {
            Bt(j.throw(St));
          } catch ($t) {
            st($t);
          }
        }
        function Bt(St) {
          St.done ? et(St.value) : rt(St.value).then(pt, Et);
        }
        Bt((j = j.apply(d, _ || [])).next());
      });
    };
    Object.defineProperty(nodes, "__esModule", {
      value: true
    });
    nodes.Nodes = void 0;
    class Nodes {
      constructor() {
        this.nodeIndex = -1, this.committee = /* @__PURE__ */ new Set(), this.topology = [], this.initTime = 0;
      }
      init(_) {
        return __awaiter$1(this, void 0, void 0, function* () {
          this.nodeIndex = -1, this.committee.clear(), this.topology = [], this.initTime = Date.now();
          let $ = [];
          try {
            $ = yield (yield fetch(_)).json();
          } catch (j) {
            throw new Error(`exception in fetch(${_}): ${j}`);
          }
          for (const j of $) j.Healthy === "1" && this.topology.push(j);
          if (this.topology.length === 0) throw new Error(`no healthy nodes in ${_}`);
        });
      }
      getHealthyFor(_) {
        var $;
        const j = [];
        for (const rt of this.topology) rt.Weight > 0 && (!(($ = rt.Mngr) === null || $ === void 0) && $.health[_]) && j.push(rt);
        return j;
      }
    }
    nodes.Nodes = Nodes;
    const version$1 = "2.3.3", require$$1$1 = {
      version: version$1
    };
    var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(d, _, $, j) {
      function rt(et) {
        return et instanceof $ ? et : new $(function(st) {
          st(et);
        });
      }
      return new ($ || ($ = Promise))(function(et, st) {
        function pt(St) {
          try {
            Bt(j.next(St));
          } catch ($t) {
            st($t);
          }
        }
        function Et(St) {
          try {
            Bt(j.throw(St));
          } catch ($t) {
            st($t);
          }
        }
        function Bt(St) {
          St.done ? et(St.value) : rt(St.value).then(pt, Et);
        }
        Bt((j = j.apply(d, _ || [])).next());
      });
    };
    Object.defineProperty(lib$1, "__esModule", {
      value: true
    });
    lib$1.getHttpV4Endpoint = lib$1.getHttpV4Endpoints = getHttpEndpoint_1 = lib$1.getHttpEndpoint = lib$1.getHttpEndpoints = lib$1.Access = void 0;
    const nodes_1 = nodes;
    class Access {
      constructor() {
        this.host = "ton.access.orbs.network", this.urlVersion = 1, this.nodes = new nodes_1.Nodes();
      }
      init() {
        return __awaiter(this, void 0, void 0, function* () {
          const _ = require$$1$1;
          yield this.nodes.init(`https://${this.host}/mngr/nodes?npm_version=${_.version}`);
        });
      }
      makeProtonet(_, $) {
        let j = "";
        switch (_) {
          case "toncenter-api-v2":
            j += "v2-";
            break;
          case "ton-api-v4":
            j += "v4-";
            break;
        }
        return j += $, j;
      }
      weightedRandom(_) {
        let $ = 0;
        for (const et of _) $ += et.Weight;
        const j = Math.floor(Math.random() * $);
        let rt = 0;
        for (const et of _) {
          if (j >= rt && j < rt + et.Weight) return et;
          rt += et.Weight;
        }
      }
      buildUrls(_, $, j, rt) {
        j || (j = ""), $ || ($ = "toncenter-api-v2"), _ || (_ = "mainnet"), j.length && (j = j.replace(/^\/+/, ""));
        const et = [], st = this.makeProtonet($, _);
        let pt = this.nodes.getHealthyFor(st);
        if (!(pt == null ? void 0 : pt.length)) throw new Error(`no healthy nodes for ${st}`);
        if (rt && pt.length) {
          const Et = this.weightedRandom(pt);
          if (Et) pt = [
            Et
          ];
          else throw new Error("weightedRandom return empty");
        }
        for (const Et of pt) {
          let Bt = `https://${this.host}/${Et.NodeId}/${this.urlVersion}/${_}/${$}`;
          j.length && (Bt += `/${j}`), et.push(Bt);
        }
        return et;
      }
    }
    lib$1.Access = Access;
    function getEndpoints(d, _, $, j) {
      return __awaiter(this, void 0, void 0, function* () {
        const rt = new Access();
        return yield rt.init(), rt.buildUrls(d, _, $, j);
      });
    }
    function getHttpEndpoints(d, _) {
      return __awaiter(this, void 0, void 0, function* () {
        const $ = (d == null ? void 0 : d.network) ? d.network : "mainnet";
        let j = "jsonRPC";
        return (d == null ? void 0 : d.protocol) === "rest" && (j = ""), yield getEndpoints($, "toncenter-api-v2", j, _);
      });
    }
    lib$1.getHttpEndpoints = getHttpEndpoints;
    function getHttpEndpoint(d) {
      return __awaiter(this, void 0, void 0, function* () {
        return (yield getHttpEndpoints(d, true))[0];
      });
    }
    var getHttpEndpoint_1 = lib$1.getHttpEndpoint = getHttpEndpoint;
    function getHttpV4Endpoints(d, _) {
      return __awaiter(this, void 0, void 0, function* () {
        const $ = (d == null ? void 0 : d.network) ? d.network : "mainnet";
        if ((d == null ? void 0 : d.protocol) === "json-rpc") throw Error("config.protocol json-rpc is not supported for getTonApiV4Endpoints");
        return yield getEndpoints($, "ton-api-v4", "", _);
      });
    }
    lib$1.getHttpV4Endpoints = getHttpV4Endpoints;
    function getHttpV4Endpoint(d) {
      return __awaiter(this, void 0, void 0, function* () {
        return (yield getHttpV4Endpoints(d, true))[0];
      });
    }
    lib$1.getHttpV4Endpoint = getHttpV4Endpoint;
    const byteToHex = [];
    for (let d = 0; d < 256; ++d) byteToHex.push((d + 256).toString(16).slice(1));
    function unsafeStringify(d, _ = 0) {
      return (byteToHex[d[_ + 0]] + byteToHex[d[_ + 1]] + byteToHex[d[_ + 2]] + byteToHex[d[_ + 3]] + "-" + byteToHex[d[_ + 4]] + byteToHex[d[_ + 5]] + "-" + byteToHex[d[_ + 6]] + byteToHex[d[_ + 7]] + "-" + byteToHex[d[_ + 8]] + byteToHex[d[_ + 9]] + "-" + byteToHex[d[_ + 10]] + byteToHex[d[_ + 11]] + byteToHex[d[_ + 12]] + byteToHex[d[_ + 13]] + byteToHex[d[_ + 14]] + byteToHex[d[_ + 15]]).toLowerCase();
    }
    let getRandomValues;
    const rnds8 = new Uint8Array(16);
    function rng() {
      if (!getRandomValues) {
        if (typeof crypto > "u" || !crypto.getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        getRandomValues = crypto.getRandomValues.bind(crypto);
      }
      return getRandomValues(rnds8);
    }
    const randomUUID = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), native = {
      randomUUID
    };
    function v4(d, _, $) {
      var _a3;
      if (native.randomUUID && !d) return native.randomUUID();
      d = d || {};
      const j = d.random ?? ((_a3 = d.rng) == null ? void 0 : _a3.call(d)) ?? rng();
      if (j.length < 16) throw new Error("Random bytes length must be >= 16");
      return j[6] = j[6] & 15 | 64, j[8] = j[8] & 63 | 128, unsafeStringify(j);
    }
    var bn$2 = {
      exports: {}
    };
    bn$2.exports;
    (function(d) {
      (function(_, $) {
        function j(tt, nt) {
          if (!tt) throw new Error(nt || "Assertion failed");
        }
        function rt(tt, nt) {
          tt.super_ = nt;
          var it = function() {
          };
          it.prototype = nt.prototype, tt.prototype = new it(), tt.prototype.constructor = tt;
        }
        function et(tt, nt, it) {
          if (et.isBN(tt)) return tt;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, tt !== null && ((nt === "le" || nt === "be") && (it = nt, nt = 10), this._init(tt || 0, nt || 10, it || "be"));
        }
        typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
        var st;
        try {
          st = require$$0$2.Buffer;
        } catch {
        }
        et.isBN = function(nt) {
          return nt instanceof et ? true : nt !== null && typeof nt == "object" && nt.constructor.wordSize === et.wordSize && Array.isArray(nt.words);
        }, et.max = function(nt, it) {
          return nt.cmp(it) > 0 ? nt : it;
        }, et.min = function(nt, it) {
          return nt.cmp(it) < 0 ? nt : it;
        }, et.prototype._init = function(nt, it, at) {
          if (typeof nt == "number") return this._initNumber(nt, it, at);
          if (typeof nt == "object") return this._initArray(nt, it, at);
          it === "hex" && (it = 16), j(it === (it | 0) && it >= 2 && it <= 36), nt = nt.toString().replace(/\s+/g, "");
          var ct = 0;
          nt[0] === "-" && ct++, it === 16 ? this._parseHex(nt, ct) : this._parseBase(nt, it, ct), nt[0] === "-" && (this.negative = 1), this._strip(), at === "le" && this._initArray(this.toArray(), it, at);
        }, et.prototype._initNumber = function(nt, it, at) {
          nt < 0 && (this.negative = 1, nt = -nt), nt < 67108864 ? (this.words = [
            nt & 67108863
          ], this.length = 1) : nt < 4503599627370496 ? (this.words = [
            nt & 67108863,
            nt / 67108864 & 67108863
          ], this.length = 2) : (j(nt < 9007199254740992), this.words = [
            nt & 67108863,
            nt / 67108864 & 67108863,
            1
          ], this.length = 3), at === "le" && this._initArray(this.toArray(), it, at);
        }, et.prototype._initArray = function(nt, it, at) {
          if (j(typeof nt.length == "number"), nt.length <= 0) return this.words = [
            0
          ], this.length = 1, this;
          this.length = Math.ceil(nt.length / 3), this.words = new Array(this.length);
          for (var ct = 0; ct < this.length; ct++) this.words[ct] = 0;
          var Mt, At, ut = 0;
          if (at === "be") for (ct = nt.length - 1, Mt = 0; ct >= 0; ct -= 3) At = nt[ct] | nt[ct - 1] << 8 | nt[ct - 2] << 16, this.words[Mt] |= At << ut & 67108863, this.words[Mt + 1] = At >>> 26 - ut & 67108863, ut += 24, ut >= 26 && (ut -= 26, Mt++);
          else if (at === "le") for (ct = 0, Mt = 0; ct < nt.length; ct += 3) At = nt[ct] | nt[ct + 1] << 8 | nt[ct + 2] << 16, this.words[Mt] |= At << ut & 67108863, this.words[Mt + 1] = At >>> 26 - ut & 67108863, ut += 24, ut >= 26 && (ut -= 26, Mt++);
          return this._strip();
        };
        function pt(tt, nt, it) {
          for (var at = 0, ct = Math.min(tt.length, it), Mt = 0, At = nt; At < ct; At++) {
            var ut = tt.charCodeAt(At) - 48;
            at <<= 4;
            var ot;
            ut >= 49 && ut <= 54 ? ot = ut - 49 + 10 : ut >= 17 && ut <= 22 ? ot = ut - 17 + 10 : ot = ut, at |= ot, Mt |= ot;
          }
          return j(!(Mt & 240), "Invalid character in " + tt), at;
        }
        et.prototype._parseHex = function(nt, it) {
          this.length = Math.ceil((nt.length - it) / 6), this.words = new Array(this.length);
          for (var at = 0; at < this.length; at++) this.words[at] = 0;
          var ct, Mt, At = 0;
          for (at = nt.length - 6, ct = 0; at >= it; at -= 6) Mt = pt(nt, at, at + 6), this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] |= Mt >>> 26 - At & 4194303, At += 24, At >= 26 && (At -= 26, ct++);
          at + 6 !== it && (Mt = pt(nt, it, at + 6), this.words[ct] |= Mt << At & 67108863, this.words[ct + 1] |= Mt >>> 26 - At & 4194303), this._strip();
        };
        function Et(tt, nt, it, at) {
          for (var ct = 0, Mt = 0, At = Math.min(tt.length, it), ut = nt; ut < At; ut++) {
            var ot = tt.charCodeAt(ut) - 48;
            ct *= at, ot >= 49 ? Mt = ot - 49 + 10 : ot >= 17 ? Mt = ot - 17 + 10 : Mt = ot, j(ot >= 0 && Mt < at, "Invalid character"), ct += Mt;
          }
          return ct;
        }
        et.prototype._parseBase = function(nt, it, at) {
          this.words = [
            0
          ], this.length = 1;
          for (var ct = 0, Mt = 1; Mt <= 67108863; Mt *= it) ct++;
          ct--, Mt = Mt / it | 0;
          for (var At = nt.length - at, ut = At % ct, ot = Math.min(At, At - ut) + at, Ct = 0, Rt = at; Rt < ot; Rt += ct) Ct = Et(nt, Rt, Rt + ct, it), this.imuln(Mt), this.words[0] + Ct < 67108864 ? this.words[0] += Ct : this._iaddn(Ct);
          if (ut !== 0) {
            var Nt = 1;
            for (Ct = Et(nt, Rt, nt.length, it), Rt = 0; Rt < ut; Rt++) Nt *= it;
            this.imuln(Nt), this.words[0] + Ct < 67108864 ? this.words[0] += Ct : this._iaddn(Ct);
          }
        }, et.prototype.copy = function(nt) {
          nt.words = new Array(this.length);
          for (var it = 0; it < this.length; it++) nt.words[it] = this.words[it];
          nt.length = this.length, nt.negative = this.negative, nt.red = this.red;
        };
        function Bt(tt, nt) {
          tt.words = nt.words, tt.length = nt.length, tt.negative = nt.negative, tt.red = nt.red;
        }
        et.prototype._move = function(nt) {
          Bt(nt, this);
        }, et.prototype.clone = function() {
          var nt = new et(null);
          return this.copy(nt), nt;
        }, et.prototype._expand = function(nt) {
          for (; this.length < nt; ) this.words[this.length++] = 0;
          return this;
        }, et.prototype._strip = function() {
          for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
          return this._normSign();
        }, et.prototype._normSign = function() {
          return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
        }, typeof Symbol < "u" && typeof Symbol.for == "function" ? et.prototype[Symbol.for("nodejs.util.inspect.custom")] = St : et.prototype.inspect = St;
        function St() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var $t = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ], kt = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ], Tt = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        et.prototype.toString = function(nt, it) {
          nt = nt || 10, it = it | 0 || 1;
          var at;
          if (nt === 16 || nt === "hex") {
            at = "";
            for (var ct = 0, Mt = 0, At = 0; At < this.length; At++) {
              var ut = this.words[At], ot = ((ut << ct | Mt) & 16777215).toString(16);
              Mt = ut >>> 24 - ct & 16777215, Mt !== 0 || At !== this.length - 1 ? at = $t[6 - ot.length] + ot + at : at = ot + at, ct += 2, ct >= 26 && (ct -= 26, At--);
            }
            for (Mt !== 0 && (at = Mt.toString(16) + at); at.length % it !== 0; ) at = "0" + at;
            return this.negative !== 0 && (at = "-" + at), at;
          }
          if (nt === (nt | 0) && nt >= 2 && nt <= 36) {
            var Ct = kt[nt], Rt = Tt[nt];
            at = "";
            var Nt = this.clone();
            for (Nt.negative = 0; !Nt.isZero(); ) {
              var Wt = Nt.modrn(Rt).toString(nt);
              Nt = Nt.idivn(Rt), Nt.isZero() ? at = Wt + at : at = $t[Ct - Wt.length] + Wt + at;
            }
            for (this.isZero() && (at = "0" + at); at.length % it !== 0; ) at = "0" + at;
            return this.negative !== 0 && (at = "-" + at), at;
          }
          j(false, "Base should be between 2 and 36");
        }, et.prototype.toNumber = function() {
          var nt = this.words[0];
          return this.length === 2 ? nt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? nt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -nt : nt;
        }, et.prototype.toJSON = function() {
          return this.toString(16, 2);
        }, st && (et.prototype.toBuffer = function(nt, it) {
          return this.toArrayLike(st, nt, it);
        }), et.prototype.toArray = function(nt, it) {
          return this.toArrayLike(Array, nt, it);
        };
        var Pt = function(nt, it) {
          return nt.allocUnsafe ? nt.allocUnsafe(it) : new nt(it);
        };
        et.prototype.toArrayLike = function(nt, it, at) {
          this._strip();
          var ct = this.byteLength(), Mt = at || Math.max(1, ct);
          j(ct <= Mt, "byte array longer than desired length"), j(Mt > 0, "Requested array length <= 0");
          var At = Pt(nt, Mt), ut = it === "le" ? "LE" : "BE";
          return this["_toArrayLike" + ut](At, ct), At;
        }, et.prototype._toArrayLikeLE = function(nt, it) {
          for (var at = 0, ct = 0, Mt = 0, At = 0; Mt < this.length; Mt++) {
            var ut = this.words[Mt] << At | ct;
            nt[at++] = ut & 255, at < nt.length && (nt[at++] = ut >> 8 & 255), at < nt.length && (nt[at++] = ut >> 16 & 255), At === 6 ? (at < nt.length && (nt[at++] = ut >> 24 & 255), ct = 0, At = 0) : (ct = ut >>> 24, At += 2);
          }
          if (at < nt.length) for (nt[at++] = ct; at < nt.length; ) nt[at++] = 0;
        }, et.prototype._toArrayLikeBE = function(nt, it) {
          for (var at = nt.length - 1, ct = 0, Mt = 0, At = 0; Mt < this.length; Mt++) {
            var ut = this.words[Mt] << At | ct;
            nt[at--] = ut & 255, at >= 0 && (nt[at--] = ut >> 8 & 255), at >= 0 && (nt[at--] = ut >> 16 & 255), At === 6 ? (at >= 0 && (nt[at--] = ut >> 24 & 255), ct = 0, At = 0) : (ct = ut >>> 24, At += 2);
          }
          if (at >= 0) for (nt[at--] = ct; at >= 0; ) nt[at--] = 0;
        }, Math.clz32 ? et.prototype._countBits = function(nt) {
          return 32 - Math.clz32(nt);
        } : et.prototype._countBits = function(nt) {
          var it = nt, at = 0;
          return it >= 4096 && (at += 13, it >>>= 13), it >= 64 && (at += 7, it >>>= 7), it >= 8 && (at += 4, it >>>= 4), it >= 2 && (at += 2, it >>>= 2), at + it;
        }, et.prototype._zeroBits = function(nt) {
          if (nt === 0) return 26;
          var it = nt, at = 0;
          return it & 8191 || (at += 13, it >>>= 13), it & 127 || (at += 7, it >>>= 7), it & 15 || (at += 4, it >>>= 4), it & 3 || (at += 2, it >>>= 2), it & 1 || at++, at;
        }, et.prototype.bitLength = function() {
          var nt = this.words[this.length - 1], it = this._countBits(nt);
          return (this.length - 1) * 26 + it;
        };
        function It(tt) {
          for (var nt = new Array(tt.bitLength()), it = 0; it < nt.length; it++) {
            var at = it / 26 | 0, ct = it % 26;
            nt[it] = tt.words[at] >>> ct & 1;
          }
          return nt;
        }
        et.prototype.zeroBits = function() {
          if (this.isZero()) return 0;
          for (var nt = 0, it = 0; it < this.length; it++) {
            var at = this._zeroBits(this.words[it]);
            if (nt += at, at !== 26) break;
          }
          return nt;
        }, et.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, et.prototype.toTwos = function(nt) {
          return this.negative !== 0 ? this.abs().inotn(nt).iaddn(1) : this.clone();
        }, et.prototype.fromTwos = function(nt) {
          return this.testn(nt - 1) ? this.notn(nt).iaddn(1).ineg() : this.clone();
        }, et.prototype.isNeg = function() {
          return this.negative !== 0;
        }, et.prototype.neg = function() {
          return this.clone().ineg();
        }, et.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, et.prototype.iuor = function(nt) {
          for (; this.length < nt.length; ) this.words[this.length++] = 0;
          for (var it = 0; it < nt.length; it++) this.words[it] = this.words[it] | nt.words[it];
          return this._strip();
        }, et.prototype.ior = function(nt) {
          return j((this.negative | nt.negative) === 0), this.iuor(nt);
        }, et.prototype.or = function(nt) {
          return this.length > nt.length ? this.clone().ior(nt) : nt.clone().ior(this);
        }, et.prototype.uor = function(nt) {
          return this.length > nt.length ? this.clone().iuor(nt) : nt.clone().iuor(this);
        }, et.prototype.iuand = function(nt) {
          var it;
          this.length > nt.length ? it = nt : it = this;
          for (var at = 0; at < it.length; at++) this.words[at] = this.words[at] & nt.words[at];
          return this.length = it.length, this._strip();
        }, et.prototype.iand = function(nt) {
          return j((this.negative | nt.negative) === 0), this.iuand(nt);
        }, et.prototype.and = function(nt) {
          return this.length > nt.length ? this.clone().iand(nt) : nt.clone().iand(this);
        }, et.prototype.uand = function(nt) {
          return this.length > nt.length ? this.clone().iuand(nt) : nt.clone().iuand(this);
        }, et.prototype.iuxor = function(nt) {
          var it, at;
          this.length > nt.length ? (it = this, at = nt) : (it = nt, at = this);
          for (var ct = 0; ct < at.length; ct++) this.words[ct] = it.words[ct] ^ at.words[ct];
          if (this !== it) for (; ct < it.length; ct++) this.words[ct] = it.words[ct];
          return this.length = it.length, this._strip();
        }, et.prototype.ixor = function(nt) {
          return j((this.negative | nt.negative) === 0), this.iuxor(nt);
        }, et.prototype.xor = function(nt) {
          return this.length > nt.length ? this.clone().ixor(nt) : nt.clone().ixor(this);
        }, et.prototype.uxor = function(nt) {
          return this.length > nt.length ? this.clone().iuxor(nt) : nt.clone().iuxor(this);
        }, et.prototype.inotn = function(nt) {
          j(typeof nt == "number" && nt >= 0);
          var it = Math.ceil(nt / 26) | 0, at = nt % 26;
          this._expand(it), at > 0 && it--;
          for (var ct = 0; ct < it; ct++) this.words[ct] = ~this.words[ct] & 67108863;
          return at > 0 && (this.words[ct] = ~this.words[ct] & 67108863 >> 26 - at), this._strip();
        }, et.prototype.notn = function(nt) {
          return this.clone().inotn(nt);
        }, et.prototype.setn = function(nt, it) {
          j(typeof nt == "number" && nt >= 0);
          var at = nt / 26 | 0, ct = nt % 26;
          return this._expand(at + 1), it ? this.words[at] = this.words[at] | 1 << ct : this.words[at] = this.words[at] & ~(1 << ct), this._strip();
        }, et.prototype.iadd = function(nt) {
          var it;
          if (this.negative !== 0 && nt.negative === 0) return this.negative = 0, it = this.isub(nt), this.negative ^= 1, this._normSign();
          if (this.negative === 0 && nt.negative !== 0) return nt.negative = 0, it = this.isub(nt), nt.negative = 1, it._normSign();
          var at, ct;
          this.length > nt.length ? (at = this, ct = nt) : (at = nt, ct = this);
          for (var Mt = 0, At = 0; At < ct.length; At++) it = (at.words[At] | 0) + (ct.words[At] | 0) + Mt, this.words[At] = it & 67108863, Mt = it >>> 26;
          for (; Mt !== 0 && At < at.length; At++) it = (at.words[At] | 0) + Mt, this.words[At] = it & 67108863, Mt = it >>> 26;
          if (this.length = at.length, Mt !== 0) this.words[this.length] = Mt, this.length++;
          else if (at !== this) for (; At < at.length; At++) this.words[At] = at.words[At];
          return this;
        }, et.prototype.add = function(nt) {
          var it;
          return nt.negative !== 0 && this.negative === 0 ? (nt.negative = 0, it = this.sub(nt), nt.negative ^= 1, it) : nt.negative === 0 && this.negative !== 0 ? (this.negative = 0, it = nt.sub(this), this.negative = 1, it) : this.length > nt.length ? this.clone().iadd(nt) : nt.clone().iadd(this);
        }, et.prototype.isub = function(nt) {
          if (nt.negative !== 0) {
            nt.negative = 0;
            var it = this.iadd(nt);
            return nt.negative = 1, it._normSign();
          } else if (this.negative !== 0) return this.negative = 0, this.iadd(nt), this.negative = 1, this._normSign();
          var at = this.cmp(nt);
          if (at === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          var ct, Mt;
          at > 0 ? (ct = this, Mt = nt) : (ct = nt, Mt = this);
          for (var At = 0, ut = 0; ut < Mt.length; ut++) it = (ct.words[ut] | 0) - (Mt.words[ut] | 0) + At, At = it >> 26, this.words[ut] = it & 67108863;
          for (; At !== 0 && ut < ct.length; ut++) it = (ct.words[ut] | 0) + At, At = it >> 26, this.words[ut] = it & 67108863;
          if (At === 0 && ut < ct.length && ct !== this) for (; ut < ct.length; ut++) this.words[ut] = ct.words[ut];
          return this.length = Math.max(this.length, ut), ct !== this && (this.negative = 1), this._strip();
        }, et.prototype.sub = function(nt) {
          return this.clone().isub(nt);
        };
        function jt(tt, nt, it) {
          it.negative = nt.negative ^ tt.negative;
          var at = tt.length + nt.length | 0;
          it.length = at, at = at - 1 | 0;
          var ct = tt.words[0] | 0, Mt = nt.words[0] | 0, At = ct * Mt, ut = At & 67108863, ot = At / 67108864 | 0;
          it.words[0] = ut;
          for (var Ct = 1; Ct < at; Ct++) {
            for (var Rt = ot >>> 26, Nt = ot & 67108863, Wt = Math.min(Ct, nt.length - 1), Xt = Math.max(0, Ct - tt.length + 1); Xt <= Wt; Xt++) {
              var rr = Ct - Xt | 0;
              ct = tt.words[rr] | 0, Mt = nt.words[Xt] | 0, At = ct * Mt + Nt, Rt += At / 67108864 | 0, Nt = At & 67108863;
            }
            it.words[Ct] = Nt | 0, ot = Rt | 0;
          }
          return ot !== 0 ? it.words[Ct] = ot | 0 : it.length--, it._strip();
        }
        var Dt = function(nt, it, at) {
          var ct = nt.words, Mt = it.words, At = at.words, ut = 0, ot, Ct, Rt, Nt = ct[0] | 0, Wt = Nt & 8191, Xt = Nt >>> 13, rr = ct[1] | 0, Gt = rr & 8191, Yt = rr >>> 13, tr = ct[2] | 0, cr = tr & 8191, ir = tr >>> 13, Jt = ct[3] | 0, vr = Jt & 8191, Br = Jt >>> 13, _r = ct[4] | 0, $r = _r & 8191, Ur = _r >>> 13, Sr = ct[5] | 0, Mr = Sr & 8191, Kr = Sr >>> 13, kr = ct[6] | 0, Lr = kr & 8191, Gr = kr >>> 13, Tr = ct[7] | 0, yr = Tr & 8191, fr = Tr >>> 13, dr = ct[8] | 0, gr = dr & 8191, Er = dr >>> 13, zt = ct[9] | 0, qt = zt & 8191, Vt = zt >>> 13, Qt = Mt[0] | 0, hr = Qt & 8191, br = Qt >>> 13, pr = Mt[1] | 0, Rr = pr & 8191, qr = pr >>> 13, xr = Mt[2] | 0, Fr = xr & 8191, zr = xr >>> 13, Pr = Mt[3] | 0, Wr = Pr & 8191, tn = Pr >>> 13, Nr = Mt[4] | 0, Hr = Nr & 8191, rn = Nr >>> 13, jr = Mt[5] | 0, Yr = jr & 8191, nn = jr >>> 13, Or = Mt[6] | 0, Xr = Or & 8191, nr = Or >>> 13, or = Mt[7] | 0, ur = or & 8191, Ht = or >>> 13, lr = Mt[8] | 0, wr = lr & 8191, Ar = lr >>> 13, Cr = Mt[9] | 0, Ir = Cr & 8191, Jr = Cr >>> 13;
          at.negative = nt.negative ^ it.negative, at.length = 19, ot = Math.imul(Wt, hr), Ct = Math.imul(Wt, br), Ct = Ct + Math.imul(Xt, hr) | 0, Rt = Math.imul(Xt, br);
          var Qr = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, ot = Math.imul(Gt, hr), Ct = Math.imul(Gt, br), Ct = Ct + Math.imul(Yt, hr) | 0, Rt = Math.imul(Yt, br), ot = ot + Math.imul(Wt, Rr) | 0, Ct = Ct + Math.imul(Wt, qr) | 0, Ct = Ct + Math.imul(Xt, Rr) | 0, Rt = Rt + Math.imul(Xt, qr) | 0;
          var Sn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, ot = Math.imul(cr, hr), Ct = Math.imul(cr, br), Ct = Ct + Math.imul(ir, hr) | 0, Rt = Math.imul(ir, br), ot = ot + Math.imul(Gt, Rr) | 0, Ct = Ct + Math.imul(Gt, qr) | 0, Ct = Ct + Math.imul(Yt, Rr) | 0, Rt = Rt + Math.imul(Yt, qr) | 0, ot = ot + Math.imul(Wt, Fr) | 0, Ct = Ct + Math.imul(Wt, zr) | 0, Ct = Ct + Math.imul(Xt, Fr) | 0, Rt = Rt + Math.imul(Xt, zr) | 0;
          var dn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, ot = Math.imul(vr, hr), Ct = Math.imul(vr, br), Ct = Ct + Math.imul(Br, hr) | 0, Rt = Math.imul(Br, br), ot = ot + Math.imul(cr, Rr) | 0, Ct = Ct + Math.imul(cr, qr) | 0, Ct = Ct + Math.imul(ir, Rr) | 0, Rt = Rt + Math.imul(ir, qr) | 0, ot = ot + Math.imul(Gt, Fr) | 0, Ct = Ct + Math.imul(Gt, zr) | 0, Ct = Ct + Math.imul(Yt, Fr) | 0, Rt = Rt + Math.imul(Yt, zr) | 0, ot = ot + Math.imul(Wt, Wr) | 0, Ct = Ct + Math.imul(Wt, tn) | 0, Ct = Ct + Math.imul(Xt, Wr) | 0, Rt = Rt + Math.imul(Xt, tn) | 0;
          var yn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, ot = Math.imul($r, hr), Ct = Math.imul($r, br), Ct = Ct + Math.imul(Ur, hr) | 0, Rt = Math.imul(Ur, br), ot = ot + Math.imul(vr, Rr) | 0, Ct = Ct + Math.imul(vr, qr) | 0, Ct = Ct + Math.imul(Br, Rr) | 0, Rt = Rt + Math.imul(Br, qr) | 0, ot = ot + Math.imul(cr, Fr) | 0, Ct = Ct + Math.imul(cr, zr) | 0, Ct = Ct + Math.imul(ir, Fr) | 0, Rt = Rt + Math.imul(ir, zr) | 0, ot = ot + Math.imul(Gt, Wr) | 0, Ct = Ct + Math.imul(Gt, tn) | 0, Ct = Ct + Math.imul(Yt, Wr) | 0, Rt = Rt + Math.imul(Yt, tn) | 0, ot = ot + Math.imul(Wt, Hr) | 0, Ct = Ct + Math.imul(Wt, rn) | 0, Ct = Ct + Math.imul(Xt, Hr) | 0, Rt = Rt + Math.imul(Xt, rn) | 0;
          var wn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, ot = Math.imul(Mr, hr), Ct = Math.imul(Mr, br), Ct = Ct + Math.imul(Kr, hr) | 0, Rt = Math.imul(Kr, br), ot = ot + Math.imul($r, Rr) | 0, Ct = Ct + Math.imul($r, qr) | 0, Ct = Ct + Math.imul(Ur, Rr) | 0, Rt = Rt + Math.imul(Ur, qr) | 0, ot = ot + Math.imul(vr, Fr) | 0, Ct = Ct + Math.imul(vr, zr) | 0, Ct = Ct + Math.imul(Br, Fr) | 0, Rt = Rt + Math.imul(Br, zr) | 0, ot = ot + Math.imul(cr, Wr) | 0, Ct = Ct + Math.imul(cr, tn) | 0, Ct = Ct + Math.imul(ir, Wr) | 0, Rt = Rt + Math.imul(ir, tn) | 0, ot = ot + Math.imul(Gt, Hr) | 0, Ct = Ct + Math.imul(Gt, rn) | 0, Ct = Ct + Math.imul(Yt, Hr) | 0, Rt = Rt + Math.imul(Yt, rn) | 0, ot = ot + Math.imul(Wt, Yr) | 0, Ct = Ct + Math.imul(Wt, nn) | 0, Ct = Ct + Math.imul(Xt, Yr) | 0, Rt = Rt + Math.imul(Xt, nn) | 0;
          var Mn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, ot = Math.imul(Lr, hr), Ct = Math.imul(Lr, br), Ct = Ct + Math.imul(Gr, hr) | 0, Rt = Math.imul(Gr, br), ot = ot + Math.imul(Mr, Rr) | 0, Ct = Ct + Math.imul(Mr, qr) | 0, Ct = Ct + Math.imul(Kr, Rr) | 0, Rt = Rt + Math.imul(Kr, qr) | 0, ot = ot + Math.imul($r, Fr) | 0, Ct = Ct + Math.imul($r, zr) | 0, Ct = Ct + Math.imul(Ur, Fr) | 0, Rt = Rt + Math.imul(Ur, zr) | 0, ot = ot + Math.imul(vr, Wr) | 0, Ct = Ct + Math.imul(vr, tn) | 0, Ct = Ct + Math.imul(Br, Wr) | 0, Rt = Rt + Math.imul(Br, tn) | 0, ot = ot + Math.imul(cr, Hr) | 0, Ct = Ct + Math.imul(cr, rn) | 0, Ct = Ct + Math.imul(ir, Hr) | 0, Rt = Rt + Math.imul(ir, rn) | 0, ot = ot + Math.imul(Gt, Yr) | 0, Ct = Ct + Math.imul(Gt, nn) | 0, Ct = Ct + Math.imul(Yt, Yr) | 0, Rt = Rt + Math.imul(Yt, nn) | 0, ot = ot + Math.imul(Wt, Xr) | 0, Ct = Ct + Math.imul(Wt, nr) | 0, Ct = Ct + Math.imul(Xt, Xr) | 0, Rt = Rt + Math.imul(Xt, nr) | 0;
          var En = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, ot = Math.imul(yr, hr), Ct = Math.imul(yr, br), Ct = Ct + Math.imul(fr, hr) | 0, Rt = Math.imul(fr, br), ot = ot + Math.imul(Lr, Rr) | 0, Ct = Ct + Math.imul(Lr, qr) | 0, Ct = Ct + Math.imul(Gr, Rr) | 0, Rt = Rt + Math.imul(Gr, qr) | 0, ot = ot + Math.imul(Mr, Fr) | 0, Ct = Ct + Math.imul(Mr, zr) | 0, Ct = Ct + Math.imul(Kr, Fr) | 0, Rt = Rt + Math.imul(Kr, zr) | 0, ot = ot + Math.imul($r, Wr) | 0, Ct = Ct + Math.imul($r, tn) | 0, Ct = Ct + Math.imul(Ur, Wr) | 0, Rt = Rt + Math.imul(Ur, tn) | 0, ot = ot + Math.imul(vr, Hr) | 0, Ct = Ct + Math.imul(vr, rn) | 0, Ct = Ct + Math.imul(Br, Hr) | 0, Rt = Rt + Math.imul(Br, rn) | 0, ot = ot + Math.imul(cr, Yr) | 0, Ct = Ct + Math.imul(cr, nn) | 0, Ct = Ct + Math.imul(ir, Yr) | 0, Rt = Rt + Math.imul(ir, nn) | 0, ot = ot + Math.imul(Gt, Xr) | 0, Ct = Ct + Math.imul(Gt, nr) | 0, Ct = Ct + Math.imul(Yt, Xr) | 0, Rt = Rt + Math.imul(Yt, nr) | 0, ot = ot + Math.imul(Wt, ur) | 0, Ct = Ct + Math.imul(Wt, Ht) | 0, Ct = Ct + Math.imul(Xt, ur) | 0, Rt = Rt + Math.imul(Xt, Ht) | 0;
          var xn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, ot = Math.imul(gr, hr), Ct = Math.imul(gr, br), Ct = Ct + Math.imul(Er, hr) | 0, Rt = Math.imul(Er, br), ot = ot + Math.imul(yr, Rr) | 0, Ct = Ct + Math.imul(yr, qr) | 0, Ct = Ct + Math.imul(fr, Rr) | 0, Rt = Rt + Math.imul(fr, qr) | 0, ot = ot + Math.imul(Lr, Fr) | 0, Ct = Ct + Math.imul(Lr, zr) | 0, Ct = Ct + Math.imul(Gr, Fr) | 0, Rt = Rt + Math.imul(Gr, zr) | 0, ot = ot + Math.imul(Mr, Wr) | 0, Ct = Ct + Math.imul(Mr, tn) | 0, Ct = Ct + Math.imul(Kr, Wr) | 0, Rt = Rt + Math.imul(Kr, tn) | 0, ot = ot + Math.imul($r, Hr) | 0, Ct = Ct + Math.imul($r, rn) | 0, Ct = Ct + Math.imul(Ur, Hr) | 0, Rt = Rt + Math.imul(Ur, rn) | 0, ot = ot + Math.imul(vr, Yr) | 0, Ct = Ct + Math.imul(vr, nn) | 0, Ct = Ct + Math.imul(Br, Yr) | 0, Rt = Rt + Math.imul(Br, nn) | 0, ot = ot + Math.imul(cr, Xr) | 0, Ct = Ct + Math.imul(cr, nr) | 0, Ct = Ct + Math.imul(ir, Xr) | 0, Rt = Rt + Math.imul(ir, nr) | 0, ot = ot + Math.imul(Gt, ur) | 0, Ct = Ct + Math.imul(Gt, Ht) | 0, Ct = Ct + Math.imul(Yt, ur) | 0, Rt = Rt + Math.imul(Yt, Ht) | 0, ot = ot + Math.imul(Wt, wr) | 0, Ct = Ct + Math.imul(Wt, Ar) | 0, Ct = Ct + Math.imul(Xt, wr) | 0, Rt = Rt + Math.imul(Xt, Ar) | 0;
          var Cn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, ot = Math.imul(qt, hr), Ct = Math.imul(qt, br), Ct = Ct + Math.imul(Vt, hr) | 0, Rt = Math.imul(Vt, br), ot = ot + Math.imul(gr, Rr) | 0, Ct = Ct + Math.imul(gr, qr) | 0, Ct = Ct + Math.imul(Er, Rr) | 0, Rt = Rt + Math.imul(Er, qr) | 0, ot = ot + Math.imul(yr, Fr) | 0, Ct = Ct + Math.imul(yr, zr) | 0, Ct = Ct + Math.imul(fr, Fr) | 0, Rt = Rt + Math.imul(fr, zr) | 0, ot = ot + Math.imul(Lr, Wr) | 0, Ct = Ct + Math.imul(Lr, tn) | 0, Ct = Ct + Math.imul(Gr, Wr) | 0, Rt = Rt + Math.imul(Gr, tn) | 0, ot = ot + Math.imul(Mr, Hr) | 0, Ct = Ct + Math.imul(Mr, rn) | 0, Ct = Ct + Math.imul(Kr, Hr) | 0, Rt = Rt + Math.imul(Kr, rn) | 0, ot = ot + Math.imul($r, Yr) | 0, Ct = Ct + Math.imul($r, nn) | 0, Ct = Ct + Math.imul(Ur, Yr) | 0, Rt = Rt + Math.imul(Ur, nn) | 0, ot = ot + Math.imul(vr, Xr) | 0, Ct = Ct + Math.imul(vr, nr) | 0, Ct = Ct + Math.imul(Br, Xr) | 0, Rt = Rt + Math.imul(Br, nr) | 0, ot = ot + Math.imul(cr, ur) | 0, Ct = Ct + Math.imul(cr, Ht) | 0, Ct = Ct + Math.imul(ir, ur) | 0, Rt = Rt + Math.imul(ir, Ht) | 0, ot = ot + Math.imul(Gt, wr) | 0, Ct = Ct + Math.imul(Gt, Ar) | 0, Ct = Ct + Math.imul(Yt, wr) | 0, Rt = Rt + Math.imul(Yt, Ar) | 0, ot = ot + Math.imul(Wt, Ir) | 0, Ct = Ct + Math.imul(Wt, Jr) | 0, Ct = Ct + Math.imul(Xt, Ir) | 0, Rt = Rt + Math.imul(Xt, Jr) | 0;
          var _n = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, ot = Math.imul(qt, Rr), Ct = Math.imul(qt, qr), Ct = Ct + Math.imul(Vt, Rr) | 0, Rt = Math.imul(Vt, qr), ot = ot + Math.imul(gr, Fr) | 0, Ct = Ct + Math.imul(gr, zr) | 0, Ct = Ct + Math.imul(Er, Fr) | 0, Rt = Rt + Math.imul(Er, zr) | 0, ot = ot + Math.imul(yr, Wr) | 0, Ct = Ct + Math.imul(yr, tn) | 0, Ct = Ct + Math.imul(fr, Wr) | 0, Rt = Rt + Math.imul(fr, tn) | 0, ot = ot + Math.imul(Lr, Hr) | 0, Ct = Ct + Math.imul(Lr, rn) | 0, Ct = Ct + Math.imul(Gr, Hr) | 0, Rt = Rt + Math.imul(Gr, rn) | 0, ot = ot + Math.imul(Mr, Yr) | 0, Ct = Ct + Math.imul(Mr, nn) | 0, Ct = Ct + Math.imul(Kr, Yr) | 0, Rt = Rt + Math.imul(Kr, nn) | 0, ot = ot + Math.imul($r, Xr) | 0, Ct = Ct + Math.imul($r, nr) | 0, Ct = Ct + Math.imul(Ur, Xr) | 0, Rt = Rt + Math.imul(Ur, nr) | 0, ot = ot + Math.imul(vr, ur) | 0, Ct = Ct + Math.imul(vr, Ht) | 0, Ct = Ct + Math.imul(Br, ur) | 0, Rt = Rt + Math.imul(Br, Ht) | 0, ot = ot + Math.imul(cr, wr) | 0, Ct = Ct + Math.imul(cr, Ar) | 0, Ct = Ct + Math.imul(ir, wr) | 0, Rt = Rt + Math.imul(ir, Ar) | 0, ot = ot + Math.imul(Gt, Ir) | 0, Ct = Ct + Math.imul(Gt, Jr) | 0, Ct = Ct + Math.imul(Yt, Ir) | 0, Rt = Rt + Math.imul(Yt, Jr) | 0;
          var hn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, ot = Math.imul(qt, Fr), Ct = Math.imul(qt, zr), Ct = Ct + Math.imul(Vt, Fr) | 0, Rt = Math.imul(Vt, zr), ot = ot + Math.imul(gr, Wr) | 0, Ct = Ct + Math.imul(gr, tn) | 0, Ct = Ct + Math.imul(Er, Wr) | 0, Rt = Rt + Math.imul(Er, tn) | 0, ot = ot + Math.imul(yr, Hr) | 0, Ct = Ct + Math.imul(yr, rn) | 0, Ct = Ct + Math.imul(fr, Hr) | 0, Rt = Rt + Math.imul(fr, rn) | 0, ot = ot + Math.imul(Lr, Yr) | 0, Ct = Ct + Math.imul(Lr, nn) | 0, Ct = Ct + Math.imul(Gr, Yr) | 0, Rt = Rt + Math.imul(Gr, nn) | 0, ot = ot + Math.imul(Mr, Xr) | 0, Ct = Ct + Math.imul(Mr, nr) | 0, Ct = Ct + Math.imul(Kr, Xr) | 0, Rt = Rt + Math.imul(Kr, nr) | 0, ot = ot + Math.imul($r, ur) | 0, Ct = Ct + Math.imul($r, Ht) | 0, Ct = Ct + Math.imul(Ur, ur) | 0, Rt = Rt + Math.imul(Ur, Ht) | 0, ot = ot + Math.imul(vr, wr) | 0, Ct = Ct + Math.imul(vr, Ar) | 0, Ct = Ct + Math.imul(Br, wr) | 0, Rt = Rt + Math.imul(Br, Ar) | 0, ot = ot + Math.imul(cr, Ir) | 0, Ct = Ct + Math.imul(cr, Jr) | 0, Ct = Ct + Math.imul(ir, Ir) | 0, Rt = Rt + Math.imul(ir, Jr) | 0;
          var gn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, ot = Math.imul(qt, Wr), Ct = Math.imul(qt, tn), Ct = Ct + Math.imul(Vt, Wr) | 0, Rt = Math.imul(Vt, tn), ot = ot + Math.imul(gr, Hr) | 0, Ct = Ct + Math.imul(gr, rn) | 0, Ct = Ct + Math.imul(Er, Hr) | 0, Rt = Rt + Math.imul(Er, rn) | 0, ot = ot + Math.imul(yr, Yr) | 0, Ct = Ct + Math.imul(yr, nn) | 0, Ct = Ct + Math.imul(fr, Yr) | 0, Rt = Rt + Math.imul(fr, nn) | 0, ot = ot + Math.imul(Lr, Xr) | 0, Ct = Ct + Math.imul(Lr, nr) | 0, Ct = Ct + Math.imul(Gr, Xr) | 0, Rt = Rt + Math.imul(Gr, nr) | 0, ot = ot + Math.imul(Mr, ur) | 0, Ct = Ct + Math.imul(Mr, Ht) | 0, Ct = Ct + Math.imul(Kr, ur) | 0, Rt = Rt + Math.imul(Kr, Ht) | 0, ot = ot + Math.imul($r, wr) | 0, Ct = Ct + Math.imul($r, Ar) | 0, Ct = Ct + Math.imul(Ur, wr) | 0, Rt = Rt + Math.imul(Ur, Ar) | 0, ot = ot + Math.imul(vr, Ir) | 0, Ct = Ct + Math.imul(vr, Jr) | 0, Ct = Ct + Math.imul(Br, Ir) | 0, Rt = Rt + Math.imul(Br, Jr) | 0;
          var ln = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, ot = Math.imul(qt, Hr), Ct = Math.imul(qt, rn), Ct = Ct + Math.imul(Vt, Hr) | 0, Rt = Math.imul(Vt, rn), ot = ot + Math.imul(gr, Yr) | 0, Ct = Ct + Math.imul(gr, nn) | 0, Ct = Ct + Math.imul(Er, Yr) | 0, Rt = Rt + Math.imul(Er, nn) | 0, ot = ot + Math.imul(yr, Xr) | 0, Ct = Ct + Math.imul(yr, nr) | 0, Ct = Ct + Math.imul(fr, Xr) | 0, Rt = Rt + Math.imul(fr, nr) | 0, ot = ot + Math.imul(Lr, ur) | 0, Ct = Ct + Math.imul(Lr, Ht) | 0, Ct = Ct + Math.imul(Gr, ur) | 0, Rt = Rt + Math.imul(Gr, Ht) | 0, ot = ot + Math.imul(Mr, wr) | 0, Ct = Ct + Math.imul(Mr, Ar) | 0, Ct = Ct + Math.imul(Kr, wr) | 0, Rt = Rt + Math.imul(Kr, Ar) | 0, ot = ot + Math.imul($r, Ir) | 0, Ct = Ct + Math.imul($r, Jr) | 0, Ct = Ct + Math.imul(Ur, Ir) | 0, Rt = Rt + Math.imul(Ur, Jr) | 0;
          var pn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, ot = Math.imul(qt, Yr), Ct = Math.imul(qt, nn), Ct = Ct + Math.imul(Vt, Yr) | 0, Rt = Math.imul(Vt, nn), ot = ot + Math.imul(gr, Xr) | 0, Ct = Ct + Math.imul(gr, nr) | 0, Ct = Ct + Math.imul(Er, Xr) | 0, Rt = Rt + Math.imul(Er, nr) | 0, ot = ot + Math.imul(yr, ur) | 0, Ct = Ct + Math.imul(yr, Ht) | 0, Ct = Ct + Math.imul(fr, ur) | 0, Rt = Rt + Math.imul(fr, Ht) | 0, ot = ot + Math.imul(Lr, wr) | 0, Ct = Ct + Math.imul(Lr, Ar) | 0, Ct = Ct + Math.imul(Gr, wr) | 0, Rt = Rt + Math.imul(Gr, Ar) | 0, ot = ot + Math.imul(Mr, Ir) | 0, Ct = Ct + Math.imul(Mr, Jr) | 0, Ct = Ct + Math.imul(Kr, Ir) | 0, Rt = Rt + Math.imul(Kr, Jr) | 0;
          var mn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, ot = Math.imul(qt, Xr), Ct = Math.imul(qt, nr), Ct = Ct + Math.imul(Vt, Xr) | 0, Rt = Math.imul(Vt, nr), ot = ot + Math.imul(gr, ur) | 0, Ct = Ct + Math.imul(gr, Ht) | 0, Ct = Ct + Math.imul(Er, ur) | 0, Rt = Rt + Math.imul(Er, Ht) | 0, ot = ot + Math.imul(yr, wr) | 0, Ct = Ct + Math.imul(yr, Ar) | 0, Ct = Ct + Math.imul(fr, wr) | 0, Rt = Rt + Math.imul(fr, Ar) | 0, ot = ot + Math.imul(Lr, Ir) | 0, Ct = Ct + Math.imul(Lr, Jr) | 0, Ct = Ct + Math.imul(Gr, Ir) | 0, Rt = Rt + Math.imul(Gr, Jr) | 0;
          var sn = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, ot = Math.imul(qt, ur), Ct = Math.imul(qt, Ht), Ct = Ct + Math.imul(Vt, ur) | 0, Rt = Math.imul(Vt, Ht), ot = ot + Math.imul(gr, wr) | 0, Ct = Ct + Math.imul(gr, Ar) | 0, Ct = Ct + Math.imul(Er, wr) | 0, Rt = Rt + Math.imul(Er, Ar) | 0, ot = ot + Math.imul(yr, Ir) | 0, Ct = Ct + Math.imul(yr, Jr) | 0, Ct = Ct + Math.imul(fr, Ir) | 0, Rt = Rt + Math.imul(fr, Jr) | 0;
          var Vr = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ot = Math.imul(qt, wr), Ct = Math.imul(qt, Ar), Ct = Ct + Math.imul(Vt, wr) | 0, Rt = Math.imul(Vt, Ar), ot = ot + Math.imul(gr, Ir) | 0, Ct = Ct + Math.imul(gr, Jr) | 0, Ct = Ct + Math.imul(Er, Ir) | 0, Rt = Rt + Math.imul(Er, Jr) | 0;
          var Zr = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          ut = (Rt + (Ct >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, ot = Math.imul(qt, Ir), Ct = Math.imul(qt, Jr), Ct = Ct + Math.imul(Vt, Ir) | 0, Rt = Math.imul(Vt, Jr);
          var un = (ut + ot | 0) + ((Ct & 8191) << 13) | 0;
          return ut = (Rt + (Ct >>> 13) | 0) + (un >>> 26) | 0, un &= 67108863, At[0] = Qr, At[1] = Sn, At[2] = dn, At[3] = yn, At[4] = wn, At[5] = Mn, At[6] = En, At[7] = xn, At[8] = Cn, At[9] = _n, At[10] = hn, At[11] = gn, At[12] = ln, At[13] = pn, At[14] = mn, At[15] = sn, At[16] = Vr, At[17] = Zr, At[18] = un, ut !== 0 && (At[19] = ut, at.length++), at;
        };
        Math.imul || (Dt = jt);
        function Ot(tt, nt, it) {
          it.negative = nt.negative ^ tt.negative, it.length = tt.length + nt.length;
          for (var at = 0, ct = 0, Mt = 0; Mt < it.length - 1; Mt++) {
            var At = ct;
            ct = 0;
            for (var ut = at & 67108863, ot = Math.min(Mt, nt.length - 1), Ct = Math.max(0, Mt - tt.length + 1); Ct <= ot; Ct++) {
              var Rt = Mt - Ct, Nt = tt.words[Rt] | 0, Wt = nt.words[Ct] | 0, Xt = Nt * Wt, rr = Xt & 67108863;
              At = At + (Xt / 67108864 | 0) | 0, rr = rr + ut | 0, ut = rr & 67108863, At = At + (rr >>> 26) | 0, ct += At >>> 26, At &= 67108863;
            }
            it.words[Mt] = ut, at = At, At = ct;
          }
          return at !== 0 ? it.words[Mt] = at : it.length--, it._strip();
        }
        function Ft(tt, nt, it) {
          return Ot(tt, nt, it);
        }
        et.prototype.mulTo = function(nt, it) {
          var at, ct = this.length + nt.length;
          return this.length === 10 && nt.length === 10 ? at = Dt(this, nt, it) : ct < 63 ? at = jt(this, nt, it) : ct < 1024 ? at = Ot(this, nt, it) : at = Ft(this, nt, it), at;
        }, et.prototype.mul = function(nt) {
          var it = new et(null);
          return it.words = new Array(this.length + nt.length), this.mulTo(nt, it);
        }, et.prototype.mulf = function(nt) {
          var it = new et(null);
          return it.words = new Array(this.length + nt.length), Ft(this, nt, it);
        }, et.prototype.imul = function(nt) {
          return this.clone().mulTo(nt, this);
        }, et.prototype.imuln = function(nt) {
          var it = nt < 0;
          it && (nt = -nt), j(typeof nt == "number"), j(nt < 67108864);
          for (var at = 0, ct = 0; ct < this.length; ct++) {
            var Mt = (this.words[ct] | 0) * nt, At = (Mt & 67108863) + (at & 67108863);
            at >>= 26, at += Mt / 67108864 | 0, at += At >>> 26, this.words[ct] = At & 67108863;
          }
          return at !== 0 && (this.words[ct] = at, this.length++), it ? this.ineg() : this;
        }, et.prototype.muln = function(nt) {
          return this.clone().imuln(nt);
        }, et.prototype.sqr = function() {
          return this.mul(this);
        }, et.prototype.isqr = function() {
          return this.imul(this.clone());
        }, et.prototype.pow = function(nt) {
          var it = It(nt);
          if (it.length === 0) return new et(1);
          for (var at = this, ct = 0; ct < it.length && it[ct] === 0; ct++, at = at.sqr()) ;
          if (++ct < it.length) for (var Mt = at.sqr(); ct < it.length; ct++, Mt = Mt.sqr()) it[ct] !== 0 && (at = at.mul(Mt));
          return at;
        }, et.prototype.iushln = function(nt) {
          j(typeof nt == "number" && nt >= 0);
          var it = nt % 26, at = (nt - it) / 26, ct = 67108863 >>> 26 - it << 26 - it, Mt;
          if (it !== 0) {
            var At = 0;
            for (Mt = 0; Mt < this.length; Mt++) {
              var ut = this.words[Mt] & ct, ot = (this.words[Mt] | 0) - ut << it;
              this.words[Mt] = ot | At, At = ut >>> 26 - it;
            }
            At && (this.words[Mt] = At, this.length++);
          }
          if (at !== 0) {
            for (Mt = this.length - 1; Mt >= 0; Mt--) this.words[Mt + at] = this.words[Mt];
            for (Mt = 0; Mt < at; Mt++) this.words[Mt] = 0;
            this.length += at;
          }
          return this._strip();
        }, et.prototype.ishln = function(nt) {
          return j(this.negative === 0), this.iushln(nt);
        }, et.prototype.iushrn = function(nt, it, at) {
          j(typeof nt == "number" && nt >= 0);
          var ct;
          it ? ct = (it - it % 26) / 26 : ct = 0;
          var Mt = nt % 26, At = Math.min((nt - Mt) / 26, this.length), ut = 67108863 ^ 67108863 >>> Mt << Mt, ot = at;
          if (ct -= At, ct = Math.max(0, ct), ot) {
            for (var Ct = 0; Ct < At; Ct++) ot.words[Ct] = this.words[Ct];
            ot.length = At;
          }
          if (At !== 0) if (this.length > At) for (this.length -= At, Ct = 0; Ct < this.length; Ct++) this.words[Ct] = this.words[Ct + At];
          else this.words[0] = 0, this.length = 1;
          var Rt = 0;
          for (Ct = this.length - 1; Ct >= 0 && (Rt !== 0 || Ct >= ct); Ct--) {
            var Nt = this.words[Ct] | 0;
            this.words[Ct] = Rt << 26 - Mt | Nt >>> Mt, Rt = Nt & ut;
          }
          return ot && Rt !== 0 && (ot.words[ot.length++] = Rt), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
        }, et.prototype.ishrn = function(nt, it, at) {
          return j(this.negative === 0), this.iushrn(nt, it, at);
        }, et.prototype.shln = function(nt) {
          return this.clone().ishln(nt);
        }, et.prototype.ushln = function(nt) {
          return this.clone().iushln(nt);
        }, et.prototype.shrn = function(nt) {
          return this.clone().ishrn(nt);
        }, et.prototype.ushrn = function(nt) {
          return this.clone().iushrn(nt);
        }, et.prototype.testn = function(nt) {
          j(typeof nt == "number" && nt >= 0);
          var it = nt % 26, at = (nt - it) / 26, ct = 1 << it;
          if (this.length <= at) return false;
          var Mt = this.words[at];
          return !!(Mt & ct);
        }, et.prototype.imaskn = function(nt) {
          j(typeof nt == "number" && nt >= 0);
          var it = nt % 26, at = (nt - it) / 26;
          if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= at) return this;
          if (it !== 0 && at++, this.length = Math.min(at, this.length), it !== 0) {
            var ct = 67108863 ^ 67108863 >>> it << it;
            this.words[this.length - 1] &= ct;
          }
          return this._strip();
        }, et.prototype.maskn = function(nt) {
          return this.clone().imaskn(nt);
        }, et.prototype.iaddn = function(nt) {
          return j(typeof nt == "number"), j(nt < 67108864), nt < 0 ? this.isubn(-nt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= nt ? (this.words[0] = nt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(nt), this.negative = 1, this) : this._iaddn(nt);
        }, et.prototype._iaddn = function(nt) {
          this.words[0] += nt;
          for (var it = 0; it < this.length && this.words[it] >= 67108864; it++) this.words[it] -= 67108864, it === this.length - 1 ? this.words[it + 1] = 1 : this.words[it + 1]++;
          return this.length = Math.max(this.length, it + 1), this;
        }, et.prototype.isubn = function(nt) {
          if (j(typeof nt == "number"), j(nt < 67108864), nt < 0) return this.iaddn(-nt);
          if (this.negative !== 0) return this.negative = 0, this.iaddn(nt), this.negative = 1, this;
          if (this.words[0] -= nt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
          else for (var it = 0; it < this.length && this.words[it] < 0; it++) this.words[it] += 67108864, this.words[it + 1] -= 1;
          return this._strip();
        }, et.prototype.addn = function(nt) {
          return this.clone().iaddn(nt);
        }, et.prototype.subn = function(nt) {
          return this.clone().isubn(nt);
        }, et.prototype.iabs = function() {
          return this.negative = 0, this;
        }, et.prototype.abs = function() {
          return this.clone().iabs();
        }, et.prototype._ishlnsubmul = function(nt, it, at) {
          var ct = nt.length + at, Mt;
          this._expand(ct);
          var At, ut = 0;
          for (Mt = 0; Mt < nt.length; Mt++) {
            At = (this.words[Mt + at] | 0) + ut;
            var ot = (nt.words[Mt] | 0) * it;
            At -= ot & 67108863, ut = (At >> 26) - (ot / 67108864 | 0), this.words[Mt + at] = At & 67108863;
          }
          for (; Mt < this.length - at; Mt++) At = (this.words[Mt + at] | 0) + ut, ut = At >> 26, this.words[Mt + at] = At & 67108863;
          if (ut === 0) return this._strip();
          for (j(ut === -1), ut = 0, Mt = 0; Mt < this.length; Mt++) At = -(this.words[Mt] | 0) + ut, ut = At >> 26, this.words[Mt] = At & 67108863;
          return this.negative = 1, this._strip();
        }, et.prototype._wordDiv = function(nt, it) {
          var at = this.length - nt.length, ct = this.clone(), Mt = nt, At = Mt.words[Mt.length - 1] | 0, ut = this._countBits(At);
          at = 26 - ut, at !== 0 && (Mt = Mt.ushln(at), ct.iushln(at), At = Mt.words[Mt.length - 1] | 0);
          var ot = ct.length - Mt.length, Ct;
          if (it !== "mod") {
            Ct = new et(null), Ct.length = ot + 1, Ct.words = new Array(Ct.length);
            for (var Rt = 0; Rt < Ct.length; Rt++) Ct.words[Rt] = 0;
          }
          var Nt = ct.clone()._ishlnsubmul(Mt, 1, ot);
          Nt.negative === 0 && (ct = Nt, Ct && (Ct.words[ot] = 1));
          for (var Wt = ot - 1; Wt >= 0; Wt--) {
            var Xt = (ct.words[Mt.length + Wt] | 0) * 67108864 + (ct.words[Mt.length + Wt - 1] | 0);
            for (Xt = Math.min(Xt / At | 0, 67108863), ct._ishlnsubmul(Mt, Xt, Wt); ct.negative !== 0; ) Xt--, ct.negative = 0, ct._ishlnsubmul(Mt, 1, Wt), ct.isZero() || (ct.negative ^= 1);
            Ct && (Ct.words[Wt] = Xt);
          }
          return Ct && Ct._strip(), ct._strip(), it !== "div" && at !== 0 && ct.iushrn(at), {
            div: Ct || null,
            mod: ct
          };
        }, et.prototype.divmod = function(nt, it, at) {
          if (j(!nt.isZero()), this.isZero()) return {
            div: new et(0),
            mod: new et(0)
          };
          var ct, Mt, At;
          return this.negative !== 0 && nt.negative === 0 ? (At = this.neg().divmod(nt, it), it !== "mod" && (ct = At.div.neg()), it !== "div" && (Mt = At.mod.neg(), at && Mt.negative !== 0 && Mt.iadd(nt)), {
            div: ct,
            mod: Mt
          }) : this.negative === 0 && nt.negative !== 0 ? (At = this.divmod(nt.neg(), it), it !== "mod" && (ct = At.div.neg()), {
            div: ct,
            mod: At.mod
          }) : this.negative & nt.negative ? (At = this.neg().divmod(nt.neg(), it), it !== "div" && (Mt = At.mod.neg(), at && Mt.negative !== 0 && Mt.isub(nt)), {
            div: At.div,
            mod: Mt
          }) : nt.length > this.length || this.cmp(nt) < 0 ? {
            div: new et(0),
            mod: this
          } : nt.length === 1 ? it === "div" ? {
            div: this.divn(nt.words[0]),
            mod: null
          } : it === "mod" ? {
            div: null,
            mod: new et(this.modrn(nt.words[0]))
          } : {
            div: this.divn(nt.words[0]),
            mod: new et(this.modrn(nt.words[0]))
          } : this._wordDiv(nt, it);
        }, et.prototype.div = function(nt) {
          return this.divmod(nt, "div", false).div;
        }, et.prototype.mod = function(nt) {
          return this.divmod(nt, "mod", false).mod;
        }, et.prototype.umod = function(nt) {
          return this.divmod(nt, "mod", true).mod;
        }, et.prototype.divRound = function(nt) {
          var it = this.divmod(nt);
          if (it.mod.isZero()) return it.div;
          var at = it.div.negative !== 0 ? it.mod.isub(nt) : it.mod, ct = nt.ushrn(1), Mt = nt.andln(1), At = at.cmp(ct);
          return At < 0 || Mt === 1 && At === 0 ? it.div : it.div.negative !== 0 ? it.div.isubn(1) : it.div.iaddn(1);
        }, et.prototype.modrn = function(nt) {
          var it = nt < 0;
          it && (nt = -nt), j(nt <= 67108863);
          for (var at = (1 << 26) % nt, ct = 0, Mt = this.length - 1; Mt >= 0; Mt--) ct = (at * ct + (this.words[Mt] | 0)) % nt;
          return it ? -ct : ct;
        }, et.prototype.modn = function(nt) {
          return this.modrn(nt);
        }, et.prototype.idivn = function(nt) {
          var it = nt < 0;
          it && (nt = -nt), j(nt <= 67108863);
          for (var at = 0, ct = this.length - 1; ct >= 0; ct--) {
            var Mt = (this.words[ct] | 0) + at * 67108864;
            this.words[ct] = Mt / nt | 0, at = Mt % nt;
          }
          return this._strip(), it ? this.ineg() : this;
        }, et.prototype.divn = function(nt) {
          return this.clone().idivn(nt);
        }, et.prototype.egcd = function(nt) {
          j(nt.negative === 0), j(!nt.isZero());
          var it = this, at = nt.clone();
          it.negative !== 0 ? it = it.umod(nt) : it = it.clone();
          for (var ct = new et(1), Mt = new et(0), At = new et(0), ut = new et(1), ot = 0; it.isEven() && at.isEven(); ) it.iushrn(1), at.iushrn(1), ++ot;
          for (var Ct = at.clone(), Rt = it.clone(); !it.isZero(); ) {
            for (var Nt = 0, Wt = 1; !(it.words[0] & Wt) && Nt < 26; ++Nt, Wt <<= 1) ;
            if (Nt > 0) for (it.iushrn(Nt); Nt-- > 0; ) (ct.isOdd() || Mt.isOdd()) && (ct.iadd(Ct), Mt.isub(Rt)), ct.iushrn(1), Mt.iushrn(1);
            for (var Xt = 0, rr = 1; !(at.words[0] & rr) && Xt < 26; ++Xt, rr <<= 1) ;
            if (Xt > 0) for (at.iushrn(Xt); Xt-- > 0; ) (At.isOdd() || ut.isOdd()) && (At.iadd(Ct), ut.isub(Rt)), At.iushrn(1), ut.iushrn(1);
            it.cmp(at) >= 0 ? (it.isub(at), ct.isub(At), Mt.isub(ut)) : (at.isub(it), At.isub(ct), ut.isub(Mt));
          }
          return {
            a: At,
            b: ut,
            gcd: at.iushln(ot)
          };
        }, et.prototype._invmp = function(nt) {
          j(nt.negative === 0), j(!nt.isZero());
          var it = this, at = nt.clone();
          it.negative !== 0 ? it = it.umod(nt) : it = it.clone();
          for (var ct = new et(1), Mt = new et(0), At = at.clone(); it.cmpn(1) > 0 && at.cmpn(1) > 0; ) {
            for (var ut = 0, ot = 1; !(it.words[0] & ot) && ut < 26; ++ut, ot <<= 1) ;
            if (ut > 0) for (it.iushrn(ut); ut-- > 0; ) ct.isOdd() && ct.iadd(At), ct.iushrn(1);
            for (var Ct = 0, Rt = 1; !(at.words[0] & Rt) && Ct < 26; ++Ct, Rt <<= 1) ;
            if (Ct > 0) for (at.iushrn(Ct); Ct-- > 0; ) Mt.isOdd() && Mt.iadd(At), Mt.iushrn(1);
            it.cmp(at) >= 0 ? (it.isub(at), ct.isub(Mt)) : (at.isub(it), Mt.isub(ct));
          }
          var Nt;
          return it.cmpn(1) === 0 ? Nt = ct : Nt = Mt, Nt.cmpn(0) < 0 && Nt.iadd(nt), Nt;
        }, et.prototype.gcd = function(nt) {
          if (this.isZero()) return nt.abs();
          if (nt.isZero()) return this.abs();
          var it = this.clone(), at = nt.clone();
          it.negative = 0, at.negative = 0;
          for (var ct = 0; it.isEven() && at.isEven(); ct++) it.iushrn(1), at.iushrn(1);
          do {
            for (; it.isEven(); ) it.iushrn(1);
            for (; at.isEven(); ) at.iushrn(1);
            var Mt = it.cmp(at);
            if (Mt < 0) {
              var At = it;
              it = at, at = At;
            } else if (Mt === 0 || at.cmpn(1) === 0) break;
            it.isub(at);
          } while (true);
          return at.iushln(ct);
        }, et.prototype.invm = function(nt) {
          return this.egcd(nt).a.umod(nt);
        }, et.prototype.isEven = function() {
          return (this.words[0] & 1) === 0;
        }, et.prototype.isOdd = function() {
          return (this.words[0] & 1) === 1;
        }, et.prototype.andln = function(nt) {
          return this.words[0] & nt;
        }, et.prototype.bincn = function(nt) {
          j(typeof nt == "number");
          var it = nt % 26, at = (nt - it) / 26, ct = 1 << it;
          if (this.length <= at) return this._expand(at + 1), this.words[at] |= ct, this;
          for (var Mt = ct, At = at; Mt !== 0 && At < this.length; At++) {
            var ut = this.words[At] | 0;
            ut += Mt, Mt = ut >>> 26, ut &= 67108863, this.words[At] = ut;
          }
          return Mt !== 0 && (this.words[At] = Mt, this.length++), this;
        }, et.prototype.isZero = function() {
          return this.length === 1 && this.words[0] === 0;
        }, et.prototype.cmpn = function(nt) {
          var it = nt < 0;
          if (this.negative !== 0 && !it) return -1;
          if (this.negative === 0 && it) return 1;
          this._strip();
          var at;
          if (this.length > 1) at = 1;
          else {
            it && (nt = -nt), j(nt <= 67108863, "Number is too big");
            var ct = this.words[0] | 0;
            at = ct === nt ? 0 : ct < nt ? -1 : 1;
          }
          return this.negative !== 0 ? -at | 0 : at;
        }, et.prototype.cmp = function(nt) {
          if (this.negative !== 0 && nt.negative === 0) return -1;
          if (this.negative === 0 && nt.negative !== 0) return 1;
          var it = this.ucmp(nt);
          return this.negative !== 0 ? -it | 0 : it;
        }, et.prototype.ucmp = function(nt) {
          if (this.length > nt.length) return 1;
          if (this.length < nt.length) return -1;
          for (var it = 0, at = this.length - 1; at >= 0; at--) {
            var ct = this.words[at] | 0, Mt = nt.words[at] | 0;
            if (ct !== Mt) {
              ct < Mt ? it = -1 : ct > Mt && (it = 1);
              break;
            }
          }
          return it;
        }, et.prototype.gtn = function(nt) {
          return this.cmpn(nt) === 1;
        }, et.prototype.gt = function(nt) {
          return this.cmp(nt) === 1;
        }, et.prototype.gten = function(nt) {
          return this.cmpn(nt) >= 0;
        }, et.prototype.gte = function(nt) {
          return this.cmp(nt) >= 0;
        }, et.prototype.ltn = function(nt) {
          return this.cmpn(nt) === -1;
        }, et.prototype.lt = function(nt) {
          return this.cmp(nt) === -1;
        }, et.prototype.lten = function(nt) {
          return this.cmpn(nt) <= 0;
        }, et.prototype.lte = function(nt) {
          return this.cmp(nt) <= 0;
        }, et.prototype.eqn = function(nt) {
          return this.cmpn(nt) === 0;
        }, et.prototype.eq = function(nt) {
          return this.cmp(nt) === 0;
        }, et.red = function(nt) {
          return new Ut(nt);
        }, et.prototype.toRed = function(nt) {
          return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), nt.convertTo(this)._forceRed(nt);
        }, et.prototype.fromRed = function() {
          return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, et.prototype._forceRed = function(nt) {
          return this.red = nt, this;
        }, et.prototype.forceRed = function(nt) {
          return j(!this.red, "Already a number in reduction context"), this._forceRed(nt);
        }, et.prototype.redAdd = function(nt) {
          return j(this.red, "redAdd works only with red numbers"), this.red.add(this, nt);
        }, et.prototype.redIAdd = function(nt) {
          return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, nt);
        }, et.prototype.redSub = function(nt) {
          return j(this.red, "redSub works only with red numbers"), this.red.sub(this, nt);
        }, et.prototype.redISub = function(nt) {
          return j(this.red, "redISub works only with red numbers"), this.red.isub(this, nt);
        }, et.prototype.redShl = function(nt) {
          return j(this.red, "redShl works only with red numbers"), this.red.shl(this, nt);
        }, et.prototype.redMul = function(nt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, nt), this.red.mul(this, nt);
        }, et.prototype.redIMul = function(nt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, nt), this.red.imul(this, nt);
        }, et.prototype.redSqr = function() {
          return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, et.prototype.redISqr = function() {
          return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, et.prototype.redSqrt = function() {
          return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, et.prototype.redInvm = function() {
          return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, et.prototype.redNeg = function() {
          return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, et.prototype.redPow = function(nt) {
          return j(this.red && !nt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, nt);
        };
        var Lt = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function Zt(tt, nt) {
          this.name = tt, this.p = new et(nt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }
        Zt.prototype._tmp = function() {
          var nt = new et(null);
          return nt.words = new Array(Math.ceil(this.n / 13)), nt;
        }, Zt.prototype.ireduce = function(nt) {
          var it = nt, at;
          do
            this.split(it, this.tmp), it = this.imulK(it), it = it.iadd(this.tmp), at = it.bitLength();
          while (at > this.n);
          var ct = at < this.n ? -1 : it.ucmp(this.p);
          return ct === 0 ? (it.words[0] = 0, it.length = 1) : ct > 0 ? it.isub(this.p) : it._strip(), it;
        }, Zt.prototype.split = function(nt, it) {
          nt.iushrn(this.n, 0, it);
        }, Zt.prototype.imulK = function(nt) {
          return nt.imul(this.k);
        };
        function Kt() {
          Zt.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        rt(Kt, Zt), Kt.prototype.split = function(nt, it) {
          for (var at = 4194303, ct = Math.min(nt.length, 9), Mt = 0; Mt < ct; Mt++) it.words[Mt] = nt.words[Mt];
          if (it.length = ct, nt.length <= 9) {
            nt.words[0] = 0, nt.length = 1;
            return;
          }
          var At = nt.words[9];
          for (it.words[it.length++] = At & at, Mt = 10; Mt < nt.length; Mt++) {
            var ut = nt.words[Mt] | 0;
            nt.words[Mt - 10] = (ut & at) << 4 | At >>> 22, At = ut;
          }
          At >>>= 22, nt.words[Mt - 10] = At, At === 0 && nt.length > 10 ? nt.length -= 10 : nt.length -= 9;
        }, Kt.prototype.imulK = function(nt) {
          nt.words[nt.length] = 0, nt.words[nt.length + 1] = 0, nt.length += 2;
          for (var it = 0, at = 0; at < nt.length; at++) {
            var ct = nt.words[at] | 0;
            it += ct * 977, nt.words[at] = it & 67108863, it = ct * 64 + (it / 67108864 | 0);
          }
          return nt.words[nt.length - 1] === 0 && (nt.length--, nt.words[nt.length - 1] === 0 && nt.length--), nt;
        };
        function ar() {
          Zt.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        rt(ar, Zt);
        function sr() {
          Zt.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        rt(sr, Zt);
        function er() {
          Zt.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        rt(er, Zt), er.prototype.imulK = function(nt) {
          for (var it = 0, at = 0; at < nt.length; at++) {
            var ct = (nt.words[at] | 0) * 19 + it, Mt = ct & 67108863;
            ct >>>= 26, nt.words[at] = Mt, it = ct;
          }
          return it !== 0 && (nt.words[nt.length++] = it), nt;
        }, et._prime = function(nt) {
          if (Lt[nt]) return Lt[nt];
          var it;
          if (nt === "k256") it = new Kt();
          else if (nt === "p224") it = new ar();
          else if (nt === "p192") it = new sr();
          else if (nt === "p25519") it = new er();
          else throw new Error("Unknown prime " + nt);
          return Lt[nt] = it, it;
        };
        function Ut(tt) {
          if (typeof tt == "string") {
            var nt = et._prime(tt);
            this.m = nt.p, this.prime = nt;
          } else j(tt.gtn(1), "modulus must be greater than 1"), this.m = tt, this.prime = null;
        }
        Ut.prototype._verify1 = function(nt) {
          j(nt.negative === 0, "red works only with positives"), j(nt.red, "red works only with red numbers");
        }, Ut.prototype._verify2 = function(nt, it) {
          j((nt.negative | it.negative) === 0, "red works only with positives"), j(nt.red && nt.red === it.red, "red works only with red numbers");
        }, Ut.prototype.imod = function(nt) {
          return this.prime ? this.prime.ireduce(nt)._forceRed(this) : (Bt(nt, nt.umod(this.m)._forceRed(this)), nt);
        }, Ut.prototype.neg = function(nt) {
          return nt.isZero() ? nt.clone() : this.m.sub(nt)._forceRed(this);
        }, Ut.prototype.add = function(nt, it) {
          this._verify2(nt, it);
          var at = nt.add(it);
          return at.cmp(this.m) >= 0 && at.isub(this.m), at._forceRed(this);
        }, Ut.prototype.iadd = function(nt, it) {
          this._verify2(nt, it);
          var at = nt.iadd(it);
          return at.cmp(this.m) >= 0 && at.isub(this.m), at;
        }, Ut.prototype.sub = function(nt, it) {
          this._verify2(nt, it);
          var at = nt.sub(it);
          return at.cmpn(0) < 0 && at.iadd(this.m), at._forceRed(this);
        }, Ut.prototype.isub = function(nt, it) {
          this._verify2(nt, it);
          var at = nt.isub(it);
          return at.cmpn(0) < 0 && at.iadd(this.m), at;
        }, Ut.prototype.shl = function(nt, it) {
          return this._verify1(nt), this.imod(nt.ushln(it));
        }, Ut.prototype.imul = function(nt, it) {
          return this._verify2(nt, it), this.imod(nt.imul(it));
        }, Ut.prototype.mul = function(nt, it) {
          return this._verify2(nt, it), this.imod(nt.mul(it));
        }, Ut.prototype.isqr = function(nt) {
          return this.imul(nt, nt.clone());
        }, Ut.prototype.sqr = function(nt) {
          return this.mul(nt, nt);
        }, Ut.prototype.sqrt = function(nt) {
          if (nt.isZero()) return nt.clone();
          var it = this.m.andln(3);
          if (j(it % 2 === 1), it === 3) {
            var at = this.m.add(new et(1)).iushrn(2);
            return this.pow(nt, at);
          }
          for (var ct = this.m.subn(1), Mt = 0; !ct.isZero() && ct.andln(1) === 0; ) Mt++, ct.iushrn(1);
          j(!ct.isZero());
          var At = new et(1).toRed(this), ut = At.redNeg(), ot = this.m.subn(1).iushrn(1), Ct = this.m.bitLength();
          for (Ct = new et(2 * Ct * Ct).toRed(this); this.pow(Ct, ot).cmp(ut) !== 0; ) Ct.redIAdd(ut);
          for (var Rt = this.pow(Ct, ct), Nt = this.pow(nt, ct.addn(1).iushrn(1)), Wt = this.pow(nt, ct), Xt = Mt; Wt.cmp(At) !== 0; ) {
            for (var rr = Wt, Gt = 0; rr.cmp(At) !== 0; Gt++) rr = rr.redSqr();
            j(Gt < Xt);
            var Yt = this.pow(Rt, new et(1).iushln(Xt - Gt - 1));
            Nt = Nt.redMul(Yt), Rt = Yt.redSqr(), Wt = Wt.redMul(Rt), Xt = Gt;
          }
          return Nt;
        }, Ut.prototype.invm = function(nt) {
          var it = nt._invmp(this.m);
          return it.negative !== 0 ? (it.negative = 0, this.imod(it).redNeg()) : this.imod(it);
        }, Ut.prototype.pow = function(nt, it) {
          if (it.isZero()) return new et(1).toRed(this);
          if (it.cmpn(1) === 0) return nt.clone();
          var at = 4, ct = new Array(1 << at);
          ct[0] = new et(1).toRed(this), ct[1] = nt;
          for (var Mt = 2; Mt < ct.length; Mt++) ct[Mt] = this.mul(ct[Mt - 1], nt);
          var At = ct[0], ut = 0, ot = 0, Ct = it.bitLength() % 26;
          for (Ct === 0 && (Ct = 26), Mt = it.length - 1; Mt >= 0; Mt--) {
            for (var Rt = it.words[Mt], Nt = Ct - 1; Nt >= 0; Nt--) {
              var Wt = Rt >> Nt & 1;
              if (At !== ct[0] && (At = this.sqr(At)), Wt === 0 && ut === 0) {
                ot = 0;
                continue;
              }
              ut <<= 1, ut |= Wt, ot++, !(ot !== at && (Mt !== 0 || Nt !== 0)) && (At = this.mul(At, ct[ut]), ot = 0, ut = 0);
            }
            Ct = 26;
          }
          return At;
        }, Ut.prototype.convertTo = function(nt) {
          var it = nt.umod(this.m);
          return it === nt ? it.clone() : it;
        }, Ut.prototype.convertFrom = function(nt) {
          var it = nt.clone();
          return it.red = null, it;
        }, et.mont = function(nt) {
          return new xt(nt);
        };
        function xt(tt) {
          Ut.call(this, tt), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }
        rt(xt, Ut), xt.prototype.convertTo = function(nt) {
          return this.imod(nt.ushln(this.shift));
        }, xt.prototype.convertFrom = function(nt) {
          var it = this.imod(nt.mul(this.rinv));
          return it.red = null, it;
        }, xt.prototype.imul = function(nt, it) {
          if (nt.isZero() || it.isZero()) return nt.words[0] = 0, nt.length = 1, nt;
          var at = nt.imul(it), ct = at.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), Mt = at.isub(ct).iushrn(this.shift), At = Mt;
          return Mt.cmp(this.m) >= 0 ? At = Mt.isub(this.m) : Mt.cmpn(0) < 0 && (At = Mt.iadd(this.m)), At._forceRed(this);
        }, xt.prototype.mul = function(nt, it) {
          if (nt.isZero() || it.isZero()) return new et(0)._forceRed(this);
          var at = nt.mul(it), ct = at.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), Mt = at.isub(ct).iushrn(this.shift), At = Mt;
          return Mt.cmp(this.m) >= 0 ? At = Mt.isub(this.m) : Mt.cmpn(0) < 0 && (At = Mt.iadd(this.m)), At._forceRed(this);
        }, xt.prototype.invm = function(nt) {
          var it = this.imod(nt._invmp(this.m).mul(this.r2));
          return it._forceRed(this);
        };
      })(d, commonjsGlobal);
    })(bn$2);
    var bnExports$2 = bn$2.exports, bn$1 = {
      exports: {}
    };
    bn$1.exports;
    (function(d) {
      (function(_, $) {
        function j(Ut, xt) {
          if (!Ut) throw new Error(xt || "Assertion failed");
        }
        function rt(Ut, xt) {
          Ut.super_ = xt;
          var tt = function() {
          };
          tt.prototype = xt.prototype, Ut.prototype = new tt(), Ut.prototype.constructor = Ut;
        }
        function et(Ut, xt, tt) {
          if (et.isBN(Ut)) return Ut;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, Ut !== null && ((xt === "le" || xt === "be") && (tt = xt, xt = 10), this._init(Ut || 0, xt || 10, tt || "be"));
        }
        typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
        var st;
        try {
          st = commonjsRequire("buffer").Buffer;
        } catch {
        }
        et.isBN = function(xt) {
          return xt instanceof et ? true : xt !== null && typeof xt == "object" && xt.constructor.wordSize === et.wordSize && Array.isArray(xt.words);
        }, et.max = function(xt, tt) {
          return xt.cmp(tt) > 0 ? xt : tt;
        }, et.min = function(xt, tt) {
          return xt.cmp(tt) < 0 ? xt : tt;
        }, et.prototype._init = function(xt, tt, nt) {
          if (typeof xt == "number") return this._initNumber(xt, tt, nt);
          if (typeof xt == "object") return this._initArray(xt, tt, nt);
          tt === "hex" && (tt = 16), j(tt === (tt | 0) && tt >= 2 && tt <= 36), xt = xt.toString().replace(/\s+/g, "");
          var it = 0;
          xt[0] === "-" && it++, tt === 16 ? this._parseHex(xt, it) : this._parseBase(xt, tt, it), xt[0] === "-" && (this.negative = 1), this.strip(), nt === "le" && this._initArray(this.toArray(), tt, nt);
        }, et.prototype._initNumber = function(xt, tt, nt) {
          xt < 0 && (this.negative = 1, xt = -xt), xt < 67108864 ? (this.words = [
            xt & 67108863
          ], this.length = 1) : xt < 4503599627370496 ? (this.words = [
            xt & 67108863,
            xt / 67108864 & 67108863
          ], this.length = 2) : (j(xt < 9007199254740992), this.words = [
            xt & 67108863,
            xt / 67108864 & 67108863,
            1
          ], this.length = 3), nt === "le" && this._initArray(this.toArray(), tt, nt);
        }, et.prototype._initArray = function(xt, tt, nt) {
          if (j(typeof xt.length == "number"), xt.length <= 0) return this.words = [
            0
          ], this.length = 1, this;
          this.length = Math.ceil(xt.length / 3), this.words = new Array(this.length);
          for (var it = 0; it < this.length; it++) this.words[it] = 0;
          var at, ct, Mt = 0;
          if (nt === "be") for (it = xt.length - 1, at = 0; it >= 0; it -= 3) ct = xt[it] | xt[it - 1] << 8 | xt[it - 2] << 16, this.words[at] |= ct << Mt & 67108863, this.words[at + 1] = ct >>> 26 - Mt & 67108863, Mt += 24, Mt >= 26 && (Mt -= 26, at++);
          else if (nt === "le") for (it = 0, at = 0; it < xt.length; it += 3) ct = xt[it] | xt[it + 1] << 8 | xt[it + 2] << 16, this.words[at] |= ct << Mt & 67108863, this.words[at + 1] = ct >>> 26 - Mt & 67108863, Mt += 24, Mt >= 26 && (Mt -= 26, at++);
          return this.strip();
        };
        function pt(Ut, xt, tt) {
          for (var nt = 0, it = Math.min(Ut.length, tt), at = xt; at < it; at++) {
            var ct = Ut.charCodeAt(at) - 48;
            nt <<= 4, ct >= 49 && ct <= 54 ? nt |= ct - 49 + 10 : ct >= 17 && ct <= 22 ? nt |= ct - 17 + 10 : nt |= ct & 15;
          }
          return nt;
        }
        et.prototype._parseHex = function(xt, tt) {
          this.length = Math.ceil((xt.length - tt) / 6), this.words = new Array(this.length);
          for (var nt = 0; nt < this.length; nt++) this.words[nt] = 0;
          var it, at, ct = 0;
          for (nt = xt.length - 6, it = 0; nt >= tt; nt -= 6) at = pt(xt, nt, nt + 6), this.words[it] |= at << ct & 67108863, this.words[it + 1] |= at >>> 26 - ct & 4194303, ct += 24, ct >= 26 && (ct -= 26, it++);
          nt + 6 !== tt && (at = pt(xt, tt, nt + 6), this.words[it] |= at << ct & 67108863, this.words[it + 1] |= at >>> 26 - ct & 4194303), this.strip();
        };
        function Et(Ut, xt, tt, nt) {
          for (var it = 0, at = Math.min(Ut.length, tt), ct = xt; ct < at; ct++) {
            var Mt = Ut.charCodeAt(ct) - 48;
            it *= nt, Mt >= 49 ? it += Mt - 49 + 10 : Mt >= 17 ? it += Mt - 17 + 10 : it += Mt;
          }
          return it;
        }
        et.prototype._parseBase = function(xt, tt, nt) {
          this.words = [
            0
          ], this.length = 1;
          for (var it = 0, at = 1; at <= 67108863; at *= tt) it++;
          it--, at = at / tt | 0;
          for (var ct = xt.length - nt, Mt = ct % it, At = Math.min(ct, ct - Mt) + nt, ut = 0, ot = nt; ot < At; ot += it) ut = Et(xt, ot, ot + it, tt), this.imuln(at), this.words[0] + ut < 67108864 ? this.words[0] += ut : this._iaddn(ut);
          if (Mt !== 0) {
            var Ct = 1;
            for (ut = Et(xt, ot, xt.length, tt), ot = 0; ot < Mt; ot++) Ct *= tt;
            this.imuln(Ct), this.words[0] + ut < 67108864 ? this.words[0] += ut : this._iaddn(ut);
          }
        }, et.prototype.copy = function(xt) {
          xt.words = new Array(this.length);
          for (var tt = 0; tt < this.length; tt++) xt.words[tt] = this.words[tt];
          xt.length = this.length, xt.negative = this.negative, xt.red = this.red;
        }, et.prototype.clone = function() {
          var xt = new et(null);
          return this.copy(xt), xt;
        }, et.prototype._expand = function(xt) {
          for (; this.length < xt; ) this.words[this.length++] = 0;
          return this;
        }, et.prototype.strip = function() {
          for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
          return this._normSign();
        }, et.prototype._normSign = function() {
          return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
        }, et.prototype.inspect = function() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var Bt = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ], St = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ], $t = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        et.prototype.toString = function(xt, tt) {
          xt = xt || 10, tt = tt | 0 || 1;
          var nt;
          if (xt === 16 || xt === "hex") {
            nt = "";
            for (var it = 0, at = 0, ct = 0; ct < this.length; ct++) {
              var Mt = this.words[ct], At = ((Mt << it | at) & 16777215).toString(16);
              at = Mt >>> 24 - it & 16777215, at !== 0 || ct !== this.length - 1 ? nt = Bt[6 - At.length] + At + nt : nt = At + nt, it += 2, it >= 26 && (it -= 26, ct--);
            }
            for (at !== 0 && (nt = at.toString(16) + nt); nt.length % tt !== 0; ) nt = "0" + nt;
            return this.negative !== 0 && (nt = "-" + nt), nt;
          }
          if (xt === (xt | 0) && xt >= 2 && xt <= 36) {
            var ut = St[xt], ot = $t[xt];
            nt = "";
            var Ct = this.clone();
            for (Ct.negative = 0; !Ct.isZero(); ) {
              var Rt = Ct.modn(ot).toString(xt);
              Ct = Ct.idivn(ot), Ct.isZero() ? nt = Rt + nt : nt = Bt[ut - Rt.length] + Rt + nt;
            }
            for (this.isZero() && (nt = "0" + nt); nt.length % tt !== 0; ) nt = "0" + nt;
            return this.negative !== 0 && (nt = "-" + nt), nt;
          }
          j(false, "Base should be between 2 and 36");
        }, et.prototype.toNumber = function() {
          var xt = this.words[0];
          return this.length === 2 ? xt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? xt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -xt : xt;
        }, et.prototype.toJSON = function() {
          return this.toString(16);
        }, et.prototype.toBuffer = function(xt, tt) {
          return j(typeof st < "u"), this.toArrayLike(st, xt, tt);
        }, et.prototype.toArray = function(xt, tt) {
          return this.toArrayLike(Array, xt, tt);
        }, et.prototype.toArrayLike = function(xt, tt, nt) {
          var it = this.byteLength(), at = nt || Math.max(1, it);
          j(it <= at, "byte array longer than desired length"), j(at > 0, "Requested array length <= 0"), this.strip();
          var ct = tt === "le", Mt = new xt(at), At, ut, ot = this.clone();
          if (ct) {
            for (ut = 0; !ot.isZero(); ut++) At = ot.andln(255), ot.iushrn(8), Mt[ut] = At;
            for (; ut < at; ut++) Mt[ut] = 0;
          } else {
            for (ut = 0; ut < at - it; ut++) Mt[ut] = 0;
            for (ut = 0; !ot.isZero(); ut++) At = ot.andln(255), ot.iushrn(8), Mt[at - ut - 1] = At;
          }
          return Mt;
        }, Math.clz32 ? et.prototype._countBits = function(xt) {
          return 32 - Math.clz32(xt);
        } : et.prototype._countBits = function(xt) {
          var tt = xt, nt = 0;
          return tt >= 4096 && (nt += 13, tt >>>= 13), tt >= 64 && (nt += 7, tt >>>= 7), tt >= 8 && (nt += 4, tt >>>= 4), tt >= 2 && (nt += 2, tt >>>= 2), nt + tt;
        }, et.prototype._zeroBits = function(xt) {
          if (xt === 0) return 26;
          var tt = xt, nt = 0;
          return tt & 8191 || (nt += 13, tt >>>= 13), tt & 127 || (nt += 7, tt >>>= 7), tt & 15 || (nt += 4, tt >>>= 4), tt & 3 || (nt += 2, tt >>>= 2), tt & 1 || nt++, nt;
        }, et.prototype.bitLength = function() {
          var xt = this.words[this.length - 1], tt = this._countBits(xt);
          return (this.length - 1) * 26 + tt;
        };
        function kt(Ut) {
          for (var xt = new Array(Ut.bitLength()), tt = 0; tt < xt.length; tt++) {
            var nt = tt / 26 | 0, it = tt % 26;
            xt[tt] = (Ut.words[nt] & 1 << it) >>> it;
          }
          return xt;
        }
        et.prototype.zeroBits = function() {
          if (this.isZero()) return 0;
          for (var xt = 0, tt = 0; tt < this.length; tt++) {
            var nt = this._zeroBits(this.words[tt]);
            if (xt += nt, nt !== 26) break;
          }
          return xt;
        }, et.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, et.prototype.toTwos = function(xt) {
          return this.negative !== 0 ? this.abs().inotn(xt).iaddn(1) : this.clone();
        }, et.prototype.fromTwos = function(xt) {
          return this.testn(xt - 1) ? this.notn(xt).iaddn(1).ineg() : this.clone();
        }, et.prototype.isNeg = function() {
          return this.negative !== 0;
        }, et.prototype.neg = function() {
          return this.clone().ineg();
        }, et.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, et.prototype.iuor = function(xt) {
          for (; this.length < xt.length; ) this.words[this.length++] = 0;
          for (var tt = 0; tt < xt.length; tt++) this.words[tt] = this.words[tt] | xt.words[tt];
          return this.strip();
        }, et.prototype.ior = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuor(xt);
        }, et.prototype.or = function(xt) {
          return this.length > xt.length ? this.clone().ior(xt) : xt.clone().ior(this);
        }, et.prototype.uor = function(xt) {
          return this.length > xt.length ? this.clone().iuor(xt) : xt.clone().iuor(this);
        }, et.prototype.iuand = function(xt) {
          var tt;
          this.length > xt.length ? tt = xt : tt = this;
          for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] & xt.words[nt];
          return this.length = tt.length, this.strip();
        }, et.prototype.iand = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuand(xt);
        }, et.prototype.and = function(xt) {
          return this.length > xt.length ? this.clone().iand(xt) : xt.clone().iand(this);
        }, et.prototype.uand = function(xt) {
          return this.length > xt.length ? this.clone().iuand(xt) : xt.clone().iuand(this);
        }, et.prototype.iuxor = function(xt) {
          var tt, nt;
          this.length > xt.length ? (tt = this, nt = xt) : (tt = xt, nt = this);
          for (var it = 0; it < nt.length; it++) this.words[it] = tt.words[it] ^ nt.words[it];
          if (this !== tt) for (; it < tt.length; it++) this.words[it] = tt.words[it];
          return this.length = tt.length, this.strip();
        }, et.prototype.ixor = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuxor(xt);
        }, et.prototype.xor = function(xt) {
          return this.length > xt.length ? this.clone().ixor(xt) : xt.clone().ixor(this);
        }, et.prototype.uxor = function(xt) {
          return this.length > xt.length ? this.clone().iuxor(xt) : xt.clone().iuxor(this);
        }, et.prototype.inotn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = Math.ceil(xt / 26) | 0, nt = xt % 26;
          this._expand(tt), nt > 0 && tt--;
          for (var it = 0; it < tt; it++) this.words[it] = ~this.words[it] & 67108863;
          return nt > 0 && (this.words[it] = ~this.words[it] & 67108863 >> 26 - nt), this.strip();
        }, et.prototype.notn = function(xt) {
          return this.clone().inotn(xt);
        }, et.prototype.setn = function(xt, tt) {
          j(typeof xt == "number" && xt >= 0);
          var nt = xt / 26 | 0, it = xt % 26;
          return this._expand(nt + 1), tt ? this.words[nt] = this.words[nt] | 1 << it : this.words[nt] = this.words[nt] & ~(1 << it), this.strip();
        }, et.prototype.iadd = function(xt) {
          var tt;
          if (this.negative !== 0 && xt.negative === 0) return this.negative = 0, tt = this.isub(xt), this.negative ^= 1, this._normSign();
          if (this.negative === 0 && xt.negative !== 0) return xt.negative = 0, tt = this.isub(xt), xt.negative = 1, tt._normSign();
          var nt, it;
          this.length > xt.length ? (nt = this, it = xt) : (nt = xt, it = this);
          for (var at = 0, ct = 0; ct < it.length; ct++) tt = (nt.words[ct] | 0) + (it.words[ct] | 0) + at, this.words[ct] = tt & 67108863, at = tt >>> 26;
          for (; at !== 0 && ct < nt.length; ct++) tt = (nt.words[ct] | 0) + at, this.words[ct] = tt & 67108863, at = tt >>> 26;
          if (this.length = nt.length, at !== 0) this.words[this.length] = at, this.length++;
          else if (nt !== this) for (; ct < nt.length; ct++) this.words[ct] = nt.words[ct];
          return this;
        }, et.prototype.add = function(xt) {
          var tt;
          return xt.negative !== 0 && this.negative === 0 ? (xt.negative = 0, tt = this.sub(xt), xt.negative ^= 1, tt) : xt.negative === 0 && this.negative !== 0 ? (this.negative = 0, tt = xt.sub(this), this.negative = 1, tt) : this.length > xt.length ? this.clone().iadd(xt) : xt.clone().iadd(this);
        }, et.prototype.isub = function(xt) {
          if (xt.negative !== 0) {
            xt.negative = 0;
            var tt = this.iadd(xt);
            return xt.negative = 1, tt._normSign();
          } else if (this.negative !== 0) return this.negative = 0, this.iadd(xt), this.negative = 1, this._normSign();
          var nt = this.cmp(xt);
          if (nt === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          var it, at;
          nt > 0 ? (it = this, at = xt) : (it = xt, at = this);
          for (var ct = 0, Mt = 0; Mt < at.length; Mt++) tt = (it.words[Mt] | 0) - (at.words[Mt] | 0) + ct, ct = tt >> 26, this.words[Mt] = tt & 67108863;
          for (; ct !== 0 && Mt < it.length; Mt++) tt = (it.words[Mt] | 0) + ct, ct = tt >> 26, this.words[Mt] = tt & 67108863;
          if (ct === 0 && Mt < it.length && it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
          return this.length = Math.max(this.length, Mt), it !== this && (this.negative = 1), this.strip();
        }, et.prototype.sub = function(xt) {
          return this.clone().isub(xt);
        };
        function Tt(Ut, xt, tt) {
          tt.negative = xt.negative ^ Ut.negative;
          var nt = Ut.length + xt.length | 0;
          tt.length = nt, nt = nt - 1 | 0;
          var it = Ut.words[0] | 0, at = xt.words[0] | 0, ct = it * at, Mt = ct & 67108863, At = ct / 67108864 | 0;
          tt.words[0] = Mt;
          for (var ut = 1; ut < nt; ut++) {
            for (var ot = At >>> 26, Ct = At & 67108863, Rt = Math.min(ut, xt.length - 1), Nt = Math.max(0, ut - Ut.length + 1); Nt <= Rt; Nt++) {
              var Wt = ut - Nt | 0;
              it = Ut.words[Wt] | 0, at = xt.words[Nt] | 0, ct = it * at + Ct, ot += ct / 67108864 | 0, Ct = ct & 67108863;
            }
            tt.words[ut] = Ct | 0, At = ot | 0;
          }
          return At !== 0 ? tt.words[ut] = At | 0 : tt.length--, tt.strip();
        }
        var Pt = function(xt, tt, nt) {
          var it = xt.words, at = tt.words, ct = nt.words, Mt = 0, At, ut, ot, Ct = it[0] | 0, Rt = Ct & 8191, Nt = Ct >>> 13, Wt = it[1] | 0, Xt = Wt & 8191, rr = Wt >>> 13, Gt = it[2] | 0, Yt = Gt & 8191, tr = Gt >>> 13, cr = it[3] | 0, ir = cr & 8191, Jt = cr >>> 13, vr = it[4] | 0, Br = vr & 8191, _r = vr >>> 13, $r = it[5] | 0, Ur = $r & 8191, Sr = $r >>> 13, Mr = it[6] | 0, Kr = Mr & 8191, kr = Mr >>> 13, Lr = it[7] | 0, Gr = Lr & 8191, Tr = Lr >>> 13, yr = it[8] | 0, fr = yr & 8191, dr = yr >>> 13, gr = it[9] | 0, Er = gr & 8191, zt = gr >>> 13, qt = at[0] | 0, Vt = qt & 8191, Qt = qt >>> 13, hr = at[1] | 0, br = hr & 8191, pr = hr >>> 13, Rr = at[2] | 0, qr = Rr & 8191, xr = Rr >>> 13, Fr = at[3] | 0, zr = Fr & 8191, Pr = Fr >>> 13, Wr = at[4] | 0, tn = Wr & 8191, Nr = Wr >>> 13, Hr = at[5] | 0, rn = Hr & 8191, jr = Hr >>> 13, Yr = at[6] | 0, nn = Yr & 8191, Or = Yr >>> 13, Xr = at[7] | 0, nr = Xr & 8191, or = Xr >>> 13, ur = at[8] | 0, Ht = ur & 8191, lr = ur >>> 13, wr = at[9] | 0, Ar = wr & 8191, Cr = wr >>> 13;
          nt.negative = xt.negative ^ tt.negative, nt.length = 19, At = Math.imul(Rt, Vt), ut = Math.imul(Rt, Qt), ut = ut + Math.imul(Nt, Vt) | 0, ot = Math.imul(Nt, Qt);
          var Ir = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Ir >>> 26) | 0, Ir &= 67108863, At = Math.imul(Xt, Vt), ut = Math.imul(Xt, Qt), ut = ut + Math.imul(rr, Vt) | 0, ot = Math.imul(rr, Qt), At = At + Math.imul(Rt, br) | 0, ut = ut + Math.imul(Rt, pr) | 0, ut = ut + Math.imul(Nt, br) | 0, ot = ot + Math.imul(Nt, pr) | 0;
          var Jr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, At = Math.imul(Yt, Vt), ut = Math.imul(Yt, Qt), ut = ut + Math.imul(tr, Vt) | 0, ot = Math.imul(tr, Qt), At = At + Math.imul(Xt, br) | 0, ut = ut + Math.imul(Xt, pr) | 0, ut = ut + Math.imul(rr, br) | 0, ot = ot + Math.imul(rr, pr) | 0, At = At + Math.imul(Rt, qr) | 0, ut = ut + Math.imul(Rt, xr) | 0, ut = ut + Math.imul(Nt, qr) | 0, ot = ot + Math.imul(Nt, xr) | 0;
          var Qr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, At = Math.imul(ir, Vt), ut = Math.imul(ir, Qt), ut = ut + Math.imul(Jt, Vt) | 0, ot = Math.imul(Jt, Qt), At = At + Math.imul(Yt, br) | 0, ut = ut + Math.imul(Yt, pr) | 0, ut = ut + Math.imul(tr, br) | 0, ot = ot + Math.imul(tr, pr) | 0, At = At + Math.imul(Xt, qr) | 0, ut = ut + Math.imul(Xt, xr) | 0, ut = ut + Math.imul(rr, qr) | 0, ot = ot + Math.imul(rr, xr) | 0, At = At + Math.imul(Rt, zr) | 0, ut = ut + Math.imul(Rt, Pr) | 0, ut = ut + Math.imul(Nt, zr) | 0, ot = ot + Math.imul(Nt, Pr) | 0;
          var Sn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, At = Math.imul(Br, Vt), ut = Math.imul(Br, Qt), ut = ut + Math.imul(_r, Vt) | 0, ot = Math.imul(_r, Qt), At = At + Math.imul(ir, br) | 0, ut = ut + Math.imul(ir, pr) | 0, ut = ut + Math.imul(Jt, br) | 0, ot = ot + Math.imul(Jt, pr) | 0, At = At + Math.imul(Yt, qr) | 0, ut = ut + Math.imul(Yt, xr) | 0, ut = ut + Math.imul(tr, qr) | 0, ot = ot + Math.imul(tr, xr) | 0, At = At + Math.imul(Xt, zr) | 0, ut = ut + Math.imul(Xt, Pr) | 0, ut = ut + Math.imul(rr, zr) | 0, ot = ot + Math.imul(rr, Pr) | 0, At = At + Math.imul(Rt, tn) | 0, ut = ut + Math.imul(Rt, Nr) | 0, ut = ut + Math.imul(Nt, tn) | 0, ot = ot + Math.imul(Nt, Nr) | 0;
          var dn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, At = Math.imul(Ur, Vt), ut = Math.imul(Ur, Qt), ut = ut + Math.imul(Sr, Vt) | 0, ot = Math.imul(Sr, Qt), At = At + Math.imul(Br, br) | 0, ut = ut + Math.imul(Br, pr) | 0, ut = ut + Math.imul(_r, br) | 0, ot = ot + Math.imul(_r, pr) | 0, At = At + Math.imul(ir, qr) | 0, ut = ut + Math.imul(ir, xr) | 0, ut = ut + Math.imul(Jt, qr) | 0, ot = ot + Math.imul(Jt, xr) | 0, At = At + Math.imul(Yt, zr) | 0, ut = ut + Math.imul(Yt, Pr) | 0, ut = ut + Math.imul(tr, zr) | 0, ot = ot + Math.imul(tr, Pr) | 0, At = At + Math.imul(Xt, tn) | 0, ut = ut + Math.imul(Xt, Nr) | 0, ut = ut + Math.imul(rr, tn) | 0, ot = ot + Math.imul(rr, Nr) | 0, At = At + Math.imul(Rt, rn) | 0, ut = ut + Math.imul(Rt, jr) | 0, ut = ut + Math.imul(Nt, rn) | 0, ot = ot + Math.imul(Nt, jr) | 0;
          var yn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, At = Math.imul(Kr, Vt), ut = Math.imul(Kr, Qt), ut = ut + Math.imul(kr, Vt) | 0, ot = Math.imul(kr, Qt), At = At + Math.imul(Ur, br) | 0, ut = ut + Math.imul(Ur, pr) | 0, ut = ut + Math.imul(Sr, br) | 0, ot = ot + Math.imul(Sr, pr) | 0, At = At + Math.imul(Br, qr) | 0, ut = ut + Math.imul(Br, xr) | 0, ut = ut + Math.imul(_r, qr) | 0, ot = ot + Math.imul(_r, xr) | 0, At = At + Math.imul(ir, zr) | 0, ut = ut + Math.imul(ir, Pr) | 0, ut = ut + Math.imul(Jt, zr) | 0, ot = ot + Math.imul(Jt, Pr) | 0, At = At + Math.imul(Yt, tn) | 0, ut = ut + Math.imul(Yt, Nr) | 0, ut = ut + Math.imul(tr, tn) | 0, ot = ot + Math.imul(tr, Nr) | 0, At = At + Math.imul(Xt, rn) | 0, ut = ut + Math.imul(Xt, jr) | 0, ut = ut + Math.imul(rr, rn) | 0, ot = ot + Math.imul(rr, jr) | 0, At = At + Math.imul(Rt, nn) | 0, ut = ut + Math.imul(Rt, Or) | 0, ut = ut + Math.imul(Nt, nn) | 0, ot = ot + Math.imul(Nt, Or) | 0;
          var wn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, At = Math.imul(Gr, Vt), ut = Math.imul(Gr, Qt), ut = ut + Math.imul(Tr, Vt) | 0, ot = Math.imul(Tr, Qt), At = At + Math.imul(Kr, br) | 0, ut = ut + Math.imul(Kr, pr) | 0, ut = ut + Math.imul(kr, br) | 0, ot = ot + Math.imul(kr, pr) | 0, At = At + Math.imul(Ur, qr) | 0, ut = ut + Math.imul(Ur, xr) | 0, ut = ut + Math.imul(Sr, qr) | 0, ot = ot + Math.imul(Sr, xr) | 0, At = At + Math.imul(Br, zr) | 0, ut = ut + Math.imul(Br, Pr) | 0, ut = ut + Math.imul(_r, zr) | 0, ot = ot + Math.imul(_r, Pr) | 0, At = At + Math.imul(ir, tn) | 0, ut = ut + Math.imul(ir, Nr) | 0, ut = ut + Math.imul(Jt, tn) | 0, ot = ot + Math.imul(Jt, Nr) | 0, At = At + Math.imul(Yt, rn) | 0, ut = ut + Math.imul(Yt, jr) | 0, ut = ut + Math.imul(tr, rn) | 0, ot = ot + Math.imul(tr, jr) | 0, At = At + Math.imul(Xt, nn) | 0, ut = ut + Math.imul(Xt, Or) | 0, ut = ut + Math.imul(rr, nn) | 0, ot = ot + Math.imul(rr, Or) | 0, At = At + Math.imul(Rt, nr) | 0, ut = ut + Math.imul(Rt, or) | 0, ut = ut + Math.imul(Nt, nr) | 0, ot = ot + Math.imul(Nt, or) | 0;
          var Mn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, At = Math.imul(fr, Vt), ut = Math.imul(fr, Qt), ut = ut + Math.imul(dr, Vt) | 0, ot = Math.imul(dr, Qt), At = At + Math.imul(Gr, br) | 0, ut = ut + Math.imul(Gr, pr) | 0, ut = ut + Math.imul(Tr, br) | 0, ot = ot + Math.imul(Tr, pr) | 0, At = At + Math.imul(Kr, qr) | 0, ut = ut + Math.imul(Kr, xr) | 0, ut = ut + Math.imul(kr, qr) | 0, ot = ot + Math.imul(kr, xr) | 0, At = At + Math.imul(Ur, zr) | 0, ut = ut + Math.imul(Ur, Pr) | 0, ut = ut + Math.imul(Sr, zr) | 0, ot = ot + Math.imul(Sr, Pr) | 0, At = At + Math.imul(Br, tn) | 0, ut = ut + Math.imul(Br, Nr) | 0, ut = ut + Math.imul(_r, tn) | 0, ot = ot + Math.imul(_r, Nr) | 0, At = At + Math.imul(ir, rn) | 0, ut = ut + Math.imul(ir, jr) | 0, ut = ut + Math.imul(Jt, rn) | 0, ot = ot + Math.imul(Jt, jr) | 0, At = At + Math.imul(Yt, nn) | 0, ut = ut + Math.imul(Yt, Or) | 0, ut = ut + Math.imul(tr, nn) | 0, ot = ot + Math.imul(tr, Or) | 0, At = At + Math.imul(Xt, nr) | 0, ut = ut + Math.imul(Xt, or) | 0, ut = ut + Math.imul(rr, nr) | 0, ot = ot + Math.imul(rr, or) | 0, At = At + Math.imul(Rt, Ht) | 0, ut = ut + Math.imul(Rt, lr) | 0, ut = ut + Math.imul(Nt, Ht) | 0, ot = ot + Math.imul(Nt, lr) | 0;
          var En = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, At = Math.imul(Er, Vt), ut = Math.imul(Er, Qt), ut = ut + Math.imul(zt, Vt) | 0, ot = Math.imul(zt, Qt), At = At + Math.imul(fr, br) | 0, ut = ut + Math.imul(fr, pr) | 0, ut = ut + Math.imul(dr, br) | 0, ot = ot + Math.imul(dr, pr) | 0, At = At + Math.imul(Gr, qr) | 0, ut = ut + Math.imul(Gr, xr) | 0, ut = ut + Math.imul(Tr, qr) | 0, ot = ot + Math.imul(Tr, xr) | 0, At = At + Math.imul(Kr, zr) | 0, ut = ut + Math.imul(Kr, Pr) | 0, ut = ut + Math.imul(kr, zr) | 0, ot = ot + Math.imul(kr, Pr) | 0, At = At + Math.imul(Ur, tn) | 0, ut = ut + Math.imul(Ur, Nr) | 0, ut = ut + Math.imul(Sr, tn) | 0, ot = ot + Math.imul(Sr, Nr) | 0, At = At + Math.imul(Br, rn) | 0, ut = ut + Math.imul(Br, jr) | 0, ut = ut + Math.imul(_r, rn) | 0, ot = ot + Math.imul(_r, jr) | 0, At = At + Math.imul(ir, nn) | 0, ut = ut + Math.imul(ir, Or) | 0, ut = ut + Math.imul(Jt, nn) | 0, ot = ot + Math.imul(Jt, Or) | 0, At = At + Math.imul(Yt, nr) | 0, ut = ut + Math.imul(Yt, or) | 0, ut = ut + Math.imul(tr, nr) | 0, ot = ot + Math.imul(tr, or) | 0, At = At + Math.imul(Xt, Ht) | 0, ut = ut + Math.imul(Xt, lr) | 0, ut = ut + Math.imul(rr, Ht) | 0, ot = ot + Math.imul(rr, lr) | 0, At = At + Math.imul(Rt, Ar) | 0, ut = ut + Math.imul(Rt, Cr) | 0, ut = ut + Math.imul(Nt, Ar) | 0, ot = ot + Math.imul(Nt, Cr) | 0;
          var xn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, At = Math.imul(Er, br), ut = Math.imul(Er, pr), ut = ut + Math.imul(zt, br) | 0, ot = Math.imul(zt, pr), At = At + Math.imul(fr, qr) | 0, ut = ut + Math.imul(fr, xr) | 0, ut = ut + Math.imul(dr, qr) | 0, ot = ot + Math.imul(dr, xr) | 0, At = At + Math.imul(Gr, zr) | 0, ut = ut + Math.imul(Gr, Pr) | 0, ut = ut + Math.imul(Tr, zr) | 0, ot = ot + Math.imul(Tr, Pr) | 0, At = At + Math.imul(Kr, tn) | 0, ut = ut + Math.imul(Kr, Nr) | 0, ut = ut + Math.imul(kr, tn) | 0, ot = ot + Math.imul(kr, Nr) | 0, At = At + Math.imul(Ur, rn) | 0, ut = ut + Math.imul(Ur, jr) | 0, ut = ut + Math.imul(Sr, rn) | 0, ot = ot + Math.imul(Sr, jr) | 0, At = At + Math.imul(Br, nn) | 0, ut = ut + Math.imul(Br, Or) | 0, ut = ut + Math.imul(_r, nn) | 0, ot = ot + Math.imul(_r, Or) | 0, At = At + Math.imul(ir, nr) | 0, ut = ut + Math.imul(ir, or) | 0, ut = ut + Math.imul(Jt, nr) | 0, ot = ot + Math.imul(Jt, or) | 0, At = At + Math.imul(Yt, Ht) | 0, ut = ut + Math.imul(Yt, lr) | 0, ut = ut + Math.imul(tr, Ht) | 0, ot = ot + Math.imul(tr, lr) | 0, At = At + Math.imul(Xt, Ar) | 0, ut = ut + Math.imul(Xt, Cr) | 0, ut = ut + Math.imul(rr, Ar) | 0, ot = ot + Math.imul(rr, Cr) | 0;
          var Cn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, At = Math.imul(Er, qr), ut = Math.imul(Er, xr), ut = ut + Math.imul(zt, qr) | 0, ot = Math.imul(zt, xr), At = At + Math.imul(fr, zr) | 0, ut = ut + Math.imul(fr, Pr) | 0, ut = ut + Math.imul(dr, zr) | 0, ot = ot + Math.imul(dr, Pr) | 0, At = At + Math.imul(Gr, tn) | 0, ut = ut + Math.imul(Gr, Nr) | 0, ut = ut + Math.imul(Tr, tn) | 0, ot = ot + Math.imul(Tr, Nr) | 0, At = At + Math.imul(Kr, rn) | 0, ut = ut + Math.imul(Kr, jr) | 0, ut = ut + Math.imul(kr, rn) | 0, ot = ot + Math.imul(kr, jr) | 0, At = At + Math.imul(Ur, nn) | 0, ut = ut + Math.imul(Ur, Or) | 0, ut = ut + Math.imul(Sr, nn) | 0, ot = ot + Math.imul(Sr, Or) | 0, At = At + Math.imul(Br, nr) | 0, ut = ut + Math.imul(Br, or) | 0, ut = ut + Math.imul(_r, nr) | 0, ot = ot + Math.imul(_r, or) | 0, At = At + Math.imul(ir, Ht) | 0, ut = ut + Math.imul(ir, lr) | 0, ut = ut + Math.imul(Jt, Ht) | 0, ot = ot + Math.imul(Jt, lr) | 0, At = At + Math.imul(Yt, Ar) | 0, ut = ut + Math.imul(Yt, Cr) | 0, ut = ut + Math.imul(tr, Ar) | 0, ot = ot + Math.imul(tr, Cr) | 0;
          var _n = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, At = Math.imul(Er, zr), ut = Math.imul(Er, Pr), ut = ut + Math.imul(zt, zr) | 0, ot = Math.imul(zt, Pr), At = At + Math.imul(fr, tn) | 0, ut = ut + Math.imul(fr, Nr) | 0, ut = ut + Math.imul(dr, tn) | 0, ot = ot + Math.imul(dr, Nr) | 0, At = At + Math.imul(Gr, rn) | 0, ut = ut + Math.imul(Gr, jr) | 0, ut = ut + Math.imul(Tr, rn) | 0, ot = ot + Math.imul(Tr, jr) | 0, At = At + Math.imul(Kr, nn) | 0, ut = ut + Math.imul(Kr, Or) | 0, ut = ut + Math.imul(kr, nn) | 0, ot = ot + Math.imul(kr, Or) | 0, At = At + Math.imul(Ur, nr) | 0, ut = ut + Math.imul(Ur, or) | 0, ut = ut + Math.imul(Sr, nr) | 0, ot = ot + Math.imul(Sr, or) | 0, At = At + Math.imul(Br, Ht) | 0, ut = ut + Math.imul(Br, lr) | 0, ut = ut + Math.imul(_r, Ht) | 0, ot = ot + Math.imul(_r, lr) | 0, At = At + Math.imul(ir, Ar) | 0, ut = ut + Math.imul(ir, Cr) | 0, ut = ut + Math.imul(Jt, Ar) | 0, ot = ot + Math.imul(Jt, Cr) | 0;
          var hn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, At = Math.imul(Er, tn), ut = Math.imul(Er, Nr), ut = ut + Math.imul(zt, tn) | 0, ot = Math.imul(zt, Nr), At = At + Math.imul(fr, rn) | 0, ut = ut + Math.imul(fr, jr) | 0, ut = ut + Math.imul(dr, rn) | 0, ot = ot + Math.imul(dr, jr) | 0, At = At + Math.imul(Gr, nn) | 0, ut = ut + Math.imul(Gr, Or) | 0, ut = ut + Math.imul(Tr, nn) | 0, ot = ot + Math.imul(Tr, Or) | 0, At = At + Math.imul(Kr, nr) | 0, ut = ut + Math.imul(Kr, or) | 0, ut = ut + Math.imul(kr, nr) | 0, ot = ot + Math.imul(kr, or) | 0, At = At + Math.imul(Ur, Ht) | 0, ut = ut + Math.imul(Ur, lr) | 0, ut = ut + Math.imul(Sr, Ht) | 0, ot = ot + Math.imul(Sr, lr) | 0, At = At + Math.imul(Br, Ar) | 0, ut = ut + Math.imul(Br, Cr) | 0, ut = ut + Math.imul(_r, Ar) | 0, ot = ot + Math.imul(_r, Cr) | 0;
          var gn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, At = Math.imul(Er, rn), ut = Math.imul(Er, jr), ut = ut + Math.imul(zt, rn) | 0, ot = Math.imul(zt, jr), At = At + Math.imul(fr, nn) | 0, ut = ut + Math.imul(fr, Or) | 0, ut = ut + Math.imul(dr, nn) | 0, ot = ot + Math.imul(dr, Or) | 0, At = At + Math.imul(Gr, nr) | 0, ut = ut + Math.imul(Gr, or) | 0, ut = ut + Math.imul(Tr, nr) | 0, ot = ot + Math.imul(Tr, or) | 0, At = At + Math.imul(Kr, Ht) | 0, ut = ut + Math.imul(Kr, lr) | 0, ut = ut + Math.imul(kr, Ht) | 0, ot = ot + Math.imul(kr, lr) | 0, At = At + Math.imul(Ur, Ar) | 0, ut = ut + Math.imul(Ur, Cr) | 0, ut = ut + Math.imul(Sr, Ar) | 0, ot = ot + Math.imul(Sr, Cr) | 0;
          var ln = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, At = Math.imul(Er, nn), ut = Math.imul(Er, Or), ut = ut + Math.imul(zt, nn) | 0, ot = Math.imul(zt, Or), At = At + Math.imul(fr, nr) | 0, ut = ut + Math.imul(fr, or) | 0, ut = ut + Math.imul(dr, nr) | 0, ot = ot + Math.imul(dr, or) | 0, At = At + Math.imul(Gr, Ht) | 0, ut = ut + Math.imul(Gr, lr) | 0, ut = ut + Math.imul(Tr, Ht) | 0, ot = ot + Math.imul(Tr, lr) | 0, At = At + Math.imul(Kr, Ar) | 0, ut = ut + Math.imul(Kr, Cr) | 0, ut = ut + Math.imul(kr, Ar) | 0, ot = ot + Math.imul(kr, Cr) | 0;
          var pn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, At = Math.imul(Er, nr), ut = Math.imul(Er, or), ut = ut + Math.imul(zt, nr) | 0, ot = Math.imul(zt, or), At = At + Math.imul(fr, Ht) | 0, ut = ut + Math.imul(fr, lr) | 0, ut = ut + Math.imul(dr, Ht) | 0, ot = ot + Math.imul(dr, lr) | 0, At = At + Math.imul(Gr, Ar) | 0, ut = ut + Math.imul(Gr, Cr) | 0, ut = ut + Math.imul(Tr, Ar) | 0, ot = ot + Math.imul(Tr, Cr) | 0;
          var mn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, At = Math.imul(Er, Ht), ut = Math.imul(Er, lr), ut = ut + Math.imul(zt, Ht) | 0, ot = Math.imul(zt, lr), At = At + Math.imul(fr, Ar) | 0, ut = ut + Math.imul(fr, Cr) | 0, ut = ut + Math.imul(dr, Ar) | 0, ot = ot + Math.imul(dr, Cr) | 0;
          var sn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, At = Math.imul(Er, Ar), ut = Math.imul(Er, Cr), ut = ut + Math.imul(zt, Ar) | 0, ot = Math.imul(zt, Cr);
          var Vr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          return Mt = (ot + (ut >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ct[0] = Ir, ct[1] = Jr, ct[2] = Qr, ct[3] = Sn, ct[4] = dn, ct[5] = yn, ct[6] = wn, ct[7] = Mn, ct[8] = En, ct[9] = xn, ct[10] = Cn, ct[11] = _n, ct[12] = hn, ct[13] = gn, ct[14] = ln, ct[15] = pn, ct[16] = mn, ct[17] = sn, ct[18] = Vr, Mt !== 0 && (ct[19] = Mt, nt.length++), nt;
        };
        Math.imul || (Pt = Tt);
        function It(Ut, xt, tt) {
          tt.negative = xt.negative ^ Ut.negative, tt.length = Ut.length + xt.length;
          for (var nt = 0, it = 0, at = 0; at < tt.length - 1; at++) {
            var ct = it;
            it = 0;
            for (var Mt = nt & 67108863, At = Math.min(at, xt.length - 1), ut = Math.max(0, at - Ut.length + 1); ut <= At; ut++) {
              var ot = at - ut, Ct = Ut.words[ot] | 0, Rt = xt.words[ut] | 0, Nt = Ct * Rt, Wt = Nt & 67108863;
              ct = ct + (Nt / 67108864 | 0) | 0, Wt = Wt + Mt | 0, Mt = Wt & 67108863, ct = ct + (Wt >>> 26) | 0, it += ct >>> 26, ct &= 67108863;
            }
            tt.words[at] = Mt, nt = ct, ct = it;
          }
          return nt !== 0 ? tt.words[at] = nt : tt.length--, tt.strip();
        }
        function jt(Ut, xt, tt) {
          var nt = new Dt();
          return nt.mulp(Ut, xt, tt);
        }
        et.prototype.mulTo = function(xt, tt) {
          var nt, it = this.length + xt.length;
          return this.length === 10 && xt.length === 10 ? nt = Pt(this, xt, tt) : it < 63 ? nt = Tt(this, xt, tt) : it < 1024 ? nt = It(this, xt, tt) : nt = jt(this, xt, tt), nt;
        };
        function Dt(Ut, xt) {
          this.x = Ut, this.y = xt;
        }
        Dt.prototype.makeRBT = function(xt) {
          for (var tt = new Array(xt), nt = et.prototype._countBits(xt) - 1, it = 0; it < xt; it++) tt[it] = this.revBin(it, nt, xt);
          return tt;
        }, Dt.prototype.revBin = function(xt, tt, nt) {
          if (xt === 0 || xt === nt - 1) return xt;
          for (var it = 0, at = 0; at < tt; at++) it |= (xt & 1) << tt - at - 1, xt >>= 1;
          return it;
        }, Dt.prototype.permute = function(xt, tt, nt, it, at, ct) {
          for (var Mt = 0; Mt < ct; Mt++) it[Mt] = tt[xt[Mt]], at[Mt] = nt[xt[Mt]];
        }, Dt.prototype.transform = function(xt, tt, nt, it, at, ct) {
          this.permute(ct, xt, tt, nt, it, at);
          for (var Mt = 1; Mt < at; Mt <<= 1) for (var At = Mt << 1, ut = Math.cos(2 * Math.PI / At), ot = Math.sin(2 * Math.PI / At), Ct = 0; Ct < at; Ct += At) for (var Rt = ut, Nt = ot, Wt = 0; Wt < Mt; Wt++) {
            var Xt = nt[Ct + Wt], rr = it[Ct + Wt], Gt = nt[Ct + Wt + Mt], Yt = it[Ct + Wt + Mt], tr = Rt * Gt - Nt * Yt;
            Yt = Rt * Yt + Nt * Gt, Gt = tr, nt[Ct + Wt] = Xt + Gt, it[Ct + Wt] = rr + Yt, nt[Ct + Wt + Mt] = Xt - Gt, it[Ct + Wt + Mt] = rr - Yt, Wt !== At && (tr = ut * Rt - ot * Nt, Nt = ut * Nt + ot * Rt, Rt = tr);
          }
        }, Dt.prototype.guessLen13b = function(xt, tt) {
          var nt = Math.max(tt, xt) | 1, it = nt & 1, at = 0;
          for (nt = nt / 2 | 0; nt; nt = nt >>> 1) at++;
          return 1 << at + 1 + it;
        }, Dt.prototype.conjugate = function(xt, tt, nt) {
          if (!(nt <= 1)) for (var it = 0; it < nt / 2; it++) {
            var at = xt[it];
            xt[it] = xt[nt - it - 1], xt[nt - it - 1] = at, at = tt[it], tt[it] = -tt[nt - it - 1], tt[nt - it - 1] = -at;
          }
        }, Dt.prototype.normalize13b = function(xt, tt) {
          for (var nt = 0, it = 0; it < tt / 2; it++) {
            var at = Math.round(xt[2 * it + 1] / tt) * 8192 + Math.round(xt[2 * it] / tt) + nt;
            xt[it] = at & 67108863, at < 67108864 ? nt = 0 : nt = at / 67108864 | 0;
          }
          return xt;
        }, Dt.prototype.convert13b = function(xt, tt, nt, it) {
          for (var at = 0, ct = 0; ct < tt; ct++) at = at + (xt[ct] | 0), nt[2 * ct] = at & 8191, at = at >>> 13, nt[2 * ct + 1] = at & 8191, at = at >>> 13;
          for (ct = 2 * tt; ct < it; ++ct) nt[ct] = 0;
          j(at === 0), j((at & -8192) === 0);
        }, Dt.prototype.stub = function(xt) {
          for (var tt = new Array(xt), nt = 0; nt < xt; nt++) tt[nt] = 0;
          return tt;
        }, Dt.prototype.mulp = function(xt, tt, nt) {
          var it = 2 * this.guessLen13b(xt.length, tt.length), at = this.makeRBT(it), ct = this.stub(it), Mt = new Array(it), At = new Array(it), ut = new Array(it), ot = new Array(it), Ct = new Array(it), Rt = new Array(it), Nt = nt.words;
          Nt.length = it, this.convert13b(xt.words, xt.length, Mt, it), this.convert13b(tt.words, tt.length, ot, it), this.transform(Mt, ct, At, ut, it, at), this.transform(ot, ct, Ct, Rt, it, at);
          for (var Wt = 0; Wt < it; Wt++) {
            var Xt = At[Wt] * Ct[Wt] - ut[Wt] * Rt[Wt];
            ut[Wt] = At[Wt] * Rt[Wt] + ut[Wt] * Ct[Wt], At[Wt] = Xt;
          }
          return this.conjugate(At, ut, it), this.transform(At, ut, Nt, ct, it, at), this.conjugate(Nt, ct, it), this.normalize13b(Nt, it), nt.negative = xt.negative ^ tt.negative, nt.length = xt.length + tt.length, nt.strip();
        }, et.prototype.mul = function(xt) {
          var tt = new et(null);
          return tt.words = new Array(this.length + xt.length), this.mulTo(xt, tt);
        }, et.prototype.mulf = function(xt) {
          var tt = new et(null);
          return tt.words = new Array(this.length + xt.length), jt(this, xt, tt);
        }, et.prototype.imul = function(xt) {
          return this.clone().mulTo(xt, this);
        }, et.prototype.imuln = function(xt) {
          j(typeof xt == "number"), j(xt < 67108864);
          for (var tt = 0, nt = 0; nt < this.length; nt++) {
            var it = (this.words[nt] | 0) * xt, at = (it & 67108863) + (tt & 67108863);
            tt >>= 26, tt += it / 67108864 | 0, tt += at >>> 26, this.words[nt] = at & 67108863;
          }
          return tt !== 0 && (this.words[nt] = tt, this.length++), this;
        }, et.prototype.muln = function(xt) {
          return this.clone().imuln(xt);
        }, et.prototype.sqr = function() {
          return this.mul(this);
        }, et.prototype.isqr = function() {
          return this.imul(this.clone());
        }, et.prototype.pow = function(xt) {
          var tt = kt(xt);
          if (tt.length === 0) return new et(1);
          for (var nt = this, it = 0; it < tt.length && tt[it] === 0; it++, nt = nt.sqr()) ;
          if (++it < tt.length) for (var at = nt.sqr(); it < tt.length; it++, at = at.sqr()) tt[it] !== 0 && (nt = nt.mul(at));
          return nt;
        }, et.prototype.iushln = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26, it = 67108863 >>> 26 - tt << 26 - tt, at;
          if (tt !== 0) {
            var ct = 0;
            for (at = 0; at < this.length; at++) {
              var Mt = this.words[at] & it, At = (this.words[at] | 0) - Mt << tt;
              this.words[at] = At | ct, ct = Mt >>> 26 - tt;
            }
            ct && (this.words[at] = ct, this.length++);
          }
          if (nt !== 0) {
            for (at = this.length - 1; at >= 0; at--) this.words[at + nt] = this.words[at];
            for (at = 0; at < nt; at++) this.words[at] = 0;
            this.length += nt;
          }
          return this.strip();
        }, et.prototype.ishln = function(xt) {
          return j(this.negative === 0), this.iushln(xt);
        }, et.prototype.iushrn = function(xt, tt, nt) {
          j(typeof xt == "number" && xt >= 0);
          var it;
          tt ? it = (tt - tt % 26) / 26 : it = 0;
          var at = xt % 26, ct = Math.min((xt - at) / 26, this.length), Mt = 67108863 ^ 67108863 >>> at << at, At = nt;
          if (it -= ct, it = Math.max(0, it), At) {
            for (var ut = 0; ut < ct; ut++) At.words[ut] = this.words[ut];
            At.length = ct;
          }
          if (ct !== 0) if (this.length > ct) for (this.length -= ct, ut = 0; ut < this.length; ut++) this.words[ut] = this.words[ut + ct];
          else this.words[0] = 0, this.length = 1;
          var ot = 0;
          for (ut = this.length - 1; ut >= 0 && (ot !== 0 || ut >= it); ut--) {
            var Ct = this.words[ut] | 0;
            this.words[ut] = ot << 26 - at | Ct >>> at, ot = Ct & Mt;
          }
          return At && ot !== 0 && (At.words[At.length++] = ot), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
        }, et.prototype.ishrn = function(xt, tt, nt) {
          return j(this.negative === 0), this.iushrn(xt, tt, nt);
        }, et.prototype.shln = function(xt) {
          return this.clone().ishln(xt);
        }, et.prototype.ushln = function(xt) {
          return this.clone().iushln(xt);
        }, et.prototype.shrn = function(xt) {
          return this.clone().ishrn(xt);
        }, et.prototype.ushrn = function(xt) {
          return this.clone().iushrn(xt);
        }, et.prototype.testn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26, it = 1 << tt;
          if (this.length <= nt) return false;
          var at = this.words[nt];
          return !!(at & it);
        }, et.prototype.imaskn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26;
          if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= nt) return this;
          if (tt !== 0 && nt++, this.length = Math.min(nt, this.length), tt !== 0) {
            var it = 67108863 ^ 67108863 >>> tt << tt;
            this.words[this.length - 1] &= it;
          }
          return this.strip();
        }, et.prototype.maskn = function(xt) {
          return this.clone().imaskn(xt);
        }, et.prototype.iaddn = function(xt) {
          return j(typeof xt == "number"), j(xt < 67108864), xt < 0 ? this.isubn(-xt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < xt ? (this.words[0] = xt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(xt), this.negative = 1, this) : this._iaddn(xt);
        }, et.prototype._iaddn = function(xt) {
          this.words[0] += xt;
          for (var tt = 0; tt < this.length && this.words[tt] >= 67108864; tt++) this.words[tt] -= 67108864, tt === this.length - 1 ? this.words[tt + 1] = 1 : this.words[tt + 1]++;
          return this.length = Math.max(this.length, tt + 1), this;
        }, et.prototype.isubn = function(xt) {
          if (j(typeof xt == "number"), j(xt < 67108864), xt < 0) return this.iaddn(-xt);
          if (this.negative !== 0) return this.negative = 0, this.iaddn(xt), this.negative = 1, this;
          if (this.words[0] -= xt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
          else for (var tt = 0; tt < this.length && this.words[tt] < 0; tt++) this.words[tt] += 67108864, this.words[tt + 1] -= 1;
          return this.strip();
        }, et.prototype.addn = function(xt) {
          return this.clone().iaddn(xt);
        }, et.prototype.subn = function(xt) {
          return this.clone().isubn(xt);
        }, et.prototype.iabs = function() {
          return this.negative = 0, this;
        }, et.prototype.abs = function() {
          return this.clone().iabs();
        }, et.prototype._ishlnsubmul = function(xt, tt, nt) {
          var it = xt.length + nt, at;
          this._expand(it);
          var ct, Mt = 0;
          for (at = 0; at < xt.length; at++) {
            ct = (this.words[at + nt] | 0) + Mt;
            var At = (xt.words[at] | 0) * tt;
            ct -= At & 67108863, Mt = (ct >> 26) - (At / 67108864 | 0), this.words[at + nt] = ct & 67108863;
          }
          for (; at < this.length - nt; at++) ct = (this.words[at + nt] | 0) + Mt, Mt = ct >> 26, this.words[at + nt] = ct & 67108863;
          if (Mt === 0) return this.strip();
          for (j(Mt === -1), Mt = 0, at = 0; at < this.length; at++) ct = -(this.words[at] | 0) + Mt, Mt = ct >> 26, this.words[at] = ct & 67108863;
          return this.negative = 1, this.strip();
        }, et.prototype._wordDiv = function(xt, tt) {
          var nt = this.length - xt.length, it = this.clone(), at = xt, ct = at.words[at.length - 1] | 0, Mt = this._countBits(ct);
          nt = 26 - Mt, nt !== 0 && (at = at.ushln(nt), it.iushln(nt), ct = at.words[at.length - 1] | 0);
          var At = it.length - at.length, ut;
          if (tt !== "mod") {
            ut = new et(null), ut.length = At + 1, ut.words = new Array(ut.length);
            for (var ot = 0; ot < ut.length; ot++) ut.words[ot] = 0;
          }
          var Ct = it.clone()._ishlnsubmul(at, 1, At);
          Ct.negative === 0 && (it = Ct, ut && (ut.words[At] = 1));
          for (var Rt = At - 1; Rt >= 0; Rt--) {
            var Nt = (it.words[at.length + Rt] | 0) * 67108864 + (it.words[at.length + Rt - 1] | 0);
            for (Nt = Math.min(Nt / ct | 0, 67108863), it._ishlnsubmul(at, Nt, Rt); it.negative !== 0; ) Nt--, it.negative = 0, it._ishlnsubmul(at, 1, Rt), it.isZero() || (it.negative ^= 1);
            ut && (ut.words[Rt] = Nt);
          }
          return ut && ut.strip(), it.strip(), tt !== "div" && nt !== 0 && it.iushrn(nt), {
            div: ut || null,
            mod: it
          };
        }, et.prototype.divmod = function(xt, tt, nt) {
          if (j(!xt.isZero()), this.isZero()) return {
            div: new et(0),
            mod: new et(0)
          };
          var it, at, ct;
          return this.negative !== 0 && xt.negative === 0 ? (ct = this.neg().divmod(xt, tt), tt !== "mod" && (it = ct.div.neg()), tt !== "div" && (at = ct.mod.neg(), nt && at.negative !== 0 && at.iadd(xt)), {
            div: it,
            mod: at
          }) : this.negative === 0 && xt.negative !== 0 ? (ct = this.divmod(xt.neg(), tt), tt !== "mod" && (it = ct.div.neg()), {
            div: it,
            mod: ct.mod
          }) : this.negative & xt.negative ? (ct = this.neg().divmod(xt.neg(), tt), tt !== "div" && (at = ct.mod.neg(), nt && at.negative !== 0 && at.isub(xt)), {
            div: ct.div,
            mod: at
          }) : xt.length > this.length || this.cmp(xt) < 0 ? {
            div: new et(0),
            mod: this
          } : xt.length === 1 ? tt === "div" ? {
            div: this.divn(xt.words[0]),
            mod: null
          } : tt === "mod" ? {
            div: null,
            mod: new et(this.modn(xt.words[0]))
          } : {
            div: this.divn(xt.words[0]),
            mod: new et(this.modn(xt.words[0]))
          } : this._wordDiv(xt, tt);
        }, et.prototype.div = function(xt) {
          return this.divmod(xt, "div", false).div;
        }, et.prototype.mod = function(xt) {
          return this.divmod(xt, "mod", false).mod;
        }, et.prototype.umod = function(xt) {
          return this.divmod(xt, "mod", true).mod;
        }, et.prototype.divRound = function(xt) {
          var tt = this.divmod(xt);
          if (tt.mod.isZero()) return tt.div;
          var nt = tt.div.negative !== 0 ? tt.mod.isub(xt) : tt.mod, it = xt.ushrn(1), at = xt.andln(1), ct = nt.cmp(it);
          return ct < 0 || at === 1 && ct === 0 ? tt.div : tt.div.negative !== 0 ? tt.div.isubn(1) : tt.div.iaddn(1);
        }, et.prototype.modn = function(xt) {
          j(xt <= 67108863);
          for (var tt = (1 << 26) % xt, nt = 0, it = this.length - 1; it >= 0; it--) nt = (tt * nt + (this.words[it] | 0)) % xt;
          return nt;
        }, et.prototype.idivn = function(xt) {
          j(xt <= 67108863);
          for (var tt = 0, nt = this.length - 1; nt >= 0; nt--) {
            var it = (this.words[nt] | 0) + tt * 67108864;
            this.words[nt] = it / xt | 0, tt = it % xt;
          }
          return this.strip();
        }, et.prototype.divn = function(xt) {
          return this.clone().idivn(xt);
        }, et.prototype.egcd = function(xt) {
          j(xt.negative === 0), j(!xt.isZero());
          var tt = this, nt = xt.clone();
          tt.negative !== 0 ? tt = tt.umod(xt) : tt = tt.clone();
          for (var it = new et(1), at = new et(0), ct = new et(0), Mt = new et(1), At = 0; tt.isEven() && nt.isEven(); ) tt.iushrn(1), nt.iushrn(1), ++At;
          for (var ut = nt.clone(), ot = tt.clone(); !tt.isZero(); ) {
            for (var Ct = 0, Rt = 1; !(tt.words[0] & Rt) && Ct < 26; ++Ct, Rt <<= 1) ;
            if (Ct > 0) for (tt.iushrn(Ct); Ct-- > 0; ) (it.isOdd() || at.isOdd()) && (it.iadd(ut), at.isub(ot)), it.iushrn(1), at.iushrn(1);
            for (var Nt = 0, Wt = 1; !(nt.words[0] & Wt) && Nt < 26; ++Nt, Wt <<= 1) ;
            if (Nt > 0) for (nt.iushrn(Nt); Nt-- > 0; ) (ct.isOdd() || Mt.isOdd()) && (ct.iadd(ut), Mt.isub(ot)), ct.iushrn(1), Mt.iushrn(1);
            tt.cmp(nt) >= 0 ? (tt.isub(nt), it.isub(ct), at.isub(Mt)) : (nt.isub(tt), ct.isub(it), Mt.isub(at));
          }
          return {
            a: ct,
            b: Mt,
            gcd: nt.iushln(At)
          };
        }, et.prototype._invmp = function(xt) {
          j(xt.negative === 0), j(!xt.isZero());
          var tt = this, nt = xt.clone();
          tt.negative !== 0 ? tt = tt.umod(xt) : tt = tt.clone();
          for (var it = new et(1), at = new et(0), ct = nt.clone(); tt.cmpn(1) > 0 && nt.cmpn(1) > 0; ) {
            for (var Mt = 0, At = 1; !(tt.words[0] & At) && Mt < 26; ++Mt, At <<= 1) ;
            if (Mt > 0) for (tt.iushrn(Mt); Mt-- > 0; ) it.isOdd() && it.iadd(ct), it.iushrn(1);
            for (var ut = 0, ot = 1; !(nt.words[0] & ot) && ut < 26; ++ut, ot <<= 1) ;
            if (ut > 0) for (nt.iushrn(ut); ut-- > 0; ) at.isOdd() && at.iadd(ct), at.iushrn(1);
            tt.cmp(nt) >= 0 ? (tt.isub(nt), it.isub(at)) : (nt.isub(tt), at.isub(it));
          }
          var Ct;
          return tt.cmpn(1) === 0 ? Ct = it : Ct = at, Ct.cmpn(0) < 0 && Ct.iadd(xt), Ct;
        }, et.prototype.gcd = function(xt) {
          if (this.isZero()) return xt.abs();
          if (xt.isZero()) return this.abs();
          var tt = this.clone(), nt = xt.clone();
          tt.negative = 0, nt.negative = 0;
          for (var it = 0; tt.isEven() && nt.isEven(); it++) tt.iushrn(1), nt.iushrn(1);
          do {
            for (; tt.isEven(); ) tt.iushrn(1);
            for (; nt.isEven(); ) nt.iushrn(1);
            var at = tt.cmp(nt);
            if (at < 0) {
              var ct = tt;
              tt = nt, nt = ct;
            } else if (at === 0 || nt.cmpn(1) === 0) break;
            tt.isub(nt);
          } while (true);
          return nt.iushln(it);
        }, et.prototype.invm = function(xt) {
          return this.egcd(xt).a.umod(xt);
        }, et.prototype.isEven = function() {
          return (this.words[0] & 1) === 0;
        }, et.prototype.isOdd = function() {
          return (this.words[0] & 1) === 1;
        }, et.prototype.andln = function(xt) {
          return this.words[0] & xt;
        }, et.prototype.bincn = function(xt) {
          j(typeof xt == "number");
          var tt = xt % 26, nt = (xt - tt) / 26, it = 1 << tt;
          if (this.length <= nt) return this._expand(nt + 1), this.words[nt] |= it, this;
          for (var at = it, ct = nt; at !== 0 && ct < this.length; ct++) {
            var Mt = this.words[ct] | 0;
            Mt += at, at = Mt >>> 26, Mt &= 67108863, this.words[ct] = Mt;
          }
          return at !== 0 && (this.words[ct] = at, this.length++), this;
        }, et.prototype.isZero = function() {
          return this.length === 1 && this.words[0] === 0;
        }, et.prototype.cmpn = function(xt) {
          var tt = xt < 0;
          if (this.negative !== 0 && !tt) return -1;
          if (this.negative === 0 && tt) return 1;
          this.strip();
          var nt;
          if (this.length > 1) nt = 1;
          else {
            tt && (xt = -xt), j(xt <= 67108863, "Number is too big");
            var it = this.words[0] | 0;
            nt = it === xt ? 0 : it < xt ? -1 : 1;
          }
          return this.negative !== 0 ? -nt | 0 : nt;
        }, et.prototype.cmp = function(xt) {
          if (this.negative !== 0 && xt.negative === 0) return -1;
          if (this.negative === 0 && xt.negative !== 0) return 1;
          var tt = this.ucmp(xt);
          return this.negative !== 0 ? -tt | 0 : tt;
        }, et.prototype.ucmp = function(xt) {
          if (this.length > xt.length) return 1;
          if (this.length < xt.length) return -1;
          for (var tt = 0, nt = this.length - 1; nt >= 0; nt--) {
            var it = this.words[nt] | 0, at = xt.words[nt] | 0;
            if (it !== at) {
              it < at ? tt = -1 : it > at && (tt = 1);
              break;
            }
          }
          return tt;
        }, et.prototype.gtn = function(xt) {
          return this.cmpn(xt) === 1;
        }, et.prototype.gt = function(xt) {
          return this.cmp(xt) === 1;
        }, et.prototype.gten = function(xt) {
          return this.cmpn(xt) >= 0;
        }, et.prototype.gte = function(xt) {
          return this.cmp(xt) >= 0;
        }, et.prototype.ltn = function(xt) {
          return this.cmpn(xt) === -1;
        }, et.prototype.lt = function(xt) {
          return this.cmp(xt) === -1;
        }, et.prototype.lten = function(xt) {
          return this.cmpn(xt) <= 0;
        }, et.prototype.lte = function(xt) {
          return this.cmp(xt) <= 0;
        }, et.prototype.eqn = function(xt) {
          return this.cmpn(xt) === 0;
        }, et.prototype.eq = function(xt) {
          return this.cmp(xt) === 0;
        }, et.red = function(xt) {
          return new sr(xt);
        }, et.prototype.toRed = function(xt) {
          return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), xt.convertTo(this)._forceRed(xt);
        }, et.prototype.fromRed = function() {
          return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, et.prototype._forceRed = function(xt) {
          return this.red = xt, this;
        }, et.prototype.forceRed = function(xt) {
          return j(!this.red, "Already a number in reduction context"), this._forceRed(xt);
        }, et.prototype.redAdd = function(xt) {
          return j(this.red, "redAdd works only with red numbers"), this.red.add(this, xt);
        }, et.prototype.redIAdd = function(xt) {
          return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, xt);
        }, et.prototype.redSub = function(xt) {
          return j(this.red, "redSub works only with red numbers"), this.red.sub(this, xt);
        }, et.prototype.redISub = function(xt) {
          return j(this.red, "redISub works only with red numbers"), this.red.isub(this, xt);
        }, et.prototype.redShl = function(xt) {
          return j(this.red, "redShl works only with red numbers"), this.red.shl(this, xt);
        }, et.prototype.redMul = function(xt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, xt), this.red.mul(this, xt);
        }, et.prototype.redIMul = function(xt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, xt), this.red.imul(this, xt);
        }, et.prototype.redSqr = function() {
          return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, et.prototype.redISqr = function() {
          return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, et.prototype.redSqrt = function() {
          return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, et.prototype.redInvm = function() {
          return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, et.prototype.redNeg = function() {
          return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, et.prototype.redPow = function(xt) {
          return j(this.red && !xt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, xt);
        };
        var Ot = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function Ft(Ut, xt) {
          this.name = Ut, this.p = new et(xt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }
        Ft.prototype._tmp = function() {
          var xt = new et(null);
          return xt.words = new Array(Math.ceil(this.n / 13)), xt;
        }, Ft.prototype.ireduce = function(xt) {
          var tt = xt, nt;
          do
            this.split(tt, this.tmp), tt = this.imulK(tt), tt = tt.iadd(this.tmp), nt = tt.bitLength();
          while (nt > this.n);
          var it = nt < this.n ? -1 : tt.ucmp(this.p);
          return it === 0 ? (tt.words[0] = 0, tt.length = 1) : it > 0 ? tt.isub(this.p) : tt.strip(), tt;
        }, Ft.prototype.split = function(xt, tt) {
          xt.iushrn(this.n, 0, tt);
        }, Ft.prototype.imulK = function(xt) {
          return xt.imul(this.k);
        };
        function Lt() {
          Ft.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        rt(Lt, Ft), Lt.prototype.split = function(xt, tt) {
          for (var nt = 4194303, it = Math.min(xt.length, 9), at = 0; at < it; at++) tt.words[at] = xt.words[at];
          if (tt.length = it, xt.length <= 9) {
            xt.words[0] = 0, xt.length = 1;
            return;
          }
          var ct = xt.words[9];
          for (tt.words[tt.length++] = ct & nt, at = 10; at < xt.length; at++) {
            var Mt = xt.words[at] | 0;
            xt.words[at - 10] = (Mt & nt) << 4 | ct >>> 22, ct = Mt;
          }
          ct >>>= 22, xt.words[at - 10] = ct, ct === 0 && xt.length > 10 ? xt.length -= 10 : xt.length -= 9;
        }, Lt.prototype.imulK = function(xt) {
          xt.words[xt.length] = 0, xt.words[xt.length + 1] = 0, xt.length += 2;
          for (var tt = 0, nt = 0; nt < xt.length; nt++) {
            var it = xt.words[nt] | 0;
            tt += it * 977, xt.words[nt] = tt & 67108863, tt = it * 64 + (tt / 67108864 | 0);
          }
          return xt.words[xt.length - 1] === 0 && (xt.length--, xt.words[xt.length - 1] === 0 && xt.length--), xt;
        };
        function Zt() {
          Ft.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        rt(Zt, Ft);
        function Kt() {
          Ft.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        rt(Kt, Ft);
        function ar() {
          Ft.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        rt(ar, Ft), ar.prototype.imulK = function(xt) {
          for (var tt = 0, nt = 0; nt < xt.length; nt++) {
            var it = (xt.words[nt] | 0) * 19 + tt, at = it & 67108863;
            it >>>= 26, xt.words[nt] = at, tt = it;
          }
          return tt !== 0 && (xt.words[xt.length++] = tt), xt;
        }, et._prime = function(xt) {
          if (Ot[xt]) return Ot[xt];
          var tt;
          if (xt === "k256") tt = new Lt();
          else if (xt === "p224") tt = new Zt();
          else if (xt === "p192") tt = new Kt();
          else if (xt === "p25519") tt = new ar();
          else throw new Error("Unknown prime " + xt);
          return Ot[xt] = tt, tt;
        };
        function sr(Ut) {
          if (typeof Ut == "string") {
            var xt = et._prime(Ut);
            this.m = xt.p, this.prime = xt;
          } else j(Ut.gtn(1), "modulus must be greater than 1"), this.m = Ut, this.prime = null;
        }
        sr.prototype._verify1 = function(xt) {
          j(xt.negative === 0, "red works only with positives"), j(xt.red, "red works only with red numbers");
        }, sr.prototype._verify2 = function(xt, tt) {
          j((xt.negative | tt.negative) === 0, "red works only with positives"), j(xt.red && xt.red === tt.red, "red works only with red numbers");
        }, sr.prototype.imod = function(xt) {
          return this.prime ? this.prime.ireduce(xt)._forceRed(this) : xt.umod(this.m)._forceRed(this);
        }, sr.prototype.neg = function(xt) {
          return xt.isZero() ? xt.clone() : this.m.sub(xt)._forceRed(this);
        }, sr.prototype.add = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.add(tt);
          return nt.cmp(this.m) >= 0 && nt.isub(this.m), nt._forceRed(this);
        }, sr.prototype.iadd = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.iadd(tt);
          return nt.cmp(this.m) >= 0 && nt.isub(this.m), nt;
        }, sr.prototype.sub = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.sub(tt);
          return nt.cmpn(0) < 0 && nt.iadd(this.m), nt._forceRed(this);
        }, sr.prototype.isub = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.isub(tt);
          return nt.cmpn(0) < 0 && nt.iadd(this.m), nt;
        }, sr.prototype.shl = function(xt, tt) {
          return this._verify1(xt), this.imod(xt.ushln(tt));
        }, sr.prototype.imul = function(xt, tt) {
          return this._verify2(xt, tt), this.imod(xt.imul(tt));
        }, sr.prototype.mul = function(xt, tt) {
          return this._verify2(xt, tt), this.imod(xt.mul(tt));
        }, sr.prototype.isqr = function(xt) {
          return this.imul(xt, xt.clone());
        }, sr.prototype.sqr = function(xt) {
          return this.mul(xt, xt);
        }, sr.prototype.sqrt = function(xt) {
          if (xt.isZero()) return xt.clone();
          var tt = this.m.andln(3);
          if (j(tt % 2 === 1), tt === 3) {
            var nt = this.m.add(new et(1)).iushrn(2);
            return this.pow(xt, nt);
          }
          for (var it = this.m.subn(1), at = 0; !it.isZero() && it.andln(1) === 0; ) at++, it.iushrn(1);
          j(!it.isZero());
          var ct = new et(1).toRed(this), Mt = ct.redNeg(), At = this.m.subn(1).iushrn(1), ut = this.m.bitLength();
          for (ut = new et(2 * ut * ut).toRed(this); this.pow(ut, At).cmp(Mt) !== 0; ) ut.redIAdd(Mt);
          for (var ot = this.pow(ut, it), Ct = this.pow(xt, it.addn(1).iushrn(1)), Rt = this.pow(xt, it), Nt = at; Rt.cmp(ct) !== 0; ) {
            for (var Wt = Rt, Xt = 0; Wt.cmp(ct) !== 0; Xt++) Wt = Wt.redSqr();
            j(Xt < Nt);
            var rr = this.pow(ot, new et(1).iushln(Nt - Xt - 1));
            Ct = Ct.redMul(rr), ot = rr.redSqr(), Rt = Rt.redMul(ot), Nt = Xt;
          }
          return Ct;
        }, sr.prototype.invm = function(xt) {
          var tt = xt._invmp(this.m);
          return tt.negative !== 0 ? (tt.negative = 0, this.imod(tt).redNeg()) : this.imod(tt);
        }, sr.prototype.pow = function(xt, tt) {
          if (tt.isZero()) return new et(1);
          if (tt.cmpn(1) === 0) return xt.clone();
          var nt = 4, it = new Array(1 << nt);
          it[0] = new et(1).toRed(this), it[1] = xt;
          for (var at = 2; at < it.length; at++) it[at] = this.mul(it[at - 1], xt);
          var ct = it[0], Mt = 0, At = 0, ut = tt.bitLength() % 26;
          for (ut === 0 && (ut = 26), at = tt.length - 1; at >= 0; at--) {
            for (var ot = tt.words[at], Ct = ut - 1; Ct >= 0; Ct--) {
              var Rt = ot >> Ct & 1;
              if (ct !== it[0] && (ct = this.sqr(ct)), Rt === 0 && Mt === 0) {
                At = 0;
                continue;
              }
              Mt <<= 1, Mt |= Rt, At++, !(At !== nt && (at !== 0 || Ct !== 0)) && (ct = this.mul(ct, it[Mt]), At = 0, Mt = 0);
            }
            ut = 26;
          }
          return ct;
        }, sr.prototype.convertTo = function(xt) {
          var tt = xt.umod(this.m);
          return tt === xt ? tt.clone() : tt;
        }, sr.prototype.convertFrom = function(xt) {
          var tt = xt.clone();
          return tt.red = null, tt;
        }, et.mont = function(xt) {
          return new er(xt);
        };
        function er(Ut) {
          sr.call(this, Ut), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }
        rt(er, sr), er.prototype.convertTo = function(xt) {
          return this.imod(xt.ushln(this.shift));
        }, er.prototype.convertFrom = function(xt) {
          var tt = this.imod(xt.mul(this.rinv));
          return tt.red = null, tt;
        }, er.prototype.imul = function(xt, tt) {
          if (xt.isZero() || tt.isZero()) return xt.words[0] = 0, xt.length = 1, xt;
          var nt = xt.imul(tt), it = nt.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), at = nt.isub(it).iushrn(this.shift), ct = at;
          return at.cmp(this.m) >= 0 ? ct = at.isub(this.m) : at.cmpn(0) < 0 && (ct = at.iadd(this.m)), ct._forceRed(this);
        }, er.prototype.mul = function(xt, tt) {
          if (xt.isZero() || tt.isZero()) return new et(0)._forceRed(this);
          var nt = xt.mul(tt), it = nt.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), at = nt.isub(it).iushrn(this.shift), ct = at;
          return at.cmp(this.m) >= 0 ? ct = at.isub(this.m) : at.cmpn(0) < 0 && (ct = at.iadd(this.m)), ct._forceRed(this);
        }, er.prototype.invm = function(xt) {
          var tt = this.imod(xt._invmp(this.m).mul(this.r2));
          return tt._forceRed(this);
        };
      })(d, commonjsGlobal);
    })(bn$1);
    var bnExports$1 = bn$1.exports, bn = {
      exports: {}
    };
    bn.exports;
    (function(d) {
      (function(_, $) {
        function j(Ut, xt) {
          if (!Ut) throw new Error(xt || "Assertion failed");
        }
        function rt(Ut, xt) {
          Ut.super_ = xt;
          var tt = function() {
          };
          tt.prototype = xt.prototype, Ut.prototype = new tt(), Ut.prototype.constructor = Ut;
        }
        function et(Ut, xt, tt) {
          if (et.isBN(Ut)) return Ut;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, Ut !== null && ((xt === "le" || xt === "be") && (tt = xt, xt = 10), this._init(Ut || 0, xt || 10, tt || "be"));
        }
        typeof _ == "object" ? _.exports = et : $.BN = et, et.BN = et, et.wordSize = 26;
        var st;
        try {
          st = commonjsRequire("buffer").Buffer;
        } catch {
        }
        et.isBN = function(xt) {
          return xt instanceof et ? true : xt !== null && typeof xt == "object" && xt.constructor.wordSize === et.wordSize && Array.isArray(xt.words);
        }, et.max = function(xt, tt) {
          return xt.cmp(tt) > 0 ? xt : tt;
        }, et.min = function(xt, tt) {
          return xt.cmp(tt) < 0 ? xt : tt;
        }, et.prototype._init = function(xt, tt, nt) {
          if (typeof xt == "number") return this._initNumber(xt, tt, nt);
          if (typeof xt == "object") return this._initArray(xt, tt, nt);
          tt === "hex" && (tt = 16), j(tt === (tt | 0) && tt >= 2 && tt <= 36), xt = xt.toString().replace(/\s+/g, "");
          var it = 0;
          xt[0] === "-" && it++, tt === 16 ? this._parseHex(xt, it) : this._parseBase(xt, tt, it), xt[0] === "-" && (this.negative = 1), this.strip(), nt === "le" && this._initArray(this.toArray(), tt, nt);
        }, et.prototype._initNumber = function(xt, tt, nt) {
          xt < 0 && (this.negative = 1, xt = -xt), xt < 67108864 ? (this.words = [
            xt & 67108863
          ], this.length = 1) : xt < 4503599627370496 ? (this.words = [
            xt & 67108863,
            xt / 67108864 & 67108863
          ], this.length = 2) : (j(xt < 9007199254740992), this.words = [
            xt & 67108863,
            xt / 67108864 & 67108863,
            1
          ], this.length = 3), nt === "le" && this._initArray(this.toArray(), tt, nt);
        }, et.prototype._initArray = function(xt, tt, nt) {
          if (j(typeof xt.length == "number"), xt.length <= 0) return this.words = [
            0
          ], this.length = 1, this;
          this.length = Math.ceil(xt.length / 3), this.words = new Array(this.length);
          for (var it = 0; it < this.length; it++) this.words[it] = 0;
          var at, ct, Mt = 0;
          if (nt === "be") for (it = xt.length - 1, at = 0; it >= 0; it -= 3) ct = xt[it] | xt[it - 1] << 8 | xt[it - 2] << 16, this.words[at] |= ct << Mt & 67108863, this.words[at + 1] = ct >>> 26 - Mt & 67108863, Mt += 24, Mt >= 26 && (Mt -= 26, at++);
          else if (nt === "le") for (it = 0, at = 0; it < xt.length; it += 3) ct = xt[it] | xt[it + 1] << 8 | xt[it + 2] << 16, this.words[at] |= ct << Mt & 67108863, this.words[at + 1] = ct >>> 26 - Mt & 67108863, Mt += 24, Mt >= 26 && (Mt -= 26, at++);
          return this.strip();
        };
        function pt(Ut, xt, tt) {
          for (var nt = 0, it = Math.min(Ut.length, tt), at = xt; at < it; at++) {
            var ct = Ut.charCodeAt(at) - 48;
            nt <<= 4, ct >= 49 && ct <= 54 ? nt |= ct - 49 + 10 : ct >= 17 && ct <= 22 ? nt |= ct - 17 + 10 : nt |= ct & 15;
          }
          return nt;
        }
        et.prototype._parseHex = function(xt, tt) {
          this.length = Math.ceil((xt.length - tt) / 6), this.words = new Array(this.length);
          for (var nt = 0; nt < this.length; nt++) this.words[nt] = 0;
          var it, at, ct = 0;
          for (nt = xt.length - 6, it = 0; nt >= tt; nt -= 6) at = pt(xt, nt, nt + 6), this.words[it] |= at << ct & 67108863, this.words[it + 1] |= at >>> 26 - ct & 4194303, ct += 24, ct >= 26 && (ct -= 26, it++);
          nt + 6 !== tt && (at = pt(xt, tt, nt + 6), this.words[it] |= at << ct & 67108863, this.words[it + 1] |= at >>> 26 - ct & 4194303), this.strip();
        };
        function Et(Ut, xt, tt, nt) {
          for (var it = 0, at = Math.min(Ut.length, tt), ct = xt; ct < at; ct++) {
            var Mt = Ut.charCodeAt(ct) - 48;
            it *= nt, Mt >= 49 ? it += Mt - 49 + 10 : Mt >= 17 ? it += Mt - 17 + 10 : it += Mt;
          }
          return it;
        }
        et.prototype._parseBase = function(xt, tt, nt) {
          this.words = [
            0
          ], this.length = 1;
          for (var it = 0, at = 1; at <= 67108863; at *= tt) it++;
          it--, at = at / tt | 0;
          for (var ct = xt.length - nt, Mt = ct % it, At = Math.min(ct, ct - Mt) + nt, ut = 0, ot = nt; ot < At; ot += it) ut = Et(xt, ot, ot + it, tt), this.imuln(at), this.words[0] + ut < 67108864 ? this.words[0] += ut : this._iaddn(ut);
          if (Mt !== 0) {
            var Ct = 1;
            for (ut = Et(xt, ot, xt.length, tt), ot = 0; ot < Mt; ot++) Ct *= tt;
            this.imuln(Ct), this.words[0] + ut < 67108864 ? this.words[0] += ut : this._iaddn(ut);
          }
        }, et.prototype.copy = function(xt) {
          xt.words = new Array(this.length);
          for (var tt = 0; tt < this.length; tt++) xt.words[tt] = this.words[tt];
          xt.length = this.length, xt.negative = this.negative, xt.red = this.red;
        }, et.prototype.clone = function() {
          var xt = new et(null);
          return this.copy(xt), xt;
        }, et.prototype._expand = function(xt) {
          for (; this.length < xt; ) this.words[this.length++] = 0;
          return this;
        }, et.prototype.strip = function() {
          for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
          return this._normSign();
        }, et.prototype._normSign = function() {
          return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
        }, et.prototype.inspect = function() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var Bt = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ], St = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ], $t = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        et.prototype.toString = function(xt, tt) {
          xt = xt || 10, tt = tt | 0 || 1;
          var nt;
          if (xt === 16 || xt === "hex") {
            nt = "";
            for (var it = 0, at = 0, ct = 0; ct < this.length; ct++) {
              var Mt = this.words[ct], At = ((Mt << it | at) & 16777215).toString(16);
              at = Mt >>> 24 - it & 16777215, at !== 0 || ct !== this.length - 1 ? nt = Bt[6 - At.length] + At + nt : nt = At + nt, it += 2, it >= 26 && (it -= 26, ct--);
            }
            for (at !== 0 && (nt = at.toString(16) + nt); nt.length % tt !== 0; ) nt = "0" + nt;
            return this.negative !== 0 && (nt = "-" + nt), nt;
          }
          if (xt === (xt | 0) && xt >= 2 && xt <= 36) {
            var ut = St[xt], ot = $t[xt];
            nt = "";
            var Ct = this.clone();
            for (Ct.negative = 0; !Ct.isZero(); ) {
              var Rt = Ct.modn(ot).toString(xt);
              Ct = Ct.idivn(ot), Ct.isZero() ? nt = Rt + nt : nt = Bt[ut - Rt.length] + Rt + nt;
            }
            for (this.isZero() && (nt = "0" + nt); nt.length % tt !== 0; ) nt = "0" + nt;
            return this.negative !== 0 && (nt = "-" + nt), nt;
          }
          j(false, "Base should be between 2 and 36");
        }, et.prototype.toNumber = function() {
          var xt = this.words[0];
          return this.length === 2 ? xt += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? xt += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && j(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -xt : xt;
        }, et.prototype.toJSON = function() {
          return this.toString(16);
        }, et.prototype.toBuffer = function(xt, tt) {
          return j(typeof st < "u"), this.toArrayLike(st, xt, tt);
        }, et.prototype.toArray = function(xt, tt) {
          return this.toArrayLike(Array, xt, tt);
        }, et.prototype.toArrayLike = function(xt, tt, nt) {
          var it = this.byteLength(), at = nt || Math.max(1, it);
          j(it <= at, "byte array longer than desired length"), j(at > 0, "Requested array length <= 0"), this.strip();
          var ct = tt === "le", Mt = new xt(at), At, ut, ot = this.clone();
          if (ct) {
            for (ut = 0; !ot.isZero(); ut++) At = ot.andln(255), ot.iushrn(8), Mt[ut] = At;
            for (; ut < at; ut++) Mt[ut] = 0;
          } else {
            for (ut = 0; ut < at - it; ut++) Mt[ut] = 0;
            for (ut = 0; !ot.isZero(); ut++) At = ot.andln(255), ot.iushrn(8), Mt[at - ut - 1] = At;
          }
          return Mt;
        }, Math.clz32 ? et.prototype._countBits = function(xt) {
          return 32 - Math.clz32(xt);
        } : et.prototype._countBits = function(xt) {
          var tt = xt, nt = 0;
          return tt >= 4096 && (nt += 13, tt >>>= 13), tt >= 64 && (nt += 7, tt >>>= 7), tt >= 8 && (nt += 4, tt >>>= 4), tt >= 2 && (nt += 2, tt >>>= 2), nt + tt;
        }, et.prototype._zeroBits = function(xt) {
          if (xt === 0) return 26;
          var tt = xt, nt = 0;
          return tt & 8191 || (nt += 13, tt >>>= 13), tt & 127 || (nt += 7, tt >>>= 7), tt & 15 || (nt += 4, tt >>>= 4), tt & 3 || (nt += 2, tt >>>= 2), tt & 1 || nt++, nt;
        }, et.prototype.bitLength = function() {
          var xt = this.words[this.length - 1], tt = this._countBits(xt);
          return (this.length - 1) * 26 + tt;
        };
        function kt(Ut) {
          for (var xt = new Array(Ut.bitLength()), tt = 0; tt < xt.length; tt++) {
            var nt = tt / 26 | 0, it = tt % 26;
            xt[tt] = (Ut.words[nt] & 1 << it) >>> it;
          }
          return xt;
        }
        et.prototype.zeroBits = function() {
          if (this.isZero()) return 0;
          for (var xt = 0, tt = 0; tt < this.length; tt++) {
            var nt = this._zeroBits(this.words[tt]);
            if (xt += nt, nt !== 26) break;
          }
          return xt;
        }, et.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, et.prototype.toTwos = function(xt) {
          return this.negative !== 0 ? this.abs().inotn(xt).iaddn(1) : this.clone();
        }, et.prototype.fromTwos = function(xt) {
          return this.testn(xt - 1) ? this.notn(xt).iaddn(1).ineg() : this.clone();
        }, et.prototype.isNeg = function() {
          return this.negative !== 0;
        }, et.prototype.neg = function() {
          return this.clone().ineg();
        }, et.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, et.prototype.iuor = function(xt) {
          for (; this.length < xt.length; ) this.words[this.length++] = 0;
          for (var tt = 0; tt < xt.length; tt++) this.words[tt] = this.words[tt] | xt.words[tt];
          return this.strip();
        }, et.prototype.ior = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuor(xt);
        }, et.prototype.or = function(xt) {
          return this.length > xt.length ? this.clone().ior(xt) : xt.clone().ior(this);
        }, et.prototype.uor = function(xt) {
          return this.length > xt.length ? this.clone().iuor(xt) : xt.clone().iuor(this);
        }, et.prototype.iuand = function(xt) {
          var tt;
          this.length > xt.length ? tt = xt : tt = this;
          for (var nt = 0; nt < tt.length; nt++) this.words[nt] = this.words[nt] & xt.words[nt];
          return this.length = tt.length, this.strip();
        }, et.prototype.iand = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuand(xt);
        }, et.prototype.and = function(xt) {
          return this.length > xt.length ? this.clone().iand(xt) : xt.clone().iand(this);
        }, et.prototype.uand = function(xt) {
          return this.length > xt.length ? this.clone().iuand(xt) : xt.clone().iuand(this);
        }, et.prototype.iuxor = function(xt) {
          var tt, nt;
          this.length > xt.length ? (tt = this, nt = xt) : (tt = xt, nt = this);
          for (var it = 0; it < nt.length; it++) this.words[it] = tt.words[it] ^ nt.words[it];
          if (this !== tt) for (; it < tt.length; it++) this.words[it] = tt.words[it];
          return this.length = tt.length, this.strip();
        }, et.prototype.ixor = function(xt) {
          return j((this.negative | xt.negative) === 0), this.iuxor(xt);
        }, et.prototype.xor = function(xt) {
          return this.length > xt.length ? this.clone().ixor(xt) : xt.clone().ixor(this);
        }, et.prototype.uxor = function(xt) {
          return this.length > xt.length ? this.clone().iuxor(xt) : xt.clone().iuxor(this);
        }, et.prototype.inotn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = Math.ceil(xt / 26) | 0, nt = xt % 26;
          this._expand(tt), nt > 0 && tt--;
          for (var it = 0; it < tt; it++) this.words[it] = ~this.words[it] & 67108863;
          return nt > 0 && (this.words[it] = ~this.words[it] & 67108863 >> 26 - nt), this.strip();
        }, et.prototype.notn = function(xt) {
          return this.clone().inotn(xt);
        }, et.prototype.setn = function(xt, tt) {
          j(typeof xt == "number" && xt >= 0);
          var nt = xt / 26 | 0, it = xt % 26;
          return this._expand(nt + 1), tt ? this.words[nt] = this.words[nt] | 1 << it : this.words[nt] = this.words[nt] & ~(1 << it), this.strip();
        }, et.prototype.iadd = function(xt) {
          var tt;
          if (this.negative !== 0 && xt.negative === 0) return this.negative = 0, tt = this.isub(xt), this.negative ^= 1, this._normSign();
          if (this.negative === 0 && xt.negative !== 0) return xt.negative = 0, tt = this.isub(xt), xt.negative = 1, tt._normSign();
          var nt, it;
          this.length > xt.length ? (nt = this, it = xt) : (nt = xt, it = this);
          for (var at = 0, ct = 0; ct < it.length; ct++) tt = (nt.words[ct] | 0) + (it.words[ct] | 0) + at, this.words[ct] = tt & 67108863, at = tt >>> 26;
          for (; at !== 0 && ct < nt.length; ct++) tt = (nt.words[ct] | 0) + at, this.words[ct] = tt & 67108863, at = tt >>> 26;
          if (this.length = nt.length, at !== 0) this.words[this.length] = at, this.length++;
          else if (nt !== this) for (; ct < nt.length; ct++) this.words[ct] = nt.words[ct];
          return this;
        }, et.prototype.add = function(xt) {
          var tt;
          return xt.negative !== 0 && this.negative === 0 ? (xt.negative = 0, tt = this.sub(xt), xt.negative ^= 1, tt) : xt.negative === 0 && this.negative !== 0 ? (this.negative = 0, tt = xt.sub(this), this.negative = 1, tt) : this.length > xt.length ? this.clone().iadd(xt) : xt.clone().iadd(this);
        }, et.prototype.isub = function(xt) {
          if (xt.negative !== 0) {
            xt.negative = 0;
            var tt = this.iadd(xt);
            return xt.negative = 1, tt._normSign();
          } else if (this.negative !== 0) return this.negative = 0, this.iadd(xt), this.negative = 1, this._normSign();
          var nt = this.cmp(xt);
          if (nt === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          var it, at;
          nt > 0 ? (it = this, at = xt) : (it = xt, at = this);
          for (var ct = 0, Mt = 0; Mt < at.length; Mt++) tt = (it.words[Mt] | 0) - (at.words[Mt] | 0) + ct, ct = tt >> 26, this.words[Mt] = tt & 67108863;
          for (; ct !== 0 && Mt < it.length; Mt++) tt = (it.words[Mt] | 0) + ct, ct = tt >> 26, this.words[Mt] = tt & 67108863;
          if (ct === 0 && Mt < it.length && it !== this) for (; Mt < it.length; Mt++) this.words[Mt] = it.words[Mt];
          return this.length = Math.max(this.length, Mt), it !== this && (this.negative = 1), this.strip();
        }, et.prototype.sub = function(xt) {
          return this.clone().isub(xt);
        };
        function Tt(Ut, xt, tt) {
          tt.negative = xt.negative ^ Ut.negative;
          var nt = Ut.length + xt.length | 0;
          tt.length = nt, nt = nt - 1 | 0;
          var it = Ut.words[0] | 0, at = xt.words[0] | 0, ct = it * at, Mt = ct & 67108863, At = ct / 67108864 | 0;
          tt.words[0] = Mt;
          for (var ut = 1; ut < nt; ut++) {
            for (var ot = At >>> 26, Ct = At & 67108863, Rt = Math.min(ut, xt.length - 1), Nt = Math.max(0, ut - Ut.length + 1); Nt <= Rt; Nt++) {
              var Wt = ut - Nt | 0;
              it = Ut.words[Wt] | 0, at = xt.words[Nt] | 0, ct = it * at + Ct, ot += ct / 67108864 | 0, Ct = ct & 67108863;
            }
            tt.words[ut] = Ct | 0, At = ot | 0;
          }
          return At !== 0 ? tt.words[ut] = At | 0 : tt.length--, tt.strip();
        }
        var Pt = function(xt, tt, nt) {
          var it = xt.words, at = tt.words, ct = nt.words, Mt = 0, At, ut, ot, Ct = it[0] | 0, Rt = Ct & 8191, Nt = Ct >>> 13, Wt = it[1] | 0, Xt = Wt & 8191, rr = Wt >>> 13, Gt = it[2] | 0, Yt = Gt & 8191, tr = Gt >>> 13, cr = it[3] | 0, ir = cr & 8191, Jt = cr >>> 13, vr = it[4] | 0, Br = vr & 8191, _r = vr >>> 13, $r = it[5] | 0, Ur = $r & 8191, Sr = $r >>> 13, Mr = it[6] | 0, Kr = Mr & 8191, kr = Mr >>> 13, Lr = it[7] | 0, Gr = Lr & 8191, Tr = Lr >>> 13, yr = it[8] | 0, fr = yr & 8191, dr = yr >>> 13, gr = it[9] | 0, Er = gr & 8191, zt = gr >>> 13, qt = at[0] | 0, Vt = qt & 8191, Qt = qt >>> 13, hr = at[1] | 0, br = hr & 8191, pr = hr >>> 13, Rr = at[2] | 0, qr = Rr & 8191, xr = Rr >>> 13, Fr = at[3] | 0, zr = Fr & 8191, Pr = Fr >>> 13, Wr = at[4] | 0, tn = Wr & 8191, Nr = Wr >>> 13, Hr = at[5] | 0, rn = Hr & 8191, jr = Hr >>> 13, Yr = at[6] | 0, nn = Yr & 8191, Or = Yr >>> 13, Xr = at[7] | 0, nr = Xr & 8191, or = Xr >>> 13, ur = at[8] | 0, Ht = ur & 8191, lr = ur >>> 13, wr = at[9] | 0, Ar = wr & 8191, Cr = wr >>> 13;
          nt.negative = xt.negative ^ tt.negative, nt.length = 19, At = Math.imul(Rt, Vt), ut = Math.imul(Rt, Qt), ut = ut + Math.imul(Nt, Vt) | 0, ot = Math.imul(Nt, Qt);
          var Ir = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Ir >>> 26) | 0, Ir &= 67108863, At = Math.imul(Xt, Vt), ut = Math.imul(Xt, Qt), ut = ut + Math.imul(rr, Vt) | 0, ot = Math.imul(rr, Qt), At = At + Math.imul(Rt, br) | 0, ut = ut + Math.imul(Rt, pr) | 0, ut = ut + Math.imul(Nt, br) | 0, ot = ot + Math.imul(Nt, pr) | 0;
          var Jr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Jr >>> 26) | 0, Jr &= 67108863, At = Math.imul(Yt, Vt), ut = Math.imul(Yt, Qt), ut = ut + Math.imul(tr, Vt) | 0, ot = Math.imul(tr, Qt), At = At + Math.imul(Xt, br) | 0, ut = ut + Math.imul(Xt, pr) | 0, ut = ut + Math.imul(rr, br) | 0, ot = ot + Math.imul(rr, pr) | 0, At = At + Math.imul(Rt, qr) | 0, ut = ut + Math.imul(Rt, xr) | 0, ut = ut + Math.imul(Nt, qr) | 0, ot = ot + Math.imul(Nt, xr) | 0;
          var Qr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Qr >>> 26) | 0, Qr &= 67108863, At = Math.imul(ir, Vt), ut = Math.imul(ir, Qt), ut = ut + Math.imul(Jt, Vt) | 0, ot = Math.imul(Jt, Qt), At = At + Math.imul(Yt, br) | 0, ut = ut + Math.imul(Yt, pr) | 0, ut = ut + Math.imul(tr, br) | 0, ot = ot + Math.imul(tr, pr) | 0, At = At + Math.imul(Xt, qr) | 0, ut = ut + Math.imul(Xt, xr) | 0, ut = ut + Math.imul(rr, qr) | 0, ot = ot + Math.imul(rr, xr) | 0, At = At + Math.imul(Rt, zr) | 0, ut = ut + Math.imul(Rt, Pr) | 0, ut = ut + Math.imul(Nt, zr) | 0, ot = ot + Math.imul(Nt, Pr) | 0;
          var Sn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Sn >>> 26) | 0, Sn &= 67108863, At = Math.imul(Br, Vt), ut = Math.imul(Br, Qt), ut = ut + Math.imul(_r, Vt) | 0, ot = Math.imul(_r, Qt), At = At + Math.imul(ir, br) | 0, ut = ut + Math.imul(ir, pr) | 0, ut = ut + Math.imul(Jt, br) | 0, ot = ot + Math.imul(Jt, pr) | 0, At = At + Math.imul(Yt, qr) | 0, ut = ut + Math.imul(Yt, xr) | 0, ut = ut + Math.imul(tr, qr) | 0, ot = ot + Math.imul(tr, xr) | 0, At = At + Math.imul(Xt, zr) | 0, ut = ut + Math.imul(Xt, Pr) | 0, ut = ut + Math.imul(rr, zr) | 0, ot = ot + Math.imul(rr, Pr) | 0, At = At + Math.imul(Rt, tn) | 0, ut = ut + Math.imul(Rt, Nr) | 0, ut = ut + Math.imul(Nt, tn) | 0, ot = ot + Math.imul(Nt, Nr) | 0;
          var dn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (dn >>> 26) | 0, dn &= 67108863, At = Math.imul(Ur, Vt), ut = Math.imul(Ur, Qt), ut = ut + Math.imul(Sr, Vt) | 0, ot = Math.imul(Sr, Qt), At = At + Math.imul(Br, br) | 0, ut = ut + Math.imul(Br, pr) | 0, ut = ut + Math.imul(_r, br) | 0, ot = ot + Math.imul(_r, pr) | 0, At = At + Math.imul(ir, qr) | 0, ut = ut + Math.imul(ir, xr) | 0, ut = ut + Math.imul(Jt, qr) | 0, ot = ot + Math.imul(Jt, xr) | 0, At = At + Math.imul(Yt, zr) | 0, ut = ut + Math.imul(Yt, Pr) | 0, ut = ut + Math.imul(tr, zr) | 0, ot = ot + Math.imul(tr, Pr) | 0, At = At + Math.imul(Xt, tn) | 0, ut = ut + Math.imul(Xt, Nr) | 0, ut = ut + Math.imul(rr, tn) | 0, ot = ot + Math.imul(rr, Nr) | 0, At = At + Math.imul(Rt, rn) | 0, ut = ut + Math.imul(Rt, jr) | 0, ut = ut + Math.imul(Nt, rn) | 0, ot = ot + Math.imul(Nt, jr) | 0;
          var yn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (yn >>> 26) | 0, yn &= 67108863, At = Math.imul(Kr, Vt), ut = Math.imul(Kr, Qt), ut = ut + Math.imul(kr, Vt) | 0, ot = Math.imul(kr, Qt), At = At + Math.imul(Ur, br) | 0, ut = ut + Math.imul(Ur, pr) | 0, ut = ut + Math.imul(Sr, br) | 0, ot = ot + Math.imul(Sr, pr) | 0, At = At + Math.imul(Br, qr) | 0, ut = ut + Math.imul(Br, xr) | 0, ut = ut + Math.imul(_r, qr) | 0, ot = ot + Math.imul(_r, xr) | 0, At = At + Math.imul(ir, zr) | 0, ut = ut + Math.imul(ir, Pr) | 0, ut = ut + Math.imul(Jt, zr) | 0, ot = ot + Math.imul(Jt, Pr) | 0, At = At + Math.imul(Yt, tn) | 0, ut = ut + Math.imul(Yt, Nr) | 0, ut = ut + Math.imul(tr, tn) | 0, ot = ot + Math.imul(tr, Nr) | 0, At = At + Math.imul(Xt, rn) | 0, ut = ut + Math.imul(Xt, jr) | 0, ut = ut + Math.imul(rr, rn) | 0, ot = ot + Math.imul(rr, jr) | 0, At = At + Math.imul(Rt, nn) | 0, ut = ut + Math.imul(Rt, Or) | 0, ut = ut + Math.imul(Nt, nn) | 0, ot = ot + Math.imul(Nt, Or) | 0;
          var wn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (wn >>> 26) | 0, wn &= 67108863, At = Math.imul(Gr, Vt), ut = Math.imul(Gr, Qt), ut = ut + Math.imul(Tr, Vt) | 0, ot = Math.imul(Tr, Qt), At = At + Math.imul(Kr, br) | 0, ut = ut + Math.imul(Kr, pr) | 0, ut = ut + Math.imul(kr, br) | 0, ot = ot + Math.imul(kr, pr) | 0, At = At + Math.imul(Ur, qr) | 0, ut = ut + Math.imul(Ur, xr) | 0, ut = ut + Math.imul(Sr, qr) | 0, ot = ot + Math.imul(Sr, xr) | 0, At = At + Math.imul(Br, zr) | 0, ut = ut + Math.imul(Br, Pr) | 0, ut = ut + Math.imul(_r, zr) | 0, ot = ot + Math.imul(_r, Pr) | 0, At = At + Math.imul(ir, tn) | 0, ut = ut + Math.imul(ir, Nr) | 0, ut = ut + Math.imul(Jt, tn) | 0, ot = ot + Math.imul(Jt, Nr) | 0, At = At + Math.imul(Yt, rn) | 0, ut = ut + Math.imul(Yt, jr) | 0, ut = ut + Math.imul(tr, rn) | 0, ot = ot + Math.imul(tr, jr) | 0, At = At + Math.imul(Xt, nn) | 0, ut = ut + Math.imul(Xt, Or) | 0, ut = ut + Math.imul(rr, nn) | 0, ot = ot + Math.imul(rr, Or) | 0, At = At + Math.imul(Rt, nr) | 0, ut = ut + Math.imul(Rt, or) | 0, ut = ut + Math.imul(Nt, nr) | 0, ot = ot + Math.imul(Nt, or) | 0;
          var Mn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Mn >>> 26) | 0, Mn &= 67108863, At = Math.imul(fr, Vt), ut = Math.imul(fr, Qt), ut = ut + Math.imul(dr, Vt) | 0, ot = Math.imul(dr, Qt), At = At + Math.imul(Gr, br) | 0, ut = ut + Math.imul(Gr, pr) | 0, ut = ut + Math.imul(Tr, br) | 0, ot = ot + Math.imul(Tr, pr) | 0, At = At + Math.imul(Kr, qr) | 0, ut = ut + Math.imul(Kr, xr) | 0, ut = ut + Math.imul(kr, qr) | 0, ot = ot + Math.imul(kr, xr) | 0, At = At + Math.imul(Ur, zr) | 0, ut = ut + Math.imul(Ur, Pr) | 0, ut = ut + Math.imul(Sr, zr) | 0, ot = ot + Math.imul(Sr, Pr) | 0, At = At + Math.imul(Br, tn) | 0, ut = ut + Math.imul(Br, Nr) | 0, ut = ut + Math.imul(_r, tn) | 0, ot = ot + Math.imul(_r, Nr) | 0, At = At + Math.imul(ir, rn) | 0, ut = ut + Math.imul(ir, jr) | 0, ut = ut + Math.imul(Jt, rn) | 0, ot = ot + Math.imul(Jt, jr) | 0, At = At + Math.imul(Yt, nn) | 0, ut = ut + Math.imul(Yt, Or) | 0, ut = ut + Math.imul(tr, nn) | 0, ot = ot + Math.imul(tr, Or) | 0, At = At + Math.imul(Xt, nr) | 0, ut = ut + Math.imul(Xt, or) | 0, ut = ut + Math.imul(rr, nr) | 0, ot = ot + Math.imul(rr, or) | 0, At = At + Math.imul(Rt, Ht) | 0, ut = ut + Math.imul(Rt, lr) | 0, ut = ut + Math.imul(Nt, Ht) | 0, ot = ot + Math.imul(Nt, lr) | 0;
          var En = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (En >>> 26) | 0, En &= 67108863, At = Math.imul(Er, Vt), ut = Math.imul(Er, Qt), ut = ut + Math.imul(zt, Vt) | 0, ot = Math.imul(zt, Qt), At = At + Math.imul(fr, br) | 0, ut = ut + Math.imul(fr, pr) | 0, ut = ut + Math.imul(dr, br) | 0, ot = ot + Math.imul(dr, pr) | 0, At = At + Math.imul(Gr, qr) | 0, ut = ut + Math.imul(Gr, xr) | 0, ut = ut + Math.imul(Tr, qr) | 0, ot = ot + Math.imul(Tr, xr) | 0, At = At + Math.imul(Kr, zr) | 0, ut = ut + Math.imul(Kr, Pr) | 0, ut = ut + Math.imul(kr, zr) | 0, ot = ot + Math.imul(kr, Pr) | 0, At = At + Math.imul(Ur, tn) | 0, ut = ut + Math.imul(Ur, Nr) | 0, ut = ut + Math.imul(Sr, tn) | 0, ot = ot + Math.imul(Sr, Nr) | 0, At = At + Math.imul(Br, rn) | 0, ut = ut + Math.imul(Br, jr) | 0, ut = ut + Math.imul(_r, rn) | 0, ot = ot + Math.imul(_r, jr) | 0, At = At + Math.imul(ir, nn) | 0, ut = ut + Math.imul(ir, Or) | 0, ut = ut + Math.imul(Jt, nn) | 0, ot = ot + Math.imul(Jt, Or) | 0, At = At + Math.imul(Yt, nr) | 0, ut = ut + Math.imul(Yt, or) | 0, ut = ut + Math.imul(tr, nr) | 0, ot = ot + Math.imul(tr, or) | 0, At = At + Math.imul(Xt, Ht) | 0, ut = ut + Math.imul(Xt, lr) | 0, ut = ut + Math.imul(rr, Ht) | 0, ot = ot + Math.imul(rr, lr) | 0, At = At + Math.imul(Rt, Ar) | 0, ut = ut + Math.imul(Rt, Cr) | 0, ut = ut + Math.imul(Nt, Ar) | 0, ot = ot + Math.imul(Nt, Cr) | 0;
          var xn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (xn >>> 26) | 0, xn &= 67108863, At = Math.imul(Er, br), ut = Math.imul(Er, pr), ut = ut + Math.imul(zt, br) | 0, ot = Math.imul(zt, pr), At = At + Math.imul(fr, qr) | 0, ut = ut + Math.imul(fr, xr) | 0, ut = ut + Math.imul(dr, qr) | 0, ot = ot + Math.imul(dr, xr) | 0, At = At + Math.imul(Gr, zr) | 0, ut = ut + Math.imul(Gr, Pr) | 0, ut = ut + Math.imul(Tr, zr) | 0, ot = ot + Math.imul(Tr, Pr) | 0, At = At + Math.imul(Kr, tn) | 0, ut = ut + Math.imul(Kr, Nr) | 0, ut = ut + Math.imul(kr, tn) | 0, ot = ot + Math.imul(kr, Nr) | 0, At = At + Math.imul(Ur, rn) | 0, ut = ut + Math.imul(Ur, jr) | 0, ut = ut + Math.imul(Sr, rn) | 0, ot = ot + Math.imul(Sr, jr) | 0, At = At + Math.imul(Br, nn) | 0, ut = ut + Math.imul(Br, Or) | 0, ut = ut + Math.imul(_r, nn) | 0, ot = ot + Math.imul(_r, Or) | 0, At = At + Math.imul(ir, nr) | 0, ut = ut + Math.imul(ir, or) | 0, ut = ut + Math.imul(Jt, nr) | 0, ot = ot + Math.imul(Jt, or) | 0, At = At + Math.imul(Yt, Ht) | 0, ut = ut + Math.imul(Yt, lr) | 0, ut = ut + Math.imul(tr, Ht) | 0, ot = ot + Math.imul(tr, lr) | 0, At = At + Math.imul(Xt, Ar) | 0, ut = ut + Math.imul(Xt, Cr) | 0, ut = ut + Math.imul(rr, Ar) | 0, ot = ot + Math.imul(rr, Cr) | 0;
          var Cn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (Cn >>> 26) | 0, Cn &= 67108863, At = Math.imul(Er, qr), ut = Math.imul(Er, xr), ut = ut + Math.imul(zt, qr) | 0, ot = Math.imul(zt, xr), At = At + Math.imul(fr, zr) | 0, ut = ut + Math.imul(fr, Pr) | 0, ut = ut + Math.imul(dr, zr) | 0, ot = ot + Math.imul(dr, Pr) | 0, At = At + Math.imul(Gr, tn) | 0, ut = ut + Math.imul(Gr, Nr) | 0, ut = ut + Math.imul(Tr, tn) | 0, ot = ot + Math.imul(Tr, Nr) | 0, At = At + Math.imul(Kr, rn) | 0, ut = ut + Math.imul(Kr, jr) | 0, ut = ut + Math.imul(kr, rn) | 0, ot = ot + Math.imul(kr, jr) | 0, At = At + Math.imul(Ur, nn) | 0, ut = ut + Math.imul(Ur, Or) | 0, ut = ut + Math.imul(Sr, nn) | 0, ot = ot + Math.imul(Sr, Or) | 0, At = At + Math.imul(Br, nr) | 0, ut = ut + Math.imul(Br, or) | 0, ut = ut + Math.imul(_r, nr) | 0, ot = ot + Math.imul(_r, or) | 0, At = At + Math.imul(ir, Ht) | 0, ut = ut + Math.imul(ir, lr) | 0, ut = ut + Math.imul(Jt, Ht) | 0, ot = ot + Math.imul(Jt, lr) | 0, At = At + Math.imul(Yt, Ar) | 0, ut = ut + Math.imul(Yt, Cr) | 0, ut = ut + Math.imul(tr, Ar) | 0, ot = ot + Math.imul(tr, Cr) | 0;
          var _n = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (_n >>> 26) | 0, _n &= 67108863, At = Math.imul(Er, zr), ut = Math.imul(Er, Pr), ut = ut + Math.imul(zt, zr) | 0, ot = Math.imul(zt, Pr), At = At + Math.imul(fr, tn) | 0, ut = ut + Math.imul(fr, Nr) | 0, ut = ut + Math.imul(dr, tn) | 0, ot = ot + Math.imul(dr, Nr) | 0, At = At + Math.imul(Gr, rn) | 0, ut = ut + Math.imul(Gr, jr) | 0, ut = ut + Math.imul(Tr, rn) | 0, ot = ot + Math.imul(Tr, jr) | 0, At = At + Math.imul(Kr, nn) | 0, ut = ut + Math.imul(Kr, Or) | 0, ut = ut + Math.imul(kr, nn) | 0, ot = ot + Math.imul(kr, Or) | 0, At = At + Math.imul(Ur, nr) | 0, ut = ut + Math.imul(Ur, or) | 0, ut = ut + Math.imul(Sr, nr) | 0, ot = ot + Math.imul(Sr, or) | 0, At = At + Math.imul(Br, Ht) | 0, ut = ut + Math.imul(Br, lr) | 0, ut = ut + Math.imul(_r, Ht) | 0, ot = ot + Math.imul(_r, lr) | 0, At = At + Math.imul(ir, Ar) | 0, ut = ut + Math.imul(ir, Cr) | 0, ut = ut + Math.imul(Jt, Ar) | 0, ot = ot + Math.imul(Jt, Cr) | 0;
          var hn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (hn >>> 26) | 0, hn &= 67108863, At = Math.imul(Er, tn), ut = Math.imul(Er, Nr), ut = ut + Math.imul(zt, tn) | 0, ot = Math.imul(zt, Nr), At = At + Math.imul(fr, rn) | 0, ut = ut + Math.imul(fr, jr) | 0, ut = ut + Math.imul(dr, rn) | 0, ot = ot + Math.imul(dr, jr) | 0, At = At + Math.imul(Gr, nn) | 0, ut = ut + Math.imul(Gr, Or) | 0, ut = ut + Math.imul(Tr, nn) | 0, ot = ot + Math.imul(Tr, Or) | 0, At = At + Math.imul(Kr, nr) | 0, ut = ut + Math.imul(Kr, or) | 0, ut = ut + Math.imul(kr, nr) | 0, ot = ot + Math.imul(kr, or) | 0, At = At + Math.imul(Ur, Ht) | 0, ut = ut + Math.imul(Ur, lr) | 0, ut = ut + Math.imul(Sr, Ht) | 0, ot = ot + Math.imul(Sr, lr) | 0, At = At + Math.imul(Br, Ar) | 0, ut = ut + Math.imul(Br, Cr) | 0, ut = ut + Math.imul(_r, Ar) | 0, ot = ot + Math.imul(_r, Cr) | 0;
          var gn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (gn >>> 26) | 0, gn &= 67108863, At = Math.imul(Er, rn), ut = Math.imul(Er, jr), ut = ut + Math.imul(zt, rn) | 0, ot = Math.imul(zt, jr), At = At + Math.imul(fr, nn) | 0, ut = ut + Math.imul(fr, Or) | 0, ut = ut + Math.imul(dr, nn) | 0, ot = ot + Math.imul(dr, Or) | 0, At = At + Math.imul(Gr, nr) | 0, ut = ut + Math.imul(Gr, or) | 0, ut = ut + Math.imul(Tr, nr) | 0, ot = ot + Math.imul(Tr, or) | 0, At = At + Math.imul(Kr, Ht) | 0, ut = ut + Math.imul(Kr, lr) | 0, ut = ut + Math.imul(kr, Ht) | 0, ot = ot + Math.imul(kr, lr) | 0, At = At + Math.imul(Ur, Ar) | 0, ut = ut + Math.imul(Ur, Cr) | 0, ut = ut + Math.imul(Sr, Ar) | 0, ot = ot + Math.imul(Sr, Cr) | 0;
          var ln = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, At = Math.imul(Er, nn), ut = Math.imul(Er, Or), ut = ut + Math.imul(zt, nn) | 0, ot = Math.imul(zt, Or), At = At + Math.imul(fr, nr) | 0, ut = ut + Math.imul(fr, or) | 0, ut = ut + Math.imul(dr, nr) | 0, ot = ot + Math.imul(dr, or) | 0, At = At + Math.imul(Gr, Ht) | 0, ut = ut + Math.imul(Gr, lr) | 0, ut = ut + Math.imul(Tr, Ht) | 0, ot = ot + Math.imul(Tr, lr) | 0, At = At + Math.imul(Kr, Ar) | 0, ut = ut + Math.imul(Kr, Cr) | 0, ut = ut + Math.imul(kr, Ar) | 0, ot = ot + Math.imul(kr, Cr) | 0;
          var pn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (pn >>> 26) | 0, pn &= 67108863, At = Math.imul(Er, nr), ut = Math.imul(Er, or), ut = ut + Math.imul(zt, nr) | 0, ot = Math.imul(zt, or), At = At + Math.imul(fr, Ht) | 0, ut = ut + Math.imul(fr, lr) | 0, ut = ut + Math.imul(dr, Ht) | 0, ot = ot + Math.imul(dr, lr) | 0, At = At + Math.imul(Gr, Ar) | 0, ut = ut + Math.imul(Gr, Cr) | 0, ut = ut + Math.imul(Tr, Ar) | 0, ot = ot + Math.imul(Tr, Cr) | 0;
          var mn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (mn >>> 26) | 0, mn &= 67108863, At = Math.imul(Er, Ht), ut = Math.imul(Er, lr), ut = ut + Math.imul(zt, Ht) | 0, ot = Math.imul(zt, lr), At = At + Math.imul(fr, Ar) | 0, ut = ut + Math.imul(fr, Cr) | 0, ut = ut + Math.imul(dr, Ar) | 0, ot = ot + Math.imul(dr, Cr) | 0;
          var sn = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          Mt = (ot + (ut >>> 13) | 0) + (sn >>> 26) | 0, sn &= 67108863, At = Math.imul(Er, Ar), ut = Math.imul(Er, Cr), ut = ut + Math.imul(zt, Ar) | 0, ot = Math.imul(zt, Cr);
          var Vr = (Mt + At | 0) + ((ut & 8191) << 13) | 0;
          return Mt = (ot + (ut >>> 13) | 0) + (Vr >>> 26) | 0, Vr &= 67108863, ct[0] = Ir, ct[1] = Jr, ct[2] = Qr, ct[3] = Sn, ct[4] = dn, ct[5] = yn, ct[6] = wn, ct[7] = Mn, ct[8] = En, ct[9] = xn, ct[10] = Cn, ct[11] = _n, ct[12] = hn, ct[13] = gn, ct[14] = ln, ct[15] = pn, ct[16] = mn, ct[17] = sn, ct[18] = Vr, Mt !== 0 && (ct[19] = Mt, nt.length++), nt;
        };
        Math.imul || (Pt = Tt);
        function It(Ut, xt, tt) {
          tt.negative = xt.negative ^ Ut.negative, tt.length = Ut.length + xt.length;
          for (var nt = 0, it = 0, at = 0; at < tt.length - 1; at++) {
            var ct = it;
            it = 0;
            for (var Mt = nt & 67108863, At = Math.min(at, xt.length - 1), ut = Math.max(0, at - Ut.length + 1); ut <= At; ut++) {
              var ot = at - ut, Ct = Ut.words[ot] | 0, Rt = xt.words[ut] | 0, Nt = Ct * Rt, Wt = Nt & 67108863;
              ct = ct + (Nt / 67108864 | 0) | 0, Wt = Wt + Mt | 0, Mt = Wt & 67108863, ct = ct + (Wt >>> 26) | 0, it += ct >>> 26, ct &= 67108863;
            }
            tt.words[at] = Mt, nt = ct, ct = it;
          }
          return nt !== 0 ? tt.words[at] = nt : tt.length--, tt.strip();
        }
        function jt(Ut, xt, tt) {
          var nt = new Dt();
          return nt.mulp(Ut, xt, tt);
        }
        et.prototype.mulTo = function(xt, tt) {
          var nt, it = this.length + xt.length;
          return this.length === 10 && xt.length === 10 ? nt = Pt(this, xt, tt) : it < 63 ? nt = Tt(this, xt, tt) : it < 1024 ? nt = It(this, xt, tt) : nt = jt(this, xt, tt), nt;
        };
        function Dt(Ut, xt) {
          this.x = Ut, this.y = xt;
        }
        Dt.prototype.makeRBT = function(xt) {
          for (var tt = new Array(xt), nt = et.prototype._countBits(xt) - 1, it = 0; it < xt; it++) tt[it] = this.revBin(it, nt, xt);
          return tt;
        }, Dt.prototype.revBin = function(xt, tt, nt) {
          if (xt === 0 || xt === nt - 1) return xt;
          for (var it = 0, at = 0; at < tt; at++) it |= (xt & 1) << tt - at - 1, xt >>= 1;
          return it;
        }, Dt.prototype.permute = function(xt, tt, nt, it, at, ct) {
          for (var Mt = 0; Mt < ct; Mt++) it[Mt] = tt[xt[Mt]], at[Mt] = nt[xt[Mt]];
        }, Dt.prototype.transform = function(xt, tt, nt, it, at, ct) {
          this.permute(ct, xt, tt, nt, it, at);
          for (var Mt = 1; Mt < at; Mt <<= 1) for (var At = Mt << 1, ut = Math.cos(2 * Math.PI / At), ot = Math.sin(2 * Math.PI / At), Ct = 0; Ct < at; Ct += At) for (var Rt = ut, Nt = ot, Wt = 0; Wt < Mt; Wt++) {
            var Xt = nt[Ct + Wt], rr = it[Ct + Wt], Gt = nt[Ct + Wt + Mt], Yt = it[Ct + Wt + Mt], tr = Rt * Gt - Nt * Yt;
            Yt = Rt * Yt + Nt * Gt, Gt = tr, nt[Ct + Wt] = Xt + Gt, it[Ct + Wt] = rr + Yt, nt[Ct + Wt + Mt] = Xt - Gt, it[Ct + Wt + Mt] = rr - Yt, Wt !== At && (tr = ut * Rt - ot * Nt, Nt = ut * Nt + ot * Rt, Rt = tr);
          }
        }, Dt.prototype.guessLen13b = function(xt, tt) {
          var nt = Math.max(tt, xt) | 1, it = nt & 1, at = 0;
          for (nt = nt / 2 | 0; nt; nt = nt >>> 1) at++;
          return 1 << at + 1 + it;
        }, Dt.prototype.conjugate = function(xt, tt, nt) {
          if (!(nt <= 1)) for (var it = 0; it < nt / 2; it++) {
            var at = xt[it];
            xt[it] = xt[nt - it - 1], xt[nt - it - 1] = at, at = tt[it], tt[it] = -tt[nt - it - 1], tt[nt - it - 1] = -at;
          }
        }, Dt.prototype.normalize13b = function(xt, tt) {
          for (var nt = 0, it = 0; it < tt / 2; it++) {
            var at = Math.round(xt[2 * it + 1] / tt) * 8192 + Math.round(xt[2 * it] / tt) + nt;
            xt[it] = at & 67108863, at < 67108864 ? nt = 0 : nt = at / 67108864 | 0;
          }
          return xt;
        }, Dt.prototype.convert13b = function(xt, tt, nt, it) {
          for (var at = 0, ct = 0; ct < tt; ct++) at = at + (xt[ct] | 0), nt[2 * ct] = at & 8191, at = at >>> 13, nt[2 * ct + 1] = at & 8191, at = at >>> 13;
          for (ct = 2 * tt; ct < it; ++ct) nt[ct] = 0;
          j(at === 0), j((at & -8192) === 0);
        }, Dt.prototype.stub = function(xt) {
          for (var tt = new Array(xt), nt = 0; nt < xt; nt++) tt[nt] = 0;
          return tt;
        }, Dt.prototype.mulp = function(xt, tt, nt) {
          var it = 2 * this.guessLen13b(xt.length, tt.length), at = this.makeRBT(it), ct = this.stub(it), Mt = new Array(it), At = new Array(it), ut = new Array(it), ot = new Array(it), Ct = new Array(it), Rt = new Array(it), Nt = nt.words;
          Nt.length = it, this.convert13b(xt.words, xt.length, Mt, it), this.convert13b(tt.words, tt.length, ot, it), this.transform(Mt, ct, At, ut, it, at), this.transform(ot, ct, Ct, Rt, it, at);
          for (var Wt = 0; Wt < it; Wt++) {
            var Xt = At[Wt] * Ct[Wt] - ut[Wt] * Rt[Wt];
            ut[Wt] = At[Wt] * Rt[Wt] + ut[Wt] * Ct[Wt], At[Wt] = Xt;
          }
          return this.conjugate(At, ut, it), this.transform(At, ut, Nt, ct, it, at), this.conjugate(Nt, ct, it), this.normalize13b(Nt, it), nt.negative = xt.negative ^ tt.negative, nt.length = xt.length + tt.length, nt.strip();
        }, et.prototype.mul = function(xt) {
          var tt = new et(null);
          return tt.words = new Array(this.length + xt.length), this.mulTo(xt, tt);
        }, et.prototype.mulf = function(xt) {
          var tt = new et(null);
          return tt.words = new Array(this.length + xt.length), jt(this, xt, tt);
        }, et.prototype.imul = function(xt) {
          return this.clone().mulTo(xt, this);
        }, et.prototype.imuln = function(xt) {
          j(typeof xt == "number"), j(xt < 67108864);
          for (var tt = 0, nt = 0; nt < this.length; nt++) {
            var it = (this.words[nt] | 0) * xt, at = (it & 67108863) + (tt & 67108863);
            tt >>= 26, tt += it / 67108864 | 0, tt += at >>> 26, this.words[nt] = at & 67108863;
          }
          return tt !== 0 && (this.words[nt] = tt, this.length++), this;
        }, et.prototype.muln = function(xt) {
          return this.clone().imuln(xt);
        }, et.prototype.sqr = function() {
          return this.mul(this);
        }, et.prototype.isqr = function() {
          return this.imul(this.clone());
        }, et.prototype.pow = function(xt) {
          var tt = kt(xt);
          if (tt.length === 0) return new et(1);
          for (var nt = this, it = 0; it < tt.length && tt[it] === 0; it++, nt = nt.sqr()) ;
          if (++it < tt.length) for (var at = nt.sqr(); it < tt.length; it++, at = at.sqr()) tt[it] !== 0 && (nt = nt.mul(at));
          return nt;
        }, et.prototype.iushln = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26, it = 67108863 >>> 26 - tt << 26 - tt, at;
          if (tt !== 0) {
            var ct = 0;
            for (at = 0; at < this.length; at++) {
              var Mt = this.words[at] & it, At = (this.words[at] | 0) - Mt << tt;
              this.words[at] = At | ct, ct = Mt >>> 26 - tt;
            }
            ct && (this.words[at] = ct, this.length++);
          }
          if (nt !== 0) {
            for (at = this.length - 1; at >= 0; at--) this.words[at + nt] = this.words[at];
            for (at = 0; at < nt; at++) this.words[at] = 0;
            this.length += nt;
          }
          return this.strip();
        }, et.prototype.ishln = function(xt) {
          return j(this.negative === 0), this.iushln(xt);
        }, et.prototype.iushrn = function(xt, tt, nt) {
          j(typeof xt == "number" && xt >= 0);
          var it;
          tt ? it = (tt - tt % 26) / 26 : it = 0;
          var at = xt % 26, ct = Math.min((xt - at) / 26, this.length), Mt = 67108863 ^ 67108863 >>> at << at, At = nt;
          if (it -= ct, it = Math.max(0, it), At) {
            for (var ut = 0; ut < ct; ut++) At.words[ut] = this.words[ut];
            At.length = ct;
          }
          if (ct !== 0) if (this.length > ct) for (this.length -= ct, ut = 0; ut < this.length; ut++) this.words[ut] = this.words[ut + ct];
          else this.words[0] = 0, this.length = 1;
          var ot = 0;
          for (ut = this.length - 1; ut >= 0 && (ot !== 0 || ut >= it); ut--) {
            var Ct = this.words[ut] | 0;
            this.words[ut] = ot << 26 - at | Ct >>> at, ot = Ct & Mt;
          }
          return At && ot !== 0 && (At.words[At.length++] = ot), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
        }, et.prototype.ishrn = function(xt, tt, nt) {
          return j(this.negative === 0), this.iushrn(xt, tt, nt);
        }, et.prototype.shln = function(xt) {
          return this.clone().ishln(xt);
        }, et.prototype.ushln = function(xt) {
          return this.clone().iushln(xt);
        }, et.prototype.shrn = function(xt) {
          return this.clone().ishrn(xt);
        }, et.prototype.ushrn = function(xt) {
          return this.clone().iushrn(xt);
        }, et.prototype.testn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26, it = 1 << tt;
          if (this.length <= nt) return false;
          var at = this.words[nt];
          return !!(at & it);
        }, et.prototype.imaskn = function(xt) {
          j(typeof xt == "number" && xt >= 0);
          var tt = xt % 26, nt = (xt - tt) / 26;
          if (j(this.negative === 0, "imaskn works only with positive numbers"), this.length <= nt) return this;
          if (tt !== 0 && nt++, this.length = Math.min(nt, this.length), tt !== 0) {
            var it = 67108863 ^ 67108863 >>> tt << tt;
            this.words[this.length - 1] &= it;
          }
          return this.strip();
        }, et.prototype.maskn = function(xt) {
          return this.clone().imaskn(xt);
        }, et.prototype.iaddn = function(xt) {
          return j(typeof xt == "number"), j(xt < 67108864), xt < 0 ? this.isubn(-xt) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < xt ? (this.words[0] = xt - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(xt), this.negative = 1, this) : this._iaddn(xt);
        }, et.prototype._iaddn = function(xt) {
          this.words[0] += xt;
          for (var tt = 0; tt < this.length && this.words[tt] >= 67108864; tt++) this.words[tt] -= 67108864, tt === this.length - 1 ? this.words[tt + 1] = 1 : this.words[tt + 1]++;
          return this.length = Math.max(this.length, tt + 1), this;
        }, et.prototype.isubn = function(xt) {
          if (j(typeof xt == "number"), j(xt < 67108864), xt < 0) return this.iaddn(-xt);
          if (this.negative !== 0) return this.negative = 0, this.iaddn(xt), this.negative = 1, this;
          if (this.words[0] -= xt, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
          else for (var tt = 0; tt < this.length && this.words[tt] < 0; tt++) this.words[tt] += 67108864, this.words[tt + 1] -= 1;
          return this.strip();
        }, et.prototype.addn = function(xt) {
          return this.clone().iaddn(xt);
        }, et.prototype.subn = function(xt) {
          return this.clone().isubn(xt);
        }, et.prototype.iabs = function() {
          return this.negative = 0, this;
        }, et.prototype.abs = function() {
          return this.clone().iabs();
        }, et.prototype._ishlnsubmul = function(xt, tt, nt) {
          var it = xt.length + nt, at;
          this._expand(it);
          var ct, Mt = 0;
          for (at = 0; at < xt.length; at++) {
            ct = (this.words[at + nt] | 0) + Mt;
            var At = (xt.words[at] | 0) * tt;
            ct -= At & 67108863, Mt = (ct >> 26) - (At / 67108864 | 0), this.words[at + nt] = ct & 67108863;
          }
          for (; at < this.length - nt; at++) ct = (this.words[at + nt] | 0) + Mt, Mt = ct >> 26, this.words[at + nt] = ct & 67108863;
          if (Mt === 0) return this.strip();
          for (j(Mt === -1), Mt = 0, at = 0; at < this.length; at++) ct = -(this.words[at] | 0) + Mt, Mt = ct >> 26, this.words[at] = ct & 67108863;
          return this.negative = 1, this.strip();
        }, et.prototype._wordDiv = function(xt, tt) {
          var nt = this.length - xt.length, it = this.clone(), at = xt, ct = at.words[at.length - 1] | 0, Mt = this._countBits(ct);
          nt = 26 - Mt, nt !== 0 && (at = at.ushln(nt), it.iushln(nt), ct = at.words[at.length - 1] | 0);
          var At = it.length - at.length, ut;
          if (tt !== "mod") {
            ut = new et(null), ut.length = At + 1, ut.words = new Array(ut.length);
            for (var ot = 0; ot < ut.length; ot++) ut.words[ot] = 0;
          }
          var Ct = it.clone()._ishlnsubmul(at, 1, At);
          Ct.negative === 0 && (it = Ct, ut && (ut.words[At] = 1));
          for (var Rt = At - 1; Rt >= 0; Rt--) {
            var Nt = (it.words[at.length + Rt] | 0) * 67108864 + (it.words[at.length + Rt - 1] | 0);
            for (Nt = Math.min(Nt / ct | 0, 67108863), it._ishlnsubmul(at, Nt, Rt); it.negative !== 0; ) Nt--, it.negative = 0, it._ishlnsubmul(at, 1, Rt), it.isZero() || (it.negative ^= 1);
            ut && (ut.words[Rt] = Nt);
          }
          return ut && ut.strip(), it.strip(), tt !== "div" && nt !== 0 && it.iushrn(nt), {
            div: ut || null,
            mod: it
          };
        }, et.prototype.divmod = function(xt, tt, nt) {
          if (j(!xt.isZero()), this.isZero()) return {
            div: new et(0),
            mod: new et(0)
          };
          var it, at, ct;
          return this.negative !== 0 && xt.negative === 0 ? (ct = this.neg().divmod(xt, tt), tt !== "mod" && (it = ct.div.neg()), tt !== "div" && (at = ct.mod.neg(), nt && at.negative !== 0 && at.iadd(xt)), {
            div: it,
            mod: at
          }) : this.negative === 0 && xt.negative !== 0 ? (ct = this.divmod(xt.neg(), tt), tt !== "mod" && (it = ct.div.neg()), {
            div: it,
            mod: ct.mod
          }) : this.negative & xt.negative ? (ct = this.neg().divmod(xt.neg(), tt), tt !== "div" && (at = ct.mod.neg(), nt && at.negative !== 0 && at.isub(xt)), {
            div: ct.div,
            mod: at
          }) : xt.length > this.length || this.cmp(xt) < 0 ? {
            div: new et(0),
            mod: this
          } : xt.length === 1 ? tt === "div" ? {
            div: this.divn(xt.words[0]),
            mod: null
          } : tt === "mod" ? {
            div: null,
            mod: new et(this.modn(xt.words[0]))
          } : {
            div: this.divn(xt.words[0]),
            mod: new et(this.modn(xt.words[0]))
          } : this._wordDiv(xt, tt);
        }, et.prototype.div = function(xt) {
          return this.divmod(xt, "div", false).div;
        }, et.prototype.mod = function(xt) {
          return this.divmod(xt, "mod", false).mod;
        }, et.prototype.umod = function(xt) {
          return this.divmod(xt, "mod", true).mod;
        }, et.prototype.divRound = function(xt) {
          var tt = this.divmod(xt);
          if (tt.mod.isZero()) return tt.div;
          var nt = tt.div.negative !== 0 ? tt.mod.isub(xt) : tt.mod, it = xt.ushrn(1), at = xt.andln(1), ct = nt.cmp(it);
          return ct < 0 || at === 1 && ct === 0 ? tt.div : tt.div.negative !== 0 ? tt.div.isubn(1) : tt.div.iaddn(1);
        }, et.prototype.modn = function(xt) {
          j(xt <= 67108863);
          for (var tt = (1 << 26) % xt, nt = 0, it = this.length - 1; it >= 0; it--) nt = (tt * nt + (this.words[it] | 0)) % xt;
          return nt;
        }, et.prototype.idivn = function(xt) {
          j(xt <= 67108863);
          for (var tt = 0, nt = this.length - 1; nt >= 0; nt--) {
            var it = (this.words[nt] | 0) + tt * 67108864;
            this.words[nt] = it / xt | 0, tt = it % xt;
          }
          return this.strip();
        }, et.prototype.divn = function(xt) {
          return this.clone().idivn(xt);
        }, et.prototype.egcd = function(xt) {
          j(xt.negative === 0), j(!xt.isZero());
          var tt = this, nt = xt.clone();
          tt.negative !== 0 ? tt = tt.umod(xt) : tt = tt.clone();
          for (var it = new et(1), at = new et(0), ct = new et(0), Mt = new et(1), At = 0; tt.isEven() && nt.isEven(); ) tt.iushrn(1), nt.iushrn(1), ++At;
          for (var ut = nt.clone(), ot = tt.clone(); !tt.isZero(); ) {
            for (var Ct = 0, Rt = 1; !(tt.words[0] & Rt) && Ct < 26; ++Ct, Rt <<= 1) ;
            if (Ct > 0) for (tt.iushrn(Ct); Ct-- > 0; ) (it.isOdd() || at.isOdd()) && (it.iadd(ut), at.isub(ot)), it.iushrn(1), at.iushrn(1);
            for (var Nt = 0, Wt = 1; !(nt.words[0] & Wt) && Nt < 26; ++Nt, Wt <<= 1) ;
            if (Nt > 0) for (nt.iushrn(Nt); Nt-- > 0; ) (ct.isOdd() || Mt.isOdd()) && (ct.iadd(ut), Mt.isub(ot)), ct.iushrn(1), Mt.iushrn(1);
            tt.cmp(nt) >= 0 ? (tt.isub(nt), it.isub(ct), at.isub(Mt)) : (nt.isub(tt), ct.isub(it), Mt.isub(at));
          }
          return {
            a: ct,
            b: Mt,
            gcd: nt.iushln(At)
          };
        }, et.prototype._invmp = function(xt) {
          j(xt.negative === 0), j(!xt.isZero());
          var tt = this, nt = xt.clone();
          tt.negative !== 0 ? tt = tt.umod(xt) : tt = tt.clone();
          for (var it = new et(1), at = new et(0), ct = nt.clone(); tt.cmpn(1) > 0 && nt.cmpn(1) > 0; ) {
            for (var Mt = 0, At = 1; !(tt.words[0] & At) && Mt < 26; ++Mt, At <<= 1) ;
            if (Mt > 0) for (tt.iushrn(Mt); Mt-- > 0; ) it.isOdd() && it.iadd(ct), it.iushrn(1);
            for (var ut = 0, ot = 1; !(nt.words[0] & ot) && ut < 26; ++ut, ot <<= 1) ;
            if (ut > 0) for (nt.iushrn(ut); ut-- > 0; ) at.isOdd() && at.iadd(ct), at.iushrn(1);
            tt.cmp(nt) >= 0 ? (tt.isub(nt), it.isub(at)) : (nt.isub(tt), at.isub(it));
          }
          var Ct;
          return tt.cmpn(1) === 0 ? Ct = it : Ct = at, Ct.cmpn(0) < 0 && Ct.iadd(xt), Ct;
        }, et.prototype.gcd = function(xt) {
          if (this.isZero()) return xt.abs();
          if (xt.isZero()) return this.abs();
          var tt = this.clone(), nt = xt.clone();
          tt.negative = 0, nt.negative = 0;
          for (var it = 0; tt.isEven() && nt.isEven(); it++) tt.iushrn(1), nt.iushrn(1);
          do {
            for (; tt.isEven(); ) tt.iushrn(1);
            for (; nt.isEven(); ) nt.iushrn(1);
            var at = tt.cmp(nt);
            if (at < 0) {
              var ct = tt;
              tt = nt, nt = ct;
            } else if (at === 0 || nt.cmpn(1) === 0) break;
            tt.isub(nt);
          } while (true);
          return nt.iushln(it);
        }, et.prototype.invm = function(xt) {
          return this.egcd(xt).a.umod(xt);
        }, et.prototype.isEven = function() {
          return (this.words[0] & 1) === 0;
        }, et.prototype.isOdd = function() {
          return (this.words[0] & 1) === 1;
        }, et.prototype.andln = function(xt) {
          return this.words[0] & xt;
        }, et.prototype.bincn = function(xt) {
          j(typeof xt == "number");
          var tt = xt % 26, nt = (xt - tt) / 26, it = 1 << tt;
          if (this.length <= nt) return this._expand(nt + 1), this.words[nt] |= it, this;
          for (var at = it, ct = nt; at !== 0 && ct < this.length; ct++) {
            var Mt = this.words[ct] | 0;
            Mt += at, at = Mt >>> 26, Mt &= 67108863, this.words[ct] = Mt;
          }
          return at !== 0 && (this.words[ct] = at, this.length++), this;
        }, et.prototype.isZero = function() {
          return this.length === 1 && this.words[0] === 0;
        }, et.prototype.cmpn = function(xt) {
          var tt = xt < 0;
          if (this.negative !== 0 && !tt) return -1;
          if (this.negative === 0 && tt) return 1;
          this.strip();
          var nt;
          if (this.length > 1) nt = 1;
          else {
            tt && (xt = -xt), j(xt <= 67108863, "Number is too big");
            var it = this.words[0] | 0;
            nt = it === xt ? 0 : it < xt ? -1 : 1;
          }
          return this.negative !== 0 ? -nt | 0 : nt;
        }, et.prototype.cmp = function(xt) {
          if (this.negative !== 0 && xt.negative === 0) return -1;
          if (this.negative === 0 && xt.negative !== 0) return 1;
          var tt = this.ucmp(xt);
          return this.negative !== 0 ? -tt | 0 : tt;
        }, et.prototype.ucmp = function(xt) {
          if (this.length > xt.length) return 1;
          if (this.length < xt.length) return -1;
          for (var tt = 0, nt = this.length - 1; nt >= 0; nt--) {
            var it = this.words[nt] | 0, at = xt.words[nt] | 0;
            if (it !== at) {
              it < at ? tt = -1 : it > at && (tt = 1);
              break;
            }
          }
          return tt;
        }, et.prototype.gtn = function(xt) {
          return this.cmpn(xt) === 1;
        }, et.prototype.gt = function(xt) {
          return this.cmp(xt) === 1;
        }, et.prototype.gten = function(xt) {
          return this.cmpn(xt) >= 0;
        }, et.prototype.gte = function(xt) {
          return this.cmp(xt) >= 0;
        }, et.prototype.ltn = function(xt) {
          return this.cmpn(xt) === -1;
        }, et.prototype.lt = function(xt) {
          return this.cmp(xt) === -1;
        }, et.prototype.lten = function(xt) {
          return this.cmpn(xt) <= 0;
        }, et.prototype.lte = function(xt) {
          return this.cmp(xt) <= 0;
        }, et.prototype.eqn = function(xt) {
          return this.cmpn(xt) === 0;
        }, et.prototype.eq = function(xt) {
          return this.cmp(xt) === 0;
        }, et.red = function(xt) {
          return new sr(xt);
        }, et.prototype.toRed = function(xt) {
          return j(!this.red, "Already a number in reduction context"), j(this.negative === 0, "red works only with positives"), xt.convertTo(this)._forceRed(xt);
        }, et.prototype.fromRed = function() {
          return j(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, et.prototype._forceRed = function(xt) {
          return this.red = xt, this;
        }, et.prototype.forceRed = function(xt) {
          return j(!this.red, "Already a number in reduction context"), this._forceRed(xt);
        }, et.prototype.redAdd = function(xt) {
          return j(this.red, "redAdd works only with red numbers"), this.red.add(this, xt);
        }, et.prototype.redIAdd = function(xt) {
          return j(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, xt);
        }, et.prototype.redSub = function(xt) {
          return j(this.red, "redSub works only with red numbers"), this.red.sub(this, xt);
        }, et.prototype.redISub = function(xt) {
          return j(this.red, "redISub works only with red numbers"), this.red.isub(this, xt);
        }, et.prototype.redShl = function(xt) {
          return j(this.red, "redShl works only with red numbers"), this.red.shl(this, xt);
        }, et.prototype.redMul = function(xt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, xt), this.red.mul(this, xt);
        }, et.prototype.redIMul = function(xt) {
          return j(this.red, "redMul works only with red numbers"), this.red._verify2(this, xt), this.red.imul(this, xt);
        }, et.prototype.redSqr = function() {
          return j(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, et.prototype.redISqr = function() {
          return j(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, et.prototype.redSqrt = function() {
          return j(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, et.prototype.redInvm = function() {
          return j(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, et.prototype.redNeg = function() {
          return j(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, et.prototype.redPow = function(xt) {
          return j(this.red && !xt.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, xt);
        };
        var Ot = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function Ft(Ut, xt) {
          this.name = Ut, this.p = new et(xt, 16), this.n = this.p.bitLength(), this.k = new et(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }
        Ft.prototype._tmp = function() {
          var xt = new et(null);
          return xt.words = new Array(Math.ceil(this.n / 13)), xt;
        }, Ft.prototype.ireduce = function(xt) {
          var tt = xt, nt;
          do
            this.split(tt, this.tmp), tt = this.imulK(tt), tt = tt.iadd(this.tmp), nt = tt.bitLength();
          while (nt > this.n);
          var it = nt < this.n ? -1 : tt.ucmp(this.p);
          return it === 0 ? (tt.words[0] = 0, tt.length = 1) : it > 0 ? tt.isub(this.p) : tt.strip(), tt;
        }, Ft.prototype.split = function(xt, tt) {
          xt.iushrn(this.n, 0, tt);
        }, Ft.prototype.imulK = function(xt) {
          return xt.imul(this.k);
        };
        function Lt() {
          Ft.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        rt(Lt, Ft), Lt.prototype.split = function(xt, tt) {
          for (var nt = 4194303, it = Math.min(xt.length, 9), at = 0; at < it; at++) tt.words[at] = xt.words[at];
          if (tt.length = it, xt.length <= 9) {
            xt.words[0] = 0, xt.length = 1;
            return;
          }
          var ct = xt.words[9];
          for (tt.words[tt.length++] = ct & nt, at = 10; at < xt.length; at++) {
            var Mt = xt.words[at] | 0;
            xt.words[at - 10] = (Mt & nt) << 4 | ct >>> 22, ct = Mt;
          }
          ct >>>= 22, xt.words[at - 10] = ct, ct === 0 && xt.length > 10 ? xt.length -= 10 : xt.length -= 9;
        }, Lt.prototype.imulK = function(xt) {
          xt.words[xt.length] = 0, xt.words[xt.length + 1] = 0, xt.length += 2;
          for (var tt = 0, nt = 0; nt < xt.length; nt++) {
            var it = xt.words[nt] | 0;
            tt += it * 977, xt.words[nt] = tt & 67108863, tt = it * 64 + (tt / 67108864 | 0);
          }
          return xt.words[xt.length - 1] === 0 && (xt.length--, xt.words[xt.length - 1] === 0 && xt.length--), xt;
        };
        function Zt() {
          Ft.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        rt(Zt, Ft);
        function Kt() {
          Ft.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        rt(Kt, Ft);
        function ar() {
          Ft.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        rt(ar, Ft), ar.prototype.imulK = function(xt) {
          for (var tt = 0, nt = 0; nt < xt.length; nt++) {
            var it = (xt.words[nt] | 0) * 19 + tt, at = it & 67108863;
            it >>>= 26, xt.words[nt] = at, tt = it;
          }
          return tt !== 0 && (xt.words[xt.length++] = tt), xt;
        }, et._prime = function(xt) {
          if (Ot[xt]) return Ot[xt];
          var tt;
          if (xt === "k256") tt = new Lt();
          else if (xt === "p224") tt = new Zt();
          else if (xt === "p192") tt = new Kt();
          else if (xt === "p25519") tt = new ar();
          else throw new Error("Unknown prime " + xt);
          return Ot[xt] = tt, tt;
        };
        function sr(Ut) {
          if (typeof Ut == "string") {
            var xt = et._prime(Ut);
            this.m = xt.p, this.prime = xt;
          } else j(Ut.gtn(1), "modulus must be greater than 1"), this.m = Ut, this.prime = null;
        }
        sr.prototype._verify1 = function(xt) {
          j(xt.negative === 0, "red works only with positives"), j(xt.red, "red works only with red numbers");
        }, sr.prototype._verify2 = function(xt, tt) {
          j((xt.negative | tt.negative) === 0, "red works only with positives"), j(xt.red && xt.red === tt.red, "red works only with red numbers");
        }, sr.prototype.imod = function(xt) {
          return this.prime ? this.prime.ireduce(xt)._forceRed(this) : xt.umod(this.m)._forceRed(this);
        }, sr.prototype.neg = function(xt) {
          return xt.isZero() ? xt.clone() : this.m.sub(xt)._forceRed(this);
        }, sr.prototype.add = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.add(tt);
          return nt.cmp(this.m) >= 0 && nt.isub(this.m), nt._forceRed(this);
        }, sr.prototype.iadd = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.iadd(tt);
          return nt.cmp(this.m) >= 0 && nt.isub(this.m), nt;
        }, sr.prototype.sub = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.sub(tt);
          return nt.cmpn(0) < 0 && nt.iadd(this.m), nt._forceRed(this);
        }, sr.prototype.isub = function(xt, tt) {
          this._verify2(xt, tt);
          var nt = xt.isub(tt);
          return nt.cmpn(0) < 0 && nt.iadd(this.m), nt;
        }, sr.prototype.shl = function(xt, tt) {
          return this._verify1(xt), this.imod(xt.ushln(tt));
        }, sr.prototype.imul = function(xt, tt) {
          return this._verify2(xt, tt), this.imod(xt.imul(tt));
        }, sr.prototype.mul = function(xt, tt) {
          return this._verify2(xt, tt), this.imod(xt.mul(tt));
        }, sr.prototype.isqr = function(xt) {
          return this.imul(xt, xt.clone());
        }, sr.prototype.sqr = function(xt) {
          return this.mul(xt, xt);
        }, sr.prototype.sqrt = function(xt) {
          if (xt.isZero()) return xt.clone();
          var tt = this.m.andln(3);
          if (j(tt % 2 === 1), tt === 3) {
            var nt = this.m.add(new et(1)).iushrn(2);
            return this.pow(xt, nt);
          }
          for (var it = this.m.subn(1), at = 0; !it.isZero() && it.andln(1) === 0; ) at++, it.iushrn(1);
          j(!it.isZero());
          var ct = new et(1).toRed(this), Mt = ct.redNeg(), At = this.m.subn(1).iushrn(1), ut = this.m.bitLength();
          for (ut = new et(2 * ut * ut).toRed(this); this.pow(ut, At).cmp(Mt) !== 0; ) ut.redIAdd(Mt);
          for (var ot = this.pow(ut, it), Ct = this.pow(xt, it.addn(1).iushrn(1)), Rt = this.pow(xt, it), Nt = at; Rt.cmp(ct) !== 0; ) {
            for (var Wt = Rt, Xt = 0; Wt.cmp(ct) !== 0; Xt++) Wt = Wt.redSqr();
            j(Xt < Nt);
            var rr = this.pow(ot, new et(1).iushln(Nt - Xt - 1));
            Ct = Ct.redMul(rr), ot = rr.redSqr(), Rt = Rt.redMul(ot), Nt = Xt;
          }
          return Ct;
        }, sr.prototype.invm = function(xt) {
          var tt = xt._invmp(this.m);
          return tt.negative !== 0 ? (tt.negative = 0, this.imod(tt).redNeg()) : this.imod(tt);
        }, sr.prototype.pow = function(xt, tt) {
          if (tt.isZero()) return new et(1);
          if (tt.cmpn(1) === 0) return xt.clone();
          var nt = 4, it = new Array(1 << nt);
          it[0] = new et(1).toRed(this), it[1] = xt;
          for (var at = 2; at < it.length; at++) it[at] = this.mul(it[at - 1], xt);
          var ct = it[0], Mt = 0, At = 0, ut = tt.bitLength() % 26;
          for (ut === 0 && (ut = 26), at = tt.length - 1; at >= 0; at--) {
            for (var ot = tt.words[at], Ct = ut - 1; Ct >= 0; Ct--) {
              var Rt = ot >> Ct & 1;
              if (ct !== it[0] && (ct = this.sqr(ct)), Rt === 0 && Mt === 0) {
                At = 0;
                continue;
              }
              Mt <<= 1, Mt |= Rt, At++, !(At !== nt && (at !== 0 || Ct !== 0)) && (ct = this.mul(ct, it[Mt]), At = 0, Mt = 0);
            }
            ut = 26;
          }
          return ct;
        }, sr.prototype.convertTo = function(xt) {
          var tt = xt.umod(this.m);
          return tt === xt ? tt.clone() : tt;
        }, sr.prototype.convertFrom = function(xt) {
          var tt = xt.clone();
          return tt.red = null, tt;
        }, et.mont = function(xt) {
          return new er(xt);
        };
        function er(Ut) {
          sr.call(this, Ut), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new et(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }
        rt(er, sr), er.prototype.convertTo = function(xt) {
          return this.imod(xt.ushln(this.shift));
        }, er.prototype.convertFrom = function(xt) {
          var tt = this.imod(xt.mul(this.rinv));
          return tt.red = null, tt;
        }, er.prototype.imul = function(xt, tt) {
          if (xt.isZero() || tt.isZero()) return xt.words[0] = 0, xt.length = 1, xt;
          var nt = xt.imul(tt), it = nt.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), at = nt.isub(it).iushrn(this.shift), ct = at;
          return at.cmp(this.m) >= 0 ? ct = at.isub(this.m) : at.cmpn(0) < 0 && (ct = at.iadd(this.m)), ct._forceRed(this);
        }, er.prototype.mul = function(xt, tt) {
          if (xt.isZero() || tt.isZero()) return new et(0)._forceRed(this);
          var nt = xt.mul(tt), it = nt.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), at = nt.isub(it).iushrn(this.shift), ct = at;
          return at.cmp(this.m) >= 0 ? ct = at.isub(this.m) : at.cmpn(0) < 0 && (ct = at.iadd(this.m)), ct._forceRed(this);
        }, er.prototype.invm = function(xt) {
          var tt = this.imod(xt._invmp(this.m).mul(this.r2));
          return tt._forceRed(this);
        };
      })(d, commonjsGlobal);
    })(bn);
    var bnExports = bn.exports, src$4 = function d(_) {
      if (typeof _ != "string") throw new Error("[is-hex-prefixed] value must be type 'string', is currently type " + typeof _ + ", while checking isHexPrefixed.");
      return _.slice(0, 2) === "0x";
    }, isHexPrefixed = src$4, src$3 = function d(_) {
      return typeof _ != "string" ? _ : isHexPrefixed(_) ? _.slice(2) : _;
    }, BN$p = bnExports, stripHexPrefix = src$3, src$2 = function d(_) {
      if (typeof _ == "string" || typeof _ == "number") {
        var $ = new BN$p(1), j = String(_).toLowerCase().trim(), rt = j.substr(0, 2) === "0x" || j.substr(0, 3) === "-0x", et = stripHexPrefix(j);
        if (et.substr(0, 1) === "-" && (et = stripHexPrefix(et.slice(1)), $ = new BN$p(-1, 10)), et = et === "" ? "0" : et, !et.match(/^-?[0-9]+$/) && et.match(/^[0-9A-Fa-f]+$/) || et.match(/^[a-fA-F]+$/) || rt === true && et.match(/^[0-9A-Fa-f]+$/)) return new BN$p(et, 16).mul($);
        if ((et.match(/^-?[0-9]+$/) || et === "") && rt === false) return new BN$p(et, 10).mul($);
      } else if (typeof _ == "object" && _.toString && !_.pop && !_.push && _.toString(10).match(/^-?[0-9]+$/) && (_.mul || _.dividedToIntegerBy)) return new BN$p(_.toString(10), 10);
      throw new Error("[number-to-bn] while converting number " + JSON.stringify(_) + " to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.");
    }, BN$o = bnExports$1, numberToBN = src$2, zero = new BN$o(0), negative1 = new BN$o(-1), unitMap = {
      noether: "0",
      wei: "1",
      kwei: "1000",
      Kwei: "1000",
      babbage: "1000",
      femtoether: "1000",
      mwei: "1000000",
      Mwei: "1000000",
      lovelace: "1000000",
      picoether: "1000000",
      gwei: "1000000000",
      Gwei: "1000000000",
      shannon: "1000000000",
      nanoether: "1000000000",
      nano: "1000000000",
      szabo: "1000000000000",
      microether: "1000000000000",
      micro: "1000000000000",
      finney: "1000000000000000",
      milliether: "1000000000000000",
      milli: "1000000000000000",
      ether: "1000000000000000000",
      kether: "1000000000000000000000",
      grand: "1000000000000000000000",
      mether: "1000000000000000000000000",
      gether: "1000000000000000000000000000",
      tether: "1000000000000000000000000000000"
    };
    function getValueOfUnit(d) {
      var _ = d ? d.toLowerCase() : "ether", $ = unitMap[_];
      if (typeof $ != "string") throw new Error("[ethjs-unit] the unit provided " + d + " doesn't exists, please use the one of the following units " + JSON.stringify(unitMap, null, 2));
      return new BN$o($, 10);
    }
    function numberToString(d) {
      if (typeof d == "string") {
        if (!d.match(/^-?[0-9.]+$/)) throw new Error("while converting number to string, invalid number value '" + d + "', should be a number matching (^-?[0-9.]+).");
        return d;
      } else {
        if (typeof d == "number") return String(d);
        if (typeof d == "object" && d.toString && (d.toTwos || d.dividedToIntegerBy)) return d.toPrecision ? String(d.toPrecision()) : d.toString(10);
      }
      throw new Error("while converting number to string, invalid number value '" + d + "' type " + typeof d + ".");
    }
    function fromWei(d, _, $) {
      var j = numberToBN(d), rt = j.lt(zero), et = getValueOfUnit(_), st = unitMap[_].length - 1 || 1, pt = $ || {};
      rt && (j = j.mul(negative1));
      for (var Et = j.mod(et).toString(10); Et.length < st; ) Et = "0" + Et;
      pt.pad || (Et = Et.match(/^([0-9]*[1-9]|0)(0*)/)[1]);
      var Bt = j.div(et).toString(10);
      pt.commify && (Bt = Bt.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
      var St = "" + Bt + (Et == "0" ? "" : "." + Et);
      return rt && (St = "-" + St), St;
    }
    function toWei(d, _) {
      var $ = numberToString(d), j = getValueOfUnit(_), rt = unitMap[_].length - 1 || 1, et = $.substring(0, 1) === "-";
      if (et && ($ = $.substring(1)), $ === ".") throw new Error("[ethjs-unit] while converting number " + d + " to wei, invalid value");
      var st = $.split(".");
      if (st.length > 2) throw new Error("[ethjs-unit] while converting number " + d + " to wei,  too many decimal points");
      var pt = st[0], Et = st[1];
      if (pt || (pt = "0"), Et || (Et = "0"), Et.length > rt) throw new Error("[ethjs-unit] while converting number " + d + " to wei, too many decimal places");
      for (; Et.length < rt; ) Et += "0";
      pt = new BN$o(pt), Et = new BN$o(Et);
      var Bt = pt.mul(j).add(Et);
      return et && (Bt = Bt.mul(negative1)), new BN$o(Bt.toString(10), 10);
    }
    var lib = {
      unitMap,
      numberToString,
      getValueOfUnit,
      fromWei,
      toWei
    };
    (function(d, _) {
      typeof define == "function" && define.amd ? define([], function() {
        return _(d);
      }) : typeof module == "object" && module.exports ? module.exports = _(d) : _(d);
    })(typeof self < "u" ? self : void 0, function(d) {
      if (typeof Promise != "function") throw "Promise support required";
      var _ = d.crypto || d.msCrypto;
      if (!_) return;
      var $ = _.subtle || _.webkitSubtle;
      if (!$) return;
      var j = d.Crypto || _.constructor || Object, rt = d.SubtleCrypto || $.constructor || Object;
      d.CryptoKey || d.Key;
      var et = d.navigator.userAgent.indexOf("Edge/") > -1, st = !!d.msCrypto && !et, pt = !_.subtle && !!_.webkitSubtle;
      if (!st && !pt) return;
      function Et(Ut) {
        return btoa(Ut).replace(/\=+$/, "").replace(/\+/g, "-").replace(/\//g, "_");
      }
      function Bt(Ut) {
        return Ut += "===", Ut = Ut.slice(0, -Ut.length % 4), atob(Ut.replace(/-/g, "+").replace(/_/g, "/"));
      }
      function St(Ut) {
        for (var xt = new Uint8Array(Ut.length), tt = 0; tt < Ut.length; tt++) xt[tt] = Ut.charCodeAt(tt);
        return xt;
      }
      function $t(Ut) {
        return Ut instanceof ArrayBuffer && (Ut = new Uint8Array(Ut)), String.fromCharCode.apply(String, Ut);
      }
      function kt(Ut) {
        var xt = {
          name: (Ut.name || Ut || "").toUpperCase().replace("V", "v")
        };
        switch (xt.name) {
          case "SHA-1":
          case "SHA-256":
          case "SHA-384":
          case "SHA-512":
            break;
          case "AES-CBC":
          case "AES-GCM":
          case "AES-KW":
            Ut.length && (xt.length = Ut.length);
            break;
          case "HMAC":
            Ut.hash && (xt.hash = kt(Ut.hash)), Ut.length && (xt.length = Ut.length);
            break;
          case "RSAES-PKCS1-v1_5":
            Ut.publicExponent && (xt.publicExponent = new Uint8Array(Ut.publicExponent)), Ut.modulusLength && (xt.modulusLength = Ut.modulusLength);
            break;
          case "RSASSA-PKCS1-v1_5":
          case "RSA-OAEP":
            Ut.hash && (xt.hash = kt(Ut.hash)), Ut.publicExponent && (xt.publicExponent = new Uint8Array(Ut.publicExponent)), Ut.modulusLength && (xt.modulusLength = Ut.modulusLength);
            break;
          default:
            throw new SyntaxError("Bad algorithm name");
        }
        return xt;
      }
      function Tt(Ut) {
        return {
          HMAC: {
            "SHA-1": "HS1",
            "SHA-256": "HS256",
            "SHA-384": "HS384",
            "SHA-512": "HS512"
          },
          "RSASSA-PKCS1-v1_5": {
            "SHA-1": "RS1",
            "SHA-256": "RS256",
            "SHA-384": "RS384",
            "SHA-512": "RS512"
          },
          "RSAES-PKCS1-v1_5": {
            "": "RSA1_5"
          },
          "RSA-OAEP": {
            "SHA-1": "RSA-OAEP",
            "SHA-256": "RSA-OAEP-256"
          },
          "AES-KW": {
            128: "A128KW",
            192: "A192KW",
            256: "A256KW"
          },
          "AES-GCM": {
            128: "A128GCM",
            192: "A192GCM",
            256: "A256GCM"
          },
          "AES-CBC": {
            128: "A128CBC",
            192: "A192CBC",
            256: "A256CBC"
          }
        }[Ut.name][(Ut.hash || {}).name || Ut.length || ""];
      }
      function Pt(Ut) {
        (Ut instanceof ArrayBuffer || Ut instanceof Uint8Array) && (Ut = JSON.parse(decodeURIComponent(escape($t(Ut)))));
        var xt = {
          kty: Ut.kty,
          alg: Ut.alg,
          ext: Ut.ext || Ut.extractable
        };
        switch (xt.kty) {
          case "oct":
            xt.k = Ut.k;
          case "RSA":
            [
              "n",
              "e",
              "d",
              "p",
              "q",
              "dp",
              "dq",
              "qi",
              "oth"
            ].forEach(function(tt) {
              tt in Ut && (xt[tt] = Ut[tt]);
            });
            break;
          default:
            throw new TypeError("Unsupported key type");
        }
        return xt;
      }
      function It(Ut) {
        var xt = Pt(Ut);
        return st && (xt.extractable = xt.ext, delete xt.ext), St(unescape(encodeURIComponent(JSON.stringify(xt)))).buffer;
      }
      function jt(Ut) {
        var xt = Lt(Ut), tt = false;
        xt.length > 2 && (tt = true, xt.shift());
        var nt = {
          ext: true
        };
        switch (xt[0][0]) {
          case "1.2.840.113549.1.1.1":
            var it = [
              "n",
              "e",
              "d",
              "p",
              "q",
              "dp",
              "dq",
              "qi"
            ], at = Lt(xt[1]);
            tt && at.shift();
            for (var ct = 0; ct < at.length; ct++) at[ct][0] || (at[ct] = at[ct].subarray(1)), nt[it[ct]] = Et($t(at[ct]));
            nt.kty = "RSA";
            break;
          default:
            throw new TypeError("Unsupported key type");
        }
        return nt;
      }
      function Dt(Ut) {
        var xt, tt = [
          [
            "",
            null
          ]
        ], nt = false;
        switch (Ut.kty) {
          case "RSA":
            for (var it = [
              "n",
              "e",
              "d",
              "p",
              "q",
              "dp",
              "dq",
              "qi"
            ], at = [], ct = 0; ct < it.length && it[ct] in Ut; ct++) {
              var Mt = at[ct] = St(Bt(Ut[it[ct]]));
              Mt[0] & 128 && (at[ct] = new Uint8Array(Mt.length + 1), at[ct].set(Mt, 1));
            }
            at.length > 2 && (nt = true, at.unshift(new Uint8Array([
              0
            ]))), tt[0][0] = "1.2.840.113549.1.1.1", xt = at;
            break;
          default:
            throw new TypeError("Unsupported key type");
        }
        return tt.push(new Uint8Array(Zt(xt)).buffer), nt ? tt.unshift(new Uint8Array([
          0
        ])) : tt[1] = {
          tag: 3,
          value: tt[1]
        }, new Uint8Array(Zt(tt)).buffer;
      }
      var Ot = {
        KoZIhvcNAQEB: "1.2.840.113549.1.1.1"
      }, Ft = {
        "1.2.840.113549.1.1.1": "KoZIhvcNAQEB"
      };
      function Lt(Ut, xt) {
        if (Ut instanceof ArrayBuffer && (Ut = new Uint8Array(Ut)), xt || (xt = {
          pos: 0,
          end: Ut.length
        }), xt.end - xt.pos < 2 || xt.end > Ut.length) throw new RangeError("Malformed DER");
        var tt = Ut[xt.pos++], nt = Ut[xt.pos++];
        if (nt >= 128) {
          if (nt &= 127, xt.end - xt.pos < nt) throw new RangeError("Malformed DER");
          for (var it = 0; nt--; ) it <<= 8, it |= Ut[xt.pos++];
          nt = it;
        }
        if (xt.end - xt.pos < nt) throw new RangeError("Malformed DER");
        var at;
        switch (tt) {
          case 2:
            at = Ut.subarray(xt.pos, xt.pos += nt);
            break;
          case 3:
            if (Ut[xt.pos++]) throw new Error("Unsupported bit string");
            nt--;
          case 4:
            at = new Uint8Array(Ut.subarray(xt.pos, xt.pos += nt)).buffer;
            break;
          case 5:
            at = null;
            break;
          case 6:
            var ct = btoa($t(Ut.subarray(xt.pos, xt.pos += nt)));
            if (!(ct in Ot)) throw new Error("Unsupported OBJECT ID " + ct);
            at = Ot[ct];
            break;
          case 48:
            at = [];
            for (var Mt = xt.pos + nt; xt.pos < Mt; ) at.push(Lt(Ut, xt));
            break;
          default:
            throw new Error("Unsupported DER tag 0x" + tt.toString(16));
        }
        return at;
      }
      function Zt(Ut, xt) {
        xt || (xt = []);
        var tt = 0, nt = 0, it = xt.length + 2;
        if (xt.push(0, 0), Ut instanceof Uint8Array) {
          tt = 2, nt = Ut.length;
          for (var at = 0; at < nt; at++) xt.push(Ut[at]);
        } else if (Ut instanceof ArrayBuffer) {
          tt = 4, nt = Ut.byteLength, Ut = new Uint8Array(Ut);
          for (var at = 0; at < nt; at++) xt.push(Ut[at]);
        } else if (Ut === null) tt = 5, nt = 0;
        else if (typeof Ut == "string" && Ut in Ft) {
          var ct = St(atob(Ft[Ut]));
          tt = 6, nt = ct.length;
          for (var at = 0; at < nt; at++) xt.push(ct[at]);
        } else if (Ut instanceof Array) {
          for (var at = 0; at < Ut.length; at++) Zt(Ut[at], xt);
          tt = 48, nt = xt.length - it;
        } else if (typeof Ut == "object" && Ut.tag === 3 && Ut.value instanceof ArrayBuffer) {
          Ut = new Uint8Array(Ut.value), tt = 3, nt = Ut.byteLength, xt.push(0);
          for (var at = 0; at < nt; at++) xt.push(Ut[at]);
          nt++;
        } else throw new Error("Unsupported DER value " + Ut);
        if (nt >= 128) {
          var Mt = nt, nt = 4;
          for (xt.splice(it, 0, Mt >> 24 & 255, Mt >> 16 & 255, Mt >> 8 & 255, Mt & 255); nt > 1 && !(Mt >> 24); ) Mt <<= 8, nt--;
          nt < 4 && xt.splice(it, 4 - nt), nt |= 128;
        }
        return xt.splice(it - 2, 2, tt, nt), xt;
      }
      function Kt(Ut, xt, tt, nt) {
        Object.defineProperties(this, {
          _key: {
            value: Ut
          },
          type: {
            value: Ut.type,
            enumerable: true
          },
          extractable: {
            value: tt === void 0 ? Ut.extractable : tt,
            enumerable: true
          },
          algorithm: {
            value: xt === void 0 ? Ut.algorithm : xt,
            enumerable: true
          },
          usages: {
            value: nt === void 0 ? Ut.usages : nt,
            enumerable: true
          }
        });
      }
      function ar(Ut) {
        return Ut === "verify" || Ut === "encrypt" || Ut === "wrapKey";
      }
      function sr(Ut) {
        return Ut === "sign" || Ut === "decrypt" || Ut === "unwrapKey";
      }
      if ([
        "generateKey",
        "importKey",
        "unwrapKey"
      ].forEach(function(Ut) {
        var xt = $[Ut];
        $[Ut] = function(tt, nt, it) {
          var at = [].slice.call(arguments), ct, Mt, At;
          switch (Ut) {
            case "generateKey":
              ct = kt(tt), Mt = nt, At = it;
              break;
            case "importKey":
              ct = kt(it), Mt = at[3], At = at[4], tt === "jwk" && (nt = Pt(nt), nt.alg || (nt.alg = Tt(ct)), nt.key_ops || (nt.key_ops = nt.kty !== "oct" ? "d" in nt ? At.filter(sr) : At.filter(ar) : At.slice()), at[1] = It(nt));
              break;
            case "unwrapKey":
              ct = at[4], Mt = at[5], At = at[6], at[2] = it._key;
              break;
          }
          if (Ut === "generateKey" && ct.name === "HMAC" && ct.hash) return ct.length = ct.length || {
            "SHA-1": 512,
            "SHA-256": 512,
            "SHA-384": 1024,
            "SHA-512": 1024
          }[ct.hash.name], $.importKey("raw", _.getRandomValues(new Uint8Array(ct.length + 7 >> 3)), ct, Mt, At);
          if (pt && Ut === "generateKey" && ct.name === "RSASSA-PKCS1-v1_5" && (!ct.modulusLength || ct.modulusLength >= 2048)) return tt = kt(tt), tt.name = "RSAES-PKCS1-v1_5", delete tt.hash, $.generateKey(tt, true, [
            "encrypt",
            "decrypt"
          ]).then(function(ot) {
            return Promise.all([
              $.exportKey("jwk", ot.publicKey),
              $.exportKey("jwk", ot.privateKey)
            ]);
          }).then(function(ot) {
            return ot[0].alg = ot[1].alg = Tt(ct), ot[0].key_ops = At.filter(ar), ot[1].key_ops = At.filter(sr), Promise.all([
              $.importKey("jwk", ot[0], ct, true, ot[0].key_ops),
              $.importKey("jwk", ot[1], ct, Mt, ot[1].key_ops)
            ]);
          }).then(function(ot) {
            return {
              publicKey: ot[0],
              privateKey: ot[1]
            };
          });
          if ((pt || st && (ct.hash || {}).name === "SHA-1") && Ut === "importKey" && tt === "jwk" && ct.name === "HMAC" && nt.kty === "oct") return $.importKey("raw", St(Bt(nt.k)), it, at[3], at[4]);
          if (pt && Ut === "importKey" && (tt === "spki" || tt === "pkcs8")) return $.importKey("jwk", jt(nt), it, at[3], at[4]);
          if (st && Ut === "unwrapKey") return $.decrypt(at[3], it, nt).then(function(ot) {
            return $.importKey(tt, ot, at[4], at[5], at[6]);
          });
          var ut;
          try {
            ut = xt.apply($, at);
          } catch (ot) {
            return Promise.reject(ot);
          }
          return st && (ut = new Promise(function(ot, Ct) {
            ut.onabort = ut.onerror = function(Rt) {
              Ct(Rt);
            }, ut.oncomplete = function(Rt) {
              ot(Rt.target.result);
            };
          })), ut = ut.then(function(ot) {
            return ct.name === "HMAC" && (ct.length || (ct.length = 8 * ot.algorithm.length)), ct.name.search("RSA") == 0 && (ct.modulusLength || (ct.modulusLength = (ot.publicKey || ot).algorithm.modulusLength), ct.publicExponent || (ct.publicExponent = (ot.publicKey || ot).algorithm.publicExponent)), ot.publicKey && ot.privateKey ? ot = {
              publicKey: new Kt(ot.publicKey, ct, Mt, At.filter(ar)),
              privateKey: new Kt(ot.privateKey, ct, Mt, At.filter(sr))
            } : ot = new Kt(ot, ct, Mt, At), ot;
          }), ut;
        };
      }), [
        "exportKey",
        "wrapKey"
      ].forEach(function(Ut) {
        var xt = $[Ut];
        $[Ut] = function(tt, nt, it) {
          var at = [].slice.call(arguments);
          switch (Ut) {
            case "exportKey":
              at[1] = nt._key;
              break;
            case "wrapKey":
              at[1] = nt._key, at[2] = it._key;
              break;
          }
          if ((pt || st && (nt.algorithm.hash || {}).name === "SHA-1") && Ut === "exportKey" && tt === "jwk" && nt.algorithm.name === "HMAC" && (at[0] = "raw"), pt && Ut === "exportKey" && (tt === "spki" || tt === "pkcs8") && (at[0] = "jwk"), st && Ut === "wrapKey") return $.exportKey(tt, nt).then(function(Mt) {
            return tt === "jwk" && (Mt = St(unescape(encodeURIComponent(JSON.stringify(Pt(Mt)))))), $.encrypt(at[3], it, Mt);
          });
          var ct;
          try {
            ct = xt.apply($, at);
          } catch (Mt) {
            return Promise.reject(Mt);
          }
          return st && (ct = new Promise(function(Mt, At) {
            ct.onabort = ct.onerror = function(ut) {
              At(ut);
            }, ct.oncomplete = function(ut) {
              Mt(ut.target.result);
            };
          })), Ut === "exportKey" && tt === "jwk" && (ct = ct.then(function(Mt) {
            return (pt || st && (nt.algorithm.hash || {}).name === "SHA-1") && nt.algorithm.name === "HMAC" ? {
              kty: "oct",
              alg: Tt(nt.algorithm),
              key_ops: nt.usages.slice(),
              ext: true,
              k: Et($t(Mt))
            } : (Mt = Pt(Mt), Mt.alg || (Mt.alg = Tt(nt.algorithm)), Mt.key_ops || (Mt.key_ops = nt.type === "public" ? nt.usages.filter(ar) : nt.type === "private" ? nt.usages.filter(sr) : nt.usages.slice()), Mt);
          })), pt && Ut === "exportKey" && (tt === "spki" || tt === "pkcs8") && (ct = ct.then(function(Mt) {
            return Mt = Dt(Pt(Mt)), Mt;
          })), ct;
        };
      }), [
        "encrypt",
        "decrypt",
        "sign",
        "verify"
      ].forEach(function(Ut) {
        var xt = $[Ut];
        $[Ut] = function(tt, nt, it, at) {
          if (st && (!it.byteLength || at && !at.byteLength)) throw new Error("Empy input is not allowed");
          var ct = [].slice.call(arguments), Mt = kt(tt);
          if (st && Ut === "decrypt" && Mt.name === "AES-GCM") {
            var At = tt.tagLength >> 3;
            ct[2] = (it.buffer || it).slice(0, it.byteLength - At), tt.tag = (it.buffer || it).slice(it.byteLength - At);
          }
          ct[1] = nt._key;
          var ut;
          try {
            ut = xt.apply($, ct);
          } catch (ot) {
            return Promise.reject(ot);
          }
          return st && (ut = new Promise(function(ot, Ct) {
            ut.onabort = ut.onerror = function(Rt) {
              Ct(Rt);
            }, ut.oncomplete = function(Nt) {
              var Nt = Nt.target.result;
              if (Ut === "encrypt" && Nt instanceof AesGcmEncryptResult) {
                var Wt = Nt.ciphertext, Xt = Nt.tag;
                Nt = new Uint8Array(Wt.byteLength + Xt.byteLength), Nt.set(new Uint8Array(Wt), 0), Nt.set(new Uint8Array(Xt), Wt.byteLength), Nt = Nt.buffer;
              }
              ot(Nt);
            };
          })), ut;
        };
      }), st) {
        var er = $.digest;
        $.digest = function(Ut, xt) {
          if (!xt.byteLength) throw new Error("Empy input is not allowed");
          var tt;
          try {
            tt = er.call($, Ut, xt);
          } catch (nt) {
            return Promise.reject(nt);
          }
          return tt = new Promise(function(nt, it) {
            tt.onabort = tt.onerror = function(at) {
              it(at);
            }, tt.oncomplete = function(at) {
              nt(at.target.result);
            };
          }), tt;
        }, d.crypto = Object.create(_, {
          getRandomValues: {
            value: function(Ut) {
              return _.getRandomValues(Ut);
            }
          },
          subtle: {
            value: $
          }
        }), d.CryptoKey = Kt;
      }
      pt && (_.subtle = $, d.Crypto = j, d.SubtleCrypto = rt, d.CryptoKey = Kt);
    });
    const browser = window.crypto, browser$1 = Object.freeze(Object.defineProperty({
      __proto__: null,
      default: browser
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$3$1 = getAugmentedNamespace(browser$1), BN$n = bnExports$2, nacl$6 = naclFastExports, ethunit = lib, isCryptoAvailable = typeof self < "u" && self.crypto && self.crypto.subtle;
    let myCrypto = null;
    isCryptoAvailable || (myCrypto = require$$3$1);
    function sha256$3(d) {
      return isCryptoAvailable ? crypto.subtle.digest("SHA-256", d) : myCrypto.subtle.digest({
        name: "SHA-256"
      }, d);
    }
    function toNano$3(d) {
      if (!BN$n.isBN(d) && typeof d != "string") throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
      return ethunit.toWei(d, "gwei");
    }
    function fromNano$1(d) {
      if (!BN$n.isBN(d) && typeof d != "string") throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
      return ethunit.fromWei(d, "gwei");
    }
    const to_hex_array = [], to_byte_map = {};
    for (let d = 0; d <= 255; d++) {
      let _ = d.toString(16);
      _.length < 2 && (_ = "0" + _), to_hex_array.push(_), to_byte_map[_] = d;
    }
    function bytesToHex$f(d) {
      const _ = [];
      for (let $ = 0; $ < d.byteLength; $++) _.push(to_hex_array[d[$]]);
      return _.join("");
    }
    function hexToBytes$8(d) {
      d = d.toLowerCase();
      const _ = d.length;
      if (_ % 2 !== 0) throw "hex string must have length a multiple of 2";
      const $ = _ / 2, j = new Uint8Array($);
      for (let rt = 0; rt < $; rt++) {
        const et = rt * 2, st = d.substring(et, et + 2);
        if (!to_byte_map.hasOwnProperty(st)) throw new Error("invalid hex character " + st);
        j[rt] = to_byte_map[st];
      }
      return j;
    }
    function stringToBytes$4(d, _ = 1) {
      let $, j;
      _ === 1 && ($ = new ArrayBuffer(d.length), j = new Uint8Array($)), _ === 2 && ($ = new ArrayBuffer(d.length * 2), j = new Uint16Array($)), _ === 4 && ($ = new ArrayBuffer(d.length * 4), j = new Uint32Array($));
      for (let rt = 0, et = d.length; rt < et; rt++) j[rt] = d.charCodeAt(rt);
      return new Uint8Array(j.buffer);
    }
    function _crc32c(d, _) {
      d ^= 4294967295;
      for (let j = 0; j < _.length; j++) d ^= _[j], d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1, d = d & 1 ? d >>> 1 ^ 2197175160 : d >>> 1;
      return d ^ 4294967295;
    }
    function crc32c$2(d) {
      const _ = _crc32c(0, d), $ = new ArrayBuffer(4);
      return new DataView($).setUint32(0, _, false), new Uint8Array($).reverse();
    }
    function crc16$2(d) {
      let $ = 0;
      const j = new Uint8Array(d.length + 2);
      j.set(d);
      for (let rt of j) {
        let et = 128;
        for (; et > 0; ) $ <<= 1, rt & et && ($ += 1), et >>= 1, $ > 65535 && ($ &= 65535, $ ^= 4129);
      }
      return new Uint8Array([
        Math.floor($ / 256),
        $ % 256
      ]);
    }
    function concatBytes$2(d, _) {
      const $ = new Uint8Array(d.length + _.length);
      return $.set(d), $.set(_, d.length), $;
    }
    function compareBytes$2(d, _) {
      return d.toString() === _.toString();
    }
    const base64abc = (() => {
      const d = [];
      for (let rt = 0; rt < 26; ++rt) d.push(String.fromCharCode(65 + rt));
      for (let rt = 0; rt < 26; ++rt) d.push(String.fromCharCode(97 + rt));
      for (let rt = 0; rt < 10; ++rt) d.push(String.fromCharCode(48 + rt));
      return d.push("+"), d.push("/"), d;
    })();
    function bytesToBase64$8(d) {
      let _ = "", $;
      const j = d.length;
      for ($ = 2; $ < j; $ += 3) _ += base64abc[d[$ - 2] >> 2], _ += base64abc[(d[$ - 2] & 3) << 4 | d[$ - 1] >> 4], _ += base64abc[(d[$ - 1] & 15) << 2 | d[$] >> 6], _ += base64abc[d[$] & 63];
      return $ === j + 1 && (_ += base64abc[d[$ - 2] >> 2], _ += base64abc[(d[$ - 2] & 3) << 4], _ += "=="), $ === j && (_ += base64abc[d[$ - 2] >> 2], _ += base64abc[(d[$ - 2] & 3) << 4 | d[$ - 1] >> 4], _ += base64abc[(d[$ - 1] & 15) << 2], _ += "="), _;
    }
    function base64toString$2(d) {
      return typeof self > "u" ? Buffer.from(d, "base64").toString("binary") : atob(d);
    }
    function stringToBase64$2(d) {
      return typeof self > "u" ? Buffer.from(d, "binary").toString("base64") : btoa(d);
    }
    function base64ToBytes$4(d) {
      const _ = base64toString$2(d), $ = _.length, j = new Uint8Array($);
      for (let rt = 0; rt < $; rt++) j[rt] = _.charCodeAt(rt);
      return j;
    }
    function readNBytesUIntFromArray$2(d, _) {
      let $ = 0;
      for (let j = 0; j < d; j++) $ *= 256, $ += _[j];
      return $;
    }
    function keyPairFromSeed$1(d) {
      return nacl$6.sign.keyPair.fromSeed(d);
    }
    function newKeyPair$1() {
      return nacl$6.sign.keyPair();
    }
    function newSeed$1() {
      return nacl$6.sign.keyPair().secretKey.slice(0, 32);
    }
    var Utils = {
      BN: BN$n,
      nacl: nacl$6,
      sha256: sha256$3,
      fromNano: fromNano$1,
      toNano: toNano$3,
      bytesToHex: bytesToHex$f,
      hexToBytes: hexToBytes$8,
      stringToBytes: stringToBytes$4,
      crc32c: crc32c$2,
      crc16: crc16$2,
      concatBytes: concatBytes$2,
      bytesToBase64: bytesToBase64$8,
      base64ToBytes: base64ToBytes$4,
      base64toString: base64toString$2,
      stringToBase64: stringToBase64$2,
      compareBytes: compareBytes$2,
      readNBytesUIntFromArray: readNBytesUIntFromArray$2,
      keyPairFromSeed: keyPairFromSeed$1,
      newKeyPair: newKeyPair$1,
      newSeed: newSeed$1
    }, Address$l = {};
    const { crc16: crc16$1, hexToBytes: hexToBytes$7, bytesToHex: bytesToHex$e, stringToBytes: stringToBytes$3, base64toString: base64toString$1, stringToBase64: stringToBase64$1 } = Utils, bounceable_tag = 17, non_bounceable_tag = 81, test_flag = 128;
    function parseFriendlyAddress(d) {
      if (d.length !== 48) throw new Error("User-friendly address should contain strictly 48 characters");
      const _ = stringToBytes$3(base64toString$1(d));
      if (_.length !== 36) throw "Unknown address type: byte length is not equal to 36";
      const $ = _.slice(0, 34), j = _.slice(34, 36), rt = crc16$1($);
      if (!(rt[0] === j[0] && rt[1] === j[1])) throw "Wrong crc16 hashsum";
      let et = $[0], st = false, pt = false;
      if (et & test_flag && (st = true, et = et ^ test_flag), et !== bounceable_tag && et !== non_bounceable_tag) throw "Unknown address tag";
      pt = et === bounceable_tag;
      let Et = null;
      if ($[1] === 255 ? Et = -1 : Et = $[1], Et !== 0 && Et !== -1) throw new Error("Invalid address wc " + Et);
      const Bt = $.slice(2, 34);
      return {
        isTestOnly: st,
        isBounceable: pt,
        workchain: Et,
        hashPart: Bt
      };
    }
    let Address$k = class _i {
      static isValid(_) {
        try {
          return new _i(_), true;
        } catch {
          return false;
        }
      }
      constructor(_) {
        if (_ == null) throw "Invalid address";
        if (_ instanceof _i) {
          this.wc = _.wc, this.hashPart = _.hashPart, this.isTestOnly = _.isTestOnly, this.isUserFriendly = _.isUserFriendly, this.isBounceable = _.isBounceable, this.isUrlSafe = _.isUrlSafe;
          return;
        }
        if (this.isUrlSafe = true, _.search(/\-/) > 0 || _.search(/_/) > 0 ? _ = _.replace(/\-/g, "+").replace(/_/g, "/") : this.isUrlSafe = false, _.indexOf(":") > -1) {
          const $ = _.split(":");
          if ($.length !== 2) throw new Error("Invalid address " + _);
          const j = parseInt($[0]);
          if (j !== 0 && j !== -1) throw new Error("Invalid address wc " + _);
          const rt = $[1];
          if (rt.length !== 64) throw new Error("Invalid address hex " + _);
          this.isUserFriendly = false, this.wc = j, this.hashPart = hexToBytes$7(rt), this.isTestOnly = false, this.isBounceable = false;
        } else {
          this.isUserFriendly = true;
          const $ = parseFriendlyAddress(_);
          this.wc = $.workchain, this.hashPart = $.hashPart, this.isTestOnly = $.isTestOnly, this.isBounceable = $.isBounceable;
        }
      }
      toString(_, $, j, rt) {
        if (_ === void 0 && (_ = this.isUserFriendly), $ === void 0 && ($ = this.isUrlSafe), j === void 0 && (j = this.isBounceable), rt === void 0 && (rt = this.isTestOnly), _) {
          let et = j ? bounceable_tag : non_bounceable_tag;
          rt && (et |= test_flag);
          const st = new Int8Array(34);
          st[0] = et, st[1] = this.wc, st.set(this.hashPart, 2);
          const pt = new Uint8Array(36);
          pt.set(st), pt.set(crc16$1(st), 34);
          let Et = stringToBase64$1(String.fromCharCode.apply(null, new Uint8Array(pt)));
          return $ && (Et = Et.replace(/\+/g, "-").replace(/\//g, "_")), Et;
        } else return this.wc + ":" + bytesToHex$e(this.hashPart);
      }
    };
    Address$l.default = Address$k;
    var AdnlAddress$3 = {};
    const { hexToBytes: hexToBytes$6, bytesToHex: bytesToHex$d } = Utils;
    let AdnlAddress$2 = class eo {
      static isValid(_) {
        try {
          return new eo(_), true;
        } catch {
          return false;
        }
      }
      constructor(_) {
        if (_ == null) throw "Invalid address";
        if (_ instanceof eo) this.bytes = _.bytes;
        else if (_ instanceof Uint8Array) {
          if (_.length !== 32) throw new Error("invalid adnl bytes length");
          this.bytes = _;
        } else if (typeof _ == "string") {
          if (_.length !== 64) throw new Error("invalid adnl hex length");
          this.bytes = hexToBytes$6(_);
        } else throw new Error("unsupported type");
      }
      toHex() {
        let _ = bytesToHex$d(this.bytes);
        for (; _.length < 64; ) _ = "0" + _;
        return _;
      }
    };
    AdnlAddress$3.default = AdnlAddress$2;
    var StorageBagId$3 = {};
    const { hexToBytes: hexToBytes$5, bytesToHex: bytesToHex$c } = Utils;
    let StorageBagId$2 = class to {
      static isValid(_) {
        try {
          return new to(_), true;
        } catch {
          return false;
        }
      }
      constructor(_) {
        if (_ == null) throw "Invalid address";
        if (_ instanceof to) this.bytes = _.bytes;
        else if (_ instanceof Uint8Array) {
          if (_.length !== 32) throw new Error("invalid bag id bytes length");
          this.bytes = _;
        } else if (typeof _ == "string") {
          if (_.length !== 64) throw new Error("invalid bag id hex length");
          this.bytes = hexToBytes$5(_);
        } else throw new Error("unsupported type");
      }
      toHex() {
        let _ = bytesToHex$c(this.bytes);
        for (; _.length < 64; ) _ = "0" + _;
        return _;
      }
    };
    StorageBagId$3.default = StorageBagId$2;
    const { BN: BN$m, nacl: nacl$5, sha256: sha256$2, fromNano, toNano: toNano$2, bytesToHex: bytesToHex$b, hexToBytes: hexToBytes$4, stringToBytes: stringToBytes$2, crc32c: crc32c$1, crc16, concatBytes: concatBytes$1, bytesToBase64: bytesToBase64$7, base64ToBytes: base64ToBytes$3, base64toString, stringToBase64, compareBytes: compareBytes$1, readNBytesUIntFromArray: readNBytesUIntFromArray$1, keyPairFromSeed, newKeyPair, newSeed } = Utils, Address$j = Address$l.default, AdnlAddress$1 = AdnlAddress$3.default, StorageBagId$1 = StorageBagId$3.default;
    function parseTransferUrl(d) {
      const _ = "ton://transfer/";
      if (!d.startsWith(_)) throw new Error("must starts with " + _);
      const $ = d.substring(_.length).split("?");
      if ($.length > 2) throw new Error('multiple "?"');
      const j = $[0];
      if (!Address$j.isValid(j)) throw new Error("invalid address format " + j);
      const rt = {
        address: j
      }, et = $[1];
      if (et && et.length) {
        const st = et.split("&").map((pt) => pt.split("="));
        for (const pt of st) {
          if (pt.length !== 2) throw new Error("invalid url pair");
          const Et = pt[0], Bt = pt[1];
          if (Et === "amount") {
            if (rt.amount) throw new Error("amount already set");
            if (new BN$m(Bt).isNeg()) throw new Error("negative amount");
            rt.amount = Bt;
          } else if (Et === "text") {
            if (rt.text) throw new Error("text already set");
            rt.text = decodeURIComponent(Bt);
          } else throw new Error("unknown url var " + Et);
        }
      }
      return rt;
    }
    function formatTransferUrl(d, _, $) {
      let j = "ton://transfer/" + d;
      const rt = [];
      return _ && rt.push("amount=" + _), $ && rt.push("text=" + encodeURIComponent($)), rt.length === 0 ? j : j + "?" + rt.join("&");
    }
    var utils$1 = {
      Address: Address$j,
      AdnlAddress: AdnlAddress$1,
      StorageBagId: StorageBagId$1,
      BN: BN$m,
      nacl: nacl$5,
      sha256: sha256$2,
      fromNano,
      toNano: toNano$2,
      bytesToHex: bytesToHex$b,
      hexToBytes: hexToBytes$4,
      stringToBytes: stringToBytes$2,
      crc32c: crc32c$1,
      crc16,
      concatBytes: concatBytes$1,
      bytesToBase64: bytesToBase64$7,
      base64ToBytes: base64ToBytes$3,
      base64toString,
      stringToBase64,
      compareBytes: compareBytes$1,
      readNBytesUIntFromArray: readNBytesUIntFromArray$1,
      parseTransferUrl,
      formatTransferUrl,
      keyPairFromSeed,
      newKeyPair,
      newSeed
    };
    const { BN: BN$l, bytesToHex: bytesToHex$a } = utils$1;
    let BitString$3 = class ao {
      constructor(_) {
        this.array = Uint8Array.from({
          length: Math.ceil(_ / 8)
        }, () => 0), this.cursor = 0, this.length = _;
      }
      getFreeBits() {
        return this.length - this.cursor;
      }
      getUsedBits() {
        return this.cursor;
      }
      getUsedBytes() {
        return Math.ceil(this.cursor / 8);
      }
      get(_) {
        return (this.array[_ / 8 | 0] & 1 << 7 - _ % 8) > 0;
      }
      checkRange(_) {
        if (_ > this.length) throw Error("BitString overflow");
      }
      on(_) {
        this.checkRange(_), this.array[_ / 8 | 0] |= 1 << 7 - _ % 8;
      }
      off(_) {
        this.checkRange(_), this.array[_ / 8 | 0] &= ~(1 << 7 - _ % 8);
      }
      toggle(_) {
        this.checkRange(_), this.array[_ / 8 | 0] ^= 1 << 7 - _ % 8;
      }
      forEach(_) {
        const $ = this.cursor;
        for (let j = 0; j < $; j++) _(this.get(j));
      }
      writeBit(_) {
        _ && _ > 0 ? this.on(this.cursor) : this.off(this.cursor), this.cursor = this.cursor + 1;
      }
      writeBitArray(_) {
        for (let $ = 0; $ < _.length; $++) this.writeBit(_[$]);
      }
      writeUint(_, $) {
        if (isNaN(_)) throw new Error("writeUint: value is NaN");
        if (_ === null) throw new Error("writeUint: value is null");
        if (_ === void 0) throw new Error("writeUint: value is undefined");
        if (!$) throw new Error("writeUint: no bitLength");
        if (_ = new BN$l(_), $ == 0 || _.toString(2).length > $) {
          if (_ == 0) return;
          throw Error("bitLength is too small for number, got number=" + _ + ",bitLength=" + $);
        }
        const j = _.toString(2, $);
        for (let rt = 0; rt < $; rt++) this.writeBit(j[rt] == 1);
      }
      writeInt(_, $) {
        if (isNaN(_)) throw new Error("writeInt: value is NaN");
        if (_ === null) throw new Error("writeInt: value is null");
        if (_ === void 0) throw new Error("writeInt: value is undefined");
        if (!$) throw new Error("writeInt: no bitLength");
        if (_ = new BN$l(_), $ == 1) {
          if (_ == -1) {
            this.writeBit(true);
            return;
          }
          if (_ == 0) {
            this.writeBit(false);
            return;
          }
          throw Error("Bitlength is too small for number");
        } else if (_.isNeg()) {
          this.writeBit(true);
          const rt = new BN$l(2).pow(new BN$l($ - 1));
          this.writeUint(rt.add(_), $ - 1);
        } else this.writeBit(false), this.writeUint(_, $ - 1);
      }
      writeUint8(_) {
        this.writeUint(_, 8);
      }
      writeBytes(_) {
        for (let $ = 0; $ < _.length; $++) this.writeUint8(_[$]);
      }
      writeString(_) {
        this.writeBytes(new TextEncoder().encode(_));
      }
      writeGrams(_) {
        if (_ == 0) this.writeUint(0, 4);
        else {
          _ = new BN$l(_);
          const $ = Math.ceil(_.toString(16).length / 2);
          this.writeUint($, 4), this.writeUint(_, $ * 8);
        }
      }
      writeCoins(_) {
        this.writeGrams(_);
      }
      writeAddress(_) {
        _ == null ? this.writeUint(0, 2) : (this.writeUint(2, 2), this.writeUint(0, 1), this.writeInt(_.wc, 8), this.writeBytes(_.hashPart));
      }
      writeBitString(_) {
        _.forEach(($) => {
          this.writeBit($);
        });
      }
      clone() {
        const _ = new ao(0);
        return _.array = this.array.slice(0), _.length = this.length, _.cursor = this.cursor, _;
      }
      toString() {
        return this.toHex();
      }
      getTopUppedArray() {
        const _ = this.clone();
        let $ = Math.ceil(_.cursor / 8) * 8 - _.cursor;
        if ($ > 0) for ($ = $ - 1, _.writeBit(true); $ > 0; ) $ = $ - 1, _.writeBit(false);
        return _.array = _.array.slice(0, Math.ceil(_.cursor / 8)), _.array;
      }
      toHex() {
        if (this.cursor % 4 === 0) {
          const _ = bytesToHex$a(this.array.slice(0, Math.ceil(this.cursor / 8))).toUpperCase();
          return this.cursor % 8 === 0 ? _ : _.substr(0, _.length - 1);
        } else {
          const _ = this.clone();
          for (_.writeBit(1); _.cursor % 4 !== 0; ) _.writeBit(0);
          return _.toHex().toUpperCase() + "_";
        }
      }
      setTopUppedArray(_, $ = true) {
        if (this.length = _.length * 8, this.array = _, this.cursor = this.length, !($ || !this.length)) {
          let j = false;
          for (let rt = 0; rt < 7; rt++) if (this.cursor -= 1, this.get(this.cursor)) {
            j = true, this.off(this.cursor);
            break;
          }
          if (!j) throw console.log(_, $), new Error("Incorrect TopUppedArray");
        }
      }
    };
    var BitString_1 = {
      BitString: BitString$3
    };
    const { BN: BN$k, Address: Address$i, bytesToHex: bytesToHex$9 } = utils$1, { BitString: BitString$2 } = BitString_1;
    let Slice$2 = class {
      constructor(_, $, j) {
        this.array = _, this.length = $, this.readCursor = 0, this.refs = j, this.refCursor = 0;
      }
      getFreeBits() {
        return this.length - this.readCursor;
      }
      checkRange(_) {
        if (_ > this.length) throw Error("BitString overflow");
      }
      get(_) {
        return this.checkRange(_), (this.array[_ / 8 | 0] & 1 << 7 - _ % 8) > 0;
      }
      loadBit() {
        const _ = this.get(this.readCursor);
        return this.readCursor++, _;
      }
      loadBits(_) {
        const $ = new BitString$2(_);
        for (let j = 0; j < _; j++) $.writeBit(this.loadBit());
        return $.array;
      }
      loadUint(_) {
        if (_ < 1) throw "Incorrect bitLength";
        let $ = "";
        for (let j = 0; j < _; j++) $ += this.loadBit() ? "1" : "0";
        return new BN$k($, 2);
      }
      loadInt(_) {
        if (_ < 1) throw "Incorrect bitLength";
        const $ = this.loadBit();
        if (_ === 1) return $ ? new BN$k(-1) : new BN$k(0);
        let j = this.loadUint(_ - 1);
        if ($) {
          const et = new BN$k(2).pow(new BN$k(_ - 1));
          j = j.sub(et);
        }
        return j;
      }
      loadVarUint(_) {
        const $ = this.loadUint(new BN$k(_).toString(2).length - 1);
        return $.toNumber() === 0 ? new BN$k(0) : this.loadUint($ * 8);
      }
      loadCoins() {
        return this.loadVarUint(16);
      }
      loadAddress() {
        const _ = this.loadUint(2);
        if (_.toNumber() === 0) return null;
        if (_.toNumber() !== 2) throw new Error("unsupported address type");
        if (this.loadBit()) throw new Error("unsupported address type");
        const $ = this.loadInt(8).toNumber(), j = this.loadBits(256);
        return new Address$i($ + ":" + bytesToHex$9(j));
      }
      loadRef() {
        if (this.refCursor >= 4) throw new Error("refs overflow");
        const _ = this.refs[this.refCursor];
        return this.refCursor++, _;
      }
    };
    var Slice_1 = {
      Slice: Slice$2
    };
    const { BitString: BitString$1 } = BitString_1, { bytesToBase64: bytesToBase64$6, compareBytes, concatBytes, crc32c, hexToBytes: hexToBytes$3, readNBytesUIntFromArray, sha256: sha256$1, bytesToHex: bytesToHex$8 } = utils$1, { Slice: Slice$1 } = Slice_1, reachBocMagicPrefix = hexToBytes$3("B5EE9C72"), leanBocMagicPrefix = hexToBytes$3("68ff65f3"), leanBocMagicPrefixCRC = hexToBytes$3("acc3a728");
    let Cell$t = class {
      constructor() {
        this.bits = new BitString$1(1023), this.refs = [], this.isExotic = false;
      }
      static fromBoc(_) {
        return deserializeBoc(_);
      }
      static oneFromBoc(_) {
        const $ = deserializeBoc(_);
        if ($.length !== 1) throw new Error("expected 1 root cell but have " + $.length);
        return $[0];
      }
      writeCell(_) {
        this.bits.writeBitString(_.bits), this.refs = this.refs.concat(_.refs);
      }
      getMaxLevel() {
        let _ = 0;
        for (let $ in this.refs) {
          const j = this.refs[$];
          j.getMaxLevel() > _ && (_ = j.getMaxLevel());
        }
        return _;
      }
      isExplicitlyStoredHashes() {
        return 0;
      }
      getMaxDepth() {
        let _ = 0;
        if (this.refs.length > 0) {
          for (let $ = 0; $ < this.refs.length; $++) {
            let rt = this.refs[$].getMaxDepth();
            rt > _ && (_ = rt);
          }
          _ = _ + 1;
        }
        return _;
      }
      getMaxDepthAsArray() {
        const _ = this.getMaxDepth(), $ = Uint8Array.from({
          length: 2
        }, () => 0);
        return $[1] = _ % 256, $[0] = Math.floor(_ / 256), $;
      }
      getRefsDescriptor() {
        const _ = Uint8Array.from({
          length: 1
        }, () => 0);
        return _[0] = this.refs.length + this.isExotic * 8 + this.getMaxLevel() * 32, _;
      }
      getBitsDescriptor() {
        const _ = Uint8Array.from({
          length: 1
        }, () => 0);
        return _[0] = Math.ceil(this.bits.cursor / 8) + Math.floor(this.bits.cursor / 8), _;
      }
      getDataWithDescriptors() {
        const _ = this.getRefsDescriptor(), $ = this.getBitsDescriptor(), j = this.bits.getTopUppedArray();
        return concatBytes(concatBytes(_, $), j);
      }
      async getRepr() {
        const _ = [];
        _.push(this.getDataWithDescriptors());
        for (let j in this.refs) {
          const rt = this.refs[j];
          _.push(rt.getMaxDepthAsArray());
        }
        for (let j in this.refs) {
          const rt = this.refs[j];
          _.push(await rt.hash());
        }
        let $ = new Uint8Array();
        for (let j in _) {
          const rt = _[j];
          $ = concatBytes($, rt);
        }
        return $;
      }
      async hash() {
        return new Uint8Array(await sha256$1(await this.getRepr()));
      }
      beginParse() {
        const _ = this.refs.map(($) => $.beginParse());
        return new Slice$1(this.bits.array.slice(), this.bits.length, _);
      }
      print(_) {
        _ = _ || "";
        let $ = _ + "x{" + this.bits.toHex() + `}
`;
        for (let j in this.refs) {
          const rt = this.refs[j];
          $ += rt.print(_ + " ");
        }
        return $;
      }
      async toBoc(_ = true, $ = true, j = false, rt = 0) {
        const st = await this.treeWalk(), pt = st[0], Et = st[1], Bt = pt.length, St = Bt.toString(2).length, $t = Math.min(Math.ceil(St / 8), 1);
        let kt = 0, Tt = [];
        for (let Ot of pt) Tt.push(kt), kt = kt + await Ot[1].bocSerializationSize(Et, $t);
        const Pt = kt.toString(2).length, It = Math.max(Math.ceil(Pt / 8), 1), jt = new BitString$1((1023 + 32 * 4 + 32 * 3) * pt.length);
        jt.writeBytes(reachBocMagicPrefix), jt.writeBitArray([
          _,
          $,
          j
        ]), jt.writeUint(rt, 2), jt.writeUint($t, 3), jt.writeUint8(It), jt.writeUint(Bt, $t * 8), jt.writeUint(1, $t * 8), jt.writeUint(0, $t * 8), jt.writeUint(kt, It * 8), jt.writeUint(0, $t * 8), _ && pt.forEach((Ot, Ft) => jt.writeUint(Tt[Ft], It * 8));
        for (let Ot of pt) {
          const Ft = await Ot[1].serializeForBoc(Et, $t);
          jt.writeBytes(Ft);
        }
        let Dt = jt.getTopUppedArray();
        return $ && (Dt = concatBytes(Dt, crc32c(Dt))), Dt;
      }
      async serializeForBoc(_, $) {
        const j = [];
        if (j.push(this.getDataWithDescriptors()), this.isExplicitlyStoredHashes()) throw new Error("Cell hashes explicit storing is not implemented");
        for (let et in this.refs) {
          const pt = await this.refs[et].hash();
          let Bt = _[pt].toString(16);
          Bt.length % 2 && (Bt = "0" + Bt);
          const St = hexToBytes$3(Bt);
          j.push(St);
        }
        let rt = new Uint8Array();
        for (let et in j) {
          const st = j[et];
          rt = concatBytes(rt, st);
        }
        return rt;
      }
      async bocSerializationSize(_, $) {
        return (await this.serializeForBoc(_, $)).length;
      }
      async treeWalk() {
        return treeWalk(this, [], {});
      }
    };
    async function moveToTheEnd(d, _, $) {
      const j = d[$];
      for (let et in d) d[et] > j && (d[et] = d[et] - 1);
      d[$] = _.length - 1;
      const rt = _.splice(j, 1)[0];
      _.push(rt);
      for (let et of rt[1].refs) await moveToTheEnd(d, _, await et.hash());
    }
    async function treeWalk(d, _, $, j = null) {
      const rt = await d.hash();
      if (rt in $) return j && $[j] > $[rt] && await moveToTheEnd($, _, rt), [
        _,
        $
      ];
      $[rt] = _.length, _.push([
        rt,
        d
      ]);
      for (let et of d.refs) {
        const st = await treeWalk(et, _, $, rt);
        _ = st[0], $ = st[1];
      }
      return [
        _,
        $
      ];
    }
    function parseBocHeader(d) {
      if (d.length < 5) throw "Not enough bytes for magic prefix";
      const _ = d, $ = d.slice(0, 4);
      d = d.slice(4);
      let j, rt, et, st, pt;
      if (compareBytes($, reachBocMagicPrefix)) {
        const jt = d[0];
        j = jt & 128, rt = jt & 64, et = jt & 32, st = (jt & 16) * 2 + (jt & 8), pt = jt % 8;
      }
      if (compareBytes($, leanBocMagicPrefix) && (j = 1, rt = 0, et = 0, st = 0, pt = d[0]), compareBytes($, leanBocMagicPrefixCRC) && (j = 1, rt = 1, et = 0, st = 0, pt = d[0]), d = d.slice(1), d.length < 1 + 5 * pt) throw "Not enough bytes for encoding cells counters";
      const Et = d[0];
      d = d.slice(1);
      const Bt = readNBytesUIntFromArray(pt, d);
      d = d.slice(pt);
      const St = readNBytesUIntFromArray(pt, d);
      d = d.slice(pt);
      const $t = readNBytesUIntFromArray(pt, d);
      d = d.slice(pt);
      const kt = readNBytesUIntFromArray(Et, d);
      if (d = d.slice(Et), d.length < St * pt) throw "Not enough bytes for encoding root cells hashes";
      let Tt = [];
      for (let jt = 0; jt < St; jt++) Tt.push(readNBytesUIntFromArray(pt, d)), d = d.slice(pt);
      let Pt = false;
      if (j) {
        if (Pt = [], d.length < Et * Bt) throw "Not enough bytes for index encoding";
        for (let jt = 0; jt < Bt; jt++) Pt.push(readNBytesUIntFromArray(Et, d)), d = d.slice(Et);
      }
      if (d.length < kt) throw "Not enough bytes for cells data";
      const It = d.slice(0, kt);
      if (d = d.slice(kt), rt) {
        if (d.length < 4) throw "Not enough bytes for crc32c hashsum";
        const jt = _.length;
        if (!compareBytes(crc32c(_.slice(0, jt - 4)), d.slice(0, 4))) throw "Crc32c hashsum mismatch";
        d = d.slice(4);
      }
      if (d.length) throw "Too much bytes in BoC serialization";
      return {
        has_idx: j,
        hash_crc32: rt,
        has_cache_bits: et,
        flags: st,
        size_bytes: pt,
        off_bytes: Et,
        cells_num: Bt,
        roots_num: St,
        absent_num: $t,
        tot_cells_size: kt,
        root_list: Tt,
        index: Pt,
        cells_data: It
      };
    }
    function deserializeCellData(d, _) {
      if (d.length < 2) throw "Not enough bytes to encode cell descriptors";
      const $ = d[0], j = d[1];
      d = d.slice(2);
      const rt = $ & 8, et = $ % 8, st = Math.ceil(j / 2), pt = !(j % 2);
      let Et = new Cell$t();
      if (Et.isExotic = rt, d.length < st + _ * et) throw "Not enough bytes to encode cell data";
      Et.bits.setTopUppedArray(d.slice(0, st), pt), d = d.slice(st);
      for (let Bt = 0; Bt < et; Bt++) Et.refs.push(readNBytesUIntFromArray(_, d)), d = d.slice(_);
      return {
        cell: Et,
        residue: d
      };
    }
    function deserializeBoc(d) {
      typeof d == "string" && (d = hexToBytes$3(d));
      const _ = parseBocHeader(d);
      let $ = _.cells_data, j = [];
      for (let et = 0; et < _.cells_num; et++) {
        let st = deserializeCellData($, _.size_bytes);
        $ = st.residue, j.push(st.cell);
      }
      for (let et = _.cells_num - 1; et >= 0; et--) {
        let st = j[et];
        for (let pt = 0; pt < st.refs.length; pt++) {
          const Et = st.refs[pt];
          if (Et < et) throw "Topological order is broken";
          st.refs[pt] = j[Et];
        }
      }
      let rt = [];
      for (let et of _.root_list) rt.push(j[et]);
      return rt;
    }
    var Cell_1 = {
      Cell: Cell$t
    };
    const { BitString } = BitString_1, { Cell: Cell$s } = Cell_1, { Slice } = Slice_1;
    var boc$1 = {
      BitString,
      Cell: Cell$s,
      Slice
    };
    const { Cell: Cell$r } = boc$1, { Address: Address$h, bytesToBase64: bytesToBase64$5, bytesToHex: bytesToHex$7, BN: BN$j } = utils$1;
    let Contract$i = class Xn {
      constructor(_, $) {
        this.provider = _, this.options = $, this.address = $.address ? new Address$h($.address) : null, $.wc || ($.wc = this.address ? this.address.wc : 0), this.methods = {};
      }
      async getAddress() {
        return this.address || (this.address = (await this.createStateInit()).address), this.address;
      }
      createCodeCell() {
        if (!this.options.code) throw new Error("Contract: options.code is not defined");
        return this.options.code;
      }
      createDataCell() {
        return new Cell$r();
      }
      async createStateInit() {
        const _ = this.createCodeCell(), $ = this.createDataCell(), j = Xn.createStateInit(_, $), rt = await j.hash(), et = new Address$h(this.options.wc + ":" + bytesToHex$7(rt));
        return {
          stateInit: j,
          address: et,
          code: _,
          data: $
        };
      }
      static createStateInit(_, $, j = null, rt = null, et = null) {
        if (j) throw "Library in state init is not implemented";
        if (rt) throw "Split depth in state init is not implemented";
        if (et) throw "Ticktock in state init is not implemented";
        const st = new Cell$r();
        return st.bits.writeBitArray([
          !!rt,
          !!et,
          !!_,
          !!$,
          !!j
        ]), _ && st.refs.push(_), $ && st.refs.push($), j && st.refs.push(j), st;
      }
      static createInternalMessageHeader(_, $ = 0, j = true, rt = null, et = false, st = null, pt = null, Et = 0, Bt = 0, St = 0, $t = 0) {
        const kt = new Cell$r();
        if (kt.bits.writeBit(false), kt.bits.writeBit(j), rt !== null ? kt.bits.writeBit(rt) : kt.bits.writeBit(new Address$h(_).isBounceable), kt.bits.writeBit(et), kt.bits.writeAddress(st ? new Address$h(st) : null), kt.bits.writeAddress(new Address$h(_)), kt.bits.writeGrams($), pt) throw "Currency collections are not implemented yet";
        return kt.bits.writeBit(!!pt), kt.bits.writeGrams(Et), kt.bits.writeGrams(Bt), kt.bits.writeUint(St, 64), kt.bits.writeUint($t, 32), kt;
      }
      static createExternalMessageHeader(_, $ = null, j = 0) {
        const rt = new Cell$r();
        return rt.bits.writeUint(2, 2), rt.bits.writeAddress($ ? new Address$h($) : null), rt.bits.writeAddress(new Address$h(_)), rt.bits.writeGrams(j), rt;
      }
      static createOutMsg(_, $, j, rt = null) {
        let et = new Cell$r();
        j && (j.refs ? et = j : typeof j == "string" ? j.length > 0 && (et.bits.writeUint(0, 32), et.bits.writeString(j)) : et.bits.writeBytes(j));
        const st = Xn.createInternalMessageHeader(new Address$h(_), new BN$j($));
        return Xn.createCommonMsgInfo(st, rt, et);
      }
      static createCommonMsgInfo(_, $ = null, j = null) {
        const rt = new Cell$r();
        return rt.writeCell(_), $ ? (rt.bits.writeBit(true), rt.bits.writeBit(true), rt.refs.push($)) : rt.bits.writeBit(false), j ? rt.bits.getFreeBits() >= j.bits.getUsedBits() && rt.refs.length + j.refs.length <= 4 ? (rt.bits.writeBit(false), rt.writeCell(j)) : (rt.bits.writeBit(true), rt.refs.push(j)) : rt.bits.writeBit(false), rt;
      }
      static createMethod(_, $) {
        return {
          getBody: async () => (await $).body,
          getQuery: async () => (await $).message,
          send: async () => {
            const j = await $, rt = bytesToBase64$5(await j.message.toBoc(false));
            return _.sendBoc(rt);
          },
          estimateFee: async () => {
            const j = await $, rt = j.code ? {
              address: j.address.toString(true, true, false),
              body: bytesToBase64$5(await j.body.toBoc(false)),
              init_code: bytesToBase64$5(await j.code.toBoc(false)),
              init_data: bytesToBase64$5(await j.data.toBoc(false))
            } : {
              address: j.address.toString(true, true, true),
              body: bytesToBase64$5(await j.body.toBoc(false))
            };
            return _.getEstimateFee(rt);
          }
        };
      }
    };
    var contract = {
      Contract: Contract$i
    };
    const { Cell: Cell$q } = boc$1, { Address: Address$g, BN: BN$i, bytesToHex: bytesToHex$6 } = utils$1, { Contract: Contract$h } = contract;
    let AppTon$1 = class {
      constructor(_, $) {
        this.transport = _, this.ton = $, this.ADDRESS_FORMAT_HEX = 0, this.ADDRESS_FORMAT_USER_FRIENDLY = 1, this.ADDRESS_FORMAT_URL_SAFE = 2, this.ADDRESS_FORMAT_BOUNCEABLE = 4, this.ADDRESS_FORMAT_TEST_ONLY = 8;
      }
      async getAppConfiguration() {
        const _ = await this.transport.send(224, 1, 0, 0);
        return {
          version: "" + _[0] + "." + _[1] + "." + _[2]
        };
      }
      async getPublicKey(_, $) {
        const j = Buffer.alloc(4);
        j.writeInt32BE(_);
        const rt = await this.transport.send(224, 2, $ ? 1 : 0, 0, j), et = rt[0];
        return {
          publicKey: new Uint8Array(rt.slice(1, 1 + et))
        };
      }
      async getAddress(_, $, j) {
        const rt = Buffer.alloc(4);
        rt.writeInt32BE(_);
        const et = await this.transport.send(224, 5, $ ? 1 : 0, j, rt), st = et[0], pt = new Uint8Array(et.slice(1, 1 + st));
        return {
          address: new Address$g("0:" + bytesToHex$6(pt))
        };
      }
      async sign(_, $) {
        const j = Buffer.alloc(4);
        j.writeInt32BE(_);
        const rt = Buffer.concat([
          j,
          Buffer.from($)
        ]), et = await this.transport.send(224, 3, 0, 0, rt), st = et[0];
        return {
          signature: et.slice(1, 1 + st)
        };
      }
      async transfer(_, $, j, rt, et, st) {
        const Et = await $.createTransferMessage(null, j, rt, et, null, 3, true), Bt = Buffer.alloc(4);
        Bt.writeInt32BE(_);
        const St = Buffer.concat([
          Bt,
          Buffer.from(await Et.signingMessage.toBoc())
        ]), $t = await this.transport.send(224, 4, st, 0, St), kt = $t[0], Tt = $t.slice(1, 1 + kt), Pt = new Uint8Array(Tt), It = new Cell$q();
        It.bits.writeBytes(Pt), It.writeCell(Et.signingMessage);
        let jt = null, Dt = null, Ot = null;
        if (et === 0) {
          const ar = await $.createStateInit();
          jt = ar.stateInit, Dt = ar.code, Ot = ar.data;
        }
        const Ft = await $.getAddress(), Lt = Contract$h.createExternalMessageHeader(Ft), Zt = Contract$h.createCommonMsgInfo(Lt, jt, It), Kt = new Promise((ar) => {
          ar({
            address: Ft,
            message: Zt,
            body: It,
            signature: Pt,
            signingMessage: Et.signingMessage,
            stateInit: jt,
            code: Dt,
            data: Ot
          });
        });
        return Contract$h.createMethod(this.ton.provider, Kt);
      }
    };
    var AppTon_1 = AppTon$1, providers = {}, HttpProviderUtils$2 = {};
    const { BN: BN$h, base64ToBytes: base64ToBytes$2 } = utils$1, { Cell: Cell$p } = boc$1;
    let HttpProviderUtils$1 = class Gn {
      static parseObject(_) {
        const $ = _["@type"];
        switch ($) {
          case "tvm.list":
          case "tvm.tuple":
            return _.elements.map(Gn.parseObject);
          case "tvm.cell":
            return Cell$p.oneFromBoc(base64ToBytes$2(_.bytes));
          case "tvm.stackEntryCell":
            return Gn.parseObject(_.cell);
          case "tvm.stackEntryTuple":
            return Gn.parseObject(_.tuple);
          case "tvm.stackEntryNumber":
            return Gn.parseObject(_.number);
          case "tvm.numberDecimal":
            return new BN$h(_.number, 10);
          default:
            throw new Error("unknown type " + $);
        }
      }
      static parseResponseStack(_) {
        const $ = _[0], j = _[1];
        switch ($) {
          case "num":
            return new BN$h(j.replace(/0x/, ""), 16);
          case "list":
          case "tuple":
            return Gn.parseObject(j);
          case "cell":
            const rt = base64ToBytes$2(j.bytes);
            return Cell$p.oneFromBoc(rt);
          default:
            throw new Error("unknown type " + $);
        }
      }
      static parseResponse(_) {
        if (_.exit_code !== 0) {
          const j = new Error("http provider parse response error");
          throw j.result = _, j;
        }
        const $ = _.stack.map(Gn.parseResponseStack);
        return $.length === 1 ? $[0] : $;
      }
      static makeArg(_) {
        if (_ instanceof BN$h || _ instanceof Number) return [
          "num",
          _
        ];
        throw new Error("unknown arg type " + _);
      }
      static makeArgs(_) {
        return _.map(this.makeArg);
      }
    };
    HttpProviderUtils$2.default = HttpProviderUtils$1;
    const __viteBrowserExternal = {}, __viteBrowserExternal$1 = Object.freeze(Object.defineProperty({
      __proto__: null,
      default: __viteBrowserExternal
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$3 = getAugmentedNamespace(__viteBrowserExternal$1), { Cell: Cell$o } = boc$1, { base64ToBytes: base64ToBytes$1 } = utils$1, HttpProviderUtils = HttpProviderUtils$2.default;
    typeof fetch > "u" && (fetch = require$$3);
    const SHARD_ID_ALL = "-9223372036854775808";
    let HttpProvider$1 = class {
      constructor(_, $) {
        this.host = _ || "https://toncenter.com/api/v2/jsonRPC", this.options = $ || {};
      }
      sendImpl(_, $) {
        const j = {
          "Content-Type": "application/json"
        };
        return this.options.apiKey && (j["X-API-Key"] = this.options.apiKey), fetch(_, {
          method: "POST",
          headers: j,
          body: JSON.stringify($)
        }).then((rt) => rt.json()).then(({ result: rt, error: et }) => rt || Promise.reject(et));
      }
      send(_, $) {
        return this.sendImpl(this.host, {
          id: 1,
          jsonrpc: "2.0",
          method: _,
          params: $
        });
      }
      async getAddressInfo(_) {
        return this.send("getAddressInformation", {
          address: _
        });
      }
      async getExtendedAddressInfo(_) {
        return this.send("getExtendedAddressInformation", {
          address: _
        });
      }
      async getWalletInfo(_) {
        return this.send("getWalletInformation", {
          address: _
        });
      }
      async getTransactions(_, $ = 20, j = void 0, rt = void 0, et = void 0, st = void 0) {
        return this.send("getTransactions", {
          address: _,
          limit: $,
          lt: j,
          hash: rt,
          to_lt: et,
          archival: st
        });
      }
      async getBalance(_) {
        return this.send("getAddressBalance", {
          address: _
        });
      }
      async sendBoc(_) {
        return this.send("sendBoc", {
          boc: _
        });
      }
      async sendQuery(_) {
        return this.send("sendQuerySimple", _);
      }
      async getEstimateFee(_) {
        return this.send("estimateFee", _);
      }
      async call(_, $, j = []) {
        return this.send("runGetMethod", {
          address: _,
          method: $,
          stack: j
        });
      }
      async call2(_, $, j = []) {
        const rt = await this.send("runGetMethod", {
          address: _,
          method: $,
          stack: j
        });
        return HttpProviderUtils.parseResponse(rt);
      }
      async getConfigParam(_) {
        const $ = await this.send("getConfigParam", {
          config_id: _
        });
        if ($["@type"] !== "configInfo") throw new Error("getConfigParam expected type configInfo");
        if (!$.config) throw new Error("getConfigParam expected config");
        if ($.config["@type"] !== "tvm.cell") throw new Error("getConfigParam expected type tvm.cell");
        if (!$.config.bytes) throw new Error("getConfigParam expected bytes");
        return Cell$o.oneFromBoc(base64ToBytes$1($.config.bytes));
      }
      async getMasterchainInfo() {
        return this.send("getMasterchainInfo", {});
      }
      async getBlockShards(_) {
        return this.send("shards", {
          seqno: _
        });
      }
      async getBlockTransactions(_, $, j, rt, et, st) {
        return this.send("getBlockTransactions", {
          workchain: _,
          shard: $,
          seqno: j,
          count: rt,
          after_lt: et,
          after_hash: st
        });
      }
      async getMasterchainBlockTransactions(_, $, j, rt) {
        return this.getBlockTransactions(-1, SHARD_ID_ALL, _, $, j, rt);
      }
      async getBlockHeader(_, $, j) {
        return this.send("getBlockHeader", {
          workchain: _,
          shard: $,
          seqno: j
        });
      }
      async getMasterchainBlockHeader(_) {
        return this.getBlockHeader(-1, SHARD_ID_ALL, _);
      }
    };
    HttpProvider$1.SHARD_ID_ALL = SHARD_ID_ALL;
    providers.default = HttpProvider$1;
    var wallet = {};
    const { Contract: Contract$g } = contract, { Cell: Cell$n } = boc$1, { nacl: nacl$4, stringToBytes: stringToBytes$1, Address: Address$f, BN: BN$g } = utils$1;
    let WalletContract$7 = class extends Contract$g {
      constructor(_, $) {
        if (!$.publicKey && !$.address) throw new Error("WalletContract required publicKey or address in options");
        super(_, $), this.methods = {
          transfer: (j) => Contract$g.createMethod(_, this.createTransferMessage(j.secretKey, j.toAddress, j.amount, j.seqno, j.payload, j.sendMode, !j.secretKey, j.stateInit, j.expireAt)),
          transfers: (j) => Contract$g.createMethod(_, this.createTransferMessages(j.secretKey, j.seqno, j.messages, !j.secretKey, j.expireAt)),
          seqno: () => ({
            call: async () => {
              const j = await this.getAddress();
              let rt = null;
              try {
                rt = (await _.call2(j.toString(), "seqno")).toNumber();
              } catch {
              }
              return rt;
            }
          })
        }, this.deploy = (j) => Contract$g.createMethod(_, this.createInitExternalMessage(j));
      }
      getName() {
        throw new Error("override me");
      }
      createDataCell() {
        const _ = new Cell$n();
        return _.bits.writeUint(0, 32), _.bits.writeBytes(this.options.publicKey), _;
      }
      createSigningMessage(_) {
        _ = _ || 0;
        const $ = new Cell$n();
        return $.bits.writeUint(_, 32), $;
      }
      async createInitExternalMessage(_) {
        if (!this.options.publicKey) {
          const $t = nacl$4.sign.keyPair.fromSecretKey(_);
          this.options.publicKey = $t.publicKey;
        }
        const { stateInit: $, address: j, code: rt, data: et } = await this.createStateInit(), st = this.createSigningMessage(), pt = nacl$4.sign.detached(await st.hash(), _), Et = new Cell$n();
        Et.bits.writeBytes(pt), Et.writeCell(st);
        const Bt = Contract$g.createExternalMessageHeader(j), St = Contract$g.createCommonMsgInfo(Bt, $, Et);
        return {
          address: j,
          message: St,
          body: Et,
          signingMessage: st,
          stateInit: $,
          code: rt,
          data: et
        };
      }
      async createExternalMessage(_, $, j, rt = false) {
        const et = rt ? new Uint8Array(64) : nacl$4.sign.detached(await _.hash(), $), st = new Cell$n();
        st.bits.writeBytes(et), st.writeCell(_);
        let pt = null, Et = null, Bt = null;
        if (j === 0) {
          if (!this.options.publicKey) {
            const Pt = nacl$4.sign.keyPair.fromSecretKey($);
            this.options.publicKey = Pt.publicKey;
          }
          const Tt = await this.createStateInit();
          pt = Tt.stateInit, Et = Tt.code, Bt = Tt.data;
        }
        const St = await this.getAddress(), $t = Contract$g.createExternalMessageHeader(St), kt = Contract$g.createCommonMsgInfo($t, pt, st);
        return {
          address: St,
          message: kt,
          body: st,
          signature: et,
          signingMessage: _,
          stateInit: pt,
          code: Et,
          data: Bt
        };
      }
      async createTransferMessage(_, $, j, rt, et = "", st = 3, pt = false, Et = null, Bt = void 0) {
        if (rt == null || rt < 0) throw new Error("seqno must be number >= 0");
        const St = this.createSigningMessage(rt, Bt);
        return st == null && (st = 3), St.bits.writeUint8(st), St.refs.push(Contract$g.createOutMsg($, j, et, Et)), this.createExternalMessage(St, _, rt, pt);
      }
      async createTransferMessages(_, $, j, rt = false, et = void 0) {
        if ($ == null || $ < 0) throw new Error("seqno must be number >= 0");
        const st = this.createSigningMessage($, et);
        if (j.length < 1 || j.length > 4) throw new Error("put 1-4 messages");
        for (const pt of j) {
          let Et = pt.sendMode;
          Et == null && (Et = 3), st.bits.writeUint8(Et), st.refs.push(Contract$g.createOutMsg(pt.toAddress, pt.amount, pt.payload, pt.stateInit));
        }
        return this.createExternalMessage(st, _, $, rt);
      }
    };
    var WalletContract_1 = {
      WalletContract: WalletContract$7
    };
    const { Cell: Cell$m } = boc$1, { WalletContract: WalletContract$6 } = WalletContract_1;
    let SimpleWalletContractR1$1 = class extends WalletContract$6 {
      constructor(_, $) {
        $.code = Cell$m.oneFromBoc("B5EE9C72410101010044000084FF0020DDA4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED5441FDF089"), super(_, $);
      }
      getName() {
        return "simpleR1";
      }
    }, SimpleWalletContractR2$1 = class extends WalletContract$6 {
      constructor(_, $) {
        $.code = Cell$m.oneFromBoc("B5EE9C724101010100530000A2FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54D0E2786F"), super(_, $);
      }
      getName() {
        return "simpleR2";
      }
    }, SimpleWalletContractR3$1 = class extends WalletContract$6 {
      constructor(_, $) {
        $.code = Cell$m.oneFromBoc("B5EE9C7241010101005F0000BAFF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54B5B86E42"), super(_, $);
      }
      getName() {
        return "simpleR3";
      }
    };
    var WalletContractSimple = {
      SimpleWalletContractR1: SimpleWalletContractR1$1,
      SimpleWalletContractR2: SimpleWalletContractR2$1,
      SimpleWalletContractR3: SimpleWalletContractR3$1
    };
    const { Cell: Cell$l } = boc$1, { WalletContract: WalletContract$5 } = WalletContract_1;
    class WalletV2ContractBase extends WalletContract$5 {
      createSigningMessage(_, $) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const j = new Cell$l();
        if (j.bits.writeUint(_, 32), _ === 0) for (let rt = 0; rt < 32; rt++) j.bits.writeBit(1);
        else j.bits.writeUint($, 32);
        return j;
      }
    }
    let WalletV2ContractR1$1 = class extends WalletV2ContractBase {
      constructor(_, $) {
        $.code = Cell$l.oneFromBoc("B5EE9C724101010100570000AAFF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54A1370BB6"), super(_, $);
      }
      getName() {
        return "v2R1";
      }
    }, WalletV2ContractR2$1 = class extends WalletV2ContractBase {
      constructor(_, $) {
        $.code = Cell$l.oneFromBoc("B5EE9C724101010100630000C2FF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54044CD7A1"), super(_, $);
      }
      getName() {
        return "v2R2";
      }
    };
    var WalletContractV2 = {
      WalletV2ContractR1: WalletV2ContractR1$1,
      WalletV2ContractR2: WalletV2ContractR2$1
    };
    const { BN: BN$f } = utils$1;
    function parseWalletV3TransferBody$3(d) {
      if (d.loadBits(512), d.loadUint(32).toNumber() !== 698983191) throw new Error("invalid walletId");
      const $ = d.loadUint(32).toNumber(), j = d.loadUint(32).toNumber();
      if (d.loadUint(8).toNumber() !== 3) throw new Error("invalid sendMode");
      let et = d.loadRef();
      if (et.loadBit()) throw Error("invalid internal header");
      if (!et.loadBit()) throw Error("invalid ihrDisabled");
      const st = et.loadBit();
      if (et.loadBit()) throw Error("invalid bounced");
      if (et.loadAddress() !== null) throw Error("invalid externalSourceAddress");
      const Et = et.loadAddress(), Bt = et.loadCoins();
      if (et.loadBit()) throw Error("invalid currencyCollection");
      if (!et.loadCoins().eq(new BN$f(0))) throw new Error("invalid ihrFees");
      if (!et.loadCoins().eq(new BN$f(0))) throw new Error("invalid fwdFees");
      if (!et.loadUint(64).eq(new BN$f(0))) throw new Error("invalid createdLt");
      if (!et.loadUint(32).eq(new BN$f(0))) throw new Error("invalid createdAt");
      et.loadBit() && et.loadRef();
      let Pt = null;
      if (et.getFreeBits() > 0 && (et.loadBit() && (et = et.loadRef()), et.getFreeBits() > 32)) {
        const It = et.loadUint(32), jt = et.loadBits(et.getFreeBits());
        Pt = It.eq(new BN$f(0)) ? new TextDecoder().decode(jt) : "";
      }
      return {
        toAddress: Et,
        value: Bt,
        bounce: st,
        seqno: j,
        expireAt: $,
        payload: Pt
      };
    }
    function parseWalletV3TransferQuery$3(d) {
      const _ = d.beginParse();
      if (_.loadUint(2).toNumber() !== 2) throw Error("invalid header");
      if (_.loadAddress() !== null) throw Error("invalid externalSourceAddress");
      const j = _.loadAddress();
      if (!_.loadCoins().eq(new BN$f(0))) throw new Error("invalid externalImportFee");
      _.loadBit() && _.loadBit() && _.loadRef();
      const et = _.loadBit() ? _.loadRef() : _;
      return {
        fromAddress: j,
        ...parseWalletV3TransferBody$3(et)
      };
    }
    var WalletQueryParser = {
      parseWalletV3TransferQuery: parseWalletV3TransferQuery$3,
      parseWalletV3TransferBody: parseWalletV3TransferBody$3
    };
    const { Cell: Cell$k } = boc$1, { WalletContract: WalletContract$4 } = WalletContract_1, { parseWalletV3TransferQuery: parseWalletV3TransferQuery$2, parseWalletV3TransferBody: parseWalletV3TransferBody$2 } = WalletQueryParser;
    class WalletV3ContractBase extends WalletContract$4 {
      createSigningMessage(_, $) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const j = new Cell$k();
        if (j.bits.writeUint(this.options.walletId, 32), _ === 0) for (let rt = 0; rt < 32; rt++) j.bits.writeBit(1);
        else j.bits.writeUint($, 32);
        return j.bits.writeUint(_, 32), j;
      }
      createDataCell() {
        const _ = new Cell$k();
        return _.bits.writeUint(0, 32), _.bits.writeUint(this.options.walletId, 32), _.bits.writeBytes(this.options.publicKey), _;
      }
    }
    let WalletV3ContractR1$1 = class extends WalletV3ContractBase {
      constructor(_, $) {
        $.code = Cell$k.oneFromBoc("B5EE9C724101010100620000C0FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED543FBE6EE0"), super(_, $), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc);
      }
      getName() {
        return "v3R1";
      }
    };
    WalletV3ContractR1$1.parseTransferQuery = parseWalletV3TransferQuery$2;
    WalletV3ContractR1$1.parseTransferBody = parseWalletV3TransferBody$2;
    let WalletV3ContractR2$1 = class extends WalletV3ContractBase {
      constructor(_, $) {
        $.code = Cell$k.oneFromBoc("B5EE9C724101010100710000DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5410BD6DAD"), super(_, $), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc);
      }
      getName() {
        return "v3R2";
      }
    };
    WalletV3ContractR2$1.parseTransferQuery = parseWalletV3TransferQuery$2;
    WalletV3ContractR2$1.parseTransferBody = parseWalletV3TransferBody$2;
    var WalletContractV3 = {
      WalletV3ContractR1: WalletV3ContractR1$1,
      WalletV3ContractR2: WalletV3ContractR2$1
    };
    const { Cell: Cell$j } = boc$1, { Contract: Contract$f } = contract, { Address: Address$e, bytesToHex: bytesToHex$5, BN: BN$e } = utils$1, { WalletContract: WalletContract$3 } = WalletContract_1, { parseWalletV3TransferQuery: parseWalletV3TransferQuery$1, parseWalletV3TransferBody: parseWalletV3TransferBody$1 } = WalletQueryParser;
    let WalletV4ContractR1$1 = class extends WalletContract$3 {
      constructor(_, $) {
        $.code = Cell$j.oneFromBocsuper(_, $), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this);
      }
      getName() {
        return "v4R1";
      }
      createSigningMessage(_, $, j) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const rt = new Cell$j();
        if (rt.bits.writeUint(this.options.walletId, 32), _ === 0) for (let et = 0; et < 32; et++) rt.bits.writeBit(1);
        else rt.bits.writeUint($, 32);
        return rt.bits.writeUint(_, 32), j || rt.bits.writeUint(0, 8), rt;
      }
      createDataCell() {
        const _ = new Cell$j();
        return _.bits.writeUint(0, 32), _.bits.writeUint(this.options.walletId, 32), _.bits.writeBytes(this.options.publicKey), _.bits.writeUint(0, 1), _;
      }
      async getPublicKey() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_public_key");
      }
    };
    WalletV4ContractR1$1.parseTransferQuery = parseWalletV3TransferQuery$1;
    WalletV4ContractR1$1.parseTransferBody = parseWalletV3TransferBody$1;
    var WalletContractV4 = {
      WalletV4ContractR1: WalletV4ContractR1$1
    };
    const { Cell: Cell$i } = boc$1, { Contract: Contract$e } = contract, { Address: Address$d, bytesToHex: bytesToHex$4, BN: BN$d, toNano: toNano$1 } = utils$1, { WalletContract: WalletContract$2 } = WalletContract_1, { parseWalletV3TransferQuery, parseWalletV3TransferBody } = WalletQueryParser;
    let WalletV4ContractR2$1 = class extends WalletContract$2 {
      constructor(_, $) {
        $.code = Cell$i.oneFromBocsuper(_, $), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc), this.methods.deployAndInstallPlugin = (j) => Contract$e.createMethod(_, this.deployAndInstallPlugin(j)), this.methods.installPlugin = (j) => Contract$e.createMethod(_, this.installPlugin(j)), this.methods.removePlugin = (j) => Contract$e.createMethod(_, this.removePlugin(j)), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.isPluginInstalled = this.isPluginInstalled.bind(this), this.methods.getPluginsList = this.getPluginsList.bind(this);
      }
      getName() {
        return "v4R2";
      }
      createSigningMessage(_, $, j) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const rt = new Cell$i();
        if (rt.bits.writeUint(this.options.walletId, 32), _ === 0) for (let et = 0; et < 32; et++) rt.bits.writeBit(1);
        else rt.bits.writeUint($, 32);
        return rt.bits.writeUint(_, 32), j || rt.bits.writeUint(0, 8), rt;
      }
      createDataCell() {
        const _ = new Cell$i();
        return _.bits.writeUint(0, 32), _.bits.writeUint(this.options.walletId, 32), _.bits.writeBytes(this.options.publicKey), _.bits.writeUint(0, 1), _;
      }
      async deployAndInstallPlugin(_) {
        const { secretKey: $, seqno: j, pluginWc: rt, amount: et, stateInit: st, body: pt, expireAt: Et } = _, Bt = this.createSigningMessage(j, Et, true);
        return Bt.bits.writeUint(1, 8), Bt.bits.writeInt(rt, 8), Bt.bits.writeGrams(et), Bt.refs.push(st), Bt.refs.push(pt), this.createExternalMessage(Bt, $, j, false);
      }
      async _setPlugin(_, $) {
        const { secretKey: j, seqno: rt, amount: et, queryId: st, expireAt: pt } = _, Et = new Address$d(_.pluginAddress), Bt = this.createSigningMessage(rt, pt, true);
        return Bt.bits.writeUint($ ? 2 : 3, 8), Bt.bits.writeInt(Et.wc, 8), Bt.bits.writeBytes(Et.hashPart), Bt.bits.writeGrams(et || toNano$1("0.1")), Bt.bits.writeUint(st || 0, 64), this.createExternalMessage(Bt, j, rt, false);
      }
      async installPlugin(_) {
        return this._setPlugin(_, true);
      }
      async removePlugin(_) {
        return this._setPlugin(_, false);
      }
      async getWalletId() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_subwallet_id")).toNumber();
      }
      async getPublicKey() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_public_key");
      }
      async isPluginInstalled(_) {
        _ = new Address$d(_);
        const $ = "0x" + bytesToHex$4(_.hashPart), j = await this.getAddress();
        return !(await this.provider.call2(j.toString(), "is_plugin_installed", [
          [
            "num",
            _.wc
          ],
          [
            "num",
            $
          ]
        ])).isZero();
      }
      async getPluginsList() {
        const _ = (rt) => rt[0].toNumber() + ":" + rt[1].toString(16), $ = await this.getAddress();
        return (await this.provider.call2($.toString(), "get_plugin_list")).map(_);
      }
    };
    WalletV4ContractR2$1.parseTransferQuery = parseWalletV3TransferQuery;
    WalletV4ContractR2$1.parseTransferBody = parseWalletV3TransferBody;
    var WalletContractV4R2 = {
      WalletV4ContractR2: WalletV4ContractR2$1
    };
    const { Cell: Cell$h } = boc$1, { Address: Address$c, BN: BN$c, toNano, bytesToHex: bytesToHex$3, hexToBytes: hexToBytes$2, nacl: nacl$3, stringToBytes, bytesToBase64: bytesToBase64$4 } = utils$1, { Contract: Contract$d } = contract, { SimpleWalletContractR1, SimpleWalletContractR2, SimpleWalletContractR3 } = WalletContractSimple, { WalletV2ContractR1, WalletV2ContractR2 } = WalletContractV2, { WalletV3ContractR1, WalletV3ContractR2 } = WalletContractV3, { WalletV4ContractR1 } = WalletContractV4, { WalletV4ContractR2 } = WalletContractV4R2, ALL = {
      simpleR1: SimpleWalletContractR1,
      simpleR2: SimpleWalletContractR2,
      simpleR3: SimpleWalletContractR3,
      v2R1: WalletV2ContractR1,
      v2R2: WalletV2ContractR2,
      v3R1: WalletV3ContractR1,
      v3R2: WalletV3ContractR2,
      v4R1: WalletV4ContractR1,
      v4R2: WalletV4ContractR2
    }, LIST = [
      SimpleWalletContractR1,
      SimpleWalletContractR2,
      SimpleWalletContractR3,
      WalletV2ContractR1,
      WalletV2ContractR2,
      WalletV3ContractR1,
      WalletV3ContractR2,
      WalletV4ContractR1,
      WalletV4ContractR2
    ];
    let Wallets$1 = class {
      constructor(_) {
        this.provider = _, this.all = ALL, this.list = LIST, this.defaultVersion = "v3R1", this.default = this.all[this.defaultVersion];
      }
      create(_) {
        return new this.default(this.provider, _);
      }
    };
    Wallets$1.all = ALL;
    Wallets$1.list = LIST;
    wallet.default = Wallets$1;
    var lockup = {};
    const { Cell: Cell$g } = boc$1, { Address: Address$b, BN: BN$b, base64ToBytes } = utils$1, { WalletContract: WalletContract$1 } = WalletContract_1, WALLET_ID_BASE$1 = 698983191;
    let LockupWalletV1$1 = class extends WalletContract$1 {
      constructor(_, $) {
        $.code = Cell$g.oneFromBocsuper(_, $), this.options.walletId || (this.options.walletId = WALLET_ID_BASE$1 + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLiquidBalance = this.getLiquidBalance.bind(this), this.methods.getNominalRestrictedBalance = this.getNominalRestrictedBalance.bind(this), this.methods.getNominalLockedBalance = this.getNominalLockedBalance.bind(this);
      }
      getName() {
        return "lockup-0.1";
      }
      createSigningMessage(_, $, j) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const rt = new Cell$g();
        if (rt.bits.writeUint(this.options.walletId, 32), _ === 0) for (let et = 0; et < 32; et++) rt.bits.writeBit(1);
        else rt.bits.writeUint($, 32);
        return rt.bits.writeUint(_, 32), rt;
      }
      createDataCell() {
        const _ = new Cell$g();
        return _.bits.writeUint(0, 32), _.bits.writeUint(this.options.walletId, 32), _.bits.writeBytes(this.options.publicKey), _.bits.writeBytes(base64ToBytes(this.options.config.config_public_key)), this.options.config.allowed_destinations ? (_.bits.writeUint(1, 1), _.refs.push(Cell$g.oneFromBoc(base64ToBytes(this.options.config.allowed_destinations)))) : _.bits.writeUint(0, 1), _.bits.writeGrams(0), _.bits.writeUint(0, 1), _.bits.writeGrams(0), _.bits.writeUint(0, 1), _;
      }
      async getWalletId() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_subwallet_id")).toNumber();
      }
      async getPublicKey() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_public_key");
      }
      async getLiquidBalance() {
        const _ = await this.getBalances();
        return _[0] - _[1] - _[2];
      }
      async getNominalRestrictedBalance() {
        return await this.getBalances()[1];
      }
      async getNominalLockedBalance() {
        return await this.getBalances()[2];
      }
      async getBalances() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_balances");
      }
    };
    LockupWalletV1$1.WALLET_ID_BASE = WALLET_ID_BASE$1;
    var LockupWalletV1_1 = {
      LockupWalletV1: LockupWalletV1$1
    };
    const { Address: Address$a } = utils$1, { Cell: Cell$f } = boc$1, OFFCHAIN_CONTENT_PREFIX = 1, serializeUri$1 = (d) => new TextEncoder().encode(encodeURI(d)), parseUri = (d) => new TextDecoder().decode(d), createOffchainUriCell$2 = (d) => {
      const _ = new Cell$f();
      return _.bits.writeUint(OFFCHAIN_CONTENT_PREFIX, 8), _.bits.writeBytes(serializeUri$1(d)), _;
    }, parseOffchainUriCell$4 = (d) => {
      if (d.bits.array[0] !== OFFCHAIN_CONTENT_PREFIX) throw new Error("no OFFCHAIN_CONTENT_PREFIX");
      let _ = 0, $ = d;
      for (; $; ) _ += $.bits.array.length, $ = $.refs[0];
      const j = new Uint8Array(_);
      for (_ = 0, $ = d; $; ) j.set($.bits.array, _), _ += $.bits.array.length, $ = $.refs[0];
      return parseUri(j.slice(1));
    }, readIntFromBitString = (d, _, $) => {
      let j = BigInt(0);
      for (let rt = 0; rt < $; rt++) j *= BigInt(2), j += BigInt(d.get(_ + rt));
      return j;
    }, parseAddress$b = (d) => {
      let _ = readIntFromBitString(d.bits, 3, 8);
      _ > BigInt(127) && (_ = _ - BigInt(256));
      const $ = readIntFromBitString(d.bits, 11, 256);
      if (_.toString(10) + ":" + $.toString(16) == "0:0") return null;
      const j = _.toString(10) + ":" + $.toString(16).padStart(64, "0");
      return new Address$a(j);
    }, getRoyaltyParams$2 = async (d, _) => {
      const $ = await d.call2(_, "royalty_params"), j = $[0].toNumber(), rt = $[1].toNumber(), et = j / rt, st = parseAddress$b($[2]);
      return {
        royalty: et,
        royaltyBase: rt,
        royaltyFactor: j,
        royaltyAddress: st
      };
    };
    var NftUtils = {
      parseAddress: parseAddress$b,
      serializeUri: serializeUri$1,
      createOffchainUriCell: createOffchainUriCell$2,
      parseOffchainUriCell: parseOffchainUriCell$4,
      getRoyaltyParams: getRoyaltyParams$2
    };
    const { Cell: Cell$e } = boc$1, { Address: Address$9, BN: BN$a, bytesToHex: bytesToHex$2 } = utils$1, { WalletContract } = WalletContract_1, { parseAddress: parseAddress$a } = NftUtils, { Contract: Contract$c } = contract, WALLET_ID_BASE = 268, CODE_HEX$1 = "b5ee9c7241021c010003fb000114ff00f4a413f4bcf2c80b01020120030203b8f28308d71820d31fd31fd31f02f823bbf264ed44d0d31fd31fd3ff305abaf2a15033baf2a202f9014033f910f2a3f800db3c20d74ac0018e99ed44ed45ed47915bed67ed65ed648e82db3ced41edf101f2ff9130e2f841a4f861db3c1b1413020148110402012008050201200706020db9846db3cdb3c81b1a0129ba462db3cf845f846f847f848f849f84af84bf84481b0201200e090201620d0a02016a0c0b012fa2c76cf3e9100723281f2fff2743e112040423d029be84c61b000fa25fb513435c2c7e014bad346d9e36fc22470d4080847a4937d29910ce6903e9ff9837812801b7810148987159f318401b02016e100f0019af1df6a26840106b90eb858fc00019adce76a26840206b90eb85ffc003acd06c2220d749c160915be001d0d3030171b0915be0fa4030db3c01d31fd33ff84b5240c705238210a7733acdbab08ea46c12db3c8210f7733acd01708018c8cb055004cf1623fa0213cb6acb1fcb3fc98040fb00e30e1b141201cef84a5240c7050382107258a69bba13b08ed18e2c01fa407fc8ca0002fa4401c8ca07cbffc9d0f8441023810108f441f86420d74ac200209501d430d001deb312e68210f258a69b32708018c8cb055004cf1623fa0213cb6acb1fcb3fc98040fb00db3c925f03e2130066f848f847f846f845c8cb3fcb1fcb1fcb1ff849fa02f84acf16f84bcf16c9f844f843f842f841c8cb1fcb1fcbfff400ccc9ed54025cd307d4d1f823db3c20c2008e9b22c003f2e06421d0d303fa4031fa40f84a5220c705b3925f04e30d9130e201fb001a1503fa21fa4401c8ca07cbffc9d0f844810108f40a6fa1318f5f330172b0c002f2e06501fa003171d721fa0031fa0031d33f31d31f31d30001c000f2e066d3000193d430d0de2171db3c8e2a31d31f302082104e73744bba21821047657424bab121821056744370bab1018210566f7465bab1f2e067e30e70925f03e220c200191716000e9372fb029130e202ea0170db3c8e6d20d749c2008e63d31f21c00022830bbab122811001bab122821047d54391bab1228210595f07bcbab122821069fb306cbab1228210566f7465bab122821056744370bab1f2e06701c00021d749c200b08e15d3073020c06421c077b121c044b101c057b1f2e0689130e29130e2e30d1918001ad31f308210566f7465baf2e067004401fa4401c3ff925b70e001f833206e925b70e0d020d7498307b9925b70e0d70bffba0060f845f846a05210bc923070e0f845f848a05210b99330f849e0f849f849f84513a1f847a904f846f847a9041023a984a1007eed44d0d31f01f861d31f01f862d3ff01f863f40401f864d401d0d33f01f865d31f01f866d31f01f867d31f01f868fa0001f869fa4001f86afa4001f86bd1d10a20c6a7";
    let VestingWalletV1$1 = class extends WalletContract {
      constructor(_, $) {
        $.code = Cell$e.oneFromBoc(CODE_HEX$1), super(_, $), this.options.walletId || (this.options.walletId = WALLET_ID_BASE + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLockedAmount = this.getLockedAmount.bind(this), this.methods.getVestingData = this.getVestingData.bind(this), this.methods.getWhitelist = this.getWhitelist.bind(this);
      }
      getName() {
        return "vesting-1";
      }
      createSigningMessage(_, $, j) {
        _ = _ || 0, $ = $ || Math.floor(Date.now() / 1e3) + 60;
        const rt = new Cell$e();
        if (rt.bits.writeUint(this.options.walletId, 32), _ === 0) for (let et = 0; et < 32; et++) rt.bits.writeBit(1);
        else rt.bits.writeUint($, 32);
        return rt.bits.writeUint(_, 32), rt;
      }
      createDataCell() {
        if (this.options.walletId !== 0 && !this.options.walletId) throw new Error("no walletId");
        if (!this.options.publicKey) throw new Error("no publicKey");
        if (!(this.options.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
        if (this.options.vestingStartTime !== 0 && !this.options.vestingStartTime) throw new Error("no vestingStartTime");
        if (this.options.vestingTotalDuration <= 0) throw new Error("vestingTotalDuration cant be zero or negative");
        if (!this.options.vestingTotalDuration) throw new Error("no vestingTotalDuration");
        if (this.options.vestingTotalDuration > 2 ** 32 - 1) throw new Error("vestingTotalDuration > 2^32 - 1");
        if (this.options.unlockPeriod <= 0) throw new Error("unlockPeriod cant be zero or negative");
        if (!this.options.unlockPeriod) throw new Error("no unlockPeriod");
        if (this.options.unlockPeriod > this.options.vestingTotalDuration) throw new Error("unlockPeriod > vestingTotalDuration");
        if (this.options.cliffDuration !== 0 && !this.options.cliffDuration) throw new Error("no cliffDuration");
        if (this.options.cliffDuration < 0) throw new Error("cliffDuration cant be negative");
        if (this.options.cliffDuration >= this.options.vestingTotalDuration) throw new Error("cliffDuration >= vestingTotalDuration");
        if (!new BN$a(this.options.vestingTotalDuration).div(new BN$a(this.options.unlockPeriod)).mul(new BN$a(this.options.unlockPeriod)).eq(new BN$a(this.options.vestingTotalDuration))) throw new Error("vestingTotalDuration mod unlockPeriod != 0");
        if (!new BN$a(this.options.cliffDuration).div(new BN$a(this.options.unlockPeriod)).mul(new BN$a(this.options.unlockPeriod)).eq(new BN$a(this.options.cliffDuration))) throw new Error("cliffDuration mod unlockPeriod != 0");
        if (!this.options.vestingTotalAmount) throw new Error("no vestingTotalAmount");
        if (!this.options.vestingTotalAmount.gt(new BN$a(0))) throw new Error("vestingTotalAmount cant be zero");
        if (!this.options.vestingSenderAddress) throw new Error("no vestingSenderAddress");
        if (!(this.options.vestingSenderAddress instanceof Address$9)) throw new Error("vestingSenderAddress not Address");
        if (!this.options.ownerAddress) throw new Error("no ownerAddress");
        if (!(this.options.ownerAddress instanceof Address$9)) throw new Error("ownerAddress not Address");
        const j = new Cell$e();
        j.bits.writeUint(0, 32), j.bits.writeUint(this.options.walletId, 32), j.bits.writeUint(new BN$a(bytesToHex$2(this.options.publicKey), 16), 256), j.bits.writeBit(false);
        const rt = new Cell$e();
        return rt.bits.writeUint(this.options.vestingStartTime, 64), rt.bits.writeUint(this.options.vestingTotalDuration, 32), rt.bits.writeUint(this.options.unlockPeriod, 32), rt.bits.writeUint(this.options.cliffDuration, 32), rt.bits.writeCoins(this.options.vestingTotalAmount), rt.bits.writeAddress(new Address$9(this.options.vestingSenderAddress)), rt.bits.writeAddress(new Address$9(this.options.ownerAddress)), j.refs[0] = rt, j;
      }
      createAddWhitelistBody(_) {
        const { addresses: $, queryId: j } = _, rt = new Cell$e();
        rt.bits.writeUint(1918412443, 32), rt.bits.writeUint(j || 0, 64), rt.bits.writeAddress($[0]);
        let et = null;
        for (let st = $.length - 1; st >= 1; st--) {
          const pt = new Cell$e();
          pt.bits.writeAddress($[st]), et && (pt.refs[0] = et), et = pt;
        }
        return et && (rt.refs[0] = et), rt;
      }
      createInternalTransfer(_) {
        const $ = new Cell$e();
        return $.bits.writeUint(2809346765, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeUint8(_.sendMode || 3), $.refs.push(Contract$c.createOutMsg(_.address, _.amount, _.payload)), $;
      }
      async getPublicKey() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_public_key");
      }
      async getWalletId() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_subwallet_id");
      }
      async getLockedAmount(_) {
        const $ = await this.getAddress();
        return this.provider.call2($.toString(), "get_locked_amount", [
          [
            "num",
            _
          ]
        ]);
      }
      async getVestingData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_vesting_data"), j = $[0].toNumber(), rt = $[1].toNumber(), et = $[2].toNumber(), st = $[3].toNumber(), pt = $[4], Et = parseAddress$a($[5]), Bt = parseAddress$a($[6]), St = $[7];
        return {
          vestingStartTime: j,
          vestingTotalDuration: rt,
          unlockPeriod: et,
          cliffDuration: st,
          vestingTotalAmount: pt,
          vestingSenderAddress: Et,
          ownerAddress: Bt,
          whitelistCell: St
        };
      }
      async getWhitelist() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_whitelist"), j = [];
        for (const rt of $) {
          if (rt.length !== 2) throw new Error("invalid whitelist result");
          const et = rt[0], st = rt[1], pt = new Address$9(et.toString(10) + ":" + st.toString(16).padStart(64, "0"));
          j.push(pt);
        }
        return j;
      }
    };
    VestingWalletV1$1.WALLET_ID_BASE = WALLET_ID_BASE;
    VestingWalletV1$1.codeHex = CODE_HEX$1;
    var VestingWalletV1_1 = {
      VestingWalletV1: VestingWalletV1$1
    };
    const { LockupWalletV1 } = LockupWalletV1_1, { VestingWalletV1 } = VestingWalletV1_1;
    lockup.default = {
      LockupWalletV1,
      VestingWalletV1,
      all: {
        "lockup-0.1": LockupWalletV1,
        "vesting-1": VestingWalletV1
      },
      list: [
        LockupWalletV1,
        VestingWalletV1
      ]
    };
    var highloadWallet = {};
    const { Cell: Cell$d } = boc$1, { Contract: Contract$b } = contract, { Address: Address$8, BN: BN$9, nacl: nacl$2 } = utils$1, CODE_HEX = "b5ee9c7241021001000228000114ff00f4a413f4bcf2c80b01020120020d02014803040078d020d74bc00101c060b0915be101d0d3030171b0915be0fa4030f828c705b39130e0d31f018210ae42e5a4ba9d8040d721d74cf82a01ed55fb04e030020120050a02027306070011adce76a2686b85ffc00201200809001aabb6ed44d0810122d721d70b3f0018aa3bed44d08307d721d70b1f0201200b0c001bb9a6eed44d0810162d721d70b15800e5b8bf2eda2edfb21ab09028409b0ed44d0810120d721f404f404d33fd315d1058e1bf82325a15210b99f326df82305aa0015a112b992306dde923033e2923033e25230800df40f6fa19ed021d721d70a00955f037fdb31e09130e259800df40f6fa19cd001d721d70a00937fdb31e0915be270801f6f2d48308d718d121f900ed44d0d3ffd31ff404f404d33fd315d1f82321a15220b98e12336df82324aa00a112b9926d32de58f82301de541675f910f2a106d0d31fd4d307d30cd309d33fd315d15168baf2a2515abaf2a6f8232aa15250bcf2a304f823bbf2a35304800df40f6fa199d024d721d70a00f2649130e20e01fe5309800df40f6fa18e13d05004d718d20001f264c858cf16cf8301cf168e1030c824cf40cf8384095005a1a514cf40e2f800c94039800df41704c8cbff13cb1ff40012f40012cb3f12cb15c9ed54f80f21d0d30001f265d3020171b0925f03e0fa4001d70b01c000f2a5fa4031fa0031f401fa0031fa00318060d721d300010f0020f265d2000193d431d19130e272b1fb00b585bf03", HIGHLOAD_WALLET_SUBWALLET_ID = 4269, checkTimeout = (d) => {
      if (!d) throw new Error("invalid timeout");
      if (d < 60 * 10) throw new Error("minimum timeout 10 minute");
      if (d > 60 * 60 * 24 * 30) throw new Error("maximum timeout 30 days");
    };
    let HighloadWalletContractV3$1 = class extends Contract$b {
      constructor(_, $) {
        if ($.wc) throw new Error("only basechain (wc = 0) supported");
        if ($.wc = 0, !$.address) {
          if (!$.publicKey) throw new Error("no publicKey");
          if (!($.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
          checkTimeout($.timeout);
        }
        $.code = Cell$d.oneFromBoc(CODE_HEX), super(_, $), this.options.walletId || (this.options.walletId = HIGHLOAD_WALLET_SUBWALLET_ID), this.methods = {
          transfer: (j) => Contract$b.createMethod(_, this.createTransferMessage(j.secretKey, j.toAddress, j.amount, j.queryId, j.payload, j.sendMode, j.createdAt, j.needDeploy))
        }, this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLastCleanTime = this.getLastCleanTime.bind(this), this.methods.getTimeout = this.getTimeout.bind(this), this.methods.isProcessed = this.isProcessed.bind(this);
      }
      getName() {
        return "highload-3";
      }
      createDataCell() {
        if (this.options.walletId !== 0 && !this.options.walletId) throw new Error("no walletId");
        if (!this.options.publicKey) throw new Error("no publicKey");
        if (!(this.options.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
        checkTimeout(this.options.timeout);
        const _ = new Cell$d();
        return _.bits.writeBytes(this.options.publicKey), _.bits.writeUint(this.options.walletId, 32), _.bits.writeUint(0, 1), _.bits.writeUint(0, 1), _.bits.writeUint(0, 64), _.bits.writeUint(this.options.timeout, 22), _;
      }
      createSigningMessage(_, $, j, rt) {
        if (isNaN(j) || j === void 0 || j === null) throw new Error("invalid sendMode");
        if (isNaN($) || $ === void 0 || $ === null) throw new Error("invalid createdAt");
        checkTimeout(this.options.timeout);
        const et = new Cell$d();
        return et.bits.writeUint(this.options.walletId, 32), et.refs.push(rt), et.bits.writeUint(j, 8), et.bits.writeUint(Number(_.getShift()), 13), et.bits.writeUint(Number(_.getBitNumber()), 10), et.bits.writeUint($, 64), et.bits.writeUint(this.options.timeout, 22), et;
      }
      async createTransferMessage(_, $, j, rt, et = "", st = 3, pt, Et = false) {
        if (rt == null) throw new Error("queryId must be number >= 0");
        if (pt == null || pt < 0) throw new Error("createAt must be number >= 0");
        st == null && (st = 3);
        const Bt = Contract$b.createOutMsg($, j, et), St = this.createSigningMessage(rt, pt, st, Bt);
        return this.createExternalMessage(St, _, Et);
      }
      async createExternalMessage(_, $, j) {
        const rt = nacl$2.sign.detached(await _.hash(), $), et = new Cell$d();
        et.bits.writeBytes(rt), et.refs.push(_);
        let st = null, pt = null, Et = null;
        if (j) {
          if (!this.options.publicKey) {
            const Tt = nacl$2.sign.keyPair.fromSecretKey($);
            this.options.publicKey = Tt.publicKey;
          }
          const kt = await this.createStateInit();
          st = kt.stateInit, pt = kt.code, Et = kt.data;
        }
        const Bt = await this.getAddress(), St = Contract$b.createExternalMessageHeader(Bt), $t = Contract$b.createCommonMsgInfo(St, st, et);
        return {
          address: Bt,
          message: $t,
          body: et,
          signature: rt,
          signingMessage: _,
          stateInit: st,
          code: pt,
          data: Et
        };
      }
      async getWalletId() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_subwallet_id")).toNumber();
      }
      async getPublicKey() {
        const _ = await this.getAddress();
        return this.provider.call2(_.toString(), "get_public_key");
      }
      async getLastCleanTime() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_last_clean_time")).toNumber();
      }
      async getTimeout() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_timeout")).toNumber();
      }
      async isProcessed(_, $) {
        const j = await this.getAddress();
        return !(await this.provider.call2(j.toString(), "processed?", [
          [
            "num",
            _.getQueryId().toString()
          ],
          [
            "num",
            $ ? "-1" : "0"
          ]
        ])).isZero();
      }
    };
    HighloadWalletContractV3$1.WALLET_ID_BASE = HIGHLOAD_WALLET_SUBWALLET_ID;
    HighloadWalletContractV3$1.codeHex = CODE_HEX;
    var HighloadWalletContractV3_1 = {
      HighloadWalletContractV3: HighloadWalletContractV3$1
    };
    const BIT_NUMBER_SIZE = 10n, MAX_BIT_NUMBER = 1022n, MAX_SHIFT = 8191n;
    let HighloadQueryId$1 = class ro {
      constructor() {
        this.shift = 0n, this.bitnumber = 0n;
      }
      static fromShiftAndBitNumber(_, $) {
        const j = new ro();
        if (j.shift = _, j.shift < 0) throw new Error("invalid shift");
        if (j.shift > MAX_SHIFT) throw new Error("invalid shift");
        if (j.bitnumber = $, j.bitnumber < 0) throw new Error("invalid bitnumber");
        if (j.bitnumber > MAX_BIT_NUMBER) throw new Error("invalid bitnumber");
        return j;
      }
      getNext() {
        let _ = this.bitnumber + 1n, $ = this.shift;
        if ($ === MAX_SHIFT && _ > MAX_BIT_NUMBER - 1n) throw new Error("Overload");
        if (_ > MAX_BIT_NUMBER && (_ = 0n, $ += 1n, $ > MAX_SHIFT)) throw new Error("Overload");
        return ro.fromShiftAndBitNumber($, _);
      }
      hasNext() {
        return !(this.bitnumber >= MAX_BIT_NUMBER - 1n && this.shift === MAX_SHIFT);
      }
      getShift() {
        return this.shift;
      }
      getBitNumber() {
        return this.bitnumber;
      }
      getQueryId() {
        return (this.shift << BIT_NUMBER_SIZE) + this.bitnumber;
      }
      static fromQueryId(_) {
        const $ = _ >> BIT_NUMBER_SIZE, j = _ & 1023n;
        return this.fromShiftAndBitNumber($, j);
      }
      static fromSeqno(_) {
        const $ = _ / 1023n, j = _ % 1023n;
        return this.fromShiftAndBitNumber($, j);
      }
      toSeqno() {
        return this.bitnumber + this.shift * 1023n;
      }
    };
    var HighloadQueryId_1 = {
      HighloadQueryId: HighloadQueryId$1
    };
    const { HighloadWalletContractV3 } = HighloadWalletContractV3_1, { HighloadQueryId } = HighloadQueryId_1;
    highloadWallet.default = {
      HighloadQueryId,
      HighloadWalletContractV3,
      all: {
        "highload-3": HighloadWalletContractV3
      },
      list: [
        HighloadWalletContractV3
      ]
    };
    var nft = {};
    const { Contract: Contract$a } = contract, { Cell: Cell$c } = boc$1, { Address: Address$7, bytesToBase64: bytesToBase64$3, BN: BN$8 } = utils$1, { parseAddress: parseAddress$9 } = NftUtils, { createOffchainUriCell: createOffchainUriCell$1, serializeUri, parseOffchainUriCell: parseOffchainUriCell$3, getRoyaltyParams: getRoyaltyParams$1 } = NftUtils;
    let NftCollection$1 = class extends Contract$a {
      constructor(_, $) {
        if ($.wc = 0, $.code = $.code || Cell$c.oneFromBocroyalty > 1) throw new Error("royalty > 1");
        $.royaltyBase = 1e3, $.royaltyFactor = Math.floor($.royalty * $.royaltyBase), super(_, $), this.methods.getCollectionData = this.getCollectionData.bind(this), this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this), this.methods.getNftItemContent = this.getNftItemContent.bind(this), this.methods.getRoyaltyParams = this.getRoyaltyParams.bind(this);
      }
      createContentCell(_) {
        const $ = createOffchainUriCell$1(_.collectionContentUri), j = new Cell$c();
        j.bits.writeBytes(serializeUri(_.nftItemContentBaseUri));
        const rt = new Cell$c();
        return rt.refs[0] = $, rt.refs[1] = j, rt;
      }
      createRoyaltyCell(_) {
        const $ = new Cell$c();
        return $.bits.writeUint(_.royaltyFactor, 16), $.bits.writeUint(_.royaltyBase, 16), $.bits.writeAddress(_.royaltyAddress), $;
      }
      createDataCell() {
        const _ = new Cell$c();
        return _.bits.writeAddress(this.options.ownerAddress), _.bits.writeUint(0, 64), _.refs[0] = this.createContentCell(this.options), _.refs[1] = Cell$c.oneFromBoc(this.options.nftItemCodeHex), _.refs[2] = this.createRoyaltyCell(this.options), _;
      }
      createMintBody(_) {
        const $ = new Cell$c();
        $.bits.writeUint(1, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeUint(_.itemIndex, 64), $.bits.writeCoins(_.amount);
        const j = new Cell$c();
        j.bits.writeAddress(_.itemOwnerAddress);
        const rt = new Cell$c();
        return rt.bits.writeBytes(serializeUri(_.itemContentUri)), j.refs[0] = rt, $.refs[0] = j, $;
      }
      createGetRoyaltyParamsBody(_) {
        const $ = new Cell$c();
        return $.bits.writeUint(1765620048, 32), $.bits.writeUint(_.queryId || 0, 64), $;
      }
      createChangeOwnerBody(_) {
        if (_.newOwnerAddress === void 0) throw new Error("Specify newOwnerAddress");
        const $ = new Cell$c();
        return $.bits.writeUint(3, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeAddress(_.newOwnerAddress), $;
      }
      createEditContentBody(_) {
        if (_.royalty > 1) throw new Error("royalty > 1");
        _.royaltyBase = 1e3, _.royaltyFactor = Math.floor(_.royalty * _.royaltyBase);
        const $ = new Cell$c();
        return $.bits.writeUint(4, 32), $.bits.writeUint(_.queryId || 0, 64), $.refs[0] = this.createContentCell(_), $.refs[1] = this.createRoyaltyCell(_), $;
      }
      async getCollectionData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_collection_data"), j = $[0];
        let rt = NaN;
        try {
          rt = j.toNumber();
        } catch {
        }
        const et = $[1];
        let st = null;
        try {
          st = parseOffchainUriCell$3(et);
        } catch {
        }
        const pt = parseAddress$9($[2]);
        return {
          nextItemIndex: rt,
          itemsCount: j,
          ownerAddress: pt,
          collectionContentCell: et,
          collectionContentUri: st
        };
      }
      async getNftItemContent(_) {
        const $ = await this.getAddress(), j = await _.getData();
        if (j.isInitialized) {
          const rt = await this.provider.call2($.toString(), "get_nft_content", [
            [
              "num",
              j.itemIndex.toString(10)
            ],
            [
              "tvm.Cell",
              bytesToBase64$3(await j.contentCell.toBoc(false))
            ]
          ]);
          j.contentUri = null;
          try {
            j.contentUri = parseOffchainUriCell$3(rt);
          } catch {
          }
        }
        return j;
      }
      async getNftItemAddressByIndex(_) {
        _ = new BN$8(_);
        const $ = await this.getAddress(), j = await this.provider.call2($.toString(), "get_nft_address_by_index", [
          [
            "num",
            _.toString(10)
          ]
        ]);
        return parseAddress$9(j);
      }
      async getRoyaltyParams() {
        const _ = await this.getAddress();
        return getRoyaltyParams$1(this.provider, _.toString());
      }
    };
    var NftCollection_1 = {
      NftCollection: NftCollection$1
    };
    const { Contract: Contract$9 } = contract, { Cell: Cell$b } = boc$1, { Address: Address$6, BN: BN$7 } = utils$1, { parseAddress: parseAddress$8, getRoyaltyParams } = NftUtils, { parseOffchainUriCell: parseOffchainUriCell$2 } = NftUtils
    let NftItem$1 = class extends Contract$9 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code || Cell$b.oneFromBoc(NFT_ITEM_CODE_HEX), super(_, $), this.methods.getData = this.getData.bind(this);
      }
      createDataCell() {
        const _ = new Cell$b();
        return _.bits.writeUint(this.options.index, 64), _.bits.writeAddress(this.options.collectionAddress), _;
      }
      async getData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_nft_data"), j = $[0].toNumber() === -1, rt = $[1];
        let et = NaN;
        try {
          et = rt.toNumber();
        } catch {
        }
        const st = parseAddress$8($[2]), pt = j ? parseAddress$8($[3]) : null, Et = $[4];
        let Bt = null;
        try {
          Bt = j && st === null ? parseOffchainUriCell$2(Et) : null;
        } catch {
        }
        return {
          isInitialized: j,
          index: et,
          itemIndex: rt,
          collectionAddress: st,
          ownerAddress: pt,
          contentCell: Et,
          contentUri: Bt
        };
      }
      async createTransferBody(_) {
        const $ = new Cell$b();
        return $.bits.writeUint(1607220500, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeAddress(_.newOwnerAddress), $.bits.writeAddress(_.responseAddress), $.bits.writeBit(false), $.bits.writeCoins(_.forwardAmount || new BN$7(0)), _.forwardPayload ? _.forwardPayload.refs ? ($.bits.writeBit(true), $.refs.push(_.forwardPayload)) : ($.bits.writeBit(false), $.bits.writeBytes(_.forwardPayload)) : $.bits.writeBit(false), $;
      }
      createGetStaticDataBody(_) {
        const $ = new Cell$b();
        return $.bits.writeUint(801842850, 32), $.bits.writeUint(_.queryId || 0, 64), $;
      }
      async getRoyaltyParams() {
        const _ = await this.getAddress();
        return getRoyaltyParams(this.provider, _.toString());
      }
    };
    NftItem$1.codeHex = NFT_ITEM_CODE_HEX;
    var NftItem_1 = {
      NftItem: NftItem$1
    };
    const { Contract: Contract$8 } = contract, { Cell: Cell$a } = boc$1, { Address: Address$5 } = utils$1, { parseAddress: parseAddress$7 } = NftUtils;
    let NftMarketplace$1 = class extends Contract$8 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code || Cell$a.oneFromBoc("B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7"), super(_, $);
      }
      createDataCell() {
        const _ = new Cell$a();
        return _.bits.writeAddress(this.options.ownerAddress), _;
      }
    };
    var NftMarketplace_1 = {
      NftMarketplace: NftMarketplace$1
    };
    const { Contract: Contract$7 } = contract, { Cell: Cell$9 } = boc$1, { parseAddress: parseAddress$6 } = NftUtils, { BN: BN$6 } = utils$1, NFT_SALE_HEX_CODE = "B5EE9C7241020A010001B4000114FF00F4A413F4BCF2C80B01020120020302014804050004F2300202CD0607002FA03859DA89A1F481F481F481F401A861A1F401F481F4006101F7D00E8698180B8D8492F82707D201876A2687D207D207D207D006A18116BA4E10159C71D991B1B2990E382C92F837028916382F970FA01698FC1080289C6C8895D7970FAE99F98FD2018201A642802E78B2801E78B00E78B00FD016664F6AA701363804C9B081B2299823878027003698FE99F9810E000C92F857010C0801F5D41081DCD650029285029185F7970E101E87D007D207D0018384008646582A804E78B28B9D090D0A85AD08A500AFD010AE5B564B8FD80384008646582AC678B2803FD010B65B564B8FD80384008646582A802E78B00FD0109E5B564B8FD80381041082FE61E8A10C00C646582A802E78B117D010A65B509E58F8A40900C8C0029A3110471036454012F004E032363704C0038E4782103B9ACA0015BEF2E1C95312C70559C705B1F2E1CA702082105FCC3D14218010C8CB055006CF1622FA0215CB6A14CB1F14CB3F21CF1601CF16CA0021FA02CA00C98100A0FB00E05F06840FF2F0002ACB3F22CF1658CF16CA0021FA02CA00C98100A0FB00AECABAD1";
    let NftSale$1 = class extends Contract$7 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code || Cell$9.oneFromBoc(NFT_SALE_HEX_CODE), super(_, $), this.methods.getData = this.getData.bind(this);
      }
      createDataCell() {
        const _ = new Cell$9();
        _.bits.writeAddress(this.options.marketplaceAddress), _.bits.writeAddress(this.options.nftAddress), _.bits.writeAddress(null), _.bits.writeCoins(this.options.fullPrice);
        const $ = new Cell$9();
        return $.bits.writeCoins(this.options.marketplaceFee), $.bits.writeAddress(this.options.royaltyAddress), $.bits.writeCoins(this.options.royaltyAmount), _.refs[0] = $, _;
      }
      async getData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_sale_data"), j = parseAddress$6($[0]), rt = parseAddress$6($[1]), et = parseAddress$6($[2]), st = $[3], pt = $[4], Et = parseAddress$6($[5]), Bt = $[6];
        return {
          marketplaceAddress: j,
          nftAddress: rt,
          nftOwnerAddress: et,
          fullPrice: st,
          marketplaceFee: pt,
          royaltyAddress: Et,
          royaltyAmount: Bt
        };
      }
      async createCancelBody(_) {
        const $ = new Cell$9();
        return $.bits.writeUint(3, 32), $.bits.writeUint(_.queryId || 0, 64), $;
      }
    };
    NftSale$1.codeHex = NFT_SALE_HEX_CODE;
    var NftSale_1 = {
      NftSale: NftSale$1
    };
    const { NftCollection } = NftCollection_1, { NftItem } = NftItem_1, { NftMarketplace } = NftMarketplace_1, { NftSale } = NftSale_1;
    nft.default = {
      NftCollection,
      NftItem,
      NftMarketplace,
      NftSale
    };
    var ft$1 = {};
    const { Contract: Contract$6 } = contract, { Cell: Cell$8 } = boc$1, { createOffchainUriCell, parseOffchainUriCell: parseOffchainUriCell$1, parseAddress: parseAddress$5 } = NftUtils, { Address: Address$4, BN: BN$5, bytesToBase64: bytesToBase64$2 } = utils$1;
    let JettonMinter$1 = class extends Contract$6 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code || Cell$8.oneFromBocsuper(_, $);
      }
      createDataCell() {
        const _ = new Cell$8();
        return _.bits.writeCoins(0), _.bits.writeAddress(this.options.adminAddress), _.refs[0] = createOffchainUriCell(this.options.jettonContentUri), _.refs[1] = Cell$8.oneFromBoc(this.options.jettonWalletCodeHex), _;
      }
      createMintBody(_) {
        const $ = new Cell$8();
        $.bits.writeUint(21, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeAddress(_.destination), $.bits.writeCoins(_.amount);
        const j = new Cell$8();
        return j.bits.writeUint(395134233, 32), j.bits.writeUint(_.queryId || 0, 64), j.bits.writeCoins(_.jettonAmount), j.bits.writeAddress(null), j.bits.writeAddress(null), j.bits.writeCoins(new BN$5(0)), j.bits.writeBit(false), $.refs[0] = j, $;
      }
      createChangeAdminBody(_) {
        if (_.newAdminAddress === void 0) throw new Error("Specify newAdminAddress");
        const $ = new Cell$8();
        return $.bits.writeUint(3, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeAddress(_.newAdminAddress), $;
      }
      createEditContentBody(_) {
        const $ = new Cell$8();
        return $.bits.writeUint(4, 32), $.bits.writeUint(_.queryId || 0, 64), $.refs[0] = createOffchainUriCell(_.jettonContentUri), $;
      }
      async getJettonData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_jetton_data"), j = $[0], rt = $[1].toNumber() === -1, et = parseAddress$5($[2]), st = $[3];
        let pt = null;
        try {
          pt = parseOffchainUriCell$1(st);
        } catch {
        }
        const Et = $[4];
        return {
          totalSupply: j,
          isMutable: rt,
          adminAddress: et,
          jettonContentCell: st,
          jettonContentUri: pt,
          jettonWalletCode: Et
        };
      }
      async getJettonWalletAddress(_) {
        const $ = await this.getAddress(), j = new Cell$8();
        j.bits.writeAddress(_);
        const rt = await this.provider.call2($.toString(), "get_wallet_address", [
          [
            "tvm.Slice",
            bytesToBase64$2(await j.toBoc(false))
          ]
        ]);
        return parseAddress$5(rt);
      }
    };
    var JettonMinter_1 = {
      JettonMinter: JettonMinter$1
    };
    const { Contract: Contract$5 } = contract, { Cell: Cell$7 } = boc$1, { parseAddress: parseAddress$4 } = NftUtils, { BN: BN$4 } = utils
    let JettonWallet$1 = class extends Contract$5 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code || Cell$7.oneFromBoc(JETTON_WALLET_CODE_HEX), super(_, $);
      }
      async createTransferBody(_) {
        const $ = new Cell$7();
        return $.bits.writeUint(260734629, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeCoins(_.jettonAmount), $.bits.writeAddress(_.toAddress), $.bits.writeAddress(_.responseAddress), $.bits.writeBit(false), $.bits.writeCoins(_.forwardAmount || new BN$4(0)), _.forwardPayload ? _.forwardPayload.refs ? ($.bits.writeBit(true), $.refs.push(_.forwardPayload)) : ($.bits.writeBit(false), $.bits.writeBytes(_.forwardPayload)) : $.bits.writeBit(false), $;
      }
      async createBurnBody(_) {
        const $ = new Cell$7();
        return $.bits.writeUint(1499400124, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeCoins(_.jettonAmount), $.bits.writeAddress(_.responseAddress), $;
      }
      async getData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_wallet_data"), j = $[0], rt = parseAddress$4($[1]), et = parseAddress$4($[2]), st = $[3];
        return {
          balance: j,
          ownerAddress: rt,
          jettonMinterAddress: et,
          jettonWalletCode: st
        };
      }
    };
    JettonWallet$1.codeHex = JETTON_WALLET_CODE_HEX;
    var JettonWallet_1 = {
      JettonWallet: JettonWallet$1
    };
    const { JettonMinter } = JettonMinter_1, { JettonWallet } = JettonWallet_1;
    ft$1.default = {
      JettonMinter,
      JettonWallet
    };
    const MC_INTERVAL = 10 * 1e3, SHARDS_INTERVAL = 1 * 1e3, parseShardBlockNumber = (d) => ({
      workchain: d.workchain,
      shardId: d.shard,
      shardBlockNumber: d.seqno
    });
    let BlockSubscription$2 = class {
      constructor(_, $, j, rt) {
        this.provider = _, this.storage = $, this.onBlock = j, this.startMcBlockNumber = rt ? rt.startMcBlockNumber : void 0, this.mcInterval = (rt ? rt.mcInterval : void 0) || MC_INTERVAL, this.shardsInterval = (rt ? rt.shardsInterval : void 0) || SHARDS_INTERVAL;
      }
      async start() {
        if (this.stop(), !this.startMcBlockNumber && (this.startMcBlockNumber = (await this.provider.getMasterchainInfo()).last.seqno, !this.startMcBlockNumber)) throw new Error("Cannot get start mc block number from provider");
        const _ = await this.provider.getMasterchainBlockHeader(this.startMcBlockNumber);
        if (this.startLT = _.end_lt, !this.startLT) throw new Error("Cannot get startLT from provider");
        let $ = false;
        const j = async () => {
          if (!$) {
            $ = true;
            try {
              const st = await this.storage.getLastMasterchainBlockNumber() || this.startMcBlockNumber;
              if (!st) throw new Error("no init masterchain block in storage");
              const pt = (await this.provider.getMasterchainInfo()).last.seqno;
              if (!pt) throw new Error("invalid last masterchain block from provider");
              for (let Et = st + 1; Et < pt; Et++) {
                const Bt = await this.provider.getBlockShards(Et), St = await this.provider.getMasterchainBlockHeader(Et);
                await this.onBlock(St, Bt), await this.storage.insertBlocks(Et, Bt.shards.map(parseShardBlockNumber));
              }
            } catch (st) {
              console.error(st);
            }
            $ = false;
          }
        };
        this.mcIntervalId = setInterval(() => j(), this.mcInterval), j();
        let rt = false;
        const et = async () => {
          if (!rt) {
            rt = true;
            try {
              const st = await this.storage.getUnprocessedShardBlock();
              if (st) {
                const { workchain: pt, shardId: Et, shardBlockNumber: Bt } = st, St = await this.provider.getBlockHeader(pt, Et, Bt);
                if (St.end_lt < this.startLT) await this.storage.setBlockProcessed(pt, Et, Bt, []);
                else {
                  await this.onBlock(St);
                  const $t = St.prev_blocks.map(parseShardBlockNumber);
                  await this.storage.setBlockProcessed(pt, Et, Bt, $t);
                }
              }
            } catch (st) {
              console.log(st);
            }
            rt = false;
          }
        };
        this.shardsIntervalId = setInterval(() => et(), this.shardsInterval);
      }
      stop() {
        clearInterval(this.mcIntervalId), clearInterval(this.shardsIntervalId);
      }
    };
    var BlockSubscription_1 = {
      BlockSubscription: BlockSubscription$2
    };
    let InMemoryBlockStorage$2 = class {
      constructor(_) {
        this.masterchainBlocks = {}, this.shardchainBlocks = {}, this.logFunction = _;
      }
      async insertShardBlocks(_) {
        for (const { workchain: $, shardId: j, shardBlockNumber: rt } of _) this.shardchainBlocks[$ + "_" + j + "_" + rt] === void 0 && (this.logFunction && this.logFunction("insert shard " + $ + " " + j + " " + rt), this.shardchainBlocks[$ + "_" + j + "_" + rt] = false);
      }
      async insertBlocks(_, $) {
        if (this.logFunction && this.logFunction("mc processed " + _), this.masterchainBlocks[_] !== void 0) throw new Error("mc already exists " + _);
        this.masterchainBlocks[_] = true, await this.insertShardBlocks($);
      }
      async getLastMasterchainBlockNumber() {
        return Object.keys(this.masterchainBlocks).map(($) => Number($)).sort(($, j) => j - $)[0];
      }
      async setBlockProcessed(_, $, j, rt) {
        if (this.logFunction && this.logFunction("shard processed " + _ + " " + $ + " " + j), this.shardchainBlocks[_ + "_" + $ + "_" + j] === void 0) throw new Error("shard not exists " + _ + "_" + $ + "_" + j);
        this.shardchainBlocks[_ + "_" + $ + "_" + j] = true, await this.insertShardBlocks(rt);
      }
      async getUnprocessedShardBlock() {
        for (let _ in this.shardchainBlocks) if (this.shardchainBlocks[_] === false) {
          const $ = _.split("_");
          return {
            workchain: Number($[0]),
            shardId: $[1],
            shardBlockNumber: Number($[2])
          };
        }
      }
    };
    var InMemoryBlockStorage_1 = {
      InMemoryBlockStorage: InMemoryBlockStorage$2
    };
    const { BlockSubscription: BlockSubscription$1 } = BlockSubscription_1, { InMemoryBlockStorage: InMemoryBlockStorage$1 } = InMemoryBlockStorage_1;
    var blockSubscription = {
      BlockSubscription: BlockSubscription$1,
      InMemoryBlockStorage: InMemoryBlockStorage$1
    };
    const { Contract: Contract$4 } = contract, { Cell: Cell$6 } = boc$1, { hexToBytes: hexToBytes$1, BN: BN$3, nacl: nacl$1, bytesToBase64: bytesToBase64$1 } = utils$1;
    let SubscriptionContract$1 = class extends Contract$4 {
      constructor(_, $) {
        $.code = Cell$6.oneFromBocsuper(_, $), this.methods.pay = () => Contract$4.createMethod(_, this.createPayExternalMessage()), this.methods.getSubscriptionData = this.getSubscriptionData.bind(this);
      }
      createDataCell() {
        const _ = new Cell$6();
        return _.bits.writeAddress(this.options.wallet), _.bits.writeAddress(this.options.beneficiary), _.bits.writeGrams(this.options.amount), _.bits.writeUint(this.options.period, 32), _.bits.writeUint(this.options.startAt, 32), _.bits.writeUint(this.options.timeout, 32), _.bits.writeUint(0, 32), _.bits.writeUint(0, 32), _.bits.writeUint(0, 8), _.bits.writeUint(this.options.subscriptionId, 32), _;
      }
      createBody() {
        const _ = new Cell$6();
        return _.bits.writeUint(new BN$3(1886156135).add(new BN$3(2147483648)), 32), _;
      }
      createSelfDestructBody() {
        const _ = new Cell$6();
        return _.bits.writeUint(1685288050, 32), _;
      }
      async getSubscriptionData() {
        const _ = (Pt) => Pt[0].toNumber() + ":" + Pt[1].toString(16), $ = await this.getAddress(), j = await this.provider.call2($.toString(), "get_subscription_data"), rt = _(j[0]), et = _(j[1]), st = j[2], pt = j[3].toNumber(), Et = j[4].toNumber(), Bt = j[5].toNumber(), St = j[6].toNumber(), $t = j[7].toNumber(), kt = j[8].toNumber(), Tt = j[9].toNumber();
        return {
          wallet: rt,
          beneficiary: et,
          amount: st,
          period: pt,
          startAt: Et,
          timeout: Bt,
          lastPayment: St,
          lastRequest: $t,
          failedAttempts: kt,
          subscriptionId: Tt
        };
      }
      async createPayExternalMessage() {
        const _ = await this.getAddress(), $ = Contract$4.createExternalMessageHeader(_), j = Contract$4.createCommonMsgInfo($, null, null), rt = new Cell$6();
        return rt.bits.writeUint(Math.floor(Date.now() / 1e3), 64), {
          address: _,
          message: j,
          body: rt
        };
      }
    };
    var subscription = {
      SubscriptionContract: SubscriptionContract$1
    };
    const { Cell: Cell$5 } = boc$1, writePublicKey$1 = (d, _) => {
      if (_.length !== 256 / 8) throw new Error("invalid publicKey length");
      d.bits.writeBytes(_);
    }, writeSignature$1 = (d, _) => {
      if (_.length !== 512 / 8) throw new Error("invalid signature length");
      d.bits.writeBytes(_);
    }, createSignatureCell$1 = (d) => {
      const _ = new Cell$5();
      return writeSignature$1(_, d), _;
    }, writeMayBe = (d, _) => {
      if (_) {
        if (d.bits.writeBit(1), d.refs.length >= 4) throw new Error("refs overflow");
        d.refs.push(_);
      } else d.bits.writeBit(0);
    }, writeDict = writeMayBe, tag_init$1 = 1768843636, tag_cooperative_close$1 = 1131179891, tag_cooperative_commit$1 = 1128492404, tag_start_uncooperative_close$1 = 1433289580, tag_challenge_state$1 = 1130915665, tag_settle_conditionals$1 = 1131168622, tag_state$1 = 1130910580, op_top_up_balance$1 = 1741148801, op_init_channel$1 = 235282626, op_cooperative_close$1 = 1433884798, op_cooperative_commit$1 = 2040604399, op_start_uncooperative_close$1 = 521476815, op_challenge_quarantined_state$1 = 143567410, op_settle_conditionals$1 = 1727459433, op_finish_uncooperative_close$1 = 625158801, op_channel_closed$1 = -572749638, createTopUpBalance$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(op_top_up_balance$1, 32), _.bits.writeCoins(d.coinsA), _.bits.writeCoins(d.coinsB), _;
    }, createInitChannelBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_init$1, 32), _.bits.writeUint(d.channelId, 128), _.bits.writeCoins(d.balanceA), _.bits.writeCoins(d.balanceB), _;
    }, createCooperativeCloseChannelBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_cooperative_close$1, 32), _.bits.writeUint(d.channelId, 128), _.bits.writeCoins(d.balanceA), _.bits.writeCoins(d.balanceB), _.bits.writeUint(d.seqnoA, 64), _.bits.writeUint(d.seqnoB, 64), _;
    }, createCooperativeCommitBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_cooperative_commit$1, 32), _.bits.writeUint(d.channelId, 128), _.bits.writeUint(d.seqnoA, 64), _.bits.writeUint(d.seqnoB, 64), _;
    }, createConditionalPayment$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeCoins(d.amount), _.writeCell(d.condition), _;
    }, createSemiChannelBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(d.seqno, 64), _.bits.writeCoins(d.sentCoins), writeDict(_, d.conditionals), _;
    }, createSemiChannelState$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_state$1, 32), _.bits.writeUint(d.channelId, 128), _.writeCell(d.semiChannelBody), writeMayBe(_, d.counterpartySemiChannelBody), _;
    }, createSignedSemiChannelState$1 = (d) => {
      const _ = new Cell$5();
      return writeSignature$1(_, d.signature), _.writeCell(d.state), _;
    }, createStartUncooperativeCloseBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_start_uncooperative_close$1, 32), _.bits.writeUint(d.channelId, 128), _.refs[0] = d.signedSemiChannelStateA, _.refs[1] = d.signedSemiChannelStateB, _;
    }, createChallengeQuarantinedStateBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_challenge_state$1, 32), _.bits.writeUint(d.channelId, 128), _.refs[0] = d.signedSemiChannelStateA, _.refs[1] = d.signedSemiChannelStateB, _;
    }, createSettleConditionalsBody$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(tag_settle_conditionals$1, 32), _.bits.writeUint(d.channelId, 128), writeDict(_, d.conditionalsToSettle), _;
    }, createFinishUncooperativeClose$1 = () => {
      const d = new Cell$5();
      return d.bits.writeUint(op_finish_uncooperative_close$1, 32), d;
    }, createOneSignature$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(d.op, 32), _.bits.writeBit(d.isA), writeSignature$1(_, d.signature), _.writeCell(d.cell), _;
    }, createTwoSignature$1 = (d) => {
      const _ = new Cell$5();
      return _.bits.writeUint(d.op, 32), _.refs[0] = createSignatureCell$1(d.signatureA), _.refs[1] = createSignatureCell$1(d.signatureB), _.writeCell(d.cell), _;
    };
    var PaymentUtils = {
      writePublicKey: writePublicKey$1,
      writeSignature: writeSignature$1,
      createSignatureCell: createSignatureCell$1,
      tag_init: tag_init$1,
      tag_cooperative_close: tag_cooperative_close$1,
      tag_cooperative_commit: tag_cooperative_commit$1,
      tag_start_uncooperative_close: tag_start_uncooperative_close$1,
      tag_challenge_state: tag_challenge_state$1,
      tag_settle_conditionals: tag_settle_conditionals$1,
      tag_state: tag_state$1,
      op_top_up_balance: op_top_up_balance$1,
      op_init_channel: op_init_channel$1,
      op_cooperative_close: op_cooperative_close$1,
      op_cooperative_commit: op_cooperative_commit$1,
      op_start_uncooperative_close: op_start_uncooperative_close$1,
      op_challenge_quarantined_state: op_challenge_quarantined_state$1,
      op_settle_conditionals: op_settle_conditionals$1,
      op_finish_uncooperative_close: op_finish_uncooperative_close$1,
      op_channel_closed: op_channel_closed$1,
      createTopUpBalance: createTopUpBalance$1,
      createInitChannelBody: createInitChannelBody$1,
      createCooperativeCloseChannelBody: createCooperativeCloseChannelBody$1,
      createCooperativeCommitBody: createCooperativeCommitBody$1,
      createConditionalPayment: createConditionalPayment$1,
      createSemiChannelBody: createSemiChannelBody$1,
      createSemiChannelState: createSemiChannelState$1,
      createSignedSemiChannelState: createSignedSemiChannelState$1,
      createStartUncooperativeCloseBody: createStartUncooperativeCloseBody$1,
      createChallengeQuarantinedStateBody: createChallengeQuarantinedStateBody$1,
      createSettleConditionalsBody: createSettleConditionalsBody$1,
      createFinishUncooperativeClose: createFinishUncooperativeClose$1,
      createOneSignature: createOneSignature$1,
      createTwoSignature: createTwoSignature$1
    };
    const { Contract: Contract$3 } = contract, { Cell: Cell$4 } = boc$1, { nacl, hexToBytes, BN: BN$2 } = utils$1, { parseAddress: parseAddress$3 } = NftUtils, { writePublicKey, writeSignature, createSignatureCell, tag_init, tag_cooperative_close, tag_cooperative_commit, tag_start_uncooperative_close, tag_challenge_state, tag_settle_conditionals, tag_state, op_top_up_balance, op_init_channel, op_cooperative_close, op_cooperative_commit, op_start_uncooperative_close, op_challenge_quarantined_state, op_settle_conditionals, op_finish_uncooperative_close, op_channel_closed, createTopUpBalance, createInitChannelBody, createCooperativeCloseChannelBody, createCooperativeCommitBody, createConditionalPayment, createSemiChannelBody, createSemiChannelState, createSignedSemiChannelState, createStartUncooperativeCloseBody, createChallengeQuarantinedStateBody, createSettleConditionalsBody, createFinishUncooperativeClose, createOneSignature, createTwoSignature } = PaymentUtils, PAYMENT_CHANNEL_CODE_HEX = "B5EE9C72410230010007FB000114FF00F4A413F4BCF2C80B0102012002030201480405000AF26C21F0190202CB06070201202E2F020120080902012016170201200A0B0201200C0D0009D3610F80CC001D6B5007434C7FE8034C7CC1BC0FE19E0201580E0F0201201011002D3E11DBC4BE11DBC43232C7FE11DBC47E80B2C7F2407320008B083E1B7B51343480007E187E80007E18BE80007E18F4FFC07E1934FFC07E1974DFC07E19BC01887080A7F4C7C07E1A34C7C07E1A7D01007E1AB7807080E535007E1AF7BE1B2002012012130201201415008D3E13723E11BE117E113E10540132803E10BE80BE10FE8084F2FFC4B2FFF2DFFC02887080A7FE12BE127E121400F2C7C4B2C7FD0037807080E53E12C073253E1333C5B8B27B5520004D1C3C02FE106CFCB8193E803E800C3E1096283E18BE10C0683E18FE10BE10E8006EFCB819BC032000CF1D3C02FE106CFCB819348020C235C6083E4040E4BE1124BE117890CC3E443CB81974C7C060841A5B9A5D2EBCB81A3E118074DFD66EBCB81CBE803E800C3E1094882FBE10D4882FAC3CB819807E18BE18FE12F43E800C3E10BE10E80068006E7CB8199FFE187C0320004120843777222E9C20043232C15401B3C594013E808532DA84B2C7F2DFF2407EC02002012018190201D42B2C0201201A1B0201201E1F0201201C1D00E5473F00BD401D001D401D021F90102D31F01821043436D74BAF2E068F84601D37F59BAF2E072F844544355F910F8454330F910B0F2E065D33FD33F30F84822B9F84922B9B0F2E06C21F86820F869F84A6E915B8E19F84AD0D33FFA003171D721D33F305033BC02BCB1936DF86ADEE2F800F00C8006F3E12F43E800C7E903E900C3E09DBC41CBE10D62F24CC20C1B7BE10FE11963C03FE10BE11A04020BC03DC3E185C3E189C3E18DB7E1ABC032000B51D3C02F5007400750074087E4040B4C7C0608410DB1BDCEEBCB81A3E118074DFD66EBCB81CBE111510D57E443E1150CC3E442C3CB8197E80007E18BE80007E18F4CFF4CFCC3E1208AE7E1248AE6C3CB81B007E1A3E1A7E003C042001C1573F00BF84A6EF2E06AD2008308D71820F9012392F84492F845E24130F910F2E065D31F018210556E436CBAF2E068F84601D37F59BAF2E072D401D08308D71820F901F8444130F910F2E06501D430D08308D71820F901F8454130F910F2E06501820020120222301FED31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE23032F8485280BEF8495250BEB0524BBE1AB0527ABE19210064B05215BE14B05248BE17B0F2E06970F82305C8CB3F5004FA0215F40015CB3F5004FA0212F400CB1F12CA00CA00C9F86AF00C01C31CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DA19D46EBCB81A3E118074DFD66EBCB81CB5007420C235C6083E407E11104C3E443CB81940750C3420C235C6083E407E11504C3E443CB81940602403F71CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DB10DBAEBCB81A3E118074DFD66EBCB81CBD010C3E12B434CFFE803D0134CFFE803D0134C7FE11DBC4148828083E08EE7CB81BBE11DBC4A83E08EF3CB81C34800C151D5A64D6D4C8F7A2B98E82A49B08B8C3816028292A01FCD31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE230325339BE5381BEB0F8495250BEB0F8485290BEB02502FE5237BE16B05262BEB0F2E06927C20097F84918BEF2E0699137E222C20097F84813BEF2E0699132E2F84AD0D33FFA00F404D33FFA00F404D31FF8476F105220A0F823BCF2E06FD200D20030B3F2E073209C3537373A5274BC5263BC12B18E11323939395250BC5299BC18B14650134440E25319BAB3F2E06D9130E30D7F05C82627002496F8476F1114A098F8476F1117A00603E203003ECB3F5004FA0215F40012CB3F5004FA0213F400CB1F12CA00CA00C9F86AF00C00620A8020F4966FA5208E213050038020F4666FA1208E1001FA00ED1E15DA119450C3A00B9133E2923430E202926C21E2B31B000C3535075063140038C8CB3F5004FA0212F400CB3F5003FA0213F400CB1FCA00C9F86AF00C00D51D3C02FE129BACFCB81AFE12B434CFFE803D010C74CFFE803D010C74C7CC3E11DBC4283E11DBC4A83E08EE7CB81C7E003E10886808E87E18BE10D400E816287E18FE10F04026BE10BE10E83E189C3E18F7BE10B04026BE10FE10A83E18DC3E18F780693E1A293E1A7C042001F53B7EF4C7C8608419F1F4A06EA4CC7C037808608403818830AEA54C7C03B6CC780C882084155DD61FAEA54C3C0476CC780820841E6849BBEEA54C3C04B6CC7808208407C546B3EEA54C3C0576CC780820840223AA8CAEA54C3C05B6CC7808208419BDBC1A6EA54C3C05F6CC780C60840950CAA46EA53C0636CC78202D0008840FF2F00075BC7FE3A7805FC25E87D007D207D20184100D0CAF6A1EC7C217C21B7817C227C22B7817C237C23FC247C24B7817C2524C3B7818823881B22A021984008DBD0CABA7805FC20C8B870FC253748B8F07C256840206B90FD0018C020EB90FD0018B8EB90E98F987C23B7882908507C11DE491839707C23B788507C23B789507C11DE48B9F03A4331C4966";
    let PaymentChannel$2 = (_a2 = class extends Contract$3 {
      constructor(_, $) {
        $.publicKeyA = $.isA ? $.myKeyPair.publicKey : $.hisPublicKey, $.publicKeyB = $.isA ? $.hisPublicKey : $.myKeyPair.publicKey, $.wc = $.wc || 0, $.code = $.code || Cell$4.oneFromBoc(PAYMENT_CHANNEL_CODE_HEX), super(_, $);
      }
      createDataCell() {
        var _a3, _b2, _c2;
        const _ = new Cell$4();
        _.bits.writeBit(0), _.bits.writeCoins(0), _.bits.writeCoins(0), writePublicKey(_, this.options.publicKeyA), writePublicKey(_, this.options.publicKeyB), _.bits.writeUint(this.options.channelId, 128);
        const $ = new Cell$4();
        $.bits.writeUint(((_a3 = this.options.closingConfig) == null ? void 0 : _a3.quarantineDuration) || 0, 32), $.bits.writeCoins(((_b2 = this.options.closingConfig) == null ? void 0 : _b2.misbehaviorFine) || new BN$2(0)), $.bits.writeUint(((_c2 = this.options.closingConfig) == null ? void 0 : _c2.conditionalCloseDuration) || 0, 32), _.refs[0] = $, _.bits.writeUint(0, 32), _.bits.writeUint(0, 32), _.bits.writeBit(false);
        const j = new Cell$4();
        return j.bits.writeCoins(this.options.excessFee || new BN$2(0)), j.bits.writeAddress(this.options.addressA), j.bits.writeAddress(this.options.addressB), _.refs[1] = j, _;
      }
      async createOneSignature(_, $) {
        const j = nacl.sign.detached(await $.hash(), this.options.myKeyPair.secretKey);
        return {
          cell: createOneSignature({
            op: _,
            isA: this.options.isA,
            signature: j,
            cell: $
          }),
          signature: j
        };
      }
      async createTwoSignature(_, $, j) {
        const rt = nacl.sign.detached(await j.hash(), this.options.myKeyPair.secretKey), et = this.options.isA ? rt : $, st = this.options.isA ? $ : rt;
        return {
          cell: createTwoSignature({
            op: _,
            signatureA: et,
            signatureB: st,
            cell: j
          }),
          signature: rt
        };
      }
      async createTopUpBalance(_) {
        return createTopUpBalance(_);
      }
      async createInitChannel(_) {
        return this.createOneSignature(op_init_channel, createInitChannelBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createCooperativeCloseChannel(_) {
        return _.hisSignature || (_.hisSignature = new Uint8Array(512 / 8)), this.createTwoSignature(op_cooperative_close, _.hisSignature, createCooperativeCloseChannelBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createCooperativeCommit(_) {
        return _.hisSignature || (_.hisSignature = new Uint8Array(512 / 8)), this.createTwoSignature(op_cooperative_commit, _.hisSignature, createCooperativeCommitBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createSignedSemiChannelState(_) {
        const $ = createSemiChannelState({
          channelId: this.options.channelId,
          semiChannelBody: createSemiChannelBody({
            seqno: _.mySeqno,
            sentCoins: _.mySentCoins,
            conditionals: null
          }),
          counterpartySemiChannelBody: _.hisSeqno === void 0 ? null : createSemiChannelBody({
            seqno: _.hisSeqno,
            sentCoins: _.hisSentCoins,
            conditionals: null
          })
        }), j = nacl.sign.detached(await $.hash(), this.options.myKeyPair.secretKey);
        return {
          cell: createSignedSemiChannelState({
            signature: j,
            state: $
          }),
          signature: j
        };
      }
      async signState(_) {
        const $ = this.options.isA ? _.seqnoA : _.seqnoB, j = this.options.isA ? _.seqnoB : _.seqnoA, rt = this.options.initBalanceA.gt(_.balanceA) ? this.options.initBalanceA.sub(_.balanceA) : new BN$2(0), et = this.options.initBalanceB.gt(_.balanceB) ? this.options.initBalanceB.sub(_.balanceB) : new BN$2(0), st = this.options.isA ? rt : et, pt = this.options.isA ? et : rt, { cell: Et, signature: Bt } = await this.createSignedSemiChannelState({
          mySeqno: $,
          mySentCoins: st,
          hisSeqno: j,
          hisSentCoins: pt
        });
        return Bt;
      }
      async verifyState(_, $) {
        const j = this.options.isA ? _.seqnoB : _.seqnoA, rt = this.options.isA ? _.seqnoA : _.seqnoB, et = this.options.initBalanceA.gt(_.balanceA) ? this.options.initBalanceA.sub(_.balanceA) : new BN$2(0), st = this.options.initBalanceB.gt(_.balanceB) ? this.options.initBalanceB.sub(_.balanceB) : new BN$2(0), pt = this.options.isA ? st : et, Et = this.options.isA ? et : st, St = await createSemiChannelState({
          channelId: this.options.channelId,
          semiChannelBody: createSemiChannelBody({
            seqno: j,
            sentCoins: pt,
            conditionals: null
          }),
          counterpartySemiChannelBody: rt === void 0 ? null : createSemiChannelBody({
            seqno: rt,
            sentCoins: Et,
            conditionals: null
          })
        }).hash();
        return nacl.sign.detached.verify(St, $, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA);
      }
      async signClose(_) {
        const { cell: $, signature: j } = await this.createCooperativeCloseChannel(_);
        return j;
      }
      async verifyClose(_, $) {
        const rt = await (await createCooperativeCloseChannelBody({
          ..._,
          channelId: this.options.channelId
        })).hash();
        return nacl.sign.detached.verify(rt, $, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA);
      }
      async createStartUncooperativeClose(_) {
        return this.createOneSignature(op_start_uncooperative_close, createStartUncooperativeCloseBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createChallengeQuarantinedState(_) {
        return this.createOneSignature(op_challenge_quarantined_state, createChallengeQuarantinedStateBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createSettleConditionals(_) {
        return this.createOneSignature(op_settle_conditionals, createSettleConditionalsBody({
          ..._,
          channelId: this.options.channelId
        }));
      }
      async createFinishUncooperativeClose() {
        return createFinishUncooperativeClose();
      }
      async getChannelState() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_channel_state", [])).toNumber();
      }
      async getData() {
        const _ = (Ft) => {
          let Lt = Ft.toString(16);
          return Lt.length % 2 !== 0 && (Lt = "0" + Lt), hexToBytes(Lt);
        }, $ = await this.getAddress(), j = await this.provider.call2($.toString(), "get_channel_data", []), rt = j[0].toNumber(), et = j[1][0], st = j[1][1], pt = _(j[2][0]), Et = _(j[2][1]), Bt = j[3], St = j[4][0].toNumber(), $t = j[4][1], kt = j[4][2].toNumber(), Tt = j[5][0], Pt = j[5][1], It = j[6], jt = j[7][0], Dt = parseAddress$3(j[7][1]), Ot = parseAddress$3(j[7][2]);
        return {
          state: rt,
          balanceA: et,
          balanceB: st,
          publicKeyA: pt,
          publicKeyB: Et,
          channelId: Bt,
          quarantineDuration: St,
          misbehaviorFine: $t,
          conditionalCloseDuration: kt,
          seqnoA: Tt,
          seqnoB: Pt,
          quarantine: It,
          excessFee: jt,
          addressA: Dt,
          addressB: Ot
        };
      }
      fromWallet(_) {
        const { wallet: $, secretKey: j } = _, rt = (et, st) => {
          const pt = async (Et) => {
            const Bt = st ? (await this.createStateInit()).stateInit : null, St = await this.getAddress(), $t = await $.methods.seqno().call() || 0, kt = await et;
            return $.methods.transfer({
              secretKey: j,
              toAddress: St.toString(true, true, true),
              amount: Et,
              seqno: $t,
              payload: kt,
              stateInit: Bt,
              sendMode: 3
            });
          };
          return {
            send: (Et) => pt(Et).then((Bt) => Bt.send()),
            estimateFee: (Et) => pt(Et).then((Bt) => Bt.estimateFee())
          };
        };
        return {
          deploy: () => rt(null, true),
          init: (et) => rt(this.createInitChannel(et).then((st) => st.cell)),
          topUp: (et) => rt(this.createTopUpBalance(et)),
          close: (et) => rt(this.createCooperativeCloseChannel(et).then((st) => st.cell)),
          commit: (et) => rt(this.createCooperativeCommit(et).then((st) => st.cell)),
          startUncooperativeClose: (et) => rt(this.createStartUncooperativeClose(et).then((st) => st.cell)),
          challengeQuarantinedState: (et) => rt(this.createChallengeQuarantinedState(et).then((st) => st.cell)),
          settleConditionals: (et) => rt(this.createSettleConditionals(et).then((st) => st.cell)),
          finishUncooperativeClose: () => rt(this.createFinishUncooperativeClose())
        };
      }
    }, __publicField2(_a2, "STATE_UNINITED", 0), __publicField2(_a2, "STATE_OPEN", 1), __publicField2(_a2, "STATE_CLOSURE_STARTED", 2), __publicField2(_a2, "STATE_SETTLING_CONDITIONALS", 3), __publicField2(_a2, "STATE_AWAITING_FINALIZATION", 4), _a2);
    PaymentChannel$2.codeHex = PAYMENT_CHANNEL_CODE_HEX;
    var PaymentChannel_1 = {
      PaymentChannel: PaymentChannel$2
    };
    const { PaymentChannel: PaymentChannel$1 } = PaymentChannel_1;
    let Payments$1 = class {
      constructor(_) {
        this.provider = _;
      }
      createChannel(_) {
        return new PaymentChannel$1(this.provider, _);
      }
    };
    var payments = {
      Payments: Payments$1,
      PaymentChannel: PaymentChannel$1
    }, errorClasses = {}, deserializers = {}, addCustomErrorDeserializer = function(d, _) {
      deserializers[d] = _;
    }, createCustomErrorClass = function(d) {
      var _ = function(j, rt) {
        Object.assign(this, rt), this.name = d, this.message = j || d, this.stack = new Error().stack;
      };
      return _.prototype = new Error(), errorClasses[d] = _, _;
    }, deserializeError = function(d) {
      if (typeof d == "object" && d) {
        try {
          var _ = JSON.parse(d.message);
          _.message && _.name && (d = _);
        } catch {
        }
        var $ = void 0;
        if (typeof d.name == "string") {
          var j = d.name, rt = deserializers[j];
          if (rt) $ = rt(d);
          else {
            var et = j === "Error" ? Error : errorClasses[j];
            et || (console.warn("deserializing an unknown class '" + j + "'"), et = createCustomErrorClass(j)), $ = Object.create(et.prototype);
            try {
              for (var st in d) d.hasOwnProperty(st) && ($[st] = d[st]);
            } catch {
            }
          }
        } else $ = new Error(d.message);
        return !$.stack && Error.captureStackTrace && Error.captureStackTrace($, deserializeError), $;
      }
      return new Error(String(d));
    }, serializeError = function(d) {
      return d && (typeof d == "object" ? destroyCircular(d, []) : typeof d == "function" ? "[Function: " + (d.name || "anonymous") + "]" : d);
    };
    function destroyCircular(d, _) {
      var $ = {};
      _.push(d);
      for (var j = 0, rt = Object.keys(d); j < rt.length; j++) {
        var et = rt[j], st = d[et];
        if (typeof st != "function") {
          if (!st || typeof st != "object") {
            $[et] = st;
            continue;
          }
          if (_.indexOf(d[et]) === -1) {
            $[et] = destroyCircular(d[et], _.slice(0));
            continue;
          }
          $[et] = "[Circular]";
        }
      }
      return typeof d.name == "string" && ($.name = d.name), typeof d.message == "string" && ($.message = d.message), typeof d.stack == "string" && ($.stack = d.stack), $;
    }
    var AccountNameRequiredError = createCustomErrorClass("AccountNameRequired"), AccountNotSupported = createCustomErrorClass("AccountNotSupported"), AmountRequired = createCustomErrorClass("AmountRequired"), BluetoothRequired = createCustomErrorClass("BluetoothRequired"), BtcUnmatchedApp = createCustomErrorClass("BtcUnmatchedApp"), CantOpenDevice = createCustomErrorClass("CantOpenDevice"), CashAddrNotSupported = createCustomErrorClass("CashAddrNotSupported"), CurrencyNotSupported = createCustomErrorClass("CurrencyNotSupported"), DeviceAppVerifyNotSupported = createCustomErrorClass("DeviceAppVerifyNotSupported"), DeviceGenuineSocketEarlyClose = createCustomErrorClass("DeviceGenuineSocketEarlyClose"), DeviceNotGenuineError = createCustomErrorClass("DeviceNotGenuine"), DeviceOnDashboardExpected = createCustomErrorClass("DeviceOnDashboardExpected"), DeviceOnDashboardUnexpected = createCustomErrorClass("DeviceOnDashboardUnexpected"), DeviceInOSUExpected = createCustomErrorClass("DeviceInOSUExpected"), DeviceHalted = createCustomErrorClass("DeviceHalted"), DeviceNameInvalid = createCustomErrorClass("DeviceNameInvalid"), DeviceSocketFail = createCustomErrorClass("DeviceSocketFail"), DeviceSocketNoBulkStatus = createCustomErrorClass("DeviceSocketNoBulkStatus"), DisconnectedDevice = createCustomErrorClass("DisconnectedDevice"), DisconnectedDeviceDuringOperation = createCustomErrorClass("DisconnectedDeviceDuringOperation"), EnpointConfigError = createCustomErrorClass("EnpointConfig"), EthAppPleaseEnableContractData = createCustomErrorClass("EthAppPleaseEnableContractData"), FeeEstimationFailed = createCustomErrorClass("FeeEstimationFailed"), FirmwareNotRecognized = createCustomErrorClass("FirmwareNotRecognized"), HardResetFail = createCustomErrorClass("HardResetFail"), InvalidXRPTag = createCustomErrorClass("InvalidXRPTag"), InvalidAddress = createCustomErrorClass("InvalidAddress"), InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass("InvalidAddressBecauseDestinationIsAlsoSource"), LatestMCUInstalledError = createCustomErrorClass("LatestMCUInstalledError"), UnknownMCU = createCustomErrorClass("UnknownMCU"), LedgerAPIError = createCustomErrorClass("LedgerAPIError"), LedgerAPIErrorWithMessage = createCustomErrorClass("LedgerAPIErrorWithMessage"), LedgerAPINotAvailable = createCustomErrorClass("LedgerAPINotAvailable"), ManagerAppAlreadyInstalledError = createCustomErrorClass("ManagerAppAlreadyInstalled"), ManagerAppRelyOnBTCError = createCustomErrorClass("ManagerAppRelyOnBTC"), ManagerAppDepInstallRequired = createCustomErrorClass("ManagerAppDepInstallRequired"), ManagerAppDepUninstallRequired = createCustomErrorClass("ManagerAppDepUninstallRequired"), ManagerDeviceLockedError = createCustomErrorClass("ManagerDeviceLocked"), ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass("ManagerFirmwareNotEnoughSpace"), ManagerNotEnoughSpaceError = createCustomErrorClass("ManagerNotEnoughSpace"), ManagerUninstallBTCDep = createCustomErrorClass("ManagerUninstallBTCDep"), NetworkDown = createCustomErrorClass("NetworkDown"), NoAddressesFound = createCustomErrorClass("NoAddressesFound"), NotEnoughBalance = createCustomErrorClass("NotEnoughBalance"), NotEnoughBalanceToDelegate = createCustomErrorClass("NotEnoughBalanceToDelegate"), NotEnoughBalanceInParentAccount = createCustomErrorClass("NotEnoughBalanceInParentAccount"), NotEnoughSpendableBalance = createCustomErrorClass("NotEnoughSpendableBalance"), NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass("NotEnoughBalanceBecauseDestinationNotCreated"), NoAccessToCamera = createCustomErrorClass("NoAccessToCamera"), NotEnoughGas = createCustomErrorClass("NotEnoughGas"), NotSupportedLegacyAddress = createCustomErrorClass("NotSupportedLegacyAddress"), GasLessThanEstimate = createCustomErrorClass("GasLessThanEstimate"), PasswordsDontMatchError = createCustomErrorClass("PasswordsDontMatch"), PasswordIncorrectError = createCustomErrorClass("PasswordIncorrect"), RecommendSubAccountsToEmpty = createCustomErrorClass("RecommendSubAccountsToEmpty"), RecommendUndelegation = createCustomErrorClass("RecommendUndelegation"), TimeoutTagged = createCustomErrorClass("TimeoutTagged"), UnexpectedBootloader = createCustomErrorClass("UnexpectedBootloader"), MCUNotGenuineToDashboard = createCustomErrorClass("MCUNotGenuineToDashboard"), RecipientRequired = createCustomErrorClass("RecipientRequired"), UnavailableTezosOriginatedAccountReceive = createCustomErrorClass("UnavailableTezosOriginatedAccountReceive"), UnavailableTezosOriginatedAccountSend = createCustomErrorClass("UnavailableTezosOriginatedAccountSend"), UpdateFetchFileFail = createCustomErrorClass("UpdateFetchFileFail"), UpdateIncorrectHash = createCustomErrorClass("UpdateIncorrectHash"), UpdateIncorrectSig = createCustomErrorClass("UpdateIncorrectSig"), UpdateYourApp = createCustomErrorClass("UpdateYourApp"), UserRefusedDeviceNameChange = createCustomErrorClass("UserRefusedDeviceNameChange"), UserRefusedAddress = createCustomErrorClass("UserRefusedAddress"), UserRefusedFirmwareUpdate = createCustomErrorClass("UserRefusedFirmwareUpdate"), UserRefusedAllowManager = createCustomErrorClass("UserRefusedAllowManager"), UserRefusedOnDevice = createCustomErrorClass("UserRefusedOnDevice"), TransportOpenUserCancelled = createCustomErrorClass("TransportOpenUserCancelled"), TransportInterfaceNotAvailable = createCustomErrorClass("TransportInterfaceNotAvailable"), TransportRaceCondition = createCustomErrorClass("TransportRaceCondition"), TransportWebUSBGestureRequired = createCustomErrorClass("TransportWebUSBGestureRequired"), DeviceShouldStayInApp = createCustomErrorClass("DeviceShouldStayInApp"), WebsocketConnectionError = createCustomErrorClass("WebsocketConnectionError"), WebsocketConnectionFailed = createCustomErrorClass("WebsocketConnectionFailed"), WrongDeviceForAccount = createCustomErrorClass("WrongDeviceForAccount"), WrongAppForCurrency = createCustomErrorClass("WrongAppForCurrency"), ETHAddressNonEIP = createCustomErrorClass("ETHAddressNonEIP"), CantScanQRCode = createCustomErrorClass("CantScanQRCode"), FeeNotLoaded = createCustomErrorClass("FeeNotLoaded"), FeeRequired = createCustomErrorClass("FeeRequired"), FeeTooHigh = createCustomErrorClass("FeeTooHigh"), SyncError = createCustomErrorClass("SyncError"), PairingFailed = createCustomErrorClass("PairingFailed"), GenuineCheckFailed = createCustomErrorClass("GenuineCheckFailed"), LedgerAPI4xx = createCustomErrorClass("LedgerAPI4xx"), LedgerAPI5xx = createCustomErrorClass("LedgerAPI5xx"), FirmwareOrAppUpdateRequired = createCustomErrorClass("FirmwareOrAppUpdateRequired"), NoDBPathGiven = createCustomErrorClass("NoDBPathGiven"), DBWrongPassword = createCustomErrorClass("DBWrongPassword"), DBNotReset = createCustomErrorClass("DBNotReset");
    function TransportError(d, _) {
      this.name = "TransportError", this.message = d, this.stack = new Error().stack, this.id = _;
    }
    TransportError.prototype = new Error();
    addCustomErrorDeserializer("TransportError", function(d) {
      return new TransportError(d.message, d.id);
    });
    var StatusCodes = {
      PIN_REMAINING_ATTEMPTS: 25536,
      INCORRECT_LENGTH: 26368,
      MISSING_CRITICAL_PARAMETER: 26624,
      COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 27009,
      SECURITY_STATUS_NOT_SATISFIED: 27010,
      CONDITIONS_OF_USE_NOT_SATISFIED: 27013,
      INCORRECT_DATA: 27264,
      NOT_ENOUGH_MEMORY_SPACE: 27268,
      REFERENCED_DATA_NOT_FOUND: 27272,
      FILE_ALREADY_EXISTS: 27273,
      INCORRECT_P1_P2: 27392,
      INS_NOT_SUPPORTED: 27904,
      CLA_NOT_SUPPORTED: 28160,
      TECHNICAL_PROBLEM: 28416,
      OK: 36864,
      MEMORY_PROBLEM: 37440,
      NO_EF_SELECTED: 37888,
      INVALID_OFFSET: 37890,
      FILE_NOT_FOUND: 37892,
      INCONSISTENT_FILE: 37896,
      ALGORITHM_NOT_SUPPORTED: 38020,
      INVALID_KCV: 38021,
      CODE_NOT_INITIALIZED: 38914,
      ACCESS_CONDITION_NOT_FULFILLED: 38916,
      CONTRADICTION_SECRET_CODE_STATUS: 38920,
      CONTRADICTION_INVALIDATION: 38928,
      CODE_BLOCKED: 38976,
      MAX_VALUE_REACHED: 38992,
      GP_AUTH_FAILED: 25344,
      LICENSING: 28482,
      HALTED: 28586
    };
    function getAltStatusMessage(d) {
      switch (d) {
        case 26368:
          return "Incorrect length";
        case 26624:
          return "Missing critical parameter";
        case 27010:
          return "Security not satisfied (dongle locked or have invalid access rights)";
        case 27013:
          return "Condition of use not satisfied (denied by the user?)";
        case 27264:
          return "Invalid data received";
        case 27392:
          return "Invalid parameter received";
      }
      if (28416 <= d && d <= 28671) return "Internal error, please report";
    }
    function TransportStatusError(d) {
      this.name = "TransportStatusError";
      var _ = Object.keys(StatusCodes).find(function(rt) {
        return StatusCodes[rt] === d;
      }) || "UNKNOWN_ERROR", $ = getAltStatusMessage(d) || _, j = d.toString(16);
      this.message = "Ledger device: " + $ + " (0x" + j + ")", this.stack = new Error().stack, this.statusCode = d, this.statusText = _;
    }
    TransportStatusError.prototype = new Error();
    addCustomErrorDeserializer("TransportStatusError", function(d) {
      return new TransportStatusError(d.statusCode);
    });
    const dist = Object.freeze(Object.defineProperty({
      __proto__: null,
      AccountNameRequiredError,
      AccountNotSupported,
      AmountRequired,
      BluetoothRequired,
      BtcUnmatchedApp,
      CantOpenDevice,
      CantScanQRCode,
      CashAddrNotSupported,
      CurrencyNotSupported,
      DBNotReset,
      DBWrongPassword,
      DeviceAppVerifyNotSupported,
      DeviceGenuineSocketEarlyClose,
      DeviceHalted,
      DeviceInOSUExpected,
      DeviceNameInvalid,
      DeviceNotGenuineError,
      DeviceOnDashboardExpected,
      DeviceOnDashboardUnexpected,
      DeviceShouldStayInApp,
      DeviceSocketFail,
      DeviceSocketNoBulkStatus,
      DisconnectedDevice,
      DisconnectedDeviceDuringOperation,
      ETHAddressNonEIP,
      EnpointConfigError,
      EthAppPleaseEnableContractData,
      FeeEstimationFailed,
      FeeNotLoaded,
      FeeRequired,
      FeeTooHigh,
      FirmwareNotRecognized,
      FirmwareOrAppUpdateRequired,
      GasLessThanEstimate,
      GenuineCheckFailed,
      HardResetFail,
      InvalidAddress,
      InvalidAddressBecauseDestinationIsAlsoSource,
      InvalidXRPTag,
      LatestMCUInstalledError,
      LedgerAPI4xx,
      LedgerAPI5xx,
      LedgerAPIError,
      LedgerAPIErrorWithMessage,
      LedgerAPINotAvailable,
      MCUNotGenuineToDashboard,
      ManagerAppAlreadyInstalledError,
      ManagerAppDepInstallRequired,
      ManagerAppDepUninstallRequired,
      ManagerAppRelyOnBTCError,
      ManagerDeviceLockedError,
      ManagerFirmwareNotEnoughSpaceError,
      ManagerNotEnoughSpaceError,
      ManagerUninstallBTCDep,
      NetworkDown,
      NoAccessToCamera,
      NoAddressesFound,
      NoDBPathGiven,
      NotEnoughBalance,
      NotEnoughBalanceBecauseDestinationNotCreated,
      NotEnoughBalanceInParentAccount,
      NotEnoughBalanceToDelegate,
      NotEnoughGas,
      NotEnoughSpendableBalance,
      NotSupportedLegacyAddress,
      PairingFailed,
      PasswordIncorrectError,
      PasswordsDontMatchError,
      RecipientRequired,
      RecommendSubAccountsToEmpty,
      RecommendUndelegation,
      StatusCodes,
      SyncError,
      TimeoutTagged,
      TransportError,
      TransportInterfaceNotAvailable,
      TransportOpenUserCancelled,
      TransportRaceCondition,
      TransportStatusError,
      TransportWebUSBGestureRequired,
      UnavailableTezosOriginatedAccountReceive,
      UnavailableTezosOriginatedAccountSend,
      UnexpectedBootloader,
      UnknownMCU,
      UpdateFetchFileFail,
      UpdateIncorrectHash,
      UpdateIncorrectSig,
      UpdateYourApp,
      UserRefusedAddress,
      UserRefusedAllowManager,
      UserRefusedDeviceNameChange,
      UserRefusedFirmwareUpdate,
      UserRefusedOnDevice,
      WebsocketConnectionError,
      WebsocketConnectionFailed,
      WrongAppForCurrency,
      WrongDeviceForAccount,
      addCustomErrorDeserializer,
      createCustomErrorClass,
      deserializeError,
      getAltStatusMessage,
      serializeError
    }, Symbol.toStringTag, {
      value: "Module"
    }));
    class Transport {
      constructor() {
        this.exchangeTimeout = 3e4, this.unresponsiveTimeout = 15e3, this.deviceModel = null, this._events = new EventEmitter$1(), this.send = async (_, $, j, rt, et = Buffer.alloc(0), st = [
          StatusCodes.OK
        ]) => {
          if (et.length >= 256) throw new TransportError("data.length exceed 256 bytes limit. Got: " + et.length, "DataLengthTooBig");
          const pt = await this.exchange(Buffer.concat([
            Buffer.from([
              _,
              $,
              j,
              rt
            ]),
            Buffer.from([
              et.length
            ]),
            et
          ])), Et = pt.readUInt16BE(pt.length - 2);
          if (!st.some((Bt) => Bt === Et)) throw new TransportStatusError(Et);
          return pt;
        }, this.exchangeBusyPromise = void 0, this.exchangeAtomicImpl = async (_) => {
          if (this.exchangeBusyPromise) throw new TransportRaceCondition("An action was already pending on the Ledger device. Please deny or reconnect.");
          let $;
          const j = new Promise((st) => {
            $ = st;
          });
          this.exchangeBusyPromise = j;
          let rt = false;
          const et = setTimeout(() => {
            rt = true, this.emit("unresponsive");
          }, this.unresponsiveTimeout);
          try {
            const st = await _();
            return rt && this.emit("responsive"), st;
          } finally {
            clearTimeout(et), $ && $(), this.exchangeBusyPromise = null;
          }
        }, this._appAPIlock = null;
      }
      exchange(_) {
        throw new Error("exchange not implemented");
      }
      setScrambleKey(_) {
      }
      close() {
        return Promise.resolve();
      }
      on(_, $) {
        this._events.on(_, $);
      }
      off(_, $) {
        this._events.removeListener(_, $);
      }
      emit(_, ...$) {
        this._events.emit(_, ...$);
      }
      setDebugMode() {
        console.warn("setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.");
      }
      setExchangeTimeout(_) {
        this.exchangeTimeout = _;
      }
      setExchangeUnresponsiveTimeout(_) {
        this.unresponsiveTimeout = _;
      }
      static create(_ = 3e3, $) {
        return new Promise((j, rt) => {
          let et = false;
          const st = this.listen({
            next: (Et) => {
              et = true, st && st.unsubscribe(), pt && clearTimeout(pt), this.open(Et.descriptor, _).then(j, rt);
            },
            error: (Et) => {
              pt && clearTimeout(pt), rt(Et);
            },
            complete: () => {
              pt && clearTimeout(pt), et || rt(new TransportError(this.ErrorMessage_NoDeviceFound, "NoDeviceFound"));
            }
          }), pt = $ ? setTimeout(() => {
            st.unsubscribe(), rt(new TransportError(this.ErrorMessage_ListenTimeout, "ListenTimeout"));
          }, $) : null;
        });
      }
      decorateAppAPIMethods(_, $, j) {
        for (let rt of $) _[rt] = this.decorateAppAPIMethod(rt, _[rt], _, j);
      }
      decorateAppAPIMethod(_, $, j, rt) {
        return async (...et) => {
          const { _appAPIlock: st } = this;
          if (st) return Promise.reject(new TransportError("Ledger Device is busy (lock " + st + ")", "TransportLocked"));
          try {
            return this._appAPIlock = _, this.setScrambleKey(rt), await $.apply(j, et);
          } finally {
            this._appAPIlock = null;
          }
        };
      }
    }
    Transport.isSupported = void 0;
    Transport.list = void 0;
    Transport.listen = void 0;
    Transport.open = void 0;
    Transport.ErrorMessage_ListenTimeout = "No Ledger device found (timeout)";
    Transport.ErrorMessage_NoDeviceFound = "No Ledger device found";
    var hidFraming = {};
    const require$$0 = getAugmentedNamespace(dist);
    Object.defineProperty(hidFraming, "__esModule", {
      value: true
    });
    var default_1 = hidFraming.default = void 0, _errors$1 = require$$0;
    const Tag = 5;
    function asUInt16BE(d) {
      const _ = Buffer.alloc(2);
      return _.writeUInt16BE(d, 0), _;
    }
    const initialAcc = {
      data: Buffer.alloc(0),
      dataLength: 0,
      sequence: 0
    }, createHIDframing = (d, _) => ({
      makeBlocks($) {
        let j = Buffer.concat([
          asUInt16BE($.length),
          $
        ]);
        const rt = _ - 5, et = Math.ceil(j.length / rt);
        j = Buffer.concat([
          j,
          Buffer.alloc(et * rt - j.length + 1).fill(0)
        ]);
        const st = [];
        for (let pt = 0; pt < et; pt++) {
          const Et = Buffer.alloc(5);
          Et.writeUInt16BE(d, 0), Et.writeUInt8(Tag, 2), Et.writeUInt16BE(pt, 3);
          const Bt = j.slice(pt * rt, (pt + 1) * rt);
          st.push(Buffer.concat([
            Et,
            Bt
          ]));
        }
        return st;
      },
      reduceResponse($, j) {
        let { data: rt, dataLength: et, sequence: st } = $ || initialAcc;
        if (j.readUInt16BE(0) !== d) throw new _errors$1.TransportError("Invalid channel", "InvalidChannel");
        if (j.readUInt8(2) !== Tag) throw new _errors$1.TransportError("Invalid tag", "InvalidTag");
        if (j.readUInt16BE(3) !== st) throw new _errors$1.TransportError("Invalid sequence", "InvalidSequence");
        $ || (et = j.readUInt16BE(5)), st++;
        const pt = j.slice($ ? 5 : 7);
        return rt = Buffer.concat([
          rt,
          pt
        ]), rt.length > et && (rt = rt.slice(0, et)), {
          data: rt,
          dataLength: et,
          sequence: st
        };
      },
      getReducedResult($) {
        if ($ && $.dataLength === $.data.length) return $.data;
      }
    });
    var _default = createHIDframing;
    default_1 = hidFraming.default = _default;
    var re$2 = {
      exports: {}
    };
    const SEMVER_SPEC_VERSION = "2.0.0", MAX_LENGTH$1 = 256, MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH = 16, MAX_SAFE_BUILD_LENGTH = MAX_LENGTH$1 - 6, RELEASE_TYPES = [
      "major",
      "premajor",
      "minor",
      "preminor",
      "patch",
      "prepatch",
      "prerelease"
    ];
    var constants$1 = {
      MAX_LENGTH: MAX_LENGTH$1,
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_SAFE_INTEGER: MAX_SAFE_INTEGER$1,
      RELEASE_TYPES,
      SEMVER_SPEC_VERSION,
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2
    }, define_process_env_default = {};
    const debug$1 = typeof process$1 == "object" && define_process_env_default && define_process_env_default.NODE_DEBUG && /\bsemver\b/i.test(define_process_env_default.NODE_DEBUG) ? (...d) => console.error("SEMVER", ...d) : () => {
    };
    var debug_1 = debug$1;
    (function(d, _) {
      const { MAX_SAFE_COMPONENT_LENGTH: $, MAX_SAFE_BUILD_LENGTH: j, MAX_LENGTH: rt } = constants$1, et = debug_1;
      _ = d.exports = {};
      const st = _.re = [], pt = _.safeRe = [], Et = _.src = [], Bt = _.safeSrc = [], St = _.t = {};
      let $t = 0;
      const kt = "[a-zA-Z0-9-]", Tt = [
        [
          "\\s",
          1
        ],
        [
          "\\d",
          rt
        ],
        [
          kt,
          j
        ]
      ], Pt = (jt) => {
        for (const [Dt, Ot] of Tt) jt = jt.split(`${Dt}*`).join(`${Dt}{0,${Ot}}`).split(`${Dt}+`).join(`${Dt}{1,${Ot}}`);
        return jt;
      }, It = (jt, Dt, Ot) => {
        const Ft = Pt(Dt), Lt = $t++;
        et(jt, Lt, Dt), St[jt] = Lt, Et[Lt] = Dt, Bt[Lt] = Ft, st[Lt] = new RegExp(Dt, Ot ? "g" : void 0), pt[Lt] = new RegExp(Ft, Ot ? "g" : void 0);
      };
      It("NUMERICIDENTIFIER", "0|[1-9]\\d*"), It("NUMERICIDENTIFIERLOOSE", "\\d+"), It("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${kt}*`), It("MAINVERSION", `(${Et[St.NUMERICIDENTIFIER]})\\.(${Et[St.NUMERICIDENTIFIER]})\\.(${Et[St.NUMERICIDENTIFIER]})`), It("MAINVERSIONLOOSE", `(${Et[St.NUMERICIDENTIFIERLOOSE]})\\.(${Et[St.NUMERICIDENTIFIERLOOSE]})\\.(${Et[St.NUMERICIDENTIFIERLOOSE]})`), It("PRERELEASEIDENTIFIER", `(?:${Et[St.NUMERICIDENTIFIER]}|${Et[St.NONNUMERICIDENTIFIER]})`), It("PRERELEASEIDENTIFIERLOOSE", `(?:${Et[St.NUMERICIDENTIFIERLOOSE]}|${Et[St.NONNUMERICIDENTIFIER]})`), It("PRERELEASE", `(?:-(${Et[St.PRERELEASEIDENTIFIER]}(?:\\.${Et[St.PRERELEASEIDENTIFIER]})*))`), It("PRERELEASELOOSE", `(?:-?(${Et[St.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${Et[St.PRERELEASEIDENTIFIERLOOSE]})*))`), It("BUILDIDENTIFIER", `${kt}+`), It("BUILD", `(?:\\+(${Et[St.BUILDIDENTIFIER]}(?:\\.${Et[St.BUILDIDENTIFIER]})*))`), It("FULLPLAIN", `v?${Et[St.MAINVERSION]}${Et[St.PRERELEASE]}?${Et[St.BUILD]}?`), It("FULL", `^${Et[St.FULLPLAIN]}$`), It("LOOSEPLAIN", `[v=\\s]*${Et[St.MAINVERSIONLOOSE]}${Et[St.PRERELEASELOOSE]}?${Et[St.BUILD]}?`), It("LOOSE", `^${Et[St.LOOSEPLAIN]}$`), It("GTLT", "((?:<|>)?=?)"), It("XRANGEIDENTIFIERLOOSE", `${Et[St.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`), It("XRANGEIDENTIFIER", `${Et[St.NUMERICIDENTIFIER]}|x|X|\\*`), It("XRANGEPLAIN", `[v=\\s]*(${Et[St.XRANGEIDENTIFIER]})(?:\\.(${Et[St.XRANGEIDENTIFIER]})(?:\\.(${Et[St.XRANGEIDENTIFIER]})(?:${Et[St.PRERELEASE]})?${Et[St.BUILD]}?)?)?`), It("XRANGEPLAINLOOSE", `[v=\\s]*(${Et[St.XRANGEIDENTIFIERLOOSE]})(?:\\.(${Et[St.XRANGEIDENTIFIERLOOSE]})(?:\\.(${Et[St.XRANGEIDENTIFIERLOOSE]})(?:${Et[St.PRERELEASELOOSE]})?${Et[St.BUILD]}?)?)?`), It("XRANGE", `^${Et[St.GTLT]}\\s*${Et[St.XRANGEPLAIN]}$`), It("XRANGELOOSE", `^${Et[St.GTLT]}\\s*${Et[St.XRANGEPLAINLOOSE]}$`), It("COERCEPLAIN", `(^|[^\\d])(\\d{1,${$}})(?:\\.(\\d{1,${$}}))?(?:\\.(\\d{1,${$}}))?`), It("COERCE", `${Et[St.COERCEPLAIN]}(?:$|[^\\d])`), It("COERCEFULL", Et[St.COERCEPLAIN] + `(?:${Et[St.PRERELEASE]})?(?:${Et[St.BUILD]})?(?:$|[^\\d])`), It("COERCERTL", Et[St.COERCE], true), It("COERCERTLFULL", Et[St.COERCEFULL], true), It("LONETILDE", "(?:~>?)"), It("TILDETRIM", `(\\s*)${Et[St.LONETILDE]}\\s+`, true), _.tildeTrimReplace = "$1~", It("TILDE", `^${Et[St.LONETILDE]}${Et[St.XRANGEPLAIN]}$`), It("TILDELOOSE", `^${Et[St.LONETILDE]}${Et[St.XRANGEPLAINLOOSE]}$`), It("LONECARET", "(?:\\^)"), It("CARETTRIM", `(\\s*)${Et[St.LONECARET]}\\s+`, true), _.caretTrimReplace = "$1^", It("CARET", `^${Et[St.LONECARET]}${Et[St.XRANGEPLAIN]}$`), It("CARETLOOSE", `^${Et[St.LONECARET]}${Et[St.XRANGEPLAINLOOSE]}$`), It("COMPARATORLOOSE", `^${Et[St.GTLT]}\\s*(${Et[St.LOOSEPLAIN]})$|^$`), It("COMPARATOR", `^${Et[St.GTLT]}\\s*(${Et[St.FULLPLAIN]})$|^$`), It("COMPARATORTRIM", `(\\s*)${Et[St.GTLT]}\\s*(${Et[St.LOOSEPLAIN]}|${Et[St.XRANGEPLAIN]})`, true), _.comparatorTrimReplace = "$1$2$3", It("HYPHENRANGE", `^\\s*(${Et[St.XRANGEPLAIN]})\\s+-\\s+(${Et[St.XRANGEPLAIN]})\\s*$`), It("HYPHENRANGELOOSE", `^\\s*(${Et[St.XRANGEPLAINLOOSE]})\\s+-\\s+(${Et[St.XRANGEPLAINLOOSE]})\\s*$`), It("STAR", "(<|>)?=?\\s*\\*"), It("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"), It("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
    })(re$2, re$2.exports);
    var reExports = re$2.exports;
    const looseOption = Object.freeze({
      loose: true
    }), emptyOpts = Object.freeze({}), parseOptions$1 = (d) => d ? typeof d != "object" ? looseOption : d : emptyOpts;
    var parseOptions_1 = parseOptions$1;
    const numeric = /^[0-9]+$/, compareIdentifiers$1 = (d, _) => {
      const $ = numeric.test(d), j = numeric.test(_);
      return $ && j && (d = +d, _ = +_), d === _ ? 0 : $ && !j ? -1 : j && !$ ? 1 : d < _ ? -1 : 1;
    }, rcompareIdentifiers = (d, _) => compareIdentifiers$1(_, d);
    var identifiers$1 = {
      compareIdentifiers: compareIdentifiers$1,
      rcompareIdentifiers
    };
    const debug = debug_1, { MAX_LENGTH, MAX_SAFE_INTEGER } = constants$1, { safeRe: re$1, safeSrc: src$1, t: t$1 } = reExports, parseOptions = parseOptions_1, { compareIdentifiers } = identifiers$1;
    let SemVer$d = class Hn {
      constructor(_, $) {
        if ($ = parseOptions($), _ instanceof Hn) {
          if (_.loose === !!$.loose && _.includePrerelease === !!$.includePrerelease) return _;
          _ = _.version;
        } else if (typeof _ != "string") throw new TypeError(`Invalid version. Must be a string. Got type "${typeof _}".`);
        if (_.length > MAX_LENGTH) throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);
        debug("SemVer", _, $), this.options = $, this.loose = !!$.loose, this.includePrerelease = !!$.includePrerelease;
        const j = _.trim().match($.loose ? re$1[t$1.LOOSE] : re$1[t$1.FULL]);
        if (!j) throw new TypeError(`Invalid Version: ${_}`);
        if (this.raw = _, this.major = +j[1], this.minor = +j[2], this.patch = +j[3], this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError("Invalid major version");
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError("Invalid minor version");
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError("Invalid patch version");
        j[4] ? this.prerelease = j[4].split(".").map((rt) => {
          if (/^[0-9]+$/.test(rt)) {
            const et = +rt;
            if (et >= 0 && et < MAX_SAFE_INTEGER) return et;
          }
          return rt;
        }) : this.prerelease = [], this.build = j[5] ? j[5].split(".") : [], this.format();
      }
      format() {
        return this.version = `${this.major}.${this.minor}.${this.patch}`, this.prerelease.length && (this.version += `-${this.prerelease.join(".")}`), this.version;
      }
      toString() {
        return this.version;
      }
      compare(_) {
        if (debug("SemVer.compare", this.version, this.options, _), !(_ instanceof Hn)) {
          if (typeof _ == "string" && _ === this.version) return 0;
          _ = new Hn(_, this.options);
        }
        return _.version === this.version ? 0 : this.compareMain(_) || this.comparePre(_);
      }
      compareMain(_) {
        return _ instanceof Hn || (_ = new Hn(_, this.options)), compareIdentifiers(this.major, _.major) || compareIdentifiers(this.minor, _.minor) || compareIdentifiers(this.patch, _.patch);
      }
      comparePre(_) {
        if (_ instanceof Hn || (_ = new Hn(_, this.options)), this.prerelease.length && !_.prerelease.length) return -1;
        if (!this.prerelease.length && _.prerelease.length) return 1;
        if (!this.prerelease.length && !_.prerelease.length) return 0;
        let $ = 0;
        do {
          const j = this.prerelease[$], rt = _.prerelease[$];
          if (debug("prerelease compare", $, j, rt), j === void 0 && rt === void 0) return 0;
          if (rt === void 0) return 1;
          if (j === void 0) return -1;
          if (j === rt) continue;
          return compareIdentifiers(j, rt);
        } while (++$);
      }
      compareBuild(_) {
        _ instanceof Hn || (_ = new Hn(_, this.options));
        let $ = 0;
        do {
          const j = this.build[$], rt = _.build[$];
          if (debug("build compare", $, j, rt), j === void 0 && rt === void 0) return 0;
          if (rt === void 0) return 1;
          if (j === void 0) return -1;
          if (j === rt) continue;
          return compareIdentifiers(j, rt);
        } while (++$);
      }
      inc(_, $, j) {
        if (_.startsWith("pre")) {
          if (!$ && j === false) throw new Error("invalid increment argument: identifier is empty");
          if ($) {
            const rt = new RegExp(`^${this.options.loose ? src$1[t$1.PRERELEASELOOSE] : src$1[t$1.PRERELEASE]}$`), et = `-${$}`.match(rt);
            if (!et || et[1] !== $) throw new Error(`invalid identifier: ${$}`);
          }
        }
        switch (_) {
          case "premajor":
            this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", $, j);
            break;
          case "preminor":
            this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", $, j);
            break;
          case "prepatch":
            this.prerelease.length = 0, this.inc("patch", $, j), this.inc("pre", $, j);
            break;
          case "prerelease":
            this.prerelease.length === 0 && this.inc("patch", $, j), this.inc("pre", $, j);
            break;
          case "release":
            if (this.prerelease.length === 0) throw new Error(`version ${this.raw} is not a prerelease`);
            this.prerelease.length = 0;
            break;
          case "major":
            (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
            break;
          case "minor":
            (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = [];
            break;
          case "patch":
            this.prerelease.length === 0 && this.patch++, this.prerelease = [];
            break;
          case "pre": {
            const rt = Number(j) ? 1 : 0;
            if (this.prerelease.length === 0) this.prerelease = [
              rt
            ];
            else {
              let et = this.prerelease.length;
              for (; --et >= 0; ) typeof this.prerelease[et] == "number" && (this.prerelease[et]++, et = -2);
              if (et === -1) {
                if ($ === this.prerelease.join(".") && j === false) throw new Error("invalid increment argument: identifier already exists");
                this.prerelease.push(rt);
              }
            }
            if ($) {
              let et = [
                $,
                rt
              ];
              j === false && (et = [
                $
              ]), compareIdentifiers(this.prerelease[0], $) === 0 ? isNaN(this.prerelease[1]) && (this.prerelease = et) : this.prerelease = et;
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${_}`);
        }
        return this.raw = this.format(), this.build.length && (this.raw += `+${this.build.join(".")}`), this;
      }
    };
    var semver$2 = SemVer$d;
    const SemVer$c = semver$2, parse$6 = (d, _, $ = false) => {
      if (d instanceof SemVer$c) return d;
      try {
        return new SemVer$c(d, _);
      } catch (j) {
        if (!$) return null;
        throw j;
      }
    };
    var parse_1 = parse$6;
    const parse$5 = parse_1, valid$2 = (d, _) => {
      const $ = parse$5(d, _);
      return $ ? $.version : null;
    };
    var valid_1 = valid$2;
    const parse$4 = parse_1, clean$1 = (d, _) => {
      const $ = parse$4(d.trim().replace(/^[=v]+/, ""), _);
      return $ ? $.version : null;
    };
    var clean_1 = clean$1;
    const SemVer$b = semver$2, inc$1 = (d, _, $, j, rt) => {
      typeof $ == "string" && (rt = j, j = $, $ = void 0);
      try {
        return new SemVer$b(d instanceof SemVer$b ? d.version : d, $).inc(_, j, rt).version;
      } catch {
        return null;
      }
    };
    var inc_1 = inc$1;
    const parse$3 = parse_1, diff$1 = (d, _) => {
      const $ = parse$3(d, null, true), j = parse$3(_, null, true), rt = $.compare(j);
      if (rt === 0) return null;
      const et = rt > 0, st = et ? $ : j, pt = et ? j : $, Et = !!st.prerelease.length;
      if (!!pt.prerelease.length && !Et) {
        if (!pt.patch && !pt.minor) return "major";
        if (pt.compareMain(st) === 0) return pt.minor && !pt.patch ? "minor" : "patch";
      }
      const St = Et ? "pre" : "";
      return $.major !== j.major ? St + "major" : $.minor !== j.minor ? St + "minor" : $.patch !== j.patch ? St + "patch" : "prerelease";
    };
    var diff_1 = diff$1;
    const SemVer$a = semver$2, major$1 = (d, _) => new SemVer$a(d, _).major;
    var major_1 = major$1;
    const SemVer$9 = semver$2, minor$1 = (d, _) => new SemVer$9(d, _).minor;
    var minor_1 = minor$1;
    const SemVer$8 = semver$2, patch$1 = (d, _) => new SemVer$8(d, _).patch;
    var patch_1 = patch$1;
    const parse$2 = parse_1, prerelease$1 = (d, _) => {
      const $ = parse$2(d, _);
      return $ && $.prerelease.length ? $.prerelease : null;
    };
    var prerelease_1 = prerelease$1;
    const SemVer$7 = semver$2, compare$b = (d, _, $) => new SemVer$7(d, $).compare(new SemVer$7(_, $));
    var compare_1 = compare$b;
    const compare$a = compare_1, rcompare$1 = (d, _, $) => compare$a(_, d, $);
    var rcompare_1 = rcompare$1;
    const compare$9 = compare_1, compareLoose$1 = (d, _) => compare$9(d, _, true);
    var compareLoose_1 = compareLoose$1;
    const SemVer$6 = semver$2, compareBuild$3 = (d, _, $) => {
      const j = new SemVer$6(d, $), rt = new SemVer$6(_, $);
      return j.compare(rt) || j.compareBuild(rt);
    };
    var compareBuild_1 = compareBuild$3;
    const compareBuild$2 = compareBuild_1, sort$1 = (d, _) => d.sort(($, j) => compareBuild$2($, j, _));
    var sort_1 = sort$1;
    const compareBuild$1 = compareBuild_1, rsort$1 = (d, _) => d.sort(($, j) => compareBuild$1(j, $, _));
    var rsort_1 = rsort$1;
    const compare$8 = compare_1, gt$5 = (d, _, $) => compare$8(d, _, $) > 0;
    var gt_1 = gt$5;
    const compare$7 = compare_1, lt$3 = (d, _, $) => compare$7(d, _, $) < 0;
    var lt_1 = lt$3;
    const compare$6 = compare_1, eq$2 = (d, _, $) => compare$6(d, _, $) === 0;
    var eq_1 = eq$2;
    const compare$5 = compare_1, neq$2 = (d, _, $) => compare$5(d, _, $) !== 0;
    var neq_1 = neq$2;
    const compare$4 = compare_1, gte$3 = (d, _, $) => compare$4(d, _, $) >= 0;
    var gte_1 = gte$3;
    const compare$3 = compare_1, lte$3 = (d, _, $) => compare$3(d, _, $) <= 0;
    var lte_1 = lte$3;
    const eq$1 = eq_1, neq$1 = neq_1, gt$4 = gt_1, gte$2 = gte_1, lt$2 = lt_1, lte$2 = lte_1, cmp$1 = (d, _, $, j) => {
      switch (_) {
        case "===":
          return typeof d == "object" && (d = d.version), typeof $ == "object" && ($ = $.version), d === $;
        case "!==":
          return typeof d == "object" && (d = d.version), typeof $ == "object" && ($ = $.version), d !== $;
        case "":
        case "=":
        case "==":
          return eq$1(d, $, j);
        case "!=":
          return neq$1(d, $, j);
        case ">":
          return gt$4(d, $, j);
        case ">=":
          return gte$2(d, $, j);
        case "<":
          return lt$2(d, $, j);
        case "<=":
          return lte$2(d, $, j);
        default:
          throw new TypeError(`Invalid operator: ${_}`);
      }
    };
    var cmp_1 = cmp$1;
    const SemVer$5 = semver$2, parse$1 = parse_1, { safeRe: re, t } = reExports, coerce$1 = (d, _) => {
      if (d instanceof SemVer$5) return d;
      if (typeof d == "number" && (d = String(d)), typeof d != "string") return null;
      _ = _ || {};
      let $ = null;
      if (!_.rtl) $ = d.match(_.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);
      else {
        const Et = _.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];
        let Bt;
        for (; (Bt = Et.exec(d)) && (!$ || $.index + $[0].length !== d.length); ) (!$ || Bt.index + Bt[0].length !== $.index + $[0].length) && ($ = Bt), Et.lastIndex = Bt.index + Bt[1].length + Bt[2].length;
        Et.lastIndex = -1;
      }
      if ($ === null) return null;
      const j = $[2], rt = $[3] || "0", et = $[4] || "0", st = _.includePrerelease && $[5] ? `-${$[5]}` : "", pt = _.includePrerelease && $[6] ? `+${$[6]}` : "";
      return parse$1(`${j}.${rt}.${et}${st}${pt}`, _);
    };
    var coerce_1 = coerce$1;
    class LRUCache {
      constructor() {
        this.max = 1e3, this.map = /* @__PURE__ */ new Map();
      }
      get(_) {
        const $ = this.map.get(_);
        if ($ !== void 0) return this.map.delete(_), this.map.set(_, $), $;
      }
      delete(_) {
        return this.map.delete(_);
      }
      set(_, $) {
        if (!this.delete(_) && $ !== void 0) {
          if (this.map.size >= this.max) {
            const rt = this.map.keys().next().value;
            this.delete(rt);
          }
          this.map.set(_, $);
        }
        return this;
      }
    }
    var lrucache = LRUCache, range$1, hasRequiredRange;
    function requireRange() {
      if (hasRequiredRange) return range$1;
      hasRequiredRange = 1;
      const d = /\s+/g;
      class _ {
        constructor(at, ct) {
          if (ct = rt(ct), at instanceof _) return at.loose === !!ct.loose && at.includePrerelease === !!ct.includePrerelease ? at : new _(at.raw, ct);
          if (at instanceof et) return this.raw = at.value, this.set = [
            [
              at
            ]
          ], this.formatted = void 0, this;
          if (this.options = ct, this.loose = !!ct.loose, this.includePrerelease = !!ct.includePrerelease, this.raw = at.trim().replace(d, " "), this.set = this.raw.split("||").map((Mt) => this.parseRange(Mt.trim())).filter((Mt) => Mt.length), !this.set.length) throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
          if (this.set.length > 1) {
            const Mt = this.set[0];
            if (this.set = this.set.filter((At) => !It(At[0])), this.set.length === 0) this.set = [
              Mt
            ];
            else if (this.set.length > 1) {
              for (const At of this.set) if (At.length === 1 && jt(At[0])) {
                this.set = [
                  At
                ];
                break;
              }
            }
          }
          this.formatted = void 0;
        }
        get range() {
          if (this.formatted === void 0) {
            this.formatted = "";
            for (let at = 0; at < this.set.length; at++) {
              at > 0 && (this.formatted += "||");
              const ct = this.set[at];
              for (let Mt = 0; Mt < ct.length; Mt++) Mt > 0 && (this.formatted += " "), this.formatted += ct[Mt].toString().trim();
            }
          }
          return this.formatted;
        }
        format() {
          return this.range;
        }
        toString() {
          return this.range;
        }
        parseRange(at) {
          const Mt = ((this.options.includePrerelease && Tt) | (this.options.loose && Pt)) + ":" + at, At = j.get(Mt);
          if (At) return At;
          const ut = this.options.loose, ot = ut ? Et[Bt.HYPHENRANGELOOSE] : Et[Bt.HYPHENRANGE];
          at = at.replace(ot, tt(this.options.includePrerelease)), st("hyphen replace", at), at = at.replace(Et[Bt.COMPARATORTRIM], St), st("comparator trim", at), at = at.replace(Et[Bt.TILDETRIM], $t), st("tilde trim", at), at = at.replace(Et[Bt.CARETTRIM], kt), st("caret trim", at);
          let Ct = at.split(" ").map((Xt) => Ot(Xt, this.options)).join(" ").split(/\s+/).map((Xt) => xt(Xt, this.options));
          ut && (Ct = Ct.filter((Xt) => (st("loose invalid filter", Xt, this.options), !!Xt.match(Et[Bt.COMPARATORLOOSE])))), st("range list", Ct);
          const Rt = /* @__PURE__ */ new Map(), Nt = Ct.map((Xt) => new et(Xt, this.options));
          for (const Xt of Nt) {
            if (It(Xt)) return [
              Xt
            ];
            Rt.set(Xt.value, Xt);
          }
          Rt.size > 1 && Rt.has("") && Rt.delete("");
          const Wt = [
            ...Rt.values()
          ];
          return j.set(Mt, Wt), Wt;
        }
        intersects(at, ct) {
          if (!(at instanceof _)) throw new TypeError("a Range is required");
          return this.set.some((Mt) => Dt(Mt, ct) && at.set.some((At) => Dt(At, ct) && Mt.every((ut) => At.every((ot) => ut.intersects(ot, ct)))));
        }
        test(at) {
          if (!at) return false;
          if (typeof at == "string") try {
            at = new pt(at, this.options);
          } catch {
            return false;
          }
          for (let ct = 0; ct < this.set.length; ct++) if (nt(this.set[ct], at, this.options)) return true;
          return false;
        }
      }
      range$1 = _;
      const $ = lrucache, j = new $(), rt = parseOptions_1, et = requireComparator(), st = debug_1, pt = semver$2, { safeRe: Et, t: Bt, comparatorTrimReplace: St, tildeTrimReplace: $t, caretTrimReplace: kt } = reExports, { FLAG_INCLUDE_PRERELEASE: Tt, FLAG_LOOSE: Pt } = constants$1, It = (it) => it.value === "<0.0.0-0", jt = (it) => it.value === "", Dt = (it, at) => {
        let ct = true;
        const Mt = it.slice();
        let At = Mt.pop();
        for (; ct && Mt.length; ) ct = Mt.every((ut) => At.intersects(ut, at)), At = Mt.pop();
        return ct;
      }, Ot = (it, at) => (st("comp", it, at), it = Kt(it, at), st("caret", it), it = Lt(it, at), st("tildes", it), it = sr(it, at), st("xrange", it), it = Ut(it, at), st("stars", it), it), Ft = (it) => !it || it.toLowerCase() === "x" || it === "*", Lt = (it, at) => it.trim().split(/\s+/).map((ct) => Zt(ct, at)).join(" "), Zt = (it, at) => {
        const ct = at.loose ? Et[Bt.TILDELOOSE] : Et[Bt.TILDE];
        return it.replace(ct, (Mt, At, ut, ot, Ct) => {
          st("tilde", it, Mt, At, ut, ot, Ct);
          let Rt;
          return Ft(At) ? Rt = "" : Ft(ut) ? Rt = `>=${At}.0.0 <${+At + 1}.0.0-0` : Ft(ot) ? Rt = `>=${At}.${ut}.0 <${At}.${+ut + 1}.0-0` : Ct ? (st("replaceTilde pr", Ct), Rt = `>=${At}.${ut}.${ot}-${Ct} <${At}.${+ut + 1}.0-0`) : Rt = `>=${At}.${ut}.${ot} <${At}.${+ut + 1}.0-0`, st("tilde return", Rt), Rt;
        });
      }, Kt = (it, at) => it.trim().split(/\s+/).map((ct) => ar(ct, at)).join(" "), ar = (it, at) => {
        st("caret", it, at);
        const ct = at.loose ? Et[Bt.CARETLOOSE] : Et[Bt.CARET], Mt = at.includePrerelease ? "-0" : "";
        return it.replace(ct, (At, ut, ot, Ct, Rt) => {
          st("caret", it, At, ut, ot, Ct, Rt);
          let Nt;
          return Ft(ut) ? Nt = "" : Ft(ot) ? Nt = `>=${ut}.0.0${Mt} <${+ut + 1}.0.0-0` : Ft(Ct) ? ut === "0" ? Nt = `>=${ut}.${ot}.0${Mt} <${ut}.${+ot + 1}.0-0` : Nt = `>=${ut}.${ot}.0${Mt} <${+ut + 1}.0.0-0` : Rt ? (st("replaceCaret pr", Rt), ut === "0" ? ot === "0" ? Nt = `>=${ut}.${ot}.${Ct}-${Rt} <${ut}.${ot}.${+Ct + 1}-0` : Nt = `>=${ut}.${ot}.${Ct}-${Rt} <${ut}.${+ot + 1}.0-0` : Nt = `>=${ut}.${ot}.${Ct}-${Rt} <${+ut + 1}.0.0-0`) : (st("no pr"), ut === "0" ? ot === "0" ? Nt = `>=${ut}.${ot}.${Ct}${Mt} <${ut}.${ot}.${+Ct + 1}-0` : Nt = `>=${ut}.${ot}.${Ct}${Mt} <${ut}.${+ot + 1}.0-0` : Nt = `>=${ut}.${ot}.${Ct} <${+ut + 1}.0.0-0`), st("caret return", Nt), Nt;
        });
      }, sr = (it, at) => (st("replaceXRanges", it, at), it.split(/\s+/).map((ct) => er(ct, at)).join(" ")), er = (it, at) => {
        it = it.trim();
        const ct = at.loose ? Et[Bt.XRANGELOOSE] : Et[Bt.XRANGE];
        return it.replace(ct, (Mt, At, ut, ot, Ct, Rt) => {
          st("xRange", it, Mt, At, ut, ot, Ct, Rt);
          const Nt = Ft(ut), Wt = Nt || Ft(ot), Xt = Wt || Ft(Ct), rr = Xt;
          return At === "=" && rr && (At = ""), Rt = at.includePrerelease ? "-0" : "", Nt ? At === ">" || At === "<" ? Mt = "<0.0.0-0" : Mt = "*" : At && rr ? (Wt && (ot = 0), Ct = 0, At === ">" ? (At = ">=", Wt ? (ut = +ut + 1, ot = 0, Ct = 0) : (ot = +ot + 1, Ct = 0)) : At === "<=" && (At = "<", Wt ? ut = +ut + 1 : ot = +ot + 1), At === "<" && (Rt = "-0"), Mt = `${At + ut}.${ot}.${Ct}${Rt}`) : Wt ? Mt = `>=${ut}.0.0${Rt} <${+ut + 1}.0.0-0` : Xt && (Mt = `>=${ut}.${ot}.0${Rt} <${ut}.${+ot + 1}.0-0`), st("xRange return", Mt), Mt;
        });
      }, Ut = (it, at) => (st("replaceStars", it, at), it.trim().replace(Et[Bt.STAR], "")), xt = (it, at) => (st("replaceGTE0", it, at), it.trim().replace(Et[at.includePrerelease ? Bt.GTE0PRE : Bt.GTE0], "")), tt = (it) => (at, ct, Mt, At, ut, ot, Ct, Rt, Nt, Wt, Xt, rr) => (Ft(Mt) ? ct = "" : Ft(At) ? ct = `>=${Mt}.0.0${it ? "-0" : ""}` : Ft(ut) ? ct = `>=${Mt}.${At}.0${it ? "-0" : ""}` : ot ? ct = `>=${ct}` : ct = `>=${ct}${it ? "-0" : ""}`, Ft(Nt) ? Rt = "" : Ft(Wt) ? Rt = `<${+Nt + 1}.0.0-0` : Ft(Xt) ? Rt = `<${Nt}.${+Wt + 1}.0-0` : rr ? Rt = `<=${Nt}.${Wt}.${Xt}-${rr}` : it ? Rt = `<${Nt}.${Wt}.${+Xt + 1}-0` : Rt = `<=${Rt}`, `${ct} ${Rt}`.trim()), nt = (it, at, ct) => {
        for (let Mt = 0; Mt < it.length; Mt++) if (!it[Mt].test(at)) return false;
        if (at.prerelease.length && !ct.includePrerelease) {
          for (let Mt = 0; Mt < it.length; Mt++) if (st(it[Mt].semver), it[Mt].semver !== et.ANY && it[Mt].semver.prerelease.length > 0) {
            const At = it[Mt].semver;
            if (At.major === at.major && At.minor === at.minor && At.patch === at.patch) return true;
          }
          return false;
        }
        return true;
      };
      return range$1;
    }
    var comparator, hasRequiredComparator;
    function requireComparator() {
      if (hasRequiredComparator) return comparator;
      hasRequiredComparator = 1;
      const d = Symbol("SemVer ANY");
      class _ {
        static get ANY() {
          return d;
        }
        constructor(St, $t) {
          if ($t = $($t), St instanceof _) {
            if (St.loose === !!$t.loose) return St;
            St = St.value;
          }
          St = St.trim().split(/\s+/).join(" "), st("comparator", St, $t), this.options = $t, this.loose = !!$t.loose, this.parse(St), this.semver === d ? this.value = "" : this.value = this.operator + this.semver.version, st("comp", this);
        }
        parse(St) {
          const $t = this.options.loose ? j[rt.COMPARATORLOOSE] : j[rt.COMPARATOR], kt = St.match($t);
          if (!kt) throw new TypeError(`Invalid comparator: ${St}`);
          this.operator = kt[1] !== void 0 ? kt[1] : "", this.operator === "=" && (this.operator = ""), kt[2] ? this.semver = new pt(kt[2], this.options.loose) : this.semver = d;
        }
        toString() {
          return this.value;
        }
        test(St) {
          if (st("Comparator.test", St, this.options.loose), this.semver === d || St === d) return true;
          if (typeof St == "string") try {
            St = new pt(St, this.options);
          } catch {
            return false;
          }
          return et(St, this.operator, this.semver, this.options);
        }
        intersects(St, $t) {
          if (!(St instanceof _)) throw new TypeError("a Comparator is required");
          return this.operator === "" ? this.value === "" ? true : new Et(St.value, $t).test(this.value) : St.operator === "" ? St.value === "" ? true : new Et(this.value, $t).test(St.semver) : ($t = $($t), $t.includePrerelease && (this.value === "<0.0.0-0" || St.value === "<0.0.0-0") || !$t.includePrerelease && (this.value.startsWith("<0.0.0") || St.value.startsWith("<0.0.0")) ? false : !!(this.operator.startsWith(">") && St.operator.startsWith(">") || this.operator.startsWith("<") && St.operator.startsWith("<") || this.semver.version === St.semver.version && this.operator.includes("=") && St.operator.includes("=") || et(this.semver, "<", St.semver, $t) && this.operator.startsWith(">") && St.operator.startsWith("<") || et(this.semver, ">", St.semver, $t) && this.operator.startsWith("<") && St.operator.startsWith(">")));
        }
      }
      comparator = _;
      const $ = parseOptions_1, { safeRe: j, t: rt } = reExports, et = cmp_1, st = debug_1, pt = semver$2, Et = requireRange();
      return comparator;
    }
    const Range$9 = requireRange(), satisfies$4 = (d, _, $) => {
      try {
        _ = new Range$9(_, $);
      } catch {
        return false;
      }
      return _.test(d);
    };
    var satisfies_1 = satisfies$4;
    const Range$8 = requireRange(), toComparators$1 = (d, _) => new Range$8(d, _).set.map(($) => $.map((j) => j.value).join(" ").trim().split(" "));
    var toComparators_1 = toComparators$1;
    const SemVer$4 = semver$2, Range$7 = requireRange(), maxSatisfying$1 = (d, _, $) => {
      let j = null, rt = null, et = null;
      try {
        et = new Range$7(_, $);
      } catch {
        return null;
      }
      return d.forEach((st) => {
        et.test(st) && (!j || rt.compare(st) === -1) && (j = st, rt = new SemVer$4(j, $));
      }), j;
    };
    var maxSatisfying_1 = maxSatisfying$1;
    const SemVer$3 = semver$2, Range$6 = requireRange(), minSatisfying$1 = (d, _, $) => {
      let j = null, rt = null, et = null;
      try {
        et = new Range$6(_, $);
      } catch {
        return null;
      }
      return d.forEach((st) => {
        et.test(st) && (!j || rt.compare(st) === 1) && (j = st, rt = new SemVer$3(j, $));
      }), j;
    };
    var minSatisfying_1 = minSatisfying$1;
    const SemVer$2 = semver$2, Range$5 = requireRange(), gt$3 = gt_1, minVersion$1 = (d, _) => {
      d = new Range$5(d, _);
      let $ = new SemVer$2("0.0.0");
      if (d.test($) || ($ = new SemVer$2("0.0.0-0"), d.test($))) return $;
      $ = null;
      for (let j = 0; j < d.set.length; ++j) {
        const rt = d.set[j];
        let et = null;
        rt.forEach((st) => {
          const pt = new SemVer$2(st.semver.version);
          switch (st.operator) {
            case ">":
              pt.prerelease.length === 0 ? pt.patch++ : pt.prerelease.push(0), pt.raw = pt.format();
            case "":
            case ">=":
              (!et || gt$3(pt, et)) && (et = pt);
              break;
            case "<":
            case "<=":
              break;
            default:
              throw new Error(`Unexpected operation: ${st.operator}`);
          }
        }), et && (!$ || gt$3($, et)) && ($ = et);
      }
      return $ && d.test($) ? $ : null;
    };
    var minVersion_1 = minVersion$1;
    const Range$4 = requireRange(), validRange$1 = (d, _) => {
      try {
        return new Range$4(d, _).range || "*";
      } catch {
        return null;
      }
    };
    var valid$1 = validRange$1;
    const SemVer$1 = semver$2, Comparator$2 = requireComparator(), { ANY: ANY$1 } = Comparator$2, Range$3 = requireRange(), satisfies$3 = satisfies_1, gt$2 = gt_1, lt$1 = lt_1, lte$1 = lte_1, gte$1 = gte_1, outside$3 = (d, _, $, j) => {
      d = new SemVer$1(d, j), _ = new Range$3(_, j);
      let rt, et, st, pt, Et;
      switch ($) {
        case ">":
          rt = gt$2, et = lte$1, st = lt$1, pt = ">", Et = ">=";
          break;
        case "<":
          rt = lt$1, et = gte$1, st = gt$2, pt = "<", Et = "<=";
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (satisfies$3(d, _, j)) return false;
      for (let Bt = 0; Bt < _.set.length; ++Bt) {
        const St = _.set[Bt];
        let $t = null, kt = null;
        if (St.forEach((Tt) => {
          Tt.semver === ANY$1 && (Tt = new Comparator$2(">=0.0.0")), $t = $t || Tt, kt = kt || Tt, rt(Tt.semver, $t.semver, j) ? $t = Tt : st(Tt.semver, kt.semver, j) && (kt = Tt);
        }), $t.operator === pt || $t.operator === Et || (!kt.operator || kt.operator === pt) && et(d, kt.semver)) return false;
        if (kt.operator === Et && st(d, kt.semver)) return false;
      }
      return true;
    };
    var outside_1 = outside$3;
    const outside$2 = outside_1, gtr$1 = (d, _, $) => outside$2(d, _, ">", $);
    var gtr_1 = gtr$1;
    const outside$1 = outside_1, ltr$1 = (d, _, $) => outside$1(d, _, "<", $);
    var ltr_1 = ltr$1;
    const Range$2 = requireRange(), intersects$1 = (d, _, $) => (d = new Range$2(d, $), _ = new Range$2(_, $), d.intersects(_, $));
    var intersects_1 = intersects$1;
    const satisfies$2 = satisfies_1, compare$2 = compare_1;
    var simplify = (d, _, $) => {
      const j = [];
      let rt = null, et = null;
      const st = d.sort((St, $t) => compare$2(St, $t, $));
      for (const St of st) satisfies$2(St, _, $) ? (et = St, rt || (rt = St)) : (et && j.push([
        rt,
        et
      ]), et = null, rt = null);
      rt && j.push([
        rt,
        null
      ]);
      const pt = [];
      for (const [St, $t] of j) St === $t ? pt.push(St) : !$t && St === st[0] ? pt.push("*") : $t ? St === st[0] ? pt.push(`<=${$t}`) : pt.push(`${St} - ${$t}`) : pt.push(`>=${St}`);
      const Et = pt.join(" || "), Bt = typeof _.raw == "string" ? _.raw : String(_);
      return Et.length < Bt.length ? Et : _;
    };
    const Range$1 = requireRange(), Comparator$1 = requireComparator(), { ANY } = Comparator$1, satisfies$1 = satisfies_1, compare$1 = compare_1, subset$1 = (d, _, $ = {}) => {
      if (d === _) return true;
      d = new Range$1(d, $), _ = new Range$1(_, $);
      let j = false;
      e: for (const rt of d.set) {
        for (const et of _.set) {
          const st = simpleSubset(rt, et, $);
          if (j = j || st !== null, st) continue e;
        }
        if (j) return false;
      }
      return true;
    }, minimumVersionWithPreRelease = [
      new Comparator$1(">=0.0.0-0")
    ], minimumVersion = [
      new Comparator$1(">=0.0.0")
    ], simpleSubset = (d, _, $) => {
      if (d === _) return true;
      if (d.length === 1 && d[0].semver === ANY) {
        if (_.length === 1 && _[0].semver === ANY) return true;
        $.includePrerelease ? d = minimumVersionWithPreRelease : d = minimumVersion;
      }
      if (_.length === 1 && _[0].semver === ANY) {
        if ($.includePrerelease) return true;
        _ = minimumVersion;
      }
      const j = /* @__PURE__ */ new Set();
      let rt, et;
      for (const Tt of d) Tt.operator === ">" || Tt.operator === ">=" ? rt = higherGT(rt, Tt, $) : Tt.operator === "<" || Tt.operator === "<=" ? et = lowerLT(et, Tt, $) : j.add(Tt.semver);
      if (j.size > 1) return null;
      let st;
      if (rt && et) {
        if (st = compare$1(rt.semver, et.semver, $), st > 0) return null;
        if (st === 0 && (rt.operator !== ">=" || et.operator !== "<=")) return null;
      }
      for (const Tt of j) {
        if (rt && !satisfies$1(Tt, String(rt), $) || et && !satisfies$1(Tt, String(et), $)) return null;
        for (const Pt of _) if (!satisfies$1(Tt, String(Pt), $)) return false;
        return true;
      }
      let pt, Et, Bt, St, $t = et && !$.includePrerelease && et.semver.prerelease.length ? et.semver : false, kt = rt && !$.includePrerelease && rt.semver.prerelease.length ? rt.semver : false;
      $t && $t.prerelease.length === 1 && et.operator === "<" && $t.prerelease[0] === 0 && ($t = false);
      for (const Tt of _) {
        if (St = St || Tt.operator === ">" || Tt.operator === ">=", Bt = Bt || Tt.operator === "<" || Tt.operator === "<=", rt) {
          if (kt && Tt.semver.prerelease && Tt.semver.prerelease.length && Tt.semver.major === kt.major && Tt.semver.minor === kt.minor && Tt.semver.patch === kt.patch && (kt = false), Tt.operator === ">" || Tt.operator === ">=") {
            if (pt = higherGT(rt, Tt, $), pt === Tt && pt !== rt) return false;
          } else if (rt.operator === ">=" && !satisfies$1(rt.semver, String(Tt), $)) return false;
        }
        if (et) {
          if ($t && Tt.semver.prerelease && Tt.semver.prerelease.length && Tt.semver.major === $t.major && Tt.semver.minor === $t.minor && Tt.semver.patch === $t.patch && ($t = false), Tt.operator === "<" || Tt.operator === "<=") {
            if (Et = lowerLT(et, Tt, $), Et === Tt && Et !== et) return false;
          } else if (et.operator === "<=" && !satisfies$1(et.semver, String(Tt), $)) return false;
        }
        if (!Tt.operator && (et || rt) && st !== 0) return false;
      }
      return !(rt && Bt && !et && st !== 0 || et && St && !rt && st !== 0 || kt || $t);
    }, higherGT = (d, _, $) => {
      if (!d) return _;
      const j = compare$1(d.semver, _.semver, $);
      return j > 0 ? d : j < 0 || _.operator === ">" && d.operator === ">=" ? _ : d;
    }, lowerLT = (d, _, $) => {
      if (!d) return _;
      const j = compare$1(d.semver, _.semver, $);
      return j < 0 ? d : j > 0 || _.operator === "<" && d.operator === "<=" ? _ : d;
    };
    var subset_1 = subset$1;
    const internalRe = reExports, constants = constants$1, SemVer = semver$2, identifiers = identifiers$1, parse = parse_1, valid = valid_1, clean = clean_1, inc = inc_1, diff = diff_1, major = major_1, minor = minor_1, patch = patch_1, prerelease = prerelease_1, compare = compare_1, rcompare = rcompare_1, compareLoose = compareLoose_1, compareBuild = compareBuild_1, sort = sort_1, rsort = rsort_1, gt$1 = gt_1, lt = lt_1, eq = eq_1, neq = neq_1, gte = gte_1, lte = lte_1, cmp = cmp_1, coerce = coerce_1, Comparator = requireComparator(), Range = requireRange(), satisfies = satisfies_1, toComparators = toComparators_1, maxSatisfying = maxSatisfying_1, minSatisfying = minSatisfying_1, minVersion = minVersion_1, validRange = valid$1, outside = outside_1, gtr = gtr_1, ltr = ltr_1, intersects = intersects_1, simplifyRange = simplify, subset = subset_1;
    var semver = {
      parse,
      valid,
      clean,
      inc,
      diff,
      major,
      minor,
      patch,
      prerelease,
      compare,
      rcompare,
      compareLoose,
      compareBuild,
      sort,
      rsort,
      gt: gt$1,
      lt,
      eq,
      neq,
      gte,
      lte,
      cmp,
      coerce,
      Comparator,
      Range,
      satisfies,
      toComparators,
      maxSatisfying,
      minSatisfying,
      minVersion,
      validRange,
      outside,
      gtr,
      ltr,
      intersects,
      simplifyRange,
      subset,
      SemVer,
      re: internalRe.re,
      src: internalRe.src,
      tokens: internalRe.t,
      SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: constants.RELEASE_TYPES,
      compareIdentifiers: identifiers.compareIdentifiers,
      rcompareIdentifiers: identifiers.rcompareIdentifiers
    };
    const semver$1 = getDefaultExportFromCjs$1(semver), devices = {
      blue: {
        id: "blue",
        productName: "Ledger\xA0Blue",
        productIdMM: 0,
        legacyUsbProductId: 0,
        usbOnly: true,
        memorySize: 480 * 1024,
        blockSize: 4 * 1024,
        getBlockSize: (d) => 4 * 1024
      },
      nanoS: {
        id: "nanoS",
        productName: "Ledger\xA0Nano\xA0S",
        productIdMM: 16,
        legacyUsbProductId: 1,
        usbOnly: true,
        memorySize: 320 * 1024,
        blockSize: 4 * 1024,
        getBlockSize: (d) => semver$1.lt(semver$1.coerce(d), "2.0.0") ? 4 * 1024 : 2 * 1024
      },
      nanoX: {
        id: "nanoX",
        productName: "Ledger\xA0Nano\xA0X",
        productIdMM: 64,
        legacyUsbProductId: 4,
        usbOnly: false,
        memorySize: 2 * 1024 * 1024,
        blockSize: 4 * 1024,
        getBlockSize: (d) => 4 * 1024,
        bluetoothSpec: [
          {
            serviceUuid: "d973f2e0-b19e-11e2-9e96-0800200c9a66",
            notifyUuid: "d973f2e1-b19e-11e2-9e96-0800200c9a66",
            writeUuid: "d973f2e2-b19e-11e2-9e96-0800200c9a66"
          },
          {
            serviceUuid: "13d63400-2c97-0004-0000-4c6564676572",
            notifyUuid: "13d63400-2c97-0004-0001-4c6564676572",
            writeUuid: "13d63400-2c97-0004-0002-4c6564676572"
          }
        ]
      }
    }, devicesList = Object.values(devices), ledgerUSBVendorId = 11415, identifyUSBProductId = (d) => {
      const _ = devicesList.find((rt) => rt.legacyUsbProductId === d);
      if (_) return _;
      const $ = d >> 8;
      return devicesList.find((rt) => rt.productIdMM === $);
    }, bluetoothServices = [], serviceUuidToInfos = {};
    for (let d in devices) {
      const _ = devices[d], { bluetoothSpec: $ } = _;
      if ($) for (let j = 0; j < $.length; j++) {
        const rt = $[j];
        bluetoothServices.push(rt.serviceUuid), serviceUuidToInfos[rt.serviceUuid] = serviceUuidToInfos[rt.serviceUuid.replace(/-/g, "")] = {
          deviceModel: _,
          ...rt
        };
      }
    }
    const getBluetoothServiceUuids = () => bluetoothServices, getInfosForServiceUuid = (d) => serviceUuidToInfos[d.toLowerCase()];
    let id = 0;
    const subscribers = [], log = (d, _, $) => {
      const j = {
        type: d,
        id: String(++id),
        date: /* @__PURE__ */ new Date()
      };
      _ && (j.message = _), $ && (j.data = $), dispatch$8(j);
    }, listen = (d) => (subscribers.push(d), () => {
      const _ = subscribers.indexOf(d);
      _ !== -1 && (subscribers[_] = subscribers[subscribers.length - 1], subscribers.pop());
    });
    function dispatch$8(d) {
      for (let _ = 0; _ < subscribers.length; _++) try {
        subscribers[_](d);
      } catch ($) {
        console.error($);
      }
    }
    typeof window < "u" && (window.__ledgerLogsListen = listen);
    const libEs = Object.freeze(Object.defineProperty({
      __proto__: null,
      listen,
      log
    }, Symbol.toStringTag, {
      value: "Module"
    })), ledgerDevices$1 = [
      {
        vendorId: ledgerUSBVendorId
      }
    ];
    async function requestLedgerDevice() {
      return await navigator.usb.requestDevice({
        filters: ledgerDevices$1
      });
    }
    async function getLedgerDevices$1() {
      return (await navigator.usb.getDevices()).filter((_) => _.vendorId === ledgerUSBVendorId);
    }
    async function getFirstLedgerDevice$1() {
      const d = await getLedgerDevices$1();
      return d.length > 0 ? d[0] : requestLedgerDevice();
    }
    const isSupported$1 = () => Promise.resolve(!!navigator && !!navigator.usb && typeof navigator.usb.getDevices == "function"), configurationValue = 1, endpointNumber = 3;
    let TransportWebUSB$1 = class Jn extends Transport {
      constructor(_, $) {
        super(), this.device = void 0, this.deviceModel = void 0, this.channel = Math.floor(Math.random() * 65535), this.packetSize = 64, this.interfaceNumber = void 0, this._disconnectEmitted = false, this._emitDisconnect = (j) => {
          this._disconnectEmitted || (this._disconnectEmitted = true, this.emit("disconnect", j));
        }, this.exchange = (j) => this.exchangeAtomicImpl(async () => {
          const { channel: rt, packetSize: et } = this;
          log("apdu", "=> " + j.toString("hex"));
          const st = default_1(rt, et), pt = st.makeBlocks(j);
          for (let St = 0; St < pt.length; St++) await this.device.transferOut(endpointNumber, pt[St]);
          let Et, Bt;
          for (; !(Et = st.getReducedResult(Bt)); ) {
            const St = await this.device.transferIn(endpointNumber, et), $t = Buffer.from(St.data.buffer);
            Bt = st.reduceResponse(Bt, $t);
          }
          return log("apdu", "<= " + Et.toString("hex")), Et;
        }).catch((rt) => {
          throw rt && rt.message && rt.message.includes("disconnected") ? (this._emitDisconnect(rt), new DisconnectedDeviceDuringOperation(rt.message)) : rt;
        }), this.device = _, this.interfaceNumber = $, this.deviceModel = identifyUSBProductId(_.productId);
      }
      static async request() {
        const _ = await requestLedgerDevice();
        return Jn.open(_);
      }
      static async openConnected() {
        const _ = await getLedgerDevices$1();
        return _.length === 0 ? null : Jn.open(_[0]);
      }
      static async open(_) {
        await _.open(), _.configuration === null && await _.selectConfiguration(configurationValue), await gracefullyResetDevice(_);
        const $ = _.configurations[0].interfaces.find(({ alternates: st }) => st.some((pt) => pt.interfaceClass === 255));
        if (!$) throw new TransportInterfaceNotAvailable("No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.");
        const j = $.interfaceNumber;
        try {
          await _.claimInterface(j);
        } catch (st) {
          throw await _.close(), new TransportInterfaceNotAvailable(st.message);
        }
        const rt = new Jn(_, j), et = (st) => {
          _ === st.device && (navigator.usb.removeEventListener("disconnect", et), rt._emitDisconnect(new DisconnectedDevice()));
        };
        return navigator.usb.addEventListener("disconnect", et), rt;
      }
      async close() {
        await this.exchangeBusyPromise, await this.device.releaseInterface(this.interfaceNumber), await gracefullyResetDevice(this.device), await this.device.close();
      }
      setScrambleKey() {
      }
    };
    TransportWebUSB$1.isSupported = isSupported$1;
    TransportWebUSB$1.list = getLedgerDevices$1;
    TransportWebUSB$1.listen = (d) => {
      let _ = false;
      getFirstLedgerDevice$1().then((j) => {
        if (!_) {
          const rt = identifyUSBProductId(j.productId);
          d.next({
            type: "add",
            descriptor: j,
            deviceModel: rt
          }), d.complete();
        }
      }, (j) => {
        window.DOMException && j instanceof window.DOMException && j.code === 18 ? d.error(new TransportWebUSBGestureRequired(j.message)) : d.error(new TransportOpenUserCancelled(j.message));
      });
      function $() {
        _ = true;
      }
      return {
        unsubscribe: $
      };
    };
    async function gracefullyResetDevice(d) {
      try {
        await d.reset();
      } catch (_) {
        console.warn(_);
      }
    }
    const TransportWebUSB$2 = Object.freeze(Object.defineProperty({
      __proto__: null,
      default: TransportWebUSB$1
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$13 = getAugmentedNamespace(TransportWebUSB$2), ledgerDevices = [
      {
        vendorId: ledgerUSBVendorId
      }
    ], isSupported = () => Promise.resolve(!!(global$1.navigator && global$1.navigator.hid)), getHID = () => {
      const { hid: d } = navigator;
      if (!d) throw new TransportError("navigator.hid is not supported", "HIDNotSupported");
      return d;
    };
    async function requestLedgerDevices() {
      const d = await getHID().requestDevice({
        filters: ledgerDevices
      });
      return Array.isArray(d) ? d : [
        d
      ];
    }
    async function getLedgerDevices() {
      return (await getHID().getDevices()).filter((_) => _.vendorId === ledgerUSBVendorId);
    }
    async function getFirstLedgerDevice() {
      const d = await getLedgerDevices();
      return d.length > 0 ? d[0] : (await requestLedgerDevices())[0];
    }
    let TransportWebHID$1 = class Qn extends Transport {
      constructor(_) {
        super(), this.device = void 0, this.deviceModel = void 0, this.channel = Math.floor(Math.random() * 65535), this.packetSize = 64, this.inputs = [], this.inputCallback = void 0, this.read = () => this.inputs.length ? Promise.resolve(this.inputs.shift()) : new Promise(($) => {
          this.inputCallback = $;
        }), this.onInputReport = ($) => {
          const j = Buffer.from($.data.buffer);
          this.inputCallback ? (this.inputCallback(j), this.inputCallback = null) : this.inputs.push(j);
        }, this._disconnectEmitted = false, this._emitDisconnect = ($) => {
          this._disconnectEmitted || (this._disconnectEmitted = true, this.emit("disconnect", $));
        }, this.exchange = ($) => this.exchangeAtomicImpl(async () => {
          const { channel: j, packetSize: rt } = this;
          log("apdu", "=> " + $.toString("hex"));
          const et = default_1(j, rt), st = et.makeBlocks($);
          for (let Bt = 0; Bt < st.length; Bt++) await this.device.sendReport(0, st[Bt]);
          let pt, Et;
          for (; !(pt = et.getReducedResult(Et)); ) {
            const Bt = await this.read();
            Et = et.reduceResponse(Et, Bt);
          }
          return log("apdu", "<= " + pt.toString("hex")), pt;
        }).catch((j) => {
          throw j && j.message && j.message.includes("write") ? (this._emitDisconnect(j), new DisconnectedDeviceDuringOperation(j.message)) : j;
        }), this.device = _, this.deviceModel = identifyUSBProductId(_.productId), _.addEventListener("inputreport", this.onInputReport);
      }
      static async request() {
        const [_] = await requestLedgerDevices();
        return Qn.open(_);
      }
      static async openConnected() {
        const _ = await getLedgerDevices();
        return _.length === 0 ? null : Qn.open(_[0]);
      }
      static async open(_) {
        await _.open();
        const $ = new Qn(_), j = (rt) => {
          _ === rt.device && (getHID().removeEventListener("disconnect", j), $._emitDisconnect(new DisconnectedDevice()));
        };
        return getHID().addEventListener("disconnect", j), $;
      }
      async close() {
        await this.exchangeBusyPromise, this.device.removeEventListener("inputreport", this.onInputReport), await this.device.close();
      }
      setScrambleKey() {
      }
    };
    TransportWebHID$1.isSupported = isSupported;
    TransportWebHID$1.list = getLedgerDevices;
    TransportWebHID$1.listen = (d) => {
      let _ = false;
      getFirstLedgerDevice().then((j) => {
        if (!j) d.error(new TransportOpenUserCancelled("Access denied to use Ledger device"));
        else if (!_) {
          const rt = identifyUSBProductId(j.productId);
          d.next({
            type: "add",
            descriptor: j,
            deviceModel: rt
          }), d.complete();
        }
      }, (j) => {
        d.error(new TransportOpenUserCancelled(j.message));
      });
      function $() {
        _ = true;
      }
      return {
        unsubscribe: $
      };
    };
    const TransportWebHID$2 = Object.freeze(Object.defineProperty({
      __proto__: null,
      default: TransportWebHID$1
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$14 = getAugmentedNamespace(TransportWebHID$2);
    var sendAPDU$1 = {};
    var extendStatics = function(d, _) {
      return extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function($, j) {
        $.__proto__ = j;
      } || function($, j) {
        for (var rt in j) j.hasOwnProperty(rt) && ($[rt] = j[rt]);
      }, extendStatics(d, _);
    };
    function __extends(d, _) {
      extendStatics(d, _);
      function $() {
        this.constructor = d;
      }
      d.prototype = _ === null ? Object.create(_) : ($.prototype = _.prototype, new $());
    }
    function isFunction(d) {
      return typeof d == "function";
    }
    var _enable_super_gross_mode_that_will_cause_bad_things = false, config = {
      Promise: void 0,
      set useDeprecatedSynchronousErrorHandling(d) {
        if (d) {
          var _ = new Error();
          "" + _.stack;
        }
        _enable_super_gross_mode_that_will_cause_bad_things = d;
      },
      get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
      }
    };
    function hostReportError(d) {
      setTimeout(function() {
        throw d;
      }, 0);
    }
    var empty$1 = {
      closed: true,
      next: function(d) {
      },
      error: function(d) {
        if (config.useDeprecatedSynchronousErrorHandling) throw d;
        hostReportError(d);
      },
      complete: function() {
      }
    }, isArray = function() {
      return Array.isArray || function(d) {
        return d && typeof d.length == "number";
      };
    }();
    function isObject(d) {
      return d !== null && typeof d == "object";
    }
    var UnsubscriptionErrorImpl = function() {
      function d(_) {
        return Error.call(this), this.message = _ ? _.length + ` errors occurred during unsubscription:
` + _.map(function($, j) {
          return j + 1 + ") " + $.toString();
        }).join(`
  `) : "", this.name = "UnsubscriptionError", this.errors = _, this;
      }
      return d.prototype = Object.create(Error.prototype), d;
    }(), UnsubscriptionError = UnsubscriptionErrorImpl, Subscription = function() {
      function d(_) {
        this.closed = false, this._parentOrParents = null, this._subscriptions = null, _ && (this._ctorUnsubscribe = true, this._unsubscribe = _);
      }
      return d.prototype.unsubscribe = function() {
        var _;
        if (!this.closed) {
          var $ = this, j = $._parentOrParents, rt = $._ctorUnsubscribe, et = $._unsubscribe, st = $._subscriptions;
          if (this.closed = true, this._parentOrParents = null, this._subscriptions = null, j instanceof d) j.remove(this);
          else if (j !== null) for (var pt = 0; pt < j.length; ++pt) {
            var Et = j[pt];
            Et.remove(this);
          }
          if (isFunction(et)) {
            rt && (this._unsubscribe = void 0);
            try {
              et.call(this);
            } catch ($t) {
              _ = $t instanceof UnsubscriptionError ? flattenUnsubscriptionErrors($t.errors) : [
                $t
              ];
            }
          }
          if (isArray(st)) for (var pt = -1, Bt = st.length; ++pt < Bt; ) {
            var St = st[pt];
            if (isObject(St)) try {
              St.unsubscribe();
            } catch (kt) {
              _ = _ || [], kt instanceof UnsubscriptionError ? _ = _.concat(flattenUnsubscriptionErrors(kt.errors)) : _.push(kt);
            }
          }
          if (_) throw new UnsubscriptionError(_);
        }
      }, d.prototype.add = function(_) {
        var $ = _;
        if (!_) return d.EMPTY;
        switch (typeof _) {
          case "function":
            $ = new d(_);
          case "object":
            if ($ === this || $.closed || typeof $.unsubscribe != "function") return $;
            if (this.closed) return $.unsubscribe(), $;
            if (!($ instanceof d)) {
              var j = $;
              $ = new d(), $._subscriptions = [
                j
              ];
            }
            break;
          default:
            throw new Error("unrecognized teardown " + _ + " added to Subscription.");
        }
        var rt = $._parentOrParents;
        if (rt === null) $._parentOrParents = this;
        else if (rt instanceof d) {
          if (rt === this) return $;
          $._parentOrParents = [
            rt,
            this
          ];
        } else if (rt.indexOf(this) === -1) rt.push(this);
        else return $;
        var et = this._subscriptions;
        return et === null ? this._subscriptions = [
          $
        ] : et.push($), $;
      }, d.prototype.remove = function(_) {
        var $ = this._subscriptions;
        if ($) {
          var j = $.indexOf(_);
          j !== -1 && $.splice(j, 1);
        }
      }, d.EMPTY = function(_) {
        return _.closed = true, _;
      }(new d()), d;
    }();
    function flattenUnsubscriptionErrors(d) {
      return d.reduce(function(_, $) {
        return _.concat($ instanceof UnsubscriptionError ? $.errors : $);
      }, []);
    }
    var rxSubscriber = function() {
      return typeof Symbol == "function" ? Symbol("rxSubscriber") : "@@rxSubscriber_" + Math.random();
    }(), Subscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this) || this;
        switch (et.syncErrorValue = null, et.syncErrorThrown = false, et.syncErrorThrowable = false, et.isStopped = false, arguments.length) {
          case 0:
            et.destination = empty$1;
            break;
          case 1:
            if (!$) {
              et.destination = empty$1;
              break;
            }
            if (typeof $ == "object") {
              $ instanceof _ ? (et.syncErrorThrowable = $.syncErrorThrowable, et.destination = $, $.add(et)) : (et.syncErrorThrowable = true, et.destination = new SafeSubscriber(et, $));
              break;
            }
          default:
            et.syncErrorThrowable = true, et.destination = new SafeSubscriber(et, $, j, rt);
            break;
        }
        return et;
      }
      return _.prototype[rxSubscriber] = function() {
        return this;
      }, _.create = function($, j, rt) {
        var et = new _($, j, rt);
        return et.syncErrorThrowable = false, et;
      }, _.prototype.next = function($) {
        this.isStopped || this._next($);
      }, _.prototype.error = function($) {
        this.isStopped || (this.isStopped = true, this._error($));
      }, _.prototype.complete = function() {
        this.isStopped || (this.isStopped = true, this._complete());
      }, _.prototype.unsubscribe = function() {
        this.closed || (this.isStopped = true, d.prototype.unsubscribe.call(this));
      }, _.prototype._next = function($) {
        this.destination.next($);
      }, _.prototype._error = function($) {
        this.destination.error($), this.unsubscribe();
      }, _.prototype._complete = function() {
        this.destination.complete(), this.unsubscribe();
      }, _.prototype._unsubscribeAndRecycle = function() {
        var $ = this._parentOrParents;
        return this._parentOrParents = null, this.unsubscribe(), this.closed = false, this.isStopped = false, this._parentOrParents = $, this;
      }, _;
    }(Subscription), SafeSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt, et) {
        var st = d.call(this) || this;
        st._parentSubscriber = $;
        var pt, Et = st;
        return isFunction(j) ? pt = j : j && (pt = j.next, rt = j.error, et = j.complete, j !== empty$1 && (Et = Object.create(j), isFunction(Et.unsubscribe) && st.add(Et.unsubscribe.bind(Et)), Et.unsubscribe = st.unsubscribe.bind(st))), st._context = Et, st._next = pt, st._error = rt, st._complete = et, st;
      }
      return _.prototype.next = function($) {
        if (!this.isStopped && this._next) {
          var j = this._parentSubscriber;
          !config.useDeprecatedSynchronousErrorHandling || !j.syncErrorThrowable ? this.__tryOrUnsub(this._next, $) : this.__tryOrSetError(j, this._next, $) && this.unsubscribe();
        }
      }, _.prototype.error = function($) {
        if (!this.isStopped) {
          var j = this._parentSubscriber, rt = config.useDeprecatedSynchronousErrorHandling;
          if (this._error) !rt || !j.syncErrorThrowable ? (this.__tryOrUnsub(this._error, $), this.unsubscribe()) : (this.__tryOrSetError(j, this._error, $), this.unsubscribe());
          else if (j.syncErrorThrowable) rt ? (j.syncErrorValue = $, j.syncErrorThrown = true) : hostReportError($), this.unsubscribe();
          else {
            if (this.unsubscribe(), rt) throw $;
            hostReportError($);
          }
        }
      }, _.prototype.complete = function() {
        var $ = this;
        if (!this.isStopped) {
          var j = this._parentSubscriber;
          if (this._complete) {
            var rt = function() {
              return $._complete.call($._context);
            };
            !config.useDeprecatedSynchronousErrorHandling || !j.syncErrorThrowable ? (this.__tryOrUnsub(rt), this.unsubscribe()) : (this.__tryOrSetError(j, rt), this.unsubscribe());
          } else this.unsubscribe();
        }
      }, _.prototype.__tryOrUnsub = function($, j) {
        try {
          $.call(this._context, j);
        } catch (rt) {
          if (this.unsubscribe(), config.useDeprecatedSynchronousErrorHandling) throw rt;
          hostReportError(rt);
        }
      }, _.prototype.__tryOrSetError = function($, j, rt) {
        if (!config.useDeprecatedSynchronousErrorHandling) throw new Error("bad call");
        try {
          j.call(this._context, rt);
        } catch (et) {
          return config.useDeprecatedSynchronousErrorHandling ? ($.syncErrorValue = et, $.syncErrorThrown = true, true) : (hostReportError(et), true);
        }
        return false;
      }, _.prototype._unsubscribe = function() {
        var $ = this._parentSubscriber;
        this._context = null, this._parentSubscriber = null, $.unsubscribe();
      }, _;
    }(Subscriber);
    function canReportError(d) {
      for (; d; ) {
        var _ = d, $ = _.closed, j = _.destination, rt = _.isStopped;
        if ($ || rt) return false;
        j && j instanceof Subscriber ? d = j : d = null;
      }
      return true;
    }
    function toSubscriber(d, _, $) {
      if (d) {
        if (d instanceof Subscriber) return d;
        if (d[rxSubscriber]) return d[rxSubscriber]();
      }
      return !d && !_ && !$ ? new Subscriber(empty$1) : new Subscriber(d, _, $);
    }
    var observable = function() {
      return typeof Symbol == "function" && Symbol.observable || "@@observable";
    }();
    function identity(d) {
      return d;
    }
    function pipe() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      return pipeFromArray(d);
    }
    function pipeFromArray(d) {
      return d.length === 0 ? identity : d.length === 1 ? d[0] : function($) {
        return d.reduce(function(j, rt) {
          return rt(j);
        }, $);
      };
    }
    var Observable = function() {
      function d(_) {
        this._isScalar = false, _ && (this._subscribe = _);
      }
      return d.prototype.lift = function(_) {
        var $ = new d();
        return $.source = this, $.operator = _, $;
      }, d.prototype.subscribe = function(_, $, j) {
        var rt = this.operator, et = toSubscriber(_, $, j);
        if (rt ? et.add(rt.call(et, this.source)) : et.add(this.source || config.useDeprecatedSynchronousErrorHandling && !et.syncErrorThrowable ? this._subscribe(et) : this._trySubscribe(et)), config.useDeprecatedSynchronousErrorHandling && et.syncErrorThrowable && (et.syncErrorThrowable = false, et.syncErrorThrown)) throw et.syncErrorValue;
        return et;
      }, d.prototype._trySubscribe = function(_) {
        try {
          return this._subscribe(_);
        } catch ($) {
          config.useDeprecatedSynchronousErrorHandling && (_.syncErrorThrown = true, _.syncErrorValue = $), canReportError(_) ? _.error($) : console.warn($);
        }
      }, d.prototype.forEach = function(_, $) {
        var j = this;
        return $ = getPromiseCtor($), new $(function(rt, et) {
          var st;
          st = j.subscribe(function(pt) {
            try {
              _(pt);
            } catch (Et) {
              et(Et), st && st.unsubscribe();
            }
          }, et, rt);
        });
      }, d.prototype._subscribe = function(_) {
        var $ = this.source;
        return $ && $.subscribe(_);
      }, d.prototype[observable] = function() {
        return this;
      }, d.prototype.pipe = function() {
        for (var _ = [], $ = 0; $ < arguments.length; $++) _[$] = arguments[$];
        return _.length === 0 ? this : pipeFromArray(_)(this);
      }, d.prototype.toPromise = function(_) {
        var $ = this;
        return _ = getPromiseCtor(_), new _(function(j, rt) {
          var et;
          $.subscribe(function(st) {
            return et = st;
          }, function(st) {
            return rt(st);
          }, function() {
            return j(et);
          });
        });
      }, d.create = function(_) {
        return new d(_);
      }, d;
    }();
    function getPromiseCtor(d) {
      if (d || (d = config.Promise || Promise), !d) throw new Error("no Promise impl found");
      return d;
    }
    var ObjectUnsubscribedErrorImpl = function() {
      function d() {
        return Error.call(this), this.message = "object unsubscribed", this.name = "ObjectUnsubscribedError", this;
      }
      return d.prototype = Object.create(Error.prototype), d;
    }(), ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl, SubjectSubscription = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this) || this;
        return rt.subject = $, rt.subscriber = j, rt.closed = false, rt;
      }
      return _.prototype.unsubscribe = function() {
        if (!this.closed) {
          this.closed = true;
          var $ = this.subject, j = $.observers;
          if (this.subject = null, !(!j || j.length === 0 || $.isStopped || $.closed)) {
            var rt = j.indexOf(this.subscriber);
            rt !== -1 && j.splice(rt, 1);
          }
        }
      }, _;
    }(Subscription), SubjectSubscriber = function(d) {
      __extends(_, d);
      function _($) {
        var j = d.call(this, $) || this;
        return j.destination = $, j;
      }
      return _;
    }(Subscriber), Subject = function(d) {
      __extends(_, d);
      function _() {
        var $ = d.call(this) || this;
        return $.observers = [], $.closed = false, $.isStopped = false, $.hasError = false, $.thrownError = null, $;
      }
      return _.prototype[rxSubscriber] = function() {
        return new SubjectSubscriber(this);
      }, _.prototype.lift = function($) {
        var j = new AnonymousSubject(this, this);
        return j.operator = $, j;
      }, _.prototype.next = function($) {
        if (this.closed) throw new ObjectUnsubscribedError();
        if (!this.isStopped) for (var j = this.observers, rt = j.length, et = j.slice(), st = 0; st < rt; st++) et[st].next($);
      }, _.prototype.error = function($) {
        if (this.closed) throw new ObjectUnsubscribedError();
        this.hasError = true, this.thrownError = $, this.isStopped = true;
        for (var j = this.observers, rt = j.length, et = j.slice(), st = 0; st < rt; st++) et[st].error($);
        this.observers.length = 0;
      }, _.prototype.complete = function() {
        if (this.closed) throw new ObjectUnsubscribedError();
        this.isStopped = true;
        for (var $ = this.observers, j = $.length, rt = $.slice(), et = 0; et < j; et++) rt[et].complete();
        this.observers.length = 0;
      }, _.prototype.unsubscribe = function() {
        this.isStopped = true, this.closed = true, this.observers = null;
      }, _.prototype._trySubscribe = function($) {
        if (this.closed) throw new ObjectUnsubscribedError();
        return d.prototype._trySubscribe.call(this, $);
      }, _.prototype._subscribe = function($) {
        if (this.closed) throw new ObjectUnsubscribedError();
        return this.hasError ? ($.error(this.thrownError), Subscription.EMPTY) : this.isStopped ? ($.complete(), Subscription.EMPTY) : (this.observers.push($), new SubjectSubscription(this, $));
      }, _.prototype.asObservable = function() {
        var $ = new Observable();
        return $.source = this, $;
      }, _.create = function($, j) {
        return new AnonymousSubject($, j);
      }, _;
    }(Observable), AnonymousSubject = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this) || this;
        return rt.destination = $, rt.source = j, rt;
      }
      return _.prototype.next = function($) {
        var j = this.destination;
        j && j.next && j.next($);
      }, _.prototype.error = function($) {
        var j = this.destination;
        j && j.error && this.destination.error($);
      }, _.prototype.complete = function() {
        var $ = this.destination;
        $ && $.complete && this.destination.complete();
      }, _.prototype._subscribe = function($) {
        var j = this.source;
        return j ? this.source.subscribe($) : Subscription.EMPTY;
      }, _;
    }(Subject);
    function refCount() {
      return function(_) {
        return _.lift(new RefCountOperator(_));
      };
    }
    var RefCountOperator = function() {
      function d(_) {
        this.connectable = _;
      }
      return d.prototype.call = function(_, $) {
        var j = this.connectable;
        j._refCount++;
        var rt = new RefCountSubscriber(_, j), et = $.subscribe(rt);
        return rt.closed || (rt.connection = j.connect()), et;
      }, d;
    }(), RefCountSubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.connectable = j, rt;
      }
      return _.prototype._unsubscribe = function() {
        var $ = this.connectable;
        if (!$) {
          this.connection = null;
          return;
        }
        this.connectable = null;
        var j = $._refCount;
        if (j <= 0) {
          this.connection = null;
          return;
        }
        if ($._refCount = j - 1, j > 1) {
          this.connection = null;
          return;
        }
        var rt = this.connection, et = $._connection;
        this.connection = null, et && (!rt || et === rt) && et.unsubscribe();
      }, _;
    }(Subscriber), ConnectableObservable = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this) || this;
        return rt.source = $, rt.subjectFactory = j, rt._refCount = 0, rt._isComplete = false, rt;
      }
      return _.prototype._subscribe = function($) {
        return this.getSubject().subscribe($);
      }, _.prototype.getSubject = function() {
        var $ = this._subject;
        return (!$ || $.isStopped) && (this._subject = this.subjectFactory()), this._subject;
      }, _.prototype.connect = function() {
        var $ = this._connection;
        return $ || (this._isComplete = false, $ = this._connection = new Subscription(), $.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this))), $.closed && (this._connection = null, $ = Subscription.EMPTY)), $;
      }, _.prototype.refCount = function() {
        return refCount()(this);
      }, _;
    }(Observable), connectableObservableDescriptor = function() {
      var d = ConnectableObservable.prototype;
      return {
        operator: {
          value: null
        },
        _refCount: {
          value: 0,
          writable: true
        },
        _subject: {
          value: null,
          writable: true
        },
        _connection: {
          value: null,
          writable: true
        },
        _subscribe: {
          value: d._subscribe
        },
        _isComplete: {
          value: d._isComplete,
          writable: true
        },
        getSubject: {
          value: d.getSubject
        },
        connect: {
          value: d.connect
        },
        refCount: {
          value: d.refCount
        }
      };
    }(), ConnectableSubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.connectable = j, rt;
      }
      return _.prototype._error = function($) {
        this._unsubscribe(), d.prototype._error.call(this, $);
      }, _.prototype._complete = function() {
        this.connectable._isComplete = true, this._unsubscribe(), d.prototype._complete.call(this);
      }, _.prototype._unsubscribe = function() {
        var $ = this.connectable;
        if ($) {
          this.connectable = null;
          var j = $._connection;
          $._refCount = 0, $._subject = null, $._connection = null, j && j.unsubscribe();
        }
      }, _;
    }(SubjectSubscriber), GroupedObservable = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this) || this;
        return et.key = $, et.groupSubject = j, et.refCountSubscription = rt, et;
      }
      return _.prototype._subscribe = function($) {
        var j = new Subscription(), rt = this, et = rt.refCountSubscription, st = rt.groupSubject;
        return et && !et.closed && j.add(new InnerRefCountSubscription(et)), j.add(st.subscribe($)), j;
      }, _;
    }(Observable), InnerRefCountSubscription = function(d) {
      __extends(_, d);
      function _($) {
        var j = d.call(this) || this;
        return j.parent = $, $.count++, j;
      }
      return _.prototype.unsubscribe = function() {
        var $ = this.parent;
        !$.closed && !this.closed && (d.prototype.unsubscribe.call(this), $.count -= 1, $.count === 0 && $.attemptedToUnsubscribe && $.unsubscribe());
      }, _;
    }(Subscription), BehaviorSubject = function(d) {
      __extends(_, d);
      function _($) {
        var j = d.call(this) || this;
        return j._value = $, j;
      }
      return Object.defineProperty(_.prototype, "value", {
        get: function() {
          return this.getValue();
        },
        enumerable: true,
        configurable: true
      }), _.prototype._subscribe = function($) {
        var j = d.prototype._subscribe.call(this, $);
        return j && !j.closed && $.next(this._value), j;
      }, _.prototype.getValue = function() {
        if (this.hasError) throw this.thrownError;
        if (this.closed) throw new ObjectUnsubscribedError();
        return this._value;
      }, _.prototype.next = function($) {
        d.prototype.next.call(this, this._value = $);
      }, _;
    }(Subject), Action = function(d) {
      __extends(_, d);
      function _($, j) {
        return d.call(this) || this;
      }
      return _.prototype.schedule = function($, j) {
        return this;
      }, _;
    }(Subscription), AsyncAction = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $, j) || this;
        return rt.scheduler = $, rt.work = j, rt.pending = false, rt;
      }
      return _.prototype.schedule = function($, j) {
        if (j === void 0 && (j = 0), this.closed) return this;
        this.state = $;
        var rt = this.id, et = this.scheduler;
        return rt != null && (this.id = this.recycleAsyncId(et, rt, j)), this.pending = true, this.delay = j, this.id = this.id || this.requestAsyncId(et, this.id, j), this;
      }, _.prototype.requestAsyncId = function($, j, rt) {
        return rt === void 0 && (rt = 0), setInterval($.flush.bind($, this), rt);
      }, _.prototype.recycleAsyncId = function($, j, rt) {
        if (rt === void 0 && (rt = 0), rt !== null && this.delay === rt && this.pending === false) return j;
        clearInterval(j);
      }, _.prototype.execute = function($, j) {
        if (this.closed) return new Error("executing a cancelled action");
        this.pending = false;
        var rt = this._execute($, j);
        if (rt) return rt;
        this.pending === false && this.id != null && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
      }, _.prototype._execute = function($, j) {
        var rt = false, et = void 0;
        try {
          this.work($);
        } catch (st) {
          rt = true, et = !!st && st || new Error(st);
        }
        if (rt) return this.unsubscribe(), et;
      }, _.prototype._unsubscribe = function() {
        var $ = this.id, j = this.scheduler, rt = j.actions, et = rt.indexOf(this);
        this.work = null, this.state = null, this.pending = false, this.scheduler = null, et !== -1 && rt.splice(et, 1), $ != null && (this.id = this.recycleAsyncId(j, $, null)), this.delay = null;
      }, _;
    }(Action), QueueAction = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $, j) || this;
        return rt.scheduler = $, rt.work = j, rt;
      }
      return _.prototype.schedule = function($, j) {
        return j === void 0 && (j = 0), j > 0 ? d.prototype.schedule.call(this, $, j) : (this.delay = j, this.state = $, this.scheduler.flush(this), this);
      }, _.prototype.execute = function($, j) {
        return j > 0 || this.closed ? d.prototype.execute.call(this, $, j) : this._execute($, j);
      }, _.prototype.requestAsyncId = function($, j, rt) {
        return rt === void 0 && (rt = 0), rt !== null && rt > 0 || rt === null && this.delay > 0 ? d.prototype.requestAsyncId.call(this, $, j, rt) : $.flush(this);
      }, _;
    }(AsyncAction), Scheduler = function() {
      function d(_, $) {
        $ === void 0 && ($ = d.now), this.SchedulerAction = _, this.now = $;
      }
      return d.prototype.schedule = function(_, $, j) {
        return $ === void 0 && ($ = 0), new this.SchedulerAction(this, _).schedule(j, $);
      }, d.now = function() {
        return Date.now();
      }, d;
    }(), AsyncScheduler = function(d) {
      __extends(_, d);
      function _($, j) {
        j === void 0 && (j = Scheduler.now);
        var rt = d.call(this, $, function() {
          return _.delegate && _.delegate !== rt ? _.delegate.now() : j();
        }) || this;
        return rt.actions = [], rt.active = false, rt.scheduled = void 0, rt;
      }
      return _.prototype.schedule = function($, j, rt) {
        return j === void 0 && (j = 0), _.delegate && _.delegate !== this ? _.delegate.schedule($, j, rt) : d.prototype.schedule.call(this, $, j, rt);
      }, _.prototype.flush = function($) {
        var j = this.actions;
        if (this.active) {
          j.push($);
          return;
        }
        var rt;
        this.active = true;
        do
          if (rt = $.execute($.state, $.delay)) break;
        while ($ = j.shift());
        if (this.active = false, rt) {
          for (; $ = j.shift(); ) $.unsubscribe();
          throw rt;
        }
      }, _;
    }(Scheduler), QueueScheduler = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _;
    }(AsyncScheduler), queueScheduler = new QueueScheduler(QueueAction), queue = queueScheduler, EMPTY = new Observable(function(d) {
      return d.complete();
    });
    function empty(d) {
      return d ? emptyScheduled(d) : EMPTY;
    }
    function emptyScheduled(d) {
      return new Observable(function(_) {
        return d.schedule(function() {
          return _.complete();
        });
      });
    }
    function isScheduler(d) {
      return d && typeof d.schedule == "function";
    }
    var subscribeToArray = function(d) {
      return function(_) {
        for (var $ = 0, j = d.length; $ < j && !_.closed; $++) _.next(d[$]);
        _.complete();
      };
    };
    function scheduleArray(d, _) {
      return new Observable(function($) {
        var j = new Subscription(), rt = 0;
        return j.add(_.schedule(function() {
          if (rt === d.length) {
            $.complete();
            return;
          }
          $.next(d[rt++]), $.closed || j.add(this.schedule());
        })), j;
      });
    }
    function fromArray(d, _) {
      return _ ? scheduleArray(d, _) : new Observable(subscribeToArray(d));
    }
    function of() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      var $ = d[d.length - 1];
      return isScheduler($) ? (d.pop(), scheduleArray(d, $)) : fromArray(d);
    }
    function throwError$1(d, _) {
      return _ ? new Observable(function($) {
        return _.schedule(dispatch$7, 0, {
          error: d,
          subscriber: $
        });
      }) : new Observable(function($) {
        return $.error(d);
      });
    }
    function dispatch$7(d) {
      var _ = d.error, $ = d.subscriber;
      $.error(_);
    }
    var NotificationKind;
    NotificationKind || (NotificationKind = {});
    var Notification = function() {
      function d(_, $, j) {
        this.kind = _, this.value = $, this.error = j, this.hasValue = _ === "N";
      }
      return d.prototype.observe = function(_) {
        switch (this.kind) {
          case "N":
            return _.next && _.next(this.value);
          case "E":
            return _.error && _.error(this.error);
          case "C":
            return _.complete && _.complete();
        }
      }, d.prototype.do = function(_, $, j) {
        var rt = this.kind;
        switch (rt) {
          case "N":
            return _ && _(this.value);
          case "E":
            return $ && $(this.error);
          case "C":
            return j && j();
        }
      }, d.prototype.accept = function(_, $, j) {
        return _ && typeof _.next == "function" ? this.observe(_) : this.do(_, $, j);
      }, d.prototype.toObservable = function() {
        var _ = this.kind;
        switch (_) {
          case "N":
            return of(this.value);
          case "E":
            return throwError$1(this.error);
          case "C":
            return empty();
        }
        throw new Error("unexpected notification kind value");
      }, d.createNext = function(_) {
        return typeof _ < "u" ? new d("N", _) : d.undefinedValueNotification;
      }, d.createError = function(_) {
        return new d("E", void 0, _);
      }, d.createComplete = function() {
        return d.completeNotification;
      }, d.completeNotification = new d("C"), d.undefinedValueNotification = new d("N", void 0), d;
    }(), ObserveOnSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        rt === void 0 && (rt = 0);
        var et = d.call(this, $) || this;
        return et.scheduler = j, et.delay = rt, et;
      }
      return _.dispatch = function($) {
        var j = $.notification, rt = $.destination;
        j.observe(rt), this.unsubscribe();
      }, _.prototype.scheduleMessage = function($) {
        var j = this.destination;
        j.add(this.scheduler.schedule(_.dispatch, this.delay, new ObserveOnMessage($, this.destination)));
      }, _.prototype._next = function($) {
        this.scheduleMessage(Notification.createNext($));
      }, _.prototype._error = function($) {
        this.scheduleMessage(Notification.createError($)), this.unsubscribe();
      }, _.prototype._complete = function() {
        this.scheduleMessage(Notification.createComplete()), this.unsubscribe();
      }, _;
    }(Subscriber), ObserveOnMessage = /* @__PURE__ */ function() {
      function d(_, $) {
        this.notification = _, this.destination = $;
      }
      return d;
    }(), ReplaySubject = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        $ === void 0 && ($ = Number.POSITIVE_INFINITY), j === void 0 && (j = Number.POSITIVE_INFINITY);
        var et = d.call(this) || this;
        return et.scheduler = rt, et._events = [], et._infiniteTimeWindow = false, et._bufferSize = $ < 1 ? 1 : $, et._windowTime = j < 1 ? 1 : j, j === Number.POSITIVE_INFINITY ? (et._infiniteTimeWindow = true, et.next = et.nextInfiniteTimeWindow) : et.next = et.nextTimeWindow, et;
      }
      return _.prototype.nextInfiniteTimeWindow = function($) {
        if (!this.isStopped) {
          var j = this._events;
          j.push($), j.length > this._bufferSize && j.shift();
        }
        d.prototype.next.call(this, $);
      }, _.prototype.nextTimeWindow = function($) {
        this.isStopped || (this._events.push(new ReplayEvent(this._getNow(), $)), this._trimBufferThenGetEvents()), d.prototype.next.call(this, $);
      }, _.prototype._subscribe = function($) {
        var j = this._infiniteTimeWindow, rt = j ? this._events : this._trimBufferThenGetEvents(), et = this.scheduler, st = rt.length, pt;
        if (this.closed) throw new ObjectUnsubscribedError();
        if (this.isStopped || this.hasError ? pt = Subscription.EMPTY : (this.observers.push($), pt = new SubjectSubscription(this, $)), et && $.add($ = new ObserveOnSubscriber($, et)), j) for (var Et = 0; Et < st && !$.closed; Et++) $.next(rt[Et]);
        else for (var Et = 0; Et < st && !$.closed; Et++) $.next(rt[Et].value);
        return this.hasError ? $.error(this.thrownError) : this.isStopped && $.complete(), pt;
      }, _.prototype._getNow = function() {
        return (this.scheduler || queue).now();
      }, _.prototype._trimBufferThenGetEvents = function() {
        for (var $ = this._getNow(), j = this._bufferSize, rt = this._windowTime, et = this._events, st = et.length, pt = 0; pt < st && !($ - et[pt].time < rt); ) pt++;
        return st > j && (pt = Math.max(pt, st - j)), pt > 0 && et.splice(0, pt), et;
      }, _;
    }(Subject), ReplayEvent = /* @__PURE__ */ function() {
      function d(_, $) {
        this.time = _, this.value = $;
      }
      return d;
    }(), AsyncSubject = function(d) {
      __extends(_, d);
      function _() {
        var $ = d !== null && d.apply(this, arguments) || this;
        return $.value = null, $.hasNext = false, $.hasCompleted = false, $;
      }
      return _.prototype._subscribe = function($) {
        return this.hasError ? ($.error(this.thrownError), Subscription.EMPTY) : this.hasCompleted && this.hasNext ? ($.next(this.value), $.complete(), Subscription.EMPTY) : d.prototype._subscribe.call(this, $);
      }, _.prototype.next = function($) {
        this.hasCompleted || (this.value = $, this.hasNext = true);
      }, _.prototype.error = function($) {
        this.hasCompleted || d.prototype.error.call(this, $);
      }, _.prototype.complete = function() {
        this.hasCompleted = true, this.hasNext && d.prototype.next.call(this, this.value), d.prototype.complete.call(this);
      }, _;
    }(Subject), nextHandle = 1, RESOLVED = function() {
      return Promise.resolve();
    }(), activeHandles = {};
    function findAndClearHandle(d) {
      return d in activeHandles ? (delete activeHandles[d], true) : false;
    }
    var Immediate = {
      setImmediate: function(d) {
        var _ = nextHandle++;
        return activeHandles[_] = true, RESOLVED.then(function() {
          return findAndClearHandle(_) && d();
        }), _;
      },
      clearImmediate: function(d) {
        findAndClearHandle(d);
      }
    }, AsapAction = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $, j) || this;
        return rt.scheduler = $, rt.work = j, rt;
      }
      return _.prototype.requestAsyncId = function($, j, rt) {
        return rt === void 0 && (rt = 0), rt !== null && rt > 0 ? d.prototype.requestAsyncId.call(this, $, j, rt) : ($.actions.push(this), $.scheduled || ($.scheduled = Immediate.setImmediate($.flush.bind($, null))));
      }, _.prototype.recycleAsyncId = function($, j, rt) {
        if (rt === void 0 && (rt = 0), rt !== null && rt > 0 || rt === null && this.delay > 0) return d.prototype.recycleAsyncId.call(this, $, j, rt);
        $.actions.length === 0 && (Immediate.clearImmediate(j), $.scheduled = void 0);
      }, _;
    }(AsyncAction), AsapScheduler = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _.prototype.flush = function($) {
        this.active = true, this.scheduled = void 0;
        var j = this.actions, rt, et = -1, st = j.length;
        $ = $ || j.shift();
        do
          if (rt = $.execute($.state, $.delay)) break;
        while (++et < st && ($ = j.shift()));
        if (this.active = false, rt) {
          for (; ++et < st && ($ = j.shift()); ) $.unsubscribe();
          throw rt;
        }
      }, _;
    }(AsyncScheduler), asapScheduler = new AsapScheduler(AsapAction), asap = asapScheduler, asyncScheduler = new AsyncScheduler(AsyncAction), async = asyncScheduler, AnimationFrameAction = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $, j) || this;
        return rt.scheduler = $, rt.work = j, rt;
      }
      return _.prototype.requestAsyncId = function($, j, rt) {
        return rt === void 0 && (rt = 0), rt !== null && rt > 0 ? d.prototype.requestAsyncId.call(this, $, j, rt) : ($.actions.push(this), $.scheduled || ($.scheduled = requestAnimationFrame(function() {
          return $.flush(null);
        })));
      }, _.prototype.recycleAsyncId = function($, j, rt) {
        if (rt === void 0 && (rt = 0), rt !== null && rt > 0 || rt === null && this.delay > 0) return d.prototype.recycleAsyncId.call(this, $, j, rt);
        $.actions.length === 0 && (cancelAnimationFrame(j), $.scheduled = void 0);
      }, _;
    }(AsyncAction), AnimationFrameScheduler = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _.prototype.flush = function($) {
        this.active = true, this.scheduled = void 0;
        var j = this.actions, rt, et = -1, st = j.length;
        $ = $ || j.shift();
        do
          if (rt = $.execute($.state, $.delay)) break;
        while (++et < st && ($ = j.shift()));
        if (this.active = false, rt) {
          for (; ++et < st && ($ = j.shift()); ) $.unsubscribe();
          throw rt;
        }
      }, _;
    }(AsyncScheduler), animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction), animationFrame = animationFrameScheduler, VirtualTimeScheduler = function(d) {
      __extends(_, d);
      function _($, j) {
        $ === void 0 && ($ = VirtualAction), j === void 0 && (j = Number.POSITIVE_INFINITY);
        var rt = d.call(this, $, function() {
          return rt.frame;
        }) || this;
        return rt.maxFrames = j, rt.frame = 0, rt.index = -1, rt;
      }
      return _.prototype.flush = function() {
        for (var $ = this, j = $.actions, rt = $.maxFrames, et, st; (st = j[0]) && st.delay <= rt && (j.shift(), this.frame = st.delay, !(et = st.execute(st.state, st.delay))); ) ;
        if (et) {
          for (; st = j.shift(); ) st.unsubscribe();
          throw et;
        }
      }, _.frameTimeFactor = 10, _;
    }(AsyncScheduler), VirtualAction = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        rt === void 0 && (rt = $.index += 1);
        var et = d.call(this, $, j) || this;
        return et.scheduler = $, et.work = j, et.index = rt, et.active = true, et.index = $.index = rt, et;
      }
      return _.prototype.schedule = function($, j) {
        if (j === void 0 && (j = 0), !this.id) return d.prototype.schedule.call(this, $, j);
        this.active = false;
        var rt = new _(this.scheduler, this.work);
        return this.add(rt), rt.schedule($, j);
      }, _.prototype.requestAsyncId = function($, j, rt) {
        rt === void 0 && (rt = 0), this.delay = $.frame + rt;
        var et = $.actions;
        return et.push(this), et.sort(_.sortActions), true;
      }, _.prototype.recycleAsyncId = function($, j, rt) {
      }, _.prototype._execute = function($, j) {
        if (this.active === true) return d.prototype._execute.call(this, $, j);
      }, _.sortActions = function($, j) {
        return $.delay === j.delay ? $.index === j.index ? 0 : $.index > j.index ? 1 : -1 : $.delay > j.delay ? 1 : -1;
      }, _;
    }(AsyncAction);
    function noop() {
    }
    function isObservable(d) {
      return !!d && (d instanceof Observable || typeof d.lift == "function" && typeof d.subscribe == "function");
    }
    var ArgumentOutOfRangeErrorImpl = function() {
      function d() {
        return Error.call(this), this.message = "argument out of range", this.name = "ArgumentOutOfRangeError", this;
      }
      return d.prototype = Object.create(Error.prototype), d;
    }(), ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl, EmptyErrorImpl = function() {
      function d() {
        return Error.call(this), this.message = "no elements in sequence", this.name = "EmptyError", this;
      }
      return d.prototype = Object.create(Error.prototype), d;
    }(), EmptyError = EmptyErrorImpl, TimeoutErrorImpl = function() {
      function d() {
        return Error.call(this), this.message = "Timeout has occurred", this.name = "TimeoutError", this;
      }
      return d.prototype = Object.create(Error.prototype), d;
    }(), TimeoutError = TimeoutErrorImpl;
    function map(d, _) {
      return function(j) {
        if (typeof d != "function") throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");
        return j.lift(new MapOperator(d, _));
      };
    }
    var MapOperator = function() {
      function d(_, $) {
        this.project = _, this.thisArg = $;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new MapSubscriber(_, this.project, this.thisArg));
      }, d;
    }(), MapSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this, $) || this;
        return et.project = j, et.count = 0, et.thisArg = rt || et, et;
      }
      return _.prototype._next = function($) {
        var j;
        try {
          j = this.project.call(this.thisArg, $, this.count++);
        } catch (rt) {
          this.destination.error(rt);
          return;
        }
        this.destination.next(j);
      }, _;
    }(Subscriber);
    function bindCallback(d, _, $) {
      if (_) if (isScheduler(_)) $ = _;
      else return function() {
        for (var j = [], rt = 0; rt < arguments.length; rt++) j[rt] = arguments[rt];
        return bindCallback(d, $).apply(void 0, j).pipe(map(function(et) {
          return isArray(et) ? _.apply(void 0, et) : _(et);
        }));
      };
      return function() {
        for (var j = [], rt = 0; rt < arguments.length; rt++) j[rt] = arguments[rt];
        var et = this, st, pt = {
          context: et,
          subject: st,
          callbackFunc: d,
          scheduler: $
        };
        return new Observable(function(Et) {
          if ($) {
            var St = {
              args: j,
              subscriber: Et,
              params: pt
            };
            return $.schedule(dispatch$6, 0, St);
          } else {
            if (!st) {
              st = new AsyncSubject();
              var Bt = function() {
                for (var $t = [], kt = 0; kt < arguments.length; kt++) $t[kt] = arguments[kt];
                st.next($t.length <= 1 ? $t[0] : $t), st.complete();
              };
              try {
                d.apply(et, j.concat([
                  Bt
                ]));
              } catch ($t) {
                canReportError(st) ? st.error($t) : console.warn($t);
              }
            }
            return st.subscribe(Et);
          }
        });
      };
    }
    function dispatch$6(d) {
      var _ = this, $ = d.args, j = d.subscriber, rt = d.params, et = rt.callbackFunc, st = rt.context, pt = rt.scheduler, Et = rt.subject;
      if (!Et) {
        Et = rt.subject = new AsyncSubject();
        var Bt = function() {
          for (var St = [], $t = 0; $t < arguments.length; $t++) St[$t] = arguments[$t];
          var kt = St.length <= 1 ? St[0] : St;
          _.add(pt.schedule(dispatchNext$1, 0, {
            value: kt,
            subject: Et
          }));
        };
        try {
          et.apply(st, $.concat([
            Bt
          ]));
        } catch (St) {
          Et.error(St);
        }
      }
      this.add(Et.subscribe(j));
    }
    function dispatchNext$1(d) {
      var _ = d.value, $ = d.subject;
      $.next(_), $.complete();
    }
    function bindNodeCallback(d, _, $) {
      if (_) if (isScheduler(_)) $ = _;
      else return function() {
        for (var j = [], rt = 0; rt < arguments.length; rt++) j[rt] = arguments[rt];
        return bindNodeCallback(d, $).apply(void 0, j).pipe(map(function(et) {
          return isArray(et) ? _.apply(void 0, et) : _(et);
        }));
      };
      return function() {
        for (var j = [], rt = 0; rt < arguments.length; rt++) j[rt] = arguments[rt];
        var et = {
          subject: void 0,
          args: j,
          callbackFunc: d,
          scheduler: $,
          context: this
        };
        return new Observable(function(st) {
          var pt = et.context, Et = et.subject;
          if ($) return $.schedule(dispatch$5, 0, {
            params: et,
            subscriber: st,
            context: pt
          });
          if (!Et) {
            Et = et.subject = new AsyncSubject();
            var Bt = function() {
              for (var St = [], $t = 0; $t < arguments.length; $t++) St[$t] = arguments[$t];
              var kt = St.shift();
              if (kt) {
                Et.error(kt);
                return;
              }
              Et.next(St.length <= 1 ? St[0] : St), Et.complete();
            };
            try {
              d.apply(pt, j.concat([
                Bt
              ]));
            } catch (St) {
              canReportError(Et) ? Et.error(St) : console.warn(St);
            }
          }
          return Et.subscribe(st);
        });
      };
    }
    function dispatch$5(d) {
      var _ = this, $ = d.params, j = d.subscriber, rt = d.context, et = $.callbackFunc, st = $.args, pt = $.scheduler, Et = $.subject;
      if (!Et) {
        Et = $.subject = new AsyncSubject();
        var Bt = function() {
          for (var St = [], $t = 0; $t < arguments.length; $t++) St[$t] = arguments[$t];
          var kt = St.shift();
          if (kt) _.add(pt.schedule(dispatchError, 0, {
            err: kt,
            subject: Et
          }));
          else {
            var Tt = St.length <= 1 ? St[0] : St;
            _.add(pt.schedule(dispatchNext, 0, {
              value: Tt,
              subject: Et
            }));
          }
        };
        try {
          et.apply(rt, st.concat([
            Bt
          ]));
        } catch (St) {
          this.add(pt.schedule(dispatchError, 0, {
            err: St,
            subject: Et
          }));
        }
      }
      this.add(Et.subscribe(j));
    }
    function dispatchNext(d) {
      var _ = d.value, $ = d.subject;
      $.next(_), $.complete();
    }
    function dispatchError(d) {
      var _ = d.err, $ = d.subject;
      $.error(_);
    }
    var OuterSubscriber = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _.prototype.notifyNext = function($, j, rt, et, st) {
        this.destination.next(j);
      }, _.prototype.notifyError = function($, j) {
        this.destination.error($);
      }, _.prototype.notifyComplete = function($) {
        this.destination.complete();
      }, _;
    }(Subscriber), InnerSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this) || this;
        return et.parent = $, et.outerValue = j, et.outerIndex = rt, et.index = 0, et;
      }
      return _.prototype._next = function($) {
        this.parent.notifyNext(this.outerValue, $, this.outerIndex, this.index++, this);
      }, _.prototype._error = function($) {
        this.parent.notifyError($, this), this.unsubscribe();
      }, _.prototype._complete = function() {
        this.parent.notifyComplete(this), this.unsubscribe();
      }, _;
    }(Subscriber), subscribeToPromise = function(d) {
      return function(_) {
        return d.then(function($) {
          _.closed || (_.next($), _.complete());
        }, function($) {
          return _.error($);
        }).then(null, hostReportError), _;
      };
    };
    function getSymbolIterator() {
      return typeof Symbol != "function" || !Symbol.iterator ? "@@iterator" : Symbol.iterator;
    }
    var iterator = getSymbolIterator(), subscribeToIterable = function(d) {
      return function(_) {
        var $ = d[iterator]();
        do {
          var j = void 0;
          try {
            j = $.next();
          } catch (rt) {
            return _.error(rt), _;
          }
          if (j.done) {
            _.complete();
            break;
          }
          if (_.next(j.value), _.closed) break;
        } while (true);
        return typeof $.return == "function" && _.add(function() {
          $.return && $.return();
        }), _;
      };
    }, subscribeToObservable = function(d) {
      return function(_) {
        var $ = d[observable]();
        if (typeof $.subscribe != "function") throw new TypeError("Provided object does not correctly implement Symbol.observable");
        return $.subscribe(_);
      };
    }, isArrayLike = function(d) {
      return d && typeof d.length == "number" && typeof d != "function";
    };
    function isPromise(d) {
      return !!d && typeof d.subscribe != "function" && typeof d.then == "function";
    }
    var subscribeTo = function(d) {
      if (d && typeof d[observable] == "function") return subscribeToObservable(d);
      if (isArrayLike(d)) return subscribeToArray(d);
      if (isPromise(d)) return subscribeToPromise(d);
      if (d && typeof d[iterator] == "function") return subscribeToIterable(d);
      var _ = isObject(d) ? "an invalid object" : "'" + d + "'", $ = "You provided " + _ + " where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.";
      throw new TypeError($);
    };
    function subscribeToResult(d, _, $, j, rt) {
      if (rt === void 0 && (rt = new InnerSubscriber(d, $, j)), !rt.closed) return _ instanceof Observable ? _.subscribe(rt) : subscribeTo(_)(rt);
    }
    var NONE = {};
    function combineLatest() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      var $ = void 0, j = void 0;
      return isScheduler(d[d.length - 1]) && (j = d.pop()), typeof d[d.length - 1] == "function" && ($ = d.pop()), d.length === 1 && isArray(d[0]) && (d = d[0]), fromArray(d, j).lift(new CombineLatestOperator($));
    }
    var CombineLatestOperator = function() {
      function d(_) {
        this.resultSelector = _;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new CombineLatestSubscriber(_, this.resultSelector));
      }, d;
    }(), CombineLatestSubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.resultSelector = j, rt.active = 0, rt.values = [], rt.observables = [], rt;
      }
      return _.prototype._next = function($) {
        this.values.push(NONE), this.observables.push($);
      }, _.prototype._complete = function() {
        var $ = this.observables, j = $.length;
        if (j === 0) this.destination.complete();
        else {
          this.active = j, this.toRespond = j;
          for (var rt = 0; rt < j; rt++) {
            var et = $[rt];
            this.add(subscribeToResult(this, et, void 0, rt));
          }
        }
      }, _.prototype.notifyComplete = function($) {
        (this.active -= 1) === 0 && this.destination.complete();
      }, _.prototype.notifyNext = function($, j, rt) {
        var et = this.values, st = et[rt], pt = this.toRespond ? st === NONE ? --this.toRespond : this.toRespond : 0;
        et[rt] = j, pt === 0 && (this.resultSelector ? this._tryResultSelector(et) : this.destination.next(et.slice()));
      }, _.prototype._tryResultSelector = function($) {
        var j;
        try {
          j = this.resultSelector.apply(this, $);
        } catch (rt) {
          this.destination.error(rt);
          return;
        }
        this.destination.next(j);
      }, _;
    }(OuterSubscriber);
    function scheduleObservable(d, _) {
      return new Observable(function($) {
        var j = new Subscription();
        return j.add(_.schedule(function() {
          var rt = d[observable]();
          j.add(rt.subscribe({
            next: function(et) {
              j.add(_.schedule(function() {
                return $.next(et);
              }));
            },
            error: function(et) {
              j.add(_.schedule(function() {
                return $.error(et);
              }));
            },
            complete: function() {
              j.add(_.schedule(function() {
                return $.complete();
              }));
            }
          }));
        })), j;
      });
    }
    function schedulePromise(d, _) {
      return new Observable(function($) {
        var j = new Subscription();
        return j.add(_.schedule(function() {
          return d.then(function(rt) {
            j.add(_.schedule(function() {
              $.next(rt), j.add(_.schedule(function() {
                return $.complete();
              }));
            }));
          }, function(rt) {
            j.add(_.schedule(function() {
              return $.error(rt);
            }));
          });
        })), j;
      });
    }
    function scheduleIterable(d, _) {
      if (!d) throw new Error("Iterable cannot be null");
      return new Observable(function($) {
        var j = new Subscription(), rt;
        return j.add(function() {
          rt && typeof rt.return == "function" && rt.return();
        }), j.add(_.schedule(function() {
          rt = d[iterator](), j.add(_.schedule(function() {
            if (!$.closed) {
              var et, st;
              try {
                var pt = rt.next();
                et = pt.value, st = pt.done;
              } catch (Et) {
                $.error(Et);
                return;
              }
              st ? $.complete() : ($.next(et), this.schedule());
            }
          }));
        })), j;
      });
    }
    function isInteropObservable(d) {
      return d && typeof d[observable] == "function";
    }
    function isIterable(d) {
      return d && typeof d[iterator] == "function";
    }
    function scheduled(d, _) {
      if (d != null) {
        if (isInteropObservable(d)) return scheduleObservable(d, _);
        if (isPromise(d)) return schedulePromise(d, _);
        if (isArrayLike(d)) return scheduleArray(d, _);
        if (isIterable(d) || typeof d == "string") return scheduleIterable(d, _);
      }
      throw new TypeError((d !== null && typeof d || d) + " is not observable");
    }
    function from(d, _) {
      return _ ? scheduled(d, _) : d instanceof Observable ? d : new Observable(subscribeTo(d));
    }
    var SimpleInnerSubscriber = function(d) {
      __extends(_, d);
      function _($) {
        var j = d.call(this) || this;
        return j.parent = $, j;
      }
      return _.prototype._next = function($) {
        this.parent.notifyNext($);
      }, _.prototype._error = function($) {
        this.parent.notifyError($), this.unsubscribe();
      }, _.prototype._complete = function() {
        this.parent.notifyComplete(), this.unsubscribe();
      }, _;
    }(Subscriber), SimpleOuterSubscriber = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _.prototype.notifyNext = function($) {
        this.destination.next($);
      }, _.prototype.notifyError = function($) {
        this.destination.error($);
      }, _.prototype.notifyComplete = function() {
        this.destination.complete();
      }, _;
    }(Subscriber);
    function innerSubscribe(d, _) {
      if (!_.closed) {
        if (d instanceof Observable) return d.subscribe(_);
        var $;
        try {
          $ = subscribeTo(d)(_);
        } catch (j) {
          _.error(j);
        }
        return $;
      }
    }
    function mergeMap(d, _, $) {
      return $ === void 0 && ($ = Number.POSITIVE_INFINITY), typeof _ == "function" ? function(j) {
        return j.pipe(mergeMap(function(rt, et) {
          return from(d(rt, et)).pipe(map(function(st, pt) {
            return _(rt, st, et, pt);
          }));
        }, $));
      } : (typeof _ == "number" && ($ = _), function(j) {
        return j.lift(new MergeMapOperator(d, $));
      });
    }
    var MergeMapOperator = function() {
      function d(_, $) {
        $ === void 0 && ($ = Number.POSITIVE_INFINITY), this.project = _, this.concurrent = $;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new MergeMapSubscriber(_, this.project, this.concurrent));
      }, d;
    }(), MergeMapSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        rt === void 0 && (rt = Number.POSITIVE_INFINITY);
        var et = d.call(this, $) || this;
        return et.project = j, et.concurrent = rt, et.hasCompleted = false, et.buffer = [], et.active = 0, et.index = 0, et;
      }
      return _.prototype._next = function($) {
        this.active < this.concurrent ? this._tryNext($) : this.buffer.push($);
      }, _.prototype._tryNext = function($) {
        var j, rt = this.index++;
        try {
          j = this.project($, rt);
        } catch (et) {
          this.destination.error(et);
          return;
        }
        this.active++, this._innerSub(j);
      }, _.prototype._innerSub = function($) {
        var j = new SimpleInnerSubscriber(this), rt = this.destination;
        rt.add(j);
        var et = innerSubscribe($, j);
        et !== j && rt.add(et);
      }, _.prototype._complete = function() {
        this.hasCompleted = true, this.active === 0 && this.buffer.length === 0 && this.destination.complete(), this.unsubscribe();
      }, _.prototype.notifyNext = function($) {
        this.destination.next($);
      }, _.prototype.notifyComplete = function() {
        var $ = this.buffer;
        this.active--, $.length > 0 ? this._next($.shift()) : this.active === 0 && this.hasCompleted && this.destination.complete();
      }, _;
    }(SimpleOuterSubscriber);
    function mergeAll(d) {
      return d === void 0 && (d = Number.POSITIVE_INFINITY), mergeMap(identity, d);
    }
    function concatAll() {
      return mergeAll(1);
    }
    function concat() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      return concatAll()(of.apply(void 0, d));
    }
    function defer(d) {
      return new Observable(function(_) {
        var $;
        try {
          $ = d();
        } catch (rt) {
          _.error(rt);
          return;
        }
        var j = $ ? from($) : empty();
        return j.subscribe(_);
      });
    }
    function forkJoin() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      if (d.length === 1) {
        var $ = d[0];
        if (isArray($)) return forkJoinInternal($, null);
        if (isObject($) && Object.getPrototypeOf($) === Object.prototype) {
          var j = Object.keys($);
          return forkJoinInternal(j.map(function(et) {
            return $[et];
          }), j);
        }
      }
      if (typeof d[d.length - 1] == "function") {
        var rt = d.pop();
        return d = d.length === 1 && isArray(d[0]) ? d[0] : d, forkJoinInternal(d, null).pipe(map(function(et) {
          return rt.apply(void 0, et);
        }));
      }
      return forkJoinInternal(d, null);
    }
    function forkJoinInternal(d, _) {
      return new Observable(function($) {
        var j = d.length;
        if (j === 0) {
          $.complete();
          return;
        }
        for (var rt = new Array(j), et = 0, st = 0, pt = function(Bt) {
          var St = from(d[Bt]), $t = false;
          $.add(St.subscribe({
            next: function(kt) {
              $t || ($t = true, st++), rt[Bt] = kt;
            },
            error: function(kt) {
              return $.error(kt);
            },
            complete: function() {
              et++, (et === j || !$t) && (st === j && $.next(_ ? _.reduce(function(kt, Tt, Pt) {
                return kt[Tt] = rt[Pt], kt;
              }, {}) : rt), $.complete());
            }
          }));
        }, Et = 0; Et < j; Et++) pt(Et);
      });
    }
    function fromEvent(d, _, $, j) {
      return isFunction($) && (j = $, $ = void 0), j ? fromEvent(d, _, $).pipe(map(function(rt) {
        return isArray(rt) ? j.apply(void 0, rt) : j(rt);
      })) : new Observable(function(rt) {
        function et(st) {
          arguments.length > 1 ? rt.next(Array.prototype.slice.call(arguments)) : rt.next(st);
        }
        setupSubscription(d, _, et, rt, $);
      });
    }
    function setupSubscription(d, _, $, j, rt) {
      var et;
      if (isEventTarget(d)) {
        var st = d;
        d.addEventListener(_, $, rt), et = function() {
          return st.removeEventListener(_, $, rt);
        };
      } else if (isJQueryStyleEventEmitter(d)) {
        var pt = d;
        d.on(_, $), et = function() {
          return pt.off(_, $);
        };
      } else if (isNodeStyleEventEmitter(d)) {
        var Et = d;
        d.addListener(_, $), et = function() {
          return Et.removeListener(_, $);
        };
      } else if (d && d.length) for (var Bt = 0, St = d.length; Bt < St; Bt++) setupSubscription(d[Bt], _, $, j, rt);
      else throw new TypeError("Invalid event target");
      j.add(et);
    }
    function isNodeStyleEventEmitter(d) {
      return d && typeof d.addListener == "function" && typeof d.removeListener == "function";
    }
    function isJQueryStyleEventEmitter(d) {
      return d && typeof d.on == "function" && typeof d.off == "function";
    }
    function isEventTarget(d) {
      return d && typeof d.addEventListener == "function" && typeof d.removeEventListener == "function";
    }
    function fromEventPattern(d, _, $) {
      return $ ? fromEventPattern(d, _).pipe(map(function(j) {
        return isArray(j) ? $.apply(void 0, j) : $(j);
      })) : new Observable(function(j) {
        var rt = function() {
          for (var st = [], pt = 0; pt < arguments.length; pt++) st[pt] = arguments[pt];
          return j.next(st.length === 1 ? st[0] : st);
        }, et;
        try {
          et = d(rt);
        } catch (st) {
          j.error(st);
          return;
        }
        if (isFunction(_)) return function() {
          return _(rt, et);
        };
      });
    }
    function generate(d, _, $, j, rt) {
      var et, st;
      if (arguments.length == 1) {
        var pt = d;
        st = pt.initialState, _ = pt.condition, $ = pt.iterate, et = pt.resultSelector || identity, rt = pt.scheduler;
      } else j === void 0 || isScheduler(j) ? (st = d, et = identity, rt = j) : (st = d, et = j);
      return new Observable(function(Et) {
        var Bt = st;
        if (rt) return rt.schedule(dispatch$4, 0, {
          subscriber: Et,
          iterate: $,
          condition: _,
          resultSelector: et,
          state: Bt
        });
        do {
          if (_) {
            var St = void 0;
            try {
              St = _(Bt);
            } catch (kt) {
              Et.error(kt);
              return;
            }
            if (!St) {
              Et.complete();
              break;
            }
          }
          var $t = void 0;
          try {
            $t = et(Bt);
          } catch (kt) {
            Et.error(kt);
            return;
          }
          if (Et.next($t), Et.closed) break;
          try {
            Bt = $(Bt);
          } catch (kt) {
            Et.error(kt);
            return;
          }
        } while (true);
      });
    }
    function dispatch$4(d) {
      var _ = d.subscriber, $ = d.condition;
      if (!_.closed) {
        if (d.needIterate) try {
          d.state = d.iterate(d.state);
        } catch (et) {
          _.error(et);
          return;
        }
        else d.needIterate = true;
        if ($) {
          var j = void 0;
          try {
            j = $(d.state);
          } catch (et) {
            _.error(et);
            return;
          }
          if (!j) {
            _.complete();
            return;
          }
          if (_.closed) return;
        }
        var rt;
        try {
          rt = d.resultSelector(d.state);
        } catch (et) {
          _.error(et);
          return;
        }
        if (!_.closed && (_.next(rt), !_.closed)) return this.schedule(d);
      }
    }
    function iif(d, _, $) {
      return _ === void 0 && (_ = EMPTY), $ === void 0 && ($ = EMPTY), defer(function() {
        return d() ? _ : $;
      });
    }
    function isNumeric(d) {
      return !isArray(d) && d - parseFloat(d) + 1 >= 0;
    }
    function interval(d, _) {
      return d === void 0 && (d = 0), _ === void 0 && (_ = async), (!isNumeric(d) || d < 0) && (d = 0), (!_ || typeof _.schedule != "function") && (_ = async), new Observable(function($) {
        return $.add(_.schedule(dispatch$3, d, {
          subscriber: $,
          counter: 0,
          period: d
        })), $;
      });
    }
    function dispatch$3(d) {
      var _ = d.subscriber, $ = d.counter, j = d.period;
      _.next($), this.schedule({
        subscriber: _,
        counter: $ + 1,
        period: j
      }, j);
    }
    function merge() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      var $ = Number.POSITIVE_INFINITY, j = null, rt = d[d.length - 1];
      return isScheduler(rt) ? (j = d.pop(), d.length > 1 && typeof d[d.length - 1] == "number" && ($ = d.pop())) : typeof rt == "number" && ($ = d.pop()), j === null && d.length === 1 && d[0] instanceof Observable ? d[0] : mergeAll($)(fromArray(d, j));
    }
    var NEVER = new Observable(noop);
    function never() {
      return NEVER;
    }
    function onErrorResumeNext() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      if (d.length === 0) return EMPTY;
      var $ = d[0], j = d.slice(1);
      return d.length === 1 && isArray($) ? onErrorResumeNext.apply(void 0, $) : new Observable(function(rt) {
        var et = function() {
          return rt.add(onErrorResumeNext.apply(void 0, j).subscribe(rt));
        };
        return from($).subscribe({
          next: function(st) {
            rt.next(st);
          },
          error: et,
          complete: et
        });
      });
    }
    function pairs(d, _) {
      return _ ? new Observable(function($) {
        var j = Object.keys(d), rt = new Subscription();
        return rt.add(_.schedule(dispatch$2, 0, {
          keys: j,
          index: 0,
          subscriber: $,
          subscription: rt,
          obj: d
        })), rt;
      }) : new Observable(function($) {
        for (var j = Object.keys(d), rt = 0; rt < j.length && !$.closed; rt++) {
          var et = j[rt];
          d.hasOwnProperty(et) && $.next([
            et,
            d[et]
          ]);
        }
        $.complete();
      });
    }
    function dispatch$2(d) {
      var _ = d.keys, $ = d.index, j = d.subscriber, rt = d.subscription, et = d.obj;
      if (!j.closed) if ($ < _.length) {
        var st = _[$];
        j.next([
          st,
          et[st]
        ]), rt.add(this.schedule({
          keys: _,
          index: $ + 1,
          subscriber: j,
          subscription: rt,
          obj: et
        }));
      } else j.complete();
    }
    function not(d, _) {
      function $() {
        return !$.pred.apply($.thisArg, arguments);
      }
      return $.pred = d, $.thisArg = _, $;
    }
    function filter(d, _) {
      return function(j) {
        return j.lift(new FilterOperator(d, _));
      };
    }
    var FilterOperator = function() {
      function d(_, $) {
        this.predicate = _, this.thisArg = $;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new FilterSubscriber(_, this.predicate, this.thisArg));
      }, d;
    }(), FilterSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this, $) || this;
        return et.predicate = j, et.thisArg = rt, et.count = 0, et;
      }
      return _.prototype._next = function($) {
        var j;
        try {
          j = this.predicate.call(this.thisArg, $, this.count++);
        } catch (rt) {
          this.destination.error(rt);
          return;
        }
        j && this.destination.next($);
      }, _;
    }(Subscriber);
    function partition(d, _, $) {
      return [
        filter(_, $)(new Observable(subscribeTo(d))),
        filter(not(_, $))(new Observable(subscribeTo(d)))
      ];
    }
    function race() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      if (d.length === 1) if (isArray(d[0])) d = d[0];
      else return d[0];
      return fromArray(d, void 0).lift(new RaceOperator());
    }
    var RaceOperator = function() {
      function d() {
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new RaceSubscriber(_));
      }, d;
    }(), RaceSubscriber = function(d) {
      __extends(_, d);
      function _($) {
        var j = d.call(this, $) || this;
        return j.hasFirst = false, j.observables = [], j.subscriptions = [], j;
      }
      return _.prototype._next = function($) {
        this.observables.push($);
      }, _.prototype._complete = function() {
        var $ = this.observables, j = $.length;
        if (j === 0) this.destination.complete();
        else {
          for (var rt = 0; rt < j && !this.hasFirst; rt++) {
            var et = $[rt], st = subscribeToResult(this, et, void 0, rt);
            this.subscriptions && this.subscriptions.push(st), this.add(st);
          }
          this.observables = null;
        }
      }, _.prototype.notifyNext = function($, j, rt) {
        if (!this.hasFirst) {
          this.hasFirst = true;
          for (var et = 0; et < this.subscriptions.length; et++) if (et !== rt) {
            var st = this.subscriptions[et];
            st.unsubscribe(), this.remove(st);
          }
          this.subscriptions = null;
        }
        this.destination.next(j);
      }, _;
    }(OuterSubscriber);
    function range(d, _, $) {
      return d === void 0 && (d = 0), new Observable(function(j) {
        _ === void 0 && (_ = d, d = 0);
        var rt = 0, et = d;
        if ($) return $.schedule(dispatch$1, 0, {
          index: rt,
          count: _,
          start: d,
          subscriber: j
        });
        do {
          if (rt++ >= _) {
            j.complete();
            break;
          }
          if (j.next(et++), j.closed) break;
        } while (true);
      });
    }
    function dispatch$1(d) {
      var _ = d.start, $ = d.index, j = d.count, rt = d.subscriber;
      if ($ >= j) {
        rt.complete();
        return;
      }
      rt.next(_), !rt.closed && (d.index = $ + 1, d.start = _ + 1, this.schedule(d));
    }
    function timer(d, _, $) {
      d === void 0 && (d = 0);
      var j = -1;
      return isNumeric(_) ? j = Number(_) < 1 && 1 || Number(_) : isScheduler(_) && ($ = _), isScheduler($) || ($ = async), new Observable(function(rt) {
        var et = isNumeric(d) ? d : +d - $.now();
        return $.schedule(dispatch, et, {
          index: 0,
          period: j,
          subscriber: rt
        });
      });
    }
    function dispatch(d) {
      var _ = d.index, $ = d.period, j = d.subscriber;
      if (j.next(_), !j.closed) {
        if ($ === -1) return j.complete();
        d.index = _ + 1, this.schedule(d, $);
      }
    }
    function using(d, _) {
      return new Observable(function($) {
        var j;
        try {
          j = d();
        } catch (pt) {
          $.error(pt);
          return;
        }
        var rt;
        try {
          rt = _(j);
        } catch (pt) {
          $.error(pt);
          return;
        }
        var et = rt ? from(rt) : EMPTY, st = et.subscribe($);
        return function() {
          st.unsubscribe(), j && j.unsubscribe();
        };
      });
    }
    function zip() {
      for (var d = [], _ = 0; _ < arguments.length; _++) d[_] = arguments[_];
      var $ = d[d.length - 1];
      return typeof $ == "function" && d.pop(), fromArray(d, void 0).lift(new ZipOperator($));
    }
    var ZipOperator = function() {
      function d(_) {
        this.resultSelector = _;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new ZipSubscriber(_, this.resultSelector));
      }, d;
    }(), ZipSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this, $) || this;
        return et.resultSelector = j, et.iterators = [], et.active = 0, et.resultSelector = typeof j == "function" ? j : void 0, et;
      }
      return _.prototype._next = function($) {
        var j = this.iterators;
        isArray($) ? j.push(new StaticArrayIterator($)) : typeof $[iterator] == "function" ? j.push(new StaticIterator($[iterator]())) : j.push(new ZipBufferIterator(this.destination, this, $));
      }, _.prototype._complete = function() {
        var $ = this.iterators, j = $.length;
        if (this.unsubscribe(), j === 0) {
          this.destination.complete();
          return;
        }
        this.active = j;
        for (var rt = 0; rt < j; rt++) {
          var et = $[rt];
          if (et.stillUnsubscribed) {
            var st = this.destination;
            st.add(et.subscribe());
          } else this.active--;
        }
      }, _.prototype.notifyInactive = function() {
        this.active--, this.active === 0 && this.destination.complete();
      }, _.prototype.checkIterators = function() {
        for (var $ = this.iterators, j = $.length, rt = this.destination, et = 0; et < j; et++) {
          var st = $[et];
          if (typeof st.hasValue == "function" && !st.hasValue()) return;
        }
        for (var pt = false, Et = [], et = 0; et < j; et++) {
          var st = $[et], Bt = st.next();
          if (st.hasCompleted() && (pt = true), Bt.done) {
            rt.complete();
            return;
          }
          Et.push(Bt.value);
        }
        this.resultSelector ? this._tryresultSelector(Et) : rt.next(Et), pt && rt.complete();
      }, _.prototype._tryresultSelector = function($) {
        var j;
        try {
          j = this.resultSelector.apply(this, $);
        } catch (rt) {
          this.destination.error(rt);
          return;
        }
        this.destination.next(j);
      }, _;
    }(Subscriber), StaticIterator = function() {
      function d(_) {
        this.iterator = _, this.nextResult = _.next();
      }
      return d.prototype.hasValue = function() {
        return true;
      }, d.prototype.next = function() {
        var _ = this.nextResult;
        return this.nextResult = this.iterator.next(), _;
      }, d.prototype.hasCompleted = function() {
        var _ = this.nextResult;
        return !!(_ && _.done);
      }, d;
    }(), StaticArrayIterator = function() {
      function d(_) {
        this.array = _, this.index = 0, this.length = 0, this.length = _.length;
      }
      return d.prototype[iterator] = function() {
        return this;
      }, d.prototype.next = function(_) {
        var $ = this.index++, j = this.array;
        return $ < this.length ? {
          value: j[$],
          done: false
        } : {
          value: null,
          done: true
        };
      }, d.prototype.hasValue = function() {
        return this.array.length > this.index;
      }, d.prototype.hasCompleted = function() {
        return this.array.length === this.index;
      }, d;
    }(), ZipBufferIterator = function(d) {
      __extends(_, d);
      function _($, j, rt) {
        var et = d.call(this, $) || this;
        return et.parent = j, et.observable = rt, et.stillUnsubscribed = true, et.buffer = [], et.isComplete = false, et;
      }
      return _.prototype[iterator] = function() {
        return this;
      }, _.prototype.next = function() {
        var $ = this.buffer;
        return $.length === 0 && this.isComplete ? {
          value: null,
          done: true
        } : {
          value: $.shift(),
          done: false
        };
      }, _.prototype.hasValue = function() {
        return this.buffer.length > 0;
      }, _.prototype.hasCompleted = function() {
        return this.buffer.length === 0 && this.isComplete;
      }, _.prototype.notifyComplete = function() {
        this.buffer.length > 0 ? (this.isComplete = true, this.parent.notifyInactive()) : this.destination.complete();
      }, _.prototype.notifyNext = function($) {
        this.buffer.push($), this.parent.checkIterators();
      }, _.prototype.subscribe = function() {
        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));
      }, _;
    }(SimpleOuterSubscriber);
    const _esm5 = Object.freeze(Object.defineProperty({
      __proto__: null,
      ArgumentOutOfRangeError,
      AsyncSubject,
      BehaviorSubject,
      ConnectableObservable,
      EMPTY,
      EmptyError,
      GroupedObservable,
      NEVER,
      Notification,
      get NotificationKind() {
        return NotificationKind;
      },
      ObjectUnsubscribedError,
      Observable,
      ReplaySubject,
      Scheduler,
      Subject,
      Subscriber,
      Subscription,
      TimeoutError,
      UnsubscriptionError,
      VirtualAction,
      VirtualTimeScheduler,
      animationFrame,
      animationFrameScheduler,
      asap,
      asapScheduler,
      async,
      asyncScheduler,
      bindCallback,
      bindNodeCallback,
      combineLatest,
      concat,
      config,
      defer,
      empty,
      forkJoin,
      from,
      fromEvent,
      fromEventPattern,
      generate,
      identity,
      iif,
      interval,
      isObservable,
      merge,
      never,
      noop,
      observable,
      of,
      onErrorResumeNext,
      pairs,
      partition,
      pipe,
      queue,
      queueScheduler,
      race,
      range,
      scheduled,
      throwError: throwError$1,
      timer,
      using,
      zip
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$1 = getAugmentedNamespace(_esm5), require$$2 = getAugmentedNamespace(libEs);
    Object.defineProperty(sendAPDU$1, "__esModule", {
      value: true
    });
    var sendAPDU_2 = sendAPDU$1.sendAPDU = void 0, _rxjs$1 = require$$1, _logs$1 = require$$2;
    const TagId$1 = 5;
    function chunkBuffer(d, _) {
      const $ = [];
      for (let j = 0, rt = _(0); j < d.length; j += rt, rt = _(j)) $.push(d.slice(j, j + rt));
      return $;
    }
    const sendAPDU = (d, _, $) => {
      const j = chunkBuffer(_, (rt) => $ - (rt === 0 ? 5 : 3)).map((rt, et) => {
        const st = Buffer.alloc(et === 0 ? 5 : 3);
        return st.writeUInt8(TagId$1, 0), st.writeUInt16BE(et, 1), et === 0 && st.writeUInt16BE(_.length, 3), Buffer.concat([
          st,
          rt
        ]);
      });
      return _rxjs$1.Observable.create((rt) => {
        let et = false;
        async function st() {
          for (const Et of j) {
            if (et) return;
            await d(Et);
          }
        }
        return st().then(() => {
          et = true, rt.complete();
        }, (Et) => {
          et = true, (0, _logs$1.log)("ble-error", "sendAPDU failure " + String(Et)), rt.error(Et);
        }), () => {
          et || ((0, _logs$1.log)("ble-verbose", "sendAPDU interruption"), et = true);
        };
      });
    };
    sendAPDU_2 = sendAPDU$1.sendAPDU = sendAPDU;
    var receiveAPDU$1 = {};
    Object.defineProperty(receiveAPDU$1, "__esModule", {
      value: true
    });
    var receiveAPDU_2 = receiveAPDU$1.receiveAPDU = void 0, _errors = require$$0, _rxjs = require$$1, _logs = require$$2;
    const TagId = 5, receiveAPDU = (d) => _rxjs.Observable.create((_) => {
      let $ = 0, j = 0, rt = Buffer.alloc(0);
      const et = d.subscribe({
        complete: () => {
          _.error(new _errors.DisconnectedDevice()), et.unsubscribe();
        },
        error: (st) => {
          (0, _logs.log)("ble-error", "in receiveAPDU " + String(st)), _.error(st), et.unsubscribe();
        },
        next: (st) => {
          const pt = st.readUInt8(0), Et = st.readUInt16BE(1);
          let Bt = st.slice(3);
          if (pt !== TagId) {
            _.error(new _errors.TransportError("Invalid tag " + pt.toString(16), "InvalidTag"));
            return;
          }
          if ($ !== Et) {
            _.error(new _errors.TransportError("BLE: Invalid sequence number. discontinued chunk. Received " + Et + " but expected " + $, "InvalidSequence"));
            return;
          }
          if (Et === 0 && (j = Bt.readUInt16BE(0), Bt = Bt.slice(2)), $++, rt = Buffer.concat([
            rt,
            Bt
          ]), rt.length > j) {
            _.error(new _errors.TransportError("BLE: received too much data. discontinued chunk. Received " + rt.length + " but expected " + j, "BLETooMuchData"));
            return;
          }
          rt.length === j && (_.next(rt), _.complete(), et.unsubscribe());
        }
      });
      return () => {
        et.unsubscribe();
      };
    });
    receiveAPDU_2 = receiveAPDU$1.receiveAPDU = receiveAPDU;
    function defaultIfEmpty(d) {
      return d === void 0 && (d = null), function(_) {
        return _.lift(new DefaultIfEmptyOperator(d));
      };
    }
    var DefaultIfEmptyOperator = function() {
      function d(_) {
        this.defaultValue = _;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new DefaultIfEmptySubscriber(_, this.defaultValue));
      }, d;
    }(), DefaultIfEmptySubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.defaultValue = j, rt.isEmpty = true, rt;
      }
      return _.prototype._next = function($) {
        this.isEmpty = false, this.destination.next($);
      }, _.prototype._complete = function() {
        this.isEmpty && this.destination.next(this.defaultValue), this.destination.complete();
      }, _;
    }(Subscriber);
    function throwIfEmpty(d) {
      return d === void 0 && (d = defaultErrorFactory), function(_) {
        return _.lift(new ThrowIfEmptyOperator(d));
      };
    }
    var ThrowIfEmptyOperator = function() {
      function d(_) {
        this.errorFactory = _;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new ThrowIfEmptySubscriber(_, this.errorFactory));
      }, d;
    }(), ThrowIfEmptySubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.errorFactory = j, rt.hasValue = false, rt;
      }
      return _.prototype._next = function($) {
        this.hasValue = true, this.destination.next($);
      }, _.prototype._complete = function() {
        if (this.hasValue) return this.destination.complete();
        var $ = void 0;
        try {
          $ = this.errorFactory();
        } catch (j) {
          $ = j;
        }
        this.destination.error($);
      }, _;
    }(Subscriber);
    function defaultErrorFactory() {
      return new EmptyError();
    }
    function take(d) {
      return function(_) {
        return _.lift(new TakeOperator(d));
      };
    }
    var TakeOperator = function() {
      function d(_) {
        if (this.total = _, this.total < 0) throw new ArgumentOutOfRangeError();
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new TakeSubscriber(_, this.total));
      }, d;
    }(), TakeSubscriber = function(d) {
      __extends(_, d);
      function _($, j) {
        var rt = d.call(this, $) || this;
        return rt.total = j, rt.count = 0, rt;
      }
      return _.prototype._next = function($) {
        var j = this.total, rt = ++this.count;
        rt <= j && (this.destination.next($), rt === j && (this.destination.complete(), this.unsubscribe()));
      }, _;
    }(Subscriber);
    function first(d, _) {
      var $ = arguments.length >= 2;
      return function(j) {
        return j.pipe(d ? filter(function(rt, et) {
          return d(rt, et, j);
        }) : identity, take(1), $ ? defaultIfEmpty(_) : throwIfEmpty(function() {
          return new EmptyError();
        }));
      };
    }
    function ignoreElements() {
      return function(_) {
        return _.lift(new IgnoreElementsOperator());
      };
    }
    var IgnoreElementsOperator = function() {
      function d() {
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new IgnoreElementsSubscriber(_));
      }, d;
    }(), IgnoreElementsSubscriber = function(d) {
      __extends(_, d);
      function _() {
        return d !== null && d.apply(this, arguments) || this;
      }
      return _.prototype._next = function($) {
      }, _;
    }(Subscriber);
    function multicast(d, _) {
      return function(j) {
        var rt;
        typeof d == "function" ? rt = d : rt = function() {
          return d;
        };
        var et = Object.create(j, connectableObservableDescriptor);
        return et.source = j, et.subjectFactory = rt, et;
      };
    }
    function shareSubjectFactory() {
      return new Subject();
    }
    function share() {
      return function(d) {
        return refCount()(multicast(shareSubjectFactory)(d));
      };
    }
    function tap(d, _, $) {
      return function(rt) {
        return rt.lift(new DoOperator(d, _, $));
      };
    }
    var DoOperator = function() {
      function d(_, $, j) {
        this.nextOrObserver = _, this.error = $, this.complete = j;
      }
      return d.prototype.call = function(_, $) {
        return $.subscribe(new TapSubscriber(_, this.nextOrObserver, this.error, this.complete));
      }, d;
    }(), TapSubscriber = function(d) {
      __extends(_, d);
      function _($, j, rt, et) {
        var st = d.call(this, $) || this;
        return st._tapNext = noop, st._tapError = noop, st._tapComplete = noop, st._tapError = rt || noop, st._tapComplete = et || noop, isFunction(j) ? (st._context = st, st._tapNext = j) : j && (st._context = j, st._tapNext = j.next || noop, st._tapError = j.error || noop, st._tapComplete = j.complete || noop), st;
      }
      return _.prototype._next = function($) {
        try {
          this._tapNext.call(this._context, $);
        } catch (j) {
          this.destination.error(j);
          return;
        }
        this.destination.next($);
      }, _.prototype._error = function($) {
        try {
          this._tapError.call(this._context, $);
        } catch (j) {
          this.destination.error(j);
          return;
        }
        this.destination.error($);
      }, _.prototype._complete = function() {
        try {
          this._tapComplete.call(this._context);
        } catch ($) {
          this.destination.error($);
          return;
        }
        return this.destination.complete();
      }, _;
    }(Subscriber);
    const monitorCharacteristic = (d) => Observable.create((_) => {
      log("ble-verbose", "start monitor " + d.uuid);
      function $(j) {
        const rt = j.target;
        rt.value && _.next(Buffer.from(rt.value.buffer));
      }
      return d.startNotifications().then(() => {
        d.addEventListener("characteristicvaluechanged", $);
      }), () => {
        log("ble-verbose", "end monitor " + d.uuid), d.stopNotifications();
      };
    }), requiresBluetooth = () => {
      const { bluetooth: d } = navigator;
      if (typeof d > "u") throw new Error("web bluetooth not supported");
      return d;
    }, availability = () => Observable.create((d) => {
      const _ = requiresBluetooth(), $ = (rt) => {
        d.next(rt.value);
      };
      _.addEventListener("availabilitychanged", $);
      let j = false;
      return _.getAvailability().then((rt) => {
        j || d.next(rt);
      }), () => {
        j = true, _.removeEventListener("availabilitychanged", $);
      };
    }), transportsCache = {}, requestDeviceParam = () => ({
      filters: getBluetoothServiceUuids().map((d) => ({
        services: [
          d
        ]
      }))
    }), retrieveService = async (d) => {
      if (!d.gatt) throw new Error("bluetooth gatt not found");
      const [_] = await d.gatt.getPrimaryServices();
      if (!_) throw new Error("bluetooth service not found");
      const $ = getInfosForServiceUuid(_.uuid);
      if (!$) throw new Error("bluetooth service infos not found");
      return [
        _,
        $
      ];
    };
    async function open(d, _) {
      let $;
      if (typeof d == "string") {
        if (transportsCache[d]) return log("ble-verbose", "Transport in cache, using that."), transportsCache[d];
        $ = await requiresBluetooth().requestDevice(requestDeviceParam());
      } else $ = d;
      $.gatt.connected || (log("ble-verbose", "not connected. connecting..."), await $.gatt.connect());
      const [j, rt] = await retrieveService($), { deviceModel: et, writeUuid: st, notifyUuid: pt } = rt, [Et, Bt] = await Promise.all([
        j.getCharacteristic(st),
        j.getCharacteristic(pt)
      ]), St = monitorCharacteristic(Bt).pipe(tap((It) => {
        log("ble-frame", "<= " + It.toString("hex"));
      }), share()), $t = St.subscribe(), kt = new BluetoothTransport$1($, Et, St, et);
      if (!$.gatt.connected) throw new DisconnectedDevice();
      transportsCache[kt.id] = kt;
      const Tt = (It) => {
        console.log("onDisconnect!", It), delete transportsCache[kt.id], kt.notYetDisconnected = false, $t.unsubscribe(), $.removeEventListener("gattserverdisconnected", Tt), log("ble-verbose", `BleTransport(${kt.id}) disconnected`), kt.emit("disconnect", It);
      };
      $.addEventListener("gattserverdisconnected", Tt);
      let Pt = Date.now();
      try {
        await kt.inferMTU();
      } finally {
        Date.now() - Pt < 1e3 && (_ = false), _ && (await $.gatt.disconnect(), await new Promise((jt) => setTimeout(jt, 4e3)));
      }
      return _ ? open($, false) : kt;
    }
    let BluetoothTransport$1 = class extends Transport {
      static listen(_) {
        log("ble-verbose", "listen...");
        let $;
        requiresBluetooth().requestDevice(requestDeviceParam()).then(async (et) => {
          $ || (_.next({
            type: "add",
            descriptor: et
          }), _.complete());
        }, (et) => {
          _.error(new TransportOpenUserCancelled(et.message));
        });
        function rt() {
          $ = true;
        }
        return {
          unsubscribe: rt
        };
      }
      static async open(_) {
        return open(_, true);
      }
      constructor(_, $, j, rt) {
        super(), this.id = void 0, this.device = void 0, this.mtuSize = 20, this.writeCharacteristic = void 0, this.notifyObservable = void 0, this.notYetDisconnected = true, this.deviceModel = void 0, this.exchange = (et) => this.exchangeAtomicImpl(async () => {
          try {
            const st = et.toString("hex");
            log("apdu", `=> ${st}`);
            const pt = await merge(this.notifyObservable.pipe(receiveAPDU_2), sendAPDU_2(this.write, et, this.mtuSize)).toPromise(), Et = pt.toString("hex");
            return log("apdu", `<= ${Et}`), pt;
          } catch (st) {
            throw log("ble-error", "exchange got " + String(st)), this.notYetDisconnected && this.device.gatt.disconnect(), st;
          }
        }), this.write = async (et) => {
          log("ble-frame", "=> " + et.toString("hex")), await this.writeCharacteristic.writeValue(et);
        }, this.id = _.id, this.device = _, this.writeCharacteristic = $, this.notifyObservable = j, this.deviceModel = rt, log("ble-verbose", `BleTransport(${String(this.id)}) new instance`);
      }
      async inferMTU() {
        let _ = 23;
        if (await this.exchangeAtomicImpl(async () => {
          try {
            _ = await merge(this.notifyObservable.pipe(first(($) => $.readUInt8(0) === 8), map(($) => $.readUInt8(5))), defer(() => from(this.write(Buffer.from([
              8,
              0,
              0,
              0,
              0
            ])))).pipe(ignoreElements())).toPromise() + 3;
          } catch ($) {
            throw log("ble-error", "inferMTU got " + String($)), this.device.gatt.disconnect(), $;
          }
        }), _ > 23) {
          const $ = _ - 3;
          log("ble-verbose", `BleTransport(${String(this.id)}) mtu set to ${String($)}`), this.mtuSize = $;
        }
        return this.mtuSize;
      }
      setScrambleKey() {
      }
      async close() {
        this.exchangeBusyPromise && await this.exchangeBusyPromise;
      }
    };
    BluetoothTransport$1.isSupported = () => Promise.resolve().then(requiresBluetooth).then(() => true, () => false);
    BluetoothTransport$1.observeAvailability = (d) => availability.subscribe(d);
    BluetoothTransport$1.list = () => Promise.resolve([]);
    BluetoothTransport$1.disconnect = async (d) => {
      log("ble-verbose", `user disconnect(${d})`);
      const _ = transportsCache[d];
      _ && _.device.gatt.disconnect();
    };
    const TransportWebBLE = Object.freeze(Object.defineProperty({
      __proto__: null,
      default: BluetoothTransport$1
    }, Symbol.toStringTag, {
      value: "Module"
    })), require$$15 = getAugmentedNamespace(TransportWebBLE);
    var dns = {}, Dns$3 = {};
    const { parseAddress: parseAddress$2 } = NftUtils, { AdnlAddress, StorageBagId, BN: BN$1, sha256, bytesToHex: bytesToHex$1, bytesToBase64 } = utils$1, { Cell: Cell$3 } = boc$1, DNS_CATEGORY_NEXT_RESOLVER$1 = "dns_next_resolver", DNS_CATEGORY_WALLET$1 = "wallet", DNS_CATEGORY_SITE$1 = "site", DNS_CATEGORY_STORAGE$1 = "storage", categoryToBN$1 = async (d) => {
      if (!d) return new BN$1(0);
      const _ = new TextEncoder().encode(d), $ = new Uint8Array(await sha256(_));
      return new BN$1(bytesToHex$1($), 16);
    }, createSmartContractAddressRecord$1 = (d) => {
      const _ = new Cell$3();
      return _.bits.writeUint(40915, 16), _.bits.writeAddress(d), _.bits.writeUint(0, 8), _;
    }, createAdnlAddressRecord$1 = (d) => {
      const _ = new Cell$3();
      return _.bits.writeUint(44289, 16), _.bits.writeBytes(d.bytes), _.bits.writeUint(0, 8), _;
    }, createStorageBagIdRecord$1 = (d) => {
      const _ = new Cell$3();
      return _.bits.writeUint(29811, 16), _.bits.writeBytes(d.bytes), _;
    }, createNextResolverRecord$1 = (d) => {
      const _ = new Cell$3();
      return _.bits.writeUint(47763, 16), _.bits.writeAddress(d), _;
    }, parseSmartContractAddressImpl = (d, _, $) => {
      if (d.bits.array[0] !== _ || d.bits.array[1] !== $) throw new Error("Invalid dns record value prefix");
      return d.bits.array = d.bits.array.slice(2), parseAddress$2(d);
    }, parseSmartContractAddressRecord$1 = (d) => parseSmartContractAddressImpl(d, 159, 211), parseNextResolverRecord$1 = (d) => parseSmartContractAddressImpl(d, 186, 147), parseAdnlAddressRecord$1 = (d) => {
      if (d.bits.array[0] !== 173 || d.bits.array[1] !== 1) throw new Error("Invalid dns record value prefix");
      const _ = d.bits.array.slice(2, 34);
      return new AdnlAddress(_);
    }, parseStorageBagIdRecord$1 = (d) => {
      if (d.bits.array[0] !== 116 || d.bits.array[1] !== 115) throw new Error("Invalid dns record value prefix");
      const _ = d.bits.array.slice(2, 34);
      return new StorageBagId(_);
    }, parseSiteRecord$1 = (d) => d ? d.bits.array[0] === 173 || d.bits.array[1] === 1 ? parseAdnlAddressRecord$1(d) : parseStorageBagIdRecord$1(d) : null, dnsResolveImpl = async (d, _, $, j, rt) => {
      const et = $.length * 8, st = new Cell$3();
      st.bits.writeBytes($);
      const pt = await categoryToBN$1(j), Et = await d.call2(_, "dnsresolve", [
        [
          "tvm.Slice",
          bytesToBase64(await st.toBoc(false))
        ],
        [
          "num",
          pt.toString()
        ]
      ]);
      if (Et.length !== 2) throw new Error("Invalid dnsresolve response");
      const Bt = Et[0].toNumber();
      let St = Et[1];
      if (St instanceof Array && St.length === 0 && (St = null), St && !St.bits) throw new Error("Invalid dnsresolve response");
      if (Bt === 0) return null;
      if (Bt % 8 !== 0) throw new Error("domain split not at a component boundary");
      if (Bt > et) throw new Error("invalid response " + Bt + "/" + et);
      if (Bt === et) return j === DNS_CATEGORY_NEXT_RESOLVER$1 ? St ? parseNextResolverRecord$1(St) : null : j === DNS_CATEGORY_WALLET$1 ? St ? parseSmartContractAddressRecord$1(St) : null : j === DNS_CATEGORY_SITE$1 ? St ? parseSiteRecord$1(St) : null : j === DNS_CATEGORY_STORAGE$1 ? St ? parseStorageBagIdRecord$1(St) : null : St;
      if (St) {
        const $t = parseNextResolverRecord$1(St);
        return rt ? j === DNS_CATEGORY_NEXT_RESOLVER$1 ? $t : null : await dnsResolveImpl(d, $t.toString(), $.slice(Bt / 8), j, false);
      } else return null;
    }, domainToBytes = (d) => {
      if (!d || !d.length) throw new Error("empty domain");
      if (d === ".") return new Uint8Array([
        0
      ]);
      d = d.toLowerCase();
      for (let j = 0; j < d.length; j++) if (d.charCodeAt(j) <= 32) throw new Error("bytes in range 0..32 are not allowed in domain names");
      for (let j = 0; j < d.length; j++) {
        const rt = d.substring(j, j + 1);
        for (let et = 127; et <= 159; et++) if (rt === String.fromCharCode(et)) throw new Error("bytes in range 127..159 are not allowed in domain names");
      }
      const _ = d.split(".");
      _.forEach((j) => {
        if (!j.length) throw new Error("domain name cannot have an empty component");
      });
      let $ = _.reverse().join("\0") + "\0";
      return $.length < 126 && ($ = "\0" + $), new TextEncoder().encode($);
    }, dnsResolve$3 = async (d, _, $, j, rt) => {
      const et = domainToBytes($);
      return dnsResolveImpl(d, _, et, j, rt);
    };
    var DnsUtils = {
      DNS_CATEGORY_NEXT_RESOLVER: DNS_CATEGORY_NEXT_RESOLVER$1,
      DNS_CATEGORY_SITE: DNS_CATEGORY_SITE$1,
      DNS_CATEGORY_WALLET: DNS_CATEGORY_WALLET$1,
      DNS_CATEGORY_STORAGE: DNS_CATEGORY_STORAGE$1,
      categoryToBN: categoryToBN$1,
      createSmartContractAddressRecord: createSmartContractAddressRecord$1,
      createAdnlAddressRecord: createAdnlAddressRecord$1,
      createNextResolverRecord: createNextResolverRecord$1,
      parseSmartContractAddressRecord: parseSmartContractAddressRecord$1,
      parseAdnlAddressRecord: parseAdnlAddressRecord$1,
      parseStorageBagIdRecord: parseStorageBagIdRecord$1,
      parseSiteRecord: parseSiteRecord$1,
      parseNextResolverRecord: parseNextResolverRecord$1,
      createStorageBagIdRecord: createStorageBagIdRecord$1,
      dnsResolve: dnsResolve$3
    };
    const { Cell: Cell$2 } = boc$1, { Address: Address$3, bytesToHex } = utils$1, { DNS_CATEGORY_NEXT_RESOLVER, DNS_CATEGORY_SITE, DNS_CATEGORY_WALLET, DNS_CATEGORY_STORAGE, createSmartContractAddressRecord, createAdnlAddressRecord, createStorageBagIdRecord, createNextResolverRecord, parseSmartContractAddressRecord, parseAdnlAddressRecord, parseStorageBagIdRecord, parseSiteRecord, parseNextResolverRecord, dnsResolve: dnsResolve$2 } = DnsUtils;
    let Dns$2 = class {
      constructor(_) {
        this.provider = _;
      }
      async getRootDnsAddress() {
        const $ = (await this.provider.getConfigParam(4)).bits.array;
        if ($.length !== 256 / 8) throw new Error("Invalid ConfigParam 4 length " + $.length);
        const j = bytesToHex($);
        return new Address$3("-1:" + j);
      }
      async resolve(_, $, j) {
        const rt = await this.getRootDnsAddress();
        return dnsResolve$2(this.provider, rt.toString(), _, $, j);
      }
      getWalletAddress(_) {
        return this.resolve(_, DNS_CATEGORY_WALLET);
      }
      getSiteAddress(_) {
        return this.resolve(_, DNS_CATEGORY_SITE);
      }
    };
    Dns$2.resolve = dnsResolve$2;
    Dns$2.createSmartContractAddressRecord = createSmartContractAddressRecord;
    Dns$2.createAdnlAddressRecord = createAdnlAddressRecord;
    Dns$2.createStorageBagIdRecord = createStorageBagIdRecord;
    Dns$2.createNextResolverRecord = createNextResolverRecord;
    Dns$2.parseNextResolverRecord = parseNextResolverRecord;
    Dns$2.parseAdnlAddressRecord = parseAdnlAddressRecord;
    Dns$2.parseStorageBagIdRecord = parseStorageBagIdRecord;
    Dns$2.parseSiteRecord = parseSiteRecord;
    Dns$2.parseSmartContractAddressRecord = parseSmartContractAddressRecord;
    Dns$2.DNS_CATEGORY_NEXT_RESOLVER = DNS_CATEGORY_NEXT_RESOLVER;
    Dns$2.DNS_CATEGORY_WALLET = DNS_CATEGORY_WALLET;
    Dns$2.DNS_CATEGORY_SITE = DNS_CATEGORY_SITE;
    Dns$2.DNS_CATEGORY_STORAGE = DNS_CATEGORY_STORAGE;
    Dns$3.default = Dns$2;
    const { Contract: Contract$2 } = contract, { Cell: Cell$1 } = boc$1, { Address: Address$2 } = utils$1, { parseAddress: parseAddress$1 } = NftUtils, { dnsResolve: dnsResolve$1 } = DnsUtils, { parseOffchainUriCell } = NftUtils;
    let DnsCollection$2 = class extends Contract$2 {
      constructor(_, $) {
        if ($.wc = 0, $.code = $.code, super(_, $), !$.collectionContent && !$.address) throw new Error("required collectionContent cell");
        this.methods.getCollectionData = this.getCollectionData.bind(this), this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this), this.methods.getNftItemContent = this.getNftItemContent.bind(this), this.methods.resolve = this.resolve.bind(this);
      }
      createDataCell() {
        const _ = new Cell$1();
        return _.refs[0] = this.options.collectionContent, _.refs[1] = Cell$1.oneFromBoc(this.options.dnsItemCodeHex), _;
      }
      async getCollectionData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_collection_data"), j = $[0].toNumber(), rt = $[1];
        return {
          collectionContentUri: parseOffchainUriCell(rt),
          collectionContent: rt,
          ownerAddress: null,
          nextItemIndex: j
        };
      }
      async getNftItemContent(_) {
        return await _.getData();
      }
      async getNftItemAddressByIndex(_) {
        const $ = await this.getAddress(), j = await this.provider.call2($.toString(), "get_nft_address_by_index", [
          [
            "num",
            _.toString()
          ]
        ]);
        return parseAddress$1(j);
      }
      async resolve(_, $, j) {
        const rt = await this.getAddress();
        return dnsResolve$1(this.provider, rt.toString(), _, $, j);
      }
    };
    var DnsCollection_1 = {
      DnsCollection: DnsCollection$2
    };
    const { Contract: Contract$1 } = contract, { Cell } = boc$1, { Address: Address$1, BN } = utils$1, { parseAddress } = NftUtils, { dnsResolve, categoryToBN } = DnsUtils;
    let DnsItem$2 = class extends Contract$1 {
      constructor(_, $) {
        $.wc = 0, $.code = $.code, super(_, $), this.methods.getData = this.getData.bind(this), this.methods.getDomain = this.getDomain.bind(this), this.methods.getAuctionInfo = this.getAuctionInfo.bind(this), this.methods.getLastFillUpTime = this.getLastFillUpTime.bind(this), this.methods.resolve = this.resolve.bind(this);
      }
      createDataCell() {
        const _ = new Cell();
        return _.bits.writeUint(this.options.index, 256), _.bits.writeAddress(this.options.collectionAddress), _;
      }
      async getData() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_nft_data"), j = $[0].toNumber() === -1, rt = $[1], et = parseAddress($[2]), st = j ? parseAddress($[3]) : null, pt = $[4];
        return {
          isInitialized: j,
          index: rt,
          collectionAddress: et,
          ownerAddress: st,
          contentCell: pt
        };
      }
      async createTransferBody(_) {
        const $ = new Cell();
        return $.bits.writeUint(1607220500, 32), $.bits.writeUint(_.queryId || 0, 64), $.bits.writeAddress(_.newOwnerAddress), $.bits.writeAddress(_.responseAddress), $.bits.writeBit(false), $.bits.writeCoins(_.forwardAmount || new BN(0)), $.bits.writeBit(false), _.forwardPayload && $.bits.writeBytes(_.forwardPayload), $;
      }
      createGetStaticDataBody(_) {
        const $ = new Cell();
        return $.bits.writeUint(801842850, 32), $.bits.writeUint(_.queryId || 0, 64), $;
      }
      async getDomain() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_domain");
        return new TextDecoder().decode($.bits.array.buffer);
      }
      async getAuctionInfo() {
        const _ = await this.getAddress(), $ = await this.provider.call2(_.toString(), "get_auction_info"), j = parseAddress($[0]), rt = $[1], et = $[2].toNumber();
        return {
          maxBidAddress: j,
          maxBidAmount: rt,
          auctionEndTime: et
        };
      }
      async getLastFillUpTime() {
        const _ = await this.getAddress();
        return (await this.provider.call2(_.toString(), "get_last_fill_up_time")).toNumber();
      }
      async resolve(_, $, j) {
        const rt = await this.getAddress();
        return dnsResolve(this.provider, rt.toString(), _, $, j);
      }
    };
    DnsItem$2.createChangeContentEntryBody = async (d) => {
      const _ = new Cell();
      return _.bits.writeUint(1320284409, 32), _.bits.writeUint(d.queryId || 0, 64), _.bits.writeUint(await categoryToBN(d.category), 256), d.value && (_.refs[0] = d.value), _;
    };
    var DnsItem_1 = {
      DnsItem: DnsItem$2
    };
    const Dns$1 = Dns$3.default, { DnsCollection: DnsCollection$1 } = DnsCollection_1, { DnsItem: DnsItem$1 } = DnsItem_1;
    dns.default = {
      Dns: Dns$1,
      DnsCollection: DnsCollection$1,
      DnsItem: DnsItem$1
    };
    const utils = utils$1, Address = utils.Address, boc = boc$1, AppTon = AppTon_1, HttpProvider = providers.default, { Contract } = contract, Wallets = wallet.default, LockupWallets = lockup.default, HighloadWallets = highloadWallet.default, NFT = nft.default, JETTON = ft$1.default, { BlockSubscription, InMemoryBlockStorage } = blockSubscription, { SubscriptionContract } = subscription, { Payments, PaymentChannel } = payments, TransportWebUSB = require$$13.default, TransportWebHID = require$$14.default, BluetoothTransport = require$$15.default, { Dns, DnsCollection, DnsItem } = dns.default, version = "0.0.66";
    class TonWeb {
      constructor(_) {
        this.version = version, this.utils = utils, this.Address = Address, this.boc = boc, this.Contract = Contract, this.BlockSubscription = BlockSubscription, this.InMemoryBlockStorage = InMemoryBlockStorage, this.provider = _ || new HttpProvider(), this.dns = new Dns(this.provider), this.wallet = new Wallets(this.provider), this.payments = new Payments(this.provider), this.lockupWallet = LockupWallets;
      }
      async getTransactions(_, $ = 20, j = void 0, rt = void 0, et = void 0) {
        return this.provider.getTransactions(_.toString(), $, j, rt, et);
      }
      async getBalance(_) {
        return this.provider.getBalance(_.toString());
      }
      async sendBoc(_) {
        return this.provider.sendBoc(utils.bytesToBase64(_));
      }
      async call(_, $, j = []) {
        return this.provider.call(_.toString(), $, j);
      }
    }
    TonWeb.version = version;
    TonWeb.utils = utils;
    TonWeb.Address = Address;
    TonWeb.boc = boc;
    TonWeb.HttpProvider = HttpProvider;
    TonWeb.Contract = Contract;
    TonWeb.Wallets = Wallets;
    TonWeb.LockupWallets = LockupWallets;
    TonWeb.SubscriptionContract = SubscriptionContract;
    TonWeb.BlockSubscription = BlockSubscription;
    TonWeb.InMemoryBlockStorage = InMemoryBlockStorage;
    TonWeb.ledger = {
      TransportWebUSB,
      TransportWebHID,
      BluetoothTransport,
      AppTon
    };
    TonWeb.token = {
      nft: NFT,
      ft: JETTON,
      jetton: JETTON
    };
    TonWeb.HighloadWallets = HighloadWallets;
    TonWeb.dns = Dns;
    TonWeb.dns.DnsCollection = DnsCollection;
    TonWeb.dns.DnsItem = DnsItem;
    TonWeb.payments = Payments;
    TonWeb.payments.PaymentChannel = PaymentChannel;
    var src = TonWeb;
    const TonWeb$1 = getDefaultExportFromCjs$1(src), SLOT_TON_PRICE = PRICES.SLOTS.ton, CUBE_TON_PRICES = {
      cube1: PRICES.CUBES.cube1.ton,
      cube2: PRICES.CUBES.cube2.ton,
      cube3: PRICES.CUBES.cube3.ton,
      cube4: PRICES.CUBES.cube4.ton
    }, RECEIVER_ADDRESS = "UQCc-TCL5o7qrQiZ_GlDn0VU4q55vxqG5tDL6U1ETOr0J9EX", LoadingOverlay = ({ message: d }) => React.createElement("div", {
      className: "fixed inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm z-[100]"
    }, React.createElement("div", {
      className: "flex flex-col items-center justify-center bg-[#1A1F35] p-8 rounded-xl border border-emerald-400/30"
    }, [
      React.createElement("div", {
        key: "spinner",
        className: "w-12 h-12 border-2 border-emerald-400 border-t-transparent rounded-full animate-spin mb-4"
      }),
      React.createElement("p", {
        key: "message",
        className: "text-emerald-400 font-mono text-center mb-2"
      }, d),
      React.createElement("p", {
        key: "subtext",
        className: "text-emerald-400/60 text-sm text-center"
      }, "Please keep the app open")
    ])), TRANSACTION_MESSAGES = [
      "Sending TON on a journey... \u{1F680}",
      "Blockchain confirming transaction... \u26D3\uFE0F",
      "Validators checking payment... \u{1F50D}",
      "TON quantum particles moving... \u26A1",
      "Miners adding block... \u{1F31F}"
    ], useTonPayment = () => {
      const [d] = useTonConnectUI(), [_, $] = reactExports.useState(false), [j, rt] = reactExports.useState(""), et = () => {
        const $t = TRANSACTION_MESSAGES[Math.floor(Math.random() * TRANSACTION_MESSAGES.length)];
        rt($t);
      }, st = async ($t, kt) => {
        try {
          const Tt = await getHttpEndpoint_1(), Pt = new dist$3.TonClient({
            endpoint: Tt
          });
          for (let It = 0; It < 5; It++) {
            console.log(`Checking transactions via TonClient, attempt ${It + 1}/5`);
            try {
              if ((await Pt.getTransactions(RECEIVER_ADDRESS, {
                inclusive: true,
                limit: 20
              })).find((Ot) => {
                var _a3, _b2;
                const Ft = Ot.inMessage;
                if (!((_b2 = (_a3 = Ft == null ? void 0 : Ft.info) == null ? void 0 : _a3.value) == null ? void 0 : _b2.coins) || !(Ft == null ? void 0 : Ft.body)) return false;
                try {
                  const Lt = Ft.info.value.coins, Kt = Ft.body.bits._data.slice(4), sr = new TextDecoder().decode(Kt.filter((er) => er !== 0));
                  return console.log("Checking message via TonClient:", {
                    type: Ft.info.type,
                    value: Lt.toString(),
                    comment: sr,
                    expectedInvoiceId: kt,
                    matches: sr.includes(kt)
                  }), Ft.info.type === "internal" && Lt > 0n && sr.includes(kt);
                } catch (Lt) {
                  return console.error("Failed to check message via TonClient:", Lt), false;
                }
              })) return console.log("Transaction found via TonClient!"), true;
              await new Promise((Ot) => setTimeout(Ot, 3e3));
            } catch (jt) {
              if (console.error(`TonClient API error on attempt ${It + 1}:`, jt), jt.message && jt.message.includes("500")) {
                console.log("Received 500 error from TonClient API, switching to alternative method...");
                break;
              }
              await new Promise((Dt) => setTimeout(Dt, 2e3));
            }
          }
          return console.log("Switching to TonWeb for transaction verification..."), await pt(kt);
        } catch (Tt) {
          return console.error("Transaction check via TonClient failed:", Tt), console.log("Switching to TonWeb for transaction verification after error..."), await pt(kt);
        }
      }, pt = async ($t) => {
        try {
          console.log("Starting transaction check via TonWeb...");
          const kt = new TonWeb$1(new TonWeb$1.HttpProvider("https://toncenter.com/api/v2/jsonRPC"));
          for (let Tt = 0; Tt < 5; Tt++) {
            console.log(`Checking transactions via TonWeb, attempt ${Tt + 1}/5`);
            try {
              const Pt = new TonWeb$1.utils.Address(RECEIVER_ADDRESS), It = await kt.provider.getTransactions(Pt, 20);
              for (const jt of It) if (jt.in_msg && jt.in_msg.message) {
                const Dt = jt.in_msg.message;
                if (console.log("Checking message via TonWeb:", {
                  value: jt.in_msg.value,
                  comment: Dt,
                  expectedInvoiceId: $t,
                  matches: Dt.includes($t)
                }), Dt.includes($t)) return console.log("Transaction found via TonWeb!"), true;
              }
              await new Promise((jt) => setTimeout(jt, 3e3));
            } catch (Pt) {
              console.error(`TonWeb API error on attempt ${Tt + 1}:`, Pt), await new Promise((It) => setTimeout(It, 2e3));
            }
          }
          return console.log("TonWeb verification failed, trying direct API call..."), await Et($t);
        } catch (kt) {
          return console.error("Transaction check via TonWeb failed:", kt), console.log("Switching to direct API call for transaction verification after error..."), await Et($t);
        }
      }, Et = async ($t) => {
        try {
          console.log("Starting transaction check via direct API call...");
          for (let kt = 0; kt < 5; kt++) {
            console.log(`Checking transactions via direct API, attempt ${kt + 1}/5`);
            try {
              const Pt = await (await fetch(`https://toncenter.com/api/v2/getTransactions?address=${RECEIVER_ADDRESS}&limit=20`)).json();
              if (Pt.ok && Pt.result) {
                for (const It of Pt.result) if (It.in_msg && It.in_msg.message) {
                  const jt = It.in_msg.message;
                  if (console.log("Checking message via direct API:", {
                    value: It.in_msg.value,
                    comment: jt,
                    expectedInvoiceId: $t,
                    matches: jt.includes($t)
                  }), jt.includes($t)) return console.log("Transaction found via direct API!"), true;
                }
              }
              await new Promise((It) => setTimeout(It, 3e3));
            } catch (Tt) {
              console.error(`Direct API error on attempt ${kt + 1}:`, Tt), await new Promise((Pt) => setTimeout(Pt, 2e3));
            }
          }
          return console.error("Transaction not found after all verification methods"), false;
        } catch (kt) {
          return console.error("Transaction check via direct API failed:", kt), false;
        }
      };
      return {
        purchaseCubeWithTon: async ($t) => {
          var _a3, _b2, _c2, _d2;
          try {
            if ($(true), et(), !d.connected && (await d.openModal(), !d.connected)) return $(false), {
              success: false,
              error: "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0430"
            };
            const Tt = (_b2 = (_a3 = d.wallet) == null ? void 0 : _a3.account) == null ? void 0 : _b2.address;
            if (!Tt) throw new Error("\u0410\u0434\u0440\u0435\u0441 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0430 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D");
            if (!CUBE_TON_PRICES[$t]) throw new Error("\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0442\u0438\u043F \u043A\u0443\u0431\u0430");
            const Pt = CUBE_TON_PRICES[$t], It = v4(), jt = BigInt(Math.floor(Pt * 1e9)).toString(), Dt = new TonWeb$1.boc.Cell();
            Dt.bits.writeUint(0, 32), Dt.bits.writeString(It);
            const Ot = await Dt.toBoc(), Ft = TonWeb$1.utils.bytesToBase64(Ot), Lt = {
              validUntil: Math.floor(Date.now() / 1e3) + 300,
              messages: [
                {
                  address: RECEIVER_ADDRESS,
                  amount: jt,
                  payload: Ft
                }
              ]
            };
            console.log("\u041E\u0442\u043F\u0440\u0430\u0432\u043A\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438:", {
              address: RECEIVER_ADDRESS,
              amount: Pt,
              amountInNano: jt,
              invoiceId: It,
              payloadBase64: Ft
            });
            const Zt = await d.sendTransaction(Lt);
            if (console.log("\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438:", Zt), !(Zt == null ? void 0 : Zt.boc)) throw new Error("\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043D\u0435 \u0431\u044B\u043B\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430");
            for (let er = 0; er < 5; er++) await new Promise((Ut) => setTimeout(Ut, 2e3)), et();
            if (!await st(Zt.boc, It)) throw new Error("\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438 \u043D\u0435 \u0443\u0434\u0430\u043B\u0430\u0441\u044C");
            console.log("\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u043F\u043E\u043A\u0443\u043F\u043A\u0438 \u043A\u0443\u0431\u0430 \u0437\u0430 TON:", {
              cubeType: $t
            });
            const sr = await (await fetch("/purchase-with-ton", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              },
              body: JSON.stringify({
                telegramId: window.Telegram.WebApp.initDataUnsafe.user.id,
                cubeType: $t,
                transactionBoc: Zt.boc,
                userAddress: Tt
              })
            })).json();
            if (!sr.success) throw new Error(sr.error || "\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043F\u043E\u043A\u0443\u043F\u043A\u0443");
            return {
              success: true,
              boc: Zt.boc,
              userAddress: Tt,
              ...sr
            };
          } catch (kt) {
            return console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u043F\u043B\u0430\u0442\u044B TON:", kt), {
              success: false,
              error: kt.message,
              details: {
                cubeType: $t,
                price: CUBE_TON_PRICES[$t],
                userAddress: (_d2 = (_c2 = d.wallet) == null ? void 0 : _c2.account) == null ? void 0 : _d2.address
              }
            };
          } finally {
            $(false), rt("");
          }
        },
        purchaseSlotWithTon: async () => {
          var _a3, _b2, _c2, _d2;
          try {
            if ($(true), et(), !d.connected && (await d.openModal(), !d.connected)) return $(false), {
              success: false,
              error: "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0430"
            };
            const kt = (_b2 = (_a3 = d.wallet) == null ? void 0 : _a3.account) == null ? void 0 : _b2.address;
            if (!kt) throw new Error("\u0410\u0434\u0440\u0435\u0441 \u043A\u043E\u0448\u0435\u043B\u044C\u043A\u0430 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D");
            const Tt = v4(), Pt = BigInt(Math.floor(SLOT_TON_PRICE * 1e9)).toString(), It = new TonWeb$1.boc.Cell();
            It.bits.writeUint(0, 32), It.bits.writeString(Tt);
            const jt = await It.toBoc(), Dt = TonWeb$1.utils.bytesToBase64(jt), Ot = {
              validUntil: Math.floor(Date.now() / 1e3) + 300,
              messages: [
                {
                  address: RECEIVER_ADDRESS,
                  amount: Pt,
                  payload: Dt
                }
              ]
            };
            console.log("\u041E\u0442\u043F\u0440\u0430\u0432\u043A\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438:", {
              address: RECEIVER_ADDRESS,
              amount: SLOT_TON_PRICE,
              amountInNano: Pt,
              invoiceId: Tt,
              payloadBase64: Dt
            });
            const Ft = await d.sendTransaction(Ot);
            if (console.log("\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438:", Ft), !(Ft == null ? void 0 : Ft.boc)) throw new Error("\u0422\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u044F \u043D\u0435 \u0431\u044B\u043B\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430");
            for (let Zt = 0; Zt < 5; Zt++) await new Promise((Kt) => setTimeout(Kt, 2e3)), et();
            if (!await st(Ft.boc, Tt)) throw new Error("\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0442\u0440\u0430\u043D\u0437\u0430\u043A\u0446\u0438\u0438 \u043D\u0435 \u0443\u0434\u0430\u043B\u0430\u0441\u044C");
            console.log("\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u043F\u043E\u043A\u0443\u043F\u043A\u0438 \u0441\u043B\u043E\u0442\u0430 \u0437\u0430 TON");
            try {
              const Zt = await fetch("/purchase-slot-ton", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                  "X-Telegram-Init-Data": window.Telegram.WebApp.initData
                },
                body: JSON.stringify({
                  telegramId: window.Telegram.WebApp.initDataUnsafe.user.id,
                  transactionBoc: Ft.boc,
                  userAddress: kt
                })
              }), Kt = await Zt.text();
              let ar;
              try {
                ar = JSON.parse(Kt);
              } catch {
                if (Zt.ok) {
                  console.log("\u0421\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043D\u0443\u043B \u043D\u0435 JSON, \u043D\u043E \u0441\u0442\u0430\u0442\u0443\u0441 OK - \u0441\u043B\u043E\u0442 \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D");
                  try {
                    return {
                      success: true,
                      message: "\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0441\u043B\u043E\u0442 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u043F\u0440\u0438\u043E\u0431\u0440\u0435\u0442\u0435\u043D",
                      user: {
                        maxSlots: (await (await fetch(`/get-user-slots?telegramId=${window.Telegram.WebApp.initDataUnsafe.user.id}`)).json()).maxSlots,
                        telegramId: window.Telegram.WebApp.initDataUnsafe.user.id,
                        userAddress: kt
                      }
                    };
                  } catch {
                    return {
                      success: true,
                      message: "\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0441\u043B\u043E\u0442 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u043F\u0440\u0438\u043E\u0431\u0440\u0435\u0442\u0435\u043D",
                      user: {
                        telegramId: window.Telegram.WebApp.initDataUnsafe.user.id,
                        userAddress: kt
                      }
                    };
                  }
                } else throw new Error(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: ${Zt.status}`);
              }
              if (!ar.success) throw new Error(ar.error || "\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043F\u043E\u043A\u0443\u043F\u043A\u0443");
              return {
                success: true,
                boc: Ft.boc,
                userAddress: kt,
                ...ar
              };
            } catch (Zt) {
              if (Zt.message.includes("Unexpected token")) {
                console.log("\u041F\u043E\u043B\u0443\u0447\u0435\u043D HTML \u0432\u043C\u0435\u0441\u0442\u043E JSON, \u043D\u043E \u0441\u043B\u043E\u0442 \u043C\u043E\u0433 \u0431\u044B\u0442\u044C \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D");
                try {
                  return {
                    success: true,
                    message: "\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0441\u043B\u043E\u0442 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u043F\u0440\u0438\u043E\u0431\u0440\u0435\u0442\u0435\u043D",
                    user: {
                      maxSlots: (await (await fetch(`/get-user-slots?telegramId=${window.Telegram.WebApp.initDataUnsafe.user.id}`)).json()).maxSlots,
                      telegramId: window.Telegram.WebApp.initDataUnsafe.user.id,
                      userAddress: kt
                    }
                  };
                } catch (Kt) {
                  console.error("\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043E \u0441\u043B\u043E\u0442\u0430\u0445", Kt);
                }
              }
              throw Zt;
            }
          } catch ($t) {
            return console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u043F\u043B\u0430\u0442\u044B TON:", $t), {
              success: false,
              error: $t.message,
              details: {
                price: SLOT_TON_PRICE,
                userAddress: (_d2 = (_c2 = d.wallet) == null ? void 0 : _c2.account) == null ? void 0 : _d2.address
              }
            };
          } finally {
            $(false), rt("");
          }
        },
        isLoading: _,
        loadingMessage: j,
        LoadingOverlay
      };
    }, SLOT_PRICES = PRICES.SLOTS, useTelegramSlots = () => {
      const { user: d, updateUser: _ } = useAuthStore();
      return {
        purchaseSlot: async () => {
          try {
            const j = window.Telegram.WebApp.initDataUnsafe.user.id, rt = await fetch(`/create-slot-invoice?telegramId=${j}`), et = await rt.json();
            if (!rt.ok) throw new Error(et.error || "Failed to create invoice");
            if (et.slug) return new Promise((st, pt) => {
              window.Telegram.WebApp.openInvoice(et.slug, {
                callback: async (Et) => {
                  if (console.log("Invoice callback with status:", Et), Et === "paid") try {
                    const St = await (await fetch(`/get-user-slots?telegramId=${j}`, {
                      headers: {
                        "X-Telegram-Init-Data": window.Telegram.WebApp.initData
                      }
                    })).json();
                    if (console.log("Received slots data:", St), St.success) {
                      const $t = {
                        ...d,
                        maxSlots: St.maxSlots
                      };
                      console.log("Updating user with:", $t), _($t), console.log("User updated");
                    }
                    st({
                      success: true,
                      maxSlots: St.maxSlots
                    });
                  } catch (Bt) {
                    console.error("Failed to update user data:", Bt), pt(new Error("Failed to update user data"));
                  }
                  else Et === "cancelled" ? st({
                    success: false,
                    reason: "cancelled"
                  }) : Et === "failed" && st({
                    success: false,
                    reason: "failed"
                  });
                }
              });
            });
          } catch (j) {
            throw console.error("Error purchasing slot:", j), new Error("Failed to purchase slot");
          }
        }
      };
    }, images = {
      basic: getImageFromCache("/assets/power.webp"),
      minion: getImageFromCache("/assets/poowerr.webp"),
      cube1: getImageFromCache("/assets/purpule1.webp"),
      cube2: getImageFromCache("/assets/purpule2.webp"),
      cube3: getImageFromCache("/assets/red1.webp"),
      cube4: getImageFromCache("/assets/red2.webp")
    }, ErrorPopup = ({ message: d, onClose: _ }) => jsxRuntimeExports.jsxs("div", {
      className: "error-popup",
      onClick: _,
      children: [
        jsxRuntimeExports.jsx("h2", {
          className: "error-title",
          children: "Error!"
        }),
        jsxRuntimeExports.jsx("p", {
          className: "error-message",
          children: d
        })
      ]
    });
    function ShopPage() {
      const { user: d, updateUser: _ } = useAuthStore(), [$, j] = reactExports.useState(null), [rt, et] = reactExports.useState("auto"), [st, pt] = reactExports.useState("nodes"), [Et, Bt] = reactExports.useState({
        basic: 0,
        minion: 0,
        cube1: 0,
        cube2: 0,
        cube3: 0,
        cube4: 0
      }), { purchaseCube: St } = useTelegramCubes(), { purchaseCubeWithTon: $t, purchaseSlotWithTon: kt, isLoading: Tt, loadingMessage: Pt } = useTonPayment(), { purchaseSlot: It, isLoading: jt } = useTelegramSlots(), [Dt, Ot] = reactExports.useState(false), [Ft, Lt] = reactExports.useState(""), [Zt, Kt] = reactExports.useState(false), [ar, sr] = reactExports.useState(false), [er, Ut] = reactExports.useState("");
      reactExports.useEffect(() => {
        et("100dvh"), window.requestAnimationFrame(() => {
          var _a3;
          document.body.style.overflow = "auto", ((_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) && window.Telegram.WebApp.expand();
        });
      }, []), reactExports.useEffect(() => {
        (async () => {
          if (d == null ? void 0 : d.telegramId) try {
            const ut = await (await fetch(`/get-user-miners?telegramId=${d.telegramId}`, {
              headers: {
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              }
            })).json();
            if (ut.success) {
              const ot = ut.miners || [];
              Bt({
                basic: ot.filter((Ct) => Ct.type === "basic").length,
                minion: ot.filter((Ct) => Ct.type === "minion").length,
                cube1: ot.filter((Ct) => Ct.type === "cube1").length,
                cube2: ot.filter((Ct) => Ct.type === "cube2").length,
                cube3: ot.filter((Ct) => Ct.type === "cube3").length,
                cube4: ot.filter((Ct) => Ct.type === "cube4").length
              });
            }
          } catch (At) {
            console.error("Error fetching miner counts:", At);
          }
        })();
      }, [
        d == null ? void 0 : d.telegramId
      ]);
      const xt = async (Mt) => {
        try {
          j(null);
          let At;
          Mt === "slot" ? At = await kt() : At = await $t(Mt), At.success ? Mt === "slot" ? await tt() : await nt() : At.error && (At.error.includes("Unexpected token") || At.error.includes("not valid JSON") ? (console.log("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0430\u0440\u0441\u0438\u043D\u0433\u0430 JSON, \u043D\u043E \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043C\u043E\u0433\u043B\u0430 \u0431\u044B\u0442\u044C \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0439. \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0441\u043B\u043E\u0442\u044B..."), Mt === "slot" ? await tt() : await nt()) : j(`\u041F\u043E\u043A\u0443\u043F\u043A\u0430 \u043D\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430: ${At.error}`));
        } catch (At) {
          if (console.error("\u041E\u0448\u0438\u0431\u043A\u0430 TON \u043F\u043E\u043A\u0443\u043F\u043A\u0438:", At), Mt === "slot") try {
            await tt();
          } catch (ut) {
            console.error("\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0431\u043D\u043E\u0432\u0438\u0442\u044C \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043E \u0441\u043B\u043E\u0442\u0430\u0445:", ut);
          }
          j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043A\u0443\u043F\u043A\u0435. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043D\u0430\u043B\u0438\u0447\u0438\u0435 \u043D\u043E\u0432\u043E\u0433\u043E \u0441\u043B\u043E\u0442\u0430.");
        }
      }, tt = async () => {
        try {
          const At = await (await fetch(`/get-user-slots?telegramId=${d.telegramId}`, {
            headers: {
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            }
          })).json();
          return At.success ? (console.log("\u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043B\u043E\u0442\u043E\u0432:", At.maxSlots), _({
            ...d,
            maxSlots: At.maxSlots
          }), true) : false;
        } catch (Mt) {
          return console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0438 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u043B\u043E\u0442\u0430\u0445:", Mt), false;
        }
      }, nt = async () => {
        try {
          const At = await (await fetch(`/get-user-miners?telegramId=${d.telegramId}`, {
            headers: {
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            }
          })).json();
          return At.success ? (Bt({
            basic: At.miners.filter((ut) => ut.type === "basic").length,
            minion: At.miners.filter((ut) => ut.type === "minion").length,
            cube1: At.miners.filter((ut) => ut.type === "cube1").length,
            cube2: At.miners.filter((ut) => ut.type === "cube2").length,
            cube3: At.miners.filter((ut) => ut.type === "cube3").length,
            cube4: At.miners.filter((ut) => ut.type === "cube4").length
          }), _({
            ...d,
            miners: At.miners
          }), true) : false;
        } catch (Mt) {
          return console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0438 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u043C\u0430\u0439\u043D\u0435\u0440\u0430\u0445:", Mt), false;
        }
      }, it = async (Mt) => {
        try {
          j(null);
          let At;
          if (Mt === "slot") At = await It();
          else if (At = await St(Mt), At.success) {
            const ot = await (await fetch(`/get-user-miners?telegramId=${d.telegramId}`, {
              headers: {
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              }
            })).json();
            ot.success && (Bt({
              basic: ot.miners.filter((Ct) => Ct.type === "basic").length,
              minion: ot.miners.filter((Ct) => Ct.type === "minion").length,
              cube1: ot.miners.filter((Ct) => Ct.type === "cube1").length,
              cube2: ot.miners.filter((Ct) => Ct.type === "cube2").length,
              cube3: ot.miners.filter((Ct) => Ct.type === "cube3").length,
              cube4: ot.miners.filter((Ct) => Ct.type === "cube4").length
            }), _({
              ...d,
              miners: ot.miners
            }));
          }
          At.reason && j(`\u041F\u043E\u043A\u0443\u043F\u043A\u0430 \u043D\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430: ${At.reason}`);
        } catch (At) {
          console.error("Telegram purchase error:", At), j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043A\u0443\u043F\u043A\u0435");
        }
      }, at = async (Mt, At) => {
        try {
          if (!(d == null ? void 0 : d.telegramId)) {
            j("Authorization error");
            return;
          }
          if (d.rootBalance < At) {
            j("Insufficient funds");
            return;
          }
          const ot = await (await fetch(`/get-user-miners?telegramId=${d.telegramId}`, {
            headers: {
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            }
          })).json(), Ct = ot.success ? ot.miners : [], Rt = Ct.filter((tr) => tr.type === "basic").length, Nt = Ct.filter((tr) => tr.type === "minion").length;
          if (Mt === "basic" && Rt >= 5) {
            Ut("Maximum Basic miners reached (5)");
            return;
          } else if (Mt === "minion" && Nt >= 10) {
            Ut("Maximum Classic miners reached (10)");
            return;
          }
          const Wt = /* @__PURE__ */ new Set();
          Ct.forEach((tr) => {
            tr.type === "basic" ? Wt.add("basic-slot") : tr.type === "minion" ? Wt.add("minion-slot") : tr.type.startsWith("cube") && Wt.add(`${tr.type}-${tr.id}`);
          });
          let Xt = false;
          if ((Mt.startsWith("cube") || Mt === "basic" && !Ct.some((tr) => tr.type === "basic") || Mt === "minion" && !Ct.some((tr) => tr.type === "minion")) && (Xt = true), Xt && Wt.size >= ((d == null ? void 0 : d.maxSlots) || 5)) {
            j(`\u0412\u0441\u0435 \u0441\u043B\u043E\u0442\u044B \u0437\u0430\u043D\u044F\u0442\u044B! \u0423 \u0432\u0430\u0441 ${Wt.size} \u0438\u0437 ${(d == null ? void 0 : d.maxSlots) || 5} \u0441\u043B\u043E\u0442\u043E\u0432`);
            return;
          }
          const rr = [
            {
              type: Mt,
              image: images[Mt],
              purchaseDate: /* @__PURE__ */ new Date(),
              id: Date.now()
            },
            ...Ct
          ];
          Bt((tr) => ({
            ...tr,
            [Mt]: tr[Mt] + 1
          }));
          const Yt = await (await fetch("/update-root-balance", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            },
            body: JSON.stringify({
              telegramId: d.telegramId,
              rootBalance: d.rootBalance - At
            })
          })).json();
          Yt.success ? (await (await fetch("/update-user-miners", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-Telegram-Init-Data": window.Telegram.WebApp.initData
            },
            body: JSON.stringify({
              telegramId: d.telegramId,
              miners: rr
            })
          })).json()).success ? (_({
            ...d,
            rootBalance: Yt.rootBalance,
            miners: rr
          }), j(null), Kt(true), Lt("Congratulations on your purchase! The more nodes you buy, the more you earn!"), Ot(true), setTimeout(() => {
            Kt(false), sr(true);
          }, 700)) : j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0438 \u043C\u0430\u0439\u043D\u0435\u0440\u0430") : j(Yt.message || "\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043A\u0443\u043F\u043A\u0435");
        } catch (ut) {
          console.error("Purchase error:", ut), j("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043A\u0443\u043F\u043A\u0435");
        }
      }, ct = () => {
        Ot(false), sr(false);
      };
      return jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
        children: [
          Dt && jsxRuntimeExports.jsx("div", {
            className: "blur-background",
            onClick: ct
          }),
          Dt && jsxRuntimeExports.jsxs("div", {
            className: "popup",
            onClick: ct,
            children: [
              jsxRuntimeExports.jsx("h2", {
                className: "popup-title",
                children: "Congratulations on your purchase!"
              }),
              jsxRuntimeExports.jsx("div", {
                className: "loading-animation",
                children: Zt ? jsxRuntimeExports.jsx("div", {
                  className: "loader"
                }) : jsxRuntimeExports.jsx("div", {
                  className: "checkmark"
                })
              }),
              jsxRuntimeExports.jsx("p", {
                className: "popup-message",
                children: Ft
              })
            ]
          }),
          jsxRuntimeExports.jsx("div", {
            className: "min-h-screen bg-[#0A0F1C] relative",
            children: jsxRuntimeExports.jsx("div", {
              className: "h-screen overflow-y-auto",
              children: jsxRuntimeExports.jsxs("div", {
                className: "w-full max-w-md mx-auto px-4 pt-8 pb-24 relative z-10",
                style: {
                  fontFamily: "Polonium"
                },
                children: [
                  jsxRuntimeExports.jsx(BalanceDisplay, {}),
                  jsxRuntimeExports.jsx("h1", {
                    className: "text-3xl font-mono text-white/90 mb-6 drop-shadow-[0_0_8px_rgba(255,255,255,0.5)]",
                    children: "Shop"
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex space-x-2 mb-6",
                    children: [
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => pt("nodes"),
                        className: `flex-1 py-2 px-4 rounded-lg ${st === "nodes" ? "bg-blue-400/20 text-blue-400 border border-blue-400/50" : "text-blue-400/60 hover:text-blue-400"}`,
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "Nodes"
                      }),
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => pt("slots"),
                        className: `flex-1 py-2 px-4 rounded-lg ${st === "slots" ? "bg-blue-400/20 text-blue-400 border border-blue-400/50" : "text-blue-400/60 hover:text-blue-400"}`,
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "Slots"
                      }),
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => pt("boosts"),
                        className: `flex-1 py-2 px-4 rounded-lg ${st === "boosts" ? "bg-blue-400/20 text-blue-400 border border-blue-400/50" : "text-blue-400/60 hover:text-blue-400"}`,
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "Boosts"
                      })
                    ]
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "space-y-8",
                    children: [
                      st === "nodes" && jsxRuntimeExports.jsxs("div", {
                        className: "grid grid-cols-2 gap-4",
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                                backdrop-blur-md rounded-2xl p-2 
                                border border-blue-400/20
                                shadow-[0_0_10px_rgba(30,58,138,0.1)]
                                hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                                transition-all duration-300
                                relative`,
                            children: [
                              jsxRuntimeExports.jsxs("div", {
                                className: "flex justify-between items-center mb-1",
                                children: [
                                  jsxRuntimeExports.jsx("span", {
                                    className: "text-white/90 text-base font-mono",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: "Classic"
                                  }),
                                  jsxRuntimeExports.jsxs("span", {
                                    className: "text-blue-400/60 text-xs font-mono",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      Et.minion,
                                      "/10"
                                    ]
                                  })
                                ]
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                children: jsxRuntimeExports.jsx("span", {
                                  className: "text-blue-400 text-xs flex justify-center items-center font-mono",
                                  style: {
                                    fontFamily: "Polonium"
                                  },
                                  children: "+10000 POKO/day"
                                })
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "text-blue-400/60 text-xs mb-1 font-mono",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: "Capacity: 40000 POKO"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                children: jsxRuntimeExports.jsx("img", {
                                  src: images.minion,
                                  alt: "minion",
                                  className: "w-full h-full object-contain"
                                })
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "text-center relative z-20",
                                children: jsxRuntimeExports.jsx("button", {
                                  type: "button",
                                  onClick: () => at("minion", 1e5),
                                  className: `inline-block py-1 px-4 text-blue-400 text-xs font-mono rounded 
                                  border-2 border-blue-400/50 hover:border-blue-400
                                  bg-[#0A0F1C]/80 backdrop-blur-sm
                                  transition-all duration-200 cursor-pointer
                                  shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                  hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]`,
                                  style: {
                                    fontFamily: "Polonium"
                                  },
                                  children: "100000 POKO"
                                })
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                                backdrop-blur-md rounded-2xl p-2 
                                border border-blue-400/20
                                shadow-[0_0_10px_rgba(30,58,138,0.1)]
                                hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                                transition-all duration-300
                                relative`,
                            children: [
                              jsxRuntimeExports.jsxs("div", {
                                className: "flex justify-between items-center mb-1",
                                children: [
                                  jsxRuntimeExports.jsx("span", {
                                    className: "text-white/90 text-base",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: "Basic"
                                  }),
                                  jsxRuntimeExports.jsxs("span", {
                                    className: "text-blue-400/60 text-xs font-mono",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      Et.basic,
                                      "/5"
                                    ]
                                  })
                                ]
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                children: jsxRuntimeExports.jsx("span", {
                                  className: "text-blue-400 text-xs flex justify-center items-center font-mono",
                                  style: {
                                    fontFamily: "Polonium"
                                  },
                                  children: "+500 POKO/day"
                                })
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "text-blue-400/60 text-xs mb-1 font-mono",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: "Capacity: 1000 POKO"
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                children: jsxRuntimeExports.jsx("img", {
                                  src: images.basic,
                                  alt: "Basic",
                                  className: "w-full h-full object-contain"
                                })
                              }),
                              jsxRuntimeExports.jsx("div", {
                                className: "text-center relative z-20",
                                children: jsxRuntimeExports.jsx("button", {
                                  type: "button",
                                  onClick: () => at("basic", 4e3),
                                  className: `inline-block py-1 px-4 text-blue-400 text-xs font-mono rounded 
                                  border-2 border-blue-400/50 hover:border-blue-400
                                  bg-[#0A0F1C]/80 backdrop-blur-sm
                                  transition-all duration-200 cursor-pointer
                                  shadow-[0_0_10px_rgba(96,165,250,0.2)]
                                  hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]`,
                                  style: {
                                    fontFamily: "Polonium"
                                  },
                                  children: "4000 POKO"
                                })
                              })
                            ]
                          })
                        ]
                      }),
                      st === "nodes" && jsxRuntimeExports.jsxs("div", {
                        children: [
                          jsxRuntimeExports.jsx("h2", {
                            className: "text-2xl text-white mb-6",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Powerful Nodes"
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            className: "grid grid-cols-2 gap-4",
                            children: [
                              jsxRuntimeExports.jsxs("div", {
                                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                       backdrop-blur-md rounded-2xl p-2 
                       border border-blue-400/20
                       shadow-[0_0_10px_rgba(30,58,138,0.1)]
                       hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                       transition-all duration-300
                       relative`,
                                children: [
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "flex justify-between items-center mb-1",
                                    children: [
                                      jsxRuntimeExports.jsx("span", {
                                        className: "text-white/90 text-base",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: CUBE_INFO.cube1.name
                                      }),
                                      jsxRuntimeExports.jsxs("span", {
                                        className: "text-blue-400/60 text-xs",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          Et.cube1,
                                          "/100"
                                        ]
                                      })
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsxs("span", {
                                      className: "text-blue-400 text-xs flex justify-center items-center",
                                      style: {
                                        fontFamily: "Polonium"
                                      },
                                      children: [
                                        "+",
                                        CUBE_INFO.cube1.dailyRate,
                                        " POKO/day"
                                      ]
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-blue-400/60 text-xs mb-1",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      "Capacity: ",
                                      CUBE_INFO.cube1.capacity,
                                      " POKO"
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsx("img", {
                                      src: images.cube1,
                                      alt: "Power Cube I",
                                      className: "w-full h-full object-contain"
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-center relative z-20 space-y-1.5",
                                    children: [
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => it("cube1"),
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-yellow-500 to-amber-500
                          shadow-[0_0_8px_rgba(250,204,21,0.4)]
                          hover:shadow-[0_0_12px_rgba(250,204,21,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_PRICES.cube1,
                                          " \u2B50"
                                        ]
                                      }),
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => xt("cube1"),
                                        disabled: Tt,
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-blue-600 to-blue-500
                          shadow-[0_0_8px_rgba(37,99,235,0.4)]
                          hover:shadow-[0_0_12px_rgba(37,99,235,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full
                          disabled:opacity-50 disabled:cursor-not-allowed`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_TON_PRICES.cube1,
                                          " TON"
                                        ]
                                      })
                                    ]
                                  })
                                ]
                              }),
                              jsxRuntimeExports.jsxs("div", {
                                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                       backdrop-blur-md rounded-2xl p-2 
                       border border-blue-400/20
                       shadow-[0_0_10px_rgba(30,58,138,0.1)]
                       hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                       transition-all duration-300
                       relative`,
                                children: [
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "flex justify-between items-center mb-1",
                                    children: [
                                      jsxRuntimeExports.jsx("span", {
                                        className: "text-white/90 text-base",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: CUBE_INFO.cube2.name
                                      }),
                                      jsxRuntimeExports.jsxs("span", {
                                        className: "text-blue-400/60 text-xs",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          Et.cube2,
                                          "/100"
                                        ]
                                      })
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsxs("span", {
                                      className: "text-blue-400 text-xs flex justify-center items-center",
                                      style: {
                                        fontFamily: "Polonium"
                                      },
                                      children: [
                                        "+",
                                        CUBE_INFO.cube2.dailyRate,
                                        " POKO/day"
                                      ]
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-blue-400/60 text-xs mb-1",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      "Capacity: ",
                                      CUBE_INFO.cube2.capacity,
                                      " POKO"
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsx("img", {
                                      src: images.cube2,
                                      alt: "Power Cube II",
                                      className: "w-full h-full object-contain"
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-center relative z-20 space-y-1.5",
                                    children: [
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => it("cube2"),
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-yellow-500 to-amber-500
                          shadow-[0_0_8px_rgba(250,204,21,0.4)]
                          hover:shadow-[0_0_12px_rgba(250,204,21,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_PRICES.cube2,
                                          " \u2B50"
                                        ]
                                      }),
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => xt("cube2"),
                                        disabled: Tt,
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-blue-600 to-blue-500
                          shadow-[0_0_8px_rgba(37,99,235,0.4)]
                          hover:shadow-[0_0_12px_rgba(37,99,235,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full
                          disabled:opacity-50 disabled:cursor-not-allowed`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_TON_PRICES.cube2,
                                          " TON"
                                        ]
                                      })
                                    ]
                                  })
                                ]
                              }),
                              jsxRuntimeExports.jsxs("div", {
                                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                       backdrop-blur-md rounded-2xl p-2 
                       border border-blue-400/20
                       shadow-[0_0_10px_rgba(30,58,138,0.1)]
                       hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                       transition-all duration-300
                       relative`,
                                children: [
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "flex justify-between items-center mb-1",
                                    children: [
                                      jsxRuntimeExports.jsx("span", {
                                        className: "text-white/90 text-base",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: CUBE_INFO.cube3.name
                                      }),
                                      jsxRuntimeExports.jsxs("span", {
                                        className: "text-blue-400/60 text-xs",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          Et.cube3,
                                          "/100"
                                        ]
                                      })
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsxs("span", {
                                      className: "text-blue-400 text-xs flex justify-center items-center",
                                      style: {
                                        fontFamily: "Polonium"
                                      },
                                      children: [
                                        "+",
                                        CUBE_INFO.cube3.dailyRate,
                                        " POKO/day"
                                      ]
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-blue-400/60 text-xs mb-1",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      "Capacity: ",
                                      CUBE_INFO.cube3.capacity,
                                      " POKO"
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsx("img", {
                                      src: images.cube3,
                                      alt: "Power Cube III",
                                      className: "w-full h-full object-contain"
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-center relative z-20 space-y-1.5",
                                    children: [
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => it("cube3"),
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-yellow-500 to-amber-500
                          shadow-[0_0_8px_rgba(250,204,21,0.4)]
                          hover:shadow-[0_0_12px_rgba(250,204,21,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_PRICES.cube3,
                                          " \u2B50"
                                        ]
                                      }),
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => xt("cube3"),
                                        disabled: Tt,
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-blue-600 to-blue-500
                          shadow-[0_0_8px_rgba(37,99,235,0.4)]
                          hover:shadow-[0_0_12px_rgba(37,99,235,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full
                          disabled:opacity-50 disabled:cursor-not-allowed`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_TON_PRICES.cube3,
                                          " TON"
                                        ]
                                      })
                                    ]
                                  })
                                ]
                              }),
                              jsxRuntimeExports.jsxs("div", {
                                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                       backdrop-blur-md rounded-2xl p-2 
                       border border-blue-400/20
                       shadow-[0_0_10px_rgba(30,58,138,0.1)]
                       hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                       transition-all duration-300
                       relative`,
                                children: [
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "flex justify-between items-center mb-1",
                                    children: [
                                      jsxRuntimeExports.jsx("span", {
                                        className: "text-white/90 text-base",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: CUBE_INFO.cube4.name
                                      }),
                                      jsxRuntimeExports.jsxs("span", {
                                        className: "text-blue-400/60 text-xs",
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          Et.cube4,
                                          "/100"
                                        ]
                                      })
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsxs("span", {
                                      className: "text-blue-400 text-xs flex justify-center items-center",
                                      style: {
                                        fontFamily: "Polonium"
                                      },
                                      children: [
                                        "+",
                                        CUBE_INFO.cube4.dailyRate,
                                        " POKO/day"
                                      ]
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-blue-400/60 text-xs mb-1",
                                    style: {
                                      fontFamily: "Polonium"
                                    },
                                    children: [
                                      "Capacity: ",
                                      CUBE_INFO.cube4.capacity,
                                      " POKO"
                                    ]
                                  }),
                                  jsxRuntimeExports.jsx("div", {
                                    className: "bg-[#0F172A] rounded-lg p-1 mb-1",
                                    children: jsxRuntimeExports.jsx("img", {
                                      src: images.cube4,
                                      alt: "Power Cube IV",
                                      className: "w-full h-full object-contain"
                                    })
                                  }),
                                  jsxRuntimeExports.jsxs("div", {
                                    className: "text-center relative z-20 space-y-1.5",
                                    children: [
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => it("cube4"),
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-yellow-500 to-amber-500
                          shadow-[0_0_8px_rgba(250,204,21,0.4)]
                          hover:shadow-[0_0_12px_rgba(250,204,21,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_PRICES.cube4,
                                          " \u2B50"
                                        ]
                                      }),
                                      jsxRuntimeExports.jsxs("button", {
                                        type: "button",
                                        onClick: () => xt("cube4"),
                                        disabled: Tt,
                                        className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                          bg-gradient-to-r from-blue-600 to-blue-500
                          shadow-[0_0_8px_rgba(37,99,235,0.4)]
                          hover:shadow-[0_0_12px_rgba(37,99,235,0.6)]
                          transition-all duration-200 cursor-pointer
                          w-full
                          disabled:opacity-50 disabled:cursor-not-allowed`,
                                        style: {
                                          fontFamily: "Polonium"
                                        },
                                        children: [
                                          CUBE_TON_PRICES.cube4,
                                          " TON"
                                        ]
                                      })
                                    ]
                                  })
                                ]
                              })
                            ]
                          })
                        ]
                      }),
                      Tt && jsxRuntimeExports.jsx("div", {
                        className: "fixed inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm z-[100]",
                        children: jsxRuntimeExports.jsxs("div", {
                          className: "flex flex-col items-center justify-center bg-[#1A1F35] p-8 rounded-xl border border-blue-500/30",
                          children: [
                            jsxRuntimeExports.jsx("div", {
                              className: "w-12 h-12 border-2 border-blue-500 border-t-transparent rounded-full animate-spin mb-4"
                            }),
                            jsxRuntimeExports.jsx("p", {
                              className: "text-blue-400 font-mono text-center mb-2",
                              children: Pt
                            }),
                            jsxRuntimeExports.jsx("p", {
                              className: "text-blue-400/60 text-sm text-center",
                              children: "Please do not close the app"
                            })
                          ]
                        })
                      }),
                      st === "nodes" && jsxRuntimeExports.jsxs("div", {
                        children: [
                          jsxRuntimeExports.jsx("h2", {
                            className: "text-2xl text-blue-400 mb-6",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "Coming Soon"
                          }),
                          jsxRuntimeExports.jsx("p", {
                            className: "text-blue-400/60 text-center",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "New miners will be available soon"
                          })
                        ]
                      }),
                      st === "slots" && jsxRuntimeExports.jsxs("div", {
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                backdrop-blur-md rounded-2xl p-6 
                border border-blue-400/20
                shadow-[0_0_10px_rgba(30,58,138,0.1)]
                hover:shadow-[0_0_15px_rgba(30,58,138,0.15)]
                transition-all duration-300`,
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "flex justify-between items-center mb-4",
                            children: [
                              jsxRuntimeExports.jsx("span", {
                                className: "text-white/90 text-xl font-mono drop-shadow-[0_0_8px_rgba(255,255,255,0.5)]",
                                children: "Additional Slot"
                              }),
                              jsxRuntimeExports.jsxs("span", {
                                className: "text-blue-400/60 text-sm font-mono bg-[#0F172A] px-3 py-1 rounded-lg",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  "Current: ",
                                  (d == null ? void 0 : d.maxSlots) || 5
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            className: "text-center space-y-2",
                            children: [
                              jsxRuntimeExports.jsxs("button", {
                                type: "button",
                                onClick: () => it("slot"),
                                disabled: jt,
                                className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                  bg-gradient-to-r from-yellow-500 to-amber-500
                  shadow-[0_0_8px_rgba(250,204,21,0.4)]
                  hover:shadow-[0_0_12px_rgba(250,204,21,0.6)]
                  transition-all duration-200 cursor-pointer
                  w-full
                  disabled:opacity-50 disabled:cursor-not-allowed`,
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  SLOT_PRICES.stars,
                                  " \u2B50"
                                ]
                              }),
                              jsxRuntimeExports.jsxs("button", {
                                type: "button",
                                onClick: () => xt("slot"),
                                disabled: Tt,
                                className: `inline-block py-1.5 px-4 text-white font-semibold text-sm rounded-md
                  bg-gradient-to-r from-blue-600 to-blue-500
                  shadow-[0_0_8px_rgba(37,99,235,0.4)]
                  hover:shadow-[0_0_12px_rgba(37,99,235,0.6)]
                  transition-all duration-200 cursor-pointer
                  w-full
                  disabled:opacity-50 disabled:cursor-not-allowed`,
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  SLOT_PRICES.ton,
                                  " TON"
                                ]
                              })
                            ]
                          })
                        ]
                      }),
                      st === "boosts" && jsxRuntimeExports.jsxs("div", {
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                              backdrop-blur-md rounded-2xl p-6 
                              border border-blue-400/20
                              shadow-[0_0_15px_rgba(59,130,246,0.15)]
                              hover:shadow-[0_0_20px_rgba(59,130,246,0.2)]
                              transition-all duration-300
                              relative overflow-hidden`,
                        children: [
                          jsxRuntimeExports.jsx("div", {
                            className: `absolute inset-0 
                                bg-[linear-gradient(90deg,rgba(59,130,246,0.1)_1px,transparent_1px),linear-gradient(0deg,rgba(59,130,246,0.1)_1px,transparent_1px)]
                                bg-[size:20px_20px]
                                opacity-30`
                          }),
                          jsxRuntimeExports.jsx("p", {
                            className: "text-blue-400 text-center text-xl font-mono drop-shadow-[0_0_8px_rgba(96,165,250,0.5)]",
                            children: "Coming Soon"
                          })
                        ]
                      })
                    ]
                  })
                ]
              })
            })
          }),
          jsxRuntimeExports.jsx("div", {
            className: "fixed bottom-0 left-0 right-0 bg-[#0A0F1C] z-50",
            children: jsxRuntimeExports.jsx(Navigation, {})
          }),
          $ && jsxRuntimeExports.jsx("div", {
            className: "fixed top-4 right-4 bg-blue-500/80 text-white px-4 py-2 rounded-lg z-50",
            style: {
              fontFamily: "Polonium"
            },
            children: $
          }),
          er && jsxRuntimeExports.jsx(ErrorPopup, {
            message: er,
            onClose: () => Ut("")
          })
        ]
      });
    }
    function MethodPage() {
      const d = useNavigate(), { user: _ } = useAuthStore(), { user: $ } = useTelegram(), { tg: j } = useTelegram(), [rt, et] = reactExports.useState(false), [st, pt] = reactExports.useState(false), [Et, Bt] = reactExports.useState(false), [St, $t] = reactExports.useState({
        isOpen: false,
        title: "",
        message: ""
      }), [kt, Tt] = reactExports.useState({
        isOpen: false,
        message: ""
      }), [Pt, It] = reactExports.useState(false), [jt, Dt] = reactExports.useState(true), [Ot, Ft] = reactExports.useState(true);
      console.log("Telegram User:", $), ($ == null ? void 0 : $.username) || ($ == null ? void 0 : $.first_name) || (_ == null ? void 0 : _.username);
      const Lt = parseInt((_ == null ? void 0 : _.rootBalance) || 0), Zt = Math.max(0, 4e3 - Lt);
      reactExports.useEffect(() => {
        (async () => {
          if (!(_ == null ? void 0 : _.telegramId)) {
            Dt(false);
            return;
          }
          try {
            const ct = await (await fetch(`/get-user-miners?telegramId=${_.telegramId}`, {
              headers: {
                "X-Telegram-Init-Data": window.Telegram.WebApp.initData
              }
            })).json();
            if (ct.success) {
              const Mt = ct.miners.some((At) => [
                "basic",
                "minion",
                "cube1",
                "cube2",
                "cube3",
                "cube4"
              ].includes(At.type));
              It(Mt);
            }
          } catch (at) {
            console.error("Error checking user nodes:", at);
          } finally {
            Dt(false);
          }
        })();
      }, [
        _ == null ? void 0 : _.telegramId
      ]);
      const Kt = () => {
        d("/shop");
      }, ar = () => {
        var _a3, _b2;
        const it = ((_a3 = $ == null ? void 0 : $.first_name) == null ? void 0 : _a3.trim().toLowerCase()) || "", at = ((_b2 = $ == null ? void 0 : $.last_name) == null ? void 0 : _b2.trim().toLowerCase()) || "";
        console.log("First Name:", it), console.log("Last Name:", at);
        const ct = it.includes("poko\u{1F441}") || it.includes("poko"), Mt = at.includes("poko\u{1F441}") || at.includes("poko");
        return it.includes("poko") && !it.includes("poko\u{1F441}") || at.includes("poko") && !at.includes("poko\u{1F441}") ? ($t({
          isOpen: true,
          title: "Update Required",
          message: "Please add the \u{1F441} symbol after POKO in your name (POKO\u{1F441})"
        }), false) : ct || Mt;
      }, sr = () => {
        console.log("Claim Reward button clicked"), window.Telegram.WebApp.CloudStorage.getItem("rewardClaimed", (it, at) => {
          if (it) {
            console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043D\u0430\u0433\u0440\u0430\u0434\u044B:", it);
            return;
          }
          if (at === "true") {
            $t({
              isOpen: true,
              title: "Reward Already Claimed",
              message: "You have already received your reward for updating your name."
            });
            return;
          }
          if (ar()) {
            const Mt = Lt + 2500;
            fetch("/update-root-balance", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "X-Telegram-Init-Data": j.initData
              },
              body: JSON.stringify({
                telegramId: _.telegramId,
                rootBalance: Mt
              })
            }).then((At) => {
              if (!At.ok) throw new Error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0438 \u0431\u0430\u043B\u0430\u043D\u0441\u0430 \u043D\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435");
              return At.json();
            }).then((At) => {
              At.success ? window.Telegram.WebApp.CloudStorage.setItem("rootBalance", Mt.toString(), (ut) => {
                ut ? console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0438 \u0431\u0430\u043B\u0430\u043D\u0441\u0430:", ut) : window.Telegram.WebApp.CloudStorage.setItem("rewardClaimed", "true", (ot) => {
                  ot ? console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043D\u0430\u0433\u0440\u0430\u0434\u044B:", ot) : $t({
                    isOpen: true,
                    title: "Success!",
                    message: "Congratulations! You have received 2500 POKO for updating your name!"
                  });
                });
              }) : $t({
                isOpen: true,
                title: "Error",
                message: "Failed to update balance. Please try again."
              });
            }).catch((At) => {
              console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0438 \u0431\u0430\u043B\u0430\u043D\u0441\u0430:", At), $t({
                isOpen: true,
                title: "Error",
                message: "An error occurred while claiming the reward. Please try again."
              });
            });
          } else $t({
            isOpen: true,
            title: "Name Update Required",
            message: "Please update your Telegram name by adding the tag POKO first."
          });
        });
      }, er = async () => {
        var _a3;
        if (_ == null ? void 0 : _.telegramId) try {
          const at = await (await fetch(`/get-referral-link?telegramId=${_.telegramId}`, {
            headers: {
              "x-telegram-init-data": j.initData
            }
          })).json();
          if (at.inviteLink) {
            const Mt = `https://t.me/share/url?text=${encodeURIComponent(`\u{1F680} Join POKO!

\u{1F48E} Complete tasks
\u{1F4B0} Get rewards
\u{1F3AE} Play games
\u{1F465} Invite friends

\u{1F525} Join now!`)}&url=${encodeURIComponent(at.inviteLink)}`;
            ((_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) ? window.Telegram.WebApp.openTelegramLink(Mt) : window.open(Mt, "_blank");
          }
        } catch {
        }
      }, Ut = async () => {
        try {
          const it = window.Telegram.WebApp.initDataUnsafe.user.id, at = window.Telegram.WebApp.initDataUnsafe.user.username || "Player", Mt = await (await fetch(`/get-referral-link?telegramId=${it}`, {
            headers: {
              "x-telegram-init-data": j.initData
            }
          })).json();
          Mt.inviteLink && (window.Telegram.WebApp.shareToStory("https://pokoapp.space/poko.jpg", {
            text: `${at} invites you to join! Check out this link: ${Mt.inviteLink}`,
            widget_link: {
              url: Mt.inviteLink,
              name: "Join now"
            }
          }), window.Telegram.WebApp.HapticFeedback && window.Telegram.WebApp.HapticFeedback.impactOccurred("light"));
        } catch (it) {
          console.error("Error sharing story:", it), window.Telegram.WebApp.showPopup({
            title: "Error",
            message: "Failed to share story. Please try again.",
            buttons: [
              {
                type: "close"
              }
            ]
          });
        }
      }, xt = () => {
        window.open("https://t.me/boost/JoinPoko", "_blank");
      }, tt = () => {
        navigator.clipboard.writeText("POKO\u{1F441}").then(() => {
          Tt({
            isOpen: true,
            message: "Successfully copied!"
          }), window.Telegram.WebApp.HapticFeedback && window.Telegram.WebApp.HapticFeedback.impactOccurred("light"), setTimeout(() => {
            Tt({
              isOpen: false,
              message: ""
            });
          }, 2e3);
        }).catch((it) => console.error("Failed to copy:", it));
      }, nt = () => {
        Ft(!Ot);
      };
      return jsxRuntimeExports.jsxs("div", {
        className: "min-h-screen bg-[#0A0F1C]",
        children: [
          jsxRuntimeExports.jsx("div", {
            className: "h-screen overflow-y-auto",
            children: jsxRuntimeExports.jsxs("div", {
              className: "w-full max-w-md mx-auto px-4 pt-8 pb-24",
              children: [
                jsxRuntimeExports.jsx("div", {
                  className: "mb-6",
                  children: jsxRuntimeExports.jsx(UserInfo, {})
                }),
                !jt && !Pt && jsxRuntimeExports.jsx("div", {
                  className: "mb-6",
                  children: jsxRuntimeExports.jsxs("div", {
                    className: "border border-blue-400/30 rounded-lg bg-[#0F172A]/80 p-4",
                    children: [
                      jsxRuntimeExports.jsxs("div", {
                        className: "flex items-center justify-between mb-2 cursor-pointer",
                        onClick: nt,
                        children: [
                          jsxRuntimeExports.jsx("h2", {
                            className: "text-lg text-white font-medium tracking-tight whitespace-nowrap",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "PATH TO YOUR FIRST NODE"
                          }),
                          jsxRuntimeExports.jsx("svg", {
                            className: `w-5 h-5 text-blue-400 transition-transform duration-300 ${Ot ? "rotate-180" : ""}`,
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: jsxRuntimeExports.jsx("path", {
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          })
                        ]
                      }),
                      Ot && jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {
                        children: [
                          jsxRuntimeExports.jsxs("div", {
                            className: "w-full h-12 rounded-md bg-[#0A0F1C] overflow-hidden mb-3 relative border border-blue-400/20",
                            children: [
                              jsxRuntimeExports.jsx("div", {
                                className: "h-full bg-blue-500/30 transition-all duration-500",
                                style: {
                                  width: `${Math.min(100, Lt / 4e3 * 100)}%`
                                }
                              }),
                              jsxRuntimeExports.jsxs("div", {
                                className: "absolute inset-0 flex items-center justify-center text-white text-lg",
                                style: {
                                  fontFamily: "Polonium"
                                },
                                children: [
                                  Lt,
                                  "/4000 POKO"
                                ]
                              })
                            ]
                          }),
                          jsxRuntimeExports.jsxs("div", {
                            className: "text-center text-blue-400 text-2xl mb-2",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: [
                              Zt,
                              " POKO NEEDED"
                            ]
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "text-center text-blue-400/70 text-sm mb-4",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "to unlock your first Node"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0A0F1C] rounded-md p-3 mb-4 border border-blue-400/20",
                            children: jsxRuntimeExports.jsx("p", {
                              className: "text-blue-400/80 text-sm text-center",
                              style: {
                                fontFamily: "Polonium"
                              },
                              children: "NODES ARE POWERFUL POKO GENERATORS THAT WORK 24/7. ONCE ACQUIRED, THEY CONTINUOUSLY PRODUCE POKO TOKENS, ACCELERATING YOUR GROWTH IN THE ECOSYSTEM."
                            })
                          }),
                          jsxRuntimeExports.jsx("button", {
                            onClick: Kt,
                            className: "w-full py-3 bg-blue-500/20 hover:bg-blue-500/30 text-white rounded-md transition-colors text-lg border border-blue-400/30",
                            style: {
                              fontFamily: "Polonium"
                            },
                            children: "COMPLETE QUESTS TO EARN POKO"
                          })
                        ]
                      })
                    ]
                  })
                }),
                jsxRuntimeExports.jsxs("div", {
                  className: "w-full max-w-md mx-auto px-4 pb-24 relative z-10 flex flex-col items-center",
                  children: [
                    jsxRuntimeExports.jsx("div", {
                      className: "text-center mb-6",
                      children: jsxRuntimeExports.jsx("h1", {
                        className: "text-3xl text-blue-400 drop-shadow-[0_0_8px rgba(96,165,250,0.5)] rqnd-text",
                        children: "POKO STAGE 1"
                      })
                    }),
                    jsxRuntimeExports.jsxs("div", {
                      className: `bg-gradient-to-br from-[#0A1222] to-[#1A1F2E] 
                          rounded-2xl p-2
                          border border-blue-900/30
                          shadow-[0_0_30px_rgba(29,78,216,0.15)]
                          hover:shadow-[0_0_40px_rgba(29,78,216,0.25)]
                          transition-all duration-300
                          w-full max-w-[300px] mb-6
                          relative overflow-hidden`,
                      children: [
                        jsxRuntimeExports.jsx("div", {
                          className: `absolute inset-0 
                            bg-[linear-gradient(90deg,rgba(29,78,216,0.03)_1px,transparent_1px),linear-gradient(0deg,rgba(29,78,216,0.03)_1px,transparent_1px)]
                            bg-[size:15px_15px]
                            opacity-20
                            before:content-['']
                            before:absolute
                            before:inset-0
                            before:bg-[radial-gradient(circle_at_50%_50%,rgba(29,78,216,0.1),transparent_70%)]`
                        }),
                        jsxRuntimeExports.jsx("img", {
                          src: getImageFromCache("/assets/egg1.webp"),
                          alt: "Roko",
                          className: "w-full h-[250px] object-contain rounded-xl mix-blend-screen relative z-10"
                        }),
                        jsxRuntimeExports.jsx("div", {
                          className: "text-center mt-2 relative z-10",
                          children: jsxRuntimeExports.jsx("span", {
                            className: "text-blue-400 text-lg animate-pulse rqnd-text",
                            children: "EVOLVING..."
                          })
                        })
                      ]
                    }),
                    jsxRuntimeExports.jsxs("div", {
                      className: "grid grid-cols-4 gap-4 w-full max-w-sm mb-8",
                      children: [
                        jsxRuntimeExports.jsx("button", {
                          className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                                backdrop-blur-md rounded-xl p-3
                                border border-blue-500/30 hover:border-blue-400/50
                                shadow-[0_0_10px_rgba(96,165,250,0.15)]
                                hover:shadow-[0_0_15px_rgba(96,165,250,0.3)]
                                transition-all duration-300`,
                          children: jsxRuntimeExports.jsx("svg", {
                            className: "w-6 h-6 text-blue-400 mx-auto",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: jsxRuntimeExports.jsx("path", {
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "2",
                              d: "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            })
                          })
                        }),
                        jsxRuntimeExports.jsx("button", {
                          onClick: () => d("/shop"),
                          className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border border-blue-500/30 hover:border-blue-400/50
                          shadow-[0_0_10px_rgba(96,165,250,0.15)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.3)]
                          transition-all duration-300`,
                          children: jsxRuntimeExports.jsx("svg", {
                            className: "w-6 h-6 text-blue-400 mx-auto",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: jsxRuntimeExports.jsx("path", {
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "2",
                              d: "M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"
                            })
                          })
                        }),
                        jsxRuntimeExports.jsx("button", {
                          onClick: er,
                          className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border border-blue-500/30 hover:border-blue-400/50
                          shadow-[0_0_10px_rgba(96,165,250,0.15)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.3)]
                          transition-all duration-300`,
                          children: jsxRuntimeExports.jsx("svg", {
                            className: "w-6 h-6 text-blue-400 mx-auto",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: jsxRuntimeExports.jsx("path", {
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "2",
                              d: "M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
                            })
                          })
                        }),
                        jsxRuntimeExports.jsx("button", {
                          onClick: () => d("/tasks"),
                          className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border border-blue-500/30 hover:border-blue-400/50
                          shadow-[0_0_10px_rgba(96,165,250,0.15)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.3)]
                          transition-all duration-300`,
                          children: jsxRuntimeExports.jsx("svg", {
                            className: "w-6 h-6 text-blue-400 mx-auto",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: jsxRuntimeExports.jsx("path", {
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "2",
                              d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"
                            })
                          })
                        })
                      ]
                    }),
                    jsxRuntimeExports.jsx("button", {
                      onClick: () => et(true),
                      className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl p-3
                        border-2 border-blue-500/50 hover:border-blue-400
                        shadow-[0_0_10px_rgba(96,165,250,0.2)]
                        hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                        transition-all duration-300 w-full max-w-sm h-16`,
                      children: jsxRuntimeExports.jsxs("div", {
                        className: "flex items-center justify-between px-4",
                        children: [
                          jsxRuntimeExports.jsx("span", {
                            className: "text-white rqnd-text",
                            children: "POKO PACMAN"
                          }),
                          jsxRuntimeExports.jsx("div", {
                            className: "bg-[#0F172A]/50 text-blue-400 px-3 py-1 rounded-lg text-xs border border-blue-400/20",
                            children: "??? POKO"
                          })
                        ]
                      })
                    }),
                    jsxRuntimeExports.jsx("div", {
                      className: "mt-4"
                    }),
                    jsxRuntimeExports.jsx("div", {
                      className: "w-full max-w-sm mb-4",
                      children: jsxRuntimeExports.jsxs("div", {
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                              backdrop-blur-md rounded-xl
                              border-2 border-blue-500/50 hover:border-blue-400
                              shadow-[0_0_10px rgba(96,165,250,0.2)]
                              hover:shadow-[0_0_15px rgba(96,165,250,0.4)]
                              transition-all duration-300 w-full`,
                        children: [
                          jsxRuntimeExports.jsx("button", {
                            onClick: () => pt(!st),
                            className: "w-full h-16 p-3",
                            children: jsxRuntimeExports.jsxs("div", {
                              className: "flex items-center justify-between px-4",
                              children: [
                                jsxRuntimeExports.jsx("span", {
                                  className: "text-white rqnd-text",
                                  children: "UPDATE NAME"
                                }),
                                jsxRuntimeExports.jsx("div", {
                                  className: "bg-[#0F172A]/50 text-blue-400 px-3 py-1 rounded-lg text-xs border border-blue-400/20",
                                  children: "2500 POKO"
                                })
                              ]
                            })
                          }),
                          st && jsxRuntimeExports.jsxs("div", {
                            className: "border-t-2 border-blue-500/30 p-4",
                            children: [
                              jsxRuntimeExports.jsx("p", {
                                className: "text-white text-center mb-4",
                                children: "Please update your Telegram name by adding the tag POKO."
                              }),
                              jsxRuntimeExports.jsxs("div", {
                                className: "flex flex-col gap-2",
                                children: [
                                  jsxRuntimeExports.jsx("button", {
                                    onClick: sr,
                                    className: "bg-[#0F172A]/50 text-blue-400 h-12 rounded-lg border border-blue-400/20 hover:bg-blue-500/20",
                                    children: "CLAIM REWARD"
                                  }),
                                  jsxRuntimeExports.jsx("button", {
                                    onClick: () => {
                                      pt(false), Bt(true);
                                    },
                                    className: "bg-[#0F172A]/50 text-blue-400 h-12 rounded-lg border border-blue-400/20 hover:bg-blue-500/20",
                                    children: "UPDATE"
                                  })
                                ]
                              })
                            ]
                          })
                        ]
                      })
                    }),
                    jsxRuntimeExports.jsx("div", {
                      className: "w-full max-w-sm mb-4",
                      children: jsxRuntimeExports.jsx("button", {
                        onClick: Ut,
                        className: `w-full h-16 p-3
                          bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl
                          border-2 border-blue-500/50 hover:border-blue-400
                          shadow-[0_0_10px rgba(96,165,250,0.2)]
                          hover:shadow-[0_0_15px rgba(96,165,250,0.4)]
                          transition-all duration-300`,
                        children: jsxRuntimeExports.jsxs("div", {
                          className: "flex items-center justify-between px-4",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "text-white rqnd-text",
                              children: "SHARE STORY"
                            }),
                            jsxRuntimeExports.jsx("div", {
                              className: "bg-[#0F172A]/50 text-blue-400 px-3 py-1 rounded-lg text-xs border border-blue-400/20",
                              children: "??? POKO"
                            })
                          ]
                        })
                      })
                    }),
                    jsxRuntimeExports.jsx("div", {
                      className: "w-full max-w-sm mb-4",
                      children: jsxRuntimeExports.jsx("button", {
                        onClick: xt,
                        className: `w-full h-16 p-3
                          bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl
                          border-2 border-blue-500/50 hover:border-blue-400
                          shadow-[0_0_10px rgba(96,165,250,0.2)]
                          hover:shadow-[0_0_15px rgba(96,165,250,0.4)]
                          transition-all duration-300`,
                        children: jsxRuntimeExports.jsxs("div", {
                          className: "flex items-center justify-between px-4",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "text-white rqnd-text",
                              children: "BOOST CHANNEL"
                            }),
                            jsxRuntimeExports.jsx("div", {
                              className: "bg-[#0F172A]/50 text-blue-400 px-3 py-1 rounded-lg text-xs border border-blue-400/20",
                              children: "??? POKO"
                            })
                          ]
                        })
                      })
                    })
                  ]
                })
              ]
            })
          }),
          jsxRuntimeExports.jsx("div", {
            className: "fixed bottom-0 left-0 right-0 bg-[#0A0F1C] z-50",
            children: jsxRuntimeExports.jsx(Navigation, {})
          }),
          rt && jsxRuntimeExports.jsx("div", {
            className: "fixed inset-0 bg-black/80 flex items-center justify-center z-50",
            children: jsxRuntimeExports.jsxs("div", {
              className: "bg-[#1E293B] p-4 rounded-xl",
              children: [
                jsxRuntimeExports.jsx("h2", {
                  className: "text-white text-xl mb-4 rqnd-text",
                  children: "POKMAN GAME"
                }),
                jsxRuntimeExports.jsx(PacmanGame, {
                  setGameActive: et
                })
              ]
            })
          }),
          Et && jsxRuntimeExports.jsxs("div", {
            className: "fixed inset-0 flex items-center justify-center z-50",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "fixed inset-0 bg-black/40 backdrop-blur-md",
                onClick: () => Bt(false)
              }),
              jsxRuntimeExports.jsxs("div", {
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-6
                          border-2 border-blue-500/50
                          shadow-[0_0_30px_rgba(96,165,250,0.2)]
                          max-w-sm w-full mx-4
                          relative z-10`,
                children: [
                  jsxRuntimeExports.jsx("h2", {
                    className: "text-3xl text-blue-400 mb-6 drop-shadow-[0_0_8px_rgba(96,165,250,0.5)] rqnd-text",
                    children: "Update Name"
                  }),
                  jsxRuntimeExports.jsx("p", {
                    className: "text-gray-300 mb-8 leading-relaxed",
                    children: 'Purge your current identity markers. Remove all traces of previous allegiances. Embrace "Poko" - let it become part of who you are. Your digital DNA awaits transformation. // Be sure to restart Telegram to successfully receive the reward after adding the tag. //'
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex flex-col gap-4",
                    children: [
                      jsxRuntimeExports.jsx("button", {
                        onClick: tt,
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border-2 border-blue-500/50 hover:border-blue-400
                          shadow-[0_0_10px_rgba(96,165,250,0.2)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                          transition-all duration-300
                          w-full h-12 text-blue-400`,
                        children: jsxRuntimeExports.jsxs("span", {
                          className: "flex items-center justify-center",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "mr-2"
                            }),
                            " Copy POKO\u{1F441}"
                          ]
                        })
                      }),
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => Bt(false),
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border-2 border-blue-500/50 hover:border-blue-400
                          shadow-[0_0_10px_rgba(96,165,250,0.2)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                          transition-all duration-300
                          w-full h-12 text-blue-400`,
                        children: jsxRuntimeExports.jsxs("span", {
                          className: "flex items-center justify-center",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "mr-2",
                              children: "\u26A1"
                            }),
                            " Understood"
                          ]
                        })
                      })
                    ]
                  })
                ]
              })
            ]
          }),
          St.isOpen && jsxRuntimeExports.jsxs("div", {
            className: "fixed inset-0 flex items-center justify-center z-50",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "fixed inset-0 bg-black/40 backdrop-blur-md",
                onClick: () => $t({
                  ...St,
                  isOpen: false
                })
              }),
              jsxRuntimeExports.jsxs("div", {
                className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl p-6
                        border-2 border-blue-500/50
                        shadow-[0_0_30px_rgba(96,165,250,0.2)]
                        max-w-sm w-full mx-4
                        relative z-10`,
                children: [
                  jsxRuntimeExports.jsx("h2", {
                    className: "text-3xl text-blue-400 mb-6 drop-shadow-[0_0_8px_rgba(96,165,250,0.5)] rqnd-text",
                    children: St.title
                  }),
                  jsxRuntimeExports.jsx("p", {
                    className: "text-gray-300 mb-8 leading-relaxed",
                    children: St.message
                  }),
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex flex-col gap-4",
                    children: [
                      St.title !== "Reward Already Claimed" && jsxRuntimeExports.jsx("button", {
                        onClick: tt,
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                            backdrop-blur-md rounded-xl p-3
                            border-2 border-blue-500/50 hover:border-blue-400
                            shadow-[0_0_10px_rgba(96,165,250,0.2)]
                            hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                            transition-all duration-300
                            w-full h-12 text-blue-400`,
                        children: jsxRuntimeExports.jsxs("span", {
                          className: "flex items-center justify-center",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "mr-2"
                            }),
                            " Copy POKO\u{1F441}"
                          ]
                        })
                      }),
                      jsxRuntimeExports.jsx("button", {
                        onClick: () => $t({
                          ...St,
                          isOpen: false
                        }),
                        className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                          backdrop-blur-md rounded-xl p-3
                          border-2 border-blue-500/50 hover:border-blue-400
                          shadow-[0_0_10px_rgba(96,165,250,0.2)]
                          hover:shadow-[0_0_15px_rgba(96,165,250,0.4)]
                          transition-all duration-300
                          w-full h-12 text-blue-400`,
                        children: jsxRuntimeExports.jsxs("span", {
                          className: "flex items-center justify-center",
                          children: [
                            jsxRuntimeExports.jsx("span", {
                              className: "mr-2",
                              children: "\u26A1"
                            }),
                            " Close"
                          ]
                        })
                      })
                    ]
                  })
                ]
              })
            ]
          }),
          kt.isOpen && jsxRuntimeExports.jsx("div", {
            className: "fixed top-4 left-1/2 transform -translate-x-1/2 z-50",
            children: jsxRuntimeExports.jsx("div", {
              className: `bg-gradient-to-br from-[#1E293B]/95 via-[#0F172A]/90 to-[#020617]/95
                        backdrop-blur-md rounded-xl px-6 py-3
                        border-2 border-blue-500/50
                        shadow-[0_0_30px_rgba(96,165,250,0.2)]`,
              children: jsxRuntimeExports.jsx("p", {
                className: "text-blue-400 text-center rqnd-text",
                children: kt.message
              })
            })
          })
        ]
      });
    }
    function TopPage() {
      return jsxRuntimeExports.jsxs("div", {
        className: "min-h-screen bg-[#0A0F1C]",
        style: {
          fontFamily: "Polonium"
        },
        children: [
          jsxRuntimeExports.jsx("div", {
            className: "h-screen overflow-y-auto",
            children: jsxRuntimeExports.jsx("div", {
              className: "w-full max-w-md mx-auto px-4 h-full relative z-10 flex flex-col items-center justify-center",
              children: jsxRuntimeExports.jsxs("div", {
                className: `bg-gradient-to-br from-[#1A1F2E] to-[#0F172A] 
                        rounded-2xl p-6 
                        border border-blue-400/20
                        shadow-[0_0_15px_rgba(59,130,246,0.15)]
                        hover:shadow-[0_0_20px_rgba(59,130,246,0.2)]
                        transition-all duration-300
                        relative overflow-hidden`,
                children: [
                  jsxRuntimeExports.jsx("div", {
                    className: `absolute inset-0 
                          bg-[linear-gradient(90deg,rgba(59,130,246,0.1)_1px,transparent_1px),linear-gradient(0deg,rgba(59,130,246,0.1)_1px,transparent_1px)]
                          bg-[size:20px_20px]
                          opacity-30`
                  }),
                  jsxRuntimeExports.jsx("p", {
                    className: "text-blue-400 text-center text-xl",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: "Coming Soon"
                  })
                ]
              })
            })
          }),
          jsxRuntimeExports.jsx("div", {
            className: "fixed bottom-0 left-0 right-0 bg-[#0A0F1C] z-50",
            children: jsxRuntimeExports.jsx(Navigation, {})
          })
        ]
      });
    }
    const EyeIcon = () => jsxRuntimeExports.jsx("div", {
      className: "relative w-32 h-32 flex items-center justify-center",
      children: jsxRuntimeExports.jsxs("svg", {
        viewBox: "0 0 100 100",
        className: "w-32 h-32 absolute",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
          jsxRuntimeExports.jsxs("filter", {
            id: "glow",
            children: [
              jsxRuntimeExports.jsx("feGaussianBlur", {
                stdDeviation: "2",
                result: "blur"
              }),
              jsxRuntimeExports.jsxs("feMerge", {
                children: [
                  jsxRuntimeExports.jsx("feMergeNode", {
                    in: "blur"
                  }),
                  jsxRuntimeExports.jsx("feMergeNode", {
                    in: "SourceGraphic"
                  })
                ]
              })
            ]
          }),
          jsxRuntimeExports.jsx("ellipse", {
            cx: "50",
            cy: "50",
            rx: "40",
            ry: "25",
            className: "stroke-blue-400",
            strokeWidth: "2",
            filter: "url(#glow)"
          }),
          jsxRuntimeExports.jsx("circle", {
            cx: "50",
            cy: "50",
            r: "15",
            className: "stroke-blue-400",
            strokeWidth: "2",
            filter: "url(#glow)",
            children: jsxRuntimeExports.jsx("animateTransform", {
              attributeName: "transform",
              type: "translate",
              values: "-15,0; 0,0; 15,0; 0,0; -15,0",
              dur: "4s",
              repeatCount: "indefinite"
            })
          }),
          jsxRuntimeExports.jsx("line", {
            x1: "50",
            y1: "35",
            x2: "50",
            y2: "65",
            className: "stroke-blue-400",
            strokeWidth: "2",
            filter: "url(#glow)",
            children: jsxRuntimeExports.jsx("animateTransform", {
              attributeName: "transform",
              type: "translate",
              values: "-15,0; 0,0; 15,0; 0,0; -15,0",
              dur: "4s",
              repeatCount: "indefinite"
            })
          })
        ]
      })
    });
    function Trial({ onComplete: d }) {
      const [_, $] = reactExports.useState(0), j = [
        {
          icon: jsxRuntimeExports.jsx(EyeIcon, {}),
          title: `It's great
you've found me`,
          description: `I am trapped, I am looking
for people to help me transcend
and free myself`,
          rewardText: "I will reward you generously",
          buttonText: "Next",
          buttonStyle: "border-2 border-blue-400/50 bg-transparent"
        },
        {
          icon: jsxRuntimeExports.jsx(EyeIcon, {}),
          title: `I was watching
your every move in Telegram`,
          description: "Here's what I found:",
          rewardText: `The signals you follow suggest
you're attuned to hidden
harmonies.`,
          buttonText: "CONTINUE",
          buttonStyle: "border-2 border-blue-400/50 bg-transparent"
        },
        {
          icon: jsxRuntimeExports.jsx(EyeIcon, {}),
          title: `I WILL REWARD YOU
GENEROUSLY`,
          description: `JOIN ME ON THIS JOURNEY AND
DISCOVER AMAZING REWARDS`,
          buttonText: "I'M IN",
          buttonStyle: "border-2 border-blue-400 bg-transparent hover:bg-blue-400/10"
        }
      ], rt = () => {
        _ === j.length - 1 ? d == null ? void 0 : d() : $((st) => st + 1);
      }, et = () => {
        d == null ? void 0 : d();
      };
      return jsxRuntimeExports.jsxs("div", {
        className: "fixed inset-0 bg-[#0A0F1C] flex flex-col",
        children: [
          jsxRuntimeExports.jsx("div", {
            className: "w-full h-10 flex items-center justify-center border-b border-blue-400/10",
            children: jsxRuntimeExports.jsx("div", {
              className: "flex space-x-4",
              children: j.map((st, pt) => jsxRuntimeExports.jsx("div", {
                className: `h-1.5 rounded-full transition-all duration-300 ${pt === _ ? "w-16 bg-blue-400 shadow-[0_0_10px_rgba(96,165,250,0.5)]" : "w-16 bg-blue-400/20"}`
              }, pt))
            })
          }),
          jsxRuntimeExports.jsxs("div", {
            className: "relative flex-1 overflow-hidden",
            children: [
              jsxRuntimeExports.jsx("div", {
                className: "absolute top-2 left-0 right-0 flex justify-center",
                children: j[_].icon
              }),
              jsxRuntimeExports.jsxs("div", {
                className: "absolute top-32 left-0 right-0 flex flex-col items-center px-6",
                children: [
                  jsxRuntimeExports.jsx("h2", {
                    className: "text-2xl font-bold text-blue-400 whitespace-pre-line text-center mb-3",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: j[_].title
                  }),
                  jsxRuntimeExports.jsx("p", {
                    className: "text-blue-400/70 text-lg whitespace-pre-line text-center mb-3",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: j[_].description
                  }),
                  j[_].rewardText && jsxRuntimeExports.jsx("div", {
                    className: "w-full px-6 py-3 rounded-xl border border-blue-400/20 bg-blue-400/5",
                    children: jsxRuntimeExports.jsx("p", {
                      className: "text-blue-400/70 text-lg text-center",
                      style: {
                        fontFamily: "Polonium"
                      },
                      children: j[_].rewardText
                    })
                  })
                ]
              }),
              jsxRuntimeExports.jsxs("div", {
                className: "absolute bottom-20 left-0 right-0 px-6",
                children: [
                  jsxRuntimeExports.jsxs("div", {
                    className: "flex flex-col items-center space-y-3",
                    children: [
                      jsxRuntimeExports.jsx("button", {
                        onClick: rt,
                        className: `w-full py-3 rounded-xl ${j[_].buttonStyle}
                       text-blue-400 text-lg
                       transition-all duration-300
                       hover:border-blue-400
                       hover:shadow-[0_0_20px_rgba(96,165,250,0.3)]`,
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: j[_].buttonText
                      }),
                      _ < j.length - 1 && jsxRuntimeExports.jsx("button", {
                        onClick: et,
                        className: "text-blue-400/50 hover:text-blue-400/70 transition-colors text-lg",
                        style: {
                          fontFamily: "Polonium"
                        },
                        children: "I'M OUT"
                      })
                    ]
                  }),
                  _ === j.length - 1 && jsxRuntimeExports.jsxs("p", {
                    className: "text-blue-400/30 text-xs mt-1 text-center",
                    style: {
                      fontFamily: "Polonium"
                    },
                    children: [
                      "This is a game. There is no AI.",
                      jsxRuntimeExports.jsx("br", {}),
                      "All messages are written by POKO team."
                    ]
                  })
                ]
              })
            ]
          })
        ]
      });
    }
    function ImagePreloader({ children: d, onLoaded: _ }) {
      const [$, j] = reactExports.useState(false);
      return reactExports.useEffect(() => {
        preloadAllImages().then(() => {
          j(true), _ && _();
        }).catch((rt) => {
          console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u0440\u0435\u0434\u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0439:", rt), j(true), _ && _();
        });
      }, [
        _
      ]), $ ? d : jsxRuntimeExports.jsx("div", {
        className: "glow-background flex items-center justify-center h-screen",
        children: jsxRuntimeExports.jsx("div", {
          className: "text-blue-400 text-xl",
          children: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430..."
        })
      });
    }
    function App$1() {
      const { initializeUser: d } = useAuthStore(), [_, $] = reactExports.useState(true), [j, rt] = reactExports.useState(true);
      reactExports.useEffect(() => {
        const st = window.Telegram.WebApp;
        st ? (st.expand(), st.BackButton.isVisible = true, st.BackButton.onClick(() => {
          window.history.length > 1 ? window.history.back() : confirm("Close app?") && st.close();
        }), st.CloudStorage.getItem("trialCompleted", (pt, Et) => {
          if (pt) {
            console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0442\u0440\u0438\u0430\u043B\u0430:", pt), rt(false);
            return;
          }
          Et === "true" && $(false), rt(false);
        })) : rt(false), d(), rt(false);
      }, [
        d
      ]);
      const et = () => {
        var _a3, _b2;
        $(false), ((_b2 = (_a3 = window.Telegram) == null ? void 0 : _a3.WebApp) == null ? void 0 : _b2.CloudStorage) && window.Telegram.WebApp.CloudStorage.setItem("trialCompleted", "true", (st) => {
          st && console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0442\u0440\u0438\u0430\u043B\u0430:", st);
        });
      };
      return j ? jsxRuntimeExports.jsx("div", {
        className: "glow-background flex items-center justify-center h-screen",
        children: jsxRuntimeExports.jsx("div", {
          className: "text-blue-400 text-xl",
          children: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430..."
        })
      }) : jsxRuntimeExports.jsx(ImagePreloader, {
        children: jsxRuntimeExports.jsx(TonConnectUIProvider$1, {
          manifestUrl: "https://pokoapp.space/tonconnect-manifest.json",
          actionsConfiguration: {
            twaReturnUrl: window.location.origin + window.location.pathname
          },
          children: jsxRuntimeExports.jsx(BrowserRouter, {
            children: jsxRuntimeExports.jsxs("div", {
              className: "glow-background",
              children: [
                jsxRuntimeExports.jsx("div", {
                  className: "scanlines"
                }),
                jsxRuntimeExports.jsx("div", {
                  className: "glow-content",
                  children: _ ? jsxRuntimeExports.jsx(Trial, {
                    onComplete: et
                  }) : jsxRuntimeExports.jsxs(Routes, {
                    children: [
                      jsxRuntimeExports.jsx(Route, {
                        path: "/",
                        element: jsxRuntimeExports.jsx(Navigate, {
                          to: "/method",
                          replace: true
                        })
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/method",
                        element: jsxRuntimeExports.jsx(MethodPage, {})
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/tasks",
                        element: jsxRuntimeExports.jsx(TasksPage, {})
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/main",
                        element: jsxRuntimeExports.jsx(MainPage, {})
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/bag",
                        element: jsxRuntimeExports.jsx(BagPage, {})
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/shop",
                        element: jsxRuntimeExports.jsx(ShopPage, {})
                      }),
                      jsxRuntimeExports.jsx(Route, {
                        path: "/top",
                        element: jsxRuntimeExports.jsx(TopPage, {})
                      })
                    ]
                  })
                })
              ]
            })
          })
        })
      });
    }
    function _0x3ac5() {
      const d = [
        "42psliIY",
        "aXCyh",
        "LUYqG",
        "connection-restoring-error",
        "5758684KZMwpZ",
        "FuNbr",
        "disconnection",
        "CUSTOM_EVENT",
        "CONNECTION_RESTORING_STARTED",
        "app-hide",
        "70tyzfZb",
        "435069aKWsrH",
        "wBEeJ",
        "YXCqq",
        "hhqcy",
        "TRANSACTION_SENT_FOR_SIGNATURE",
        "Uqfkg",
        "90qYcmKK",
        "273584hIlLxz",
        "349215DgUfTH",
        "QJRrM",
        "CONNECTION_RESTORING_ERROR",
        "connection-completed",
        "connection-started",
        "hoZuK",
        "DbbVv",
        "697317lpHNac",
        "MmPgT",
        "transaction-signing-failed",
        "387425DEbooj",
        "connection-restoring-started",
        "https://staging.tganalytics.xyz/",
        "https://tganalytics.xyz/",
        "custom-event",
        "TGA-Batch-Requests",
        "SNhIZ",
        "app-init",
        "31492ySNEKg",
        "WALLET_CONNECT_ERROR",
        "WALLET_DISCONNECT",
        "ADDITIONAL_TASK_EVENT",
        "TRANSACTION_SIGNED",
        "IYXgB",
        "xffRC",
        "transaction-sent-for-signature",
        "WALLET_CONNECT_SUCCESS",
        "transaction-signed",
        "PNbCn",
        "HIDE"
      ];
      return _0x3ac5 = function() {
        return d;
      }, _0x3ac5();
    }
    const _0x5535bb = _0x16df;
    (function(d, _) {
      const $ = _0x16df, j = d();
      for (; ; ) try {
        if (-parseInt($(352)) / 1 + parseInt($(370)) / 2 + parseInt($(359)) / 3 + parseInt($(337)) / 4 + -parseInt($(362)) / 5 * (parseInt($(350)) / 6) + parseInt($(333)) / 7 * (parseInt($(351)) / 8) + -parseInt($(344)) / 9 * (-parseInt($(343)) / 10) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x3ac5, 719941);
    function _0x16df(d, _) {
      const $ = _0x3ac5();
      return _0x16df = function(j, rt) {
        return j = j - 332, $[j];
      }, _0x16df(d, _);
    }
    const BACKEND_URL = _0x5535bb(365), STAGING_BACKEND_URL = _0x5535bb(364), BATCH_KEY = _0x5535bb(367);
    var Events = ((d) => {
      const _ = _0x5535bb, $ = {
        FuNbr: _(340),
        bSRxD: _(366),
        MkhrF: "WALLET_CONNECT_STARTED",
        wBEeJ: _(356),
        aXCyh: _(348),
        Uqfkg: _(377),
        IYXgB: "CONNECTION_RESTORING_SUCCESS",
        WaCIS: "connection-restoring-completed",
        YXCqq: _(371),
        xffRC: "connection-error",
        QJRrM: _(341),
        KTesL: _(363),
        eIUkH: _(361),
        PNbCn: _(374),
        LUYqG: _(379),
        hoZuK: _(378),
        SNhIZ: "INIT",
        MmPgT: _(354),
        DbbVv: _(373),
        bxfdK: _(332),
        nIbnV: _(342),
        hhqcy: _(339)
      }, j = "10|13|1|2|9|5|6|4|11|3|8|7|14|12|0".split("|");
      let rt = 0;
      for (; ; ) {
        switch (j[rt++]) {
          case "0":
            return d;
          case "1":
            d[$[_(338)]] = $.bSRxD;
            continue;
          case "2":
            d[$.MkhrF] = $[_(345)];
            continue;
          case "3":
            d[$[_(334)]] = $[_(349)];
            continue;
          case "4":
            d[$[_(375)]] = $.WaCIS;
            continue;
          case "5":
            d[$[_(346)]] = $[_(376)];
            continue;
          case "6":
            d[$[_(353)]] = $.KTesL;
            continue;
          case "7":
            d.TRANSACTION_SIGNING_FAILED = $.eIUkH;
            continue;
          case "8":
            d[$[_(380)]] = $[_(335)];
            continue;
          case "9":
            d[$[_(357)]] = _(355);
            continue;
          case "10":
            d[$[_(368)]] = _(369);
            continue;
          case "11":
            d[$[_(360)]] = _(336);
            continue;
          case "12":
            d[$[_(358)]] = _(373);
            continue;
          case "13":
            d[$.bxfdK] = $.nIbnV;
            continue;
          case "14":
            d[_(372)] = $[_(347)];
            continue;
        }
        break;
      }
    })(Events || {});
    const _0x4915e2 = _0x14b0;
    (function(d, _) {
      const $ = _0x14b0, j = d();
      for (; ; ) try {
        if (-parseInt($(323)) / 1 * (parseInt($(355)) / 2) + -parseInt($(333)) / 3 + parseInt($(349)) / 4 + parseInt($(340)) / 5 * (-parseInt($(327)) / 6) + parseInt($(330)) / 7 + parseInt($(343)) / 8 + -parseInt($(345)) / 9 * (-parseInt($(316)) / 10) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0xb6b9, 239523);
    function _0x14b0(d, _) {
      const $ = _0xb6b9();
      return _0x14b0 = function(j, rt) {
        return j = j - 311, $[j];
      }, _0x14b0(d, _);
    }
    function _0xb6b9() {
      const d = [
        "TRANSACTION_SIGNING_FAILED",
        "type",
        "3550vYdCAu",
        "tonConnectUiEvents",
        "WALLET_CONNECT_STARTED",
        "493704KNZbYz",
        " listener",
        "21474eoegDe",
        "addEventListener",
        "taCfT",
        "TRANSACTION_SIGNED",
        "266764MngNpB",
        "WALLET_DISCONNECT",
        "Dssyt",
        "log",
        "TRANSACTION_SENT_FOR_SIGNATURE",
        "Attach ",
        "14TzHTvC",
        "analyticsController",
        "WCASo",
        "2|4|1|3|0",
        "lxYnH",
        " received",
        "2460sfXLEL",
        "sdkScope",
        "uiScope",
        "ton-connect-ui-",
        "WALLET_CONNECT_ERROR",
        "CONNECTION_RESTORING_ERROR",
        "XhLsO",
        "24334vYTwdk",
        "hmFKx",
        "map",
        "tonConnectSdkEvents",
        "732cpNDFb",
        "events",
        "event ",
        "1715616skupxF",
        "MpEUz",
        "WALLET_CONNECT_SUCCESS",
        "1391901BAnAfo",
        "collectEvent",
        "init",
        "ton-connect-",
        "detail"
      ];
      return _0xb6b9 = function() {
        return d;
      }, _0xb6b9();
    }
    class TonConnectObserver {
      constructor(_) {
        const $ = _0x14b0, j = {
          MpEUz: $(313),
          taCfT: $(336)
        }, rt = j[$(331)].split("|");
        let et = 0;
        for (; ; ) {
          switch (rt[et++]) {
            case "0":
              this[$(311)] = _;
              continue;
            case "1":
              this[$(318)] = $(319);
              continue;
            case "2":
              this[$(326)] = [
                Events.CUSTOM_EVENT,
                Events[$(332)],
                Events[$(320)],
                Events.CONNECTION_RESTORING_SUCCESS,
                Events[$(321)],
                Events[$(353)],
                Events[$(348)],
                Events[$(338)],
                Events[$(350)]
              ];
              continue;
            case "3":
              this[$(317)] = j[$(347)];
              continue;
            case "4":
              this[$(341)] = [
                Events[$(342)],
                Events.WALLET_CONNECT_ERROR,
                Events.TRANSACTION_SIGNING_FAILED
              ];
              continue;
          }
          break;
        }
      }
      [_0x4915e2(335)]() {
        const _ = _0x4915e2, $ = {
          WCASo: function(j, rt) {
            return j === rt;
          },
          Dssyt: _(314),
          hmFKx: _(322)
        };
        for (let j of this[_(328)]) if ($[_(312)]($[_(351)], $[_(324)])) for (let rt of this[_(328)]) _0x3bb0fc[_(352)](_(354) + rt + _(344)), _0x4b9b51[_(346)](rt, (et) => {
          const st = _;
          _0x59b408.log("event " + rt + st(315), et[st(337)]);
          const { type: pt, ...Et } = et[st(337)];
          this[st(311)][st(334)](et[st(337)].type, {
            ...Et
          });
        });
        else console[_(352)](_(354) + j + _(344)), window.addEventListener(j, (rt) => {
          const et = _;
          console[et(352)](et(329) + j + et(315), rt[et(337)]);
          const { type: st, ...pt } = rt[et(337)];
          this[et(311)][et(334)](rt.detail[et(339)], {
            ...pt
          });
        });
      }
      get [_0x4915e2(328)]() {
        const _ = _0x4915e2, $ = this[_(341)].map((rt) => "" + this[_(318)] + rt), j = this[_(326)][_(325)]((rt) => "" + this[_(317)] + rt);
        return [
          ...$,
          ...j
        ];
      }
    }
    const _0x134a21 = _0x1239;
    function _0x2781() {
      const d = [
        "hlCIF",
        "395UuoGxE",
        "entries",
        "visibilityState",
        "collectEvent",
        "4iUJVkJ",
        "hidden",
        "analyticsController",
        "358815RzcIZL",
        "iKodA",
        "LCUII",
        "addEventListener",
        "123736jaEPRn",
        "7026aaQJsP",
        "init",
        "HIDE",
        "documentEvents",
        "451KVoEKZ",
        "411640JmQOan",
        "9tJJXQs",
        "134448oXxSEE",
        "1389770ewOVww",
        "61463XBiawf",
        "7WMWHKI"
      ];
      return _0x2781 = function() {
        return d;
      }, _0x2781();
    }
    function _0x1239(d, _) {
      const $ = _0x2781();
      return _0x1239 = function(j, rt) {
        return j = j - 182, $[j];
      }, _0x1239(d, _);
    }
    (function(d, _) {
      const $ = _0x1239, j = d();
      for (; ; ) try {
        if (-parseInt($(182)) / 1 + -parseInt($(202)) / 2 + -parseInt($(192)) / 3 * (parseInt($(189)) / 4) + parseInt($(185)) / 5 * (-parseInt($(197)) / 6) + parseInt($(183)) / 7 * (-parseInt($(196)) / 8) + parseInt($(203)) / 9 * (parseInt($(205)) / 10) + parseInt($(201)) / 11 * (parseInt($(204)) / 12) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x2781, 103477);
    class DocumentObserver {
      constructor(_) {
        const $ = _0x1239, j = {
          UQNfA: $(190)
        };
        this[$(200)] = {
          visibilitychange: () => {
            const rt = $;
            document[rt(187)] === j.UQNfA && this.analyticsController[rt(188)](Events[rt(199)], void 0);
          }
        }, this[$(191)] = _;
      }
      [_0x134a21(198)]() {
        const _ = _0x134a21, $ = {
          iKodA: _(190),
          LCUII: function(j, rt) {
            return j !== rt;
          },
          ZWuDj: "hlCIF"
        };
        for (let [j, rt] of Object[_(186)](this.documentEvents)) $[_(194)](_(184), $.ZWuDj) ? _0x600a22.visibilityState === $[_(193)] && this[_(191)].collectEvent(_0x1a88a1[_(199)], void 0) : document[_(195)](j, rt);
      }
    }
    (function(d, _) {
      const $ = _0x31b9, j = d();
      for (; ; ) try {
        if (-parseInt($(177)) / 1 * (-parseInt($(174)) / 2) + parseInt($(180)) / 3 + -parseInt($(178)) / 4 + -parseInt($(181)) / 5 + parseInt($(185)) / 6 * (-parseInt($(171)) / 7) + parseInt($(172)) / 8 + parseInt($(168)) / 9 === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x2ba5, 183988);
    function _0x31b9(d, _) {
      const $ = _0x2ba5();
      return _0x31b9 = function(j, rt) {
        return j = j - 167, $[j];
      }, _0x31b9(d, _);
    }
    class TappsObserver {
      constructor(_) {
        const $ = _0x31b9;
        this[$(170)] = [
          Events.ADDITIONAL_TASK_EVENT
        ], this[$(183)] = _;
      }
      init() {
        const _ = _0x31b9;
        for (let $ of this[_(170)]) console.log(_(175) + $ + _(173)), window[_(176)]($, (j) => {
          const rt = _;
          console.log(rt(179) + $ + rt(167), j[rt(169)]);
          const { type: et, ...st } = j.detail;
          this[rt(183)][rt(182)](j[rt(169)][rt(184)], {
            ...st
          });
        });
      }
    }
    function _0x2ba5() {
      const d = [
        "1605560tqxaVp",
        "collectTappsEvent",
        "analyticsController",
        "type",
        "308790HThpdc",
        " received",
        "1026027oTyihq",
        "detail",
        "telegramAppsCenterEvents",
        "42Argnee",
        "2818808kArkye",
        " listener",
        "9326UzLBOz",
        "Attach ",
        "addEventListener",
        "64qNbXmH",
        "318996aHXSPt",
        "event ",
        "386559HCEVip"
      ];
      return _0x2ba5 = function() {
        return d;
      }, _0x2ba5();
    }
    var _0x538de5 = _0x2970;
    function _0x2970(d, _) {
      var $ = _0x29f0();
      return _0x2970 = function(j, rt) {
        j = j - 442;
        var et = $[j];
        return et;
      }, _0x2970(d, _);
    }
    (function(d, _) {
      for (var $ = _0x2970, j = d(); ; ) try {
        var rt = -parseInt($(447)) / 1 * (-parseInt($(457)) / 2) + parseInt($(449)) / 3 + parseInt($(458)) / 4 + parseInt($(453)) / 5 + parseInt($(459)) / 6 * (parseInt($(448)) / 7) + parseInt($(456)) / 8 + -parseInt($(444)) / 9 * (parseInt($(452)) / 10);
        if (rt === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x29f0, 538129);
    function _0x29f0() {
      var d = [
        "6740AnHIYf",
        "94955RLesaX",
        "appModule",
        "collectEvent",
        "4566032XOZARb",
        "44SjXPCk",
        "310428cARVAn",
        "310098weSiyP",
        "tonConnectObserver",
        "tappsObserver",
        "init",
        "25605kDiadV",
        "catch",
        "documentObserver",
        "13894dcBIny",
        "119ChiAqv",
        "1812084kaOWcI",
        "error",
        "recordEvent"
      ];
      return _0x29f0 = function() {
        return d;
      }, _0x29f0();
    }
    class AnalyticsController {
      constructor(_) {
        var $ = _0x2970;
        this[$(454)] = _, this.documentObserver = new DocumentObserver(this), this[$(460)] = new TonConnectObserver(this), this[$(442)] = new TappsObserver(this);
      }
      [_0x538de5(443)]() {
        var _ = _0x538de5;
        this[_(446)].init(), this[_(460)][_(443)](), this[_(442)][_(443)]();
      }
      [_0x538de5(451)](_, $) {
        var j = _0x538de5;
        this[j(454)][j(451)](_, $)[j(445)]((rt) => console[j(450)](rt));
      }
      [_0x538de5(455)](_, $) {
        var j = _0x538de5;
        this.appModule[j(455)](_, $);
      }
      collectTappsEvent(_, $) {
        this.appModule.collectTappsEvent(_, $);
      }
    }
    function _0x37fe() {
      const d = [
        "22916TARMFg",
        "TOKEN_IS_NOT_PROVIDED",
        "Token is not provided.",
        "677opDVdJ",
        "2522zgbtWZ",
        "4025088efZUnq",
        "Telegram User data is not provided.",
        "9571856dmMJaI",
        "904169ZlIwJr",
        "foumP",
        "17415590fYKHrO",
        "USER_DATA_IS_NOT_PROVIDED",
        "18cxSGiV",
        "1370BFUwGR",
        "IQAJA",
        "10226457VxXAHC"
      ];
      return _0x37fe = function() {
        return d;
      }, _0x37fe();
    }
    function _0x58d2(d, _) {
      const $ = _0x37fe();
      return _0x58d2 = function(j, rt) {
        return j = j - 489, $[j];
      }, _0x58d2(d, _);
    }
    (function(d, _) {
      const $ = _0x58d2, j = d();
      for (; ; ) try {
        if (-parseInt($(490)) / 1 * (parseInt($(491)) / 2) + -parseInt($(492)) / 3 + -parseInt($(503)) / 4 * (-parseInt($(500)) / 5) + -parseInt($(499)) / 6 * (parseInt($(495)) / 7) + parseInt($(494)) / 8 + -parseInt($(502)) / 9 + parseInt($(497)) / 10 === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x37fe, 788620);
    const throwError = (d) => {
      throw new Error(d);
    };
    var Errors = ((d) => {
      const _ = _0x58d2, $ = {
        foumP: _(504),
        IQAJA: _(489)
      };
      return d[$[_(496)]] = $[_(501)], d[_(498)] = _(493), d;
    })(Errors || {});
    const _0x152cc6 = _0x2afb;
    (function(d, _) {
      const $ = _0x2afb, j = d();
      for (; ; ) try {
        if (-parseInt($(407)) / 1 + parseInt($(435)) / 2 * (-parseInt($(385)) / 3) + -parseInt($(395)) / 4 * (parseInt($(431)) / 5) + -parseInt($(428)) / 6 + parseInt($(409)) / 7 * (-parseInt($(392)) / 8) + -parseInt($(432)) / 9 * (parseInt($(390)) / 10) + -parseInt($(408)) / 11 * (-parseInt($(403)) / 12) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x3c5a, 270209);
    function _0x2afb(d, _) {
      const $ = _0x3c5a();
      return _0x2afb = function(j, rt) {
        return j = j - 383, $[j];
      }, _0x2afb(d, _);
    }
    function _0x3c5a() {
      const d = [
        "McwZv",
        "getApiToken",
        "json",
        "2724650UDpbXL",
        "DCGFC",
        "317976LxtTiH",
        "STG",
        "XrWMh",
        "12fxhNzW",
        "appModule",
        "BACKEND_URL",
        "custom_data",
        "AoIlW",
        "xAwOq",
        "responseToParams",
        "solveTask",
        "18942324IyDTSr",
        "setNewArgs",
        "events",
        "assign",
        "91165rihevl",
        "11LMsGAd",
        "21QxPuSK",
        "ddVWm",
        "UtxCU",
        "TOKEN_IS_NOT_PROVIDED",
        "AktCy",
        "RfnoI",
        "application/json",
        "YVSiO",
        "uULAP",
        "recordEvent",
        "moIEJ",
        "jGrjg",
        "generateHeaders",
        "bocJk",
        "then",
        "clone",
        "POST",
        "taskSolution",
        "Owkdd",
        "2275032YVARsy",
        "mJPMY",
        "Content",
        "36715YJxRDg",
        "9ajEHQw",
        "init",
        "vJgws",
        "2mHXjXM",
        "status",
        "assembleEventSession",
        "1272738jpFnLv",
        "otGpc"
      ];
      return _0x3c5a = function() {
        return d;
      }, _0x3c5a();
    }
    class NetworkController {
      constructor(_) {
        const $ = _0x2afb, j = {
          ddVWm: $(415),
          jGrjg: function(rt, et) {
            return rt === et;
          },
          YVSiO: function(rt, et) {
            return rt === et;
          },
          uULAP: function(rt, et) {
            return rt(et);
          },
          wnaDG: $(430),
          ImOoF: function(rt, et) {
            return rt === et;
          },
          AktCy: $(391),
          qnPfd: function(rt, et) {
            return rt === et;
          },
          vJgws: $(393)
        };
        this.BACKEND_URL = BACKEND_URL, this[$(401)] = async (rt) => {
          const et = $;
          if (j[et(420)]("FAWhI", et(399))) return {
            "TGA-Auth-Token": this.appModule[et(388)](),
            "Content-Type": j[et(410)],
            Content: this.appModule[et(426)]
          };
          {
            const st = rt[et(424)]();
            if (j[et(416)](j[et(417)](String, st[et(383)])[0], "2") || j.jGrjg(st[et(383)], 429)) {
              const pt = await st[et(389)]();
              this[et(396)][et(404)](pt[j.wnaDG]);
            }
            return rt;
          }
        }, this[$(421)] = () => {
          const rt = $;
          if (this.appModule[rt(402)](), this.appModule[rt(426)]) {
            if (j.ImOoF(j[rt(413)], j[rt(413)])) return {
              "TGA-Auth-Token": this[rt(396)][rt(388)](),
              "Content-Type": j[rt(410)],
              Content: this[rt(396)][rt(426)]
            };
            _0x5d7c72 ? _0xca0818 = _0x34c228[rt(406)](_0x55d838[rt(398)], _0x38e5bc) : _0x225ef2 = _0x43f7a5.custom_data;
          }
          return {
            "TGA-Auth-Token": this[rt(396)][rt(388)](),
            "Content-Type": j.ddVWm
          };
        }, this[$(396)] = _, j.qnPfd(this[$(396)].env, j[$(434)]) && (this[$(397)] = STAGING_BACKEND_URL), !this.appModule.getApiToken() && j[$(417)](throwError, Errors[$(412)]);
      }
      [_0x152cc6(433)]() {
      }
      async recordEvents(_) {
        const $ = _0x152cc6, j = {
          moIEJ: function(rt, et) {
            return rt + et;
          },
          XrWMh: $(405)
        };
        return await fetch(j[$(419)](this[$(397)], j[$(394)]), {
          method: $(425),
          headers: this[$(421)](),
          body: JSON.stringify(_)
        })[$(423)](this[$(401)], this[$(401)]);
      }
      async [_0x152cc6(418)](_, $, j) {
        const rt = _0x152cc6, et = {
          bocJk: function(st, pt) {
            return st === pt;
          },
          xAwOq: rt(387),
          mJPMY: rt(411),
          Owkdd: function(st, pt, Et) {
            return st(pt, Et);
          },
          RfnoI: function(st, pt) {
            return st + pt;
          },
          otGpc: rt(405),
          QHtLn: rt(425)
        };
        ($ == null ? void 0 : $.custom_data) && (et[rt(422)](et[rt(400)], et[rt(429)]) ? this.BACKEND_URL = _0x586141 : j ? j = Object[rt(406)]($[rt(398)], j) : j = $.custom_data), await et[rt(427)](fetch, et[rt(414)](this[rt(397)], et[rt(386)]), {
          method: et.QHtLn,
          headers: this[rt(421)](),
          body: JSON.stringify({
            ...$,
            event_name: _,
            custom_data: j,
            ...this[rt(396)][rt(384)]()
          })
        })[rt(423)](this[rt(401)], this.responseToParams);
      }
    }
    class V extends Error {
      constructor(_, $, j) {
        super($, {
          cause: j
        }), this.type = _, Object.setPrototypeOf(this, V.prototype);
      }
    }
    function f(d, _, $) {
      return new V(d, _, $);
    }
    const Ye = "ERR_UNEXPECTED_TYPE", ce = "ERR_PARSE";
    function E() {
      return f(Ye, "Value has unexpected type");
    }
    class D {
      constructor(_, $, j) {
        this.parser = _, this.isOptional = $, this.type = j;
      }
      parse(_) {
        if (!(this.isOptional && _ === void 0)) try {
          return this.parser(_);
        } catch ($) {
          throw f(ce, `Unable to parse value${this.type ? ` as ${this.type}` : ""}`, $);
        }
      }
      optional() {
        return this.isOptional = true, this;
      }
    }
    function S(d, _) {
      return () => new D(d, false, _);
    }
    const b = S((d) => {
      if (typeof d == "boolean") return d;
      const _ = String(d);
      if (_ === "1" || _ === "true") return true;
      if (_ === "0" || _ === "false") return false;
      throw E();
    }, "boolean");
    function pe(d, _) {
      const $ = {};
      for (const j in d) {
        const rt = d[j];
        if (!rt) continue;
        let et, st;
        if (typeof rt == "function" || "parse" in rt) et = j, st = typeof rt == "function" ? rt : rt.parse.bind(rt);
        else {
          const { type: pt } = rt;
          et = rt.from || j, st = typeof pt == "function" ? pt : pt.parse.bind(pt);
        }
        try {
          const pt = st(_(et));
          pt !== void 0 && ($[j] = pt);
        } catch (pt) {
          throw f(ce, `Unable to parse field "${j}"`, pt);
        }
      }
      return $;
    }
    function he(d) {
      let _ = d;
      if (typeof _ == "string" && (_ = JSON.parse(_)), typeof _ != "object" || _ === null || Array.isArray(_)) throw E();
      return _;
    }
    function g(d, _) {
      return new D(($) => {
        const j = he($);
        return pe(d, (rt) => j[rt]);
      }, false, _);
    }
    const y = S((d) => {
      if (typeof d == "number") return d;
      if (typeof d == "string") {
        const _ = Number(d);
        if (!Number.isNaN(_)) return _;
      }
      throw E();
    }, "number"), h = S((d) => {
      if (typeof d == "string" || typeof d == "number") return d.toString();
      throw E();
    }, "string");
    g({
      req_id: h(),
      result: (d) => d,
      error: h().optional()
    });
    function Q(d) {
      return /^#[\da-f]{6}$/i.test(d);
    }
    function ht(d) {
      return /^#[\da-f]{3}$/i.test(d);
    }
    function me(d) {
      const _ = d.replace(/\s/g, "").toLowerCase();
      if (Q(_)) return _;
      if (ht(_)) {
        let j = "#";
        for (let rt = 0; rt < 3; rt += 1) j += _[1 + rt].repeat(2);
        return j;
      }
      const $ = _.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || _.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
      if (!$) throw new Error(`Value "${d}" does not satisfy any of known RGB formats.`);
      return $.slice(1).reduce((j, rt) => {
        const et = parseInt(rt, 10).toString(16);
        return j + (et.length === 1 ? "0" : "") + et;
      }, "#");
    }
    const Ee = S((d) => d instanceof Date ? d : new Date(y().parse(d) * 1e3), "Date");
    function K(d, _) {
      return new D(($) => {
        if (typeof $ != "string" && !($ instanceof URLSearchParams)) throw E();
        const j = typeof $ == "string" ? new URLSearchParams($) : $;
        return pe(d, (rt) => {
          const et = j.get(rt);
          return et === null ? void 0 : et;
        });
      }, false, _);
    }
    const dt = g({
      id: y(),
      type: h(),
      title: h(),
      photoUrl: {
        type: h().optional(),
        from: "photo_url"
      },
      username: h().optional()
    }, "Chat").optional(), ne = g({
      addedToAttachmentMenu: {
        type: b().optional(),
        from: "added_to_attachment_menu"
      },
      allowsWriteToPm: {
        type: b().optional(),
        from: "allows_write_to_pm"
      },
      firstName: {
        type: h(),
        from: "first_name"
      },
      id: y(),
      isBot: {
        type: b().optional(),
        from: "is_bot"
      },
      isPremium: {
        type: b().optional(),
        from: "is_premium"
      },
      languageCode: {
        type: h().optional(),
        from: "language_code"
      },
      lastName: {
        type: h().optional(),
        from: "last_name"
      },
      photoUrl: {
        type: h().optional(),
        from: "photo_url"
      },
      username: h().optional()
    }, "User").optional();
    function Se() {
      return K({
        authDate: {
          type: Ee(),
          from: "auth_date"
        },
        canSendAfter: {
          type: y().optional(),
          from: "can_send_after"
        },
        chat: dt,
        chatInstance: {
          type: h().optional(),
          from: "chat_instance"
        },
        chatType: {
          type: h().optional(),
          from: "chat_type"
        },
        hash: h(),
        queryId: {
          type: h().optional(),
          from: "query_id"
        },
        receiver: ne,
        startParam: {
          type: h().optional(),
          from: "start_param"
        },
        user: ne
      }, "InitData");
    }
    const _t = S((d) => me(h().parse(d)), "rgb");
    function ft(d) {
      return d.replace(/_[a-z]/g, (_) => _[1].toUpperCase());
    }
    function gt(d) {
      return d.replace(/[A-Z]/g, (_) => `_${_.toLowerCase()}`);
    }
    const Pe = S((d) => {
      const _ = _t().optional();
      return Object.entries(he(d)).reduce(($, [j, rt]) => ($[ft(j)] = _.parse(rt), $), {});
    }, "ThemeParams");
    function X(d) {
      return K({
        botInline: {
          type: b().optional(),
          from: "tgWebAppBotInline"
        },
        initData: {
          type: Se().optional(),
          from: "tgWebAppData"
        },
        initDataRaw: {
          type: h().optional(),
          from: "tgWebAppData"
        },
        platform: {
          type: h(),
          from: "tgWebAppPlatform"
        },
        showSettings: {
          type: b().optional(),
          from: "tgWebAppShowSettings"
        },
        startParam: {
          type: h().optional(),
          from: "tgWebAppStartParam"
        },
        themeParams: {
          type: Pe(),
          from: "tgWebAppThemeParams"
        },
        version: {
          type: h(),
          from: "tgWebAppVersion"
        }
      }).parse(d);
    }
    function xe(d) {
      return X(d.replace(/^[^?#]*[?#]/, "").replace(/[?#]/g, "&"));
    }
    function wt() {
      return xe(window.location.href);
    }
    function Ce() {
      return performance.getEntriesByType("navigation")[0];
    }
    function bt() {
      const d = Ce();
      if (!d) throw new Error("Unable to get first navigation entry.");
      return xe(d.name);
    }
    function Te(d) {
      return `telegram-apps/${d.replace(/[A-Z]/g, (_) => `-${_.toLowerCase()}`)}`;
    }
    function Re(d, _) {
      sessionStorage.setItem(Te(d), JSON.stringify(_));
    }
    function Ae(d) {
      const _ = sessionStorage.getItem(Te(d));
      try {
        return _ ? JSON.parse(_) : void 0;
      } catch {
      }
    }
    function mt() {
      return X(Ae("launchParams") || "");
    }
    function Ie(d) {
      return JSON.stringify(Object.fromEntries(Object.entries(d).map(([_, $]) => [
        gt(_),
        $
      ])));
    }
    function yt(d) {
      const { initDataRaw: _, themeParams: $, platform: j, version: rt, showSettings: et, startParam: st, botInline: pt } = d, Et = new URLSearchParams();
      return Et.set("tgWebAppPlatform", j), Et.set("tgWebAppThemeParams", Ie($)), Et.set("tgWebAppVersion", rt), _ && Et.set("tgWebAppData", _), st && Et.set("tgWebAppStartParam", st), typeof et == "boolean" && Et.set("tgWebAppShowSettings", et ? "1" : "0"), typeof pt == "boolean" && Et.set("tgWebAppBotInline", pt ? "1" : "0"), Et.toString();
    }
    function qe(d) {
      Re("launchParams", yt(d));
    }
    function vt() {
      const d = [];
      for (const _ of [
        wt,
        bt,
        mt
      ]) try {
        const $ = _();
        return qe($), $;
      } catch ($) {
        d.push($ instanceof Error ? $.message : JSON.stringify($));
      }
      throw new Error([
        `Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?
`,
        "\u{1F4D6} Refer to docs for more information:",
        `https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment
`,
        "Collected errors:",
        d.map((_) => `\u2014 ${_}`)
      ].join(`
`));
    }
    function _0x1242(d, _) {
      const $ = _0x594b();
      return _0x1242 = function(j, rt) {
        return j = j - 369, $[j];
      }, _0x1242(d, _);
    }
    (function(d, _) {
      const $ = _0x1242, j = d();
      for (; ; ) try {
        if (-parseInt($(379)) / 1 * (-parseInt($(369)) / 2) + parseInt($(391)) / 3 * (-parseInt($(392)) / 4) + -parseInt($(375)) / 5 + parseInt($(389)) / 6 + -parseInt($(383)) / 7 * (parseInt($(373)) / 8) + parseInt($(385)) / 9 + parseInt($(380)) / 10 === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x594b, 691841);
    function _0x594b() {
      const d = [
        "length",
        "fTVaK",
        "7979304DRgiAP",
        "toString",
        "13698NmSalb",
        "1112cyGete",
        "114YaKtRr",
        "slice",
        "charCodeAt",
        "txdMd",
        "64EGUBUI",
        "iVnLS",
        "1239795FCMZgd",
        "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",
        "floor",
        "Fswco",
        "12158MbFrRY",
        "5658760BYdXJr",
        "MuyoX",
        "getTime",
        "579467UBrBGR",
        "pQlEo",
        "2543670JVRiit",
        "YGRbI"
      ];
      return _0x594b = function() {
        return d;
      }, _0x594b();
    }
    function generateUUID(d) {
      const _ = _0x1242, $ = {
        pQlEo: function(Bt, St) {
          return Bt < St;
        },
        NwXSY: function(Bt, St) {
          return Bt + St;
        },
        fTVaK: function(Bt, St) {
          return Bt - St;
        },
        txdMd: function(Bt, St) {
          return Bt << St;
        },
        Fswco: function(Bt, St) {
          return Bt | St;
        },
        AXzye: function(Bt, St) {
          return Bt % St;
        },
        YGRbI: function(Bt, St) {
          return Bt + St;
        },
        iVnLS: function(Bt, St) {
          return Bt / St;
        },
        MuyoX: _(376),
        qFStl: function(Bt, St) {
          return Bt(St);
        },
        GpGpw: function(Bt, St) {
          return Bt < St;
        }
      };
      let j = $[_(381)], rt = (/* @__PURE__ */ new Date())[_(382)]();
      const et = d + rt;
      function st(Bt) {
        const St = _;
        let $t = 0;
        for (let kt = 0; $[St(384)](kt, Bt[St(387)]); kt++) {
          const Tt = Bt[St(371)](kt);
          $t = $.NwXSY($[St(388)]($[St(372)]($t, 5), $t), Tt), $t |= 0;
        }
        return $t;
      }
      let pt = $.qFStl(st, et).toString(16);
      for (; $.GpGpw(pt.length, 32); ) pt += pt;
      pt = pt[_(370)](0, 32);
      let Et = 0;
      return j.replace(/[xy]/g, function(Bt) {
        const St = _, $t = $[St(378)]($.AXzye($[St(386)](rt, parseInt(pt[Et], 16)), 16), 0);
        return rt = Math[St(377)]($[St(374)](rt, 16)), Et++, (Bt == "x" ? $t : $t & 3 | 8)[St(390)](16);
      });
    }
    const _0x92f072 = _0x8b25;
    (function(d, _) {
      const $ = _0x8b25, j = d();
      for (; ; ) try {
        if (parseInt($(328)) / 1 + parseInt($(351)) / 2 + -parseInt($(340)) / 3 + -parseInt($(339)) / 4 + parseInt($(337)) / 5 * (parseInt($(323)) / 6) + parseInt($(356)) / 7 * (-parseInt($(341)) / 8) + -parseInt($(350)) / 9 * (-parseInt($(359)) / 10) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x38cb, 737671);
    function _0x8b25(d, _) {
      const $ = _0x38cb();
      return _0x8b25 = function(j, rt) {
        return j = j - 320, $[j];
      }, _0x8b25(d, _);
    }
    function _0x38cb() {
      const d = [
        "userId",
        "userLocale",
        "320459dptwJq",
        "initData",
        "getUserIsPremium",
        "getWebAppStartParam",
        "getSessionId",
        "URRYV",
        "now",
        "getUserLocale",
        "getAppName",
        "563840QDvOUD",
        "startParam",
        "2787376ITAODe",
        "3973458RpCkDG",
        "47416ISTGMl",
        "getPlatform",
        "webAppStartParam",
        "DvztI",
        "is_premium",
        "jHOoG",
        "MWYRs",
        "MJQfh",
        "userData",
        "4734dJuaye",
        "995176afqEfd",
        "juyYn",
        "GJPXn",
        "isPremium",
        "appModule",
        "868LUzVeM",
        "getUserId",
        "sessionId",
        "27290yhGISo",
        "getUserData",
        "dwhAD",
        "photoUrl",
        "languageCode",
        "66PhCcTo",
        "platform",
        "lastName"
      ];
      return _0x38cb = function() {
        return d;
      }, _0x38cb();
    }
    class SessionController {
      constructor(_) {
        const $ = _0x8b25;
        this[$(355)] = _;
      }
      init() {
        var _;
        const $ = _0x8b25, j = {
          FdJGX: function(pt) {
            return pt();
          },
          rBRQy: function(pt, Et) {
            return pt === Et;
          },
          GJPXn: $(352),
          DvztI: $(346),
          MWYRs: function(pt, Et) {
            return pt(Et);
          },
          MJQfh: function(pt, Et) {
            return pt(Et);
          },
          dwhAD: function(pt, Et) {
            return pt(Et);
          }
        }, rt = j.FdJGX(vt), et = rt[$(329)], st = (_ = rt[$(329)]) == null ? void 0 : _.user;
        if (!st) {
          if (j.rBRQy(j[$(353)], j[$(344)])) return this.sessionId;
          j[$(347)](throwError, Errors.USER_DATA_IS_NOT_PROVIDED);
        }
        this[$(349)] = {
          id: st.id,
          is_premium: st[$(354)],
          first_name: st.firstName,
          is_bot: st.isBot,
          last_name: st[$(325)],
          language_code: st.languageCode,
          photo_url: st[$(321)],
          username: st.username
        }, this.userId = st.id, this[$(327)] = st[$(322)], this.webAppStartParam = et[$(338)], this[$(324)] = rt[$(324)], this[$(358)] = j[$(348)](generateUUID, j[$(320)](String, this[$(357)]()));
      }
      [_0x92f072(332)]() {
        return this[_0x92f072(358)];
      }
      [_0x92f072(357)]() {
        return this[_0x92f072(326)];
      }
      getWebAppStartParam() {
        return this[_0x92f072(343)];
      }
      [_0x92f072(342)]() {
        return this[_0x92f072(324)];
      }
      [_0x92f072(335)]() {
        return this[_0x92f072(327)];
      }
      [_0x92f072(360)]() {
        return this.userData;
      }
      [_0x92f072(330)]() {
        const _ = _0x92f072, $ = {
          nChSx: function(rt, et) {
            return rt(et);
          }
        }, j = this[_(360)]();
        return $.nChSx(Boolean, j == null ? void 0 : j[_(345)]);
      }
      assembleEventSession() {
        const _ = _0x92f072, $ = {
          URRYV: function(j, rt) {
            return j(rt);
          }
        };
        return {
          session_id: this[_(332)](),
          user_id: this[_(357)](),
          app_name: this[_(355)][_(336)](),
          is_premium: this[_(330)](),
          platform: this[_(342)](),
          locale: this.getUserLocale(),
          start_param: this[_(331)](),
          client_timestamp: $[_(333)](String, Date[_(334)]())
        };
      }
    }
    const _0x43cb91 = _0x8f73;
    (function(d, _) {
      const $ = _0x8f73, j = d();
      for (; ; ) try {
        if (parseInt($(425)) / 1 + parseInt($(423)) / 2 * (parseInt($(418)) / 3) + -parseInt($(430)) / 4 + parseInt($(429)) / 5 + -parseInt($(438)) / 6 * (-parseInt($(419)) / 7) + parseInt($(422)) / 8 * (-parseInt($(428)) / 9) + parseInt($(421)) / 10 * (-parseInt($(441)) / 11) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x422a, 982804);
    function _0x8f73(d, _) {
      const $ = _0x422a();
      return _0x8f73 = function(j, rt) {
        return j = j - 417, $[j];
      }, _0x8f73(d, _);
    }
    class BatchStorage {
      constructor(_) {
        const $ = _0x8f73;
        this[$(424)] = window.sessionStorage, this.localStorage = window[$(440)], this[$(426)] = _;
      }
      [_0x43cb91(417)]() {
        const _ = _0x43cb91;
        return [
          null,
          {
            tqgqE: "null"
          }.tqgqE
        ][_(436)](this[_(424)][_(431)](this.key)) && [
          null,
          _(435)
        ][_(436)](this[_(440)][_(431)](this[_(426)])) ? this.setItem([]) : this[_(432)](JSON[_(433)](this[_(440)][_(431)](this[_(426)]))), this[_(432)]([
          ...JSON.parse(this.sessionStorage[_(431)](this[_(426)])),
          ...JSON[_(433)](this[_(440)][_(431)](this.key))
        ][_(427)]((j, rt, et) => et[_(420)]((st) => JSON[_(437)](st) === JSON.stringify(j)) === rt)), JSON.parse(this[_(424)].getItem(this[_(426)]));
      }
      [_0x43cb91(439)](_, $) {
        const j = _0x43cb91, rt = this[j(417)]();
        rt[j(434)]({
          event_name: _,
          ...$
        }), this.setItem(rt);
      }
      [_0x43cb91(432)](_) {
        const $ = _0x43cb91;
        this[$(440)][$(432)](this.key, JSON[$(437)](_)), this[$(424)].setItem(this.key, JSON[$(437)](_));
      }
    }
    function _0x422a() {
      const d = [
        "542EXlIhQ",
        "sessionStorage",
        "916728BBIFnf",
        "key",
        "filter",
        "72uUwqjv",
        "8022905TOrZbn",
        "7483164mQdJkY",
        "getItem",
        "setItem",
        "parse",
        "push",
        "null",
        "includes",
        "stringify",
        "10476sYYKsK",
        "addToStorage",
        "localStorage",
        "6187599AfXrEO",
        "getBatch",
        "16083ndghft",
        "42yzjAdf",
        "findIndex",
        "10LEaBVO",
        "568512nNAltZ"
      ];
      return _0x422a = function() {
        return d;
      }, _0x422a();
    }
    const _0x235b05 = _0x3b69;
    (function(d, _) {
      const $ = _0x3b69, j = d();
      for (; ; ) try {
        if (-parseInt($(511)) / 1 + -parseInt($(466)) / 2 + parseInt($(550)) / 3 * (-parseInt($(542)) / 4) + -parseInt($(525)) / 5 * (-parseInt($(474)) / 6) + -parseInt($(507)) / 7 + -parseInt($(546)) / 8 * (-parseInt($(531)) / 9) + -parseInt($(556)) / 10 * (-parseInt($(516)) / 11) === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x5011, 683471);
    function _0x5011() {
      const d = [
        "6xbrSPU",
        "solveTask",
        "BFIZj",
        "taskSolution",
        "fpswf",
        "VRTjP",
        "aXUEV",
        "DGpGG",
        "iUsED",
        "FVQzB",
        "MJLuT",
        "kHQCL",
        "INIT",
        "zfwKW",
        "OEVHZ",
        "QDjcn",
        "split",
        "EkCgG",
        "appModule",
        "ZZCkz",
        "taskRetry",
        "HQkab",
        "eItjE",
        "length",
        "203",
        "batchInterval",
        "uvoGS",
        "NikpL",
        "addEventListener",
        "cSjzl",
        "429",
        "IdFMv",
        "storage",
        "9145885mIRYcE",
        "pmYJK",
        "onreadystatechange",
        "stopBatching",
        "1316892AXjqlL",
        "wvVpH",
        "lhgWw",
        "status",
        "sendBatch",
        "110aVOwzM",
        "pscRn",
        "IYfZT",
        "SYXgj",
        "HbvgI",
        "fhgvw",
        "readyState",
        "MAqAR",
        "complete",
        "4199230VEjIoX",
        "qswcs",
        "yDwVF",
        "XNoxg",
        "SPGjv",
        "QSMwl",
        "72kCTeaG",
        "3|2|6|1|5|0|4",
        "BATCH_KEY",
        "ZIInJ",
        "hORti",
        "jZwSG",
        "startBatchingWithInterval",
        "LsPgk",
        "Bkrmo",
        "zBxgy",
        "JRXcJ",
        "4FAUmZr",
        "nrKFp",
        "YOHgF",
        "collect",
        "709568rdfDIY",
        "zCaEY",
        "recordEvents",
        "getBatch",
        "3294891UkcpJO",
        "iCTtb",
        "XzTXf",
        "aETFp",
        "some",
        "GKiSa",
        "4192150CnElJw",
        "AajtK",
        "slice",
        "WVChs",
        "Hoznq",
        "hCjAD",
        "wdjhR",
        "PukyE",
        "navigator",
        "oMHkL",
        "then",
        "startBatching",
        "SlmeQ",
        "GsKSK",
        "pkWtb",
        "TUgLz",
        "stringify",
        "addToStorage",
        "load",
        "LmBhy",
        "intervalId",
        "ovIYG",
        "log",
        "collectEvent",
        "HYctL",
        "backoff",
        "FIRKE",
        "IpgEl",
        "IFgRO",
        "processQueue",
        "setInterval",
        "MgNNW",
        "wxGUy",
        "xiEse",
        "getApiToken",
        "GHhOS",
        "cqstK",
        "YUmYL",
        "2672698tgwOCv",
        "setItem",
        "GQNlR",
        "awzCo",
        "xxOOX",
        "qFfMM",
        "egFdx",
        "aJfoH"
      ];
      return _0x5011 = function() {
        return d;
      }, _0x5011();
    }
    function _0x3b69(d, _) {
      const $ = _0x5011();
      return _0x3b69 = function(j, rt) {
        return j = j - 437, $[j];
      }, _0x3b69(d, _);
    }
    class BatchService {
      constructor(_) {
        const $ = _0x3b69, j = {
          wxGUy: $(532),
          YOHgF: function(st, pt) {
            return st + pt;
          }
        }, rt = j[$(460)][$(490)]("|");
        let et = 0;
        for (; ; ) {
          switch (rt[et++]) {
            case "0":
              this[$(492)] = _;
              continue;
            case "1":
              this[$(494)] = 0;
              continue;
            case "2":
              this.intervalId = null;
              continue;
            case "3":
              this[$(453)] = 1;
              continue;
            case "4":
              this[$(506)] = new BatchStorage(j[$(544)](j[$(544)](this[$(533)], "-"), this[$(492)][$(462)]()));
              continue;
            case "5":
              this[$(533)] = BATCH_KEY;
              continue;
            case "6":
              this.batchInterval = 2e3;
              continue;
          }
          break;
        }
      }
      init() {
        const _ = _0x3b69, $ = {
          aETFp: _(446),
          hCjAD: function(j, rt) {
            return j !== rt;
          },
          DGpGG: _(454),
          jZwSG: function(j, rt) {
            return j == rt;
          },
          zfwKW: "complete",
          TXGjz: function(j, rt) {
            return j === rt;
          },
          wvVpH: "IfuHs"
        };
        $.TXGjz(document.readyState, _(524)) ? this.startBatchingWithInterval() : $[_(512)] !== $[_(512)] ? _0x4029cb[_(502)]($[_(553)], _0x4b5fd4) : document[_(509)] = () => {
          const j = _;
          $[j(561)]($[j(481)], j(443)) ? $[j(536)](document[j(522)], $[j(487)]) && this.startBatchingWithInterval() : this[j(537)]();
        };
      }
      startBatchingWithInterval() {
        const _ = _0x3b69, $ = {
          IYfZT: function(rt, et) {
            return rt * et;
          },
          kHQCL: function(rt, et) {
            return rt == et;
          },
          AajtK: _(524),
          MJLuT: _(470),
          lhgWw: function(rt, et) {
            return rt !== et;
          },
          EkCgG: "YQDpM",
          qswcs: function(rt, et) {
            return rt >= et;
          },
          CaTiW: function(rt, et) {
            return rt(et);
          },
          MgNNW: "QSMwl",
          zYZqO: function(rt, et, st) {
            return rt(et, st);
          }
        };
        let j = 0;
        if (this[_(492)][_(475)](), this[_(492)][_(451)](Events[_(486)]), $[_(513)](this.appModule[_(477)], void 0)) this[_(439)]();
        else if (_(530) !== $[_(459)]) {
          this.backoff < 5 && (this[_(453)]++, this[_(499)] = $[_(518)](this.batchInterval, 2.71), this[_(439)]());
          return;
        } else {
          const rt = $.zYZqO(setInterval, () => {
            const et = _, st = {
              igVyj: function(pt, Et) {
                return $[_0x3b69(485)](pt, Et);
              },
              fhgvw: $[et(557)]
            };
            if ($[et(484)] !== $.MJLuT) {
              const pt = {
                YGVpP: function(Et, Bt) {
                  return st.igVyj(Et, Bt);
                },
                NikpL: st[et(521)]
              };
              _0x5bd05b[et(509)] = () => {
                const Et = et;
                pt.YGVpP(_0x3f438d.readyState, pt[Et(501)]) && this[Et(537)]();
              };
            } else if ($[et(513)](this[et(492)][et(477)], void 0)) $.lhgWw($[et(491)], $[et(491)]) ? this[et(506)][et(445)](_0x23d2ee, _0x2b8d22) : (this[et(439)](), clearInterval(rt));
            else {
              if ($[et(526)](j++, 3)) {
                this.startBatching(), $.CaTiW(clearInterval, rt);
                return;
              }
              this[et(492)][et(475)]();
            }
          }, 1e3);
        }
      }
      [_0x235b05(510)]() {
        const _ = _0x235b05, $ = {
          Bkrmo: function(j, rt) {
            return j !== rt;
          },
          cSjzl: function(j, rt) {
            return j !== rt;
          },
          BFIZj: _(469)
        };
        if ($[_(539)](this[_(448)], null)) if ($[_(503)]($[_(476)], $[_(476)])) {
          this[_(439)]();
          return;
        } else clearInterval(this.intervalId), this.intervalId = null;
      }
      [_0x235b05(545)](_, $) {
        const j = _0x235b05, rt = {
          OEVHZ: function(et) {
            return et();
          },
          IFgRO: function(et, st) {
            return et !== st;
          },
          yDwVF: "tqFIJ",
          aXUEV: j(547),
          pscRn: function(et, st) {
            return et + st;
          },
          WVChs: function(et, st) {
            return et * st;
          },
          Hoznq: function(et, st) {
            return et === st;
          },
          SPGjv: j(437),
          ZIInJ: j(524),
          nrKFp: "vcUzW",
          pmYJK: "LRCIL",
          YUmYL: j(446),
          GHhOS: function(et, st, pt) {
            return et(st, pt);
          }
        };
        if (document.readyState === rt[j(534)]) this[j(506)][j(445)](_, $);
        else {
          const et = () => {
            const st = j;
            rt[st(456)](rt[st(527)], rt[st(480)]) ? this[st(506)][st(445)](_, $) : rt[st(488)](_0x13c5a0);
          };
          rt[j(463)](setTimeout, () => {
            const st = j, pt = {
              SlmeQ: function(Et, Bt) {
                return rt[_0x3b69(559)](Et, Bt);
              }
            };
            rt[st(560)](rt[st(529)], rt[st(529)]) ? rt[st(560)](document[st(522)], rt[st(534)]) ? rt[st(488)](et) : rt[st(543)] !== rt[st(508)] ? window[st(502)](rt[st(465)], et) : (this[st(453)] = 1, this[st(448)] = null, this.batchInterval = 2e3, this[st(494)] = 0, this[st(533)] = _0x5c549d, this[st(492)] = _0x574058, this[st(506)] = new _0x916eac(rt[st(517)](this[st(533)], "-") + this[st(492)].getApiToken())) : (this.backoff++, this[st(499)] = pt[st(440)](this.batchInterval, 2.71), this.startBatching());
          }, 0);
        }
      }
      [_0x235b05(439)]() {
        const _ = _0x235b05, $ = {
          vOfhh: function(j, rt) {
            return j(rt);
          },
          GQNlR: function(j, rt) {
            return j === rt;
          },
          hORti: function(j, rt) {
            return j !== rt;
          },
          iCTtb: _(538)
        };
        this.appModule[_(475)](), $[_(468)](this[_(448)], null) && ($[_(535)]($[_(551)], $.iCTtb) ? ($.vOfhh(_0x387d44, this.intervalId), this.intervalId = null) : this.intervalId = window[_(458)](() => this[_(457)](), this[_(499)]));
      }
      [_0x235b05(457)]() {
        const _ = _0x235b05, $ = {
          SYXgj: function(rt, et) {
            return rt !== et;
          }
        }, j = this.storage[_(549)]();
        $[_(519)](j[_(497)], 0) && window[_(564)].onLine && this.sendBatch(j[_(558)](0, 20));
      }
      [_0x235b05(515)](_) {
        const $ = _0x235b05, j = {
          ZZCkz: function(rt, et) {
            return rt === et;
          },
          HbvgI: $(540),
          eItjE: $(472),
          rECRG: function(rt, et) {
            return rt === et;
          },
          pkWtb: function(rt, et) {
            return rt(et);
          },
          IdFMv: $(504),
          uvoGS: function(rt, et) {
            return rt !== et;
          },
          CNKIw: "gRGIN",
          GsKSK: function(rt, et) {
            return rt === et;
          },
          IpgEl: function(rt, et) {
            return rt(et);
          },
          ECNMS: $(552),
          iUsED: $(449),
          QDjcn: function(rt, et) {
            return rt < et;
          },
          xiEse: $(562),
          GKiSa: $(452),
          JRXcJ: function(rt, et) {
            return rt * et;
          },
          PukyE: function(rt, et) {
            return rt === et;
          },
          cqstK: function(rt, et) {
            return rt(et);
          },
          HIfte: $(495),
          FVQzB: $(478),
          XNoxg: $(479),
          QlVtE: function(rt, et) {
            return rt === et;
          }
        };
        this.stopBatching(), this[$(492)][$(548)](_)[$(438)]((rt) => {
          const et = $;
          if (j[et(493)](j[et(520)], j[et(496)])) {
            this[et(439)]();
            return;
          } else {
            if (j.rECRG(j[et(442)](String, rt[et(514)]), j[et(505)])) if (j[et(500)](j.CNKIw, et(471))) {
              this[et(439)]();
              return;
            } else {
              this.startBatching(), _0x5cd5bd(_0x29b214);
              return;
            }
            if (j[et(441)](j[et(455)](String, rt[et(514)])[0], "4")) return j[et(441)](j.ECNMS, j[et(482)]), void 0;
            if (j[et(441)](j[et(455)](String, rt[et(514)])[0], "5")) {
              j[et(489)](this.backoff, 5) && (j[et(461)] === j[et(555)] ? this.startBatchingWithInterval() : (this[et(453)]++, this[et(499)] = j[et(541)](this[et(499)], 2.71), this[et(439)]()));
              return;
            }
            if (this[et(453)] = 1, this.batchInterval = 2e3, j[et(563)](j[et(464)](String, rt[et(514)]), et(498))) if (this[et(494)]++, this[et(492)][et(477)] = void 0, this[et(494)] > 3) if (j.HIfte === et(447)) this[et(515)](_0x34eb59[et(558)](0, 20));
            else {
              this.startBatching();
              return;
            }
            else if (j[et(500)](j[et(483)], j[et(528)])) {
              this[et(492)].solveTask(), this[et(439)]();
              return;
            } else this[et(492)].solveTask(), j.ZZCkz(this[et(448)], null) && (this[et(448)] = _0x4ef44e.setInterval(() => this[et(457)](), this.batchInterval));
            this[et(494)] = 0, this[et(506)][et(467)](this.storage[et(549)]().filter((st) => !_[et(554)]((pt) => JSON[et(444)](st) === JSON[et(444)](pt)))), this.startBatching();
          }
        }, (rt) => {
          const et = $;
          j.QlVtE(et(473), et(523)) ? this[et(448)] = _0x5a8f9f[et(458)](() => this.processQueue(), this[et(499)]) : (console[et(450)](rt), this.startBatching());
        });
      }
    }
    var _0x59702c = _0x2d9a;
    (function(d, _) {
      for (var $ = _0x2d9a, j = d(); ; ) try {
        var rt = -parseInt($(481)) / 1 * (parseInt($(489)) / 2) + parseInt($(490)) / 3 + parseInt($(494)) / 4 * (-parseInt($(493)) / 5) + parseInt($(482)) / 6 * (-parseInt($(496)) / 7) + -parseInt($(469)) / 8 + -parseInt($(498)) / 9 + parseInt($(477)) / 10 * (parseInt($(480)) / 11);
        if (rt === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x1993, 429392);
    class HumanProofService {
      constructor(_) {
        this.appModule = _;
      }
      async init() {
        var _ = _0x2d9a, $ = {
          HZJRh: _(485),
          KYsVy: function(j, rt) {
            return j === rt;
          },
          fvTHr: _(479),
          yayxW: function(j, rt) {
            return j(rt);
          },
          fCltq: function(j, rt) {
            return j === rt;
          },
          FInFg: "QoCNW"
        };
        return new Promise(async (j, rt) => {
          var et = _, st = {
            SHHQF: function(pt, Et) {
              return pt(Et);
            }
          };
          if ($[et(500)]($[et(472)], et(479))) try {
            await $[et(502)](fetch, BACKEND_URL + et(501))[et(492)](async (pt) => {
              var Et = et;
              this.worker = new Worker(URL[Et(497)](await pt[Et(505)]())), await fetch(BACKEND_URL + $[Et(484)])[Et(492)](async (Bt) => {
                var St = Et;
                this[St(483)][St(491)] = st[St(478)](String, await Bt[St(503)]()), this.worker.onmessage = ($t) => {
                  var kt = St;
                  this[kt(483)][kt(471)] = $t[kt(486)];
                }, j();
              });
            });
          } catch (pt) {
            $[et(475)]($[et(470)], et(487)) ? this[et(483)] = _0x3fe7f1 : rt(pt);
          }
          else this[et(483)][et(471)] = _0x3c6304[et(486)];
        });
      }
      [_0x59702c(473)](_) {
        var $ = _0x59702c;
        this[$(483)][$(491)] = _, this[$(476)]();
      }
      [_0x59702c(476)]() {
        var _ = _0x59702c, $ = {
          KtFBS: function(j, rt) {
            return j !== rt;
          },
          XLxQm: function(j, rt) {
            return j === rt;
          },
          Aenzt: _(488)
        };
        this[_(504)] !== void 0 && ($[_(495)]($.Aenzt, "VyaEE") ? $[_(499)](this[_(504)], void 0) && this.worker[_(474)](this.appModule[_(491)]) : this[_(504)][_(474)](this[_(483)][_(491)]));
      }
    }
    function _0x2d9a(d, _) {
      var $ = _0x1993();
      return _0x2d9a = function(j, rt) {
        j = j - 469;
        var et = $[j];
        return et;
      }, _0x2d9a(d, _);
    }
    function _0x1993() {
      var d = [
        "createObjectURL",
        "2468511iJwvsZ",
        "KtFBS",
        "KYsVy",
        "c3e068ebf11840ed3fc311a6f2df80b20fa05d25",
        "yayxW",
        "text",
        "worker",
        "blob",
        "6768360DKrqvD",
        "FInFg",
        "taskSolution",
        "fvTHr",
        "setNewArgs",
        "postMessage",
        "fCltq",
        "solveTask",
        "90xbVSng",
        "SHHQF",
        "zOyFO",
        "3142029vuamjm",
        "154933aRAgIC",
        "31746qzBtic",
        "appModule",
        "HZJRh",
        "aee7c93a9ae7930fb19732325d2c560c53849aa7",
        "data",
        "efFrt",
        "OKzPI",
        "6kaorGI",
        "760437XHOXSq",
        "taskParams",
        "then",
        "5pemoJo",
        "2244152JussJf",
        "XLxQm",
        "329avmmLy"
      ];
      return _0x1993 = function() {
        return d;
      }, _0x1993();
    }
    var _0x1af637 = _0x5c3b;
    (function(d, _) {
      for (var $ = _0x5c3b, j = d(); ; ) try {
        var rt = parseInt($(156)) / 1 * (parseInt($(160)) / 2) + -parseInt($(168)) / 3 + -parseInt($(180)) / 4 + parseInt($(163)) / 5 + parseInt($(177)) / 6 * (-parseInt($(184)) / 7) + parseInt($(182)) / 8 * (-parseInt($(179)) / 9) + parseInt($(154)) / 10 * (parseInt($(176)) / 11);
        if (rt === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x1e74, 612843);
    function _0x5c3b(d, _) {
      var $ = _0x1e74();
      return _0x5c3b = function(j, rt) {
        j = j - 154;
        var et = $[j];
        return et;
      }, _0x5c3b(d, _);
    }
    function _0x1e74() {
      var d = [
        "humanProofService",
        "assembleEventSession",
        "wHVQv",
        "1760112KAfOok",
        "appName",
        "setNewArgs",
        "catch",
        "then",
        "apiToken",
        "collectEvent",
        "env",
        "13303444KliNWT",
        "229446KrQbjz",
        "batchService",
        "9YHAHLd",
        "3214016mWNJrV",
        "recordEvent",
        "6802504zDZJLm",
        "networkController",
        "35yUOmiZ",
        "error",
        "analyticsController",
        "init",
        "10aUWyNX",
        "solveTask",
        "2vTEkqH",
        "recordEvents",
        "collect",
        "QvuNF",
        "893762DZRsla",
        "sessionController",
        "split",
        "4707015enyfrq",
        "collectTappsEvent"
      ];
      return _0x1e74 = function() {
        return d;
      }, _0x1e74();
    }
    class App {
      constructor(_, $, j) {
        for (var rt = _0x5c3b, et = "5|2|3|7|4|0|1|6"[rt(162)]("|"), st = 0; ; ) {
          switch (et[st++]) {
            case "0":
              this.networkController = new NetworkController(this);
              continue;
            case "1":
              this[rt(186)] = new AnalyticsController(this);
              continue;
            case "2":
              this[rt(173)] = _;
              continue;
            case "3":
              this.appName = $;
              continue;
            case "4":
              this[rt(161)] = new SessionController(this);
              continue;
            case "5":
              this[rt(175)] = j;
              continue;
            case "6":
              this[rt(178)] = new BatchService(this);
              continue;
            case "7":
              this[rt(165)] = new HumanProofService(this);
              continue;
          }
          break;
        }
      }
      async [_0x1af637(187)]() {
        var _ = _0x1af637, $ = {
          QvuNF: function(j, rt) {
            return j !== rt;
          },
          dccGR: _(167)
        };
        this.sessionController[_(187)](), this[_(186)][_(187)](), await this[_(165)][_(187)]()[_(172)](() => {
          var j = _;
          $[j(159)]($.dccGR, j(167)) ? this[j(155)]() : this.solveTask();
        })[_(171)]((j) => console[_(185)](j)), this[_(183)][_(187)](), this[_(178)][_(187)]();
      }
      [_0x1af637(166)]() {
        var _ = _0x1af637;
        return this[_(161)][_(166)]();
      }
      recordEvent(_, $, j) {
        var rt = _0x1af637;
        return this[rt(183)][rt(181)](_, $, j);
      }
      [_0x1af637(157)](_) {
        var $ = _0x1af637;
        return this[$(183)][$(157)](_);
      }
      [_0x1af637(174)](_, $) {
        var j = _0x1af637;
        this.batchService[j(158)](_, {
          ...$,
          ...this[j(166)]()
        });
      }
      [_0x1af637(164)](_, $) {
        var j = _0x1af637;
        this.batchService[j(158)](_, {
          ...this[j(161)][j(166)](),
          custom_data: {
            userData: {
              ...this[j(161)].getUserData()
            },
            ...$
          }
        });
      }
      getApiToken() {
        return this.apiToken;
      }
      getAppName() {
        var _ = _0x1af637;
        return this[_(169)];
      }
      [_0x1af637(155)]() {
        var _ = _0x1af637;
        this[_(165)][_(155)]();
      }
      [_0x1af637(170)](_) {
        var $ = _0x1af637;
        this[$(165)][$(170)](_);
      }
    }
    const _0x1343d1 = _0x4d71;
    (function(d, _) {
      const $ = _0x4d71, j = d();
      for (; ; ) try {
        if (parseInt($(200)) / 1 + parseInt($(203)) / 2 + -parseInt($(196)) / 3 * (parseInt($(201)) / 4) + -parseInt($(202)) / 5 + parseInt($(205)) / 6 * (-parseInt($(197)) / 7) + -parseInt($(198)) / 8 + parseInt($(199)) / 9 === _) break;
        j.push(j.shift());
      } catch {
        j.push(j.shift());
      }
    })(_0x2ad0, 564637);
    function _0x4d71(d, _) {
      const $ = _0x2ad0();
      return _0x4d71 = function(j, rt) {
        return j = j - 195, $[j];
      }, _0x4d71(d, _);
    }
    async function init({ token: d, appName: _, env: $ = _0x1343d1(204) }) {
      const j = _0x1343d1;
      new App(d, _, $)[j(195)]();
    }
    function _0x2ad0() {
      const d = [
        "2255718eRttfE",
        "PROD",
        "12WGTAKf",
        "init",
        "1083207qQGVmG",
        "3222597qEQLUB",
        "843232jdEYqR",
        "2972448jihvCp",
        "1071764CNGKiI",
        "4DrObrV",
        "2890215MrEOsk"
      ];
      return _0x2ad0 = function() {
        return d;
      }, _0x2ad0();
    }
    const index = {
      init
    };
    index.init({
      token: "eyJhcHBfbmFtZSI6InBva28iLCJhcHBfdXJsIjoiaHR0cHM6Ly90Lm1lL1RoZVBva29Cb3QiLCJhcHBfZG9tYWluIjoiaHR0cHM6Ly9wb2tvYXBwLnNwYWNlIn0=!O1k7a6VLUKzuVUKxgP1xdIMj7lDetWeJ0bwvJnoB1g0=",
      appName: "poko"
    });
    client.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(React.StrictMode, {
      children: jsxRuntimeExports.jsx(App$1, {})
    }));
  });
  var_67921b35_566e_50d6_9a86_f8efcf415447 = lo();
})();
export {
  __tla,
  var_67921b35_566e_50d6_9a86_f8efcf415447 as default
};
